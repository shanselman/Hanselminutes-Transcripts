WEBVTT FILE

1
00:00:00.360 --> 00:00:03.510
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.510 --> 00:00:06.480
they make the show possible.
Today's show is sponsored by

3
00:00:06.480 --> 00:00:10.650
developer express, become a UI
superhero with dev express controls

4
00:00:10.650 --> 00:00:15.180
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.570 --> 00:00:19.650
by leveraging your existing knowledge,
you can build next generation

6
00:00:19.680 --> 00:00:23.760
touch enabled solutions for tomorrow,
you can download your free

7
00:00:23.850 --> 00:00:48.030
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com
Hansel minutes.golf. It's Hansel minutes.

8
00:00:48.480 --> 00:00:52.050
Oh, weekly discussion with web
developer and technologist Scott Hanselman.

9
00:00:52.590 --> 00:00:56.400
This is Lawrence Ryan announcer show
number four 18. In this

10
00:00:56.400 --> 00:01:04.470
episode, Scott talks with Lisa Larson
Kelly about web RTC. Hi,

11
00:01:04.470 --> 00:01:06.510
this is Scott Hanselman. This
is another episode of Hansel

12
00:01:06.510 --> 00:01:09.300
minutes, and I'm talking with
Lisa Larson Kelly from learn from

13
00:01:09.300 --> 00:01:14.010
lisa.com. She's gonna teach me
about web RTC. So that's

14
00:01:14.010 --> 00:01:17.330
real time communications that's as
much as I know. Yes,

15
00:01:17.330 --> 00:01:20.120
it is real time communication
on the web. I know

16
00:01:20.120 --> 00:01:22.640
that there's web sockets though.
Well, how is this different

17
00:01:22.640 --> 00:01:26.420
from web sockets? The big
difference is that it's peer

18
00:01:26.420 --> 00:01:29.870
to peer for one thing.
And it's just, it's also

19
00:01:29.870 --> 00:01:33.170
native in the browser, the
peer peer to peer connections.

20
00:01:33.920 --> 00:01:35.420
Which one are you saying?
Even the browser. That means

21
00:01:35.420 --> 00:01:38.810
I don't have to think
about a plugins, right? Right.

22
00:01:38.840 --> 00:01:44.390
No plugins. That's the ideal
and yeah, no plugins at

23
00:01:44.390 --> 00:01:46.760
all. It's native right now
though. I have to say

24
00:01:46.760 --> 00:01:50.960
it's only in Chrome Firefox
and a little bit in

25
00:01:50.960 --> 00:01:54.080
opera. And, and how did
this start? And what is

26
00:01:54.080 --> 00:01:58.400
the, what is the ultimate
goal? Ah, well, it started

27
00:01:58.400 --> 00:02:01.580
out with a few of
the bigger players, you know,

28
00:02:02.060 --> 00:02:05.780
Erickson, Google, and a bunch
of other people got together

29
00:02:05.780 --> 00:02:08.570
over an informal lunch actually
and said, Hey, we should

30
00:02:08.570 --> 00:02:11.660
be able to do real
time communication natively, shouldn't we?

31
00:02:12.170 --> 00:02:14.810
And they said, yes, we
can. And so they formed

32
00:02:14.810 --> 00:02:18.380
a couple of working groups
and it got worked on

33
00:02:18.380 --> 00:02:23.090
underway. So when we say
real time communications, this is

34
00:02:23.090 --> 00:02:26.750
real time communications from one
browser to another browser, right?

35
00:02:26.780 --> 00:02:30.170
Not from the browser to
the server. Well, funny, you

36
00:02:30.170 --> 00:02:33.440
should say that it's actually,
a lot of times people

37
00:02:33.440 --> 00:02:35.060
will think of this and
think, Oh, I can build

38
00:02:35.060 --> 00:02:37.190
an, I can build my
Skype killer. You know, you

39
00:02:37.190 --> 00:02:39.290
can do a right in
the browser. I can do

40
00:02:39.800 --> 00:02:43.310
a webcam to webcam. It's
more than that though, because

41
00:02:43.340 --> 00:02:47.060
you can also have a
machine to machine. So for

42
00:02:47.060 --> 00:02:52.520
example, Chrome cast is using
this right now and, you

43
00:02:52.520 --> 00:02:54.140
know, so you can really
start to use it in

44
00:02:54.140 --> 00:02:57.860
the whole internet of things
world. Oh, okay. So we

45
00:02:57.860 --> 00:03:00.790
had someone on from a
Plex recently on the show

46
00:03:00.790 --> 00:03:02.860
talking about Chromecast. And one
of the things that was

47
00:03:02.860 --> 00:03:07.360
interesting about it was that
there's a handoff where I

48
00:03:07.630 --> 00:03:10.480
take my iPhone and I
say, go play YouTube here.

49
00:03:10.480 --> 00:03:13.240
And everyone thought that, you
know, the kind of traditional

50
00:03:13.240 --> 00:03:16.990
way that people who understand
internet architecture like myself assume

51
00:03:16.990 --> 00:03:21.400
is that the iPhone would
then be coordinating with the

52
00:03:21.460 --> 00:03:24.790
Chrome cast. But in fact
it talks, you're saying peer-to-peer

53
00:03:24.790 --> 00:03:27.250
with the Chromecast hands-off and
then the iPhone is no

54
00:03:27.250 --> 00:03:31.500
longer involved Right now. It's,
you know, Google of course

55
00:03:31.920 --> 00:03:35.160
has their own special sauce
that, you know, the reserve,

56
00:03:35.220 --> 00:03:36.570
you know, they've got a
bunch of stuff that they're

57
00:03:36.570 --> 00:03:39.450
doing under the hood there,
but the main structure of

58
00:03:39.450 --> 00:03:41.910
it is, is yes, as
web RTC based in, in,

59
00:03:42.390 --> 00:03:46.320
in that technology. And there's
a, there's a really interesting

60
00:03:47.160 --> 00:03:53.760
demo. It's a video chat
demo@apprtc.app spot.com. And there's this

61
00:03:53.760 --> 00:03:57.720
notion of user media. What
is this about? Get user

62
00:03:57.720 --> 00:04:01.050
media is one of the
web RTC API APIs. And

63
00:04:01.050 --> 00:04:04.230
it lets you grab the
webcam and microphone from the

64
00:04:04.230 --> 00:04:07.380
browser, and then you can
take that stream and share

65
00:04:07.380 --> 00:04:11.160
it among peers. So yeah,
well an app RTC is

66
00:04:11.160 --> 00:04:13.770
a great kind of way
to get started with that.

67
00:04:13.770 --> 00:04:16.650
It's an open source example
and it lets you create

68
00:04:16.650 --> 00:04:22.740
this two way, video conversation,
Fullscreen without any extra servers

69
00:04:22.740 --> 00:04:25.410
or plugins or anything in
the way. So you're saying

70
00:04:25.410 --> 00:04:27.000
that I could write some
Java script, put it in

71
00:04:27.000 --> 00:04:29.850
a local HTML file and
you know, with some number

72
00:04:29.850 --> 00:04:32.250
of lines of code, not
a huge amount and the

73
00:04:32.250 --> 00:04:34.770
right browser, you and I
could have a video chat,

74
00:04:35.100 --> 00:04:36.900
not a Skype killer, but
a basic peer to peer

75
00:04:36.900 --> 00:04:40.320
video chat. Yes. Yes. That
is true. What about things

76
00:04:40.320 --> 00:04:44.490
like Nat traversal and firewalls?
Yeah, I know that's where

77
00:04:44.490 --> 00:04:48.720
things can fit crazy peer
to peer, ideally. Right. We

78
00:04:48.720 --> 00:04:50.490
can just connect right to
each other and nothing in

79
00:04:50.490 --> 00:04:56.280
the way. But unfortunately we
run into NATS and firewalls,

80
00:04:56.580 --> 00:04:59.880
so we can't actually get
that connection. We have to,

81
00:05:00.450 --> 00:05:03.300
you know, bust that net
basically to do this. We

82
00:05:03.300 --> 00:05:07.170
need some servers. So there
are a couple of levels

83
00:05:07.200 --> 00:05:10.140
that you would go through
first, you would try a

84
00:05:10.140 --> 00:05:14.070
stunned server. And the sun
server is basically like, what's

85
00:05:14.070 --> 00:05:17.550
my IP, you know, that
service. So it'll go out

86
00:05:17.550 --> 00:05:21.210
and say, okay, you know,
I'm, I'm on this internal

87
00:05:21.210 --> 00:05:22.860
network. You go out to
the stun server and say,

88
00:05:22.860 --> 00:05:26.070
tell me what my external
IP is. It'll pass that

89
00:05:26.070 --> 00:05:28.080
information back to you. Then
you can send it out

90
00:05:28.080 --> 00:05:29.940
to the peer that you
want to connect to. They

91
00:05:29.940 --> 00:05:32.820
can do the same. And
then you're connected. If that

92
00:05:32.820 --> 00:05:36.150
doesn't work, if you're, you
are behind a restrictive firewall,

93
00:05:36.900 --> 00:05:40.680
then you'll have to start
using a turn server. So

94
00:05:40.680 --> 00:05:44.640
you'll have to specify that
as the app creator, you'll

95
00:05:44.640 --> 00:05:46.350
have to either use a
service or set it up

96
00:05:46.350 --> 00:05:51.690
yourself and what the turn
server does is it, it

97
00:05:51.690 --> 00:05:54.150
sets up a relay. So
you're not actually peer to

98
00:05:54.150 --> 00:05:56.130
peer at that point and
still feels that way. And

99
00:05:56.460 --> 00:05:59.780
the user wouldn't really know
the difference, but, but you're

100
00:05:59.780 --> 00:06:01.610
actually, you know, that information
is being relayed through them.

101
00:06:02.200 --> 00:06:04.390
Okay. So let's, let's bring
that down a little bit

102
00:06:04.390 --> 00:06:08.410
to the, the average person
who is listening to this

103
00:06:08.410 --> 00:06:12.040
shows a perspective, cause you
said first, we said Nat.

104
00:06:12.460 --> 00:06:17.800
Yeah. Right. So, you know,
Nat network address translation as

105
00:06:17.800 --> 00:06:22.030
a way for letting folks
behind firewalls pretend that they're

106
00:06:22.030 --> 00:06:25.690
really not behind firewalls. Right?
Right. Exactly. So that you

107
00:06:25.690 --> 00:06:29.710
can, you know, know what
their full addresses externally outside

108
00:06:29.710 --> 00:06:33.400
of their local network. And
it's funny that we have

109
00:06:33.430 --> 00:06:35.620
we've, we've built so much
technology that layers on so

110
00:06:35.620 --> 00:06:39.130
many other technologies that we're
starting to get these multiple

111
00:06:39.130 --> 00:06:44.860
nested acronyms. So you said,
you said a stun server,

112
00:06:45.200 --> 00:06:48.760
that's usually called session traversal
utilities for Nat, which is

113
00:06:48.760 --> 00:06:52.480
itself its own thing. It's
a, it's an acronym of

114
00:06:52.480 --> 00:06:55.450
an acronym. Yeah. I've also
heard people call stunned simple

115
00:06:55.450 --> 00:06:59.870
traversal of UDP through NATS.
So there's multiple, multiple acronyms,

116
00:07:00.880 --> 00:07:03.790
You know, it all does
the same thing. Right? Fancy,

117
00:07:04.910 --> 00:07:07.990
fancy way to explain it
as a stunned server. But

118
00:07:08.350 --> 00:07:11.290
this is just a way
to discover an IP address.

119
00:07:11.800 --> 00:07:14.500
It is. It's just a
way to discover, you know,

120
00:07:14.980 --> 00:07:17.890
a direct connection to another
peer Are these servers that

121
00:07:17.890 --> 00:07:19.450
I need to make. If
I go and write my

122
00:07:19.450 --> 00:07:21.370
video, chat, Skype killer, am
I going to have to

123
00:07:21.370 --> 00:07:24.640
go and write stun and
turn servers? It depends if

124
00:07:24.640 --> 00:07:26.920
you want to, if you're
into that kind of thing,

125
00:07:26.920 --> 00:07:29.890
you know, you want to,
you have a lot of

126
00:07:29.890 --> 00:07:32.920
options out there as far
as open source versions of

127
00:07:32.920 --> 00:07:35.320
those servers that you can
go and do that set

128
00:07:35.320 --> 00:07:40.060
up your own or there's
services as well. There's a

129
00:07:40.060 --> 00:07:43.150
few, you know, few commercial
ones out there that are

130
00:07:43.150 --> 00:07:47.620
already setting up shop for
these kinds of applications. And

131
00:07:47.620 --> 00:07:49.660
Google has just for developers
who want to play around

132
00:07:49.660 --> 00:07:51.820
with it. Google has a
couple that you can just

133
00:07:52.090 --> 00:07:54.910
plug into. You can just
Google that, you know, you

134
00:07:54.910 --> 00:07:58.870
can get those addresses, but
you can't, they're not so

135
00:07:58.870 --> 00:08:01.000
reliable. So you don't want
to yeah, of course go

136
00:08:01.000 --> 00:08:05.020
into development. Okay. So it
sounds like Wellston and turn

137
00:08:05.050 --> 00:08:07.150
is, is something I need
to think about, know about,

138
00:08:07.180 --> 00:08:08.680
I don't need to go
and sit down and start

139
00:08:08.680 --> 00:08:12.610
opening sockets and writing this
stuff myself. I can find

140
00:08:12.610 --> 00:08:15.160
the apps or find the
servers to do that. Yup,

141
00:08:15.670 --> 00:08:19.600
exactly. You know, with the,
with the advent of HTML

142
00:08:19.600 --> 00:08:23.650
five and before web RTC,
we started to see kind

143
00:08:23.650 --> 00:08:27.790
of this, this increase in
access to device hardware. So

144
00:08:27.790 --> 00:08:31.180
it seems like this really
wouldn't Nick web RTC wouldn't

145
00:08:31.180 --> 00:08:34.300
have been as interesting, had
the work to do get

146
00:08:34.300 --> 00:08:39.580
user media happened first. Okay,
Exactly. Yeah, for sure. It

147
00:08:39.580 --> 00:08:41.770
got people excited. Like, wow,
I can't, you know, I

148
00:08:41.770 --> 00:08:44.140
don't have to use a
plugin to grab the microphone

149
00:08:44.140 --> 00:08:47.670
and, and grab the webcam
and then, okay, now we

150
00:08:47.710 --> 00:08:49.240
have that access now what
do we do with it?

151
00:08:49.870 --> 00:08:52.720
Exactly like, okay, I can,
you know, I can put

152
00:08:52.720 --> 00:08:54.880
a hat on you and
you can dance around or

153
00:08:54.910 --> 00:08:57.690
we actually go out and
create a pure connection. Wow.

154
00:08:57.720 --> 00:09:01.820
That's better. Well, that's actually
very interesting that the hat

155
00:09:01.820 --> 00:09:04.340
example, while it kind of
a trivial does give you

156
00:09:04.340 --> 00:09:06.740
the sense of you have
raw access to that image

157
00:09:06.770 --> 00:09:09.350
that's coming back or that
audio stream that's coming in.

158
00:09:10.940 --> 00:09:14.540
Yes you do. And you
can even access the bitmap

159
00:09:14.540 --> 00:09:17.540
of that as well and
grab screenshots or, you know,

160
00:09:17.540 --> 00:09:20.690
take pictures, photo booth kind
of thing, whatever you want

161
00:09:20.690 --> 00:09:23.950
to do. I've found that
as someone who knows how

162
00:09:23.990 --> 00:09:26.210
like the most advanced kind
of thing that I've done

163
00:09:26.210 --> 00:09:30.770
is just dealing with file
upload. You say input type

164
00:09:30.800 --> 00:09:33.920
equals file. And I think
most everyone who's listening has

165
00:09:33.920 --> 00:09:37.130
done that. You know, we've
accepted a file upload. And

166
00:09:37.130 --> 00:09:39.710
then when you hear about
things like cameras and microphones

167
00:09:39.710 --> 00:09:42.050
and camcorders, it's just like,
Whoa, that's that's way too

168
00:09:42.050 --> 00:09:44.870
complicated, but you can just
start by saying input type

169
00:09:44.870 --> 00:09:49.160
equals file. Right. Well, it's
funny, you should talk about

170
00:09:49.160 --> 00:09:51.740
the about data because I've
been telling you, we've been

171
00:09:51.740 --> 00:09:54.470
talking about getting user media
and all that, and it's,

172
00:09:55.250 --> 00:09:59.210
it is also sharing of,
of raw data. So, so

173
00:09:59.210 --> 00:10:03.300
you could theoretically set up
a file sharing, you know,

174
00:10:03.300 --> 00:10:06.290
whole file sharing for sharing
service using this and people

175
00:10:06.290 --> 00:10:10.880
have done. So there's one
site that escapes me at

176
00:10:10.880 --> 00:10:13.400
the moment, the name of
it, but you can go

177
00:10:13.400 --> 00:10:17.030
there and on their homepage
is a box. You drag

178
00:10:17.030 --> 00:10:19.160
the file, drop it on
the box. It pops up

179
00:10:19.160 --> 00:10:21.350
with a link. You share
that with a friend and

180
00:10:21.350 --> 00:10:24.890
they're getting that file from
your hard drive instantly, instantly

181
00:10:24.890 --> 00:10:29.210
in anonymously. RTC. Doesn't think
about anything other than the,

182
00:10:29.270 --> 00:10:33.170
the underlying protocol. It's not
set up for chat or

183
00:10:33.170 --> 00:10:36.680
set up for video. No,
it's just, it's sharing data

184
00:10:36.710 --> 00:10:38.330
and you do, you know,
what you do with that

185
00:10:38.360 --> 00:10:40.550
is up to you. That's
very useful to know. So

186
00:10:40.550 --> 00:10:42.380
it's more than just a
Skype killer. If there's some

187
00:10:42.380 --> 00:10:44.510
way need for me to
peer, to peer something in

188
00:10:44.510 --> 00:10:48.830
a secure way. And it
is also, you know, it's

189
00:10:48.850 --> 00:10:51.560
all encrypted in the spec,
you know, that's specified that

190
00:10:51.620 --> 00:10:55.100
everything is encrypted. Ah, okay.
So it's a little harder

191
00:10:55.100 --> 00:10:58.490
to shoot myself in the
foot with this, A little

192
00:10:58.490 --> 00:11:01.040
harder, a little harder for
the NSA, but you know,

193
00:11:01.520 --> 00:11:03.830
I'm sure there's the little
list they're listening right now.

194
00:11:03.830 --> 00:11:07.440
So yeah. Subscribe to the
show, so sure, sure. Yeah.

195
00:11:07.440 --> 00:11:09.260
So, so I I've learned
that I can go and

196
00:11:09.260 --> 00:11:12.830
say input type equals file
in HTML and then say,

197
00:11:12.830 --> 00:11:17.930
except image capture equal camera
or capture equal microphone. You

198
00:11:17.930 --> 00:11:19.490
can get that live data.
You can apply it to

199
00:11:19.490 --> 00:11:22.310
a canvas. You can put
web GL filters on it.

200
00:11:23.030 --> 00:11:25.070
At that point, it's just
data in memory. And then

201
00:11:25.070 --> 00:11:28.160
I can call upon web
RTC and then just push

202
00:11:28.160 --> 00:11:35.210
it across from there. Yeah.
That sounds simple. Yes, no

203
00:11:35.210 --> 00:11:38.810
problem. Yeah. I mean, it's
really possible to do, to

204
00:11:38.810 --> 00:11:42.650
do all of this, but
it isn't trivial unfortunately. About

205
00:11:42.710 --> 00:11:45.650
what about things like peer
JS and different things that

206
00:11:45.650 --> 00:11:48.200
can allow me to like
raise the water level a

207
00:11:48.200 --> 00:11:50.900
little That's yeah, that that's,
that would be my next

208
00:11:51.620 --> 00:11:55.900
thing to introduce is the
of frameworks that have already

209
00:11:55.900 --> 00:11:58.330
figured out a lot of
this hard stuff for us,

210
00:11:59.560 --> 00:12:01.480
there are more and more
of them pure JS has

211
00:12:01.480 --> 00:12:05.650
one. And I actually use
that one as an example,

212
00:12:05.650 --> 00:12:10.090
a lot just for one-to-one
one to one video chats

213
00:12:10.090 --> 00:12:12.580
and things like that. It's
very easy to set up

214
00:12:12.580 --> 00:12:16.360
with pure JS. If you
want to go beyond the,

215
00:12:16.570 --> 00:12:19.780
the two people though, you'll
have to use something more

216
00:12:19.780 --> 00:12:23.320
like simple web RTC, where
it has a little bit

217
00:12:23.320 --> 00:12:29.710
more robust sort of modular
architecture, but there are definitely

218
00:12:29.710 --> 00:12:31.360
frameworks out there and make
all of this stuff a

219
00:12:31.360 --> 00:12:33.580
lot easier. You just have
to find one that already

220
00:12:33.580 --> 00:12:35.230
does what you want it
to do for the most

221
00:12:35.230 --> 00:12:38.340
part. And these are all
done in JavaScript. They don't

222
00:12:38.340 --> 00:12:41.100
care about a backend, a
dotnet person or a node

223
00:12:41.100 --> 00:12:44.160
person or PHP person can
use all of, Yeah. There's,

224
00:12:44.160 --> 00:12:47.400
you know, Java script is
the main, main API, but

225
00:12:47.400 --> 00:12:48.960
there are a lot of
ways to deal with it.

226
00:12:48.960 --> 00:12:52.950
Now, if you're I'm a
no JS person, definitely there's

227
00:12:54.270 --> 00:12:57.840
modules for that, you know,
support web RTC and help

228
00:12:57.840 --> 00:13:01.740
you with your development. There
you can. I, I think

229
00:13:01.740 --> 00:13:04.500
there's also frameworks and other
languages too, because web RTC

230
00:13:04.500 --> 00:13:10.620
really is very open. So
you're not only communicating over

231
00:13:10.620 --> 00:13:13.560
the web and web technologies,
but you can also communicate

232
00:13:13.560 --> 00:13:16.950
with sip with plain telephone
networks. So you can send

233
00:13:16.950 --> 00:13:21.540
text messages, there's interfaces for
all of these different interoperabilities

234
00:13:22.440 --> 00:13:29.640
available And sip again, parsing
out. Yes, yes, yes. Sip

235
00:13:29.640 --> 00:13:33.180
is used, it's mostly telecommunications
type thing, but it's for,

236
00:13:33.540 --> 00:13:37.290
you know, low-latency data, text
messages, things like that you

237
00:13:37.290 --> 00:13:40.010
would use for a USIP.
Does that mean that not

238
00:13:40.010 --> 00:13:42.060
that know, we thought about
our, our Skype killer, but

239
00:13:42.060 --> 00:13:45.120
I also use for example,
link, which is a Microsoft

240
00:13:45.120 --> 00:13:48.600
product. There's also things like
asterix there's these different VoIP,

241
00:13:48.630 --> 00:13:52.800
voiceover IP things like Vonage.
Could I potentially build my

242
00:13:52.800 --> 00:13:55.680
own phone and plug it
into a backend system in

243
00:13:55.680 --> 00:13:59.910
my browser? Absolutely. Absolutely. You
could. Sure. No. Do we

244
00:13:59.910 --> 00:14:02.310
know if Google uses things
like this? If they, if

245
00:14:02.310 --> 00:14:05.490
you're using like a Google
hangout or Google Hangouts yeah.

246
00:14:05.520 --> 00:14:09.210
Get Google Hangouts uses web
RTC for sure. The voice.

247
00:14:09.690 --> 00:14:12.450
I'm not sure I, that
came a little bit earlier.

248
00:14:12.450 --> 00:14:15.000
I'm not sure what they're,
I'm sure that there's some

249
00:14:15.000 --> 00:14:17.730
web RTC components there, but
now that they're, I just

250
00:14:17.730 --> 00:14:20.340
heard they're phasing it out.
I'm kind of sad about

251
00:14:20.340 --> 00:14:24.180
that, but that's another thing
altogether, but yeah, Google Hangouts

252
00:14:24.180 --> 00:14:28.320
definitely uses us and there
are ways, you know, you

253
00:14:28.320 --> 00:14:32.160
can, you can plug into
all sorts of other tools

254
00:14:32.160 --> 00:14:36.360
and frameworks to, to add
functionality, like who will Hangouts

255
00:14:36.360 --> 00:14:39.870
has that nice feature where
whoever's talking takes up the

256
00:14:39.870 --> 00:14:44.550
screen, right? So you could
listen on the audio API

257
00:14:44.550 --> 00:14:46.920
and, and find out who's
speaking and you could do

258
00:14:46.920 --> 00:14:49.890
the same thing. So, you
know, there are a lot

259
00:14:49.890 --> 00:14:53.660
of different ways to do
some creative things with us

260
00:14:53.690 --> 00:14:56.600
that either mimic what's already
been done or, you know,

261
00:14:56.600 --> 00:15:00.280
invent your own. Now when,
when researching web RTC and

262
00:15:00.280 --> 00:15:03.130
trying to understand what's involved
and how I would write

263
00:15:03.130 --> 00:15:05.140
to it, I see lots
and lots of blog posts

264
00:15:05.140 --> 00:15:08.260
and people talking about something
called signaling and they keep

265
00:15:08.260 --> 00:15:10.870
saying web RTC and signaling.
And it seems like web

266
00:15:10.870 --> 00:15:13.600
RTC is working along nicely,
but no one can agree

267
00:15:13.600 --> 00:15:15.790
on signaling. What is signaling
and why do I care

268
00:15:17.110 --> 00:15:21.970
Signaling? Yeah. You know, signaling
comes in, cause you, you,

269
00:15:21.970 --> 00:15:23.620
you're thinking you can have
these, these peers that are

270
00:15:23.620 --> 00:15:26.500
talking to each other, right.
Well, how did they get

271
00:15:26.500 --> 00:15:30.010
that connection? How did they
get there? They didn't make,

272
00:15:30.070 --> 00:15:33.880
you know, how do you
make that initial handshake that's

273
00:15:33.880 --> 00:15:37.330
signaling? So you'll need some
sort of low latency data

274
00:15:37.630 --> 00:15:41.440
channel to send that handshake
information, say, Oh, this is

275
00:15:41.440 --> 00:15:43.900
my external IP. Or, you
know, this is the relay

276
00:15:43.900 --> 00:15:48.730
server that I'm using. And
to do that with RTC

277
00:15:48.730 --> 00:15:50.980
does not help us. There's
nothing in the spec that

278
00:15:50.980 --> 00:15:53.920
specifies what you need to
use for signaling. It's totally

279
00:15:53.920 --> 00:15:57.100
up to you. So, you
know, well, it would be

280
00:15:57.100 --> 00:16:00.340
nice if there was something
that was built in, it's

281
00:16:00.340 --> 00:16:03.520
also very freeing because you
can use whatever technology is

282
00:16:03.520 --> 00:16:06.030
a good fit for you.
So, you know, if you're

283
00:16:06.040 --> 00:16:09.820
telecommunications person, you could use
sip. If you're a web

284
00:16:09.820 --> 00:16:14.790
person, use web sockets, for
example, or actually try polling

285
00:16:14.790 --> 00:16:17.470
or, you know, whatever, you
know, it's totally up to

286
00:16:17.470 --> 00:16:21.460
you, whatever your strength is,
whatever your infrastructure already would

287
00:16:21.460 --> 00:16:25.420
support. I see. So where
do you see answers? The

288
00:16:25.420 --> 00:16:27.670
question of we're on the
phone? How are we talking

289
00:16:27.670 --> 00:16:30.640
to each other? But as
far as how we dialed

290
00:16:30.640 --> 00:16:33.640
and all of that handshake,
some people seem to think

291
00:16:33.640 --> 00:16:35.200
that this is a huge
problem and we need to

292
00:16:35.200 --> 00:16:37.300
solve this and standardize it.
And everyone else is like,

293
00:16:37.330 --> 00:16:40.060
Oh, we've got rest. We
can just make our own

294
00:16:40.060 --> 00:16:44.230
webs web services to handle
that. Exactly. No problem. I

295
00:16:44.230 --> 00:16:46.420
saw a blog post that
said that there's a new,

296
00:16:46.420 --> 00:16:49.570
a digital version of an
old joke that says two

297
00:16:49.570 --> 00:16:52.870
web RTC engineers walk into
a bar to talk about

298
00:16:52.870 --> 00:16:57.760
signaling, except that they never
get to leave. It seems

299
00:16:57.760 --> 00:16:59.800
like this is a problem
that is not going to

300
00:16:59.800 --> 00:17:01.840
be solved anytime soon. So
we should think about how

301
00:17:01.840 --> 00:17:05.170
to do this. Yes. Yeah.
For sure. Find out the

302
00:17:05.170 --> 00:17:07.390
solution that, that works best
for you and the way

303
00:17:07.390 --> 00:17:09.340
you work, then, you know,
language, youth that you know,

304
00:17:09.340 --> 00:17:11.530
and or what systems do
you have to work within.

305
00:17:12.820 --> 00:17:15.400
I see lots of getting
started examples and lots of

306
00:17:15.400 --> 00:17:18.190
little chat servers and things
like that, but would someone

307
00:17:18.190 --> 00:17:21.280
really want to go, you
know, live today with a

308
00:17:21.280 --> 00:17:24.190
web RCT, a web RTC
based product. I mean, other

309
00:17:24.190 --> 00:17:26.680
than Google Hangouts who certainly
control the browser and the

310
00:17:26.680 --> 00:17:29.020
server. Sure. And somehow, or
they're able to make it

311
00:17:29.020 --> 00:17:34.180
work in all browsers. I
assume there's a fallback. Right.

312
00:17:34.180 --> 00:17:36.040
I mean, it works, it
works in other things, they

313
00:17:36.040 --> 00:17:39.280
use a plugin, They use
a plugin. Yeah, exactly. So

314
00:17:39.280 --> 00:17:42.190
they'll prompt you. Oh, you
know, just click here to

315
00:17:42.190 --> 00:17:44.410
install our little tiny thing
that you need to use

316
00:17:44.410 --> 00:17:47.260
this, you know, and then
everybody just moves on and

317
00:17:47.260 --> 00:17:50.790
because it's Google, nobody complains,
but if it were you

318
00:17:50.790 --> 00:17:53.100
or I saying, Oh, I'm
all my plugin. Well, maybe

319
00:17:53.100 --> 00:17:55.460
not. Yeah. Well, I mean,
if, if it is a

320
00:17:55.460 --> 00:17:57.830
small, if it is perceived
that it's a small plugin

321
00:17:57.830 --> 00:18:00.320
that sits between me and
an awesome experience, presumably I

322
00:18:00.320 --> 00:18:03.050
will just suck it up.
But I think I, I

323
00:18:03.050 --> 00:18:06.110
will admit though, I did
not realize how many hidden

324
00:18:06.110 --> 00:18:10.160
plugins and hidden extensions were
around just to support Hangouts

325
00:18:10.160 --> 00:18:12.230
and voice on Google. I
think we just assumed it

326
00:18:12.230 --> 00:18:14.630
was built into Chrome. Yeah.
Cause they make it feel

327
00:18:14.630 --> 00:18:18.380
that way. For sure. But
yeah. As far as getting

328
00:18:18.380 --> 00:18:21.740
started and building something to
take to market, I think

329
00:18:21.740 --> 00:18:24.890
now's a perfect time to
do that because nobody else

330
00:18:24.890 --> 00:18:27.530
has done it yet. Like
why do you want to

331
00:18:27.530 --> 00:18:30.560
wait until somebody else has
already had your big idea?

332
00:18:30.590 --> 00:18:33.140
Or do you want to
actually go out and learn

333
00:18:33.140 --> 00:18:36.650
this and do it now
because it's coming. I really

334
00:18:36.980 --> 00:18:39.740
have no doubt that they're
going to get all this,

335
00:18:39.800 --> 00:18:41.000
those guys are going to
get out of that bar.

336
00:18:41.000 --> 00:18:45.530
Eventually this is going to
happen. It's just a matter

337
00:18:45.530 --> 00:18:49.130
of, you know, everybody working
things out. And if, if

338
00:18:49.670 --> 00:18:52.370
it is, you know, a
small plugin or if there's

339
00:18:52.730 --> 00:18:56.060
something, you know, if we
get critical mass, then having

340
00:18:56.060 --> 00:18:58.610
a plugin to make a
web RTC work in, I

341
00:18:58.610 --> 00:19:01.460
E it won't be that
big of a deal. You

342
00:19:01.460 --> 00:19:04.550
know, I wonder if I
should just use something like

343
00:19:04.580 --> 00:19:08.520
open talk or talk box
T O K box instead,

344
00:19:10.910 --> 00:19:13.580
You know, it's certainly is
an option. If what you're

345
00:19:13.580 --> 00:19:15.740
building, if you don't, first
of all, if you don't

346
00:19:15.740 --> 00:19:21.620
mind using third party and
if, if what you're building

347
00:19:21.620 --> 00:19:23.330
is a good fit for
it, you know, if you

348
00:19:23.330 --> 00:19:26.990
have to, if there's a
feature that it's not supported,

349
00:19:28.910 --> 00:19:30.620
they do have open. So,
you know, it is open

350
00:19:30.620 --> 00:19:34.070
source. So you could theoretically
build on, but you're building

351
00:19:34.070 --> 00:19:37.580
onto their framework. Cause they've
built an API kind of

352
00:19:37.670 --> 00:19:39.890
on top of it in
their, in their docs. They

353
00:19:39.890 --> 00:19:42.350
actually say, and I think
this is a funny phrasing,

354
00:19:42.590 --> 00:19:46.370
go beyond vanilla web RTC.
And by putting the word

355
00:19:46.370 --> 00:19:48.440
vanilla in front of it,
that implies that somehow web

356
00:19:48.440 --> 00:19:53.930
RTC isn't sufficient go beyond
vanilla with our API. So

357
00:19:53.930 --> 00:19:56.690
it's, it's interesting. People are
building on top of this

358
00:19:56.690 --> 00:19:59.030
and they're doing it in
a way that is extending

359
00:19:59.030 --> 00:20:02.360
it, presumably with things like
that. Yeah, Yeah. Extending it

360
00:20:02.360 --> 00:20:06.380
was signaling or with their
own, you know, features or

361
00:20:06.590 --> 00:20:11.450
tapping into other voice over
IP networks, you know, bringing

362
00:20:11.480 --> 00:20:15.150
you could, you know, build
something on top of, of

363
00:20:15.200 --> 00:20:18.760
that, that just does something
new, you know, does something

364
00:20:19.070 --> 00:20:21.080
connects to something that it
didn't connect to before, like

365
00:20:21.080 --> 00:20:25.280
your refrigerator or your microwave
or something, What are some

366
00:20:25.280 --> 00:20:27.080
of the demos that you've
seen or the uses of

367
00:20:27.080 --> 00:20:29.720
web RTC that would surprise
you, that aren't just chat

368
00:20:29.720 --> 00:20:35.960
and Skype killers? Hmm. There's
a way to distribute your

369
00:20:35.960 --> 00:20:38.240
hosting using web RTC. I
don't know if you've seen

370
00:20:38.240 --> 00:20:43.850
this yet, but you can
share the load of all

371
00:20:43.850 --> 00:20:46.070
of your assets on your
site or specific, you know,

372
00:20:46.070 --> 00:20:50.110
specific downloads videos or even
just the images and you,

373
00:20:50.500 --> 00:20:53.200
you know, you go to
the site and everybody else

374
00:20:53.200 --> 00:20:57.460
who goes, is sharing their
cash basically with you. So,

375
00:20:59.080 --> 00:21:00.400
you know, you can take
a big load off of

376
00:21:00.400 --> 00:21:04.450
your server that way. So
I thought that was really

377
00:21:04.450 --> 00:21:07.290
interesting. So it's kind of
like, like, like, like BitTorrent

378
00:21:07.290 --> 00:21:09.570
in the sense of, if
we're all here together, then

379
00:21:09.600 --> 00:21:11.580
let's just serve it from
that person over there instead

380
00:21:11.580 --> 00:21:15.690
of here. Exactly. Exactly. And
those are out in the

381
00:21:15.690 --> 00:21:19.920
wild today. Right now. There's
one that was just bought

382
00:21:19.980 --> 00:21:23.340
by Yahoo actually. So Yahoo
is interested in this kind

383
00:21:23.340 --> 00:21:26.640
of technology. Yeah. Interesting. What
do you think some of

384
00:21:26.640 --> 00:21:29.190
the threats are? The things
that could stop web RTC.

385
00:21:29.190 --> 00:21:31.410
It seems like Apple and
Microsoft really haven't come out

386
00:21:31.410 --> 00:21:34.080
and said anything about it
yet. And they just bought

387
00:21:34.080 --> 00:21:40.890
Skype. Right? There's that? But
yeah, Apple actually joined the

388
00:21:40.890 --> 00:21:43.800
working group quietly about a
month ago. Didn't really say

389
00:21:43.800 --> 00:21:47.520
anything. There's no big fanfare
about it, but they are,

390
00:21:47.550 --> 00:21:52.410
they have done that. So
that is quite possible. There's

391
00:21:52.410 --> 00:21:58.140
movement there as far as
Microsoft goes, you know, I

392
00:21:58.140 --> 00:22:00.180
don't know about that. I
think that, that, that is

393
00:22:00.180 --> 00:22:03.180
the, the gray area right
now. People aren't sure what

394
00:22:03.180 --> 00:22:06.870
Microsoft's going to do because
they have their own version

395
00:22:06.870 --> 00:22:11.340
of the spec called CU
web RTC. And I think,

396
00:22:11.370 --> 00:22:13.680
you know, until they get,
at least they've got other

397
00:22:13.680 --> 00:22:17.010
ideas about how things should
be structured and until they

398
00:22:17.010 --> 00:22:20.400
get at least some of
those ideas in there, I

399
00:22:20.400 --> 00:22:24.900
think there's going to be,
you know, a little hiccup

400
00:22:24.900 --> 00:22:27.930
with I E Well, I'm
sure they'll figure that out

401
00:22:27.930 --> 00:22:30.360
at some point. And they
will. Exactly. I mean, especially

402
00:22:30.360 --> 00:22:32.730
when we start getting more
and more developers building cool

403
00:22:32.730 --> 00:22:37.440
stuff with us, there's no
stopping, no stopping progress. You

404
00:22:37.440 --> 00:22:39.780
said about the, the, the,
the point that I will

405
00:22:39.780 --> 00:22:42.420
install a plugin if necessary.
Certainly if my browser is

406
00:22:42.420 --> 00:22:46.080
auto updating and it just
starts becoming ubiquitous when every

407
00:22:46.080 --> 00:22:49.110
browser, but I E support
something, then eventually I, it

408
00:22:49.110 --> 00:22:52.620
comes around like with web
GL. Right, exactly. But what

409
00:22:52.620 --> 00:22:55.680
about, what about quality people
have said that web RTC

410
00:22:55.680 --> 00:22:59.280
is using a very narrow
audio standard. It's using a

411
00:22:59.310 --> 00:23:02.730
G seven 11, which is
really kind of less good

412
00:23:02.730 --> 00:23:05.610
quality as most VoIP solutions
that are already out there.

413
00:23:06.090 --> 00:23:07.680
Right. Is that going to
derail it? And we've got

414
00:23:07.680 --> 00:23:10.590
four K TVs coming out,
you know, is web RTC

415
00:23:10.590 --> 00:23:12.870
dead on arrival just because
the quality isn't high enough.

416
00:23:14.250 --> 00:23:18.630
Well, I mean, you can
always there also the opportunity

417
00:23:18.630 --> 00:23:21.300
to put in an additional
plugin for a different codex

418
00:23:23.070 --> 00:23:26.340
that's, that's being done. There's
one for H to support

419
00:23:26.340 --> 00:23:31.230
H two six for video
and Chrome. So, you know,

420
00:23:31.230 --> 00:23:34.110
if you're building something where
you're going device to device,

421
00:23:34.170 --> 00:23:37.620
you can kind of extend
things and, and go beyond

422
00:23:38.160 --> 00:23:40.650
the Opus or the, you
know, the, the audio coding

423
00:23:40.680 --> 00:23:43.350
that's being used right now.
But I think for just,

424
00:23:44.040 --> 00:23:47.480
you know, over the web
kind of audio, it's, you

425
00:23:47.480 --> 00:23:49.730
know, it's not bad, but
it's the, it's the video

426
00:23:49.730 --> 00:23:52.580
codecs that are going to
get us, I think, cause

427
00:23:52.580 --> 00:23:55.700
there's a fight right now
between Google and basically everyone

428
00:23:55.700 --> 00:23:58.100
else about what the standard
codec is going to be

429
00:23:58.260 --> 00:24:01.190
for, for a video. They
of course want VP eight

430
00:24:01.850 --> 00:24:04.880
and just about everybody else
wants each two six for

431
00:24:06.440 --> 00:24:09.620
just for backwards compatibility, but
in a way I think

432
00:24:09.620 --> 00:24:13.490
Google's right, you know, VPA
can be better quality at

433
00:24:13.550 --> 00:24:17.210
lower bit rates. So, you
know, I don't really have

434
00:24:17.210 --> 00:24:19.580
a dog in the fight,
but it's going to be

435
00:24:19.610 --> 00:24:22.370
interesting to see what they
decide to do if they

436
00:24:22.370 --> 00:24:25.840
want to keep it agnostic
and let you choose which,

437
00:24:25.840 --> 00:24:29.780
which one you want to,
you know, to use, or

438
00:24:29.780 --> 00:24:31.820
if they're going to dictate,
you know, in Chrome you

439
00:24:31.820 --> 00:24:35.110
can only use VPA in
the future. Yeah. I think

440
00:24:35.110 --> 00:24:38.020
that, I mean, H two,
six, four is certainly the

441
00:24:38.020 --> 00:24:39.820
one that everyone has it
top of mind and it

442
00:24:39.820 --> 00:24:43.510
seems silly to, you know,
it's like, it's, it's the

443
00:24:43.510 --> 00:24:47.920
whole beta max VHS situation.
Like yes, Betamax was better,

444
00:24:47.920 --> 00:24:50.500
but we still didn't win.
So just let it go.

445
00:24:51.400 --> 00:24:56.740
And please rewind. Now, you've,
you've talked about web RTC

446
00:24:56.740 --> 00:25:00.010
all over and up at
the Stanford innovation center and

447
00:25:00.010 --> 00:25:02.980
you've actually got a Pluralsight
course on this as well.

448
00:25:03.160 --> 00:25:06.160
I have, I do. I
have a, a course, just

449
00:25:06.160 --> 00:25:09.700
an, you know, an intro
intro course on Pluralsight, web

450
00:25:09.700 --> 00:25:13.810
RTC fundamentals. And it's just
sort of outlines what it

451
00:25:13.810 --> 00:25:16.570
is, how to get started,
you know, and I really

452
00:25:16.570 --> 00:25:20.050
wanted to make that because
I felt that, you know,

453
00:25:20.050 --> 00:25:23.590
when I was learning it,
it's, there wasn't anything very

454
00:25:23.860 --> 00:25:28.630
assessable for people who might
have other, you know, base

455
00:25:28.630 --> 00:25:34.690
of skills, but don't really
understand, you know, the intricacies

456
00:25:34.690 --> 00:25:38.650
of, of sip and, you
know, handshaking and all of

457
00:25:38.650 --> 00:25:43.180
that. There was really kind
of a, a really big

458
00:25:43.180 --> 00:25:47.770
chasm there between just this
is what it is and

459
00:25:47.830 --> 00:25:51.640
here's how to actually use
it now. So I felt

460
00:25:51.640 --> 00:25:53.440
like I needed to, to
fill that gap and give

461
00:25:53.440 --> 00:25:55.990
some, give some people things
to hold onto as they

462
00:25:55.990 --> 00:26:01.780
climb up this, this very
tall climbing wall of web

463
00:26:01.780 --> 00:26:04.510
RTC. Well, and I'm having
trouble climbing up the wall

464
00:26:04.510 --> 00:26:07.750
of just HTML five in
the sense of there's just

465
00:26:07.750 --> 00:26:10.870
so much now, you know,
like two years ago, the

466
00:26:10.870 --> 00:26:13.750
idea that I could have
a tiny SQL server in

467
00:26:13.750 --> 00:26:17.470
the browser and local storage.
And, and now there's new

468
00:26:17.470 --> 00:26:21.100
popups. When I visit these
demos, my browser says, we'd

469
00:26:21.100 --> 00:26:23.680
like to use your camera,
your location and your microphone.

470
00:26:23.680 --> 00:26:26.560
I'm like, this is a,
it's a whole operating system

471
00:26:26.560 --> 00:26:29.950
in Nebraska at this point.
Yeah. Yeah. It's, it can

472
00:26:29.950 --> 00:26:33.160
be very overwhelming for sure.
Well, and again, not sure

473
00:26:33.160 --> 00:26:35.110
whether I want to use
these things because they're not

474
00:26:35.110 --> 00:26:37.780
on every browser. Like if
I use holding us back

475
00:26:37.780 --> 00:26:43.030
or, or whatever. Right. You
know, I really think that

476
00:26:43.380 --> 00:26:45.480
that it's coming. I really
think that it is. And

477
00:26:45.480 --> 00:26:51.540
especially if you can have
machines talk to machines, there's

478
00:26:51.540 --> 00:26:54.870
a big opportunity there as
well. So it's, it's not

479
00:26:54.870 --> 00:26:57.450
all about just, you know,
sitting in the browser and,

480
00:26:57.540 --> 00:27:00.090
and if that's a big
part of it, but that's,

481
00:27:00.120 --> 00:27:02.160
you know, your client might
come to you or your

482
00:27:02.160 --> 00:27:05.130
boss or somebody and say,
Hey, look, you know, what's

483
00:27:05.130 --> 00:27:09.060
this thing that lets these
machines talk to each other,

484
00:27:09.060 --> 00:27:10.800
how do we do this?
And you'll know how to

485
00:27:10.800 --> 00:27:12.770
do Right. And we're certainly,
we can point out that

486
00:27:12.770 --> 00:27:14.930
while it might feel like
web RTC is brand new.

487
00:27:15.410 --> 00:27:17.690
People have been talking about
this since at least 2010,

488
00:27:17.690 --> 00:27:21.950
2011. Yeah. Yeah. Yeah. That's
true. And it's, you know,

489
00:27:21.950 --> 00:27:23.690
it's getting a lot of,
a lot of hype right

490
00:27:23.690 --> 00:27:26.570
now, but I think it
is well deserved. Yeah. Yeah.

491
00:27:26.840 --> 00:27:28.550
Well, and it's in more
places than I would think.

492
00:27:28.580 --> 00:27:30.830
Ah, I'm not sure what
version of Chrome I'm on

493
00:27:30.830 --> 00:27:34.820
30 something, but it's been
around since Chrome, 20, 23

494
00:27:34.820 --> 00:27:38.360
and Firefox 22. So yeah,
it's, it's been on, it's

495
00:27:38.360 --> 00:27:40.070
actually on your computer right
now and you may not

496
00:27:40.070 --> 00:27:43.940
even know it Exactly. You
don't know it. Very cool.

497
00:27:43.940 --> 00:27:46.730
Well, I'm going to put
in the show notes links

498
00:27:46.730 --> 00:27:48.770
to kind of all the
details you gave a talk

499
00:27:48.800 --> 00:27:52.880
at fluent JS, the O'Reilly
fluent conference, and you had

500
00:27:52.880 --> 00:27:55.610
all sorts of great examples
where you've got signaling with

501
00:27:55.610 --> 00:28:00.980
socket IO, your Pluralsight fundamentals
course, and also web RTC

502
00:28:00.980 --> 00:28:06.800
book by Alan Johnson and Daniel Burnett.
Yeah. That was, I think

503
00:28:06.800 --> 00:28:12.200
they're coming out with a
third edition next week. So

504
00:28:12.770 --> 00:28:14.390
Do I need to know
this much though? Can I,

505
00:28:14.420 --> 00:28:16.910
can I, can I, can
I just know the basics,

506
00:28:16.940 --> 00:28:18.350
like how far, how deep
do I have to go?

507
00:28:18.350 --> 00:28:21.080
I think maybe if I
may, if I may, people

508
00:28:21.080 --> 00:28:23.030
like you who've been doing
this for 10 years, I

509
00:28:23.030 --> 00:28:25.820
mean, you've been involved in,
in large system, large scale

510
00:28:25.820 --> 00:28:29.330
video for at least a
decade. Yeah, of course. You

511
00:28:29.330 --> 00:28:31.580
know, it was the F
word, you know, the flash

512
00:28:31.580 --> 00:28:35.390
days, but people are still
using that. I mean, and

513
00:28:35.390 --> 00:28:37.280
that's the thing right now,
people are still using flash

514
00:28:37.280 --> 00:28:40.070
media server or wows a
media server, which is uses

515
00:28:40.070 --> 00:28:43.340
the same technology to do
this kind of thing because

516
00:28:43.340 --> 00:28:46.010
it does work everywhere, but
it's a, there's a big

517
00:28:46.040 --> 00:28:48.950
transition is going to happen
away from that as soon

518
00:28:48.950 --> 00:28:53.000
as you know, it's ubiquitous.
So yes, I've been doing

519
00:28:53.000 --> 00:28:55.490
it. I've been doing this
real time communication thing for,

520
00:28:55.590 --> 00:28:57.920
for quite some time. And
I'm just, I'm really excited

521
00:28:57.920 --> 00:29:00.620
about it because, you know,
the, the whole flash thing

522
00:29:00.620 --> 00:29:04.220
is it was bogged down
by licensing. You know, it

523
00:29:04.220 --> 00:29:06.920
was 4,500 bucks for a
server just to even play

524
00:29:06.920 --> 00:29:11.600
with this stuff. And so,
you know, this being open

525
00:29:11.600 --> 00:29:14.090
source and available to everybody,
I think that's really, really

526
00:29:14.090 --> 00:29:17.090
exciting. Yeah. I think that
the way I phrase it,

527
00:29:17.090 --> 00:29:18.050
cause I, you know, I,
you know, I work for

528
00:29:18.050 --> 00:29:19.880
Microsoft and people are always
saying, Hey, why did you

529
00:29:19.880 --> 00:29:22.280
kill? Why did you kill
silver light? And I said,

530
00:29:22.280 --> 00:29:24.910
we didn't kill silver light.
The internet itself killed Silverlight

531
00:29:24.910 --> 00:29:28.520
light. And you can cry
about that, but it's still

532
00:29:28.520 --> 00:29:31.130
happening. So like flash people
and action script people have,

533
00:29:31.160 --> 00:29:34.160
are crying, but at the
same time, you know, plugins

534
00:29:34.160 --> 00:29:37.790
exists. Yeah. Plugins exist to
do what the browser can't

535
00:29:37.790 --> 00:29:39.710
do. And then the browser
can do that. Plug in

536
00:29:39.710 --> 00:29:43.120
no longer has a reason
to exist. And the new

537
00:29:43.120 --> 00:29:46.810
plugins will come out to
do something more amazing. Exactly.

538
00:29:47.380 --> 00:29:49.180
So even though you have
10 years of experience in

539
00:29:49.180 --> 00:29:52.050
flash, you don't mourn, you
don't mourn flash. You know,

540
00:29:52.050 --> 00:29:56.850
I had, I had a
moment. I did, you know,

541
00:29:56.850 --> 00:30:00.780
I did, but no, I'm,
you know, it's really opened

542
00:30:00.780 --> 00:30:04.560
up a lot of, of
other, other technologies, other ways

543
00:30:04.560 --> 00:30:08.220
of looking at things and
I'm pretty excited about the

544
00:30:08.220 --> 00:30:10.560
future. Very cool. Well, thanks
so much for chatting with

545
00:30:10.560 --> 00:30:12.870
me today. Thank you for
having me. It was really

546
00:30:12.870 --> 00:30:16.350
good to, to have this
talk. You can learn more

547
00:30:16.350 --> 00:30:21.750
from lisa@learnfromlisa.com. This has been
another episode of Hanselminutes and

548
00:30:21.750 --> 00:30:22.980
we'll see you again next
week.

