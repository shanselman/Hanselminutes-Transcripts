WEBVTT FILE

1
00:00:12.240 --> 00:00:18.090
Fromm Hansel minutes.com it's Hansel
minutes or weekly discussion with

2
00:00:18.090 --> 00:00:23.100
web developer and technologists. Scott
Hanselman hosted by Carl Franklin. This

3
00:00:23.100 --> 00:00:30.600
is Lawrence Ryan announcing show number
53 recorded Wednesday, February 28th, 2007. Support

4
00:00:30.600 --> 00:00:34.950
for Hanselman it's is provided
by Tellerik rad controls. The

5
00:00:34.950 --> 00:00:38.760
most comprehensive suite of components
for windows forms and asp.net

6
00:00:38.760 --> 00:00:49.320
web applications. online@wwwdottelerik.com. Support is
also provided by.net developers journal

7
00:00:49.350 --> 00:00:55.530
the world's leading.net developer magazine
online at www dot <inaudible>

8
00:00:55.800 --> 00:00:59.580
dot com. In this episode,
Scott and Carl discuss techniques

9
00:00:59.580 --> 00:01:06.570
for hiring engineers. Hi, this
is Carl Franklin. You're listening to

10
00:01:06.570 --> 00:01:09.540
Hansel minutes from Hanselman it's
dot com. Scott and I

11
00:01:09.540 --> 00:01:12.660
are here this week to
talk about hiring and interviewing

12
00:01:12.660 --> 00:01:16.590
engineers. Yeah, this week there
was kind of this crazy

13
00:01:16.590 --> 00:01:18.780
meme that was running around
the web. I don't know

14
00:01:18.780 --> 00:01:21.390
if you heard about this,
the, the fizz buzz problem.

15
00:01:21.900 --> 00:01:24.030
No, I didn't hear about
this. Hey, you're too busy.

16
00:01:24.030 --> 00:01:29.730
We're making podcasts basically a
fizzbuzz question is a question

17
00:01:29.730 --> 00:01:32.190
that you would ask a
programmer you're about to interview.

18
00:01:32.460 --> 00:01:35.550
And the question is this
here's an example. Write a

19
00:01:35.550 --> 00:01:38.580
program that prints the numbers
from one to 100, but

20
00:01:38.580 --> 00:01:42.540
for multiples of three print
fizz, and for multiples of

21
00:01:42.540 --> 00:01:45.960
five print buzz for multiple
for numbers that are multiples

22
00:01:45.960 --> 00:01:50.700
of both three and five
print fizzbuzz. Okay. Sounds pretty

23
00:01:50.700 --> 00:01:55.620
straightforward. Sure. Apparently there's a
great, great number of people

24
00:01:55.620 --> 00:01:59.490
when asked this question cannot
do it really. They get

25
00:01:59.490 --> 00:02:02.490
lost, they get stuck and
there were a number of

26
00:02:02.490 --> 00:02:05.880
folks talking about this. You
can take a look up

27
00:02:05.910 --> 00:02:12.090
at shrinks, your.com/m G Y
a and Jeff Atwood of

28
00:02:12.090 --> 00:02:15.960
coding, horror blogged about this
and really kind of it's

29
00:02:15.960 --> 00:02:19.740
an older article programmers program.
Yeah, he kind of, well

30
00:02:19.740 --> 00:02:23.340
he's now he's calling it
fizz buzz, the programmers stairway

31
00:02:23.340 --> 00:02:27.000
to heaven. Wow. Right? Because
it's like walking into guitar

32
00:02:27.000 --> 00:02:29.850
center and it in my
head. Exactly. I don't, you

33
00:02:29.850 --> 00:02:32.790
know, here's the equal here.
So here's the issue when

34
00:02:32.790 --> 00:02:34.290
he put this up there,
if you take a look

35
00:02:34.290 --> 00:02:36.390
at his site right now,
as of this recording, he's

36
00:02:36.390 --> 00:02:42.150
got 350 comments. Here's the
really sad part. The vast

37
00:02:42.150 --> 00:02:45.750
majority of those are people
solving the problem. Wow. You

38
00:02:45.750 --> 00:02:48.750
couldn't come up with a
much simpler problem than that

39
00:02:49.800 --> 00:02:53.430
point is not the problem,
right? The point is, if

40
00:02:53.430 --> 00:02:56.460
you can't do it, right.
So it's weird that people

41
00:02:56.460 --> 00:02:59.920
felt the need to spit
that out, but whatever we're

42
00:02:59.920 --> 00:03:02.290
programmers, you tell them that
they can't do something. Like

43
00:03:02.290 --> 00:03:04.270
he says in his post
about it being the programmers

44
00:03:04.270 --> 00:03:06.070
stairway to heaven, you walk
into a guitar center and

45
00:03:06.070 --> 00:03:08.710
you say, I don't think
most guitarists can play stairway.

46
00:03:09.070 --> 00:03:11.830
Suddenly everyone's gonna start, start
playing it. Right. Which is

47
00:03:11.830 --> 00:03:15.620
not the point of the
discussion. Right? So this is

48
00:03:15.620 --> 00:03:18.280
kind of turn into a
larger question about, you know,

49
00:03:18.280 --> 00:03:23.530
how do you interview folks?
There's the famous Microsoft interview

50
00:03:23.530 --> 00:03:28.390
question about why are manhole
covers round, which you know,

51
00:03:28.690 --> 00:03:31.090
could mean it could be
a question as an example

52
00:03:31.090 --> 00:03:33.990
of critical thinking and could
just be really obscure. Cause

53
00:03:33.990 --> 00:03:35.650
with a lot of these
questions, once you learn it,

54
00:03:36.790 --> 00:03:39.160
you learn it right now.
Now you're are you clever?

55
00:03:39.160 --> 00:03:42.250
Because you remember it, right?
How do you interview people

56
00:03:42.370 --> 00:03:46.480
without it becoming an issue
of trivia? Well, there was

57
00:03:46.480 --> 00:03:50.530
an article at, at Altima
developer by a guy named

58
00:03:50.530 --> 00:03:54.400
bill vendors who says that
here are some ideas about

59
00:03:55.120 --> 00:03:57.880
how to interview people. First,
you want to explore an

60
00:03:57.880 --> 00:04:03.160
ex an area of their
expertise, right? You want to

61
00:04:04.030 --> 00:04:06.610
find out what is it
that this person is doing?

62
00:04:06.990 --> 00:04:08.910
I mean, this is before
the interview, do a little

63
00:04:08.910 --> 00:04:11.700
research into what they claim
to know. No, well, it

64
00:04:11.700 --> 00:04:13.860
could be, it could, this
could be a phone interview.

65
00:04:13.860 --> 00:04:15.930
This could be the in
person interview. It could be

66
00:04:15.930 --> 00:04:18.330
any of those things Say,
learn a little bit about

67
00:04:18.330 --> 00:04:20.810
their area of expertise. Do
you mean before the interview?

68
00:04:21.720 --> 00:04:23.580
Well, it's certainly, I assume
you've looked at their resume

69
00:04:23.580 --> 00:04:25.710
and you know, that they're
good at something. Yeah. My

70
00:04:25.710 --> 00:04:28.590
point is, is that rather
than having a list of

71
00:04:28.590 --> 00:04:31.650
stuff you want them to
do, like, you know, here's

72
00:04:31.650 --> 00:04:35.100
the 50 acronyms that I
need you to have. Radio

73
00:04:35.100 --> 00:04:38.910
are WCF that what is
it that they're really awesome

74
00:04:38.910 --> 00:04:42.130
at? W when you talk
to someone and they're, they,

75
00:04:42.130 --> 00:04:44.130
they think that they are
good at something. They feel

76
00:04:44.130 --> 00:04:46.830
they have an area of
expertise. You may not necessarily

77
00:04:46.830 --> 00:04:50.430
be into them for that
area, but they're stoked about

78
00:04:50.430 --> 00:04:53.850
it. They're good at it.
What is it like talking

79
00:04:53.850 --> 00:04:56.190
to this person as they
explain something that they're really

80
00:04:56.190 --> 00:04:59.550
good at? Right. Right. I
don't know much about audio.

81
00:04:59.700 --> 00:05:03.180
You are an expert in
audio though. So I could

82
00:05:03.180 --> 00:05:06.210
find out about your personality
by exploring this aspect of

83
00:05:06.270 --> 00:05:08.730
your personality. Sure. Tell me
all about this area of

84
00:05:08.730 --> 00:05:12.180
your expertise. Oh, by the
way, as a small aside,

85
00:05:12.180 --> 00:05:14.730
there's a really funny book
and a really great audio

86
00:05:14.730 --> 00:05:17.340
book by a guy named
John Hodgman. He's the PC

87
00:05:17.340 --> 00:05:21.030
and the Mac PC commercials.
Also a comedian. He's got

88
00:05:21.030 --> 00:05:24.120
a book called the areas
of my expertise. It's a

89
00:05:24.120 --> 00:05:26.550
great book. Oh, that's who
that guy is. I heard

90
00:05:26.550 --> 00:05:28.410
an interview with him on
a, what do you know

91
00:05:28.410 --> 00:05:31.500
with Michael Feldman's piece? Brilliant.
Yeah. That's and, and of

92
00:05:31.500 --> 00:05:34.350
course he claims to have
expertise in everything. Exactly. That's

93
00:05:34.350 --> 00:05:35.790
why the book is so
funny. That's why it's funny.

94
00:05:35.910 --> 00:05:38.580
Yeah. So another idea is
to, and this is all

95
00:05:38.580 --> 00:05:43.320
from that article article, have
them critique something, right? Say,

96
00:05:43.470 --> 00:05:45.000
you know, what is it
that you don't like about

97
00:05:45.000 --> 00:05:47.610
C-sharp or tell me why
you think garbage collection is

98
00:05:47.610 --> 00:05:50.280
just a fad. Yeah. So
then you can find out,

99
00:05:50.340 --> 00:05:52.980
are, are they the kind
of developer who's overly critical,

100
00:05:53.190 --> 00:05:56.160
right? Are they gonna immediately
start dog piling and kind

101
00:05:56.160 --> 00:05:59.270
of crapping on a particular
technology, then you can find

102
00:05:59.270 --> 00:06:01.250
out, are they a, a,
you know, kind of a

103
00:06:01.250 --> 00:06:04.910
fair-weather programmer then of course,
there's the standard, let them

104
00:06:04.910 --> 00:06:06.980
solve a problem type stuff,
and we can give them

105
00:06:06.980 --> 00:06:08.960
all sorts of problems. And
I'll talk to you about

106
00:06:08.960 --> 00:06:10.880
a problem that I recently
gave a guy that I

107
00:06:10.880 --> 00:06:13.870
interviewed. And the problem with
giving problems is you sort

108
00:06:13.870 --> 00:06:17.530
of have to give unique
problems every time. Right? Exactly.

109
00:06:17.530 --> 00:06:19.510
I mean, you can't just
open up a book and

110
00:06:19.570 --> 00:06:22.570
have, you know, 50 great
problems to ask us because

111
00:06:22.570 --> 00:06:24.460
they can just study the
book. Right. Well, and the

112
00:06:24.460 --> 00:06:26.620
issue with asking someone to
solve a problem also is,

113
00:06:26.950 --> 00:06:30.190
is this someone who doesn't
work well under pressure? Now,

114
00:06:30.250 --> 00:06:33.100
some people argue, some people
argue that, well, we are

115
00:06:33.100 --> 00:06:36.400
under pressure in our jobs.
So you should be asked

116
00:06:36.400 --> 00:06:39.520
to do something under pressure.
Well, other people feel that

117
00:06:40.180 --> 00:06:42.250
an interview is a lot
like a test and a

118
00:06:42.250 --> 00:06:45.010
test is kind of an
artificial thing. Like it wasn't

119
00:06:45.010 --> 00:06:49.450
school quick perform tell a
joke, right? So asking someone

120
00:06:49.450 --> 00:06:52.180
to design or write code
on the spot, there are

121
00:06:52.180 --> 00:06:55.210
many people whose personality types
simply will not allow them

122
00:06:55.210 --> 00:07:01.440
to, to do that one
interesting guy in Bruce Eckel

123
00:07:01.440 --> 00:07:04.120
on the Altima article said
he likes to ask candidates

124
00:07:04.120 --> 00:07:08.020
to create an object model
of a chicken. Cause everyone

125
00:07:08.020 --> 00:07:10.210
knows what interesting. Everyone knows
what a chicken is. And

126
00:07:10.210 --> 00:07:12.310
it kind of pushes people
away from the details of

127
00:07:12.310 --> 00:07:14.470
the computer and lets, you
know, if they can think

128
00:07:14.470 --> 00:07:16.840
about the big picture. Well
yeah. And if they can

129
00:07:16.840 --> 00:07:20.830
translate where real world things
into it. Right, exactly. Yeah.

130
00:07:21.400 --> 00:07:23.620
Dave Thomas on that same
article says he looks for

131
00:07:23.620 --> 00:07:27.970
people with curiosity and presents
problems, not puzzles, which I

132
00:07:27.970 --> 00:07:30.670
thought was pretty cool. Yeah.
I also, I ask people

133
00:07:30.670 --> 00:07:32.980
about what blogs they read,
what books they read, how

134
00:07:32.980 --> 00:07:37.210
do they, how do they
become lifelong learners? Yeah. Cause

135
00:07:37.390 --> 00:07:39.130
you, you, you, it's not
that you want them to

136
00:07:39.130 --> 00:07:42.340
be people who are necessarily
working on open source projects

137
00:07:42.670 --> 00:07:46.330
at night, but they should
be enthused. They should be

138
00:07:46.330 --> 00:07:48.250
the, you know, they should
be stoked about whatever they're

139
00:07:48.250 --> 00:07:50.230
working on. Say if they
say I get all my

140
00:07:50.230 --> 00:07:53.530
information from reading Scott Hanselman's
blog and listening to Hanselman

141
00:07:53.530 --> 00:07:56.440
it's the interview is over
in their assets immediately asked

142
00:07:56.440 --> 00:07:59.560
to leave. Sorry, but you
just lost dude due to

143
00:07:59.590 --> 00:08:03.010
excessive suck up point. Yeah.
We can't have that. No.

144
00:08:03.010 --> 00:08:04.810
I mean, I I'm just,
I'm just on the same

145
00:08:04.810 --> 00:08:10.450
journey anyway, right? Sure. Oh
actually here's a, a small

146
00:08:10.450 --> 00:08:13.300
tangent, but it kind of
a funny programmer thing. This

147
00:08:13.300 --> 00:08:18.640
is up at shrink stir
slash M H one programmer

148
00:08:18.640 --> 00:08:21.550
jokes. We're in the game.
We're in heaven. Saint Peter

149
00:08:21.550 --> 00:08:23.680
sitting at a desk, he's
checking people in Peter says

150
00:08:23.680 --> 00:08:26.560
welcome to heaven. What's your
programming language guide at the

151
00:08:26.560 --> 00:08:30.790
front says small talk. Peter
says, alright, small talk room

152
00:08:30.790 --> 00:08:34.060
33, please be very quiet.
As you pass room six

153
00:08:34.720 --> 00:08:38.890
processes can repeating itself. Welcome
to heaven. Programming language, VB.

154
00:08:39.370 --> 00:08:41.500
Oh room 17. But do
be very quiet as you

155
00:08:41.500 --> 00:08:45.250
pass room six. What's your
programming language. C-sharp room 54.

156
00:08:45.580 --> 00:08:48.010
Do be quiet as you
pass room six. Why do

157
00:08:48.010 --> 00:08:49.750
you keep telling us to
be quiet? As we pass

158
00:08:49.750 --> 00:08:52.270
room six? Ah, the Ruby
on rails. People are in

159
00:08:52.270 --> 00:08:54.190
room six and they think
they're the only ones here.

160
00:08:55.470 --> 00:08:59.340
Now that's an Adaption of
another, just regular old Baptist

161
00:08:59.340 --> 00:09:02.900
joke. Yeah. But you want
to find out when you're

162
00:09:02.900 --> 00:09:07.700
interviewing people, are they religious
zealots? Because not every company

163
00:09:07.700 --> 00:09:12.950
runs things the same. We
have chosen that C sharp

164
00:09:12.950 --> 00:09:16.280
is our language. But even
if someone doesn't know C-sharp,

165
00:09:16.610 --> 00:09:18.740
if they're a VB, not
net person, they come in,

166
00:09:19.190 --> 00:09:22.100
are they willing to learn
our way of thinking? Whether

167
00:09:22.100 --> 00:09:25.880
it be programming, language, religious
zealotry, or the way we

168
00:09:25.880 --> 00:09:28.970
do testing and the way
we do continuous integration, it's

169
00:09:28.970 --> 00:09:31.550
a real challenge to find
someone who will challenge the

170
00:09:31.550 --> 00:09:35.750
status quo without necessarily squashing
or stepping all over the

171
00:09:35.750 --> 00:09:39.380
status quo because you don't
want to incite controversy, but

172
00:09:39.380 --> 00:09:42.200
you do want to insight
kind of commentary and discussion.

173
00:09:42.740 --> 00:09:45.890
So is the person's personality
one that will integrate with

174
00:09:45.890 --> 00:09:47.900
your company? You don't want
them just to fall in

175
00:09:47.900 --> 00:09:52.250
line unless you're explicitly hiring
for, you know, wanted programmer

176
00:09:52.250 --> 00:09:53.360
who will just fall in
line and do what I

177
00:09:53.360 --> 00:09:57.090
say. Right? One of the
other things that we found

178
00:09:57.110 --> 00:10:00.860
in looking through the, my
comments here is that people

179
00:10:00.860 --> 00:10:03.590
don't like trivia tests, you
know, a while back I

180
00:10:03.590 --> 00:10:06.320
posted that list of what
I thought developers should be

181
00:10:06.320 --> 00:10:09.740
able to done it. Developers
could know, I think that's

182
00:10:09.740 --> 00:10:12.230
it shrinks there slash M
H too. It's just a

183
00:10:12.440 --> 00:10:14.870
brainstormed list of all the
different things. I thought the

184
00:10:14.870 --> 00:10:19.040
average.net dev should should know
some of them, like what's

185
00:10:19.040 --> 00:10:22.340
a difference between a thread
and the process. People felt,

186
00:10:22.730 --> 00:10:25.640
felt were very basic while
others felt that that wasn't

187
00:10:25.640 --> 00:10:28.280
necessary anymore because we were
working at a much higher

188
00:10:28.280 --> 00:10:33.950
level of abstraction. I'd beg
to differ. Really Sure. I

189
00:10:33.950 --> 00:10:36.560
mean, you have to know
what a threat is, especially

190
00:10:36.560 --> 00:10:37.760
in this day and age,
if you're going to write

191
00:10:37.760 --> 00:10:40.670
code because so much of
your code that you're going

192
00:10:40.670 --> 00:10:42.560
to be writing in the
next 20 years is going

193
00:10:42.560 --> 00:10:46.940
to be multithreaded. Well, one
guy said in one of

194
00:10:46.940 --> 00:10:50.000
my comments on my, when
I was weighing in about

195
00:10:50.000 --> 00:10:52.070
this Facebook thing is that,
you know, he knows what

196
00:10:52.070 --> 00:10:54.740
recursion is and he did
it in university, but in

197
00:10:54.740 --> 00:10:57.680
his experience working for, you
know, for 10 years or

198
00:10:57.680 --> 00:11:01.550
so, he just hasn't needed
to use recursion to solve

199
00:11:01.550 --> 00:11:05.300
a business problem. Well, that
In particular, that case is

200
00:11:05.300 --> 00:11:08.900
true. Really? Yeah. I think
Somebody will find that hard

201
00:11:08.900 --> 00:11:12.140
to believe Because yeah, you're
PR you're really not writing

202
00:11:12.140 --> 00:11:13.640
a lot of code at
that level. I mean, the

203
00:11:13.640 --> 00:11:16.370
things that recursion is good
at is iterating through lists

204
00:11:16.370 --> 00:11:20.720
like lists of directories and,
and putting in things like

205
00:11:21.050 --> 00:11:24.710
schedules into calendars and shirts
like that. And a lot

206
00:11:24.710 --> 00:11:27.290
of that stuff just, you
know, that's at the tool

207
00:11:27.290 --> 00:11:31.580
level Times iteration can cover
up recursion or do recursion

208
00:11:32.000 --> 00:11:35.210
just as well as you
need to. Yeah. Yeah. Franz

209
00:11:35.210 --> 00:11:37.730
BOMA made that comment on
the blog as well that

210
00:11:37.730 --> 00:11:40.670
you, you can solve virtually
any problem without recursion. So

211
00:11:40.670 --> 00:11:42.830
maybe that wasn't a good
example. I think that the

212
00:11:42.830 --> 00:11:45.110
real, The difference between a
process and a thread's a

213
00:11:45.110 --> 00:11:48.080
little different, I think though,
Certainly certainly. And when you're

214
00:11:48.080 --> 00:11:52.370
looking at patterns, types questions,
like if there's a known

215
00:11:52.370 --> 00:11:55.810
computer science thing, whether it
be recursion or lists or

216
00:11:55.810 --> 00:12:00.100
whatever, do you know when
to, when to recognize that

217
00:12:00.100 --> 00:12:03.070
you need it, whether you've
used it or not, or

218
00:12:03.070 --> 00:12:06.070
whether you have vast experience
in it is very different

219
00:12:06.070 --> 00:12:09.070
from, is it the time
is this the time to,

220
00:12:09.070 --> 00:12:12.550
to use that? Now there's
a lot of controversy about

221
00:12:12.550 --> 00:12:15.730
whether or not we should
actually have people code at

222
00:12:15.730 --> 00:12:18.640
the interview. Seems to me
that if you're hiring someone

223
00:12:18.640 --> 00:12:21.400
to sing, they should be
singing at the audition. I

224
00:12:21.400 --> 00:12:23.140
agree. I don't want to
find out that they can't

225
00:12:23.140 --> 00:12:26.410
sing on opening day, but
a lot of people, a

226
00:12:26.410 --> 00:12:28.870
lot of companies will hire
somebody, put them through training,

227
00:12:28.900 --> 00:12:30.940
teach them about their product.
They may be at the

228
00:12:30.940 --> 00:12:34.540
company two, three weeks before
they actually have learned, have

229
00:12:34.540 --> 00:12:37.780
actually written some code. Rather.
Do you think it's reasonable

230
00:12:37.780 --> 00:12:40.720
to pull a laptop out
and say, Hey, get this

231
00:12:40.720 --> 00:12:43.840
out of the database, select
star from authors, I'll be

232
00:12:43.840 --> 00:12:47.400
back in an hour. I
absolutely do. In fact, I

233
00:12:47.400 --> 00:12:49.440
would, I, you know, I
would try to make up

234
00:12:49.440 --> 00:12:52.320
some sort of fizz buzz
thing that is simple. You

235
00:12:52.320 --> 00:12:54.810
know, that, that obviously isn't
all over the internet like

236
00:12:54.810 --> 00:12:58.170
that is now. I would
certainly do that. I mean,

237
00:12:58.170 --> 00:13:03.030
especially given that the results
of that test, which I

238
00:13:03.030 --> 00:13:06.570
agree is, is pretty disturbing.
There was a guy named

239
00:13:06.570 --> 00:13:09.240
Mark Friedman on my blog
who said that they give

240
00:13:09.240 --> 00:13:11.850
the candidate 45 minutes. They
give them access to the

241
00:13:11.850 --> 00:13:14.670
internet and they really do
expect them to look stuff

242
00:13:14.670 --> 00:13:16.590
up and they stick them
in a room. They want

243
00:13:16.590 --> 00:13:19.440
to find out if they
work well under pressure, what

244
00:13:19.440 --> 00:13:21.510
do they do when they
get stuck? And then will

245
00:13:21.510 --> 00:13:24.180
they, how do they communicate
their issues? And if they

246
00:13:24.180 --> 00:13:26.910
even try to communicate issues,
right? Do they stay in

247
00:13:26.910 --> 00:13:28.260
the room or they come
out and say, I have

248
00:13:28.260 --> 00:13:31.200
a question, get some ideas.
Yeah. I think it is

249
00:13:31.200 --> 00:13:33.030
a good idea. I think
I want to implement more

250
00:13:33.030 --> 00:13:35.010
of that kind of thing.
We have people write some

251
00:13:35.010 --> 00:13:37.530
code on the board, but
bring it on a laptop,

252
00:13:37.560 --> 00:13:40.350
I think is a good
idea. Now, one, one point

253
00:13:40.350 --> 00:13:44.370
was that many developers will
never do new development. They'll

254
00:13:44.370 --> 00:13:49.320
just do maintenance development, true
Greenfield file, new type stuff

255
00:13:49.410 --> 00:13:52.740
they are saying is very
rare. So this particular gentleman,

256
00:13:52.740 --> 00:13:57.250
Mark Friedman also gives them
an existing asp.net application. And

257
00:13:57.250 --> 00:13:59.310
then in his case, they
have both VB and C

258
00:13:59.310 --> 00:14:02.790
sharp applications that they'll give
them. And they'll say, here's

259
00:14:02.790 --> 00:14:04.170
a, here's a bug or
two. I want you to

260
00:14:04.170 --> 00:14:06.690
go fix them. Wow. Let
them go through the code.

261
00:14:06.690 --> 00:14:09.780
So it teaches them how
to read code, right? Because

262
00:14:09.900 --> 00:14:11.760
you know, how do you
become a really great writer

263
00:14:12.060 --> 00:14:15.030
of literature? You read all
the time, read all you

264
00:14:15.030 --> 00:14:18.360
all you can. I've learned
a lot from reading open

265
00:14:18.360 --> 00:14:21.420
source that you know, where,
where else can you find

266
00:14:21.420 --> 00:14:24.540
it? Just a fantastic amount
of, of source code of

267
00:14:24.540 --> 00:14:28.770
questionable value and, and quality.
But you don't know until

268
00:14:28.770 --> 00:14:30.240
you read it. And until
you actually take a look

269
00:14:30.240 --> 00:14:33.150
and find out, is this
it is this the kind

270
00:14:33.150 --> 00:14:35.400
of programmer I want to
be? That's the kind of

271
00:14:35.400 --> 00:14:38.160
stuff that I think about
when I see a source

272
00:14:38.160 --> 00:14:41.520
out in the wild. The
other thing is to watch

273
00:14:41.520 --> 00:14:44.460
for the kinds of requirements,
questions that they ask. If

274
00:14:44.460 --> 00:14:50.130
you simply say right, fizzbuzz
do they say, well, is

275
00:14:50.130 --> 00:14:52.550
this a console app? Is
it on the web? Is

276
00:14:52.550 --> 00:14:55.310
there a performance requirement? Right?
Is this working on Linux?

277
00:14:56.690 --> 00:14:59.930
Now? Here's another one supportability
who is going to support

278
00:14:59.930 --> 00:15:04.090
this application later. Things like
that. Concerned if they ask

279
00:15:04.090 --> 00:15:07.240
me questions that they could
easily Google, right? Oh yeah.

280
00:15:07.480 --> 00:15:10.630
That's like a first that's
like the warning bells should

281
00:15:10.630 --> 00:15:14.980
be going off. Yeah, absolutely.
You know, even though I

282
00:15:14.980 --> 00:15:16.540
know you don't like to
work blue, but this is

283
00:15:16.540 --> 00:15:22.750
a URL. There's a great
website called www.justingoogleit.com, which you

284
00:15:22.750 --> 00:15:25.720
can send to people when
they send you an email

285
00:15:25.720 --> 00:15:31.540
that says what's that. And
it just, so anyway. Yeah.

286
00:15:31.540 --> 00:15:34.540
I definitely do not want
someone to come in and

287
00:15:34.540 --> 00:15:37.930
have me Google for them.
So that gets into the,

288
00:15:37.930 --> 00:15:40.600
what kind of a problem
solver are they? Sure. Because

289
00:15:40.600 --> 00:15:43.210
you want them to self-start
you want them to work

290
00:15:43.210 --> 00:15:47.140
hard, but you don't want
them to suffer. Right. There's

291
00:15:47.200 --> 00:15:49.240
we are a team. So
you want to understand that

292
00:15:49.400 --> 00:15:53.350
that working as a group
involves walking around, right? It

293
00:15:53.350 --> 00:15:55.900
involves talking to people. You
can't just slide pizza under

294
00:15:55.900 --> 00:15:57.340
the door and figure that
people are going to solve

295
00:15:57.340 --> 00:16:00.340
that problem. Here's a question
when you notice, so what

296
00:16:00.340 --> 00:16:02.920
if you notice something like
that right off the bat

297
00:16:03.430 --> 00:16:06.670
and you know, everything else
about them seems to be

298
00:16:07.300 --> 00:16:11.590
pretty satisfactory. And yet like
they have this one bad

299
00:16:11.590 --> 00:16:15.310
habit of, you know, let's
say not Googling for information.

300
00:16:15.310 --> 00:16:18.730
That's easily Google-able do you,
do you say, well, they

301
00:16:18.730 --> 00:16:23.470
could change Well, so that
I know I have a

302
00:16:23.470 --> 00:16:25.390
tendency to be analogy, boy,
and I know I take

303
00:16:25.390 --> 00:16:27.190
it a little too far,
but I'll give you two

304
00:16:27.190 --> 00:16:29.440
analogies. One on my blog
and here's a fresh one.

305
00:16:29.440 --> 00:16:31.780
So the first one was
what I said on the

306
00:16:31.780 --> 00:16:33.880
blog, which was, you know,
when you're trying to put

307
00:16:33.880 --> 00:16:36.550
together a basketball team, you
want to hire, you want

308
00:16:36.550 --> 00:16:39.880
to hire a tall people.
So I want tall programmers.

309
00:16:39.940 --> 00:16:43.660
I don't really care. I
can't teach height. Sure. Right.

310
00:16:44.600 --> 00:16:46.630
Somebody could learn to use
Google when they have a

311
00:16:46.630 --> 00:16:49.180
dumb question, they can learn
VB. They can learn Ruby.

312
00:16:49.240 --> 00:16:51.370
They can learn whatever they,
You can learn our product.

313
00:16:51.370 --> 00:16:53.590
They can learn our processes,
but I can't teach them

314
00:16:53.590 --> 00:16:56.050
to be tall. I can't
teach if they're there they're

315
00:16:56.050 --> 00:16:58.540
a mental giant or not.
Right. And I would say

316
00:16:58.540 --> 00:17:01.660
mental giant, I'm not talking
about like sat scores here.

317
00:17:01.660 --> 00:17:05.080
I'm talking about they either
get it. Or they don't

318
00:17:05.380 --> 00:17:09.340
right now that said, there
are always the kind of

319
00:17:09.340 --> 00:17:12.190
the Rudy's and those kinds
of, you know, I'm five,

320
00:17:12.190 --> 00:17:14.890
three, but I can still
dunk right. Type of people.

321
00:17:14.890 --> 00:17:19.150
So these are, these are
all guidelines. The, the second

322
00:17:20.710 --> 00:17:22.990
cheesy analogy, when the question
was, do you think someone

323
00:17:22.990 --> 00:17:26.020
can get better? Well, you
know, when people get married

324
00:17:26.410 --> 00:17:27.850
and then they get divorced
and then you hear about

325
00:17:27.850 --> 00:17:31.690
them actually marrying the person
that they divorced. Yeah. I

326
00:17:31.690 --> 00:17:34.000
heard Mary Miller give a good
analogy of that. He says,

327
00:17:34.000 --> 00:17:36.640
it's like opening up the
door to the fridge, taking

328
00:17:36.640 --> 00:17:39.490
the milk out. Ugh. This
milk is sour. Well maybe

329
00:17:39.490 --> 00:17:41.170
tomorrow it'll be fresh and
you put it back and

330
00:17:41.170 --> 00:17:44.830
close it. Exactly. And that
totally applies from a developer's

331
00:17:44.830 --> 00:17:47.920
perspective. Is it your job
to hire the best person

332
00:17:47.920 --> 00:17:52.320
for the team? Or is
it your job to teach

333
00:17:52.320 --> 00:17:54.720
someone? Well, if you're hiring
an intern or a junior

334
00:17:54.720 --> 00:17:59.370
developer, then their basic development
as a programmer is your,

335
00:17:59.370 --> 00:18:02.640
is your best interest. But
if someone has a title

336
00:18:02.640 --> 00:18:07.270
of senior engineer, senior staff
engineer, while their development is

337
00:18:07.290 --> 00:18:11.220
important to me, they are
being hired to, to turn

338
00:18:11.220 --> 00:18:14.520
or build a particular crank.
It's really not my job

339
00:18:14.600 --> 00:18:18.760
to give them the basics.
There's a certain level you

340
00:18:18.780 --> 00:18:22.230
expect. And this is why
that fizzbuzz thing. Well, people

341
00:18:22.230 --> 00:18:23.820
have felt the need to
solve it and said that

342
00:18:23.820 --> 00:18:27.330
it's a silly, silly question.
I think the best way

343
00:18:27.330 --> 00:18:29.430
to phrase it is that
it doesn't tell you if

344
00:18:29.430 --> 00:18:31.830
they are a good programmer,
but it sure tells you

345
00:18:31.830 --> 00:18:34.470
if they're allows you one.
Yeah. If you, if you,

346
00:18:34.470 --> 00:18:36.960
if you can't solve a
problem like that, and that's

347
00:18:36.960 --> 00:18:39.090
just one example, you could
certainly come up with your

348
00:18:39.090 --> 00:18:42.780
own example than, than you
might not be a particularly

349
00:18:44.280 --> 00:18:47.670
initially talented programmer to do
the basics. The idea is

350
00:18:47.670 --> 00:18:51.360
to lower the bar to,
to kind of keep the

351
00:18:51.360 --> 00:18:53.580
chaff from coming in the
door and then get down

352
00:18:53.580 --> 00:18:57.610
to the real programming questions.
So here's, here's a, let,

353
00:18:57.610 --> 00:18:59.490
let, let me interview you
for a second. I, I,

354
00:18:59.550 --> 00:19:03.240
this is just one example.
So don't nobody write in

355
00:19:03.240 --> 00:19:05.070
and say, that was a
crap example. I mean, maybe

356
00:19:05.070 --> 00:19:07.590
it was a crap example.
It's just one. Sure. So

357
00:19:08.370 --> 00:19:11.340
I like to talk about
debugging problems that we've had

358
00:19:11.490 --> 00:19:14.340
and, and walk people through
it. Like they're a member

359
00:19:14.340 --> 00:19:16.320
of the team and we're
trying to solve the problems

360
00:19:16.320 --> 00:19:19.080
for the first time. So
it's kinda like CSI, right?

361
00:19:19.110 --> 00:19:24.900
It's like crime scene investigation.net.
Yeah. Okay. So I'm going

362
00:19:24.900 --> 00:19:28.410
to hire you Carl, and
I'll even just say, hi,

363
00:19:28.410 --> 00:19:30.390
how are you? And then
I'll immediately start talking about

364
00:19:30.390 --> 00:19:32.390
the problem. And it's kind
of like, Oh wow. If

365
00:19:32.400 --> 00:19:34.920
you, if they light up,
then it's like, Hey, there's

366
00:19:34.920 --> 00:19:38.940
a problem. Okay. Okay. So
I've got an ASP application

367
00:19:39.960 --> 00:19:42.810
and an asp.net application. It's
the same app. So one

368
00:19:42.810 --> 00:19:48.210
virtual directory, there's classic ASP
and there's asp.net in the

369
00:19:48.210 --> 00:19:51.120
same app. Okay. It's a,
it's a, dotnet one, one

370
00:19:51.120 --> 00:19:54.480
application. So I've, I've gone
into IAS and I've told

371
00:19:54.480 --> 00:19:58.590
it that this should be
one. One. What happens is

372
00:19:58.770 --> 00:20:03.180
if someone hits the asp.net
page first, then it loads

373
00:20:03.180 --> 00:20:07.200
up.net one, one, and everything
works great. But if someone

374
00:20:07.200 --> 00:20:11.730
hits the ASP page first,
somehow the whole virtual directory,

375
00:20:11.730 --> 00:20:14.400
it turns into dotnet two.
Oh, it gets stuck that

376
00:20:14.400 --> 00:20:17.130
way. And then if I,
if, if I go to

377
00:20:17.130 --> 00:20:19.590
another page after that, it's
too late done at two

378
00:20:19.590 --> 00:20:22.850
Oh, Who is the, is
the kind of the defacto

379
00:20:23.210 --> 00:20:26.000
Framework for that virtual directory?
Where do we start to

380
00:20:26.000 --> 00:20:29.600
solve a problem like that?
So just to clarify the

381
00:20:29.600 --> 00:20:34.490
problem, the problem is that
now the first place they

382
00:20:34.490 --> 00:20:38.360
go being the session in
that session, or since someone

383
00:20:38.360 --> 00:20:41.720
opens their browser, It's never
come up before. Exactly. Good

384
00:20:41.720 --> 00:20:44.360
question. Not the session, but
it's the very first time

385
00:20:44.360 --> 00:20:46.370
we've had it. Okay. So
it's the beginning of the

386
00:20:46.370 --> 00:20:49.420
application, right? At the point
where the framework gets loaded.

387
00:20:49.960 --> 00:20:53.320
Okay. And if you go
to an ASP page first

388
00:20:53.320 --> 00:20:56.320
and that virtual directory, if
then you go to an

389
00:20:56.320 --> 00:20:59.470
ASP net page, the two
O framework is going to

390
00:20:59.470 --> 00:21:03.570
load up. If they hit
the classic ASP page, What

391
00:21:03.570 --> 00:21:06.840
I'm saying? Yeah. If they
Classic ASP page first and

392
00:21:06.840 --> 00:21:09.540
only done at two O
gets loaded. That's what I

393
00:21:09.540 --> 00:21:11.970
mean. They don't even have
to hit an asp.net page,

394
00:21:12.660 --> 00:21:14.640
But if they go to
an ASP net page two

395
00:21:14.640 --> 00:21:18.210
Oh. Is going to process
it. Yes, exactly. Okay. All

396
00:21:18.210 --> 00:21:20.610
right. So, but if they
go to an ASP net

397
00:21:20.610 --> 00:21:25.050
page, first one, one is
going to load. Exactly. I

398
00:21:25.050 --> 00:21:29.160
would take a look at
the internet services manager on

399
00:21:29.160 --> 00:21:35.370
the machine level, not at
the application level. All right.

400
00:21:35.400 --> 00:21:37.920
Is this a virtual directory?
This is a virtual directory

401
00:21:37.920 --> 00:21:39.390
set up as an application.
Right, Right. Then I would

402
00:21:39.390 --> 00:21:41.310
look at the application level
first and then I would

403
00:21:41.310 --> 00:21:44.580
see what's that. And it
set to one, one, but

404
00:21:44.580 --> 00:21:46.410
two O of course is
on the machine. Of course.

405
00:21:46.410 --> 00:21:50.010
Two hours on the machine.
You say that there are

406
00:21:50.010 --> 00:21:56.160
no dotnet two O applications
configured anywhere in Iowa. Interesting.

407
00:21:56.310 --> 00:22:01.200
Okay. That's that's that's key.
Okay. Now the thing that

408
00:22:01.200 --> 00:22:02.820
I would want to do
is I would want to

409
00:22:02.820 --> 00:22:06.180
see what's going on under
the hood. Okay. So I

410
00:22:06.180 --> 00:22:11.820
would probably look at some
performance counters. Okay. And, and.net

411
00:22:11.820 --> 00:22:14.430
one. Oh, and.net. One, one,
just to take a look

412
00:22:14.430 --> 00:22:17.040
and see what what's happening
are two Oh one, one

413
00:22:17.040 --> 00:22:19.200
one two Oh one, one,
one. Okay. So here's one

414
00:22:19.200 --> 00:22:22.980
additional information. There's a calm
object that we're using on

415
00:22:22.980 --> 00:22:29.430
the classic case. Okay. Sure.
That calm object was written

416
00:22:29.430 --> 00:22:35.100
in.net. Yeah. Okay. Was that
calm object written in dotnet

417
00:22:35.100 --> 00:22:41.580
too? No. It was written
in.net. One, one, and then@oneandtheasp.net,

418
00:22:41.670 --> 00:22:45.090
The HME, the ASP page
doesn't know it's dot net.

419
00:22:45.090 --> 00:22:49.050
Of course. It's just calling,
but the runtime. So is

420
00:22:49.050 --> 00:22:53.640
the calm interrupt layer. The
thing that is a loading

421
00:22:53.640 --> 00:22:57.540
two. Oh, because that's the
law because that's the most

422
00:22:57.540 --> 00:23:01.740
current version of.net on the
machine. Exactly. That's exactly what's

423
00:23:01.740 --> 00:23:06.630
happening. Even if you go
on the registry, Cheers. That's

424
00:23:06.630 --> 00:23:09.300
a sounder. Cheers. Yeah. Done
yet. We haven't solved it.

425
00:23:09.300 --> 00:23:11.310
We just, we know why
we know why the guy

426
00:23:11.310 --> 00:23:14.070
was shot, but we don't
know. We know this to

427
00:23:14.070 --> 00:23:15.720
me. We know that the
guy, Yeah, Sean, we don't

428
00:23:15.720 --> 00:23:18.450
know why he was shot.
Calm, interrupt layer is a

429
00:23:18.450 --> 00:23:22.050
good place to consider when
weird things happen. Okay. So

430
00:23:22.050 --> 00:23:23.580
I go into the registry
and I look at the

431
00:23:23.580 --> 00:23:25.980
Prague ID for that comm
object. And I see that

432
00:23:25.980 --> 00:23:29.580
it's actually marked to say.net.
One, one, it says that

433
00:23:29.580 --> 00:23:31.800
in the registry, it says,
this has the version number

434
00:23:31.800 --> 00:23:34.620
and everything as core live,
but it's just not happening

435
00:23:34.620 --> 00:23:38.160
that way. Right. So let's,
let's look at the, the

436
00:23:38.160 --> 00:23:44.610
machine config file. And perhaps
that object assembly is getting

437
00:23:44.660 --> 00:23:48.710
redirected somewhere. Okay. Good idea.
Assembly. Redirect. So there's no

438
00:23:48.710 --> 00:23:51.610
assembly redirection. There's no gagging
going on. There's nothing in

439
00:23:51.610 --> 00:23:54.550
the gap. There's no suddenly
redirects going on. Is this

440
00:23:54.550 --> 00:23:57.670
calm object calling another calm
object? No, it's all. It's

441
00:23:57.670 --> 00:24:01.720
all by itself. Calling another.net
object. Nope. It's all by

442
00:24:01.720 --> 00:24:05.260
itself. So the issue you've,
you've you've found the issue.

443
00:24:05.260 --> 00:24:08.260
The issue is that the,
the com object is loading.net.

444
00:24:08.320 --> 00:24:12.400
And I'll give you one
more information. It appears that

445
00:24:12.400 --> 00:24:16.570
that registry key is completely
ignored because anytime you make

446
00:24:16.570 --> 00:24:19.690
a comm object on a
windows system, you'll get the

447
00:24:19.690 --> 00:24:22.510
latest version of the framework.
If the framework isn't already

448
00:24:22.510 --> 00:24:25.360
loaded, that's just how it
works. This is why we

449
00:24:25.360 --> 00:24:29.350
don't write, explore our plugins
and right. Click menus in.net.

450
00:24:29.680 --> 00:24:32.500
So the problem is that
it's not looking in the

451
00:24:32.500 --> 00:24:36.100
registry to make sure that
it's loading the right version

452
00:24:36.100 --> 00:24:38.740
of the framework. Right? That's
the real problem. Yeah. Wait,

453
00:24:39.160 --> 00:24:41.050
this is just a feature.
It's a by design, it

454
00:24:41.050 --> 00:24:44.260
picks the latest version. So
whoever gets in first is

455
00:24:44.260 --> 00:24:47.170
in, so let's think about
that. Here's the solving of

456
00:24:47.170 --> 00:24:49.360
the, All right. So now
that we know, so that's

457
00:24:49.360 --> 00:24:52.390
what's happening, right? So now
let's solve the problem, whoever

458
00:24:52.390 --> 00:24:55.360
gets in first. So in
other words, how can you

459
00:24:55.360 --> 00:24:59.410
force the comm object to
load framework 1.1? Exactly. So

460
00:24:59.410 --> 00:25:02.950
now you've identified the problem.
How do I solve that?

461
00:25:04.540 --> 00:25:07.660
How do we force it
to load framework 1.1? Well,

462
00:25:08.740 --> 00:25:12.610
and you built the comm
object and visual studio, Right?

463
00:25:14.410 --> 00:25:17.590
So the comm object is
a.net object. That's being called

464
00:25:17.590 --> 00:25:20.020
with a calm callable rapper
through ASP. We call it

465
00:25:20.020 --> 00:25:26.200
<inaudible>. Exactly. So what are
some opportunities? And I asked

466
00:25:26.200 --> 00:25:31.060
for us to modify its
behavior. Let's see. Yeah. Some

467
00:25:31.060 --> 00:25:33.130
opportunity. I got a couple
of things going in my

468
00:25:33.130 --> 00:25:35.770
mind. One thing is that
I would want to try,

469
00:25:36.550 --> 00:25:39.130
cause I haven't had to
solve this problem before. Exactly.

470
00:25:39.280 --> 00:25:40.750
Which is why it's such
a good question for an

471
00:25:40.750 --> 00:25:43.750
interviewer. Right? Of course. Now
that we've broadcasted, it becomes

472
00:25:43.750 --> 00:25:48.250
a crappy question. But So
the first thing I would

473
00:25:48.250 --> 00:25:49.780
like to do is I
would like to load it

474
00:25:49.780 --> 00:25:53.080
up the source to the,
to the object that I'm

475
00:25:53.080 --> 00:25:57.970
creating in.net in visual studio.
Let's say it's just hello

476
00:25:57.970 --> 00:26:02.410
world. It's one function. Hello
world. There's nothing there. Okay.

477
00:26:02.410 --> 00:26:04.750
Is it, is it something
that's compiled into a DLL

478
00:26:04.750 --> 00:26:08.410
beforehand or is it just
a, of course it is.

479
00:26:08.410 --> 00:26:11.650
It's not, it's not a
VB file. It's food, DLL,

480
00:26:11.650 --> 00:26:14.950
red, Jasmine food out DLL
create server dot, create object,

481
00:26:14.950 --> 00:26:17.980
food dot Fu. And when
it was created, when it

482
00:26:17.980 --> 00:26:20.470
was compiled, I guess at
the command line, because you're

483
00:26:20.470 --> 00:26:24.700
not a visual studio guy,
you, it was compiled with

484
00:26:24.760 --> 00:26:28.810
1.1. Absolutely can probably one,
one, absolutely. We talked about

485
00:26:28.810 --> 00:26:31.750
how the company, No way
to redirect it. No. And

486
00:26:31.810 --> 00:26:36.250
it doesn't access the registry.
Now you, before you said

487
00:26:36.250 --> 00:26:38.590
it was, you had put
a thing in the registry

488
00:26:38.590 --> 00:26:41.980
to tell it to load
1.1, but it wasn't working

489
00:26:42.220 --> 00:26:45.060
when you do a red,
they put In there, which

490
00:26:45.090 --> 00:26:48.900
ms. Coraline, depending on what
it was built with, or

491
00:26:48.900 --> 00:26:51.210
they put in the, the
assembly qualified name of the

492
00:26:51.240 --> 00:26:55.190
ms. Coraline. And that was
Okay to load this framework.

493
00:26:55.220 --> 00:26:59.330
So pretty much I'm convinced
now that it's not@the.net.net assembly

494
00:26:59.330 --> 00:27:03.440
level. Yeah. It's in the
assembly between ASP and the

495
00:27:03.440 --> 00:27:07.820
comm Caldwell wrapper. Okay. That's
what I think. So if,

496
00:27:07.840 --> 00:27:11.480
if we assume that it's
something about.net and I can't

497
00:27:11.480 --> 00:27:14.090
change dot Annette's behavior, nor
can I get Microsoft to

498
00:27:14.090 --> 00:27:16.070
fix the bug or the
feature or whatever you want

499
00:27:16.070 --> 00:27:18.590
to call it, I can
only influence what I can

500
00:27:18.590 --> 00:27:22.130
influence. Right? How can I,
the very first time someone

501
00:27:22.130 --> 00:27:27.140
hits a fresh site, how
can I get asp.net 1.1

502
00:27:27.320 --> 00:27:32.540
yes. Into memory. Well, I'm
thinking about hooks and there's

503
00:27:32.540 --> 00:27:36.770
a hook in classic ASP
in, it's been a while

504
00:27:36.770 --> 00:27:39.800
since I've done classic ASP,
but there's an application start.

505
00:27:40.190 --> 00:27:43.640
Yeah. That will get hooked
the first time the application

506
00:27:43.640 --> 00:27:47.900
starts. Okay. Okay. That hooks
that's good. But I, only

507
00:27:47.900 --> 00:27:49.970
thing I can do in
there is make calm objects.

508
00:27:49.970 --> 00:27:53.720
Right. So what other hooks
are there an asp.net? Well,

509
00:27:53.720 --> 00:27:58.880
we have hooks and asp.net,
but those applications start happens

510
00:27:58.880 --> 00:28:02.120
in global ASA X. And
by then the, then the

511
00:28:02.120 --> 00:28:04.700
frameworks loaded. So it's a
great question. So it's too

512
00:28:04.700 --> 00:28:10.910
late, An IAS, proper old,
older. Yeah. I'm thinking back.

513
00:28:12.050 --> 00:28:16.850
What did people write before?
Well, before ASP, yeah. We're

514
00:28:16.850 --> 00:28:20.030
talking an ice sappy filter.
Exactly. What could I do

515
00:28:20.030 --> 00:28:22.190
in a nice, happy filter
and it well, and never

516
00:28:22.190 --> 00:28:24.650
written an ice sappy filter.
Sure. And this is the

517
00:28:24.650 --> 00:28:27.200
point. Most people who are
being interviewed habit. Yeah. But

518
00:28:27.200 --> 00:28:28.940
I know that about hooks.
I know that that's the

519
00:28:28.940 --> 00:28:30.560
hook. I mean, what you
can do in an eye

520
00:28:30.600 --> 00:28:36.320
sappy filter is essentially redirecting
get, get control when ASP

521
00:28:36.320 --> 00:28:39.080
is a nice sappy filter.
So basically when there's a

522
00:28:39.080 --> 00:28:42.380
file extension, you can associate
that with a filter. You

523
00:28:42.380 --> 00:28:47.960
get control before that subsystem
even loads. Okay. So at

524
00:28:47.960 --> 00:28:52.160
that point, however, I'd be
hacking. Okay. That's cool. But

525
00:28:52.160 --> 00:28:54.470
you're, you're getting there. So
the solution that we ended

526
00:28:54.470 --> 00:28:57.650
up using was we wrote
a nice sappy filter that

527
00:28:58.760 --> 00:29:02.630
watched and loaded simply called
one function. It was like

528
00:29:02.660 --> 00:29:07.910
core bind to runtime edX.
Basically we made the, there's

529
00:29:07.910 --> 00:29:10.880
a calm, there's a calm
call that loads the framework,

530
00:29:11.150 --> 00:29:15.770
the.net framework. Okay. So we
basically in an unmanaged code

531
00:29:15.770 --> 00:29:19.760
in C plus, plus just
fired up the framework. Once

532
00:29:19.760 --> 00:29:22.490
it gets loaded, it's stuck
there. You can only have

533
00:29:22.490 --> 00:29:25.520
one framework per process. So
it sticks there and you're

534
00:29:25.520 --> 00:29:28.070
set. So we just have
a little filter. It's like

535
00:29:28.070 --> 00:29:30.890
six lines of code and
it says, Hey, I want

536
00:29:30.890 --> 00:29:34.850
the framework. And it explicitly
asks for one, one, okay,

537
00:29:34.970 --> 00:29:37.580
Man. I'm just amazed at
that problem exists at all,

538
00:29:37.910 --> 00:29:42.620
Dude. That problem was a
problem that, that, that, that,

539
00:29:42.720 --> 00:29:44.980
that that's the, and we
had, you know, we had

540
00:29:44.980 --> 00:29:46.960
three, we solved, it took
a day or two, but

541
00:29:46.960 --> 00:29:50.650
we had smart people sitting
around walking through the flow

542
00:29:50.650 --> 00:29:53.890
chart. Exactly. Like you and
I did. And none of

543
00:29:53.890 --> 00:29:58.090
us knew the complete solution.
And it's one of those

544
00:29:58.090 --> 00:29:59.680
problems where you look back
and you go, Oh, of

545
00:29:59.680 --> 00:30:02.460
course, but that's the good
kind of problem. Right? Right.

546
00:30:02.860 --> 00:30:06.730
So during the interview process,
I like to ask questions

547
00:30:06.970 --> 00:30:11.590
like that CSI kind of
questions because you, of course,

548
00:30:11.590 --> 00:30:13.150
you're not going to have,
I mean, maybe you would,

549
00:30:13.150 --> 00:30:14.500
but of course you're not
going to have written and

550
00:30:14.500 --> 00:30:17.470
I sappy filter unmanaged thing
that talk. Right. But it's

551
00:30:17.470 --> 00:30:20.440
all about knowing, knowing where
the points are and knowing

552
00:30:20.440 --> 00:30:23.800
where, you know, being able
to isolate it. Right. And

553
00:30:23.800 --> 00:30:25.450
then you could have used
that to Google on the

554
00:30:25.450 --> 00:30:28.720
problem. Sure. But knowing that,
well, I can't do it

555
00:30:28.720 --> 00:30:31.840
in ASP. All I have
is come available. I can't

556
00:30:31.840 --> 00:30:34.930
do it. An asp.net. It's
too late. Framework's already loaded.

557
00:30:35.200 --> 00:30:36.760
Those are the kinds of
things that tell me that

558
00:30:36.760 --> 00:30:41.140
you understand the life cycle,
the lifetime of an asp.net

559
00:30:41.140 --> 00:30:44.140
application. Another example question that
I offer sometimes up to

560
00:30:44.140 --> 00:30:47.980
people is, you know, describe
an HTTP, get from the

561
00:30:47.980 --> 00:30:50.230
moment it leaves your browser
until it gets down to

562
00:30:50.230 --> 00:30:53.050
ASP and then back stuff
like that. Cause then you

563
00:30:53.050 --> 00:30:56.200
find out, well, of course
they don't understand the exact

564
00:30:56.350 --> 00:31:01.270
details of, I don't know,
pipeline or whatever, but they're

565
00:31:01.270 --> 00:31:02.860
not supposed to, but at
least they know what they

566
00:31:02.860 --> 00:31:06.370
don't know. Yeah. And then
some magic happens indeed. And

567
00:31:06.370 --> 00:31:08.830
then a miracle happens. I
think you need to be

568
00:31:08.830 --> 00:31:11.200
a little more explicit here.
All right, Scott, what a

569
00:31:11.200 --> 00:31:13.450
great show. Thanks for dragging
me through that. That was

570
00:31:13.450 --> 00:31:16.540
fun made my day. I'm
glad. And we'll see you

571
00:31:16.540 --> 00:31:18.580
next week on Hansel minutes.

