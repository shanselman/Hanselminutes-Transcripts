WEBVTT FILE

1
00:00:05.370 --> 00:00:16.430
<inaudible> From Hanselman it's dot
com. It's Hanselman. It's a

2
00:00:16.430 --> 00:00:20.030
weekly discussion with web developer
and technologists and Scott Hanselman

3
00:00:20.420 --> 00:00:24.740
posted by Carl Franklin. This is
Lawrence Ryan announcing show number one

4
00:00:24.740 --> 00:00:31.310
27. Recorded live Monday, August 25th, 2008.
Support for Hanselman it's just

5
00:00:31.310 --> 00:00:35.660
provided by teller. Rad controls.
The most comprehensive suite of

6
00:00:35.660 --> 00:00:45.560
components for windows forms and
asp.net web applications. online@wwwdottelerik.com. Support

7
00:00:45.560 --> 00:00:50.120
is also provided by.net developers
journal the world's leading.net developer

8
00:00:50.120 --> 00:00:55.820
magazine online at www dot
<inaudible> dot com. In this

9
00:00:55.820 --> 00:00:59.690
episode, Scott and Carl, talk
about what's new in.net 3.5,

10
00:00:59.690 --> 00:01:04.460
service back one. Hi, this
is Scott Hanselman and this

11
00:01:04.460 --> 00:01:06.500
is another episode of Hansel
minutes. And I'm sitting down

12
00:01:06.500 --> 00:01:09.650
today with my good friend,
Carl Franklin. He's back again. And

13
00:01:09.650 --> 00:01:15.050
we're talking about.net three, five
service pack. One as I

14
00:01:15.050 --> 00:01:18.890
like to call it.at 3.6
shops is don't like me.

15
00:01:19.130 --> 00:01:21.890
Yeah, that should be done
at 3.6. Well, there's a

16
00:01:21.890 --> 00:01:24.440
lot of stuff in it.
I don't know why it

17
00:01:24.440 --> 00:01:27.440
was called <inaudible>, but it's
got a lot to it.

18
00:01:27.770 --> 00:01:31.160
There's a lot of additional
functionality When you add new

19
00:01:31.160 --> 00:01:36.350
features like the entity framework
and a story@ado.net data services,

20
00:01:37.070 --> 00:01:40.940
it really should be something
other than a service pack

21
00:01:41.030 --> 00:01:45.080
because to me, service packs
are updates to existing features.

22
00:01:45.530 --> 00:01:48.980
Exactly. And I would tend
to agree. I think things

23
00:01:48.980 --> 00:01:52.040
got a little strange when.net
three O came out. I

24
00:01:52.040 --> 00:01:54.460
think we can all agree
that it was two Oh

25
00:01:55.070 --> 00:01:58.820
additional libraries, right? That should
have been 2.1, but interestingly,

26
00:01:58.850 --> 00:02:00.620
well, but it was a
lot of stuff. I mean,

27
00:02:01.250 --> 00:02:05.750
game changing, big stuff, WCF,
WPF, totally new ways of

28
00:02:05.750 --> 00:02:09.560
thinking about something. I don't
know if WPF would, I

29
00:02:09.560 --> 00:02:11.450
don't think you could fairly
say that that would be

30
00:02:11.630 --> 00:02:15.440
2.1. That's a pretty big
deal, you know, but 3.0,

31
00:02:15.440 --> 00:02:18.530
I don't know. Certainly it
couldn't have been called, you

32
00:02:18.530 --> 00:02:21.140
know, 2.0 plus pack that
wouldn't have been do it

33
00:02:21.140 --> 00:02:23.510
wouldn't have done it justice.
Well, I think The confusion

34
00:02:23.510 --> 00:02:26.870
there was that the framework
was essentially the CLR was

35
00:02:26.870 --> 00:02:30.800
essentially still 2.0, right. There
is new features added to

36
00:02:30.800 --> 00:02:33.530
it. Exactly. Cause with one,
Oh, we had a CLR,

37
00:02:33.890 --> 00:02:37.520
one, one, we had some
bug fixes and another safety,

38
00:02:37.520 --> 00:02:39.770
you know, another CLR, interestingly
enough. And then two, Oh,

39
00:02:39.770 --> 00:02:42.710
we had a vastly different
CLR. Yeah. People just kind

40
00:02:42.710 --> 00:02:44.060
of assumed that. And I
think it made sense. I

41
00:02:44.060 --> 00:02:46.490
think that the getting versioning
right on something like that,

42
00:02:46.490 --> 00:02:48.410
when you've got the framework
that base class library and

43
00:02:48.410 --> 00:02:51.020
additional libraries is tough. It's
just so big. Yeah. It

44
00:02:51.020 --> 00:02:54.020
is big. I would have
called it probably 3.8. I

45
00:02:54.020 --> 00:02:56.420
think it would have been
a good number, but regardless

46
00:02:56.720 --> 00:02:58.250
there's a lot of stuff
in it, but it's important

47
00:02:58.250 --> 00:03:00.820
for people to remember that
it's still.net to point out.

48
00:03:00.910 --> 00:03:06.300
So This is not only.net
3.5, one or 3.5 SP

49
00:03:06.300 --> 00:03:09.990
one, but it's also visual
studio 2008 S P one.

50
00:03:10.560 --> 00:03:12.480
Right? So you can, you
can have a machine that's

51
00:03:12.480 --> 00:03:14.280
got done at three five
on it, and then you

52
00:03:14.280 --> 00:03:17.850
can update it to three,
five S P one. And

53
00:03:17.850 --> 00:03:19.830
then if you have a
developer's machine, that's got visual

54
00:03:19.830 --> 00:03:23.820
studio, 2008, you would want
to update visual studio itself

55
00:03:24.120 --> 00:03:26.310
to surface pack one that
would update, you know, the

56
00:03:26.310 --> 00:03:28.110
development environment and you get
all sorts of new features

57
00:03:28.110 --> 00:03:32.700
there. And then the underlying
CLR, the two O CLR

58
00:03:32.790 --> 00:03:36.000
is moving from service pack
one to service pack two.

59
00:03:36.570 --> 00:03:39.480
So the fixing a lot
of CLR bugs in the

60
00:03:39.480 --> 00:03:42.660
process as well. And I
think that those things will

61
00:03:42.660 --> 00:03:46.320
hopefully get tie-dyed up with,
with dotnet four or whatever,

62
00:03:46.320 --> 00:03:48.000
they're going to call it
in the, in the future.

63
00:03:48.840 --> 00:03:50.700
But, and believe me, you
know, I've only worked with

64
00:03:50.700 --> 00:03:52.950
the company for, I think
this is, I'm just a,

65
00:03:53.220 --> 00:03:56.760
I think I'm a year
next week. Actually. There's been

66
00:03:56.760 --> 00:03:59.730
the company 51 weeks. So
Let's talk a little bit

67
00:03:59.730 --> 00:04:02.640
about the entity framework. Yeah.
Well the entity framework was

68
00:04:02.640 --> 00:04:05.520
an interesting one because this
is the object, relational mapper

69
00:04:05.820 --> 00:04:08.390
mapper. Well, that's just, Yeah,
but it's a, it's a,

70
00:04:08.640 --> 00:04:11.460
you know, they're pushing it
as a standard data model,

71
00:04:11.460 --> 00:04:14.490
the entity data model, which
is going to be consumed

72
00:04:14.490 --> 00:04:19.560
by multiple Microsoft applications. And,
and of course it is

73
00:04:19.560 --> 00:04:23.610
an RM tool. They did
kind of things, kind of

74
00:04:23.610 --> 00:04:26.160
an ORM. They didn't do
things quite the same as

75
00:04:26.160 --> 00:04:29.880
some of the other mainstream
ORMs did. And you know,

76
00:04:29.880 --> 00:04:33.540
it's drawn, it's a criticisms
for not having a desk

77
00:04:34.420 --> 00:04:38.310
Confidence. And the guys@thealt.net podcast
had a very interesting podcast

78
00:04:38.310 --> 00:04:41.040
about that vote. This was
basically a bunch of the

79
00:04:41.040 --> 00:04:44.100
all.net guys got together and
signed a petition as well

80
00:04:44.100 --> 00:04:45.600
as a lot of other
people. And they presented that

81
00:04:45.600 --> 00:04:48.750
petition to the team. It
was a little dramatic, but

82
00:04:48.750 --> 00:04:51.300
I think that the point
is is that they want

83
00:04:51.300 --> 00:04:53.250
them to succeed. They want
it to be better and

84
00:04:53.250 --> 00:04:55.200
they didn't think that it
made it there. Well, you

85
00:04:55.200 --> 00:04:57.600
know, I talked to Franz
BOMA with Richard today and

86
00:04:57.600 --> 00:05:00.630
a show in a.in Iraq
show that we're friends, Bauma,

87
00:05:00.660 --> 00:05:03.360
excuse me. He corrected me
on his pronunciation. He's the

88
00:05:03.360 --> 00:05:06.330
author of LLB Elgin, which
is a very popular RM

89
00:05:06.330 --> 00:05:09.390
tool. And I asked him
what he thought about that.

90
00:05:09.630 --> 00:05:11.850
And he said, you know,
it mostly comes from the

91
00:05:12.120 --> 00:05:15.840
point that all of those
guys are consultants that make

92
00:05:15.840 --> 00:05:18.870
their living with RM tools.
And they get into a

93
00:05:18.870 --> 00:05:22.350
situation where the project manager
insists that they use the

94
00:05:22.350 --> 00:05:26.670
entity framework. And of course
it doesn't have some of

95
00:05:26.670 --> 00:05:30.630
the features that they want
and therein lies their, their

96
00:05:30.630 --> 00:05:33.750
beef is over. One of
the things that culturally needs

97
00:05:33.750 --> 00:05:35.100
to kind of stop is
that, you know, a lot

98
00:05:35.100 --> 00:05:36.870
of big companies, a lot
of big enterprises will use

99
00:05:36.870 --> 00:05:40.290
what Microsoft produces, right? They
wouldn't use monorail, but they'll

100
00:05:40.290 --> 00:05:47.190
use ASP, net MVC. They'll
use, they won't use and

101
00:05:47.190 --> 00:05:49.230
hibernate, but they'll use entity
framework, you know, and then

102
00:05:49.230 --> 00:05:51.930
that's their prerogative. But one
of the things that I

103
00:05:51.930 --> 00:05:54.090
think is nice and is
representative of the three in

104
00:05:54.090 --> 00:05:56.190
the three, five SP one
stuff, is that more of

105
00:05:56.190 --> 00:05:59.510
these things are getting better
with, with the third party

106
00:05:59.510 --> 00:06:02.720
stuff. And link link is
going to the great equalizer,

107
00:06:02.720 --> 00:06:04.940
but you know, you see
that the stuff that Phil's

108
00:06:04.940 --> 00:06:08.240
doing with ASP net MVC
is certainly getting along well

109
00:06:08.240 --> 00:06:10.910
with all the other third
party, you know, hack feel

110
00:06:10.910 --> 00:06:12.620
hack. Yeah. Yeah. And actually
that's one thing to point

111
00:06:12.620 --> 00:06:14.780
out about service pack. One
of 3.5 is that it

112
00:06:14.780 --> 00:06:17.360
does not include ASP net
MVC. There was some confusion

113
00:06:17.360 --> 00:06:20.300
about that. It was always
intended that MVC would be

114
00:06:20.300 --> 00:06:23.990
a separate release or an
RTW release to web at

115
00:06:23.990 --> 00:06:27.020
some point in a future
month that ends in bur

116
00:06:28.310 --> 00:06:32.390
like March Burr, January. But
yeah, a lot of people

117
00:06:32.390 --> 00:06:34.430
thought that they, they install
three, five SB one. And

118
00:06:34.430 --> 00:06:37.570
I said, wait a second.
Where's where's NBC. In fact,

119
00:06:37.700 --> 00:06:40.700
we did get some pieces
of NBC and some artifacts

120
00:06:41.000 --> 00:06:44.390
like a routing, which was
a portion of NBC that

121
00:06:44.390 --> 00:06:47.390
was recognized early on as
being really valuable and then

122
00:06:47.390 --> 00:06:51.260
pulled into ASP net dynamic
data. And then ultimately was

123
00:06:51.260 --> 00:06:54.650
moved out of system dot
web dot MVC dot routing,

124
00:06:54.830 --> 00:06:56.990
and pushed up. It's now
system dot web dot routing.

125
00:06:57.350 --> 00:07:00.560
So routing itself is a
part of asp.net proper now.

126
00:07:00.590 --> 00:07:02.930
And something that you can
count on, whether you use

127
00:07:02.930 --> 00:07:07.120
MVC or dynamic data or
neither. So the next big

128
00:07:07.150 --> 00:07:10.090
feature ado.net data services. Now
I know you've done a

129
00:07:10.090 --> 00:07:12.460
Hansel minutes show on this
or too. Yeah. And I'm

130
00:07:12.460 --> 00:07:15.190
actually going to be going
to Australia on later this

131
00:07:15.190 --> 00:07:17.740
week. And I'm going to
give a talk at tech

132
00:07:17.740 --> 00:07:22.030
ed Australia on a ATO
to net data services, formerly

133
00:07:22.030 --> 00:07:25.240
a story. This is very
exciting. I like it. I

134
00:07:25.240 --> 00:07:27.700
really think it's, it's really
cool because I spend many,

135
00:07:27.700 --> 00:07:33.220
many years trying to get
data over Ws star, right?

136
00:07:33.230 --> 00:07:36.730
The web services stack. Exactly.
People call it Ws death

137
00:07:36.730 --> 00:07:39.160
star because it's just very
imposing. There's a lot going

138
00:07:39.160 --> 00:07:41.980
on there. So, So what
they've done here is they've

139
00:07:41.980 --> 00:07:44.800
simplified things and they've gone
back to what they call

140
00:07:44.800 --> 00:07:48.910
just simple rest, which is
traditional state transfer, which is

141
00:07:49.030 --> 00:07:55.420
essentially HCP Present a crud,
create, read, update, delete over

142
00:07:55.870 --> 00:07:59.530
some common HTTP verbs, like
get post put and delete.

143
00:08:00.110 --> 00:08:02.950
But also the concept that
data in this case entities

144
00:08:02.950 --> 00:08:06.910
are our resources, web resources.
So any one entity should

145
00:08:06.910 --> 00:08:10.990
be addressable via a URL.
I can pull back an

146
00:08:10.990 --> 00:08:14.170
Adam feed and Adam pub
feed of these different entities.

147
00:08:14.170 --> 00:08:19.990
So I could go and
say, you know, hanselman.com/northwind.service/products and

148
00:08:19.990 --> 00:08:23.680
get back a feed, a
syndication feed in a syndication

149
00:08:23.680 --> 00:08:26.170
format where the payload for
that feed is not a

150
00:08:26.170 --> 00:08:30.130
blog and not blog items,
but rather a entity HTML

151
00:08:30.400 --> 00:08:33.250
entity XML rather. And you
know, a format that I

152
00:08:33.250 --> 00:08:37.540
could consume. What's cool about
this is it makes frankly

153
00:08:37.690 --> 00:08:42.250
getting stuff over the web
easier. They've got clients in

154
00:08:42.490 --> 00:08:45.460
for Ajax, they're working on
a client for Silverlight. You

155
00:08:45.460 --> 00:08:48.400
can very, very easily add
these services using the same

156
00:08:48.400 --> 00:08:53.590
WCF, add surface reference, right
click menu from visual studio

157
00:08:53.590 --> 00:08:57.990
that you're used to doing
now and make when forms,

158
00:08:57.990 --> 00:09:00.510
web forms, applications that very,
very easily then bind to

159
00:09:00.510 --> 00:09:04.350
these collections basically. And you've
got linked to rest, which

160
00:09:04.350 --> 00:09:06.230
is pretty sweet. Do you
think that this is a

161
00:09:06.350 --> 00:09:10.370
pushback, a simplification, a pushback
from the complexity of soap

162
00:09:10.370 --> 00:09:14.030
and particularly wisdom, but maybe
soap was the UDDI the

163
00:09:14.030 --> 00:09:17.450
whole AWS stack. I, you
know, I used to my,

164
00:09:17.510 --> 00:09:20.090
my knee jerk reaction was
that this was a rejection,

165
00:09:20.690 --> 00:09:24.500
but I'm realizing it is
simply different. It's it's a

166
00:09:24.500 --> 00:09:27.890
parallel track. It is, it
is crud. It's get read,

167
00:09:27.890 --> 00:09:32.000
update and delete. It's not
a necessarily message passing over

168
00:09:32.000 --> 00:09:35.930
soap with all of the
headers and security and all

169
00:09:35.930 --> 00:09:38.900
the different extensions and the
formalization of the soap protocol.

170
00:09:39.140 --> 00:09:41.330
Okay. I could see building
systems that you would use

171
00:09:41.330 --> 00:09:45.440
both it's it solves a
problem. You know, it certainly

172
00:09:45.470 --> 00:09:47.600
would solve the problem that
I had, which was moving

173
00:09:48.440 --> 00:09:51.800
accounts and money around. I
was trying to go and

174
00:09:51.800 --> 00:09:55.850
make web services, like get
account request, be via message,

175
00:09:55.850 --> 00:09:58.850
and you'd pass it in
to get accounts. And I

176
00:09:58.850 --> 00:10:02.660
was trying to model rest
over this message passing format.

177
00:10:02.690 --> 00:10:04.880
And when I learned about
rest, I said, well, this

178
00:10:04.880 --> 00:10:06.890
is what I was trying
to solve. That doesn't mean

179
00:10:06.890 --> 00:10:09.020
it matches every problem. It
just means it happened to

180
00:10:09.020 --> 00:10:11.390
match the one that I
was working on. Also a

181
00:10:11.390 --> 00:10:15.080
lot of team system improvements.
I'm not really familiar with

182
00:10:15.080 --> 00:10:16.850
a lot of the team
system stuff. I know that

183
00:10:16.850 --> 00:10:19.370
there's been a lot of
improvements on the backside for

184
00:10:19.370 --> 00:10:23.780
the, the team foundation server
service pack. One lot of

185
00:10:23.780 --> 00:10:28.820
database and optimizations for big
chain sets. Yeah. Some version

186
00:10:28.820 --> 00:10:33.830
control fixes and automatically supporting
non solution controlled files. For

187
00:10:33.830 --> 00:10:40.100
example, some work item tracking
office 2007 integration. Oh, we

188
00:10:40.100 --> 00:10:44.150
using a ribbon, a source
safe migration tool support for

189
00:10:44.150 --> 00:10:48.740
SQL server 2008 with team
foundation vibration tool. Yeah. So

190
00:10:48.740 --> 00:10:52.160
there's some really good stuff.
Applause. Yeah. Yeah. The sooner

191
00:10:52.160 --> 00:10:53.570
we get off of saved,
the better the world will

192
00:10:53.570 --> 00:10:56.210
be. Yeah. And we used
to say that about a

193
00:10:56.480 --> 00:11:01.690
well, okay. Nevermind. Of course,
as peanut dynamic data. Yeah.

194
00:11:01.910 --> 00:11:05.240
The, you know, all the
MVC is getting people, not

195
00:11:05.240 --> 00:11:06.950
thinking about dynamic data. You
know, we did a talk

196
00:11:06.950 --> 00:11:11.180
with dynamic data with the
PM, Scott Hunter recently, and I'm

197
00:11:11.180 --> 00:11:12.980
starting to figure this thing
out even more, you know,

198
00:11:13.460 --> 00:11:15.650
I thought it was scaffolding.
It's not scaffolding. It's more

199
00:11:15.650 --> 00:11:19.730
than that. I thought it
was, you know, a jumpstarting

200
00:11:19.730 --> 00:11:22.760
way to make, you know,
more web forms faster, but

201
00:11:22.760 --> 00:11:24.560
they're going to be doing
an NBC version. So you'll

202
00:11:24.560 --> 00:11:27.080
be able to generate a,
you know, MVC style pages,

203
00:11:27.410 --> 00:11:29.840
but you can just take
a regular old web forms

204
00:11:29.900 --> 00:11:32.420
page like a regular old
web forms project that you're

205
00:11:32.420 --> 00:11:35.990
already working on, drop a
dynamic data manager control on

206
00:11:35.990 --> 00:11:39.410
that form and drop a
list view in. And you're

207
00:11:39.410 --> 00:11:41.810
starting to think about dynamic
data. You don't necessarily have

208
00:11:41.810 --> 00:11:44.720
to go and make a
quote unquote dynamic data website.

209
00:11:45.050 --> 00:11:48.110
So I mean, they sort
of, they sort of pushed

210
00:11:48.110 --> 00:11:51.590
it as sort of scaffolding.
I think that the scaffolding

211
00:11:51.590 --> 00:11:54.340
demo was easy. You, this
is one of the things

212
00:11:54.340 --> 00:11:56.470
that's difficult. You want to
show someone something you want

213
00:11:56.470 --> 00:11:59.080
to show them the elevator
speech, right? There's nothing quite

214
00:11:59.080 --> 00:12:02.860
much quite faster than file
new awesome demo. I guess

215
00:12:02.880 --> 00:12:05.670
They also wanted to get
the, the rails crowd listening.

216
00:12:06.360 --> 00:12:09.030
Well, you know, scaffolding is
sexy. It's, it's great to

217
00:12:09.030 --> 00:12:11.910
be able to get up
and fast quickly, you know,

218
00:12:12.330 --> 00:12:14.130
I'm up and fast quickly,
what am I saying? You

219
00:12:14.130 --> 00:12:16.050
know, it's, it's nice to
be able to just say,

220
00:12:16.050 --> 00:12:18.240
look, boom, Northwind. So I
build a whole website, ah,

221
00:12:18.300 --> 00:12:20.910
no code. Right. But you
know, I've talked to Peter

222
00:12:20.910 --> 00:12:23.430
Blom, right. You know, Peter
bylaw, Peter. Yeah. Peter. Peter's

223
00:12:23.430 --> 00:12:28.860
awesome. Yeah. He is scary
smart. And, and something clicked

224
00:12:28.860 --> 00:12:30.600
for him a couple of
months ago and dynamic data.

225
00:12:30.600 --> 00:12:32.880
And he just said, Oh,
this is something I can,

226
00:12:33.210 --> 00:12:35.430
and you, you know, you
watch the control vendors. This

227
00:12:35.430 --> 00:12:37.020
is a guy who was
going to exploit the hell

228
00:12:37.020 --> 00:12:39.960
out of, of dynamic data.
And he's one of the

229
00:12:39.960 --> 00:12:42.150
guys who helped explain it
to me. And it started

230
00:12:42.150 --> 00:12:44.820
to click. And I started
to realize that this is

231
00:12:45.850 --> 00:12:49.680
a more interesting meta templating
system, a meta programming system

232
00:12:49.680 --> 00:12:52.710
than it is, you know,
cogeneration. We've got lots of

233
00:12:52.710 --> 00:12:57.150
new videos up at asp.net/dynamic
data talking about that. And

234
00:12:57.990 --> 00:13:01.110
I've got to figure out
more effective ways to explain

235
00:13:01.110 --> 00:13:04.050
to them and data to
people because it's so easy

236
00:13:04.050 --> 00:13:06.210
to just dismiss it and
go, Hey, you know, it's

237
00:13:06.210 --> 00:13:09.600
dynamic, dude. There's some new
stuff in Ajax too. Apparently.

238
00:13:09.660 --> 00:13:13.230
Yeah. Portraying Leroy and those
guys in the Ajax asp.net

239
00:13:13.230 --> 00:13:16.950
team added some browser history
stuff. Now this is really,

240
00:13:17.220 --> 00:13:20.100
I don't quite get it.
Cause JavaScript still is magic

241
00:13:20.100 --> 00:13:25.560
to me. But basically they've
got techniques to put points

242
00:13:25.560 --> 00:13:29.550
in history. Basically they can
do different techniques based on

243
00:13:29.550 --> 00:13:31.800
the browser. Right. So they've
actually got an abstraction layer

244
00:13:31.800 --> 00:13:34.800
over the top of a
number of techniques. So for

245
00:13:34.800 --> 00:13:38.040
example, you might have a
tiny I frame that you

246
00:13:38.040 --> 00:13:41.490
can't see. And that will,
that I frame will navigate

247
00:13:41.490 --> 00:13:45.060
forward to, you know, other
fake pages when you do

248
00:13:45.060 --> 00:13:48.000
an Ajax action. So you
might, let's say you have

249
00:13:48.000 --> 00:13:50.670
an accordion control. The according
control would be like the

250
00:13:50.670 --> 00:13:54.690
thing in office or outlook
2007. And you click from

251
00:13:54.690 --> 00:13:57.660
mail to calendar. You get
to decide if you want

252
00:13:57.660 --> 00:14:00.960
the clicking on that accordion
control to be a point

253
00:14:00.960 --> 00:14:04.920
in the history. So then
it manages that and fools

254
00:14:04.920 --> 00:14:08.010
the browser into thinking that
a forward navigation has occurred

255
00:14:08.760 --> 00:14:12.180
such that you can then
back up and Ajax, you

256
00:14:12.180 --> 00:14:15.820
know, an Ajax or JavaScript
style. Yeah. Because that's been

257
00:14:15.820 --> 00:14:18.510
an event that's been a
particularly difficult thing to do

258
00:14:18.510 --> 00:14:21.390
in the browser with Ajax.
How do I, how do

259
00:14:21.390 --> 00:14:24.240
I undo? Yeah. Oh yeah.
And you can't take over

260
00:14:24.240 --> 00:14:25.920
the back button. Right? A
lot of people will say,

261
00:14:26.610 --> 00:14:28.530
you know, early on with
Ajax applications, you hit the

262
00:14:28.530 --> 00:14:31.290
back button accidentally and suddenly
you lose your entire application

263
00:14:31.560 --> 00:14:33.360
Nor do you want to,
I mean, the back button

264
00:14:33.360 --> 00:14:35.370
is not a solution because
it's not plugged into the

265
00:14:35.370 --> 00:14:38.460
architecture. Right. Well, the idea
though, was that people are

266
00:14:38.460 --> 00:14:41.790
used to moving forward and
pages, they click on something

267
00:14:41.790 --> 00:14:45.360
and the page changes dramatically.
They would expect hitting back

268
00:14:45.360 --> 00:14:48.840
would undo that. Right. But
an Ajax application like, like

269
00:14:48.870 --> 00:14:51.920
early versions of Gmail would
stay on the same page

270
00:14:51.920 --> 00:14:54.560
forever. Yeah. You know, Gmail
is a great example of

271
00:14:54.560 --> 00:14:57.080
an application that does browser
history really nicely. Yes. You

272
00:14:57.080 --> 00:14:59.360
can click on different categories
and hit back and you'll

273
00:14:59.360 --> 00:15:02.990
go right back where you
were. Hi, it's Scott here

274
00:15:02.990 --> 00:15:04.820
from another place in time.
I hope you're enjoying the

275
00:15:04.820 --> 00:15:07.460
show so far. I apologize
for interrupting it, but I

276
00:15:07.460 --> 00:15:09.500
wanted to let you know
that assembling a podcast like

277
00:15:09.500 --> 00:15:12.650
this every week, isn't free.
Certainly the bandwidth bill crushes

278
00:15:12.650 --> 00:15:14.030
us every month. So I
wanted to let you know

279
00:15:14.030 --> 00:15:16.670
that this show is sponsored
by Tellerik. They make the

280
00:15:16.670 --> 00:15:18.500
show possible and it makes
it pretty cool products as

281
00:15:18.500 --> 00:15:21.020
well. For example, if you're
trying to build a web

282
00:15:21.020 --> 00:15:24.680
2.0 Ajax application, trying to
use the web 1.0 components,

283
00:15:24.710 --> 00:15:26.780
it's kind of difficult. You
got to get the next

284
00:15:26.780 --> 00:15:28.340
gen stuff. If you want
to build the next gen

285
00:15:28.550 --> 00:15:30.770
websites. And that's exactly what
the folks at Tellerik have

286
00:15:30.770 --> 00:15:33.320
got and their new upcoming
product, which is code named

287
00:15:33.320 --> 00:15:36.920
rad controls. Prometheus's a big
pack of web controls built

288
00:15:36.920 --> 00:15:39.830
entirely on top of the
Microsoft ASP net Ajax stuff

289
00:15:39.830 --> 00:15:41.780
that you already understand. It's
going to give you a

290
00:15:41.780 --> 00:15:44.870
lot of performance interactivity on
your next project. They mirror

291
00:15:44.870 --> 00:15:47.930
the ASP net Ajax API.
So the development's really straightforward

292
00:15:48.380 --> 00:15:51.890
client scripture's shared loading time
is pretty fast. You set

293
00:15:51.890 --> 00:15:53.540
a couple of properties. You
can even bind a web

294
00:15:53.540 --> 00:15:57.110
services for really efficient operation.
The new rad editor for

295
00:15:57.110 --> 00:15:59.270
ESPN at Ajax loads up
to four times faster than

296
00:15:59.270 --> 00:16:02.240
before. And the rad grid
will do thousands of records

297
00:16:02.240 --> 00:16:04.790
in milliseconds. But of course
it's, it's better to try

298
00:16:04.790 --> 00:16:07.100
these things for yourself. So
you can visit <inaudible> dot

299
00:16:07.100 --> 00:16:10.670
com slash ASP, net Ajax,
and download a trial. Thanks

300
00:16:10.670 --> 00:16:12.260
a lot for listening and
we'll get right back to

301
00:16:12.260 --> 00:16:15.670
the show. Hey, can I
get off on a tangent

302
00:16:15.670 --> 00:16:17.590
for a second? Have you
noticed some weird things with

303
00:16:17.620 --> 00:16:21.820
Gmail lately and the browser?
In what sense? Just like,

304
00:16:22.960 --> 00:16:25.540
well, what can I say?
I've noticed it's been a

305
00:16:25.540 --> 00:16:27.360
little slower lately. I had
it down for a couple

306
00:16:27.380 --> 00:16:31.260
hours last week, Getting into
circular errors. You know, I,

307
00:16:31.260 --> 00:16:34.060
it's a funny, I've actually
noticed more errors, just flat

308
00:16:34.060 --> 00:16:37.000
out errors on Gmail in
the last kind of month.

309
00:16:37.060 --> 00:16:40.620
Yeah. Than ever before. Yeah,
me too. I have noticed

310
00:16:40.630 --> 00:16:42.370
that it was down for
like four or five hours

311
00:16:42.370 --> 00:16:45.430
a couple of weeks ago.
Right. Which was bizarre as

312
00:16:45.430 --> 00:16:47.260
our world was ending. I
had no idea. I'd never

313
00:16:47.260 --> 00:16:49.210
expected that to be done.
And then I would get

314
00:16:49.210 --> 00:16:52.210
these weird kind of server
server error. It was kind

315
00:16:52.210 --> 00:16:54.430
of these cutesy messages. Like
something went wrong, They went

316
00:16:54.430 --> 00:16:56.590
wrong. Check back in a
few minutes. We're fixing the

317
00:16:56.590 --> 00:16:59.680
problem. Yeah. But I have
these weird cyclical problems. Like

318
00:17:00.100 --> 00:17:03.040
I'll, I'll get into this
situation where it keeps refreshing

319
00:17:03.040 --> 00:17:05.110
the page over and over
again, and nothing ever happens.

320
00:17:05.830 --> 00:17:08.380
And the box comes up
that says, you know, in

321
00:17:08.380 --> 00:17:11.410
internet Explorer, do you want
to allow a secure and

322
00:17:11.410 --> 00:17:15.340
non-secure items? And it'll just,
I'll keep pressing. Yes. I

323
00:17:15.340 --> 00:17:18.370
have to switch to Google
apps for your domain. Yes.

324
00:17:18.700 --> 00:17:21.610
Okay. So I found that
up, turning off the chat

325
00:17:22.150 --> 00:17:24.280
in Gmail, we'll get rid
of that error. Oh really?

326
00:17:24.280 --> 00:17:27.720
Cause I don't really, the
chat widget is in, is

327
00:17:27.720 --> 00:17:30.970
insecure while Gmail is secure.
Really. So if they go

328
00:17:30.970 --> 00:17:32.470
to the scroll of the
very, very bottom of the

329
00:17:32.470 --> 00:17:35.890
browser, it's says standard standard
without chatting. That's what I

330
00:17:35.890 --> 00:17:39.430
do. If I go to
standard view, which is not

331
00:17:39.430 --> 00:17:42.370
the Ajax view, that's the
only way that I can

332
00:17:42.370 --> 00:17:45.190
do that. And then after
hitting standard, I can go

333
00:17:45.190 --> 00:17:48.820
back to the, or if
I go to simple, basic

334
00:17:48.840 --> 00:17:52.680
HTML view rather, and then
back to standard view, that's

335
00:17:52.680 --> 00:17:54.300
the only way I can
get around it. Try the,

336
00:17:54.380 --> 00:17:57.620
The, the, the standard view,
the Ajax view minus the

337
00:17:57.620 --> 00:17:59.720
chat widget. Yeah. I'm turning
off the chat. That's fine.

338
00:17:59.720 --> 00:18:02.720
See if that makes it
Interesting though, you know, Google

339
00:18:02.720 --> 00:18:06.890
is seen as this, you
know, perfect, simple little application

340
00:18:06.890 --> 00:18:10.790
that all the magic happens
on the backend and we

341
00:18:10.790 --> 00:18:14.000
don't realize they're their company
like everybody else. Well, I

342
00:18:14.000 --> 00:18:16.970
think with their own problems,
It's, it's interesting, you know,

343
00:18:16.970 --> 00:18:20.540
Microsoft certainly got its problems
and I know them as

344
00:18:20.540 --> 00:18:23.360
much as anybody, but I
have noticed in the last

345
00:18:23.360 --> 00:18:26.480
six months, Google and Apple
kind of the shyness come

346
00:18:26.480 --> 00:18:29.000
off. Yeah. I'm not saying
that. I'm not saying that

347
00:18:29.000 --> 00:18:31.850
in a kind of crabs
in a bucket, you know,

348
00:18:31.880 --> 00:18:33.380
Hey, they're trying to climb
out of the bucket. Let's

349
00:18:33.380 --> 00:18:35.810
jump on their back. But
what I mean is that

350
00:18:36.290 --> 00:18:39.440
writing good software is hard,
you know what happened? And

351
00:18:39.440 --> 00:18:41.360
it's just nice for people
to realize that It's hard.

352
00:18:41.390 --> 00:18:44.300
You know, what happens is
they're, they're finally getting critical

353
00:18:44.300 --> 00:18:47.150
mass, you know, the sort
of numbers of customers that

354
00:18:47.150 --> 00:18:49.640
Microsoft is used to dealing
with. And now they have

355
00:18:49.640 --> 00:18:52.640
to worry about backward compatibility
and this kind of stuff

356
00:18:52.640 --> 00:18:55.700
that Microsoft's had to deal
with forever. Sure. You know,

357
00:18:55.700 --> 00:18:58.340
this is what happens when
you have millions and millions

358
00:18:58.340 --> 00:19:01.250
and millions of customers. You
know, I have a MacBook

359
00:19:01.250 --> 00:19:03.740
pro I'm using it right
now. I think it's a

360
00:19:03.740 --> 00:19:10.160
great, wonderful well-designed beautiful machine,
but it crashes regularly. And

361
00:19:10.160 --> 00:19:11.750
I've got a Mac book
Pro I've also got a

362
00:19:11.750 --> 00:19:15.160
Mac mini. The wife uses
the Mac regularly to, to,

363
00:19:15.310 --> 00:19:17.450
to browse. I think of
the Mac is my couch

364
00:19:17.450 --> 00:19:19.790
computer. That's the machine that's
next to the couch, grab

365
00:19:19.790 --> 00:19:22.280
it, you know, Safari crashes
all the time. It does,

366
00:19:22.280 --> 00:19:25.610
you know, bad plugins or
bad plugins browsers crash. Well,

367
00:19:25.610 --> 00:19:27.530
I think a lot of
windows people have sort of

368
00:19:27.530 --> 00:19:29.600
bought into the hype from
the other side that, Oh,

369
00:19:29.600 --> 00:19:32.510
max are these perfect things
that never crashed, never have

370
00:19:32.510 --> 00:19:34.850
viruses and never have bugs
and everything. I mean, that's

371
00:19:34.850 --> 00:19:37.490
what you would think from
this freaking commercials. You know,

372
00:19:37.630 --> 00:19:40.160
you, the only way that
you can really get educated

373
00:19:40.160 --> 00:19:42.250
about this is to try
different operating systems. Right. And

374
00:19:42.250 --> 00:19:44.480
that's why I've got an,
a boon to machine, you

375
00:19:44.480 --> 00:19:46.460
know, and what's great about
the Buendia machine was what's

376
00:19:46.460 --> 00:19:49.160
so funny about it is
that the shell will crash,

377
00:19:49.190 --> 00:19:52.850
right? Like normal crash, like
the, the, the, the Explorer

378
00:19:52.850 --> 00:19:56.150
equivalent, but the, you know,
the Colonel never dies. Right.

379
00:19:56.180 --> 00:19:58.280
Cause you just, you know,
the machines going, you can

380
00:19:58.280 --> 00:20:00.950
see the hard drive going,
but you destroy the UI.

381
00:20:00.950 --> 00:20:02.630
The X server is shut
down and you're back at

382
00:20:02.630 --> 00:20:06.380
the command line. Yeah. But
Hey, we digress. Yeah. Is

383
00:20:06.380 --> 00:20:08.210
like that too, you know,
explore will crash and Vista

384
00:20:08.210 --> 00:20:11.420
will just keep going forever
Quick. Great feature that I

385
00:20:11.420 --> 00:20:16.730
love about 3.5 service pack.
One JavaScript, IntelliSense. Yeah. Dude,

386
00:20:16.730 --> 00:20:18.800
this is huge. This is
huge. This is inside of

387
00:20:18.800 --> 00:20:23.630
visual studio. Yeah. Yeah. One
of the things that Scott,

388
00:20:23.660 --> 00:20:25.160
this is like, I think
this is Scott goos, most

389
00:20:25.160 --> 00:20:28.370
favorite new feature because he
talks about this one constantly,

390
00:20:29.120 --> 00:20:31.850
but this is the idea
that you can annotate your

391
00:20:31.850 --> 00:20:36.350
Java script with enough information
that it's, it's able to

392
00:20:36.350 --> 00:20:40.250
give you really, really smart
IntelliSense and it'll work on

393
00:20:40.250 --> 00:20:45.140
jQuery on prototypes, Scriptaculous UX,
TJs, all that stuff. That's

394
00:20:45.140 --> 00:20:49.210
awesome. And particularly for, for
J query, I think that

395
00:20:49.240 --> 00:20:52.720
a cer visual studio service
pack one really makes a

396
00:20:52.750 --> 00:20:56.610
jQuery, a joy For anybody.
Who's not using a XML

397
00:20:56.610 --> 00:21:00.480
literals. Oh yeah. And the
whole, yeah. Well, there's also

398
00:21:00.480 --> 00:21:02.580
some other stuff that's going
to deep inside of visual

399
00:21:02.580 --> 00:21:05.160
studio. That's subtle, but it's
the kind of things that

400
00:21:05.160 --> 00:21:08.010
people care about. Like if
you go tools, options, and

401
00:21:08.010 --> 00:21:10.590
go under the text editor,
there's a whole new section

402
00:21:10.620 --> 00:21:14.700
under formatting that can, you
can basically set your preferences

403
00:21:14.700 --> 00:21:17.160
for how you want your
Java script formatted much. Like

404
00:21:17.160 --> 00:21:19.650
you want your, you know,
your C sharp or your

405
00:21:19.650 --> 00:21:22.860
VB formatted. So you can
say things like, you know,

406
00:21:22.860 --> 00:21:25.620
I want a completed block
when I close a curly

407
00:21:25.620 --> 00:21:28.620
brace or make spaces after
common. Delimiters, you know, all

408
00:21:28.620 --> 00:21:31.380
the kind of stuff that
once you have a page

409
00:21:31.380 --> 00:21:33.570
or two of code, you'd
like it to be tidy.

410
00:21:33.840 --> 00:21:35.790
Yeah. And you'd like to
be able to say, this

411
00:21:35.790 --> 00:21:40.890
is how I want my
stuff formatted. It's buried. I

412
00:21:40.890 --> 00:21:43.500
mean, it's inside the depths,
but for people who care

413
00:21:43.500 --> 00:21:46.230
about that stuff, it's cool
that they're still paying attention.

414
00:21:46.230 --> 00:21:48.330
You know, There's a lot
of things we haven't talked

415
00:21:48.330 --> 00:21:52.920
about. The WPF and visual
designer improvements. Yeah. Very cool

416
00:21:52.920 --> 00:21:57.360
stuff. Like a, a writeable
bitmap that enables real time

417
00:21:57.360 --> 00:22:01.130
bitmap updates from a software
surface. Very cool stuff. Yeah.

418
00:22:01.500 --> 00:22:04.620
I mean, I'm not a
WPF expert, but there's some

419
00:22:04.620 --> 00:22:10.170
very cool features in there.
There's that hardware acceleration stuff

420
00:22:10.170 --> 00:22:13.620
that the effect In WPF,
there's this notion of, of,

421
00:22:14.370 --> 00:22:18.750
of capabilities tiers, basically how
much of the WPF stuff,

422
00:22:18.750 --> 00:22:22.260
can we push up into
the, the hardware? Yeah. And

423
00:22:22.320 --> 00:22:25.080
like, for example, there was
a feature called bitmap effects.

424
00:22:25.140 --> 00:22:27.960
That was a way to
do things like glow Blurring

425
00:22:27.960 --> 00:22:30.720
and drop shadowing. You know,
There's a thing called shader

426
00:22:30.720 --> 00:22:34.410
effects, which is explicitly hardware
accelerated in service pack one.

427
00:22:34.500 --> 00:22:36.450
Yeah. Which is very cool.
And of course there's lots

428
00:22:36.450 --> 00:22:40.890
of CLR improvements to make
WPF and WinForms apps start

429
00:22:40.890 --> 00:22:44.700
faster from a cold start.
Yeah, that's right. Yeah. So

430
00:22:44.700 --> 00:22:48.360
you'll find that your, your
existing applications will be snappier

431
00:22:48.360 --> 00:22:50.490
because of the way that
memory is, is laid out

432
00:22:51.210 --> 00:22:54.960
Just pretty much across the
board improve the performance of,

433
00:22:55.260 --> 00:22:57.780
of applications in escalators. So
there were a number of

434
00:22:57.780 --> 00:23:01.350
CLR improvements, specifically, as I
understand it in the way

435
00:23:01.350 --> 00:23:04.980
that they laid out memory
and loading modules into memory,

436
00:23:04.980 --> 00:23:08.310
such that they could be
accessed very quickly. Very cool.

437
00:23:09.060 --> 00:23:11.700
So that's that stuff's all
new and things should feel,

438
00:23:11.700 --> 00:23:15.150
you know, 10, 15% snappier
with, depending on what you're,

439
00:23:15.210 --> 00:23:18.360
what you're trying to accomplish.
Yup. So many other more

440
00:23:18.360 --> 00:23:20.790
subtle things that are cool
of course has had they,

441
00:23:20.790 --> 00:23:24.330
they put back classic ASP,
IntelliSense. I don't know if

442
00:23:24.330 --> 00:23:26.040
you noticed that this was
gone. I didn't know this

443
00:23:26.040 --> 00:23:29.850
back. I haven't done any
classic KSP well, it disappeared

444
00:23:30.000 --> 00:23:37.260
in 2008 and people freaked
out. So it's back and

445
00:23:37.260 --> 00:23:39.990
you can get ASP net
as you mean regular classic

446
00:23:39.990 --> 00:23:43.320
ASP IntelliSense rather. And as
well as debugging, they, they

447
00:23:43.320 --> 00:23:47.060
basically incorrectly assume that people
weren't using classic ASP, which

448
00:23:47.060 --> 00:23:48.730
is a huge, Huge mistake.
I know there's a new

449
00:23:48.730 --> 00:23:52.300
ribbon control like office 2007
ribbon, which by the way,

450
00:23:52.660 --> 00:23:54.790
I really love, and it
didn't take long for me

451
00:23:54.790 --> 00:23:56.740
to figure it out. I,
you know, I was a

452
00:23:56.740 --> 00:23:59.090
little skeptical of the ribbon
at first and now I

453
00:23:59.090 --> 00:24:01.750
just totally love it. It's
a nice segue. I was

454
00:24:01.750 --> 00:24:05.050
very smooth directly from classic
ASP into the future. It

455
00:24:05.050 --> 00:24:07.450
was in control. It was
no, I will. I will

456
00:24:07.450 --> 00:24:10.930
segue from there even more,
even more comfortably to a

457
00:24:10.930 --> 00:24:14.020
script combining, have you seen
the JavaScript script combining? No.

458
00:24:14.020 --> 00:24:17.140
Tell me, so if you've
got a, an application, that's

459
00:24:17.140 --> 00:24:20.770
got like a pile of
JavaScripts, just, you know, one

460
00:24:20.770 --> 00:24:23.440
after the other, after the
other that can turn into

461
00:24:24.190 --> 00:24:28.780
a lot of script source
equals a lot of HTP

462
00:24:28.780 --> 00:24:30.910
calls back to the server.
There's a thing called the

463
00:24:30.910 --> 00:24:34.450
composite script element. Okay. It
sits on script manager and

464
00:24:34.450 --> 00:24:36.400
it basically lets you put
a bunch of script, reference,

465
00:24:36.430 --> 00:24:40.390
script references inside it, and
then they get combined on

466
00:24:40.390 --> 00:24:44.020
the server and then you
get a single script surfed

467
00:24:44.020 --> 00:24:47.050
back to the client. So
you have fewer requests to

468
00:24:47.050 --> 00:24:50.350
the server. So is it
about that as it'll actually

469
00:24:50.350 --> 00:24:53.620
work with, with both with
JavaScript, that's on the disk

470
00:24:54.070 --> 00:24:57.160
as well as JavaScript that's
in a, a resource. I

471
00:24:57.160 --> 00:24:59.170
think it puts it all
in one JS file. Is

472
00:24:59.170 --> 00:25:03.640
that what It, it, it,
dynamically composites combines the scripts

473
00:25:03.640 --> 00:25:06.610
into one file and serves
you just the one. Well,

474
00:25:06.610 --> 00:25:09.100
that's good. Yeah. It's pretty
sweet. Like on my side,

475
00:25:09.100 --> 00:25:11.800
gosh, I've probably got seven
or eight, right? Yeah. You

476
00:25:11.800 --> 00:25:13.900
can combine them all into
one script. So, you know,

477
00:25:13.900 --> 00:25:15.370
this is the kind of
thing that you would do

478
00:25:16.180 --> 00:25:18.760
a, you know, sparingly in
the sense of, you want

479
00:25:18.760 --> 00:25:20.200
to make sure you wouldn't
just do it Willy nilly,

480
00:25:20.200 --> 00:25:23.200
you would want to decide
which scripts that would be

481
00:25:23.200 --> 00:25:26.440
appropriate for. Yeah. But it's
just little stuff like that.

482
00:25:26.440 --> 00:25:28.540
So there's a lot of
tightening the screws, which I

483
00:25:28.540 --> 00:25:31.750
think is cool. So before
we end the show, I

484
00:25:31.750 --> 00:25:34.420
just want to say that
I've been using Vista 64

485
00:25:34.420 --> 00:25:39.130
bit on a, on another
laptop now for a good

486
00:25:39.130 --> 00:25:42.430
four months. Good, good. I
finally got you hardcore in

487
00:25:42.430 --> 00:25:47.290
the 64. Well, I just,
I can't find anything bad

488
00:25:47.290 --> 00:25:50.920
about this computer or this
operating system So much more

489
00:25:50.920 --> 00:25:53.680
stable. It's just, I've got
my son never crashes. It

490
00:25:53.680 --> 00:25:55.990
never crashes. It just sits
there. If, once you've got

491
00:25:55.990 --> 00:25:58.990
solid drivers, if you're having
a problem in my experience

492
00:25:58.990 --> 00:26:02.260
with this the 64 bit,
it's either a that you're

493
00:26:02.260 --> 00:26:06.310
having a bad disc drivers
or bad video drivers. Once

494
00:26:06.310 --> 00:26:08.350
you get that solid, it
just sets it just right.

495
00:26:08.800 --> 00:26:11.800
It totally rocks. Yeah. Yeah.
64 bit is a really

496
00:26:11.800 --> 00:26:13.870
nice place to be very
happy with that. We've done

497
00:26:13.870 --> 00:26:16.360
a 64 bit show. We
should do one about getting

498
00:26:16.360 --> 00:26:20.650
32 bit applications to run
debugging.net applications on 64 bit

499
00:26:20.650 --> 00:26:22.900
and all that kind of
stuff. We haven't because a

500
00:26:22.900 --> 00:26:24.460
lot of people email me
that they hear that I'm

501
00:26:24.460 --> 00:26:26.920
running 64 bit and I'll
say, you know, I'd like

502
00:26:26.920 --> 00:26:29.140
to upgrade to 64 bit,
but I really don't know.

503
00:26:29.170 --> 00:26:31.000
Should I do that? Can
I still make 32 bit

504
00:26:31.000 --> 00:26:34.420
applications? What about visual studio?
Is there a 64 bit

505
00:26:34.420 --> 00:26:37.480
version, you know, explaining all
that would be a really

506
00:26:37.480 --> 00:26:41.260
good show. Okay, cool. I
also, you know, I run

507
00:26:41.290 --> 00:26:46.080
every operating system here and
to windows 2000, I think,

508
00:26:46.080 --> 00:26:48.330
I think I have a
machine still running windows 2000

509
00:26:48.330 --> 00:26:51.750
somewhere, but I have XP
on a few machines. I've

510
00:26:51.750 --> 00:26:54.570
got server 2003 on a
couple of servers. I've got

511
00:26:54.960 --> 00:26:58.470
Vista 64 bit on a
laptop. I have a XP

512
00:26:58.470 --> 00:27:03.120
in parallels on my Mac,
my Mac book. I have

513
00:27:04.470 --> 00:27:09.270
actually server 2008 running as
a workstation. And that is

514
00:27:09.270 --> 00:27:12.860
pretty amazing. Have you done
a show on that? No,

515
00:27:12.860 --> 00:27:16.490
I haven't. Actually someone accused
me recently of talking about

516
00:27:16.490 --> 00:27:19.550
doing shows in the future
and then forgetting no. And

517
00:27:19.550 --> 00:27:21.080
someone said I should go
back and look at our

518
00:27:21.080 --> 00:27:23.210
transcripts and search for it.
Yeah. Let's do a show

519
00:27:23.210 --> 00:27:26.630
on that and then promise
to do all those shows

520
00:27:26.840 --> 00:27:29.630
so we should get our
transcript gnomes. Well, that's good.

521
00:27:29.630 --> 00:27:32.390
That's a good one. That's
a very good show. I'm

522
00:27:32.510 --> 00:27:36.020
I'm very happy with it.
You know, because server 2008

523
00:27:36.020 --> 00:27:39.530
is essentially the Vista Corps
and running as a 64

524
00:27:39.530 --> 00:27:42.020
bit machine, you can do
the tweaks to sort of

525
00:27:42.020 --> 00:27:45.260
make it really shine as
a workstation. Yeah. One of

526
00:27:45.260 --> 00:27:46.610
these machines, one of these
days, I'm gonna have to

527
00:27:46.610 --> 00:27:48.200
take one of my machines
and just, and try the

528
00:27:48.200 --> 00:27:51.710
wind, the wind 2008 workstation
Arrow. I mean, I have

529
00:27:51.710 --> 00:27:54.110
arrow, I have all the
features that I have Invista

530
00:27:54.170 --> 00:27:58.220
all the glass, all the
glass and somebody did some

531
00:27:58.220 --> 00:28:00.920
benchmarks on it that says
that it runs faster to

532
00:28:01.580 --> 00:28:07.760
like 17, 17, 18% faster.
But you do, there are

533
00:28:07.910 --> 00:28:11.840
obviously some things that you
don't get that, but, but

534
00:28:11.840 --> 00:28:14.450
I don't need them. So
it worked out really well.

535
00:28:15.140 --> 00:28:17.090
Alright. Alright, Scott, I think
that's a show. Don't you

536
00:28:17.090 --> 00:28:19.570
think? I think so. There's,
there's lots of talk about,

537
00:28:19.580 --> 00:28:21.200
but I would encourage people
to check it out. Oh.

538
00:28:21.200 --> 00:28:23.060
And I wanted to introduce
a website that I made.

539
00:28:23.300 --> 00:28:25.010
I'm still working on it.
It's not quite there yet,

540
00:28:25.010 --> 00:28:31.370
but if you go to
a www.smallest.net.com, have you seen

541
00:28:31.370 --> 00:28:34.460
this? No. You got a
browser? Yeah. Check it out.

542
00:28:35.300 --> 00:28:41.900
Smallest.net.com. I'll spell it out.
Dot net. Oh, okay. So

543
00:28:41.900 --> 00:28:45.950
smallest D O T T
E N t.com. Get the

544
00:28:45.950 --> 00:28:50.360
smallest.net framework. Download possible. Yeah.
Yeah. So this is a

545
00:28:50.360 --> 00:28:53.240
little little one page application.
It does one thing. It

546
00:28:53.240 --> 00:28:56.180
looks at your user agent
and your OSHC and what

547
00:28:56.180 --> 00:28:58.280
version of your ass and
your business and all that

548
00:28:58.280 --> 00:29:00.920
and says here's about what
we think it would take

549
00:29:00.920 --> 00:29:03.320
to get you up to
three, five S P one.

550
00:29:03.800 --> 00:29:05.570
Well, I'm using a Mac,
but you know, I also

551
00:29:05.570 --> 00:29:08.540
have, so what does it
say? Actually it says, it

552
00:29:08.540 --> 00:29:11.180
looks like you're running a
Mac. There's no dotnet framework

553
00:29:11.180 --> 00:29:13.640
download from Microsoft for the
Mac, but you might check

554
00:29:13.640 --> 00:29:16.520
out either silver light, which
is a browser plugin. That

555
00:29:16.520 --> 00:29:19.370
includes a small version of
the.net framework. You could also

556
00:29:19.370 --> 00:29:21.890
check out mano, which is
the open source platform that

557
00:29:21.890 --> 00:29:24.230
could run.net on a Mac.
Very cool. So let me

558
00:29:24.230 --> 00:29:27.620
run with internet Explorer though.
Cause I am running parallels

559
00:29:27.620 --> 00:29:29.300
and I can run them
side by side. Okay, good.

560
00:29:29.300 --> 00:29:31.380
So we'll see what your
Mac with the VM of

561
00:29:31.580 --> 00:29:34.790
Vista inside your Mac is
doing Www and this is

562
00:29:34.790 --> 00:29:40.700
XP by the way, XP.
Okay. WW small list. D

563
00:29:40.700 --> 00:29:43.030
O T if there's a
lot Of people who think

564
00:29:43.030 --> 00:29:48.130
that the.net framework itself is
like a 250 Meg thing.

565
00:29:48.610 --> 00:29:51.400
Right. You know? And it's
just, it's just not it's

566
00:29:51.400 --> 00:29:55.570
somewhere between 10 and 60
megs, sometimes 80, depending on

567
00:29:55.570 --> 00:29:58.390
what kind of pre-recs you've
already got. So this says,

568
00:29:58.420 --> 00:30:00.760
I can't tell if you've
got dotnet installed, perhaps you

569
00:30:00.760 --> 00:30:04.150
don't have.net installed or perhaps
your browser. Isn't letting me

570
00:30:04.150 --> 00:30:07.510
know this is internet Explorer.
Yeah. Internet Explorer. But it's

571
00:30:07.510 --> 00:30:10.750
running parallel to the very,
very bottom. Okay. And look

572
00:30:10.750 --> 00:30:12.250
at the user agent at
the very bottom of the

573
00:30:12.250 --> 00:30:17.410
page. It's Mozilla 4.0 compatible
MSI six Oh windows NT

574
00:30:17.950 --> 00:30:22.570
five one S V one.
So this is an XP.

575
00:30:22.810 --> 00:30:25.810
You don't have <inaudible> and
you put, it looks like

576
00:30:25.810 --> 00:30:28.120
you don't have dotnet this
little HP machine. That's right.

577
00:30:28.600 --> 00:30:31.000
Alright. There you go. And
there's what the reason is.

578
00:30:31.000 --> 00:30:34.840
The reason is because windows
update does not work on

579
00:30:34.840 --> 00:30:39.040
my parallels installation of XP
scandalous. It will not install

580
00:30:39.040 --> 00:30:41.560
any updates. Well, that's a
whole other show right there.

581
00:30:43.420 --> 00:30:48.550
Yeah. Run a Mac. It's
awesome. Never crashes, no problems.

582
00:30:49.600 --> 00:30:53.110
Alright. Okay, Scott, have a
good one. Give the best

583
00:30:53.110 --> 00:30:56.200
to the family. Alright. And
I will talk to you

584
00:30:56.200 --> 00:30:57.700
guys next week on Hanselman's.

