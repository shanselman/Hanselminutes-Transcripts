WEBVTT FILE

1
00:00:12.150 --> 00:00:17.280
From hanselminutes.com. It's Hanselman. It's
our weekly discussion with web

2
00:00:17.280 --> 00:00:22.050
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.050 --> 00:00:28.230
number two 97. Recorded live
Thursday, December 15th, 2011. Support for Hansel

4
00:00:28.230 --> 00:00:31.890
minutes is provided by Telerik
rad controls, the most comprehensive

5
00:00:31.890 --> 00:00:35.490
suite of components for windows
forms and asp.net web applications

6
00:00:36.060 --> 00:00:43.320
online@wwwdottelerik.com. In this episode of
the framework series has got

7
00:00:43.320 --> 00:00:47.220
talks with Apple stylist, Becky
Aras from Navix breaths about

8
00:00:47.280 --> 00:00:52.580
the expand framework. Hi, this
is Scott Hanselman. This is

9
00:00:52.580 --> 00:00:58.250
another episode of Hansel minutes
today. He's going to be

10
00:00:58.250 --> 00:01:01.520
talking to me about the
expand framework. It's an open

11
00:01:01.520 --> 00:01:04.130
source project and it will
be part of the ongoing

12
00:01:04.250 --> 00:01:20.720
framework series. Yeah. Hi, how's
it going? Hi, you created

13
00:01:20.720 --> 00:01:23.570
this kind of on your
own before you worked for

14
00:01:23.570 --> 00:01:29.150
dev express, is that correct?
Yeah, it was at the

15
00:01:29.150 --> 00:01:37.280
beginning and it went well,
although I wasn't much of

16
00:01:37.280 --> 00:01:43.820
a fan of open source
projects at the beginning, I

17
00:01:43.820 --> 00:01:56.660
was, I believe that the
power that we gave such

18
00:01:56.660 --> 00:02:04.430
projects that why were you
not a fan? And what

19
00:02:04.430 --> 00:02:07.300
was it that took you
to change your mind and

20
00:02:07.310 --> 00:02:12.530
realize that the framework was
better off opensource? I believe

21
00:02:12.530 --> 00:02:27.490
that they think that shouting
their efforts for free, however,

22
00:02:27.610 --> 00:02:36.260
is not the case because
most of us freelance developers

23
00:02:37.010 --> 00:02:46.070
always are changing, changing, changing,
changing the way get paid,

24
00:02:47.810 --> 00:02:58.370
even if they work, eh,
eh, eh, eh, they get

25
00:02:58.370 --> 00:03:03.970
this from the pastor and
the dishes, nothing. If they

26
00:03:03.970 --> 00:03:10.510
tried to publicize their work
automatically dish published, it gives

27
00:03:10.510 --> 00:03:18.310
them the value they want
for data, eh, war. And

28
00:03:18.700 --> 00:03:24.850
at least from my experience,
there will be a raise

29
00:03:24.850 --> 00:03:28.740
in a salary. Why were
you initially not a fan

30
00:03:28.740 --> 00:03:31.170
of open source? And when
you created this framework, did

31
00:03:31.170 --> 00:03:34.050
you do it a closed
source and then change your

32
00:03:34.050 --> 00:03:39.270
mind and then open it
up? No, initially I wasn't

33
00:03:39.270 --> 00:03:42.900
afraid. I was afraid that
I would spend too much

34
00:03:42.990 --> 00:03:48.370
of my time and I
wouldn't see that awards. I

35
00:03:48.370 --> 00:03:53.580
couldn't see them at the
time, but after I started

36
00:03:53.880 --> 00:03:58.530
initially I started with a
blog and I was a

37
00:03:58.530 --> 00:04:05.040
freelance lag, like most of
her development shelf that, so

38
00:04:05.700 --> 00:04:09.600
I was changing projects and
the friend told me, Hey,

39
00:04:10.200 --> 00:04:14.520
why don't you try blogging
and expose your ideas to

40
00:04:14.520 --> 00:04:19.980
the party that draw attention
to your ideas. And this

41
00:04:19.980 --> 00:04:24.000
is what I did. And
I was amazed how fast

42
00:04:24.210 --> 00:04:30.690
this blow became popular. And
eh, I was also amazed

43
00:04:30.870 --> 00:04:37.030
about the strong bond that
I Greg with my, eh,

44
00:04:38.330 --> 00:04:47.670
eh, eh, eh, eh, I
decided to that the decide

45
00:04:48.390 --> 00:04:56.610
framework and eventually built this
framework with better support. This

46
00:04:56.610 --> 00:05:01.170
is how we started. I
said, I found if you

47
00:05:01.920 --> 00:05:07.920
like mine, like mine, guys,
everything seemed to follow to

48
00:05:07.920 --> 00:05:14.250
a place that had the
next shape, the best 10

49
00:05:14.250 --> 00:05:20.220
blogs or something after that.
And I helped them and

50
00:05:20.220 --> 00:05:26.010
we have a very healthy
collaboration right now. One of

51
00:05:26.010 --> 00:05:28.140
the things that I think
is interesting about this particular

52
00:05:28.140 --> 00:05:31.470
framework, and in fact, we're
going to talk to the

53
00:05:31.470 --> 00:05:34.140
Tellerik guys next week about
a framework that they did

54
00:05:34.140 --> 00:05:37.830
is that expand framework is
built on the dev express

55
00:05:39.090 --> 00:05:41.580
X a F framework. So
this is an open source

56
00:05:41.580 --> 00:05:45.780
framework that's built on top
of another framework. Does the

57
00:05:45.900 --> 00:05:48.450
dev express framework cost money?
And then you have an

58
00:05:48.480 --> 00:05:51.210
open source framework that's built
on top of a framework

59
00:05:51.210 --> 00:05:55.580
that costs money. Is that
how that works? Exactly. Yes.

60
00:05:55.590 --> 00:06:01.580
Dev expresses a convention as
everybody knows, but expound framework

61
00:06:01.730 --> 00:06:05.840
is open source and the
tree and the problem that

62
00:06:06.140 --> 00:06:10.310
most of people have with
open shores is that it's

63
00:06:10.310 --> 00:06:15.770
very obese. They cannot trust
open shores because they say,

64
00:06:16.100 --> 00:06:19.210
okay, this is a guy
smart guy. And the builds

65
00:06:19.220 --> 00:06:23.750
up. What if something happens
to this guy? What, how

66
00:06:23.750 --> 00:06:29.240
can we follow this guy?
How she develops the point

67
00:06:29.240 --> 00:06:34.550
with is that it's not
my effort. We are, eh,

68
00:06:34.940 --> 00:06:40.850
eh, we've built a framework
<inaudible> framework. That means that

69
00:06:41.450 --> 00:06:46.460
we have a documentation and
well documented, eh, eh, dev

70
00:06:46.460 --> 00:06:51.380
express framework. We all read
this documentation. And from the

71
00:06:51.380 --> 00:06:56.990
entry points that the XAF
is called the dev express

72
00:06:56.990 --> 00:07:02.090
framework that we are based
upon from the victimization. It's

73
00:07:02.210 --> 00:07:07.460
very easy to put, extends
the framework. And if we

74
00:07:07.460 --> 00:07:12.500
have problems or bugs or
onshore onshore stuff, we cannot

75
00:07:12.760 --> 00:07:17.840
rely to dev express support
center, which is the best

76
00:07:18.110 --> 00:07:21.860
Shabbat there in the market
right now. So he's used

77
00:07:21.860 --> 00:07:26.570
to rely on experience instead
if I compare it with

78
00:07:26.570 --> 00:07:33.550
the other framework, here's my
point. Okay. And how do

79
00:07:33.550 --> 00:07:38.560
you control what you think
belongs in your framework versus

80
00:07:38.560 --> 00:07:40.660
what should be in the
commercial part of the framework?

81
00:07:40.660 --> 00:07:43.750
Because what's interesting about this
is that you started the

82
00:07:43.750 --> 00:07:45.940
project it's led by you
and there's other people in

83
00:07:45.940 --> 00:07:48.250
the community that work on
it with you. You did

84
00:07:48.250 --> 00:07:53.920
this community, you did this
project yourself without dev express.

85
00:07:53.950 --> 00:07:56.500
Then you ended up going
to work for dev express

86
00:07:57.910 --> 00:08:02.350
as an evangelist. How do
you decide and keep separate

87
00:08:02.350 --> 00:08:04.750
what goes in your open
source version of this and

88
00:08:04.750 --> 00:08:09.700
what goes in the product?
Yes, sure. This shit, the

89
00:08:09.700 --> 00:08:14.710
thing is that dev express
is a mentor for development.

90
00:08:15.610 --> 00:08:19.480
On the other side, we
are developers that we are

91
00:08:19.540 --> 00:08:26.350
building software for our facelifts.
Now XAF is the base

92
00:08:26.350 --> 00:08:32.890
framework, expand our framework, extend
this. Now we build software

93
00:08:32.920 --> 00:08:36.730
for the business. So we
let's say we have a,

94
00:08:38.030 --> 00:08:44.800
a business that targets doctors.
So we built this set

95
00:08:44.800 --> 00:08:48.850
of features for doctors. It's
very easy to go to

96
00:08:48.850 --> 00:08:54.430
the modularized architecture of the
framework to shop, meet that.

97
00:08:54.430 --> 00:09:00.570
And for the making our
work more testable from other

98
00:09:00.570 --> 00:09:06.090
users. And at the end,
we do not share the

99
00:09:06.090 --> 00:09:09.540
shale market. For example, I
live in Greece, I sell

100
00:09:09.540 --> 00:09:12.960
myself, but here I could
for a job or build

101
00:09:13.350 --> 00:09:20.100
a module, <inaudible> test it.
Usually make it my truth

102
00:09:20.130 --> 00:09:26.460
for me, my customers want
a complain about anything because

103
00:09:27.060 --> 00:09:30.420
the work is going to
be distributing through the show.

104
00:09:30.420 --> 00:09:34.950
It's more about expands. It's
more about the business use

105
00:09:35.160 --> 00:09:39.450
and not about development, like
they've expressed support. So there

106
00:09:39.450 --> 00:09:43.620
is no, it's rare to
have a phone with that

107
00:09:43.620 --> 00:09:48.540
express. And even if in
the situation we have a

108
00:09:48.540 --> 00:09:55.590
phone fleet and a shade
that we rely to dev

109
00:09:55.590 --> 00:10:03.660
express very <inaudible> hours, which
is how it works. I

110
00:10:03.660 --> 00:10:06.350
felt that make sense. Yeah,
I think so. How many

111
00:10:06.350 --> 00:10:09.050
times have you made something
in the open source project

112
00:10:09.680 --> 00:10:12.770
and then had the business
approached you and said, this

113
00:10:12.770 --> 00:10:15.320
is really useful. I want
to make this part of

114
00:10:15.320 --> 00:10:17.390
the, the core framework and
how do you, how do

115
00:10:17.390 --> 00:10:19.400
you manage that? And the
reason I ask is that

116
00:10:20.270 --> 00:10:23.600
this happens a lot at
Microsoft where someone will be

117
00:10:23.600 --> 00:10:27.740
working on a project that
is their main project there,

118
00:10:27.860 --> 00:10:31.550
it's their day job. And
then they'll have a thing

119
00:10:31.550 --> 00:10:34.190
that they're doing on the
side. There's lots and lots

120
00:10:34.190 --> 00:10:36.950
of examples of Microsoft employees
that do one thing in

121
00:10:36.950 --> 00:10:39.050
the daytime and then do
an open source project at

122
00:10:39.050 --> 00:10:42.200
night. And then every once
in a while their boss

123
00:10:42.200 --> 00:10:45.260
or someone will hear about
this project they're doing at

124
00:10:45.260 --> 00:10:47.300
night and say, wow, we
need to, we need to

125
00:10:47.300 --> 00:10:50.510
use this. If you look
at like signal are from

126
00:10:50.510 --> 00:10:54.920
Damien Edwards and David Fowler or
knockout from Steven Sanderson or

127
00:10:54.920 --> 00:10:57.200
the wicks framework, I mean,
the list goes on and

128
00:10:57.200 --> 00:11:01.250
on. How do you manage
deciding how you want to

129
00:11:01.250 --> 00:11:04.970
move things over and keeping
your job and your open

130
00:11:04.970 --> 00:11:13.310
source. And this is more
about having, it's not my

131
00:11:13.310 --> 00:11:18.800
decision to manage things. So
if Shabbat has a full

132
00:11:18.800 --> 00:11:22.340
module, that's a task for
a job or some kinds

133
00:11:22.340 --> 00:11:28.490
of action, she can easily
contribute to the framework. So

134
00:11:29.090 --> 00:11:32.540
the feedback from the community
is going through the project

135
00:11:32.930 --> 00:11:37.460
and she's more junior and
eventually dev express that is

136
00:11:37.640 --> 00:11:42.350
only all the community takes
the decision and say, yes,

137
00:11:42.380 --> 00:11:46.250
we want to build this
module in our brain and

138
00:11:46.250 --> 00:11:52.190
high quality way of building
staffs, which is how it

139
00:11:52.190 --> 00:11:56.290
works for us. And have
you had them take modules?

140
00:11:56.320 --> 00:11:58.870
Have you had them take
source from your open source

141
00:11:58.870 --> 00:12:01.630
framework and move it into
commercial or have you had

142
00:12:01.630 --> 00:12:05.380
them change it? Because sometimes
I've seen companies take an

143
00:12:05.380 --> 00:12:10.030
open source, beat piece of
code and then rewrite it

144
00:12:10.030 --> 00:12:12.700
entirely from scratch. They liked
the functionality, but they ended

145
00:12:12.700 --> 00:12:16.270
up rewriting it. And, and
then other times I've seen

146
00:12:16.270 --> 00:12:20.290
people actually just reference the
open source library and support

147
00:12:20.290 --> 00:12:24.160
it. You've heard people tease
Microsoft about the term embrace

148
00:12:24.160 --> 00:12:29.740
and extend. I think that
people prefer commercial companies to

149
00:12:29.740 --> 00:12:33.640
support open source and depend
on it. I wonder sometimes

150
00:12:33.670 --> 00:12:38.020
do you find a interdependency?
Do you find that your,

151
00:12:38.130 --> 00:12:40.750
your, your frameworks depend on
each other or is it

152
00:12:40.750 --> 00:12:43.480
always a matter where expand
framework sits on top of

153
00:12:43.480 --> 00:12:48.390
the commercial framework? Yeah. It's
a matter of thinking Shamblin

154
00:12:48.390 --> 00:12:54.780
time, state defense, sometimes they
know, but almost all the

155
00:12:54.780 --> 00:12:59.160
times, if the vendor in
this case of express decides

156
00:12:59.160 --> 00:13:03.780
to reimplement the feature it's
going to do exactly that

157
00:13:03.840 --> 00:13:07.530
it's going to reimplement the
feature because it has the

158
00:13:07.530 --> 00:13:14.130
vendor cost the process of
testing or ensuring quality show.

159
00:13:14.190 --> 00:13:19.080
Most of the times it's
fresh going to demand writer,

160
00:13:19.090 --> 00:13:27.300
documentation, and expand sheriffs just
as a community. And it

161
00:13:27.300 --> 00:13:32.280
also is a way for
a developer to convince they've

162
00:13:32.280 --> 00:13:36.030
expressed that a huge war
is booby enough to be

163
00:13:37.080 --> 00:13:40.770
the core framework. And as
of now, it's over the

164
00:13:40.770 --> 00:13:44.550
books, a feature. For example,
before I joined dev express,

165
00:13:44.580 --> 00:13:48.990
there were many, many times
that I had the school

166
00:13:49.000 --> 00:13:52.680
functionality and the wandering as
the go back their expression,

167
00:13:52.680 --> 00:13:56.460
say, come on, guys, put
that do sheet. It's a

168
00:13:56.520 --> 00:14:00.780
very good selection and idea,
but as you can understand

169
00:14:01.290 --> 00:14:06.030
any of that though, not
the Devic stress reject, because

170
00:14:06.180 --> 00:14:11.820
that has the quality, they
are a thing, shopper license,

171
00:14:12.150 --> 00:14:16.650
but now if you cost
it in expand and gain

172
00:14:16.650 --> 00:14:22.740
publicity and the customer base
likes the module, then it's

173
00:14:24.330 --> 00:14:28.500
no way for the events
or dev express, they have

174
00:14:28.500 --> 00:14:31.290
to implement it and they
have to document and they

175
00:14:31.290 --> 00:14:34.350
have to be an out
of the box fit you.

176
00:14:35.160 --> 00:14:37.710
Yeah. I think that the
key there of course, is

177
00:14:37.710 --> 00:14:42.870
that the commercial company has
to accept, take backs. And

178
00:14:42.870 --> 00:14:46.200
that's the thing that I
think Microsoft is struggling with.

179
00:14:46.200 --> 00:14:48.810
And I hope that we'll,
we'll fix that. There's a

180
00:14:48.810 --> 00:14:52.220
lot of examples of open
source where people have built

181
00:14:52.220 --> 00:14:55.250
on top of our things,
just exactly as you described.

182
00:14:55.490 --> 00:14:59.660
I think like MVC contrib
is a great example where

183
00:14:59.750 --> 00:15:04.190
the community has said, if
Microsoft doesn't do something the

184
00:15:04.190 --> 00:15:07.670
way that the community wants,
then we'll create a contrib

185
00:15:07.730 --> 00:15:11.060
project for that. That will
move faster than the core

186
00:15:11.060 --> 00:15:13.340
project. That's the other thing
that open source projects can

187
00:15:14.030 --> 00:15:16.550
kind of live on the
bleeding edge. So you've got

188
00:15:16.550 --> 00:15:19.820
meth contrib and MVC contrib.
It's a good way for

189
00:15:19.850 --> 00:15:23.270
community members to get recognized
and get their products use,

190
00:15:23.720 --> 00:15:28.550
but it only really ultimately
works if you can start

191
00:15:28.550 --> 00:15:33.080
pulling in those ideas and
that code and take, take

192
00:15:33.080 --> 00:15:35.870
backs into the end of
the project. And that's where

193
00:15:35.870 --> 00:15:39.440
the thing about Microsoft, that
myself and others are trying

194
00:15:39.440 --> 00:15:43.460
to change to make open
source, really open source and

195
00:15:43.460 --> 00:15:48.950
not just source opened. How,
how open has dev express

196
00:15:48.950 --> 00:15:54.250
been to actually accepting open
source into their project? And

197
00:15:54.850 --> 00:15:58.420
they are not so open
right now, but as everybody

198
00:15:59.770 --> 00:16:05.400
they are learning and that's
a good faith, eh, our

199
00:16:05.410 --> 00:16:09.780
latest release, I'm talking about
that, but it's now expanded

200
00:16:10.450 --> 00:16:14.200
in the shame menu. I'm
talking about the <inaudible>, that

201
00:16:14.200 --> 00:16:18.760
is a fault that I
love that expression, homeowners, that

202
00:16:18.760 --> 00:16:25.300
shade, extensions, so that you
can find expand and whatever

203
00:16:26.080 --> 00:16:29.260
framework is going to be
created in a future. So

204
00:16:30.040 --> 00:16:34.780
I think that I've now
been expressed, embrace the moon

205
00:16:34.790 --> 00:16:39.880
will be development. I definitely
think that dev express and

206
00:16:39.880 --> 00:16:42.880
companies like them embrace the
community, but I think that

207
00:16:42.910 --> 00:16:48.550
all companies, unless they are
self identified as an open

208
00:16:48.550 --> 00:16:54.100
source company, the struggle with
the, that last mile, the

209
00:16:54.100 --> 00:16:57.040
last mile is that moment
when you have to pull

210
00:16:57.280 --> 00:17:01.000
community code into your product
and take that, take that

211
00:17:01.000 --> 00:17:04.120
risk or deal with the
ramifications of, wow, we really

212
00:17:04.120 --> 00:17:06.730
are going to be an
open source company. Now we're

213
00:17:06.730 --> 00:17:11.050
taking commits and we're taking
pull requests. Some companies just

214
00:17:11.050 --> 00:17:12.370
do it and they don't,
they don't worry about it,

215
00:17:12.370 --> 00:17:16.060
but the commercial companies seem
to really stress out about

216
00:17:16.060 --> 00:17:19.540
that stuff. It's good that
you're going to keep pushing

217
00:17:21.100 --> 00:17:25.300
people to, to accept open
source in a more full

218
00:17:25.300 --> 00:17:28.040
way. And you have to
kind of close that, that,

219
00:17:28.040 --> 00:17:31.690
that cycle. Do you think
that you'll get them to

220
00:17:31.690 --> 00:17:37.090
change? Yeah. I believe that
if the open source project

221
00:17:37.180 --> 00:17:42.130
is successful and has a
lower, a large user base,

222
00:17:42.460 --> 00:17:51.750
then it's inevitable and that
the <inaudible> worth it. We'll

223
00:17:51.750 --> 00:17:55.740
walk through the open shore
show. It will want to

224
00:17:56.190 --> 00:18:00.000
build the same features or
even better. I think it

225
00:18:00.240 --> 00:18:05.730
comes from how successful and
how well the people collaborate

226
00:18:07.170 --> 00:18:10.100
in the project. Right, right.
Cause that's a very good

227
00:18:10.100 --> 00:18:14.000
point as well. Building an
open source framework is there's,

228
00:18:14.780 --> 00:18:19.820
there is the, the code
that you're working on and

229
00:18:19.820 --> 00:18:21.800
how good that code is,
but there's also the health

230
00:18:21.800 --> 00:18:24.410
of your community and the
health of your committers and

231
00:18:24.740 --> 00:18:27.170
whether or not you get
along well as a group,

232
00:18:27.620 --> 00:18:29.930
I can think of a
couple of projects. I won't

233
00:18:29.930 --> 00:18:35.420
name names that are great
technology, but dysfunctional groups. And

234
00:18:35.540 --> 00:18:39.100
if you can't get along
with your collaborators and, and,

235
00:18:39.110 --> 00:18:41.360
and work as a well
oiled machine, then you're not

236
00:18:41.360 --> 00:18:44.960
really have a framework. Yeah.
But believe that at the

237
00:18:44.960 --> 00:18:51.380
end, before we start our
conversation, that we had people

238
00:18:51.380 --> 00:18:57.050
work for themselves. So, eh,
for the beauty something she

239
00:18:57.050 --> 00:18:59.840
had, it's not something that
I will take the Gregg.

240
00:19:00.920 --> 00:19:03.860
If the work is good,
they will take that. For

241
00:19:03.860 --> 00:19:11.480
example, we have a <inaudible>
that now belong to the

242
00:19:11.630 --> 00:19:16.310
MVP program of the express
because of this contribute show

243
00:19:16.820 --> 00:19:24.500
show, it's all about collaboration
and teamwork. So expand framework

244
00:19:24.500 --> 00:19:27.140
has all of these modules,
and there's a long list

245
00:19:27.140 --> 00:19:31.970
of modules@expandframework.com that sit on
top of the XAF framework.

246
00:19:32.420 --> 00:19:36.590
But I'm trying to understand,
are these modules just a

247
00:19:36.590 --> 00:19:39.530
list of modules or do
they all work together? Is

248
00:19:39.530 --> 00:19:43.880
the framework a bunch of
disjointed components or does it

249
00:19:43.880 --> 00:19:49.130
all fit in, in a,
in a cohesive way? I

250
00:19:49.130 --> 00:19:52.460
will answer this first. Let
me tell you how it

251
00:19:53.750 --> 00:19:58.610
works. What is Xas? Is
that an application framework to

252
00:19:58.660 --> 00:20:03.380
express that in a highly
configurable line of business applications?

253
00:20:03.710 --> 00:20:08.120
So it has these great
modularize artifacts to, so at

254
00:20:08.120 --> 00:20:12.980
the very well documented shied
and the framework. So what

255
00:20:12.980 --> 00:20:16.520
we have to do is
to follow by the book.

256
00:20:16.760 --> 00:20:20.540
So we go through the
documentation, she how to create

257
00:20:20.540 --> 00:20:26.480
the black gate module gate.
We have the documentation would

258
00:20:26.480 --> 00:20:33.040
build the module to Xbox
framework. Other users tested this

259
00:20:33.050 --> 00:20:38.420
only everything works in it
like a fashion show that

260
00:20:38.420 --> 00:20:43.010
is known to have everything
installed. The bitch, give a

261
00:20:43.010 --> 00:20:53.560
shit very easy to show
if a module is not

262
00:20:53.560 --> 00:20:58.060
boot then within a week
or so, the community will

263
00:20:58.060 --> 00:21:02.710
reject it by giving no
value and by reporting a

264
00:21:02.710 --> 00:21:05.950
lot of facts. So it's
a very black Gabler system

265
00:21:05.950 --> 00:21:11.700
that targets both platforms. This
is how it works. Okay.

266
00:21:12.420 --> 00:21:15.150
And when you say, you
said highly configurable is the,

267
00:21:15.150 --> 00:21:17.670
is the thing that the
framework provides that is the

268
00:21:17.670 --> 00:21:21.300
most useful is that it
makes business applications more, more

269
00:21:21.300 --> 00:21:26.680
configurable, more flexible. Yeah. It's
based around a, an ambition

270
00:21:26.940 --> 00:21:34.560
then. And eh, eh, eh,
eh, I said architects are,

271
00:21:34.560 --> 00:21:40.510
so everything is described over
examined so we can, eh,

272
00:21:40.990 --> 00:21:46.230
eh, or change the behavior
of your application by just

273
00:21:46.320 --> 00:21:51.030
breathing examined at medicine loop
into your model. It's a

274
00:21:51.030 --> 00:21:57.750
very interesting architecture and it's
a very mature because actually

275
00:21:58.380 --> 00:22:01.260
right now is five years
old. And the shop that

276
00:22:03.420 --> 00:22:10.230
with the no box and
hazard shoot functionality, like people

277
00:22:10.230 --> 00:22:19.910
think reporting workflow targeting almost
16 different database systems show

278
00:22:21.720 --> 00:22:25.890
more than the work we
do as developers at Chevy

279
00:22:26.010 --> 00:22:31.080
every day, by abstracting away
the low level, a stop

280
00:22:32.580 --> 00:22:38.070
gap. We ask our developers
to build applications fast and

281
00:22:39.150 --> 00:22:44.800
grab some money out of
that. This is what <inaudible>

282
00:22:44.970 --> 00:22:49.350
by just providing a domain
model. And when I'm talking

283
00:22:49.350 --> 00:22:53.520
about domain more than about
adopts or the main model

284
00:22:53.880 --> 00:22:59.730
by Jasper by shut off
interfaces, it is possible for

285
00:22:59.820 --> 00:23:06.690
XJS to create scaffolds using
all the components of <inaudible>.

286
00:23:07.730 --> 00:23:12.120
And we're talking about COVID
promoted and creates a face

287
00:23:12.150 --> 00:23:15.150
for the group. And there
is a more than that.

288
00:23:15.180 --> 00:23:23.700
You can, eh, <inaudible> this
is XAF in Knutsen. Now

289
00:23:24.030 --> 00:23:29.820
what expands does, it's fun
apps, ideas and frameworks using

290
00:23:29.820 --> 00:23:34.980
the technology provided by access
SAS, user interfaces out of

291
00:23:34.980 --> 00:23:39.330
a model. So let's talk
about a module of expands.

292
00:23:40.260 --> 00:23:44.820
A module of expanding is
the word creator as the

293
00:23:44.820 --> 00:23:51.800
name. So what do we
have, do we have, we

294
00:23:51.800 --> 00:23:59.270
did that. And we took
the structure of ownership <inaudible>

295
00:24:00.980 --> 00:24:05.270
properties. And we take classes
out of that class is

296
00:24:05.280 --> 00:24:09.970
not say I sent in
the class name. This is

297
00:24:09.980 --> 00:24:14.270
a white picture in order
to provide the user interface

298
00:24:14.270 --> 00:24:19.670
show. Now we have a
user interface that the end

299
00:24:19.670 --> 00:24:23.510
user, the business user can
use it to create more

300
00:24:23.510 --> 00:24:28.490
classes and properties and fast
changing that domain mode. Then

301
00:24:30.200 --> 00:24:33.980
this is a beautiful tool,
and this is what ever

302
00:24:33.980 --> 00:24:37.910
the developer groups, because we
usually go to the client.

303
00:24:38.300 --> 00:24:41.330
This is a built in
application. And then what we

304
00:24:41.330 --> 00:24:44.990
don't need to go back
and add a new member

305
00:24:44.990 --> 00:24:48.260
to our class as visual
studio and walk back. We

306
00:24:48.260 --> 00:24:53.420
should do this shit as
rather Radisson. So with the

307
00:24:53.430 --> 00:24:58.370
expanded, we tried to bring
bridge the developers with the

308
00:24:58.640 --> 00:25:04.570
business world. For example, let
me talk about another, eh,

309
00:25:04.930 --> 00:25:11.570
eh, eh, I don't know
if you're familiar with quads

310
00:25:11.750 --> 00:25:19.280
framework is a framework that
creates jobs has three girls

311
00:25:19.280 --> 00:25:24.140
about jobs. He's a very
much API. Tom's from the

312
00:25:24.140 --> 00:25:29.000
Java world. Now it's for
what is missing from that

313
00:25:29.000 --> 00:25:33.800
API. For me, every API,
each mission, usually that face,

314
00:25:35.180 --> 00:25:38.300
I have it usually the
face I teach my abuse

315
00:25:38.300 --> 00:25:41.480
rates or brake jobs and
triggers for me. I will

316
00:25:42.890 --> 00:25:47.150
push the war, the war
to my administrators or show

317
00:25:47.360 --> 00:25:52.550
this is what actually moves
forward and work today. And

318
00:25:52.550 --> 00:25:56.390
module that, test it up,
which classes are quads and

319
00:25:56.390 --> 00:26:01.940
provide that face for that.
And now everything is flexible.

320
00:26:02.870 --> 00:26:06.730
I hope you say my
phone, my phone. And as

321
00:26:06.730 --> 00:26:08.590
I understand it, are you,
is it true that you're

322
00:26:08.590 --> 00:26:13.920
able to create both, both
UIs in, in wind and

323
00:26:13.920 --> 00:26:18.880
web forms and in windows
as well? Yeah, actually IAF

324
00:26:18.880 --> 00:26:24.160
is a builder. The designer
is a targeting mobile platforms

325
00:26:25.390 --> 00:26:29.440
and it's very interesting. After
the age you gets used

326
00:26:29.440 --> 00:26:33.790
to it, I'm sure nobody
will evolve back to traditional

327
00:26:34.660 --> 00:26:47.220
programming because it makes it
makes things and teaches you

328
00:26:47.430 --> 00:26:54.470
how to build the framework
and expand the proof. Well,

329
00:26:54.470 --> 00:26:56.420
I'm really glad that you
came on the show to

330
00:26:56.420 --> 00:27:00.860
talk to us about this.
People can check this out@expandframework.com.

331
00:27:00.890 --> 00:27:02.270
They can go up at
the top. There there's a

332
00:27:02.270 --> 00:27:05.120
whole list of contributors and
people that work with you

333
00:27:05.120 --> 00:27:08.780
from all sorts of other
different companies. So congratulations to

334
00:27:08.780 --> 00:27:11.240
those guys for all the
hard work, they can go

335
00:27:11.240 --> 00:27:14.330
up and download the latest
version of span as well

336
00:27:14.330 --> 00:27:18.440
as check out the source
app. Stylish. Thanks so much

337
00:27:18.440 --> 00:27:23.750
for coming on the show.
This has been another episode

338
00:27:23.750 --> 00:27:26.210
of Hansel minutes, and we'll
see you again next week.

