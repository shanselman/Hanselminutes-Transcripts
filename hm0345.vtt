WEBVTT FILE

1
00:00:04.920 --> 00:00:17.210
<inaudible> From hanselminutes.com. It's Hanselman.
It's a weekly discussion with

2
00:00:17.210 --> 00:00:21.950
web developer and technologist Scott
Hanselman. This is Lawrence Ryan announcing

3
00:00:21.950 --> 00:00:28.550
show number three 47. Recorded
live Thursday, November 22nd, 2012. This episode

4
00:00:28.550 --> 00:00:31.220
is brought to you by
Tellerik offering the best in

5
00:00:31.220 --> 00:00:40.580
developer tools and support online@telerikdotcomandbyfranklins.net
training developers to work smarter

6
00:00:41.000 --> 00:00:44.060
and now offering gesture pack
a powerful gesture, recording and

7
00:00:44.060 --> 00:00:51.140
recognition system for Microsoft connect
for windows developers details@gesturepak.com. In

8
00:00:51.140 --> 00:00:54.920
this episode, Scott talks to
Zachary printer from Hulu about

9
00:00:54.920 --> 00:01:00.560
the new Hulu windows eight
application. Hi, this is Scott

10
00:01:00.560 --> 00:01:02.390
Hanselman. This is another episode
of Hansel minutes and I'm

11
00:01:02.390 --> 00:01:05.510
recording here in the command
center, kind of the speaker

12
00:01:05.510 --> 00:01:07.910
room area of the build
conference. So if you hear

13
00:01:07.910 --> 00:01:10.040
beeps and boops in the
background, it's just the people

14
00:01:10.040 --> 00:01:11.870
that are doing the good
work that keeps building running.

15
00:01:12.440 --> 00:01:16.010
I'm sitting here actually with
Jack repenter from Hulu developer

16
00:01:16.010 --> 00:01:18.440
on the Hulu mobile team.
How's it going? It's gone.

17
00:01:18.440 --> 00:01:21.110
Good. Thanks for having me.
Yeah, I'm pretty stoked because

18
00:01:21.460 --> 00:01:24.980
I contacted you guys after
running the new Hulu windows

19
00:01:24.980 --> 00:01:28.070
eight application, just enjoying it
on my 30 inch monitor.

20
00:01:28.280 --> 00:01:31.460
Yes, very much appreciating that.
It's pretty awesome. And now

21
00:01:31.460 --> 00:01:34.370
I've got Hulu pretty much
on every device I have

22
00:01:34.370 --> 00:01:36.590
and we tried to get
on just about every device

23
00:01:36.590 --> 00:01:38.870
we can out there. So
it's, it's a bit of

24
00:01:38.870 --> 00:01:40.610
a journey, but it's, it's
a lot of fun in

25
00:01:40.610 --> 00:01:42.830
the, in the meantime, one
of the things when I'm

26
00:01:42.830 --> 00:01:44.450
dealing with Hulu, cause I've
got it on my phone.

27
00:01:44.450 --> 00:01:45.830
I've got it on my
tablet. I've got it on

28
00:01:45.830 --> 00:01:48.980
my windows machine. I wonder,
are you going to keep

29
00:01:48.980 --> 00:01:50.630
me from installing it too
many places? I know with

30
00:01:50.630 --> 00:01:53.150
Netflix sometimes they'll say, well,
you have five or six

31
00:01:53.150 --> 00:01:56.630
machines registered. I assume Hulu
will know if I'm trying

32
00:01:56.630 --> 00:02:00.200
to cheat you. I think
our largest concern there is

33
00:02:00.200 --> 00:02:03.140
number of simultaneous streams. So
devices itself, if you were

34
00:02:03.140 --> 00:02:05.060
to look at my account
in one of our panels,

35
00:02:05.060 --> 00:02:07.670
you'll see probably a hundred
different devices because I'm testing

36
00:02:07.670 --> 00:02:11.480
everything out there with my
account, but that's never been

37
00:02:11.480 --> 00:02:14.090
something that we've really found
a problem. It's just, Hey,

38
00:02:14.090 --> 00:02:16.910
if you've got more than
two or three simultaneous streams

39
00:02:16.910 --> 00:02:18.620
going at the same time,
we're not going to let

40
00:02:18.620 --> 00:02:20.450
you open another. Okay. That's
good. So that makes me

41
00:02:20.450 --> 00:02:22.490
feel good because like, if
I get a new surface,

42
00:02:22.760 --> 00:02:23.930
I'm going to want to
put Hulu on it, but

43
00:02:23.930 --> 00:02:25.040
I'm going to think, well,
I don't know if I

44
00:02:25.040 --> 00:02:27.930
want to put down everything.
Okay, cool. So I can

45
00:02:27.930 --> 00:02:30.680
install it everywhere without fear.
Yes. One of the things

46
00:02:30.680 --> 00:02:32.330
that I've noticed with hula
lately is that the user

47
00:02:32.330 --> 00:02:34.310
interface is starting to look
kind of the same everywhere.

48
00:02:34.340 --> 00:02:36.560
Like for a while there,
it looked like one thing

49
00:02:36.560 --> 00:02:38.690
on my TiVo. I actually
run Hulu on my TiVo

50
00:02:38.690 --> 00:02:41.720
as well. I look one
way on my, on my

51
00:02:41.810 --> 00:02:43.730
PlayStation, but now it kind
of looks free. It's very

52
00:02:43.730 --> 00:02:46.270
organized. It's very, it's very
clean. And the user interface

53
00:02:46.280 --> 00:02:49.040
in it, the Xbox three
60 version looks real similar

54
00:02:49.700 --> 00:02:52.700
to my windows eight when
that's on purpose. So I'm

55
00:02:52.700 --> 00:02:56.150
actually, we've had a big
push internally. It really culminated

56
00:02:56.150 --> 00:02:58.220
with the launch of what
we call H2O, our new

57
00:02:58.220 --> 00:03:02.200
website design, where We just
got this visual refresh where

58
00:03:02.200 --> 00:03:05.710
it's a lot less, it's
a lot less metadata on

59
00:03:05.710 --> 00:03:07.150
the screen, a lot less
text on the screen and

60
00:03:07.150 --> 00:03:09.910
a lot more of really
pronouncing the, the assets and

61
00:03:09.910 --> 00:03:12.490
the images and the content
and making it easier to

62
00:03:12.490 --> 00:03:16.240
browse and easier to just,
you know, go a lot

63
00:03:16.240 --> 00:03:18.190
of times people come to
Hulu and they want to

64
00:03:18.310 --> 00:03:21.010
find a very specific show,
but we're also trying to,

65
00:03:21.250 --> 00:03:24.640
you know, we've got a
great search functionality for that,

66
00:03:24.640 --> 00:03:27.010
but we also want to
allow them to come and

67
00:03:27.010 --> 00:03:30.190
say, Hey, what's something interesting
to watch. And that's what

68
00:03:30.560 --> 00:03:33.550
we're pushing for with the
new interface. You'll also see

69
00:03:33.550 --> 00:03:38.720
that. So thorn our Android
tablet application, that was name.

70
00:03:40.090 --> 00:03:42.700
Now we know the secret
code. Yes, thorn. I gave

71
00:03:42.700 --> 00:03:46.780
it away. So our thorn
application, it was the very

72
00:03:46.780 --> 00:03:50.440
first application to launch this
new user interface. And it

73
00:03:50.440 --> 00:03:53.500
was sort of the prototype
of it. I'll where we

74
00:03:53.500 --> 00:03:55.330
could see exactly how it
works and how we want

75
00:03:55.330 --> 00:03:58.210
to lay things out and
what some of the overall

76
00:03:59.320 --> 00:04:02.500
information architecture of the application
would be like. And then

77
00:04:02.770 --> 00:04:06.220
after that we've launched H2O
the new website and you

78
00:04:06.220 --> 00:04:09.100
can see the two look
very, very similar. Now when

79
00:04:09.100 --> 00:04:11.200
it came to windows eight,
we of course want to

80
00:04:11.200 --> 00:04:13.420
fit in with the platform.
So instead of doing vertical

81
00:04:13.420 --> 00:04:17.080
scrolling and shelves, we do,
we call them sections, but

82
00:04:17.080 --> 00:04:22.090
basically groups inside of 'em
that 90 grid view. And

83
00:04:22.090 --> 00:04:25.210
so it still looks very
much like Hulu and has

84
00:04:25.240 --> 00:04:30.130
a very similar experience to
the regular website in terms

85
00:04:30.130 --> 00:04:32.920
of information you can find
in brows, but it also

86
00:04:32.920 --> 00:04:36.270
fits in very closely with
the windows eight UI. Where

87
00:04:36.270 --> 00:04:38.070
did those pictures come from?
Cause they, they look like

88
00:04:38.070 --> 00:04:42.690
screenshots, but they're so clear.
Yeah. So we do our

89
00:04:42.690 --> 00:04:45.210
own, we have a few
different services where we can

90
00:04:45.210 --> 00:04:52.560
do show key art versus
show art versus video like

91
00:04:52.650 --> 00:04:55.830
images. So for video images,
we've got a ton of

92
00:04:55.830 --> 00:04:57.720
videos. A lot of times
it will just like take

93
00:04:57.720 --> 00:04:59.940
a good section of the
video and make a screenshot

94
00:04:59.940 --> 00:05:03.090
of that. But if it
comes to an actual show,

95
00:05:03.090 --> 00:05:05.160
if it's going to be
on the main show page,

96
00:05:05.550 --> 00:05:08.820
that's one image where we've,
you know, we have designers

97
00:05:08.820 --> 00:05:10.940
who go in and make
sure that all that, all

98
00:05:10.950 --> 00:05:13.170
those assets look good for
every single show that we

99
00:05:13.170 --> 00:05:16.560
have. And then we also
have a condensed version of

100
00:05:16.560 --> 00:05:19.560
that for the tiles themselves.
So you have the sort

101
00:05:19.560 --> 00:05:24.030
of ma master image for
the show page that looks

102
00:05:24.030 --> 00:05:26.340
really good and really high
resolution. You have the title

103
00:05:26.340 --> 00:05:28.800
image for the shows, and
then you have the video

104
00:05:28.800 --> 00:05:33.060
images for each particular episode.
So you might go to

105
00:05:33.060 --> 00:05:35.340
like, you know, Fox or
NBC. And like they have

106
00:05:35.340 --> 00:05:37.500
like the press kit for
like new girl or whatever.

107
00:05:37.500 --> 00:05:39.150
And like here's all the
graphics you're going to need,

108
00:05:39.150 --> 00:05:40.950
but then you're assembling those
and doing all that work.

109
00:05:42.240 --> 00:05:43.830
Yes. I, I don't want
to speak too much out

110
00:05:43.830 --> 00:05:46.890
of my domain there, but
it's at least my understanding

111
00:05:46.890 --> 00:05:50.430
that we go in and
manually edit that ourselves, You,

112
00:05:50.430 --> 00:05:52.920
as a developer, you're consuming
this, you have like an

113
00:05:52.920 --> 00:05:55.200
API or a web API
that you're pulling these phones.

114
00:05:55.410 --> 00:05:58.670
Yes. So if go on
get hub, we released a

115
00:05:58.670 --> 00:06:02.450
project called typer E C
T Y P E R.

116
00:06:02.480 --> 00:06:05.690
It had a different internal
code name, but one of

117
00:06:05.690 --> 00:06:08.240
the things that project does
is it basically sets up

118
00:06:08.240 --> 00:06:12.230
an image server and it
will take any URL. You

119
00:06:12.230 --> 00:06:15.320
give it with some parameters
like the size you want

120
00:06:15.320 --> 00:06:18.680
and the asset you want,
and then various other image

121
00:06:18.710 --> 00:06:21.560
magic commands to, you know,
maybe I want to clip

122
00:06:21.560 --> 00:06:25.940
it a certain way and
just translate those into running

123
00:06:25.940 --> 00:06:28.820
image magic on the command
line and then cashing that

124
00:06:28.820 --> 00:06:31.760
file and serving it to
other requests. So we have

125
00:06:31.760 --> 00:06:34.730
a pretty decent API there
for just saying, Hey, any

126
00:06:34.730 --> 00:06:37.220
particular show or video, I
want to get this asset

127
00:06:37.220 --> 00:06:39.040
at this site And you'll
know that it looks good

128
00:06:39.040 --> 00:06:40.900
and it's correctly sized for
what you're trying to do.

129
00:06:41.410 --> 00:06:44.530
Z stick within the same
aspect. Ratios were usually pretty

130
00:06:44.530 --> 00:06:47.920
good there. If we start
chopping it a little bit,

131
00:06:48.100 --> 00:06:50.680
then we've gotta be more
careful. So we'll get example

132
00:06:50.680 --> 00:06:53.680
of that is the lifestyle
that we do in windows

133
00:06:53.680 --> 00:06:57.100
eight. If you w one
of our first iterations, we

134
00:06:57.100 --> 00:06:59.230
want to put our Hulu
logo every time they pin

135
00:06:59.240 --> 00:07:02.020
the show to the start
page. But if we put

136
00:07:02.020 --> 00:07:04.480
it on the top, that
would interfere with some show

137
00:07:04.480 --> 00:07:07.000
logos. If we put it
on the bottom, then a

138
00:07:07.000 --> 00:07:08.860
show like the Kobe report
has the text on the

139
00:07:08.860 --> 00:07:10.780
bottom. So we would cover
the label of the show,

140
00:07:10.780 --> 00:07:13.570
which wasn't so good. But
we actually noticed if you

141
00:07:13.570 --> 00:07:18.970
compared the internal resolution of,
or the, the aspect ratio

142
00:07:18.970 --> 00:07:22.030
of our images with the
aspect ratio of the lifestyles,

143
00:07:22.450 --> 00:07:24.100
there's a bit of a
gap on the left hand

144
00:07:24.100 --> 00:07:27.250
side or left or right
hand side. And we were

145
00:07:27.250 --> 00:07:29.230
able to use that with
just a tiny bit of

146
00:07:29.230 --> 00:07:31.750
cropping so that we can
get our logo in there.

147
00:07:31.750 --> 00:07:34.270
And it doesn't interfere with
any of the text on

148
00:07:34.270 --> 00:07:37.000
the image. That's a lot
of work. There's a lot

149
00:07:37.000 --> 00:07:38.710
of thought. I mean, are
you having to like dynamically

150
00:07:38.710 --> 00:07:40.180
look at the, where are
the images on them? Do

151
00:07:40.180 --> 00:07:42.610
you do any like eristics
or anything to figure out

152
00:07:42.610 --> 00:07:45.100
that, Oh, that, or do
you just hard-code like the

153
00:07:45.100 --> 00:07:48.220
Colbert report puts it at
the top. So we don't

154
00:07:48.220 --> 00:07:51.910
have a lot of code
to do that. The image

155
00:07:51.910 --> 00:07:54.070
and like tell, I can
see where their logo is.

156
00:07:54.310 --> 00:07:58.150
It's more like dev iterations
where we would do something

157
00:07:58.150 --> 00:07:59.650
and say, Hey, does that
look good? And then we

158
00:07:59.650 --> 00:08:01.810
would find a couple of
examples of shows where that

159
00:08:01.810 --> 00:08:05.620
didn't work. So what we
do now is by having

160
00:08:05.620 --> 00:08:08.680
that mismatch in aspect ratios,
it's actually outside of the

161
00:08:08.680 --> 00:08:10.900
image. So we're not really
covering the image at all.

162
00:08:11.200 --> 00:08:14.290
And we combined them together.
When we see these demos

163
00:08:14.290 --> 00:08:17.350
that the Microsoft guys do,
they usually, you know, they

164
00:08:17.350 --> 00:08:19.510
look a lot like the
file new project. When you

165
00:08:19.510 --> 00:08:21.520
say file new windows store
project, you get a bunch

166
00:08:21.520 --> 00:08:24.520
of tiles, you get a
designer involved through some gradients

167
00:08:24.520 --> 00:08:28.150
and you throw a bunch
of, of good looking art

168
00:08:28.180 --> 00:08:30.970
up there. You obviously have
all of your designers that

169
00:08:30.970 --> 00:08:33.850
are back there doing that.
You've got a web API,

170
00:08:33.850 --> 00:08:35.830
that's returning all that stuff.
So you've got all the

171
00:08:35.830 --> 00:08:39.490
art that's behind this. Is
it literally just as like,

172
00:08:39.810 --> 00:08:42.610
is the Hulu application, just
a big old grid view

173
00:08:42.610 --> 00:08:45.460
and a huge play button?
Or is there a lot

174
00:08:45.460 --> 00:08:47.290
more going on here? Cause
I want to understand the

175
00:08:47.290 --> 00:08:50.440
difference between the demos that
they show of. Hey, look,

176
00:08:50.440 --> 00:08:52.510
I made a video sharing
app and then a real

177
00:08:52.510 --> 00:08:54.850
one, cause you've got millions
of people using these things.

178
00:08:55.320 --> 00:08:59.070
Sure. So At least to
the application design, we're definitely

179
00:08:59.070 --> 00:09:03.660
doing a lot. I wouldn't
say like custom, as far

180
00:09:03.660 --> 00:09:05.520
as the framework doesn't support
it, but a lot of

181
00:09:05.520 --> 00:09:08.970
custom UI are ourselves there.
A good example of that

182
00:09:08.970 --> 00:09:11.670
is our search results page.
So if you do a

183
00:09:11.670 --> 00:09:14.880
search you've got mixed, matched,
you know, a lot of

184
00:09:14.880 --> 00:09:19.260
different types of content where
you can get not only

185
00:09:19.260 --> 00:09:22.230
like shows where we will
show the show image and

186
00:09:22.230 --> 00:09:25.110
then the first four episodes
and the first four clips

187
00:09:25.110 --> 00:09:28.110
and things like that. We'll
also show movies that match

188
00:09:28.110 --> 00:09:30.660
up, but they're a separate
section, right? So it's not

189
00:09:30.660 --> 00:09:33.810
like all looking the same
or in the same sort

190
00:09:33.810 --> 00:09:38.340
of standard grid view grouping.
We have different different layouts

191
00:09:38.340 --> 00:09:40.530
for each type of search
result that we can return

192
00:09:40.530 --> 00:09:45.210
on that page. We also
have editorial trays. So if

193
00:09:45.210 --> 00:09:48.200
I search for something like
family, I might get a

194
00:09:48.240 --> 00:09:52.290
curated section like family flicks
with all the movie tiles.

195
00:09:52.290 --> 00:09:55.230
And that's a different aspect
ratio, right? Because we're showing

196
00:09:55.230 --> 00:09:58.980
the poster art instead of
the video artwork, which is

197
00:09:58.980 --> 00:10:03.300
16 by nine. So we
basically combine all those things

198
00:10:03.300 --> 00:10:08.280
together. And yet everything on
there is part of the

199
00:10:08.280 --> 00:10:11.370
same sort of selection, metaphor,
where you can check Mark

200
00:10:11.370 --> 00:10:14.550
one and it checks the
other. So I'm doing something

201
00:10:14.550 --> 00:10:18.390
like that really isn't quite
supported by default in the

202
00:10:18.390 --> 00:10:20.520
framework, but the framework gives
you enough hooks that we

203
00:10:20.520 --> 00:10:22.050
were able to make it
work and it turned out

204
00:10:22.790 --> 00:10:25.490
Interesting. So then that means
that, you know, you say

205
00:10:25.490 --> 00:10:27.890
family and you're going to
get a section. You can

206
00:10:27.890 --> 00:10:29.660
get a group, you can
get a movie, you can

207
00:10:29.660 --> 00:10:31.520
get clips, you can get
an episode, you can get

208
00:10:31.520 --> 00:10:33.860
a show with the named
family. The user needs to

209
00:10:33.860 --> 00:10:36.860
think, Hey, it's a big,
beautiful grid full of things

210
00:10:37.160 --> 00:10:40.640
in some ways delineated, but
underneath you've got, you know,

211
00:10:40.940 --> 00:10:44.600
a dozen different kinds of
search results that were returned.

212
00:10:44.960 --> 00:10:47.960
And that was actually something
that we couldn't do in,

213
00:10:47.960 --> 00:10:50.630
in earlier applications. We didn't
really have an API for

214
00:10:50.630 --> 00:10:53.390
that, but as part of
the H2O launch, our new

215
00:10:53.390 --> 00:10:56.570
website, that API was added
so that the website could

216
00:10:56.570 --> 00:10:59.570
have these really nice and
beautiful search results instead of

217
00:10:59.570 --> 00:11:03.860
just a grid of tiles
and then windows, Hey, we

218
00:11:03.860 --> 00:11:06.500
did a first iteration on
it. It was a great

219
00:11:06.500 --> 00:11:09.020
of tiles. It worked, but
it wasn't that, you know,

220
00:11:09.050 --> 00:11:12.380
wonderful. Right. So we went
back and rethought about it

221
00:11:12.380 --> 00:11:15.050
and thought, Hey, we could
do something a lot nicer

222
00:11:15.050 --> 00:11:17.120
if we use the same
API that the site's using

223
00:11:17.120 --> 00:11:19.790
now. And through that, that's,
that's what we've landed at.

224
00:11:20.210 --> 00:11:22.730
I assume at some point
like the very first time

225
00:11:22.730 --> 00:11:25.370
that someone thought let's do
a windows eight app, somebody

226
00:11:25.370 --> 00:11:30.320
did go file new project
store. Okay. Bound a bunch

227
00:11:30.320 --> 00:11:32.690
of images to it and
said, yes, here we go.

228
00:11:32.750 --> 00:11:36.590
We're on our way. Yeah,
definitely. So we were able

229
00:11:36.590 --> 00:11:39.620
to get, you know, some,
some rough versions of the

230
00:11:39.620 --> 00:11:43.130
app out there really quick,
like at least internal builds.

231
00:11:43.640 --> 00:11:46.910
It was, it was quite
nice. And actually our initial

232
00:11:46.910 --> 00:11:49.970
sort of MVP build, we
had done at least three

233
00:11:49.970 --> 00:11:55.360
months ago, minimum viable product.
Yeah. And that particular build

234
00:11:55.360 --> 00:11:57.790
it, it didn't have the
nicer search results. It didn't

235
00:11:57.790 --> 00:12:00.430
have as nice of a
bottom bar and the top

236
00:12:00.430 --> 00:12:03.550
navigation wasn't as flushed out
and, and so on, but

237
00:12:03.970 --> 00:12:07.060
it did the job and
it looks pretty good. And

238
00:12:07.060 --> 00:12:09.190
by having that out early
one, it gave us some

239
00:12:09.190 --> 00:12:11.650
breathing room for development time.
But to it, let us

240
00:12:11.650 --> 00:12:16.990
get preloaded on variety of
vendors. So, so yeah, we,

241
00:12:17.260 --> 00:12:20.050
we had that first build,
it wasn't as fleshed out

242
00:12:20.050 --> 00:12:21.790
as we would like the
end result to be. It

243
00:12:21.790 --> 00:12:24.640
didn't have all the features,
but we got pretty far

244
00:12:24.640 --> 00:12:26.580
in the short amount of
time. So It sounds like

245
00:12:26.580 --> 00:12:30.120
the first 80% is really,
really fast. And then it's

246
00:12:30.120 --> 00:12:32.040
really just tweaking and tweaking
all the way. Yeah. I

247
00:12:32.040 --> 00:12:36.300
spent days with our design
team where one or two

248
00:12:36.300 --> 00:12:37.950
of the designers would just
come by and sit at

249
00:12:37.950 --> 00:12:41.400
my desk and be sort
of live coding with me

250
00:12:41.400 --> 00:12:43.350
of, Hey, can we try
that? Moving that down a

251
00:12:43.350 --> 00:12:45.720
little bit, or can we
tweak the opacity here or

252
00:12:46.140 --> 00:12:48.450
we need a shadow. They
just sitting there with you

253
00:12:48.450 --> 00:12:51.180
and your live coding while
they're designing. And then I

254
00:12:51.180 --> 00:12:53.160
had to go in after
the fact and clean up

255
00:12:53.190 --> 00:12:54.960
my code. Cause I did
a bunch of hacks here

256
00:12:54.960 --> 00:12:56.790
and there to make sure
that I could try it

257
00:12:56.790 --> 00:12:59.400
out well, But you were
able to make those changes.

258
00:12:59.400 --> 00:13:01.320
How did you do those
in the WPF designer and

259
00:13:01.320 --> 00:13:05.610
note pattern? So I did
it in the visual studios.

260
00:13:05.640 --> 00:13:08.850
XAML editor. We don't really
use the designer view too

261
00:13:08.850 --> 00:13:14.550
much. It's, it's nice. And
it makes for a great

262
00:13:14.550 --> 00:13:17.190
feature when you match it,
but then you have to

263
00:13:17.190 --> 00:13:19.290
do more work to set
up your sample data. So

264
00:13:19.290 --> 00:13:22.140
it says, and you also
have, I mean, particularly with

265
00:13:22.140 --> 00:13:26.250
an application like Hulu, the
majority of our UI is

266
00:13:26.250 --> 00:13:29.940
driven server side. So, you
know, setting up that sample

267
00:13:29.940 --> 00:13:33.750
data source, fetching the correctly
out from the server, getting

268
00:13:33.750 --> 00:13:35.640
through with all the login
stuff. I mean, it's not

269
00:13:35.640 --> 00:13:38.580
impossible, but it wasn't really
worth it for us to

270
00:13:38.580 --> 00:13:41.370
be able to like, you
know, drag the grid around.

271
00:13:41.370 --> 00:13:43.080
It was easier to just
edit that with the code.

272
00:13:43.740 --> 00:13:45.510
How many different sample pages
do you have is I

273
00:13:45.510 --> 00:13:48.440
think that we could agree
that Hulu is a, a,

274
00:13:48.780 --> 00:13:52.020
a competent and reasonably sized
app. It's not like immensely

275
00:13:52.020 --> 00:13:55.680
complex, but it's also not
immensely simple. How many XAML

276
00:13:55.680 --> 00:13:59.280
pages are there. So I'm
a little bit of background

277
00:13:59.280 --> 00:14:01.590
that we don't have say
a TV page or a

278
00:14:01.590 --> 00:14:05.910
movies page or something like
that. Our two main pages

279
00:14:05.910 --> 00:14:08.910
in the application, maybe we
could find a better name

280
00:14:08.910 --> 00:14:12.390
for it, but it's horizontal
page and expanded page. So

281
00:14:12.390 --> 00:14:17.190
horizontal page is the sideways
scrolling page where you have

282
00:14:17.190 --> 00:14:22.200
like groups of content and
that page then gets filled

283
00:14:22.200 --> 00:14:25.350
with what we call again,
sections or groups. And we

284
00:14:25.350 --> 00:14:28.200
have a whole list of
section templates that defined like

285
00:14:28.200 --> 00:14:31.260
what different sections can look
at And are those different

286
00:14:31.260 --> 00:14:36.300
<inaudible> different snippets templates. Okay.
Are there different files physically

287
00:14:36.300 --> 00:14:38.160
on disc or is it
all part of one giant

288
00:14:38.160 --> 00:14:41.880
larger resource Resource dictionary that
contains all of our section

289
00:14:41.880 --> 00:14:44.580
templates? And then we also
have resource dictionary for our

290
00:14:44.580 --> 00:14:49.260
title templates inside those sections,
but yeah, so we basically

291
00:14:49.260 --> 00:14:53.720
have a collection of Legos,
right? And then the server

292
00:14:53.720 --> 00:14:58.550
side information architecture, like the
way we define how the

293
00:14:58.550 --> 00:15:02.180
application is laid out, laid
out server-side uses those Lego's

294
00:15:02.180 --> 00:15:04.520
and rearranges them in interesting
ways. So we can say,

295
00:15:04.550 --> 00:15:08.600
Oh, I want a query
that shows TV videos by

296
00:15:08.600 --> 00:15:12.500
popularity. But I wanted, you
know, with the, the standard

297
00:15:12.500 --> 00:15:15.230
section layout with the tiles
as the first two tiles

298
00:15:15.230 --> 00:15:17.960
big, or we could switch
it that, Oh, I want

299
00:15:17.960 --> 00:15:20.300
it to be 16 small
tiles, or I want this

300
00:15:20.300 --> 00:15:23.050
particular one to be poster
art. Help me understand that

301
00:15:23.050 --> 00:15:24.850
relationship a little bit more.
It sounds like you're saying

302
00:15:24.850 --> 00:15:28.090
it you're getting layout information
from the server. So why

303
00:15:28.090 --> 00:15:29.950
isn't the server just to
focused on data and then

304
00:15:29.950 --> 00:15:33.070
the client make those decisions?
The server doesn't tell us

305
00:15:33.130 --> 00:15:35.650
like, Oh, I want this
60 padding to the left,

306
00:15:35.650 --> 00:15:38.170
or I want this to
be this particular font. It

307
00:15:38.170 --> 00:15:40.120
doesn't do any of that,
but it does tell us

308
00:15:40.120 --> 00:15:44.710
that, Hey, I want, you
know, this data source to

309
00:15:44.710 --> 00:15:47.980
be the very first thing
after, you know, our masthead

310
00:15:47.980 --> 00:15:51.640
image, right? So it tells
us which section I want

311
00:15:51.640 --> 00:15:54.280
to be on the homepage
in the most prominent order

312
00:15:54.550 --> 00:15:57.580
and what query against our
servers, we're going to use

313
00:15:57.580 --> 00:16:01.180
to fill that section up.
And then also like we

314
00:16:01.180 --> 00:16:05.020
have a few layout concepts,
like what sort of grid

315
00:16:05.020 --> 00:16:06.490
layout do I want? Do
I want it to be

316
00:16:06.850 --> 00:16:09.250
one big tile? And then
the rest of them smaller?

317
00:16:09.250 --> 00:16:10.810
Do I want it to
be two big tiles and

318
00:16:10.810 --> 00:16:12.970
the rest of them? I
see. So if I understand

319
00:16:12.970 --> 00:16:15.460
correctly, you've got kind of
this, this cafeteria plan of

320
00:16:15.460 --> 00:16:17.590
all the different X number
of layouts that one could

321
00:16:17.590 --> 00:16:20.590
potentially use. And then I
don't know, the master of

322
00:16:20.590 --> 00:16:22.630
programming can be in the
back there and he can

323
00:16:22.630 --> 00:16:24.880
change what I see as
the user, when I launch

324
00:16:24.880 --> 00:16:27.220
it. It could be like
a giant picture of the

325
00:16:27.220 --> 00:16:30.100
girl from new girl. And
then some featured movie that

326
00:16:30.100 --> 00:16:32.740
she's in. He can control
that. Exactly. It might look

327
00:16:32.740 --> 00:16:35.920
entirely different another day. Is
that very, very much so.

328
00:16:35.920 --> 00:16:38.680
So if we want to
say promote a lot of

329
00:16:38.680 --> 00:16:41.710
our new kids' content, we
can go in and we

330
00:16:41.710 --> 00:16:43.990
can actually change what the
top app bar said, server

331
00:16:43.990 --> 00:16:46.360
side, and we can add
an entire new kid section

332
00:16:46.360 --> 00:16:48.610
and we can organize it
by, you know, what the

333
00:16:48.610 --> 00:16:50.770
most popular shows are or
however we want to group

334
00:16:50.770 --> 00:16:54.610
up the kids' content. So
that gives our surface ed

335
00:16:54.610 --> 00:16:58.390
team a lot of flexibility
and, you know, rearranging content

336
00:16:58.390 --> 00:17:00.820
or adding new content to
the website that doesn't require

337
00:17:00.820 --> 00:17:04.060
everybody to update their applications
immediately. So that's interesting. It's

338
00:17:04.060 --> 00:17:06.250
you just said the website.
So they're thinking about this

339
00:17:06.250 --> 00:17:09.340
in terms of, are they
targeting clients? Are they thinking

340
00:17:09.340 --> 00:17:12.640
about the Hulu as the
client? And it doesn't really

341
00:17:12.640 --> 00:17:14.800
matter whether it's an Android
or windows eight or a

342
00:17:14.800 --> 00:17:19.810
web. So right now it's,
it's not as unified, right?

343
00:17:19.810 --> 00:17:23.320
If we develop a kids
section on hulu.com, we're probably

344
00:17:23.320 --> 00:17:26.830
going to use the same,
same ideas in the same

345
00:17:26.830 --> 00:17:30.550
flow, but develop it in
a different definition file on

346
00:17:30.640 --> 00:17:33.250
for, for the Android app
and a different definition file

347
00:17:33.250 --> 00:17:36.940
for the windows eight app,
similar concepts, but different, different

348
00:17:36.940 --> 00:17:40.360
setups right now. One of
the things that I'm really

349
00:17:40.360 --> 00:17:43.420
excited about on the backend
is I'm working with some

350
00:17:43.420 --> 00:17:45.550
other guys on our team
to consolidate that. So we

351
00:17:45.550 --> 00:17:48.940
can share a lot of
the, a lot of the,

352
00:17:49.380 --> 00:17:52.820
between applications. And basically we're
working on just a, a

353
00:17:52.830 --> 00:17:55.830
sort of mini domain specific
language where we can define

354
00:17:55.830 --> 00:18:00.540
what the Hulu experience looks
like. And then on top

355
00:18:00.540 --> 00:18:03.900
of that, we can get,
you know, application specific adjustments.

356
00:18:04.410 --> 00:18:06.960
So a good example is
a phone interface might not

357
00:18:06.960 --> 00:18:11.160
want as many filtering options
as a tablet interface because

358
00:18:11.160 --> 00:18:12.990
it doesn't have as much
real estate on the screen

359
00:18:12.990 --> 00:18:15.620
to show those filters Options.
So you're kind of keeping

360
00:18:15.620 --> 00:18:19.070
it dry across all of
these different things. Yeah. I'm

361
00:18:19.310 --> 00:18:21.920
removing some past pain points
and really getting a nice

362
00:18:21.920 --> 00:18:25.970
system out there so that
we can share shared the,

363
00:18:26.150 --> 00:18:29.120
the main layout of our
application across sites, and then

364
00:18:29.510 --> 00:18:33.080
further optimize it with some
personalization tools as well. So

365
00:18:33.080 --> 00:18:36.290
if we find that somebody
is really into science fiction,

366
00:18:36.290 --> 00:18:39.380
maybe that would promote itself
more prominently on their home

367
00:18:39.380 --> 00:18:41.630
screen than somebody who's into
a lot of cooking shows.

368
00:18:42.440 --> 00:18:44.390
How did you make the
decision to go with C

369
00:18:44.390 --> 00:18:47.870
sharp and XAML versus using
JavaScript and HTML four for

370
00:18:47.870 --> 00:18:53.240
the windows eight app? So
there's, as I understand it,

371
00:18:53.240 --> 00:18:55.640
a lot of the benefits
of the JavaScript and HTML

372
00:18:55.640 --> 00:18:58.700
is that it can bring
in outside developers who are

373
00:18:58.700 --> 00:19:02.090
maybe familiar with writing basic
websites and, you know, give

374
00:19:02.090 --> 00:19:05.120
them a lot of tools
that are familiar. But for

375
00:19:05.120 --> 00:19:07.670
us, it wouldn't give us
much benefit in like code

376
00:19:07.670 --> 00:19:10.250
sharing or anything like that.
Like we're not going to

377
00:19:10.250 --> 00:19:14.090
share JavaScript files with the
main website on that. So

378
00:19:14.090 --> 00:19:16.730
we're going to be writing
it from, from scratch anyways.

379
00:19:16.730 --> 00:19:18.650
And we're going to do
a lot of heavy work

380
00:19:18.650 --> 00:19:22.070
with the media player framework
in general. So we would

381
00:19:22.070 --> 00:19:24.470
have to do that in
probably C sharp or C

382
00:19:24.470 --> 00:19:26.450
plus plus as well, even
if we did the HTML

383
00:19:26.450 --> 00:19:29.210
and JavaScript. And then on
top of that, I've just

384
00:19:29.210 --> 00:19:31.970
had in the past a
really good experience with XAML

385
00:19:31.970 --> 00:19:35.990
and C sharp through WPF
and Silverlight and windows, phone

386
00:19:35.990 --> 00:19:40.160
seven at previous companies I've
worked at. So I think

387
00:19:40.160 --> 00:19:42.740
all of those combined together,
we basically had a group

388
00:19:42.740 --> 00:19:45.290
consensus that we should do
the exam on C sharp

389
00:19:45.290 --> 00:19:48.200
route. And we've been very
happy with it since. Good.

390
00:19:48.470 --> 00:19:53.060
Yeah. When, when you're doing
some things that large resolutions

391
00:19:53.060 --> 00:19:54.500
are, the first thing that
I noticed is I have

392
00:19:54.500 --> 00:19:58.640
three monitors, a 20, 24
and a 30, and as

393
00:19:58.640 --> 00:20:00.890
I move around, you know,
things resize pretty well, I'm

394
00:20:00.890 --> 00:20:03.350
able to actually kind of
window and then page up

395
00:20:03.350 --> 00:20:05.810
and page down and move
Hulu around, which is cool.

396
00:20:06.530 --> 00:20:10.490
But I I'm noticing just
in general windows store apps,

397
00:20:10.730 --> 00:20:14.120
not all of them think
about these giant resolutions. And

398
00:20:14.120 --> 00:20:16.850
I, and I've also heard
about DPI being an issue

399
00:20:16.850 --> 00:20:18.800
as well. I haven't personally
seen that, but I understand

400
00:20:18.800 --> 00:20:20.600
that there's three different DPIs
that you have to think

401
00:20:20.600 --> 00:20:23.750
about how much thought had,
did you put into as

402
00:20:23.750 --> 00:20:26.730
a windows eight app, like
you might run at at

403
00:20:26.750 --> 00:20:29.990
a, was it 1366 by
seven 68, which is the

404
00:20:29.990 --> 00:20:32.930
minimum for snapping and then
all the way up to

405
00:20:33.230 --> 00:20:36.320
2048 and beyond how do
you manage the lay there

406
00:20:36.330 --> 00:20:42.860
and resolution issues? So we
use a, a full bleed

407
00:20:42.860 --> 00:20:46.160
masthead, which is 90% of
the width of the screen.

408
00:20:46.760 --> 00:20:50.020
And that approach actually makes
it look really nice on

409
00:20:50.050 --> 00:20:53.440
the majority of devices that
we work with. It gives

410
00:20:53.440 --> 00:20:55.420
us enough where we can
have just a little bit

411
00:20:55.420 --> 00:20:57.730
of the content peeking through
on the right side, but

412
00:20:57.730 --> 00:21:01.030
the image looks really big
and pronounced and full on

413
00:21:01.030 --> 00:21:03.820
every, every resolution we tested
it. So even when you

414
00:21:03.820 --> 00:21:07.240
do visit a 30 inch,
use a 30 inch monitor

415
00:21:07.240 --> 00:21:10.210
to look at the application,
you'll see that big artwork

416
00:21:10.210 --> 00:21:13.330
there on the screen, when
it comes to the tiles

417
00:21:13.330 --> 00:21:15.580
to the right of that,
we have a maximum of

418
00:21:15.580 --> 00:21:20.110
four vertical rows. We would
like to do either more

419
00:21:20.110 --> 00:21:25.480
rows or bigger tiles for
extremely high resolution websites. But

420
00:21:25.540 --> 00:21:28.090
right now that's enough of
an edge case. And the

421
00:21:28.090 --> 00:21:30.910
approach we use where we
stick to four vertical rows

422
00:21:31.150 --> 00:21:35.650
and center it vertically, it
seems to catch the majority

423
00:21:35.650 --> 00:21:39.580
of devices outside of developer
machines. So again, it's a

424
00:21:39.580 --> 00:21:41.590
trade off. Another thing we
would also like to do

425
00:21:41.590 --> 00:21:45.100
is have better support for
portrait mode, which right now

426
00:21:45.100 --> 00:21:49.150
we just disable in the
application and combined with that,

427
00:21:49.210 --> 00:21:51.190
a lot of developers who
like to have, you know,

428
00:21:51.190 --> 00:21:55.090
say a 24 inch wide
screen monitor flipped vertically. If

429
00:21:55.090 --> 00:21:57.340
you were to look at
that with our application right

430
00:21:57.340 --> 00:21:59.050
now, it would work, but
it'd be a little bit

431
00:21:59.050 --> 00:22:03.350
weird with the clipping of
the masthead image. I don't.

432
00:22:03.350 --> 00:22:05.970
And I realized that a
16 by nine high definition

433
00:22:05.970 --> 00:22:10.050
stream doesn't lend itself well
to a snap view, but

434
00:22:10.050 --> 00:22:11.970
I have to give you
credit for letting me watch

435
00:22:12.000 --> 00:22:14.670
the daily show in a
snap view, even though it

436
00:22:14.670 --> 00:22:16.500
was kind of weird, cause
it was letterbox, I could

437
00:22:16.500 --> 00:22:19.020
do it. And I was
like, awesome. Cause with some

438
00:22:19.020 --> 00:22:21.360
applications like the store, they
just put the logo and

439
00:22:21.360 --> 00:22:24.230
I fully expected Hulu to
just say, no, we're not

440
00:22:24.240 --> 00:22:25.800
gonna let you do that.
So I was able to

441
00:22:25.800 --> 00:22:27.630
watch while snapped and I
thought that was pretty good.

442
00:22:27.660 --> 00:22:30.540
Awesome. Yeah. It's not few.
It actually, hasn't been too

443
00:22:30.540 --> 00:22:32.880
bad. We've got a little
bit more work that we

444
00:22:32.880 --> 00:22:35.100
want to do with our
video snap. You will probably

445
00:22:35.100 --> 00:22:38.850
move that video image further
in the screen. So if

446
00:22:38.850 --> 00:22:40.470
you are on a tablet
and you bring up your

447
00:22:40.470 --> 00:22:43.590
keyboard, it doesn't overlap on
top of the video. So

448
00:22:43.590 --> 00:22:45.630
there's a few optimizations we
can do there. And we

449
00:22:45.630 --> 00:22:48.690
might include some extra metadata,
but we're pretty happy with

450
00:22:48.690 --> 00:22:51.090
how it turned out. Especially
for the first released out

451
00:22:51.090 --> 00:22:53.640
there. The 30 inch monitor
thing brings up some really

452
00:22:53.640 --> 00:22:56.790
interesting questions about what the
user's expectation is. I have

453
00:22:56.790 --> 00:22:58.800
a 30 inch monitor at
my desk, so I'll be

454
00:22:58.800 --> 00:23:01.140
two feet away from it.
I would like to see

455
00:23:01.140 --> 00:23:04.470
a whole bunch of pictures,
right? Show me beautiful. You

456
00:23:04.470 --> 00:23:07.260
have beautiful art. Show me
more. But if I'm sitting

457
00:23:07.260 --> 00:23:09.450
on my couch and I've
got my 30 inch or

458
00:23:09.450 --> 00:23:11.280
42 inch monitor, then I'm
going to want to see

459
00:23:11.310 --> 00:23:14.040
big, giant, beautiful art. So
then you start springing into

460
00:23:14.040 --> 00:23:15.750
some really interesting things that
I don't think you've done

461
00:23:15.750 --> 00:23:19.290
yet, but you could just
like semantic zoom, zoom out

462
00:23:19.290 --> 00:23:21.750
and see like all the
categories and then zoom, you

463
00:23:21.750 --> 00:23:24.480
know, then I'm trying to
do like Hulu minority report

464
00:23:24.480 --> 00:23:26.940
style. So take that back
to the designers and tell

465
00:23:26.940 --> 00:23:28.110
them that I want to
be able to do that

466
00:23:28.170 --> 00:23:30.300
zoom in zoom out. So
I feel like the entire

467
00:23:30.300 --> 00:23:33.480
catalog is at my fingertips.
Yeah, that would be great.

468
00:23:33.480 --> 00:23:36.590
And honestly, we do have,
so basically it's like a

469
00:23:36.600 --> 00:23:40.050
toggle right now. We have
horizontal page and horizontal page

470
00:23:40.050 --> 00:23:43.740
with zoom and we have
horizontal page with zoom turned

471
00:23:43.740 --> 00:23:49.250
off right now because at
least as we understood it

472
00:23:49.250 --> 00:23:52.460
early on in development, and
I've actually learned something really

473
00:23:52.460 --> 00:23:54.780
interesting, this bill that I'm
going to use to, to

474
00:23:54.790 --> 00:23:58.790
go back and change that.
But the semantic zoom works

475
00:23:58.790 --> 00:24:02.690
best when the outside component
has a great view. And

476
00:24:03.470 --> 00:24:05.810
we want to have a
lot of customizability of what

477
00:24:05.810 --> 00:24:08.300
our groups look like and
the group style selector of

478
00:24:08.300 --> 00:24:11.240
the grid view. Isn't giving
us that flexibility right now.

479
00:24:11.510 --> 00:24:14.420
So we played with either
having a grid view of

480
00:24:14.420 --> 00:24:17.030
grid views where each item,
if the grid view is

481
00:24:17.030 --> 00:24:22.340
just a horizontal stack panel
in a virtualized horizontal stack

482
00:24:22.340 --> 00:24:25.070
panel. And then each section
is what we want is

483
00:24:25.070 --> 00:24:28.790
another grid view. But when
we did the grid view

484
00:24:28.790 --> 00:24:32.330
of grid views, it, it
made one of the problems

485
00:24:32.330 --> 00:24:34.580
that's been plaguing us right
now is we get a

486
00:24:34.580 --> 00:24:38.060
fatal execution engine air, and
the application where it's just

487
00:24:38.060 --> 00:24:42.050
a hard native crash, cryptic
error code. The best we

488
00:24:42.050 --> 00:24:45.860
can investigate on it is
that it looks like maybe

489
00:24:45.860 --> 00:24:49.100
there's some native code. That's
holding a reference to an

490
00:24:49.100 --> 00:24:52.430
item that's been garbage collected
and gets an event handler

491
00:24:52.430 --> 00:24:54.830
and then tries to call
it. And that object is

492
00:24:54.830 --> 00:24:58.880
no longer there. So a
weird thing there, and at

493
00:24:58.880 --> 00:25:00.650
least on the forums that
I've read and through our

494
00:25:00.650 --> 00:25:02.750
context at Microsoft, there's going
to be a patch or

495
00:25:02.750 --> 00:25:04.940
already has been a patch
to address some of those

496
00:25:04.940 --> 00:25:11.300
issues. But that particular random
exception that just crashed our

497
00:25:11.300 --> 00:25:15.320
application, you know, as we're
navigating through it or going

498
00:25:15.320 --> 00:25:19.370
from page to page, we
just randomly get crashes. That's

499
00:25:19.370 --> 00:25:21.590
why we, we had some
ethics, zoom turned off. It's

500
00:25:21.590 --> 00:25:23.570
not that we couldn't make
it work. It's just that

501
00:25:23.570 --> 00:25:26.630
we were getting some weird
bunch of random behavior there.

502
00:25:26.630 --> 00:25:28.610
And it's not necessarily to
say that that's even the

503
00:25:28.610 --> 00:25:31.110
fault of semantic zoom. It's
not, it's just, yeah. It's

504
00:25:31.120 --> 00:25:34.420
some obscure edge case where
you're dumped some interaction with

505
00:25:34.420 --> 00:25:36.730
some interaction, with some interaction,
right. It's the exactly it's

506
00:25:36.730 --> 00:25:41.770
Spolsky's law. Yeah. So, so
what we've done instead for,

507
00:25:41.800 --> 00:25:43.660
for right now, with this
current build is we have

508
00:25:43.690 --> 00:25:46.450
just a regular items control
instead of a grid view.

509
00:25:46.720 --> 00:25:49.810
And that items control is
providing each of our integrated

510
00:25:49.810 --> 00:25:53.350
views with a virtualizing stack
panel. And that approach works,

511
00:25:53.350 --> 00:25:57.190
but it doesn't have semantic
zoom that said there was

512
00:25:57.190 --> 00:26:00.850
a great talk today about
the XAML list views. And

513
00:26:00.850 --> 00:26:04.240
they showed exactly how to
implement the ice semantic zoom

514
00:26:04.240 --> 00:26:08.140
info info interface, which I
had seen before. But I,

515
00:26:08.230 --> 00:26:10.510
there wasn't really a lot
of documentation around it early

516
00:26:10.510 --> 00:26:12.880
on. So with that in
mind, it looks like we

517
00:26:12.880 --> 00:26:16.600
can just subclass items control,
implement the interface ourselves. And,

518
00:26:17.080 --> 00:26:18.910
you know, instead of having
a grid view of grip,

519
00:26:19.030 --> 00:26:21.370
this, we have an item's
control of grid views and

520
00:26:21.400 --> 00:26:24.190
we support semantics. Right. Just
stuff like that make coming

521
00:26:24.190 --> 00:26:26.860
back, like coming to things
like build like worthwhile. Oh

522
00:26:26.860 --> 00:26:28.930
yeah, definitely. Because that's a
good example. Like, Oh dude,

523
00:26:28.930 --> 00:26:30.760
I can go back right
now and fix that thing.

524
00:26:31.210 --> 00:26:34.420
Yeah. Yeah. That's, there's been
a few few situations like

525
00:26:34.420 --> 00:26:37.330
that one that I really
love. And maybe it's, maybe

526
00:26:37.330 --> 00:26:40.690
it's just our fault for
not finding the documentation somewhere,

527
00:26:40.690 --> 00:26:46.920
but debug settings that and
show overdraw map heat map.

528
00:26:47.410 --> 00:26:49.680
Right. You can set that
in your app that XAML

529
00:26:49.680 --> 00:26:53.880
that CS and it will
basically turn all of your

530
00:26:53.880 --> 00:26:57.300
UI elements into red boxes
and show you how they

531
00:26:57.300 --> 00:26:59.820
overlap each other. And the
darker, the red is the

532
00:26:59.820 --> 00:27:03.060
more the GPU is overdrawing
and that can make your

533
00:27:03.060 --> 00:27:06.780
performance sluggish. That sounds awesome.
Yeah. That alone is worth

534
00:27:06.780 --> 00:27:08.460
the trip where we can
go in now and we

535
00:27:08.460 --> 00:27:11.940
can actually pinpoint a few
situations where we're really killing

536
00:27:11.940 --> 00:27:15.060
the graphics performance on arm
to arm devices because of

537
00:27:15.060 --> 00:27:18.120
that overdraw. Now we know
where to find it. So

538
00:27:18.120 --> 00:27:20.310
cool. Stuff like that. It's
been really good. I do

539
00:27:20.310 --> 00:27:22.530
find it's been a little
bit hit or miss with

540
00:27:22.530 --> 00:27:25.740
the conferences. It's like, I
either go to one extreme

541
00:27:25.740 --> 00:27:27.570
or the other and finding
the spot right in the

542
00:27:27.570 --> 00:27:30.840
middle where it's enough technical
content that it's useful, but

543
00:27:30.840 --> 00:27:35.700
it's not so, so inner
where it's something that I

544
00:27:35.700 --> 00:27:38.660
would never use. Right. You
like, it's fun to see

545
00:27:38.660 --> 00:27:41.600
like Mark Russinovich, like debug
some crazy internal windows thing,

546
00:27:41.600 --> 00:27:45.170
but how often do you
go there? Yeah. And so

547
00:27:45.530 --> 00:27:48.860
I think with that, either
going insanely heavy into the

548
00:27:48.860 --> 00:27:51.260
native C plus plus code,
which our application doesn't really

549
00:27:51.260 --> 00:27:54.380
use or being the very
light introductory talks about how

550
00:27:54.380 --> 00:27:57.200
to use XAML in C
sharp, you know, finding that

551
00:27:57.980 --> 00:28:00.950
perfect middle one where it's
all the technical content and

552
00:28:00.950 --> 00:28:03.230
immediately useful has been a
little bit challenging, but we

553
00:28:03.230 --> 00:28:05.630
can always go back and
view the videos of the

554
00:28:05.630 --> 00:28:08.810
highest rated ones, which I
think will be good. And

555
00:28:08.810 --> 00:28:11.630
we can, you know, also
the few classes that we

556
00:28:11.630 --> 00:28:14.330
have been to that have
really met that Mark have

557
00:28:14.330 --> 00:28:17.480
been awesome. Just finding that
overdrive heat map, I think

558
00:28:17.480 --> 00:28:19.670
will be, will be very
valuable. And have you been

559
00:28:19.670 --> 00:28:21.380
able to interact with these
guys? Have you, are you

560
00:28:21.380 --> 00:28:23.330
grabbing the guys and gals
that are presenting and then

561
00:28:23.330 --> 00:28:25.760
talking to them afterwards, you
get access to these? You

562
00:28:25.760 --> 00:28:29.570
know, I try to, but
all the really good talks

563
00:28:29.840 --> 00:28:32.420
are crowded at the end
with people waiting in line

564
00:28:32.750 --> 00:28:34.070
and then you don't want
to be the guy who's

565
00:28:34.070 --> 00:28:36.560
going over some really in
depth thing and like getting

566
00:28:36.560 --> 00:28:39.290
a lot of back and
forth discussion about it. Wow.

567
00:28:39.560 --> 00:28:41.240
You know, 10 people are
behind you yeah. In there

568
00:28:41.240 --> 00:28:43.640
and say just seriously, this
is a tip. Can I

569
00:28:43.640 --> 00:28:46.070
have a card? Get their
alias. Just say, can I

570
00:28:46.070 --> 00:28:48.890
have your alias? And then
email them just like, Hey,

571
00:28:48.920 --> 00:28:50.120
pardon me? I know you
got a lot of people

572
00:28:50.120 --> 00:28:52.340
who can I get your
alias? They'll tell you their

573
00:28:52.340 --> 00:28:54.170
alias. And then boom. Now
you have their email address.

574
00:28:54.170 --> 00:28:56.120
And then you've got that
relationship and they don't mind

575
00:28:56.120 --> 00:28:58.670
you asking questions, dude. They
do not pay no seriously.

576
00:28:58.700 --> 00:29:01.490
I mean, I was joking
with Scott goo. I was

577
00:29:01.490 --> 00:29:05.210
encouraging people not to email
the vice president, but you

578
00:29:05.210 --> 00:29:06.860
know, they had, you know,
please send me the codes

579
00:29:07.430 --> 00:29:09.440
cause he's just going to
forward it to me and

580
00:29:09.440 --> 00:29:11.810
then I'm going afford it
to somebody else. But no,

581
00:29:11.810 --> 00:29:15.170
seriously, if someone is presenting
to you about their feature

582
00:29:15.380 --> 00:29:17.360
and they love that feature
and that feature is going

583
00:29:17.360 --> 00:29:18.860
to help you, or you
think that feature could be

584
00:29:18.860 --> 00:29:21.140
made better or there's a
problem with that feature, they

585
00:29:21.200 --> 00:29:26.000
absolutely want to hear from
you do that. Find that

586
00:29:26.000 --> 00:29:28.130
healing, find the heatmap person.
And let's talk to that

587
00:29:28.130 --> 00:29:30.980
guy. Sounds good. Right. Cool.
Well thank you for talking

588
00:29:30.980 --> 00:29:33.020
today from Hulu. Never been
checked that out in the

589
00:29:33.020 --> 00:29:35.360
store. It's lime. Now it's
sat in the store now.

590
00:29:35.570 --> 00:29:38.600
Very, very cool. This has
been another episode of Hanselminutes

591
00:29:38.600 --> 00:29:39.980
and we'll see you again
next week.

