WEBVTT FILE

1
00:00:04.890 --> 00:00:16.880
<inaudible> From Hanselman it's dot
com. It's Hansel minutes, a

2
00:00:16.880 --> 00:00:21.290
weekly discussion with web developer
and technologist Scott Hanselman hosted

3
00:00:21.290 --> 00:00:26.450
by Carl Franklin. This is Lawrence Ryan
amounting show number 81 recorded

4
00:00:26.450 --> 00:00:31.670
live Tuesday, September 11, 2007.
Support for Hanselman it's just

5
00:00:31.670 --> 00:00:36.200
provided by. Tellerik already controls
the most comprehensive suite of

6
00:00:36.200 --> 00:00:49.250
components for windows forms and
asp.net web applications. online@wwwdottelerikdotcomandby.net developers

7
00:00:49.250 --> 00:00:55.190
journal the world's leading.net developer
magazine online at www dot

8
00:00:55.190 --> 00:01:00.710
<inaudible> dot com. In this
episode, Scott addresses listen to

9
00:01:00.710 --> 00:01:09.410
questions about Vista 64. Hi,
this is Scott Hanselman, and

10
00:01:09.410 --> 00:01:12.050
this is another episode of
Hansel minutes, a little bit

11
00:01:12.050 --> 00:01:15.290
of a strange show because
it's about nine 30 in

12
00:01:15.290 --> 00:01:18.560
the evening on Sunday night.
And I'm sitting here in

13
00:01:18.560 --> 00:01:22.100
the embassy suites in Bellevue
getting ready tomorrow to start

14
00:01:22.100 --> 00:01:25.430
my first day on the
job at Microsoft. And I

15
00:01:25.430 --> 00:01:27.500
am more than a little
bit nervous and more than

16
00:01:27.500 --> 00:01:30.530
a little bit nauseous about
the whole idea. I worked

17
00:01:30.530 --> 00:01:33.470
at my last job for
almost six and a half

18
00:01:33.470 --> 00:01:37.250
years, almost seven years previous
job before that was five,

19
00:01:37.250 --> 00:01:41.060
six, six years previous job
before that was three or

20
00:01:41.060 --> 00:01:44.600
four years. I'm not a
guy who takes moving jobs

21
00:01:44.600 --> 00:01:46.850
lightly. I usually work for
a couple of months at

22
00:01:46.850 --> 00:01:49.880
a time at a job,
and, you know, the whole

23
00:01:49.880 --> 00:01:54.020
kind of moving your life
into the next phase thing

24
00:01:54.020 --> 00:01:58.010
has kind of got me
all torn up inside. Plus,

25
00:01:58.010 --> 00:02:01.010
I've been wandering around Microsoft
as a visitor for, you

26
00:02:01.010 --> 00:02:03.680
know, the visitor's badge for,
you know, the better part

27
00:02:03.680 --> 00:02:06.350
of a decade. I know
a lot of people there,

28
00:02:06.500 --> 00:02:10.040
but I'm acutely aware of
what I don't know, even

29
00:02:10.040 --> 00:02:12.140
though I was under a
number of NDAs for things

30
00:02:12.140 --> 00:02:15.140
like the MVP program and
the RD program, there's so

31
00:02:15.140 --> 00:02:17.690
much stuff that's going on
inside that I don't know

32
00:02:17.690 --> 00:02:21.680
about that I'm going to
find out about. So the,

33
00:02:21.680 --> 00:02:26.030
the idea that there's this,
this precipice, this, this transition

34
00:02:26.030 --> 00:02:29.090
that's going to happen tomorrow
with the Nao, the new

35
00:02:29.090 --> 00:02:33.770
employee orientation is a kind
of the power of that

36
00:02:33.770 --> 00:02:35.300
is not lost on me.
I suppose I would have

37
00:02:35.300 --> 00:02:36.860
the same feeling if I
was going to work for

38
00:02:36.860 --> 00:02:40.340
sun or IBM or Adobe,
or one of these big,

39
00:02:41.120 --> 00:02:43.910
big companies as big behemoths.
One of the things that's

40
00:02:43.910 --> 00:02:45.770
attractive to me about going
to work for the developer

41
00:02:45.770 --> 00:02:48.410
division is that even though
the company is, you know,

42
00:02:48.620 --> 00:02:50.210
I don't know what is
it now, 60,000 people or

43
00:02:50.210 --> 00:02:53.810
some huge number like that.
It, there is still a

44
00:02:53.810 --> 00:02:56.180
small kind of community feel
and a couple of buildings

45
00:02:56.180 --> 00:02:59.500
that are, that are taken
up by the developer division,

46
00:02:59.500 --> 00:03:03.160
at least on a campus
on Redmond. So I know

47
00:03:03.160 --> 00:03:05.530
that from an it perspective,
I'm going to work for

48
00:03:05.530 --> 00:03:07.200
a very, very large company
and things are going to

49
00:03:07.200 --> 00:03:09.730
go a lot slower than
they did before. At my

50
00:03:09.730 --> 00:03:12.130
last company, you could just,
you know, be friends with

51
00:03:12.130 --> 00:03:14.230
the it guy in charge
of phones, and then you

52
00:03:14.230 --> 00:03:15.730
would get a new Blackberry
when you needed to get

53
00:03:15.730 --> 00:03:18.580
a new Blackberry. But I
suspect it's a little more

54
00:03:18.580 --> 00:03:23.950
complicated Microsoft, but rather than
me rambling on about my

55
00:03:23.980 --> 00:03:26.440
emotional pain around going to
work for Microsoft and how

56
00:03:26.440 --> 00:03:29.770
weird it's feeling, I am
going to do a little

57
00:03:29.770 --> 00:03:33.070
bit of a redo and
expand on last week's Vista

58
00:03:33.070 --> 00:03:37.210
64 show. So we can
call this the listener male

59
00:03:37.240 --> 00:03:41.950
viewer mail episode. Some good
comments came out up on

60
00:03:41.950 --> 00:03:45.820
the blog with regard to
the moving to Vista 64

61
00:03:45.820 --> 00:03:48.340
episode. So let's read a
couple of comments and I'll

62
00:03:48.340 --> 00:03:50.890
try to expand on this
and hopefully add a lot

63
00:03:50.890 --> 00:03:52.870
more information in this show
that wasn't in the last

64
00:03:52.870 --> 00:03:55.270
one, Carl and I tend
to play off of each

65
00:03:55.270 --> 00:03:58.690
other. And sometimes we get
off on tangents and segues

66
00:03:58.690 --> 00:04:01.210
and nonsequitors, and the conversation
doesn't necessarily go when I

67
00:04:01.210 --> 00:04:03.100
want. So I think I'm
going to pledge in the

68
00:04:03.100 --> 00:04:06.610
next couple of months to
start outlining Hanselman. It's even

69
00:04:06.610 --> 00:04:09.250
more structured to make sure
that I get to say

70
00:04:09.250 --> 00:04:11.230
what I feel needs to
be said about a particular

71
00:04:11.230 --> 00:04:16.630
topic. So comment here from
Abdu who says, I expected

72
00:04:16.630 --> 00:04:19.180
some talk about the benefits
of moving from Vista 32

73
00:04:19.180 --> 00:04:22.720
to 64 or from XP
straight to 64, but the

74
00:04:22.720 --> 00:04:25.570
issues presented were more of
Vista in general. So Scott,

75
00:04:25.630 --> 00:04:28.780
why are you using this
as 64, other than just

76
00:04:28.780 --> 00:04:31.630
being an early adopter for
ms technologies? You know, it's

77
00:04:31.630 --> 00:04:36.070
tough to find that balance
between being an early adopter,

78
00:04:36.970 --> 00:04:38.620
staying up on the technology,
you know, what does it

79
00:04:38.620 --> 00:04:40.150
mean to be an early
adopter? Why are we always

80
00:04:40.150 --> 00:04:42.880
going for the next big
thing for me? I didn't

81
00:04:42.880 --> 00:04:46.420
move to Vista 64 just
because it was the next

82
00:04:46.420 --> 00:04:50.740
big thing I was consistently
and regularly on three different

83
00:04:50.740 --> 00:04:55.210
machines running two ma two
gigs of Ram one machine.

84
00:04:55.250 --> 00:04:57.400
I had four gigs of
Ram installed and actually had

85
00:04:57.400 --> 00:05:02.560
an IBM or Lenovo ThinkPad.
<inaudible> had the four gigs

86
00:05:02.560 --> 00:05:05.140
of Ram installed, but of
course, Vista 64 could only

87
00:05:05.140 --> 00:05:08.710
see about three something of
it. And there's also of

88
00:05:08.710 --> 00:05:12.130
course, the two gig process
boundary. And I was regularly

89
00:05:12.130 --> 00:05:14.740
running into that because I
would run many, many virtual

90
00:05:14.740 --> 00:05:18.400
machines and I would run
out of handles. I would

91
00:05:18.400 --> 00:05:20.530
run too many copies of
IIE. I would run too

92
00:05:20.530 --> 00:05:24.130
many copies of, you know,
whatever. And when, once you

93
00:05:24.130 --> 00:05:26.950
get outlook visual studio and
all running together, a couple

94
00:05:26.950 --> 00:05:30.250
of VMs in Firefox, you
start bumping up against those

95
00:05:30.400 --> 00:05:36.010
those limits, especially with big
VMs. So I needed that

96
00:05:36.010 --> 00:05:39.850
extra headroom. And I didn't
think initially that going from

97
00:05:39.850 --> 00:05:42.340
two gigs to four gigs
would really make a difference,

98
00:05:42.370 --> 00:05:44.710
but I can say that
in my experience on Vista

99
00:05:44.710 --> 00:05:46.990
64, I've been able to
run, you know, four or

100
00:05:46.990 --> 00:05:50.110
five, six VMs all at
the same time, they're all

101
00:05:50.110 --> 00:05:52.960
running a course on external
hard drives. I haven't had

102
00:05:52.960 --> 00:05:56.980
any thought about memory problems
handles or any of the

103
00:05:57.230 --> 00:06:00.560
kind of stuff. Even under
Vista 32, I had had

104
00:06:00.560 --> 00:06:04.310
issues where I'd open up
internet Explorer and the menu

105
00:06:04.310 --> 00:06:07.430
would disappear after I had
too many version of too

106
00:06:07.430 --> 00:06:10.310
many copies of it running.
And I just haven't had

107
00:06:10.310 --> 00:06:13.640
those issues under 64 from
a stability perspective. I've had

108
00:06:14.360 --> 00:06:17.900
once we had the initial
memory instabilities got that handled

109
00:06:18.200 --> 00:06:21.920
during our overclocking, I haven't
had any Vista panics or

110
00:06:21.920 --> 00:06:24.470
anything freaking out. The only
things that have crashed on

111
00:06:24.470 --> 00:06:27.350
Vista 64 for me have
been the things that you

112
00:06:27.350 --> 00:06:31.460
kind of expect to crash
ordinarily, which unfortunately is Explorer

113
00:06:31.760 --> 00:06:35.900
exe, which seems to crash
if a network latencies too

114
00:06:35.900 --> 00:06:38.360
slow, or you, you know,
remove a hard drive while

115
00:06:38.360 --> 00:06:40.670
you're looking at it in
my computer, that kind of

116
00:06:40.670 --> 00:06:43.460
stuff. But I have been
really impressed by the stability.

117
00:06:44.090 --> 00:06:46.160
So I moved to it
because I really needed the

118
00:06:46.160 --> 00:06:48.350
memory. I have four gigs
and I might want to

119
00:06:48.350 --> 00:06:51.440
go up to to eight.
It is significant of course,

120
00:06:51.440 --> 00:06:55.190
that there are different skews
within Vista and not every

121
00:06:55.190 --> 00:06:58.760
skew supports the same amount
of memory, but I believe

122
00:06:58.790 --> 00:07:03.980
that you've got Vista 64
support on each edition, except

123
00:07:04.010 --> 00:07:06.530
each edition of Vista has
a different amount of Ram

124
00:07:06.770 --> 00:07:11.510
that they can support. So
for example, Vista home basic

125
00:07:11.990 --> 00:07:14.150
supports up to eight gigs,
which is still a lot,

126
00:07:14.150 --> 00:07:17.780
but so much with eight
gigs while a enterprise ultimate

127
00:07:17.810 --> 00:07:21.950
supports 128 gigs or more.
Now there's no PCs out

128
00:07:21.950 --> 00:07:24.200
there that could get that
much Ram physically on the

129
00:07:24.200 --> 00:07:26.390
board. Right now, the issue
is how much you can

130
00:07:26.390 --> 00:07:31.130
actually stick together on a
board, but basic and home

131
00:07:31.130 --> 00:07:34.610
premium support, different amounts of
Ram under 64 bit then.

132
00:07:34.630 --> 00:07:37.640
But that ultimate also when
you order ultimate, you get

133
00:07:37.640 --> 00:07:40.130
two discs of 32 bit
disc and a 64 bit

134
00:07:40.130 --> 00:07:43.850
disc other discs have 64
bit versions, but when you

135
00:07:43.850 --> 00:07:45.920
buy it off the shelf,
you get 32 bit and

136
00:07:45.920 --> 00:07:47.300
then you have to call
Microsoft and get them to

137
00:07:47.300 --> 00:07:49.760
send you a disc. But
you know, for the most

138
00:07:49.760 --> 00:07:53.660
part, those aren't, those are
identical. Okay. Another question here,

139
00:07:53.660 --> 00:07:56.930
Robert G a I was
expecting you to talk about

140
00:07:56.930 --> 00:08:00.710
the development experience on a
64 bit box. Like what

141
00:08:00.710 --> 00:08:04.070
does not work? What are
the showstoppers I S behaviors,

142
00:08:04.070 --> 00:08:08.210
anything slower applications, take more
memory, 64 bit.net apps, take

143
00:08:08.210 --> 00:08:11.420
more memory, things like this.
Here's the best part. Do

144
00:08:11.420 --> 00:08:13.550
you plan to do another
show on this topic or

145
00:08:13.550 --> 00:08:17.390
was everything just peaches with
development on 64? Well, so

146
00:08:17.570 --> 00:08:21.200
honestly I found that after
making a couple of just

147
00:08:21.200 --> 00:08:25.580
real simple realizations, that in
fact everything was peaches, you

148
00:08:25.580 --> 00:08:27.710
know, it sounds silly and
I'm not trying to paint

149
00:08:27.710 --> 00:08:32.210
an overly happy picture of
Vista 64, but I honestly

150
00:08:32.390 --> 00:08:36.410
haven't had any major issues
to speak of. I did

151
00:08:36.410 --> 00:08:41.450
blog about one thing, which
was just understanding that things

152
00:08:41.450 --> 00:08:45.490
can be compiled 32 fitness
and 64 fitness. You actually,

153
00:08:45.500 --> 00:08:47.030
if you go up to
my blog and search for

154
00:08:47.030 --> 00:08:50.030
the word bitterness bit, N
E S S I don't

155
00:08:50.030 --> 00:08:51.230
know if that's a word,
but if you search for

156
00:08:51.230 --> 00:08:54.710
it, you'll find that article.
And so basically I get

157
00:08:54.710 --> 00:08:57.150
Vista 64 ultimate setup. And
the first thing I do

158
00:08:57.150 --> 00:08:59.550
is I go into programs
and features, and then I

159
00:08:59.550 --> 00:09:05.600
click on windows features, turn
them on because ultimate enterprise

160
00:09:05.600 --> 00:09:07.580
and business are the only
skews that have I S

161
00:09:07.580 --> 00:09:12.890
installed. Now you can, you
can get the, the WebDev,

162
00:09:12.920 --> 00:09:16.910
right? The Cassini, the small
web server that's built into

163
00:09:17.360 --> 00:09:22.310
vs 2008, 2005. But, you
know, I really wanted to

164
00:09:22.310 --> 00:09:24.170
have iOS on this box.
So I go into programs,

165
00:09:24.190 --> 00:09:26.900
features, turn windows features on
and off. And there's a,

166
00:09:27.060 --> 00:09:29.660
a little trickier because they
give you a tree control

167
00:09:30.080 --> 00:09:32.660
with checkboxes. So you can
have multilevel tree control with

168
00:09:32.660 --> 00:09:36.050
checkboxes. It's important that you
actually have to open up

169
00:09:36.050 --> 00:09:40.010
the tree control. You can't
just click the check box,

170
00:09:40.010 --> 00:09:42.740
right? The highest level and
assume that that will automatically

171
00:09:42.980 --> 00:09:45.380
cascade down and check all
of the other check boxes

172
00:09:45.460 --> 00:09:47.630
turns, even though that's intuitive.
And that happens on many

173
00:09:47.630 --> 00:09:50.510
tree controls on the particular
one I'm talking about in

174
00:09:50.510 --> 00:09:53.360
the turn windows features on
and off dialogue, in fact

175
00:09:53.360 --> 00:09:56.030
does not work. That it's
a little weird. So you

176
00:09:56.030 --> 00:09:57.380
got to go down in
there and turn on things

177
00:09:57.380 --> 00:10:01.430
like <inaudible> management compatibility. If
you want to use any

178
00:10:01.430 --> 00:10:03.230
of the scripts that you
might already have for talking

179
00:10:03.230 --> 00:10:06.890
to the ISX management objects,
turn on the management console

180
00:10:06.890 --> 00:10:09.410
and stuff like that. So
that was the first thing

181
00:10:09.410 --> 00:10:11.720
for me to learn about.
That's not a 64 bit

182
00:10:11.720 --> 00:10:13.910
specific thing, but remember, this
was the first time I

183
00:10:13.910 --> 00:10:17.540
really started developing on Vista.
So nothing 64, but yet

184
00:10:17.540 --> 00:10:20.870
has come up so far
in this story. So then

185
00:10:20.870 --> 00:10:24.560
I had to pick IIS
seven pipeline modes. There's the

186
00:10:24.560 --> 00:10:28.940
integrated pipeline where you can
do.net kind of ICP filter

187
00:10:28.940 --> 00:10:32.330
type stuff. You can have
things that are like M

188
00:10:32.330 --> 00:10:35.150
HTTP modules on steroids. We'll
do a show on <inaudible>.

189
00:10:35.570 --> 00:10:37.940
At some point, I'd pick
that pipeline mode and I've

190
00:10:37.940 --> 00:10:40.310
got the command lines up
on the, up on the

191
00:10:40.310 --> 00:10:43.580
blog there. And, and then
I set up a couple

192
00:10:43.580 --> 00:10:46.460
of things, no problems at
all. Everything worked exactly as

193
00:10:46.460 --> 00:10:49.610
I thought. And then in
end on my particular application,

194
00:10:49.610 --> 00:10:51.260
in this case, it was
dusk blog and I was

195
00:10:51.260 --> 00:10:54.440
compiling and under visual studio,
2008. And when I ran

196
00:10:54.440 --> 00:10:57.850
it, I got a bad
image format exception. So the

197
00:10:57.850 --> 00:11:00.170
here and now we are
at a example of something

198
00:11:00.170 --> 00:11:02.570
that could potentially go wrong
when you're doing 64 bit.

199
00:11:03.530 --> 00:11:06.530
So you're doing your.net development.
Suddenly you hit bad image

200
00:11:06.530 --> 00:11:09.230
format, exception, not a very
good, a exception kind of

201
00:11:09.230 --> 00:11:13.190
thing. In this case here,
I was using a thing

202
00:11:13.190 --> 00:11:15.620
called the basic date picker.
It's just some control on

203
00:11:15.620 --> 00:11:19.220
asp.net control, but it does
some P invokes or something

204
00:11:19.220 --> 00:11:24.800
internally that is not a
64 bit compatible. So this

205
00:11:24.800 --> 00:11:27.320
is a real common thing.
You've got a library that

206
00:11:27.320 --> 00:11:31.760
you compiled using the, any
CPU, quote, any CPU, all

207
00:11:31.760 --> 00:11:35.750
one word and quote, a
compiler option and.net. And this

208
00:11:35.750 --> 00:11:38.030
is how it's supposed to
work, right? You compile your

209
00:11:38.030 --> 00:11:41.090
app in C-sharp or VB,
and you get an assembly

210
00:11:41.090 --> 00:11:43.640
and it just works. And
the PE header, the portable

211
00:11:43.640 --> 00:11:48.260
executable header just handle it,
handles this. And the automatically

212
00:11:48.260 --> 00:11:50.600
load is the 64 bit
framework or not. And everything

213
00:11:50.600 --> 00:11:54.880
just works. And in my
experience, 99.5% of all the,

214
00:11:55.480 --> 00:11:57.220
you know, dot net applications,
I've tried to work fine.

215
00:11:58.030 --> 00:12:00.580
In this instance, there was
some P and vote call

216
00:12:00.580 --> 00:12:03.220
or something crazy that they
were doing. And it turned

217
00:12:03.220 --> 00:12:05.260
out that I needed to
do one of two things.

218
00:12:05.770 --> 00:12:09.430
Okay. I needed to either
find a 64 bit version

219
00:12:09.430 --> 00:12:12.340
of this assembly, and there
was one available I compiled

220
00:12:12.340 --> 00:12:14.860
against it and it worked,
or, and this is a

221
00:12:14.860 --> 00:12:18.160
little more obscure. You actually
go into the advanced settings

222
00:12:18.160 --> 00:12:21.040
of a particular app pool,
and there's an option called

223
00:12:21.040 --> 00:12:24.160
enable 32 bit applications. This
is really interesting. So on

224
00:12:24.160 --> 00:12:27.610
64 bit Vista, you've got
the option to run your

225
00:12:27.610 --> 00:12:30.430
app pool. That's w three
WP dot exe. You remember

226
00:12:30.430 --> 00:12:34.330
the IIS seven worker process
as a 32 bit worker

227
00:12:34.330 --> 00:12:37.720
process, or a 64 bit
work process sounds kind of

228
00:12:37.750 --> 00:12:41.950
counterintuitive. But if you remember,
when we had that transitional

229
00:12:41.950 --> 00:12:47.080
point between asp.net one and
aspirin two, we had to

230
00:12:47.080 --> 00:12:49.780
make separate app pools to
say, I want all of

231
00:12:49.780 --> 00:12:52.420
my one, one applications running
in this app pool and

232
00:12:52.420 --> 00:12:55.180
all of my two applications
running in this Apple, that

233
00:12:55.180 --> 00:12:57.880
kind of separation of concerns
that separation of, we can

234
00:12:57.880 --> 00:13:00.760
only have one version of
the framework running in one

235
00:13:01.570 --> 00:13:04.420
Apple at a time. It's
the same kind of thinking.

236
00:13:04.450 --> 00:13:06.310
Now it's different in the
case, cause we're basically saying

237
00:13:06.310 --> 00:13:10.810
I want a 32 bit
application unmanaged loading up and

238
00:13:10.810 --> 00:13:13.630
hosting managed applications, or I
want the 64 bit version.

239
00:13:14.230 --> 00:13:17.020
But that idea that you
might potentially in a hosting

240
00:13:17.020 --> 00:13:19.870
environment have some 32 bit
applications and some 64, but

241
00:13:20.440 --> 00:13:23.830
it really all depends on
whether or not that application

242
00:13:23.830 --> 00:13:26.470
is doing something funky with
regards to either a P

243
00:13:26.470 --> 00:13:29.080
invoke or a calm call
to some component that just

244
00:13:29.440 --> 00:13:33.160
doesn't work under 32 bit
process. Now under Vista 64,

245
00:13:34.100 --> 00:13:35.920
the only thing that really
gives you the hint at

246
00:13:35.920 --> 00:13:38.140
any point that things are
different under the under the

247
00:13:38.140 --> 00:13:40.570
covers is when you right
click on the clock and

248
00:13:40.570 --> 00:13:42.310
bring up task manager and
take a look at the

249
00:13:42.310 --> 00:13:46.060
list of process names, any
process that is a 64

250
00:13:46.060 --> 00:13:49.690
bit process just looks like,
you know, food dot exe,

251
00:13:50.170 --> 00:13:54.790
but a 32 bit process
as food IDC. Asterik 32.

252
00:13:55.060 --> 00:13:57.040
So that's the only hint
that you have that something

253
00:13:57.220 --> 00:14:00.160
different is going on. Those
are 32 bit processes that

254
00:14:00.160 --> 00:14:02.590
are being run and kind
of that, that emulation mode

255
00:14:02.590 --> 00:14:07.810
that windows on windows 64
mode. So if you turn

256
00:14:07.810 --> 00:14:10.720
this app pool into an
enable 32 good applications at

257
00:14:10.720 --> 00:14:15.280
pool, suddenly you see w
three WP dot exe star

258
00:14:15.280 --> 00:14:18.880
32 appear in your task
manager. Of course you can

259
00:14:18.880 --> 00:14:20.830
make multiple app pools and
you can set this differently

260
00:14:20.830 --> 00:14:23.530
for each Apple. So that
makes a very interesting kind

261
00:14:23.530 --> 00:14:26.380
of multiplicity of, you know,
kind of a Cartesian product

262
00:14:26.440 --> 00:14:30.070
of different apples. You could
have 32, but app integrated

263
00:14:30.070 --> 00:14:34.540
pipeline, 32 bit app classic
pipeline, 64 bit app integrated

264
00:14:34.540 --> 00:14:38.290
pipeline, 64 bit app classic
pipeline. So without even getting

265
00:14:38.290 --> 00:14:41.860
into framework versioning versus, you
know, one versus two, you

266
00:14:41.860 --> 00:14:44.590
could potentially have four different
app pools running with these

267
00:14:44.590 --> 00:14:48.400
different, these different features. So
that was something to think

268
00:14:48.400 --> 00:14:51.380
about, not a huge deal
if you're only hosting one

269
00:14:51.380 --> 00:14:54.050
app, but something to be
aware of that, you know,

270
00:14:54.050 --> 00:14:56.870
the applicant, the process starts
out as either a 32

271
00:14:56.870 --> 00:14:58.880
bit or 64 bits. So
that was important thing to

272
00:14:58.880 --> 00:15:02.210
be thinking about. Now, there
is a tool that comes

273
00:15:02.210 --> 00:15:03.950
with visual studio. You can
open up a visual studio,

274
00:15:03.950 --> 00:15:08.270
command prompt, and run C
O R flags core flags

275
00:15:08.480 --> 00:15:11.150
dot exe on an assembly.
And you can see whether

276
00:15:11.150 --> 00:15:13.370
or not that thing was
compiled as a six as

277
00:15:13.370 --> 00:15:17.210
a 32 bit assembly or
not. And I get to

278
00:15:17.210 --> 00:15:19.100
run that on my basic
date picker, and I could

279
00:15:19.100 --> 00:15:22.850
see the difference. And it
turns out that the PE

280
00:15:22.850 --> 00:15:25.580
header will always say, you
know, PE 32 almost always

281
00:15:25.580 --> 00:15:28.370
see PE PE 32, but
there was a little 32

282
00:15:28.370 --> 00:15:36.230
bit flag. And that 30
cubit flag basically is asking

283
00:15:36.230 --> 00:15:39.350
the loader to say, you
know, I really insist that

284
00:15:39.350 --> 00:15:41.360
this be running a 32
bit process, or I really

285
00:15:41.360 --> 00:15:43.400
insist that this not be
running a 32 week process.

286
00:15:44.240 --> 00:15:46.970
And you can flip this
flag, actually the core flags

287
00:15:46.970 --> 00:15:48.740
that you see and you
can actually force it. But

288
00:15:48.740 --> 00:15:52.550
of course, theoretically, the user,
the developer, rather who wrote

289
00:15:52.550 --> 00:15:57.770
that assembly knows, knows best.
Ultimately though, that is a,

290
00:15:57.770 --> 00:16:00.920
that is a suggestion. That
flag is a suggestion. It's

291
00:16:00.920 --> 00:16:04.970
not a rule for me
unless you're doing some funky

292
00:16:04.970 --> 00:16:07.130
P invoke stuff. And I
don't mean to always say

293
00:16:07.130 --> 00:16:09.980
funky before, before P and
vote, but unless you're calling

294
00:16:10.010 --> 00:16:12.770
unmanaged code in a way
that is not 64 bit

295
00:16:12.770 --> 00:16:16.610
compatible than you really shouldn't
bump into these kinds of

296
00:16:16.610 --> 00:16:19.640
things, especially under asp.net, I
could see potentially with a

297
00:16:19.640 --> 00:16:22.520
WinForms application, you might be
doing some, some funny painting

298
00:16:22.520 --> 00:16:25.820
things or something as far
as talking to device drivers

299
00:16:25.820 --> 00:16:29.450
and things, but for asp.net,
straight talking to a database,

300
00:16:29.770 --> 00:16:31.490
I just can't imagine why
you'd have that problem. So

301
00:16:31.490 --> 00:16:35.210
for me, converting DAS blog
to run in 64 bit

302
00:16:35.210 --> 00:16:38.120
was a matter of finding
that one assembly that was

303
00:16:38.780 --> 00:16:41.480
not 64 bit compatible and
swapping it out. And I

304
00:16:41.480 --> 00:16:44.870
would suspect that in most
environments, that's rare. Now, if

305
00:16:44.870 --> 00:16:48.860
you are using third party
libraries and those third party

306
00:16:48.860 --> 00:16:52.550
libraries are using, obfuscators sometimes
the act of running an

307
00:16:52.550 --> 00:16:56.840
Obfuscator on an assembly, suddenly
forces the bit a rule.

308
00:16:57.320 --> 00:16:59.690
So you might have written
your code in a perfectly

309
00:16:59.690 --> 00:17:02.630
reasonable, any CPU kind of
a way, but at the

310
00:17:02.630 --> 00:17:05.090
office gate or flipped it
to being 32 bit or

311
00:17:05.090 --> 00:17:07.430
64 bit, that may be
what happened in the, in

312
00:17:07.430 --> 00:17:10.070
the basic date picker case.
But you know, if you're

313
00:17:10.070 --> 00:17:12.650
not doing that, you're not
gonna have to worry about

314
00:17:12.650 --> 00:17:14.420
it. But if you are
using office colors, you might

315
00:17:14.420 --> 00:17:16.010
want to talk to your
office, get our vendor to

316
00:17:16.010 --> 00:17:19.640
see if that's something that
is the case. Somebody other

317
00:17:19.640 --> 00:17:22.310
questions came up about drivers.
You know, what kind of

318
00:17:22.310 --> 00:17:25.190
effort was it to move
to 64? Now, I would

319
00:17:25.190 --> 00:17:27.740
say if you've, if you've
only got two gigs of

320
00:17:27.740 --> 00:17:30.320
Ram and you know, your
system has two gigs around

321
00:17:30.560 --> 00:17:33.380
there probably isn't a benefit
to moving to 64 bit.

322
00:17:33.410 --> 00:17:36.920
That's just my opinion. I
would say, unless you have

323
00:17:36.920 --> 00:17:39.560
four gigs around where you
really want to have more

324
00:17:39.560 --> 00:17:42.320
than four gigs, there's probably
no benefit, but as a,

325
00:17:42.470 --> 00:17:44.930
as a memory hog, that's
like I said before, I

326
00:17:44.930 --> 00:17:47.510
primarily why I wanted to
do it. Now, I work

327
00:17:47.510 --> 00:17:49.950
with Jeff Atwood on the
computer. We did a complete

328
00:17:49.950 --> 00:17:53.370
inventory of our hardware, and
we said, what 64 bit

329
00:17:53.370 --> 00:17:56.280
drivers are available and what
are we willing to jettison?

330
00:17:56.280 --> 00:17:59.250
What piece of hardware are
we willing to toss? Now?

331
00:17:59.250 --> 00:18:01.470
I was lucky because the,
the only hardware I think

332
00:18:01.470 --> 00:18:03.930
I had to get rid
of was a, a camera

333
00:18:03.960 --> 00:18:07.260
like a web camera and
a scanner, but it turned

334
00:18:07.260 --> 00:18:12.090
out that my Canon Pixma
MP 5,500, multi-function had a

335
00:18:12.120 --> 00:18:16.170
great 64 bit driver. I
think it's reasonable to assume

336
00:18:16.170 --> 00:18:19.260
that some of the larger
companies that are out there,

337
00:18:19.260 --> 00:18:21.150
the big ones, like the
Epson and the HPS will

338
00:18:21.150 --> 00:18:24.540
have 64 bit drivers. But
it's also fair to assume

339
00:18:24.540 --> 00:18:26.340
that if the piece of
hardware is a couple of

340
00:18:26.340 --> 00:18:28.470
years old, they might not
have bothered. Now that picks

341
00:18:28.470 --> 00:18:32.670
my line of multifunction printer
scanners. It's fairly new. So

342
00:18:32.670 --> 00:18:34.500
I was pleased that my
year and a half old

343
00:18:34.500 --> 00:18:37.980
two year old printer scanner
thing was, was, had a

344
00:18:37.980 --> 00:18:41.370
perfectly good 64 bit driver
worked just fine, but you

345
00:18:41.370 --> 00:18:44.430
know, my little Logitech quick
cam, it seemed reasonable that,

346
00:18:44.430 --> 00:18:47.190
that the thing was that
old, of course, on a

347
00:18:47.670 --> 00:18:50.970
six 64 bit Vista, you
don't want to spend a

348
00:18:50.970 --> 00:18:54.270
lot of time trying to,
trying to hack into it.

349
00:18:54.270 --> 00:18:55.950
I, I, it seems kind
of a silly thing to

350
00:18:55.950 --> 00:18:58.170
say, but I really was
concerned about stability. And I

351
00:18:58.170 --> 00:19:00.840
was, I was teased by
a number of, of listeners

352
00:19:00.840 --> 00:19:04.710
and blog readers by I
purchased an iPhone recently. And

353
00:19:04.770 --> 00:19:07.230
while I was able to
get iTunes installed on Vista

354
00:19:07.230 --> 00:19:09.990
64 without too much trouble.
Last week when I tried

355
00:19:09.990 --> 00:19:12.420
to activate the iPhone, I
didn't bother to Google first.

356
00:19:12.420 --> 00:19:14.850
I figured if I tuned
was installed, why wouldn't the

357
00:19:14.850 --> 00:19:18.930
iPhone be able to, to
activate? Well, of course, iTunes

358
00:19:18.960 --> 00:19:21.720
includes a number of things
that are driver related. The

359
00:19:21.720 --> 00:19:25.980
first being CD burning, it
includes a tool called gear

360
00:19:26.040 --> 00:19:29.550
that is an S PTD
driver for burning, and that

361
00:19:29.550 --> 00:19:32.250
doesn't, isn't compatible with the
CD burning driver for Damon

362
00:19:32.250 --> 00:19:35.610
tools. So my CD burning
doesn't work, but apparently also

363
00:19:35.610 --> 00:19:37.830
the driver that talks to
the iPhone for the purposes

364
00:19:37.830 --> 00:19:40.890
of activation also doesn't work.
And so I was kind

365
00:19:40.890 --> 00:19:44.970
of teased mercilessly mercilessly by
you people, a tongue in

366
00:19:44.970 --> 00:19:48.480
cheek. And I think the
gentleman's name, let me see,

367
00:19:48.480 --> 00:19:52.500
I'm scrolling down here. Here
we go. Mike van Mike

368
00:19:52.500 --> 00:19:56.010
van earlier, when I w
putting together the, the Vista

369
00:19:56.010 --> 00:19:59.610
64 machine said, don't install
anything on the machine use

370
00:19:59.610 --> 00:20:02.220
VMs. My Gran was the
guy who kind of convinced

371
00:20:02.220 --> 00:20:04.380
me that this VM way
of doing things was, was

372
00:20:04.380 --> 00:20:07.950
the way. And when I
recently published my 2007 tools

373
00:20:07.950 --> 00:20:11.850
list, I I've got about
six or seven virtual machines.

374
00:20:11.850 --> 00:20:13.800
I've got one for rails
development. I've got a new

375
00:20:13.800 --> 00:20:17.010
Boone, two machine, I've got
an old windows, 95 machine

376
00:20:17.010 --> 00:20:19.410
for sinking with my Newton.
And I've got a machine

377
00:20:19.410 --> 00:20:21.720
that I basically just will
install anything in, you know,

378
00:20:21.720 --> 00:20:25.380
it's a XP 32 bit
machine, a virtual machine, and

379
00:20:25.380 --> 00:20:27.450
I I'll throw anything in
there, but I did what

380
00:20:27.450 --> 00:20:29.910
Mike said and I, and
I'm not installing crap on

381
00:20:29.910 --> 00:20:33.150
my system. So here I
go, and I install iTunes.

382
00:20:33.780 --> 00:20:36.030
And, and Mike says in
the comments here, and I

383
00:20:36.030 --> 00:20:39.210
quote your X 64 box,
sounds like another three months.

384
00:20:39.210 --> 00:20:41.010
It's going to be due
for another re-install because of

385
00:20:41.010 --> 00:20:43.260
all the crap where that's
being installed and patched to

386
00:20:43.260 --> 00:20:46.050
make everything work. It's so
sad. All of us have

387
00:20:46.050 --> 00:20:48.010
spent so much time these
games just to get our

388
00:20:48.010 --> 00:20:51.520
system and software. How many
wasted Hansel minutes did you

389
00:20:51.520 --> 00:20:53.860
spend trying to get this
to work? I thought this

390
00:20:53.860 --> 00:20:56.350
was fine. And he basically
said that this is another

391
00:20:56.350 --> 00:20:58.930
example of how the software
industry is progressing too fast.

392
00:20:59.440 --> 00:21:01.630
Now I have to admit
that it's definitely gonna be

393
00:21:01.630 --> 00:21:04.690
enthusiasts people with a lot
of Ram and, you know,

394
00:21:04.690 --> 00:21:07.510
people like myself that are
gonna install 64 bit, but

395
00:21:07.720 --> 00:21:09.400
I just don't think it's
going to be that way.

396
00:21:09.400 --> 00:21:11.740
And, you know, in a
year or two, when service

397
00:21:11.740 --> 00:21:15.700
pack, one comes out, more
people start installing Vista. You

398
00:21:15.700 --> 00:21:18.220
know, they're gonna start installing
64 bit. And I think

399
00:21:18.220 --> 00:21:21.670
of course, you know, of
course, when a third 64

400
00:21:21.670 --> 00:21:23.320
bits, the only way to
go they'll do it. And

401
00:21:23.320 --> 00:21:24.670
I, and I would say
that I don't think that

402
00:21:24.670 --> 00:21:27.730
the, the Vista 32 bit
to 64 bit transition was

403
00:21:27.730 --> 00:21:32.590
quite as smooth as the,
as the Mac transition. You

404
00:21:32.590 --> 00:21:36.700
know, the Mac OS 10
universal binary transition. I think

405
00:21:36.700 --> 00:21:39.190
it was done fairly smoothly,
but, but if you talk

406
00:21:39.200 --> 00:21:41.110
to Mac developers, there was
a heck of a lot

407
00:21:41.110 --> 00:21:44.200
of development pain in the
background. There were a lot

408
00:21:44.200 --> 00:21:46.420
of developers that were told
that this needed to happen.

409
00:21:46.420 --> 00:21:48.430
You need to get those
universal binaries out right away.

410
00:21:48.910 --> 00:21:50.680
But I will admit that
the way that they, they

411
00:21:50.680 --> 00:21:52.600
came up with the transition
plan did seem a little

412
00:21:52.600 --> 00:21:55.300
bit simpler, but of course,
Apple controls the hardware. I

413
00:21:55.300 --> 00:21:56.500
think that's one of the
things that I think when

414
00:21:56.500 --> 00:22:00.220
people compare Apple and, and
windows, they forget that Vista

415
00:22:00.220 --> 00:22:04.540
has to support much broader
a world of hardware, a

416
00:22:04.540 --> 00:22:07.270
much broader world of devices
than, than the Mac does.

417
00:22:08.110 --> 00:22:10.960
And of course they tend
Mac tends to end of

418
00:22:10.960 --> 00:22:14.620
life things a lot quicker
than, than Microsoft does. Now,

419
00:22:14.620 --> 00:22:16.540
Mike here, he says he
had to install Vista X

420
00:22:16.540 --> 00:22:20.230
64, three times since it's
released. But I think that

421
00:22:20.230 --> 00:22:23.980
he's, he's overstating things a
little bit because I really

422
00:22:23.980 --> 00:22:25.870
haven't installed that much stuff
on the system. And I've

423
00:22:25.870 --> 00:22:28.540
been really careful not to
install anything that installs a

424
00:22:28.540 --> 00:22:32.740
driver. For example, I wanted
to install Bioshock, but you

425
00:22:32.740 --> 00:22:35.890
know, Bioshock installed a root
kit and I didn't want

426
00:22:35.890 --> 00:22:37.420
to be a part of
that. And it didn't seem

427
00:22:37.420 --> 00:22:40.000
like a safe thing to
install, but I did install

428
00:22:40.000 --> 00:22:43.630
steam steam from a valve
software, and I installed half-life

429
00:22:43.660 --> 00:22:47.830
to cause half-life to had
a native 64 bit process

430
00:22:48.220 --> 00:22:50.680
and installed in a well
known directory. And it didn't

431
00:22:50.680 --> 00:22:52.780
put any services or anything
on my system I needed

432
00:22:52.780 --> 00:22:56.470
to worry about. So I
think that the kinds of

433
00:22:56.470 --> 00:23:01.150
stuff that people install that
make their systems unstable are

434
00:23:01.150 --> 00:23:04.720
things like things that run
on the tray and things

435
00:23:04.720 --> 00:23:08.110
that run within the Explorer
dot exe process. I am

436
00:23:08.110 --> 00:23:10.660
really judicious about what I
decide to load up into

437
00:23:10.660 --> 00:23:13.000
Explorer to DXE. I think
the only thing that I've

438
00:23:13.000 --> 00:23:16.900
installed so far on my
64 bit machine is subversion

439
00:23:16.930 --> 00:23:20.350
subversion has its version as
a 64 bit process. So

440
00:23:20.350 --> 00:23:23.260
that gets hooked into my
right click menu. Other than

441
00:23:23.260 --> 00:23:27.790
that, the MEC subversion Damon
tools, 64, which I've been

442
00:23:27.790 --> 00:23:31.420
very happy with from mounting
ISO images. You know, that's,

443
00:23:31.420 --> 00:23:33.850
that's about it. There's not
a lot of stuff installed

444
00:23:33.850 --> 00:23:36.610
on this machine and I
really do feel that it's

445
00:23:36.610 --> 00:23:41.050
stable. So while the iPhone
rant that I kind of

446
00:23:41.050 --> 00:23:44.050
had on the blog recently
was kind of a, an

447
00:23:44.050 --> 00:23:45.980
interesting one because people were
trying to figure out well,

448
00:23:45.980 --> 00:23:49.520
is it Apple's fault for
not supporting 64 Mitt? Or

449
00:23:49.520 --> 00:23:52.400
is it a I, you
know, Microsoft's fault for not

450
00:23:52.400 --> 00:23:56.480
having perfect 32 bit support
now, considering that the issue

451
00:23:56.480 --> 00:24:00.800
is a driver. And considering
also that I iTunes clearly

452
00:24:01.670 --> 00:24:06.170
sucks egregiously on 32 at
Vista. I don't think that

453
00:24:06.170 --> 00:24:08.810
the argument in the case
here that is 64 bit

454
00:24:08.810 --> 00:24:11.750
is the problem. So I
think it's a completely specious

455
00:24:11.750 --> 00:24:15.350
argument that, you know, iTunes
on 64 bit doesn't work,

456
00:24:15.350 --> 00:24:19.220
therefore 64 bits sucks. I
think that iTunes started sucking

457
00:24:19.220 --> 00:24:21.500
at iTunes seven, and there's
not many people who can

458
00:24:21.500 --> 00:24:24.530
argue otherwise with the iPhone.
I ended up getting it

459
00:24:24.530 --> 00:24:26.810
to work just by sinking
it with my Mac. I

460
00:24:26.810 --> 00:24:29.810
brought my contacts over with
Plaxo and brought that into

461
00:24:29.810 --> 00:24:32.960
the address book. I brought
my calendar items over with

462
00:24:32.960 --> 00:24:35.750
spanning sink and sink that
to I Cal and then

463
00:24:35.750 --> 00:24:38.390
everything syncs fine. It's all
happening in the background. And

464
00:24:38.390 --> 00:24:40.880
really in this case, Google
calendar is ending up being

465
00:24:40.880 --> 00:24:44.810
the hub. It's unfortunate, but
I will give Apple this.

466
00:24:45.170 --> 00:24:47.660
Their stuff works great with
their stuff. The iPhone works

467
00:24:47.660 --> 00:24:49.460
fantastic. As long as I
just don't let it talk

468
00:24:49.460 --> 00:24:52.520
to my Vista machine and
that'll be a, a, you

469
00:24:52.520 --> 00:24:55.220
know, I'll give him that.
Actually. I think I'm probably

470
00:24:55.220 --> 00:24:56.900
going to give the thing.
I'm probably going to think

471
00:24:56.900 --> 00:24:59.450
back. I'm going to see
how it works up here

472
00:25:00.050 --> 00:25:02.720
at Microsoft for the week.
But I did find out

473
00:25:02.720 --> 00:25:04.280
that I can pull the
SIM card out of my

474
00:25:04.280 --> 00:25:06.590
iPhone and I can plug
it back into my HTC

475
00:25:06.590 --> 00:25:09.980
dash running windows mobile. So
if, if I find out

476
00:25:09.980 --> 00:25:12.710
that the, you know, the
mobiles is really gonna work

477
00:25:12.710 --> 00:25:14.810
for me much better on
up using that, but I'm

478
00:25:14.810 --> 00:25:17.930
really not an X 64
issue. Alright, let me see

479
00:25:17.930 --> 00:25:20.420
if I missed anything else.
Oh yeah. A couple of

480
00:25:20.420 --> 00:25:23.780
benefits of a 64 bit
people have been saying very

481
00:25:23.780 --> 00:25:26.570
vague things about, well, there's
other benefits like security and

482
00:25:26.570 --> 00:25:30.110
reliability of a 64 bit.
So I wanted to really

483
00:25:30.590 --> 00:25:32.420
dig into that a little
bit and find out what,

484
00:25:32.450 --> 00:25:35.390
what is the difference? Why
is 64 bit considered more

485
00:25:35.390 --> 00:25:38.120
secure or more this or
more of that? So I

486
00:25:38.120 --> 00:25:40.910
went up and I found
Jeff Jones, security blog. Jeff Jones works

487
00:25:40.910 --> 00:25:45.950
for Microsoft and he found
three benefits to Vista 64

488
00:25:46.100 --> 00:25:49.100
that are, that are unique
to 64. The first one

489
00:25:49.100 --> 00:25:53.720
is hardware protection was called
NX protection, no execute protection.

490
00:25:53.720 --> 00:25:55.130
This is where you can
actually Mark a chunk of

491
00:25:55.130 --> 00:25:58.250
memory is not being executable.
So if, if a buffer

492
00:25:58.250 --> 00:26:00.920
over on happens, they can't
actually jump to that point

493
00:26:00.920 --> 00:26:03.620
in memory and start executing.
You also call it depth

494
00:26:03.650 --> 00:26:07.630
data, execution prevention, actually a
funny story, a go take

495
00:26:07.650 --> 00:26:09.860
a look at Omar Shahin's
blog. He just found out

496
00:26:09.860 --> 00:26:12.590
that the latest version of
Microsoft money, this is a

497
00:26:12.590 --> 00:26:17.330
Microsoft product money, 2008 won't
run with DEP on, which

498
00:26:17.330 --> 00:26:19.100
is lovely. It actually says
in the release notes, you

499
00:26:19.100 --> 00:26:20.900
have to turn off depth
to get money, to run

500
00:26:21.380 --> 00:26:24.260
very uncool of that product,
to not work. That's why

501
00:26:24.260 --> 00:26:26.960
I gave money up a
while back. So with Vista,

502
00:26:28.160 --> 00:26:32.540
no execute or depth data
execution protection is an opt

503
00:26:32.540 --> 00:26:35.540
in basis where an executable
actually has to Mark itself

504
00:26:35.540 --> 00:26:37.370
as being opt in. I
want to be a part

505
00:26:37.370 --> 00:26:40.100
of this on 64, that's
turned on by default. So

506
00:26:40.100 --> 00:26:44.490
all code by default is,
is being protected by data

507
00:26:44.490 --> 00:26:47.010
execution prevention. Unless you explicitly
go in either turn it

508
00:26:47.010 --> 00:26:49.410
off or turn it off
on a process by process

509
00:26:49.410 --> 00:26:52.770
basis. And then there's this
big discussion that's going on

510
00:26:52.770 --> 00:26:56.190
about patch guard patch guard
is a big part of

511
00:26:56.940 --> 00:27:00.000
the Vista 64 security story,
because when you're doing a

512
00:27:00.030 --> 00:27:03.120
driver development, typically you want
to, you want to jump

513
00:27:03.120 --> 00:27:06.210
into the kernel and basically
patch it up, get hooks

514
00:27:06.210 --> 00:27:08.250
in there, such that people
will call you rather than

515
00:27:08.250 --> 00:27:12.220
calling other things, making chains
and the Colonel change of

516
00:27:12.560 --> 00:27:17.330
intercepts. And that's not allowed
in Vista 64, it's called

517
00:27:17.330 --> 00:27:20.780
patch guard. And turns out
that they're going to come

518
00:27:20.780 --> 00:27:23.270
up with a secure way
to do that. Theoretically, invest

519
00:27:23.270 --> 00:27:26.900
a service pack. One because
a lot of driver manufacturers

520
00:27:26.900 --> 00:27:29.690
got upset when that happened,
but those kinds of things

521
00:27:29.690 --> 00:27:32.420
prevent blue screens. They, they
don't stop blue screens, but

522
00:27:32.420 --> 00:27:34.550
they do prevent a number
of driver related blue screens.

523
00:27:35.330 --> 00:27:37.850
And there's also another thing
where when Vista starts up

524
00:27:39.350 --> 00:27:43.730
in the past in previous
versions of, of windows memory

525
00:27:43.730 --> 00:27:46.100
is very predictable. All of
the different modules get loaded

526
00:27:46.100 --> 00:27:48.110
about the exact same place
in memory so that you

527
00:27:48.110 --> 00:27:50.480
can do evil things because
stuff that you expect will

528
00:27:50.480 --> 00:27:54.830
show up there, Invista the
memory is kind of randomized.

529
00:27:54.830 --> 00:27:58.040
There's a number of different
opportunities for stuff to show

530
00:27:58.040 --> 00:28:00.350
up in different places. I
think it's like 256 different

531
00:28:00.350 --> 00:28:03.740
combinations of places where modules
potentially get loaded in that

532
00:28:03.770 --> 00:28:08.060
early, early point of a
Vista. There's also the, of

533
00:28:08.060 --> 00:28:11.240
course the drivers signing. I
think the number one thing

534
00:28:11.600 --> 00:28:15.530
that has made Vista 64,
a more stable for me

535
00:28:15.530 --> 00:28:19.280
personally, is that you can
install on sign drivers. So

536
00:28:19.280 --> 00:28:23.180
you can't get that. You
know, that that's, it's just

537
00:28:23.180 --> 00:28:25.790
driver from that weird little
company in that you never

538
00:28:25.790 --> 00:28:28.580
heard of for that funky
webcam that costs $5 and

539
00:28:28.580 --> 00:28:30.680
came, you know, came with
a tiny three and a

540
00:28:30.680 --> 00:28:33.170
half inch CD rom. And
you're not really sure where

541
00:28:33.170 --> 00:28:36.260
the drivers came from. I
remember running through the program.

542
00:28:36.320 --> 00:28:39.980
Auto runs from SIS internal
auto runs is a fantastic

543
00:28:40.010 --> 00:28:41.900
program. You need to definitely
Google for that and check

544
00:28:41.900 --> 00:28:45.320
it out and looking at
all of the different things

545
00:28:45.500 --> 00:28:48.950
that got started up on
my system, okay. Started up

546
00:28:48.980 --> 00:28:51.200
during the startup process, not
just stuff that's in the

547
00:28:51.200 --> 00:28:54.440
startup folder, but things run
a key in the registry.

548
00:28:54.830 --> 00:28:56.390
And then that caused me
to go down on my

549
00:28:56.390 --> 00:29:00.680
old Vista 32 machine and
into the system 32 and

550
00:29:00.680 --> 00:29:04.040
also in the system 32
slash drivers folder. And I

551
00:29:04.040 --> 00:29:06.170
encourage you to do this
on your Vista 32 machines,

552
00:29:06.590 --> 00:29:10.220
do a DIR descending by
date. You want to see

553
00:29:10.220 --> 00:29:14.900
the, the old stuff. And
I ended up finding really,

554
00:29:14.900 --> 00:29:17.810
really old drivers sitting in
there. And it turned out

555
00:29:17.810 --> 00:29:20.990
that I had installed some
stuff that was using like

556
00:29:20.990 --> 00:29:24.920
NTT for style drivers, drivers
from like the early nineties.

557
00:29:25.970 --> 00:29:28.730
And those were ending up
in, in process space. Of

558
00:29:28.730 --> 00:29:32.240
course you can use things
like process Explorer, see those

559
00:29:32.240 --> 00:29:37.100
things and found a number
of really, really old drivers

560
00:29:37.100 --> 00:29:39.590
that got loaded by a
lot of the AZ, as

561
00:29:39.590 --> 00:29:42.700
Mike says, crap, where that
I was installing was playing

562
00:29:42.700 --> 00:29:44.680
around. You know, you put
a piece of shareware on

563
00:29:44.680 --> 00:29:49.980
your machine, you see that,
that strange blue gradient, they,

564
00:29:50.110 --> 00:29:52.390
the, I call it the
wise install gradient. Cause you

565
00:29:52.390 --> 00:29:56.350
can see those things. It's
the old style installer. That's

566
00:29:56.350 --> 00:29:57.670
the first time that maybe
you don't want to be

567
00:29:57.670 --> 00:30:01.090
installing that thing, but I
would just punch through, install

568
00:30:01.090 --> 00:30:02.920
it anyway. And I ended
up with a lot of

569
00:30:02.920 --> 00:30:06.040
crap on my system loaded
into memory, maybe not necessarily

570
00:30:06.040 --> 00:30:08.260
running, but you just don't
know how those things get

571
00:30:08.260 --> 00:30:12.400
unstable. I used to have
my Vista 32 machine just

572
00:30:12.550 --> 00:30:15.100
to explore, which has disappeared
as poof and be gone,

573
00:30:15.610 --> 00:30:18.040
you know, four or five
times a day. I'm just

574
00:30:18.040 --> 00:30:20.890
not seeing that on 64.
I don't know. It's probably

575
00:30:20.890 --> 00:30:25.120
a combination of some of
the protection that 64 offers,

576
00:30:25.120 --> 00:30:27.280
but also the fact that
I'm treating 64 as a

577
00:30:27.280 --> 00:30:30.760
whole new world. And I'm
a lot more careful for

578
00:30:30.760 --> 00:30:33.880
installing stuff that really ought
not be on there. So

579
00:30:34.240 --> 00:30:36.820
I think that finding a
balance between what Mike was

580
00:30:36.820 --> 00:30:40.120
saying, and then what I'm
saying, you know, don't be

581
00:30:40.120 --> 00:30:42.940
afraid to install a driver
if it's, if it's available

582
00:30:42.940 --> 00:30:46.000
and it's from a big
reputable company, but, but also

583
00:30:46.000 --> 00:30:48.400
if you can use all
that Ram use virtual PC

584
00:30:48.400 --> 00:30:52.660
use VMware, a number of
readers suggested that I use

585
00:30:52.690 --> 00:30:57.400
VMware because of their USB
support. So unless the program

586
00:30:57.610 --> 00:30:58.990
and, and I do not
know this in the case

587
00:30:58.990 --> 00:31:00.880
of iTunes, but I wouldn't
be surprised cause I've had

588
00:31:00.880 --> 00:31:03.370
a number of programs that
will detect that they're running

589
00:31:03.370 --> 00:31:05.950
in a VM, but unless
the program can detect it's

590
00:31:05.950 --> 00:31:09.160
running in a VM, why
not do that install inside

591
00:31:09.160 --> 00:31:11.730
of a virtual machine first
and see if that's a

592
00:31:11.740 --> 00:31:15.220
safe program, I got an
external drive, I've got these

593
00:31:15.220 --> 00:31:18.490
seven VMs. It's really made
things a lot smoother. And

594
00:31:18.550 --> 00:31:21.010
being able to load a
VM and not have to

595
00:31:21.010 --> 00:31:23.410
shut down outlook and not
have to shut down dev

596
00:31:23.410 --> 00:31:26.140
and the 16 different instances
of IIE and the four

597
00:31:26.140 --> 00:31:29.410
different instances of Firefox that
I've got running all adds

598
00:31:29.410 --> 00:31:32.620
up to a positive experience.
So kind of in conclusion

599
00:31:32.860 --> 00:31:35.830
development wise, there are a
couple of little things around

600
00:31:35.830 --> 00:31:39.730
bitterness that were something I
had to think about. Mostly

601
00:31:39.730 --> 00:31:41.950
it was iOS seven type
stuff, and it was mostly

602
00:31:41.950 --> 00:31:44.200
common sense and I'm documenting
it as I go along.

603
00:31:44.200 --> 00:31:46.660
So you'll find the Google
support out there. You'll find

604
00:31:46.660 --> 00:31:49.810
Google help for these things,
but a 64 from a

605
00:31:49.810 --> 00:31:55.690
development perspective vs 2008, it
just worked. The compilers just

606
00:31:55.690 --> 00:31:59.290
worked. I'm going to do
an episode and maybe a

607
00:31:59.290 --> 00:32:04.120
blog post on multithreaded multi
kind of multiprocessor ms. Build

608
00:32:04.120 --> 00:32:07.210
farms being able to spin
up multiple ms. Builds in

609
00:32:07.210 --> 00:32:12.070
parallel. So parallel ms. Builds
on quad proc machines. That's

610
00:32:12.100 --> 00:32:13.750
not really a 64 bit
thing, but it's more of

611
00:32:13.750 --> 00:32:17.170
a quad proc thing, but
I haven't had any problems.

612
00:32:17.170 --> 00:32:19.690
I've developed a number of
applications just in the last

613
00:32:19.690 --> 00:32:22.840
in little applications, compiled a
whole bunch of source code

614
00:32:22.840 --> 00:32:25.390
in my quest to read
more social grown. Haven't had

615
00:32:25.390 --> 00:32:29.500
any problems pointing to a
64 bit when it came

616
00:32:29.500 --> 00:32:32.740
to the.net development. So, you
know, if you want to

617
00:32:33.100 --> 00:32:35.050
crap load a Ram, you
got four gigs of Ram

618
00:32:35.050 --> 00:32:37.840
or more you like VMs.
You know, I don't think

619
00:32:37.840 --> 00:32:40.580
if you've got hardware that
was made recently, if you've

620
00:32:40.580 --> 00:32:44.810
got a core, two duo
or a newer AMD and,

621
00:32:44.810 --> 00:32:47.300
and brand name hardware, I
think it's worth a try

622
00:32:47.300 --> 00:32:49.400
at least, you know, and
you could do what a,

623
00:32:49.400 --> 00:32:51.440
what Atwood told me, which
is like, pull out your

624
00:32:51.440 --> 00:32:53.660
C drive, put it somewhere
else. I'm not a big

625
00:32:53.690 --> 00:32:56.300
fan of dual boots. I'm
just not pull out your

626
00:32:56.300 --> 00:32:58.340
sheet, drive, get another sheet
drive and try it out.

627
00:32:58.370 --> 00:33:00.950
See how it works. Oh
yeah. I think the other

628
00:33:00.950 --> 00:33:04.130
thing that we saw was
a, some chip sets of

629
00:33:04.130 --> 00:33:09.260
motherboards have trouble installing Vista
64 when you have four

630
00:33:09.260 --> 00:33:11.720
gigs installed, not all chip
sets, but just a couple.

631
00:33:11.720 --> 00:33:13.910
I've heard a couple of
reports of this. So people

632
00:33:13.910 --> 00:33:16.550
basically dropped the Ram down
to two gigs. They do

633
00:33:16.550 --> 00:33:18.080
the install and they bring
it back up to four.

634
00:33:19.700 --> 00:33:21.320
I didn't, I didn't see
that, but a couple of

635
00:33:21.320 --> 00:33:24.350
people emailed me that they
had that problem. So that's

636
00:33:24.350 --> 00:33:27.260
what I got to say.
And now it is a

637
00:33:27.290 --> 00:33:29.960
10 o'clock at night and
I'm going to work tomorrow

638
00:33:29.960 --> 00:33:32.060
at Microsoft at eight 30
in the morning. And I'm

639
00:33:33.020 --> 00:33:35.900
scared out of my mind.
So dear reader, dear listener,

640
00:33:35.930 --> 00:33:38.030
thank you for spending this
little bit of time with

641
00:33:38.030 --> 00:33:40.250
me. And I'll hopefully come
up with a number of

642
00:33:40.250 --> 00:33:44.030
cool interviews and try to
get you guys information. Email

643
00:33:44.030 --> 00:33:46.310
me, email me, and ask
any questions that you've got,

644
00:33:46.310 --> 00:33:47.600
that you might be stumped
on that you can think

645
00:33:47.600 --> 00:33:50.660
of could go to Microsoft
people and find out if

646
00:33:50.660 --> 00:33:53.240
there's a topic that you
think just isn't being covered

647
00:33:53.240 --> 00:33:55.850
in the kind of depth
that you want. You know,

648
00:33:55.850 --> 00:33:58.310
what do you want to
see now that you've gotten

649
00:33:58.310 --> 00:34:00.830
me on the inside? You
know, they're not going to

650
00:34:01.000 --> 00:34:02.450
someone emailed me and asked
me if they were going

651
00:34:02.450 --> 00:34:04.850
to be folding me into
channel nine. That's a totally

652
00:34:04.850 --> 00:34:07.340
different group. One of these
days, I'll do a show

653
00:34:07.340 --> 00:34:09.410
on how Microsoft is kind
of organized from a developer

654
00:34:09.410 --> 00:34:12.050
division perspective. Right now I
work for a guy named

655
00:34:12.050 --> 00:34:15.590
Simon Muzzio and he works
for Scott Guthrie. So there's me.

656
00:34:15.860 --> 00:34:18.500
I work for Simon. Simon
works for Scott and I

657
00:34:18.500 --> 00:34:21.350
talk to Scott all the
time. So there's no marketing

658
00:34:21.350 --> 00:34:24.080
person. I don't work for
marketing. I don't even work

659
00:34:24.080 --> 00:34:27.770
for what's called developer platform
evangelism. So I'm just kind

660
00:34:27.770 --> 00:34:31.730
of like dev dibs kind
of private blogger guy. So

661
00:34:31.730 --> 00:34:34.970
a while we will be
on channel nine occasionally. And

662
00:34:34.970 --> 00:34:37.280
I've got a relationship with
the guys that run channel

663
00:34:37.280 --> 00:34:40.520
nine. Don't expect to see
any of the content that

664
00:34:40.520 --> 00:34:42.650
I do like fold in.
It's not like the blog

665
00:34:42.650 --> 00:34:44.150
is going to become a
part of channel nine or

666
00:34:44.150 --> 00:34:47.480
something like that. So yeah,
I'm kind of an independent

667
00:34:47.480 --> 00:34:49.970
right now. If there's things
you want to see, email

668
00:34:49.970 --> 00:34:52.040
me, let me know. And
this has been another episode

669
00:34:52.040 --> 00:35:00.730
of Hansel minutes. <inaudible>.

