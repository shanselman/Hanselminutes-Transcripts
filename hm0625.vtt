WEBVTT FILE

1
00:00:00.570 --> 00:00:04.350
Hey folks. Today's episode was
sponsored by Datadog it's. A

2
00:00:04.350 --> 00:00:08.550
cloud scale monitoring and analytics
platform. Datadog was built to

3
00:00:08.550 --> 00:00:12.600
bring clarity to complex dynamic
applications in the cloud, on

4
00:00:12.600 --> 00:00:16.980
premises in containers or wherever
they run with beautiful dashboards,

5
00:00:17.100 --> 00:00:21.450
distributed, tracing, and seamless integrations
with more than 200 technologies,

6
00:00:21.900 --> 00:00:26.310
including Azure and Docker and
PagerDuty Datadog provides deep end

7
00:00:26.310 --> 00:00:28.980
to end visibility into the
health and performance of modern

8
00:00:28.980 --> 00:00:33.420
apps. Visualize key metrics, set
alerts to identify anomalies and

9
00:00:33.420 --> 00:00:36.660
collaborate with your team to
troubleshoot and fix issues fast.

10
00:00:37.200 --> 00:00:39.420
I'd like you to try
it yourself by starting a

11
00:00:39.420 --> 00:00:43.410
free 14 day trial today,
listeners of this podcast will

12
00:00:43.410 --> 00:00:49.650
also get a free Datadog
t-shirt get started at bitly.com/data

13
00:00:49.650 --> 00:01:08.270
dog shirt. That's bitly.com/datadog shirt.
<inaudible>. Hey, this is Scott

14
00:01:08.270 --> 00:01:10.760
Hanselman. This is another episode
of Hansel minutes. And today

15
00:01:10.760 --> 00:01:15.290
I'm talking with Matt Phillips
from big evil corporation. And

16
00:01:15.320 --> 00:01:18.710
how are you, sir? I'm
fine. Thank you. I am

17
00:01:18.800 --> 00:01:21.260
freaking thrilled to talk to
you because as folks know,

18
00:01:21.260 --> 00:01:23.690
I do a lot of
retro gaming. I'm looking at

19
00:01:23.690 --> 00:01:25.760
my desk right here and
I see one, two, three,

20
00:01:25.760 --> 00:01:30.770
four different different arcade machines.
I have a Sega in

21
00:01:30.770 --> 00:01:32.960
the other room. I've gotten
into windows and super Nintendos,

22
00:01:32.960 --> 00:01:35.660
and you're doing something interesting.
You have created a brand

23
00:01:35.660 --> 00:01:39.230
new and original game for
the Sega mega drive or

24
00:01:39.230 --> 00:01:41.030
the Genesis has people know
it on the U S

25
00:01:41.360 --> 00:01:45.290
called Tanglewood, except you're releasing
this on a cartridge. You

26
00:01:45.310 --> 00:01:48.320
got a successful Kickstarter and
you developed it in an

27
00:01:48.320 --> 00:01:51.440
interesting way. You didn't write
this with modern tools. Yeah,

28
00:01:51.470 --> 00:01:57.050
no old written with development
hardware, using original processes methodologies.

29
00:01:58.160 --> 00:02:01.970
So being with the original
hardware, like, like the actual

30
00:02:02.660 --> 00:02:06.170
developer device from Sega. Yeah,
it's a, it's a cross

31
00:02:06.170 --> 00:02:09.050
product development kit. Who are
the manufacturers developed the hardware

32
00:02:09.050 --> 00:02:13.850
at the time from 1990
to, Oh my goodness. Okay.

33
00:02:13.850 --> 00:02:16.160
So what does that now?
20, how old is that?

34
00:02:16.190 --> 00:02:22.010
26 years. Ish. Yeah, ish.
So my, my dad is

35
00:02:22.010 --> 00:02:24.800
a, is a woodworker and
he has a whole woodworking

36
00:02:24.800 --> 00:02:27.740
setup in his garage. And
he's got all these modern

37
00:02:27.740 --> 00:02:31.070
tools and modern devices and
laser this and laser that

38
00:02:31.070 --> 00:02:34.520
to, to go and work
with ancient techniques and stuff.

39
00:02:34.880 --> 00:02:36.380
And every once in a
while there he'll watch a

40
00:02:36.380 --> 00:02:40.940
show called the, the traditional
woodworker or whatever. And he'll,

41
00:02:41.030 --> 00:02:43.970
he'll see them doing the
old style wood and the

42
00:02:43.970 --> 00:02:45.980
old style stuff. And I'll
say, why don't you do

43
00:02:45.980 --> 00:02:48.740
it like that, dad? And
he's like, you know, it's

44
00:02:48.740 --> 00:02:51.320
impressive to watch, but it's
hard to do so. So

45
00:02:51.320 --> 00:02:54.020
we'll use the modern tools.
How did the honest of

46
00:02:54.020 --> 00:02:56.480
this, how did you decide
to not just write this

47
00:02:56.480 --> 00:02:59.030
in modern tools with an
emulator? Why do it with

48
00:02:59.110 --> 00:03:02.890
original tools? I guess that's
an authenticity thing. Something I

49
00:03:02.900 --> 00:03:05.280
wanted to do since I
was a kid. So the

50
00:03:05.290 --> 00:03:08.980
dream kind of never left
me. So when I decided

51
00:03:08.980 --> 00:03:10.660
to finally do it and
I got the opportunity to

52
00:03:10.660 --> 00:03:12.280
do it, I still wanted
to do it like it

53
00:03:12.280 --> 00:03:15.730
was done when I was
a kid. Just sort of

54
00:03:15.790 --> 00:03:19.000
try and live that dream
properly. So to speak. I

55
00:03:19.000 --> 00:03:21.870
mean, when you say when
the opportunity, like, Did you

56
00:03:21.870 --> 00:03:24.120
decide one day or did
something happen that I sent

57
00:03:24.120 --> 00:03:26.070
it to you? I've been
trying to get into it

58
00:03:26.070 --> 00:03:29.850
for, for many years. I
tried learning on an Amiga

59
00:03:30.490 --> 00:03:33.990
Atari at the time. I
really couldn't get along with

60
00:03:33.990 --> 00:03:36.690
it very well. It was
when I started working at

61
00:03:36.690 --> 00:03:40.980
travelers tales about eight years
ago, some of the old

62
00:03:41.100 --> 00:03:44.310
veteran mega drive programmers there
had got ideas into my

63
00:03:44.310 --> 00:03:46.020
head. So you should really
follow up in the stream

64
00:03:46.020 --> 00:03:48.750
is actually really easy to
do. Just, just give it

65
00:03:48.750 --> 00:03:53.220
a go, just try it
again. And I did. And

66
00:03:53.250 --> 00:03:56.970
after that, I, I started
scaring websites for this development

67
00:03:56.970 --> 00:04:00.180
hardware, trying to put pieces
of the puzzle together, try

68
00:04:00.180 --> 00:04:03.360
and get it. And the
thing came from all over

69
00:04:03.360 --> 00:04:06.300
the world. So it wasn't
a day I woke up

70
00:04:06.300 --> 00:04:08.640
and said, right, I'm going
to do this. Now. It

71
00:04:08.640 --> 00:04:10.590
was, it was a couple
of years of looking for

72
00:04:10.590 --> 00:04:14.040
the pieces for this equipment.
I'm slowly getting more and

73
00:04:14.040 --> 00:04:16.320
more excited about the project
as more and more pieces

74
00:04:16.320 --> 00:04:18.600
of it came in. And
you know, it was, it

75
00:04:18.600 --> 00:04:22.740
was a slow brewing process
over many years. And just

76
00:04:22.740 --> 00:04:25.350
for context, for people who
might not know what Traveler's

77
00:04:25.350 --> 00:04:28.080
tales is, these are the
folks that make the Lego

78
00:04:28.200 --> 00:04:30.810
games as, as including other
things. And we see that

79
00:04:30.810 --> 00:04:33.810
T T logo, All of
our, our Lego games. So

80
00:04:33.810 --> 00:04:37.920
you work there. Yeah. So
you used to Around for

81
00:04:37.920 --> 00:04:41.520
forever as well. They started
in 1989. So while we

82
00:04:41.520 --> 00:04:44.100
think of them, maybe modern
today is like Lego star

83
00:04:44.100 --> 00:04:47.130
Wars. That's an animation studio
and a development company that's

84
00:04:47.130 --> 00:04:52.470
been around for 30. Yeah.
And they started doing Amiga

85
00:04:52.470 --> 00:04:54.840
games. I think their first
game was Leander back on

86
00:04:54.840 --> 00:04:58.200
the Amiga. And they started
doing mechatronics came in after

87
00:04:58.200 --> 00:05:01.290
that. And they managed to
acquire some large licenses, things

88
00:05:01.290 --> 00:05:05.280
like Sonic 3d toy story.
They do a Mickey mouse

89
00:05:05.280 --> 00:05:10.980
game. Yeah. They went from
there onto logo. So does

90
00:05:10.980 --> 00:05:13.860
that mean that you had
like the help or the

91
00:05:13.860 --> 00:05:16.950
assistance of, of original developers?
I don't know how old

92
00:05:16.950 --> 00:05:20.160
they are now, but folks
that remember this stuff, it

93
00:05:20.160 --> 00:05:23.040
was mostly inspiration. They used
to tell me stories about

94
00:05:23.040 --> 00:05:25.320
that time work on the
maca drive and what it

95
00:05:25.320 --> 00:05:28.560
was like back then, what
equipment they used, nobody sat

96
00:05:28.560 --> 00:05:30.540
down and showed me the
ropes, so to speak. They

97
00:05:30.540 --> 00:05:33.540
just gave me their stories
and it kept the stream

98
00:05:33.540 --> 00:05:37.440
alive. So Yeah, it was
more inspiration. You didn't have

99
00:05:37.440 --> 00:05:39.210
a tutor, you sat down
and you, how did you

100
00:05:39.210 --> 00:05:41.940
learn this? Did you learn
this by reading 68,000 assembly

101
00:05:41.940 --> 00:05:48.460
language manual? It was mostly
trial and error. I, I

102
00:05:48.480 --> 00:05:51.870
managed to do some very
basic things, like move some

103
00:05:51.960 --> 00:05:56.550
memory around and things like
that by reading some tutorials

104
00:05:56.550 --> 00:05:59.090
and things like Amigos, but
most of it was just

105
00:05:59.090 --> 00:06:02.980
trial and error. I did
manage to find some examples,

106
00:06:02.980 --> 00:06:08.730
source code all the archives
from Sega themselves. Yeah. It

107
00:06:08.750 --> 00:06:10.700
was quite a difficult thing
to piece together. There were

108
00:06:10.700 --> 00:06:12.770
a lot of small demos
out there showing you how

109
00:06:12.770 --> 00:06:14.840
to do small things like
hello world on the screen

110
00:06:14.840 --> 00:06:17.330
and things like that, but
actually putting it together into

111
00:06:17.330 --> 00:06:21.680
a big, fully fledged game
with various levels and big

112
00:06:21.710 --> 00:06:24.260
backgrounds and stuff. It was,
it was very difficult to

113
00:06:24.260 --> 00:06:26.300
do. I had to learn
most of that myself through

114
00:06:27.110 --> 00:06:29.780
trial and error, reverse engineering,
things like that. So this

115
00:06:29.780 --> 00:06:31.930
is, This is a tough
question, but maybe as a

116
00:06:31.930 --> 00:06:34.900
software, developers will be able
to answer it. Do you

117
00:06:34.900 --> 00:06:39.400
know if you did it
right? Like it looks amazing.

118
00:06:39.430 --> 00:06:41.830
Tanglewood looks amazing. People are
calling it the new shovel

119
00:06:41.830 --> 00:06:46.210
night. It's gorgeous. It's got
scrolling in multiple directions. It's

120
00:06:46.210 --> 00:06:48.490
got multiple layers. It's got
rich sprites. The graph mean

121
00:06:48.490 --> 00:06:52.180
it's gorgeous game. But do
you know, like given that

122
00:06:52.180 --> 00:06:54.370
you learned it from scratch
kind of in a vacuum

123
00:06:54.730 --> 00:06:56.410
that it was done in
the, in the way that

124
00:06:56.410 --> 00:06:59.530
they did it back then?
I believe so. Maybe my

125
00:06:59.530 --> 00:07:02.020
coding style might be a
bit different because I grew

126
00:07:02.020 --> 00:07:05.170
up learning C and C
plus plus and all their

127
00:07:05.170 --> 00:07:08.080
first work on games development
was with modern tech. I've

128
00:07:08.080 --> 00:07:12.880
published games for PlayStation two,
three, and four, Xbox three,

129
00:07:12.880 --> 00:07:16.790
six, Xbox one, that sort
of thing. And the, the,

130
00:07:16.790 --> 00:07:18.970
the languages and technology is
very different now than I

131
00:07:18.970 --> 00:07:23.440
learned on that. So I
tried applying some constructs from

132
00:07:23.590 --> 00:07:27.040
modern programming back to assembly
language to see if things

133
00:07:27.040 --> 00:07:30.400
like that would work. Things
like off-screen calling and things

134
00:07:30.400 --> 00:07:32.770
like that and how a
memory is managed. And some

135
00:07:32.770 --> 00:07:36.340
of it works. Some of
it didn't sort of, it

136
00:07:36.340 --> 00:07:38.980
used too much memories. It
used too many clock cycles.

137
00:07:38.980 --> 00:07:44.530
Cause obviously modern coding paradigms
are very different and we

138
00:07:44.530 --> 00:07:49.000
used to bigger, bigger processes,
bigger processes, bigger, bigger memory.

139
00:07:51.340 --> 00:07:53.920
So I don't know is
the honest answer to that

140
00:07:53.920 --> 00:07:55.690
question. I don't know if
it was done exactly. Like

141
00:07:55.690 --> 00:07:57.250
it was back in the
day. I know when you

142
00:07:57.250 --> 00:07:59.140
use the correct tools, I
don't want to use the

143
00:07:59.140 --> 00:08:01.780
correct language. I know if
you use the correct processes,

144
00:08:02.080 --> 00:08:04.540
but don't, don't know about
my coding style. If it

145
00:08:04.540 --> 00:08:09.760
matches, if it provides some
other examples, maybe, maybe I'm

146
00:08:09.760 --> 00:08:13.750
looking at a, a mega
drive, hello world, Scroll that

147
00:08:13.750 --> 00:08:16.330
you put up on Pastebin.
And so this is the

148
00:08:16.360 --> 00:08:21.340
hello world scrolling around and
it says 466 lines with

149
00:08:21.340 --> 00:08:25.570
comments. It's a non hello
world is not, not console

150
00:08:25.570 --> 00:08:28.720
dot Rightline in this world.
You have full control. I

151
00:08:28.720 --> 00:08:32.080
assume when you Okay. Mistake,
it just locks up hard

152
00:08:32.080 --> 00:08:33.430
and you turn it off
and turn it on again.

153
00:08:34.480 --> 00:08:39.610
Yup. Either that, or it'll
continue running as if everything's

154
00:08:39.610 --> 00:08:42.130
fine, but there'll be some
subtle books somewhere that you

155
00:08:42.130 --> 00:08:45.340
haven't seen. Those are the
worst. So that's, It means

156
00:08:45.340 --> 00:08:48.880
you find out 30 seconds
later or Ms. Later. Yeah.

157
00:08:48.880 --> 00:08:51.190
Minutes later, maybe right at
the end of the game,

158
00:08:51.190 --> 00:08:53.740
when you're nearly finished the
final boss, you'll, you'll find

159
00:08:53.740 --> 00:08:57.270
a book based on a
thing that was written to

160
00:08:57.270 --> 00:09:00.830
memory an hour ago. Oh
no. Did that actually happen?

161
00:09:01.820 --> 00:09:04.460
Yeah, that's happened quite a
lot in my career. Not,

162
00:09:04.580 --> 00:09:07.160
not just on this console.
How in the, I mean,

163
00:09:07.190 --> 00:09:08.780
how in the world do
you do that? I mean,

164
00:09:08.780 --> 00:09:12.440
today we have debuggers that
can do, you know, snap

165
00:09:12.440 --> 00:09:16.250
points and memory shots and
can compare comparisons across time

166
00:09:16.250 --> 00:09:19.070
and even step back to
buggers. How in the world

167
00:09:19.070 --> 00:09:20.870
could you know that you
a, you know, a butterfly

168
00:09:20.870 --> 00:09:23.000
flaps, its wings and a
Sprite. I've corrupted it An

169
00:09:23.000 --> 00:09:26.300
hour later. I guess it
got the advantage of the

170
00:09:26.300 --> 00:09:29.030
hardware being a lot more
simple than modern devices. There's

171
00:09:29.030 --> 00:09:31.550
only 64. Could I buy
a memory? I mean, if

172
00:09:31.550 --> 00:09:33.860
worse comes to worst, I
could view up the memory

173
00:09:33.860 --> 00:09:37.130
and I could scroll through
all 64 kilobytes of it

174
00:09:37.130 --> 00:09:40.700
and have a look myself,
good point that there's tools,

175
00:09:40.700 --> 00:09:43.280
the assembler dumps out to
show you areas of memory

176
00:09:43.670 --> 00:09:46.280
that I belong to, which
parts it can even give

177
00:09:46.280 --> 00:09:48.470
you the, the variable names
and the labels in it

178
00:09:48.470 --> 00:09:51.380
too. So that, that there's
a lot that you can

179
00:09:51.380 --> 00:09:55.370
do to try and figure
out books like that. It's

180
00:09:55.430 --> 00:09:59.210
it's long and time consuming
still, but I'm not completely

181
00:09:59.210 --> 00:10:02.180
alone there. Okay. Now I
could probably do this by

182
00:10:02.180 --> 00:10:04.910
opening up notepad and figuring
out what 64 K looks

183
00:10:04.910 --> 00:10:06.560
like. But I mean, if
you print it out 64

184
00:10:06.560 --> 00:10:07.850
K and you were sitting
here, have you ever done

185
00:10:07.850 --> 00:10:09.890
that? Have you ever printed
out all the pages of

186
00:10:09.890 --> 00:10:12.010
64 K of memory And
stared at, on your, on

187
00:10:12.010 --> 00:10:16.610
your living room floor? Not,
not physical printed now I've

188
00:10:16.610 --> 00:10:21.170
had to open on various
screens, but no, the only

189
00:10:21.170 --> 00:10:23.420
code I printed was back
when I was starting and

190
00:10:24.170 --> 00:10:25.730
I needed to take some
time out and go and

191
00:10:25.730 --> 00:10:27.380
set that aside to try
and figure out a problem.

192
00:10:27.380 --> 00:10:29.890
Cause it was irritating me
so much. I needed, I

193
00:10:29.890 --> 00:10:33.950
needed a change of scenery.
So you, you said I'm

194
00:10:33.950 --> 00:10:35.510
gonna make a game and
you said, I'm going to

195
00:10:35.510 --> 00:10:39.260
make a real true to
life. 16 bit platforming experience.

196
00:10:39.800 --> 00:10:43.100
Where did you find the
original MegaDrives CD development kit?

197
00:10:43.100 --> 00:10:45.980
Because I think that requires
another PC next to it.

198
00:10:46.310 --> 00:10:50.150
That runs windows 95. Is
that correct? Yeah, it doesn't

199
00:10:50.150 --> 00:10:52.370
have to run in windows
95. It only needs ms.

200
00:10:52.370 --> 00:10:54.800
Dos for the debug to
run. And the only reason

201
00:10:54.800 --> 00:10:56.780
I'm even using windows 95
is so it can have

202
00:10:56.780 --> 00:11:01.010
network connectivity to backup my
work. That's one of the

203
00:11:01.400 --> 00:11:04.970
constructs I'm using is, is
a modern source control and

204
00:11:04.970 --> 00:11:08.360
backup systems. I'm not, not
making that mistake ever again

205
00:11:08.360 --> 00:11:12.050
of not having those things
around. So yeah, windows 95

206
00:11:12.050 --> 00:11:14.420
just for the networking part
so I can transfer files

207
00:11:14.420 --> 00:11:17.030
around. But most of the
work is done in ms.

208
00:11:17.030 --> 00:11:22.430
Dos, the, the assembler and
the Tupac. What limitations did

209
00:11:22.430 --> 00:11:24.590
you put on yourself? And
which ones did you think

210
00:11:24.590 --> 00:11:27.740
were like, like unreasonable. Like
you say that you did

211
00:11:27.740 --> 00:11:30.800
it in the original tools
on the original hardware and

212
00:11:30.800 --> 00:11:34.340
the original PC and the
original development kit. But did

213
00:11:34.340 --> 00:11:38.620
you allow To Google? Yes.
I allowed myself to Google.

214
00:11:38.630 --> 00:11:40.190
It was the only way
I can really get started.

215
00:11:40.310 --> 00:11:44.600
Okay. The other big rule
I allowed to slip was

216
00:11:44.630 --> 00:11:46.880
if I was going to
write my own tools, things

217
00:11:46.880 --> 00:11:48.650
like level edits or things
like that, I was going

218
00:11:48.650 --> 00:11:51.980
to do that on modern
hardware. I'm using visual studio

219
00:11:51.980 --> 00:11:55.030
to write my own level
editor or your conversion tool,

220
00:11:55.030 --> 00:11:58.660
things like that, or my
modern PC. Okay. That's because

221
00:11:58.660 --> 00:12:03.280
I'm C plus plus development
tools back then were pretty

222
00:12:03.280 --> 00:12:06.250
awful, pretty horrendous. And I'd
like to have written the

223
00:12:06.250 --> 00:12:10.960
tools fairly quickly using construct
side I'm already used to.

224
00:12:12.010 --> 00:12:13.840
So yeah, I did write
my own tools for the

225
00:12:13.840 --> 00:12:15.880
job. That was one, the
rules are set herself, but

226
00:12:15.880 --> 00:12:18.840
I did use modern PCs
to do that. Okay. That

227
00:12:18.840 --> 00:12:22.170
seems like a reasonable compromise.
So I understand that you

228
00:12:22.410 --> 00:12:25.560
created a, a level editor
or a maps tile sheets

229
00:12:25.710 --> 00:12:29.760
system called beehive. Yes, it
did. And that's up on

230
00:12:29.760 --> 00:12:34.950
GitHub at github.com/big evil corporation.
And that's been in development

231
00:12:34.950 --> 00:12:36.690
now for a couple of
years, I can see that

232
00:12:36.690 --> 00:12:39.120
you had check-ins two years
ago on that. So this

233
00:12:39.120 --> 00:12:43.380
is a long process, A
long slow brewing tool. This

234
00:12:44.880 --> 00:12:48.120
I added to it almost
every day. I, I don't

235
00:12:48.120 --> 00:12:50.580
really stand alone anymore. I
run it through visual studio.

236
00:12:50.580 --> 00:12:53.160
Cause there's always something I
need to add something I

237
00:12:53.160 --> 00:12:58.260
need to change. It's it's
a very fluid tool at

238
00:12:58.260 --> 00:13:01.440
one. Okay. So this isn't
something where you install it

239
00:13:01.440 --> 00:13:03.120
and run it from the
start menu. It's something that

240
00:13:03.120 --> 00:13:05.430
you are constantly hitting at
five and vs and then

241
00:13:05.430 --> 00:13:07.050
saying, oops, I need this.
And then you go and

242
00:13:07.050 --> 00:13:09.660
change it A five again.
Yeah. And data, I guess

243
00:13:09.660 --> 00:13:14.550
one day it'll, it'll start
to mature. I can release

244
00:13:14.550 --> 00:13:17.880
a version. One of it,
probably the end of Tanglewood

245
00:13:17.880 --> 00:13:20.760
wants development's finished. I can
say yes, this, this tool

246
00:13:20.760 --> 00:13:23.460
now has everything. I need
to write a similar game.

247
00:13:24.150 --> 00:13:26.820
That's that's just generating executed
when we're done with it.

248
00:13:27.630 --> 00:13:33.660
So we can go up
and look@yourworkshopsatbigevilcorporation.co.uk. And you can

249
00:13:33.660 --> 00:13:36.000
see slides from a workshop
you did on Sega mega

250
00:13:36.000 --> 00:13:39.060
drive assembly. And within those
slides, you know, you talk

251
00:13:39.060 --> 00:13:42.240
about hello world and what's
involved, but then you jump

252
00:13:42.240 --> 00:13:45.630
into sprites and tiles and
maps. Maybe you could explain

253
00:13:45.630 --> 00:13:49.230
the relationship between the code
and where the resources live

254
00:13:49.320 --> 00:13:53.190
and in the Sega world
are these forgive my dumb

255
00:13:53.190 --> 00:13:57.030
question, but bitmaps on disk
somewhere or are they assembly

256
00:13:57.480 --> 00:14:00.510
code as well? They are
somebody's code as well. All

257
00:14:00.510 --> 00:14:02.640
the code and all the
data is boomed into one

258
00:14:02.640 --> 00:14:07.770
binary. Well, I guess that's
the same for, for ms.

259
00:14:07.770 --> 00:14:10.380
Task at the time as
well. You could put the

260
00:14:10.380 --> 00:14:13.230
whole thing into a single
executable and there's no other

261
00:14:13.230 --> 00:14:15.570
files to speak of. It's
all loaded in memory. When

262
00:14:15.570 --> 00:14:19.260
the executable loads, there's a
similar construct for, for ROMs

263
00:14:19.260 --> 00:14:22.380
on these kinds of systems
or the code, all the

264
00:14:22.380 --> 00:14:26.040
data, all the audio is
all hung together in one

265
00:14:26.040 --> 00:14:34.410
single memory blob and that's
low, different cartridge. Yeah. It's,

266
00:14:35.160 --> 00:14:38.220
it's quite difficult to manage
something like that. In assembly

267
00:14:38.220 --> 00:14:40.350
language itself, you have to
arrange your code and your

268
00:14:40.350 --> 00:14:43.050
data to behave with each
other. And you have to

269
00:14:43.050 --> 00:14:48.240
worry about things like memory
alignment, distances between blobs of

270
00:14:48.240 --> 00:14:50.670
memories, tricky as well. Cause
there are certain op codes

271
00:14:50.670 --> 00:14:54.110
that can data with a
short, from a short distance

272
00:14:54.110 --> 00:14:57.230
away from the code. There
are some opcos I can

273
00:14:57.230 --> 00:15:01.700
read data from all over
the cartridge. So depending on

274
00:15:01.700 --> 00:15:04.400
particular optimization tricks, you're learning,
you have to arrange the

275
00:15:04.400 --> 00:15:06.670
data in a certain way
as well. So it has

276
00:15:06.670 --> 00:15:08.540
been quite a tricky thing
to learn that it's a

277
00:15:08.930 --> 00:15:11.990
very rewarding. Oh wow. So
I did, you have to

278
00:15:11.990 --> 00:15:14.090
write your own font. Like
you had to put in,

279
00:15:14.840 --> 00:15:17.420
you know, the alphabet and
write and cry your font

280
00:15:17.420 --> 00:15:20.360
and then store that. And
then remember where it was

281
00:15:20.360 --> 00:15:22.580
so that if you were
putting a Sprite up and

282
00:15:22.580 --> 00:15:24.260
then suddenly needed to put
up some words, you had

283
00:15:24.260 --> 00:15:26.180
to think about where they
were in relation to each

284
00:15:26.180 --> 00:15:29.600
other. Yes. Some data is
all stored as a rule

285
00:15:29.600 --> 00:15:32.420
of tiles in the room.
So you'd have a label

286
00:15:32.420 --> 00:15:35.840
to the star, the font,
there's no text drawing routines

287
00:15:35.840 --> 00:15:38.030
at all. You had to
write the, all those yourself,

288
00:15:38.190 --> 00:15:40.190
the systems that they have
an operating system. It doesn't

289
00:15:40.190 --> 00:15:43.940
have any standard libraries. You're
just alone with the processor

290
00:15:43.940 --> 00:15:45.800
and the memory. So you
have to do all that

291
00:15:45.800 --> 00:15:50.000
yourself. You have to arrange
the font tiles onto the

292
00:15:50.000 --> 00:15:52.580
map, grid yourself manually. When
you want to draw a

293
00:15:52.580 --> 00:15:58.520
string. Oh, you said that
you're just alone with the

294
00:15:58.520 --> 00:16:01.370
processor. Like it's been so
long. I think for a

295
00:16:01.370 --> 00:16:04.130
lot of us that are
listening, who, you know, there's

296
00:16:04.130 --> 00:16:05.990
no standard library. If you
want to grind, you know,

297
00:16:05.990 --> 00:16:11.000
write a string length method,
that's on you. If you'd

298
00:16:11.000 --> 00:16:14.210
need, if you need to
draw a circle programmatically, do

299
00:16:14.210 --> 00:16:15.980
you even have a math
process or a way to

300
00:16:15.980 --> 00:16:19.310
do co-sign you probably can't
do things like that. Nope.

301
00:16:19.400 --> 00:16:26.120
It's a integers only 16
bit integers only. There are

302
00:16:26.120 --> 00:16:27.830
only so much codes on
the thing that can do

303
00:16:27.830 --> 00:16:32.480
32 bit mass. You, you
have 16 bit multiplication, division

304
00:16:33.020 --> 00:16:37.160
30 to add subtract, things
like that. So, so you're

305
00:16:37.160 --> 00:16:39.920
limited with even the integer
tool kits as well. So

306
00:16:39.920 --> 00:16:42.680
no floating point must to
speak of, unless you want

307
00:16:42.680 --> 00:16:44.570
to write your own software
method, but it's just too

308
00:16:44.570 --> 00:16:47.270
slow to use up the
general purpose. Oh my goodness.

309
00:16:47.540 --> 00:16:50.450
So how are maps done
if you have 64 hardware

310
00:16:50.450 --> 00:16:53.840
sprites and you've got maps,
are you building maps with

311
00:16:54.290 --> 00:16:58.010
kind of Lego pieces of
platforms and totem poles and

312
00:16:58.190 --> 00:17:04.790
trees splits with tiles. There's
the Sprite layer, which is

313
00:17:04.790 --> 00:17:07.700
useful things like characters and
moving objects and stuff like

314
00:17:07.700 --> 00:17:12.110
that. But there's two background
layers with their own individual

315
00:17:12.110 --> 00:17:14.660
maps. So you can have
two scrolling play fields behind

316
00:17:14.660 --> 00:17:17.450
the sprites and that sort
of split up into tiles,

317
00:17:18.680 --> 00:17:21.800
which are eight by eight
pixels, each split tool I've

318
00:17:21.800 --> 00:17:26.930
got, you can import bitmaps
of large stamps. So big

319
00:17:26.960 --> 00:17:29.630
pieces of steel scenery, things
like that. But once it

320
00:17:29.630 --> 00:17:32.300
exports, it splits the whole
thing into tiles eight by

321
00:17:32.300 --> 00:17:36.290
eight pixels searches for <inaudible>
to save memory and then

322
00:17:36.290 --> 00:17:40.850
Paxil into a binary blob
for me. Hey friends, a

323
00:17:40.850 --> 00:17:44.300
quick word from our sponsor
progress. Telerik wants to send

324
00:17:44.300 --> 00:17:47.210
someone to the build conference.
So they're having a contest.

325
00:17:47.570 --> 00:17:49.710
Step one is to sign
up, to learn about the

326
00:17:49.710 --> 00:17:52.890
new Innovative, modern UI tools
that there'll be announcing at

327
00:17:52.890 --> 00:17:55.560
build. And by registering, you'll
be entered to win a

328
00:17:55.560 --> 00:18:00.000
full conference pass to Microsoft
build plus a $500 travel

329
00:18:00.000 --> 00:18:04.320
stipend. They're also giving away
three Tellerik dev craft UI

330
00:18:04.320 --> 00:18:07.740
licenses. All you have to
do is register at build

331
00:18:07.740 --> 00:18:14.250
contest dot plop that's PW
O p.me. That's built contest

332
00:18:14.430 --> 00:18:18.960
dot <inaudible> dot me. Progress
offers the leading platform for

333
00:18:18.960 --> 00:18:22.560
developing and deploying mission, critical
business applications, and that they

334
00:18:22.560 --> 00:18:26.220
are the creator of the
award winning tellerik.net and Kendo,

335
00:18:26.220 --> 00:18:29.910
UI JavaScript, user interface controls.
They have reporting solutions and

336
00:18:29.910 --> 00:18:33.060
productivity tools and all the
tools that developers need to

337
00:18:33.060 --> 00:18:37.020
build high performance, modern apps
without standing UI go now

338
00:18:37.050 --> 00:18:41.400
to build contest dot <inaudible>
dot me that's PW, Oop,

339
00:18:41.400 --> 00:18:45.650
dot me, and sign up
to win. One of the

340
00:18:45.650 --> 00:18:49.820
things about Tanglewood that is
worth Pointing out is that,

341
00:18:50.450 --> 00:18:52.760
you know, the, the little
Fox, what is the Fox?

342
00:18:52.760 --> 00:18:56.330
Is the Fox have a
name them Nim. So Nim,

343
00:18:56.330 --> 00:18:59.720
the Fox is running around
in this tangled wood. And

344
00:18:59.750 --> 00:19:04.040
it's not a platform or
like a super Mario where

345
00:19:04.040 --> 00:19:08.750
it's very perpendicular and there's
horizontal stuff and there's Vertical

346
00:19:08.750 --> 00:19:12.170
stuff. You know, the, the
trees are, are warped and

347
00:19:12.170 --> 00:19:16.430
tangled and he's not walking
just left. Right. He's walking

348
00:19:16.430 --> 00:19:18.650
to the right and then
he'll move up A few

349
00:19:18.650 --> 00:19:20.000
pixels. And then down a
few pixels and up a

350
00:19:20.000 --> 00:19:23.870
few pixels did Something, something
simple like that quote unquote,

351
00:19:23.870 --> 00:19:26.600
simple like that from a
design perspective, I would anticipate

352
00:19:26.600 --> 00:19:29.360
would require a nontrivial amount
of work. Make it just

353
00:19:29.360 --> 00:19:33.140
feel like he's fluidly running
over a for lack of

354
00:19:33.140 --> 00:19:35.990
a better word, a Bezier
curve of a tree branch.

355
00:19:37.160 --> 00:19:39.380
Yeah. Visit occurs. Right. That's
how they're described in the

356
00:19:39.380 --> 00:19:42.560
editor. And then they get
converted to silos of their

357
00:19:42.560 --> 00:19:45.320
own. I followed the same
process as the, the graphics

358
00:19:45.320 --> 00:19:49.100
tiles. There are individual collision
tiles there, which are eight

359
00:19:49.100 --> 00:19:55.690
by eight pixels. Each those
describe the terrain. Yeah. I

360
00:19:55.700 --> 00:19:58.010
spent quite a lot of
time on the physics engine

361
00:19:58.940 --> 00:20:02.270
and how all the train
systems work and collision things

362
00:20:02.270 --> 00:20:06.500
like that and how they
will work together. Yeah. Did

363
00:20:06.500 --> 00:20:09.890
people call them physics engines
in the early nineties? Like,

364
00:20:09.890 --> 00:20:11.840
was that a thing that
we knew of and had

365
00:20:11.840 --> 00:20:15.380
discovered, or is that a
modern concept apply to older

366
00:20:15.380 --> 00:20:18.950
Your hardware? I'm not entirely
sure. There's only so many

367
00:20:18.950 --> 00:20:21.770
examples I could look at
as well. If you remember

368
00:20:21.770 --> 00:20:25.310
the game poker, that was
another Traveler's tales game that

369
00:20:25.370 --> 00:20:27.320
had a physic system in
it's where you could pick

370
00:20:27.320 --> 00:20:29.390
up objects, you could throw
them around and they would

371
00:20:29.390 --> 00:20:33.110
bounce off each other. Things
like that object can be

372
00:20:33.110 --> 00:20:37.370
marked as buoyant, photo, water,
that sort of thing. The

373
00:20:37.370 --> 00:20:39.590
only other example I can
think of bear in mind,

374
00:20:39.590 --> 00:20:43.490
I haven't played many games
that are non platformers. It's

375
00:20:43.490 --> 00:20:46.130
the, the box pushing and
Sonic where you can push

376
00:20:46.130 --> 00:20:49.630
the little green block, a
button. I think that's only

377
00:20:49.630 --> 00:20:51.400
used once in Sonic quality,
which is a bit of

378
00:20:51.400 --> 00:20:55.380
a waste really. There's been
times when you'll play a

379
00:20:55.380 --> 00:20:59.280
game and they'll introduce a,
a concept and then you'll

380
00:20:59.280 --> 00:21:00.750
never see it again. And
you're like, wow, that was

381
00:21:00.750 --> 00:21:03.390
amazing. And they just kinda
never used it. That sucks.

382
00:21:03.690 --> 00:21:06.900
Yeah. It was in the
second, second stage of Sonic

383
00:21:06.900 --> 00:21:08.850
Kwan, the little green block
that you push on the

384
00:21:08.850 --> 00:21:10.800
button. And I don't think
I ever saw her again.

385
00:21:10.950 --> 00:21:14.520
Yeah. It's really weird. The
physics really are interesting in

386
00:21:14.520 --> 00:21:17.970
Tanglewood, given that it was
that it's 26 year old

387
00:21:18.900 --> 00:21:21.450
development system where, you know,
Nim will pick up one

388
00:21:21.450 --> 00:21:24.150
of the little yellow balls
and roll it with him.

389
00:21:24.150 --> 00:21:26.160
So then you've got to
think about him. You've got

390
00:21:26.160 --> 00:21:29.190
to about to think about
something in his control and

391
00:21:29.250 --> 00:21:31.680
they all need to work
together. And when he throws

392
00:21:31.680 --> 00:21:35.340
it off of a allege,
it, it bounces it, it

393
00:21:35.340 --> 00:21:38.490
moves realistically. So it's almost
like you say, modern techniques

394
00:21:38.490 --> 00:21:42.660
applied Two older hardware. Yeah.
There's quite a lot going

395
00:21:42.660 --> 00:21:45.270
on behind the scenes. Arguably
it was one of the

396
00:21:45.270 --> 00:21:47.880
mistakes I made trying to
bring this modern construct, but

397
00:21:47.880 --> 00:21:51.720
to consult like that, the
optimization of how to do,

398
00:21:51.780 --> 00:21:54.630
to get that to work
properly within the frame rate

399
00:21:54.630 --> 00:21:59.250
is, is absolutely ridiculous. Nearly
every optimization session I do

400
00:21:59.250 --> 00:22:00.930
to try and make the
game run faster as always

401
00:22:00.930 --> 00:22:04.200
been in the physics engine.
Really? Yeah. There's a lot

402
00:22:04.200 --> 00:22:09.690
going on behind the scenes
as acceleration, velocities, friction, restitution,

403
00:22:10.770 --> 00:22:15.930
the S specific bounce modes
for certain objects, those points

404
00:22:15.930 --> 00:22:21.070
C, which I've had to
take out now, unfortunately there's

405
00:22:21.150 --> 00:22:24.390
various gravity mode, so sure.
Inside water, it'll half the

406
00:22:25.380 --> 00:22:29.340
gravity and half your movement
velocity. So it feels like

407
00:22:29.340 --> 00:22:32.450
you're slogging through water and
there's quite quite a lot

408
00:22:32.460 --> 00:22:35.490
going on and that's on
top of the collision for

409
00:22:35.490 --> 00:22:39.450
all those curves and all
the train data. And as

410
00:22:39.450 --> 00:22:42.630
you say, objects interacts with
each other. So yeah, if

411
00:22:42.630 --> 00:22:46.380
Nim pushes one of the
little futsal balls, there's a

412
00:22:46.380 --> 00:22:50.820
tether system there where it's
tethered to the player and

413
00:22:50.820 --> 00:22:53.610
it'll, it'll make sure that
the bounding inboxes never collide

414
00:22:53.610 --> 00:22:56.820
and one pushes the other
one out of the way.

415
00:22:57.210 --> 00:22:59.220
So yeah, there's quite quite
a lot going on behind

416
00:22:59.220 --> 00:23:02.460
the scenes and I'm, I'm
not sure I'll do another

417
00:23:02.460 --> 00:23:05.250
game with a physics central
it's again, it's been an

418
00:23:05.250 --> 00:23:08.190
absolute nightmare, but very much
worth it. I'm very happy

419
00:23:08.190 --> 00:23:10.860
with, with what I've achieved
with it. Not to, not

420
00:23:10.860 --> 00:23:13.320
to take too much time
to dwell on the negative,

421
00:23:13.320 --> 00:23:16.290
but you, you mentioned kind
of casually there that you

422
00:23:16.290 --> 00:23:19.470
had to remove buoyancy, is
that because it is just

423
00:23:19.500 --> 00:23:22.470
technically too much for the
processor to handle It is

424
00:23:22.470 --> 00:23:26.940
here. I wanted the futsal
to float and other objects.

425
00:23:26.940 --> 00:23:30.060
There's things like crates and
the game there's balls that

426
00:23:30.060 --> 00:23:32.070
you push around and they
all needed different points. He

427
00:23:32.070 --> 00:23:36.000
values. And it meant trying
to fix bugs where if

428
00:23:36.000 --> 00:23:37.650
there was a crate in
the water and a falls

429
00:23:37.650 --> 00:23:40.770
in the water, they have
buoyancy applied. They're also colliding

430
00:23:40.770 --> 00:23:44.670
with each other. You've also
got the other physics systems

431
00:23:44.670 --> 00:23:47.780
running like the player, terrain
checks and stuff like that.

432
00:23:47.780 --> 00:23:49.580
And the whole thing just
sort of fell over. Really

433
00:23:49.580 --> 00:23:52.070
my frame rate was really
low. So I had to,

434
00:23:52.280 --> 00:23:55.670
to change the puzzles that
included buoyancy and unfortunately removed

435
00:23:55.670 --> 00:23:59.950
them. I notice that as
you move through the game,

436
00:23:59.980 --> 00:24:03.460
the, the environment changes. There's
different. I don't know the

437
00:24:03.460 --> 00:24:05.440
right word, cause I'm not
a game developer, but different

438
00:24:05.440 --> 00:24:07.780
pallets. There's like dark and
scary and blue and purple

439
00:24:07.780 --> 00:24:11.740
woods. There's bright and happy
and you know, light green

440
00:24:11.740 --> 00:24:15.490
woods. Are you switching out
sprites or palette shifting? How

441
00:24:15.490 --> 00:24:18.280
do you make it seem
like it's a lot wellbeing?

442
00:24:18.310 --> 00:24:22.210
Not a lot. Yeah. It's
an interpolation between pallets. It's

443
00:24:22.210 --> 00:24:25.720
not quite a pallet shift
or a pallet swap. There

444
00:24:25.720 --> 00:24:29.530
are three pallets of play.
There there's a, a daytime,

445
00:24:29.620 --> 00:24:32.020
a dusk and a night
pallet for each stage of

446
00:24:32.020 --> 00:24:35.980
the game. And it, it
fades slowly for one pallet

447
00:24:35.980 --> 00:24:37.810
to the author's view as
you move through the game.

448
00:24:38.530 --> 00:24:44.050
So it's sort of a
linear interpolation between pallets. The,

449
00:24:44.620 --> 00:24:48.190
the People are making these
games and making Sega games

450
00:24:48.190 --> 00:24:50.170
now, and they usually need
to release them as ROMs

451
00:24:50.170 --> 00:24:52.570
and people can run them
off On a, on an

452
00:24:52.570 --> 00:24:55.720
emulator. You can go up
and go to big evil

453
00:24:55.720 --> 00:24:57.940
corporation and go and Google
for Tanglewood. And you can

454
00:24:57.940 --> 00:25:00.310
get a demo of a
version of this. Right? I

455
00:25:00.310 --> 00:25:03.550
can play this on an
emulator, but you're what you're

456
00:25:03.550 --> 00:25:05.260
doing is special because not
only did you use it,

457
00:25:05.380 --> 00:25:08.110
Original mega drive development kit,
you're going to the work

458
00:25:08.110 --> 00:25:13.510
of releasing an actual physical
cartridge. It, did they Even

459
00:25:13.510 --> 00:25:15.940
make the, did you have
to design the black cartridge

460
00:25:15.970 --> 00:25:17.350
bit? Or where would you
even find a second? Yeah.

461
00:25:17.420 --> 00:25:22.630
Cartridge container anymore. I had
to send off some original

462
00:25:22.630 --> 00:25:26.050
Sega cartridges off to a
toy shop in China to

463
00:25:26.050 --> 00:25:29.710
have them analyze in three
D scanned. And they, they

464
00:25:29.710 --> 00:25:33.790
helped me design one that
doesn't infringe on any patents

465
00:25:33.790 --> 00:25:38.680
or trademarks, but, but still
work with the system. I

466
00:25:38.680 --> 00:25:40.750
sent them over files of
my logos and things like

467
00:25:40.750 --> 00:25:42.820
that. So we've now got
a nice cartridge that works

468
00:25:42.820 --> 00:25:46.630
in all systems, pal NTSC
on the Japanese ones with

469
00:25:46.630 --> 00:25:50.280
the locks, which has my
local on the backhand fits

470
00:25:50.280 --> 00:25:53.710
standard PCBs. And that took
quite a while to sort

471
00:25:53.710 --> 00:25:55.150
out there's a lot of
back and forth. A lot

472
00:25:55.150 --> 00:25:58.960
of samples being sent a
lot of corrections made and

473
00:25:59.200 --> 00:26:02.530
we finally had a mold
machine to, to mass produce

474
00:26:02.530 --> 00:26:04.780
them. Wow. Cause it has
to look and feel and

475
00:26:04.780 --> 00:26:06.370
act like a cartridge. It
needs to be able to

476
00:26:06.370 --> 00:26:10.240
plug into my Sega, but
it also has to not

477
00:26:10.240 --> 00:26:13.330
be an issue. Copy. Yeah.
Hey, can I'll say cause

478
00:26:13.330 --> 00:26:16.600
logo on it. So yeah.
It's, it's the correct size.

479
00:26:16.600 --> 00:26:18.910
The correct shape is even
the crap weight. That was

480
00:26:18.910 --> 00:26:23.170
something I was adamant about.
But yeah, but with my

481
00:26:23.170 --> 00:26:26.590
logo on will, This might
be a silly question, but

482
00:26:26.620 --> 00:26:30.010
I've got a device that's
an emulator, not as Sega

483
00:26:30.100 --> 00:26:32.890
proper and on an original
set. Yeah. But one of

484
00:26:32.890 --> 00:26:38.290
these multi-card type situations that
is itself an emulator. If

485
00:26:38.290 --> 00:26:40.330
I plug this in, will
it, will it work? Will

486
00:26:40.330 --> 00:26:41.860
it download the rom or
would it need to be

487
00:26:41.860 --> 00:26:45.960
updated to support Tanglewood? No.
The, the general rule is

488
00:26:45.960 --> 00:26:48.510
if your system plays Sonic
too, it'll play town good.

489
00:26:49.560 --> 00:26:53.700
There's no, there's no strange
tricks or demo scene style

490
00:26:54.750 --> 00:26:58.590
techniques in there that might
trip up certain older or

491
00:26:58.590 --> 00:27:03.330
poorly written emulators or clones
or things like that. The

492
00:27:03.330 --> 00:27:05.730
idea was I wanted to
play on people's original consoles,

493
00:27:06.660 --> 00:27:09.720
but also things like that.
Home arcade systems, running raspberry

494
00:27:09.720 --> 00:27:13.530
pies or things like the
restaurant five, which is the

495
00:27:13.530 --> 00:27:18.120
multi-car clone system compatibility was
high on the list. So

496
00:27:18.150 --> 00:27:20.910
for this game, at least
I haven't used any or

497
00:27:20.940 --> 00:27:24.480
tricks or anything that might
trip up those particular systems.

498
00:27:25.250 --> 00:27:27.710
How did you watch for
that? Did you feel that,

499
00:27:27.710 --> 00:27:29.240
you know, that, you know,
Oh, this is a trick,

500
00:27:29.240 --> 00:27:30.860
I wouldn't notice that's a
trick or was it a

501
00:27:30.860 --> 00:27:35.630
matter of doing something and
realizing it was, Yeah, it

502
00:27:35.630 --> 00:27:39.290
was mostly already knowing that,
you know, what, what I'm

503
00:27:39.290 --> 00:27:42.020
doing here is in quite
a standard fits it's very

504
00:27:42.410 --> 00:27:48.170
timing dependent, or it uses
a weird, lesser used 68

505
00:27:48.170 --> 00:27:52.730
K op code or things
like that. Or it abuses

506
00:27:52.730 --> 00:27:56.750
something that isn't documented. There
was a demo scene group

507
00:27:56.750 --> 00:28:00.620
called Titan who released it
released a Devo called overdrive

508
00:28:00.620 --> 00:28:04.160
too. And they discovered a
hidden, deeper register in the

509
00:28:04.160 --> 00:28:09.620
GPU, which allowed for operating
in various modes that were

510
00:28:09.620 --> 00:28:12.020
non standard. And they figured
out how to abuse it

511
00:28:12.020 --> 00:28:15.230
to, to make transparency with
which is something not seen

512
00:28:15.230 --> 00:28:18.440
on the matrix. Then that
was absolutely fantastic. But they

513
00:28:18.440 --> 00:28:23.870
found it only worked on
certain models of MegaDrives manufactured

514
00:28:23.870 --> 00:28:29.630
within certain time spans. So
yeah, that kind of thing.

515
00:28:29.660 --> 00:28:32.000
It fascinates me. It's fantastic.
I read up a lot

516
00:28:32.000 --> 00:28:34.550
in that kind of stuff,
but it's not something I'm

517
00:28:34.550 --> 00:28:36.440
going to put in my
games because I wanted to

518
00:28:36.440 --> 00:28:40.460
work with everybody's mega drive.
It does also make you

519
00:28:40.460 --> 00:28:42.200
wonder, like, what was it,
what was going on at

520
00:28:42.200 --> 00:28:44.390
Sega that they would do
that? Were they just brainstorming

521
00:28:44.390 --> 00:28:46.820
or where there's this, why
would you put a flag

522
00:28:46.820 --> 00:28:49.580
in there or a debug
register and ship it and

523
00:28:49.580 --> 00:28:52.340
not tell anyone and keep
it Yourself? I think it

524
00:28:52.340 --> 00:28:57.080
was a mixture of unfinished
features. I'm with a discord

525
00:28:57.110 --> 00:29:01.760
group of Sega developers who
have looked in detail at

526
00:29:01.760 --> 00:29:04.160
this GPU and figured out
that Sega were trying to

527
00:29:04.160 --> 00:29:06.590
do more with it, which
is probably why they had

528
00:29:06.590 --> 00:29:09.200
the mega CD add on
later, which added a load

529
00:29:09.200 --> 00:29:13.100
of features like scaling and
rotation. They believe that this

530
00:29:13.100 --> 00:29:15.080
stuff was originally meant to
be in the mega drive,

531
00:29:15.110 --> 00:29:17.210
but they either run out
of dire space or money

532
00:29:18.560 --> 00:29:21.500
or time or a mixture
of all three and they

533
00:29:21.500 --> 00:29:23.510
didn't make it. So I
guess some of those features

534
00:29:23.510 --> 00:29:26.630
they started working on and
they were only accessible using

535
00:29:26.630 --> 00:29:30.020
DBA registers, but obviously it
was never finished and it

536
00:29:30.020 --> 00:29:33.230
doesn't work very well. Hmm.
And then you also had

537
00:29:33.230 --> 00:29:36.080
to find someone to do
the printed circuit boards, the

538
00:29:36.080 --> 00:29:39.530
PCPs to put inside of
the cartridges and put it

539
00:29:39.530 --> 00:29:43.120
all together and then flash
flash the rom onto the

540
00:29:43.250 --> 00:29:47.280
cartridges in a way You
could actually sell it. Yeah.

541
00:29:47.560 --> 00:29:49.890
W I approached them to
call DB electronics out in

542
00:29:49.890 --> 00:29:53.880
Canada, and it's not a
flash technology where using, we're

543
00:29:53.880 --> 00:29:59.070
still using original five volt
EAP, ROMs, like would have

544
00:29:59.070 --> 00:30:01.440
been used back in the
day, a nice heavy thing.

545
00:30:03.030 --> 00:30:05.610
So we've managed to find
a cash of a thousand

546
00:30:05.610 --> 00:30:08.520
of these in some warehouse
out in China, and we're

547
00:30:08.520 --> 00:30:12.240
using all those up. Once
we ran out of those,

548
00:30:12.240 --> 00:30:13.800
we're going to have to
think of something else, maybe

549
00:30:13.800 --> 00:30:16.560
go for flash Bay based
method for the next patch.

550
00:30:17.880 --> 00:30:20.970
So you're using original cartridges
that were discovered in a,

551
00:30:21.360 --> 00:30:25.950
in a room somewhere, Just,
just the rum chips, the

552
00:30:25.950 --> 00:30:29.490
PCBs themselves had to be
designed. So once you sell

553
00:30:29.490 --> 00:30:32.160
a thousand, then you have
to figure out what, how

554
00:30:32.160 --> 00:30:36.690
to get past that. Yeah.
I think someone else, An

555
00:30:36.690 --> 00:30:41.430
interesting article on the DB
electronics Canadian website about the

556
00:30:41.430 --> 00:30:45.510
issues around using five volt
systems and 3.3 volt flash

557
00:30:45.510 --> 00:30:48.990
and how you can hurt
yourself. Yeah. That, that topic

558
00:30:48.990 --> 00:30:50.610
comes up quite a lot.
Every time I post the

559
00:30:50.610 --> 00:30:54.420
link to my games, the
first comment is this going

560
00:30:54.420 --> 00:30:57.360
to be five off that
instead of 3.3 volts here?

561
00:30:57.390 --> 00:31:03.180
Yes. Yes it is. For
the thousands time that that

562
00:31:03.360 --> 00:31:07.080
article is certainly worth reading.
If you're a, if you're

563
00:31:07.080 --> 00:31:11.160
into Homebrew development or collecting,
and you like to use

564
00:31:11.160 --> 00:31:16.200
your original hardware, but I've
been using three, 3.3 volt

565
00:31:16.200 --> 00:31:19.320
systems for development for nearly
three or four years now.

566
00:31:20.080 --> 00:31:21.900
And I haven't seen any
problems with any of my

567
00:31:21.900 --> 00:31:26.220
systems. So take it with
a pinch of salt. It

568
00:31:26.220 --> 00:31:28.650
is a problem. He's proven
it to be a problem,

569
00:31:28.650 --> 00:31:31.350
but we don't really know
the longterm effects of using

570
00:31:31.350 --> 00:31:35.010
3.3 volts. We don't really
know what exactly is going

571
00:31:35.010 --> 00:31:37.620
to happen if you do
currently using these things. And

572
00:31:37.620 --> 00:31:39.120
how long is it going
to take for problems to

573
00:31:39.120 --> 00:31:42.030
appear or even wearing the
machine? These problems are going

574
00:31:42.030 --> 00:31:46.560
to appear that we don't
know I'm using five volt

575
00:31:46.560 --> 00:31:50.010
chips just to be safe.
It's not a risk I'm

576
00:31:50.010 --> 00:31:53.280
willing to take. Seeing as
this evidence has popped up

577
00:31:53.280 --> 00:31:57.060
that something might go wrong
at some point in time,

578
00:31:57.130 --> 00:32:01.440
some somewhere in the system,
maybe we don't know. Yeah.

579
00:32:01.920 --> 00:32:05.760
The mass supports the problem,
but I don't think in

580
00:32:05.760 --> 00:32:11.070
practice, anybody has seen anything
go wrong just yet. So

581
00:32:11.070 --> 00:32:16.320
people can go to Tanglewood
game.com. They can download the

582
00:32:16.320 --> 00:32:19.650
demo, which is a version,
a zero one Oh four,

583
00:32:19.680 --> 00:32:21.810
five, and that kind of
an alpha build. And they

584
00:32:21.810 --> 00:32:22.980
can try it out. And
if they like it, they

585
00:32:22.980 --> 00:32:26.820
can click preorder now and
they can preorder this. What's

586
00:32:26.820 --> 00:32:28.740
the, what's the pricing like,
and this actually comes with

587
00:32:28.740 --> 00:32:32.640
a cartridge and a instructions
and manual. It's going to

588
00:32:32.640 --> 00:32:36.120
look and feel like you
remember Sega drive In Genesis

589
00:32:36.120 --> 00:32:40.070
games were 25 years ago.
Yeah. It's currently 45 plus

590
00:32:40.070 --> 00:32:45.860
Fats, 45 pounds GBP. Obviously
the more we make the

591
00:32:46.100 --> 00:32:49.430
cheaper it's going to get.
So maybe, maybe perhaps after

592
00:32:49.430 --> 00:32:51.350
release, we might be able
to bring the price down

593
00:32:51.980 --> 00:32:55.100
is quite an expensive thing
to do has been monumentally

594
00:32:55.100 --> 00:32:59.060
difficult. And there's a lot
of people involved. So yeah,

595
00:33:00.020 --> 00:33:04.340
this, the, the price is
the subject of much discussion.

596
00:33:05.840 --> 00:33:09.380
Now that, that, that's what
it's costing us. So fortunately

597
00:33:09.380 --> 00:33:12.500
we're not all 13 year
olds though. Now we, I

598
00:33:12.500 --> 00:33:14.630
think if we're interested in
this, we're no longer 13

599
00:33:14.630 --> 00:33:17.390
trying to put that money
together. In fact, we're supporting

600
00:33:17.390 --> 00:33:19.940
an entire burgeoning industry of,
of retro gamers. And if

601
00:33:19.940 --> 00:33:23.150
we can make Tanglewood successful,
then hopefully that will make

602
00:33:23.420 --> 00:33:26.480
the next Tanglewood successful. That
is maybe written by someone

603
00:33:26.480 --> 00:33:30.500
else. Yeah. I'm hoping. So
there's certainly other Homebrew projects

604
00:33:30.500 --> 00:33:35.060
out there. There's one called
Xeno crisis, a smash TV,

605
00:33:35.060 --> 00:33:38.120
like game. And they were
recently successful on Kickstarter too.

606
00:33:39.140 --> 00:33:41.690
So yeah, if you keep
supporting things like this, where

607
00:33:41.750 --> 00:33:44.300
we're only going to meet
more of them, that's cool.

608
00:33:44.300 --> 00:33:46.100
So we can go out
and search for that as

609
00:33:46.100 --> 00:33:49.190
well. They have a Kickstarter
as, you know, crisis, very,

610
00:33:49.190 --> 00:33:51.440
very different game and certainly
something else that people could

611
00:33:51.440 --> 00:33:54.530
support. So I'm excited that
I can use this on

612
00:33:54.530 --> 00:33:59.180
my restaurant as well. So
people can take a look@thatattanglewoodgame.com.

613
00:33:59.420 --> 00:34:01.550
Very cool. Well, thanks so
much for chatting with me

614
00:34:01.550 --> 00:34:04.190
today, Matt Phillips from big
evil corporation. Thank you very

615
00:34:04.190 --> 00:34:07.760
much. This has been another
episode of Hansel minutes and

616
00:34:07.760 --> 00:34:16.660
we'll see you again next
week. <inaudible>.

