WEBVTT FILE

1
00:00:00.300 --> 00:00:02.190
Hey friends, this is Scott,
and I've got a word

2
00:00:02.190 --> 00:00:04.620
from a new sponsor and
a really cool sponsor. In

3
00:00:04.620 --> 00:00:08.160
fact that I use myself,
they are Sikh that's S

4
00:00:08.190 --> 00:00:12.180
E Q, and you can
check them out@getsikh.net. That's G

5
00:00:12.180 --> 00:00:16.680
E T S E q.net.
Seek is the easiest way

6
00:00:16.680 --> 00:00:20.370
for your team to capture
and search and visualize structured

7
00:00:20.370 --> 00:00:23.340
log events. You probably do
logging. Maybe you have a

8
00:00:23.340 --> 00:00:27.600
node app or an asp.net
core app. Move beyond text

9
00:00:27.600 --> 00:00:32.160
files, check out structured, logging
it, preserves those individual property

10
00:00:32.160 --> 00:00:34.860
values. As well as the
text that's associated with each

11
00:00:34.860 --> 00:00:37.620
event, they get sent across
the network to seek which

12
00:00:37.620 --> 00:00:40.890
then displays them and makes
them searchable. It's really easy

13
00:00:40.890 --> 00:00:43.890
to get started. You can
probably instrument your application. If

14
00:00:43.890 --> 00:00:46.800
you're already using logging in
just minutes, you just go

15
00:00:46.800 --> 00:00:50.760
to get seek that's G
E T S E q.net.

16
00:00:51.090 --> 00:00:53.970
You install the seek server,
it's a windows service, and

17
00:00:53.970 --> 00:00:56.760
then it listens and handles
all the logging, whether you're

18
00:00:56.760 --> 00:01:00.270
using no JS and the
Bunyan logging library, or maybe

19
00:01:00.270 --> 00:01:03.870
you use Sera log on.net
or just asp.net core is

20
00:01:03.870 --> 00:01:06.900
built in logging. Sikh is
there for whatever you want

21
00:01:06.900 --> 00:01:09.120
to use, whether it be.net
or node or Python or

22
00:01:09.120 --> 00:01:12.420
Java, it's a really great
product. And I encourage you

23
00:01:12.420 --> 00:01:14.940
to check them out and
support them the way that

24
00:01:14.940 --> 00:01:30.930
they support us here at
Hansel minutes. Hi, this is

25
00:01:30.930 --> 00:01:33.540
Scott Hanselman. This is another
episode of Hansel minutes today.

26
00:01:33.540 --> 00:01:35.580
I'm talking with Mark Downey.
He happens to be a

27
00:01:35.580 --> 00:01:38.640
senior software engineer at Pfizer,
but we're talking about side

28
00:01:38.640 --> 00:01:40.830
work and fun things that
we do on the side.

29
00:01:41.760 --> 00:01:45.540
So you and I both
run dos blog, which is

30
00:01:45.540 --> 00:01:50.330
a blogging engine. It's kind
of Very old. Yeah. So

31
00:01:50.330 --> 00:01:55.160
I started using Gus blog
probably in 2006 and before

32
00:01:55.160 --> 00:01:58.910
then I was using life
spaces and that kind of

33
00:01:58.910 --> 00:02:02.750
stuff. So started using DAS
blog. Cause I wanted to

34
00:02:03.320 --> 00:02:06.920
basically own more of my
experience. Life spaces was probably

35
00:02:07.070 --> 00:02:09.320
at that point a year
or so from closing down.

36
00:02:09.350 --> 00:02:13.070
And, you know, I was
shocked by the fact that

37
00:02:13.220 --> 00:02:16.310
my online identity could go
away so quickly. And so

38
00:02:16.310 --> 00:02:18.260
DAS blog, I think I
was choosing between a couple

39
00:02:18.260 --> 00:02:22.330
of platforms, DAS blog and
subtext was out there and,

40
00:02:22.380 --> 00:02:24.830
and DAS blog kind of
appealed to me because you

41
00:02:24.830 --> 00:02:26.990
know, that the files were
in XML. So when everybody

42
00:02:26.990 --> 00:02:29.690
was talking about XML back
then, and it just seemed

43
00:02:29.690 --> 00:02:32.630
like a format that I
could easily archive and go

44
00:02:32.630 --> 00:02:36.290
back to and, and perpetuate
in, in different formats. So,

45
00:02:36.620 --> 00:02:38.480
so kind of a pick
DAS blog years ago for

46
00:02:38.480 --> 00:02:42.410
that reason. Yeah. The database
is no database. It's just

47
00:02:42.410 --> 00:02:45.740
a file system. There's like
one file per year. Right?

48
00:02:45.740 --> 00:02:48.770
Exactly. Exactly. It's kind of
a unique statement on how

49
00:02:48.770 --> 00:02:50.510
blogging is supposed to be.
I kind of liked it.

50
00:02:51.110 --> 00:02:53.210
Yeah. And I don't know
if it's more secure. I

51
00:02:53.210 --> 00:02:55.490
haven't, I can't say I
haven't had any issues with

52
00:02:55.490 --> 00:02:59.710
security probably through obscurity, but
it is comforting to back

53
00:02:59.710 --> 00:03:01.810
up a bunch of text
files and just know that

54
00:03:01.810 --> 00:03:05.950
you've backed up your entire
system. Exactly, exactly. Yeah. So

55
00:03:05.950 --> 00:03:08.560
it's XML and it was
based on if I remember

56
00:03:08.560 --> 00:03:13.630
correctly, when we started Clemens,
fasters started in 2001 or

57
00:03:13.630 --> 00:03:17.200
2002 and then Omar Shaheen.
And I took over with

58
00:03:17.200 --> 00:03:22.030
a team of people 2003,
four, five, we got it

59
00:03:22.030 --> 00:03:25.420
up to.net one, one, and
then two. Oh, and we

60
00:03:25.420 --> 00:03:27.150
stayed at two O for
a very long time. When

61
00:03:27.170 --> 00:03:29.730
was it? You and I
that took it. Yes. Yes.

62
00:03:29.730 --> 00:03:32.430
That's that at some point
a few years back, I

63
00:03:32.430 --> 00:03:35.310
think we decided that it
had been on two offer

64
00:03:35.340 --> 00:03:37.950
for long enough and that
there were lots of features

65
00:03:37.950 --> 00:03:41.400
we could, well, just for
maintenance of the fact that

66
00:03:41.400 --> 00:03:43.170
it was, we needed to
maintain it for a little

67
00:03:43.170 --> 00:03:45.480
bit longer. And so for
all, was just an obvious

68
00:03:45.480 --> 00:03:50.550
move. And trying to, to,
to that was the, that

69
00:03:50.550 --> 00:03:52.350
was the point where I
decided that I kind of

70
00:03:52.350 --> 00:03:54.420
wanted to do some work
in public because I felt

71
00:03:54.420 --> 00:03:56.670
it was, you know, if
there's anybody using dos blog

72
00:03:56.670 --> 00:03:59.190
out there, you know, maybe
the work that I did

73
00:03:59.190 --> 00:04:03.240
could be useful to themselves.
And it's interesting because more

74
00:04:03.240 --> 00:04:05.640
and more we've been looking
at this as a, as

75
00:04:05.640 --> 00:04:09.780
a legacy project as like
the here's some legacy code

76
00:04:09.780 --> 00:04:12.210
we inherited because I've been
using it now for the

77
00:04:12.210 --> 00:04:15.060
better part of 15 years
and even using it for

78
00:04:15.450 --> 00:04:18.450
a similarly long time. Right.
Why didn't we just go

79
00:04:18.450 --> 00:04:24.990
to WordPress? For me, it
was about, there was a

80
00:04:25.080 --> 00:04:28.080
kind of a crossover between
the company I was working

81
00:04:28.080 --> 00:04:30.990
for and the kind of
work they were doing and

82
00:04:31.050 --> 00:04:33.540
the, and the work that
I got to do. So

83
00:04:33.570 --> 00:04:35.940
all the time, I was
trying to flesh out my

84
00:04:35.940 --> 00:04:44.100
understanding of the, of the
asp.net space. And so having

85
00:04:44.100 --> 00:04:46.950
a platform that I was
sitting on that was that

86
00:04:46.950 --> 00:04:48.510
I was using at work
kind of gave me an

87
00:04:48.510 --> 00:04:51.720
opportunity to, to kind of
look below the covers occasionally.

88
00:04:51.720 --> 00:04:53.550
And so that kind of
appealed to me having that

89
00:04:53.550 --> 00:04:56.190
measure of control. Whereas if
I went to WordPress and

90
00:04:56.190 --> 00:05:00.300
certainly not PHP developer, and
whatever's going on under the

91
00:05:00.300 --> 00:05:03.930
cover, I'm trusting somebody else.
And so for me, it

92
00:05:03.930 --> 00:05:07.050
was kind of more about
control and about understanding the

93
00:05:07.050 --> 00:05:09.780
technology and then using that
as an opportunity to maybe

94
00:05:09.780 --> 00:05:13.890
learn some things as well.
Yeah. The, the thing for

95
00:05:13.890 --> 00:05:16.740
me that has always bothered
me is the URLs. I

96
00:05:16.740 --> 00:05:19.170
always, I always knew I
wanted to control my own

97
00:05:19.170 --> 00:05:21.230
URL. I didn't want to
go to medium as, as

98
00:05:21.240 --> 00:05:24.390
attractive of medium is I
never liked the URLs in

99
00:05:24.390 --> 00:05:27.480
live spaces. Like I feel
like live spaces almost didn't

100
00:05:27.480 --> 00:05:30.420
succeed simply based on the
fact that its URLs were

101
00:05:30.420 --> 00:05:33.540
ugly. Yeah. Very much so.
Yeah. Yeah. That's a horrible

102
00:05:33.540 --> 00:05:37.440
thing to say. Yeah. I
must've made that may have

103
00:05:37.440 --> 00:05:41.220
been one of the things
that has been difficult about

104
00:05:41.460 --> 00:05:44.730
moving DAS blog is that
the URLs kind of tie

105
00:05:44.730 --> 00:05:48.810
us publicly to a particular
time and space with the

106
00:05:48.810 --> 00:05:53.400
asp.net and they don't look
great. And so I looked

107
00:05:53.400 --> 00:05:57.230
at several solutions within the
us blog, original code on

108
00:05:57.230 --> 00:06:00.080
how to do that. And
he just, there was just

109
00:06:00.080 --> 00:06:02.210
a lot of legacy to
get through, to make any

110
00:06:02.210 --> 00:06:05.480
kind of meaningful change to
that code base. So it

111
00:06:05.480 --> 00:06:09.080
was difficult to really dive
into web forms and make

112
00:06:09.080 --> 00:06:11.300
that change in a, in
a really succinct way. So

113
00:06:11.900 --> 00:06:14.530
yeah, URLs every once in
a while I will get

114
00:06:14.530 --> 00:06:17.710
into hacker news or slash
dot or somewhere popular like

115
00:06:17.710 --> 00:06:21.970
Reddit and I'll say something
declarative about the internet, right.

116
00:06:21.970 --> 00:06:24.610
Just like, Oh, the internet,
blah, blah, blah, or web

117
00:06:24.610 --> 00:06:27.790
technologies, blah, blah, blah. And
someone will say this from

118
00:06:27.790 --> 00:06:30.610
a guy who's got dot
ASP X and his URL.

119
00:06:31.630 --> 00:06:34.690
Right, right. Yeah. It kind
of, it kind of tells

120
00:06:34.690 --> 00:06:37.690
everybody something and it's that
information that I kind of

121
00:06:37.690 --> 00:06:40.090
want to keep to myself
about what it is and

122
00:06:40.690 --> 00:06:43.660
w what our blog is
and the technology stack it

123
00:06:43.660 --> 00:06:45.430
sits on, they kind of
don't need to kind of

124
00:06:45.430 --> 00:06:48.030
know that in you URL.
So, yeah, I agree with,

125
00:06:48.050 --> 00:06:51.070
it's always been something I've
struggled with, but hopefully I

126
00:06:51.070 --> 00:06:53.110
can do something about it
in the future. Well, it

127
00:06:53.110 --> 00:06:56.440
seems like the internet has
decided that lowercase with hyphens

128
00:06:56.440 --> 00:06:58.240
is the way we do
URLs when they are, when

129
00:06:58.240 --> 00:07:00.790
they have titles. So basically
do what stack overflow does

130
00:07:00.790 --> 00:07:03.130
have an ID and then
a slash and then a

131
00:07:03.130 --> 00:07:06.280
title. Right? Exactly. Yeah, yeah.
Yeah. And then if you

132
00:07:06.280 --> 00:07:10.210
can avoid having your technology
have an extension that shows

133
00:07:10.210 --> 00:07:13.060
like don't, you can use
PHP, but don't let people

134
00:07:13.060 --> 00:07:16.900
know that you're using. Exactly.
Yeah. So, So time goes

135
00:07:16.900 --> 00:07:19.300
by a year or two
goes by, I really only

136
00:07:19.300 --> 00:07:22.210
do updates occasionally, but then
you started adding some really

137
00:07:22.210 --> 00:07:25.930
interesting stuff. And that's what
got me like excited and

138
00:07:25.930 --> 00:07:29.080
where I officially switched over
to like the Mark Downey

139
00:07:29.080 --> 00:07:31.900
does blog code base. And
it was your social stuff.

140
00:07:31.930 --> 00:07:35.620
Like a, we learned about
open graph and Twitter cards.

141
00:07:36.630 --> 00:07:39.430
Exactly. So we started, so
I started on all back

142
00:07:39.460 --> 00:07:44.230
with this probably in 2006.
And so the web, wasn't

143
00:07:44.230 --> 00:07:46.990
what it is today, 2018.
So we're 12 years later

144
00:07:47.650 --> 00:07:51.640
and the web had no
idea about Twitter and Facebook

145
00:07:51.640 --> 00:07:56.380
and these other, these other
social kind of inflection points

146
00:07:56.380 --> 00:07:59.170
for, for it that a
developer could use. So for

147
00:07:59.170 --> 00:08:02.260
me, it felt like my
blog wasn't keeping up and

148
00:08:02.260 --> 00:08:04.750
that was getting frustrating. Cause
you have things like Twitter

149
00:08:04.750 --> 00:08:07.300
cards that are available that.
So if you share your

150
00:08:07.300 --> 00:08:09.220
stuff on Twitter, you can
see a little nice little

151
00:08:09.220 --> 00:08:11.410
picture and it'll give a
kind of a digest of

152
00:08:11.410 --> 00:08:16.390
what the blog post is
about. If you've implemented, if

153
00:08:16.390 --> 00:08:19.330
you've entered, implemented Twitter cards,
but we, we, we never

154
00:08:19.330 --> 00:08:21.790
did. And I, at this
point I have it open.

155
00:08:22.210 --> 00:08:23.920
I got a chance to
look at it and it

156
00:08:23.920 --> 00:08:27.880
became actually a relatively simple
process. And then I started

157
00:08:27.880 --> 00:08:30.100
to kind of ping you
and say, Hey, I think

158
00:08:30.100 --> 00:08:32.530
I've figured this portion out.
Do you want it for

159
00:08:32.530 --> 00:08:35.950
your, for your blog as
well? Yeah. Yeah. And you

160
00:08:35.950 --> 00:08:38.110
had mentioned that it was
running on web forms, which

161
00:08:38.110 --> 00:08:40.420
was amazing at the time,
but has now become somewhat

162
00:08:40.420 --> 00:08:45.250
of a legacy technology. It
moves a lot slower from

163
00:08:45.250 --> 00:08:49.090
an innovation perspective than things
like MVC was the, it

164
00:08:49.090 --> 00:08:51.280
was that lifecycle of web
forms, the way that web

165
00:08:51.280 --> 00:08:53.110
forms work, that made it
difficult for us to make

166
00:08:53.110 --> 00:08:55.160
some of the changes that
we wanted to make it.

167
00:08:55.160 --> 00:08:57.900
Exactly. So you Kind of,
you tied into a world

168
00:08:57.960 --> 00:09:01.710
of, and especially when this
started, so this was prior

169
00:09:01.710 --> 00:09:05.970
to master pages, this was
prior to generics prior to

170
00:09:05.970 --> 00:09:09.570
novel types. This is prior
to all those things that

171
00:09:09.570 --> 00:09:12.810
made web forms easy. Those
were part of the actual

172
00:09:12.810 --> 00:09:15.390
code base because there is
a version of dos blogs,

173
00:09:15.450 --> 00:09:20.250
master pages. There is a
version of various things that

174
00:09:20.250 --> 00:09:22.620
we now take for granted
when we're developing the web

175
00:09:22.920 --> 00:09:26.610
in MVC. For example, not
only did they not exist

176
00:09:26.610 --> 00:09:30.540
when we, when DAS blog
was, was being created, that

177
00:09:30.600 --> 00:09:33.660
that's now another layer that
is unique to DAS blog

178
00:09:33.690 --> 00:09:36.000
that we have to maintain
in some kind of way.

179
00:09:36.360 --> 00:09:39.420
So there, there's a kind
of bloat to the, to

180
00:09:39.420 --> 00:09:43.620
the UI layer that even
for a normal web forms

181
00:09:43.620 --> 00:09:47.460
project probably wouldn't exist. And
then the question then becomes,

182
00:09:47.460 --> 00:09:49.530
do you want to do,
do we want to work

183
00:09:49.530 --> 00:09:52.440
on web forms first to
do we want to work

184
00:09:52.440 --> 00:09:55.980
on DAS blogs version of
web form second? And so

185
00:09:55.980 --> 00:09:57.570
you kind of have to
kind of put in a

186
00:09:57.570 --> 00:10:01.380
series of hacks that, you
know, you may or may

187
00:10:01.380 --> 00:10:04.080
not have to pay for
in the end. And what,

188
00:10:04.080 --> 00:10:06.180
what does that look like
for your code base going

189
00:10:06.180 --> 00:10:10.910
forward? So Yeah, the fact
that DAS blog old as

190
00:10:10.910 --> 00:10:14.300
it was old, as it
is, was somewhat well factored

191
00:10:14.330 --> 00:10:18.080
in that the templating engine
was a thing and the

192
00:10:18.080 --> 00:10:23.070
runtime or the database abstraction
was somewhat of a, a

193
00:10:23.210 --> 00:10:26.810
service factory that those things
were separate enabled you to

194
00:10:26.900 --> 00:10:30.620
swap pieces out and not
swap other pieces up. Oh

195
00:10:30.620 --> 00:10:33.080
yeah. So, yeah. So I
mean, the fact is it

196
00:10:33.080 --> 00:10:38.210
was well-designed, but it was,
it was bespoke. It was,

197
00:10:38.270 --> 00:10:41.840
it was just at a
somebody invention. So there was

198
00:10:41.840 --> 00:10:45.740
no real, there was no
real kind of comparison to

199
00:10:45.740 --> 00:10:48.860
maybe what massive pages ended
up being. But as you

200
00:10:48.860 --> 00:10:52.490
say, we, I was then
able to say, okay, we

201
00:10:52.490 --> 00:10:56.000
can put a layer at
all. Overall, the business logic

202
00:10:57.050 --> 00:11:00.830
that currently exists in the
DAS blog cold, and we

203
00:11:00.830 --> 00:11:05.240
can then talk to a
more modern MVC type layer

204
00:11:05.270 --> 00:11:10.040
if we want to, because
basically all the, all the

205
00:11:10.160 --> 00:11:13.400
grunge, all the really old
stuff, all the, you know,

206
00:11:13.670 --> 00:11:16.850
I guess at that point
we were using collections for,

207
00:11:16.850 --> 00:11:21.800
you know, for, for dealing
with array type objects. Those

208
00:11:21.800 --> 00:11:24.950
things you don't necessarily have
to know about now, because

209
00:11:25.190 --> 00:11:27.800
just with a simple layer
of abstraction, we can kind

210
00:11:27.800 --> 00:11:30.260
of push that away from
ever having to think about

211
00:11:30.260 --> 00:11:33.080
it. But yet that called,
that is working very well.

212
00:11:33.080 --> 00:11:35.570
That doesn't break that has
been working. I've never had

213
00:11:35.630 --> 00:11:38.660
an issue with DAS blog
ever. So all that consistent

214
00:11:38.660 --> 00:11:41.030
code still gets used, but
we kind of get to

215
00:11:41.300 --> 00:11:45.410
reinvent the UI layer. And
the UI layer is one

216
00:11:45.410 --> 00:11:47.450
thing that we should talk
about and dig into, but

217
00:11:47.450 --> 00:11:49.340
it's also worth pointing out
that there was a time

218
00:11:49.340 --> 00:11:53.620
when DAS blog was created
before C-sharp generics. So he

219
00:11:53.620 --> 00:11:57.010
didn't have a list of
blog posts or a list

220
00:11:57.010 --> 00:12:00.310
of entries, right. You literally
had like an entry collection

221
00:12:00.310 --> 00:12:02.980
that was generated. We used
to have to manually generate

222
00:12:02.980 --> 00:12:06.750
strongly tight collections. Great, great.
Yeah, that's it, it's been

223
00:12:06.750 --> 00:12:09.540
interesting kind of, it's been
a trip down memory lane,

224
00:12:09.540 --> 00:12:13.680
really because that, that is
literally everywhere in the code,

225
00:12:14.490 --> 00:12:16.350
but if somebody comes in
and decides they want to

226
00:12:16.590 --> 00:12:21.720
work on it today, you
kind of, you, you basically

227
00:12:21.720 --> 00:12:24.240
decided at the manager layer
and I'm using that in

228
00:12:24.240 --> 00:12:27.360
the colloquial sense. It's just
a layer, a couple of,

229
00:12:27.430 --> 00:12:31.200
of, of classes that deal
with this is what the

230
00:12:31.380 --> 00:12:34.020
controller's asking me for. And
I know how to interpret

231
00:12:34.020 --> 00:12:37.050
that for the business layers
of, of, of, of DAS

232
00:12:37.050 --> 00:12:39.360
blocks. So you don't really
have to worry about collections

233
00:12:39.360 --> 00:12:42.870
now, and that that's kind
of made easy by certain

234
00:12:42.870 --> 00:12:46.950
changes that Microsoft had been
implementing with, with, with standards

235
00:12:46.950 --> 00:12:49.830
across the board. Well, a
couple of times I had

236
00:12:49.830 --> 00:12:52.410
made an attempt to go
in the direction that you

237
00:12:52.410 --> 00:12:54.780
were going, but I have
to admit, I failed you

238
00:12:54.780 --> 00:12:58.650
succeeded when others failed. I
felt like I didn't have

239
00:12:58.650 --> 00:13:02.280
enough code coverage to make
the kind of changes I

240
00:13:02.280 --> 00:13:05.430
wanted to make, particularly around
collections. I was too fearful

241
00:13:05.430 --> 00:13:06.810
of the code based. And
I feel like if I

242
00:13:06.810 --> 00:13:10.200
had a robust series of
unit tests, I could have

243
00:13:10.230 --> 00:13:15.180
refactored with impunity, but I
just didn't. Right. Yeah. It's,

244
00:13:15.270 --> 00:13:19.620
it's, I think it's made
a little bit easier. I

245
00:13:19.620 --> 00:13:21.750
think, I guess the thing
that makes it a little

246
00:13:21.750 --> 00:13:25.980
bit easier these days is
that I didn't have to

247
00:13:25.980 --> 00:13:29.940
kind of completely get rid
of all the existing code.

248
00:13:30.600 --> 00:13:33.570
I've kind of, at some
point said I'm willing to,

249
00:13:33.780 --> 00:13:35.850
I'm happy for it to
stay the same at a

250
00:13:35.850 --> 00:13:39.390
certain layer B because that
just doesn't give me any

251
00:13:39.390 --> 00:13:41.490
value to change it at
this point. So I've kind

252
00:13:41.490 --> 00:13:46.170
of focused less on changing
things and more on how

253
00:13:46.170 --> 00:13:48.240
can we consistently use it
in a way that's going

254
00:13:48.240 --> 00:13:50.190
to be going to give
us the kind of performance

255
00:13:50.190 --> 00:13:53.670
and reliability that we've relied
on all this time. So

256
00:13:53.700 --> 00:13:56.490
when we first started trying
to think about the future

257
00:13:56.490 --> 00:13:59.370
of dusk blog, it was
just moving it forward in

258
00:13:59.370 --> 00:14:01.710
the dotnet framework timeframe. But
I think both of us

259
00:14:01.980 --> 00:14:04.560
had this dream that we
could maybe one day run

260
00:14:04.560 --> 00:14:06.660
it on Linux or run
it on a cheap Linux

261
00:14:06.660 --> 00:14:11.130
host where the PHP people
live, or maybe even run

262
00:14:11.140 --> 00:14:15.030
in a Docker container. We
tried if I remember some

263
00:14:15.030 --> 00:14:21.270
attempts with, with.net core one
point X, but it wasn't

264
00:14:21.270 --> 00:14:24.180
amazing. It wasn't an amazing
experience. What was it that

265
00:14:24.180 --> 00:14:25.740
made you come back and
try to do this and

266
00:14:25.740 --> 00:14:29.970
done at court 2.0, So
yeah, so the original version

267
00:14:29.970 --> 00:14:34.230
of the.net standard, which I
think is 1.1, didn't have

268
00:14:34.230 --> 00:14:37.590
enough API coverage. And, you
know, I assume that's a

269
00:14:37.590 --> 00:14:40.740
function of time and, and
release data, but with the

270
00:14:40.770 --> 00:14:45.930
release of.net standard two, we
got a really high level

271
00:14:45.930 --> 00:14:49.320
of API coverage. So just
from a kind of overview

272
00:14:49.320 --> 00:14:52.610
standpoint, what that kind of
meant me is that I

273
00:14:52.610 --> 00:14:55.760
could now focus on a
standard rather than a platform.

274
00:14:55.760 --> 00:14:59.540
So I didn't really care
that it was.net as long

275
00:14:59.540 --> 00:15:02.370
as I could, could upgrade
the projects to a, to

276
00:15:02.370 --> 00:15:05.870
a particular version of.net, which
I think is force five.

277
00:15:05.870 --> 00:15:08.390
I think if I remember
correctly, but as long as

278
00:15:08.390 --> 00:15:10.430
I could upgrade all the
projects to that and be

279
00:15:10.430 --> 00:15:15.890
successful, I knew that.net standard
two would cover co cover

280
00:15:15.890 --> 00:15:18.440
that cause there's a kind
of a matrix of what

281
00:15:18.470 --> 00:15:21.290
does, you know, what various,
you know, what the Xamarin

282
00:15:22.040 --> 00:15:25.430
standard is for.net standard two
and so on and so

283
00:15:25.430 --> 00:15:28.520
forth. So I was able
to, to upgrade the projects

284
00:15:29.780 --> 00:15:33.620
and then core became an
opportunity for me in a

285
00:15:33.620 --> 00:15:38.750
possibility. And then I started
thinking, well, because it's, this

286
00:15:38.750 --> 00:15:41.890
is core. And as you
say, Linux becomes in, in,

287
00:15:41.890 --> 00:15:45.980
in, in arm's reach at
that point, because essentially it's

288
00:15:45.980 --> 00:15:53.150
able to core is multi-platform.
So, so getting that standard

289
00:15:53.780 --> 00:15:56.240
and, and getting a more
broader coverage of API, this

290
00:15:56.240 --> 00:15:59.300
was just the point at
which I realized, not only

291
00:15:59.300 --> 00:16:01.940
can I bring this project
forward, I can bring this

292
00:16:01.940 --> 00:16:04.820
project forward on any platform.
And that was really just

293
00:16:04.820 --> 00:16:08.230
an eye opener and a
really, really cool idea. What

294
00:16:08.230 --> 00:16:10.510
were the things that weren't
there before? Like I know

295
00:16:10.510 --> 00:16:12.670
we had a lot of
regular expressions and I know

296
00:16:12.670 --> 00:16:16.720
that we, you know, a
lot of text manipulation system,

297
00:16:16.720 --> 00:16:19.510
that XML was probably the
biggest one. Yeah. There was

298
00:16:19.510 --> 00:16:21.820
a lot of stuff with
XML that wasn't there at

299
00:16:21.820 --> 00:16:25.300
civilization DC realization, which wasn't
there. But to be honest,

300
00:16:25.690 --> 00:16:31.840
what I try to do
was upgrade the projects to

301
00:16:31.840 --> 00:16:36.700
a version of the.net standard.
1.1, and literally nothing worked.

302
00:16:37.270 --> 00:16:42.130
It was, it was obvious
that that, that it was

303
00:16:42.130 --> 00:16:45.640
going to be difficult to
convert this when.net standard two

304
00:16:45.640 --> 00:16:48.940
came out, what they brought
out was a series of

305
00:16:48.940 --> 00:16:52.690
tools that helped you detect
which APIs would and would

306
00:16:52.690 --> 00:16:54.670
not be covered. So I
was able to use those

307
00:16:56.050 --> 00:16:59.620
and I was able to
also, and the literally it

308
00:16:59.620 --> 00:17:01.270
was, it just started up.
As soon as you hit

309
00:17:01.270 --> 00:17:03.520
fib, it was going, I
was able to completely go

310
00:17:03.520 --> 00:17:05.590
with the project. So it
was, it was kind of,

311
00:17:06.460 --> 00:17:09.100
this is doable. Cause at
that point I was actually

312
00:17:09.100 --> 00:17:14.350
running a web forms project
in dotnet standard to after

313
00:17:14.350 --> 00:17:18.370
upgrading and it was happy.
So I knew that converting

314
00:17:18.370 --> 00:17:20.860
this and getting an MVC
project as the new UI

315
00:17:20.860 --> 00:17:24.610
was, was, was definitely doable.
What was it that made

316
00:17:24.610 --> 00:17:29.650
it possible to go from
web forms to, to MVC?

317
00:17:29.650 --> 00:17:33.040
It was the fact that
it was already MVC ish

318
00:17:33.050 --> 00:17:35.860
or was it just that
it had a decent separation

319
00:17:35.860 --> 00:17:41.200
between UI and, and, and
runtime. So yeah, those are

320
00:17:41.200 --> 00:17:44.200
very good separation already in
place. There was a set

321
00:17:44.200 --> 00:17:47.230
of services that are inside
DAS blog that kind of

322
00:17:47.230 --> 00:17:50.370
do the bulk of the
work, the bulk of retrieving

323
00:17:50.370 --> 00:17:52.980
a set of blog posts
for a given time period.

324
00:17:52.980 --> 00:17:57.690
The idea of saving blog
posts from a webpage was

325
00:17:57.690 --> 00:18:01.590
all separated out. Web forms
is a massive project. It

326
00:18:01.590 --> 00:18:03.450
has a lot of coding
it, but it's a lot

327
00:18:03.450 --> 00:18:05.760
of code for the reasons
we kind of discussed the

328
00:18:05.760 --> 00:18:08.940
idea that we kind of
had to invent the framework

329
00:18:08.970 --> 00:18:12.090
for developing the web while
developing the web. This was

330
00:18:12.090 --> 00:18:15.660
obviously your time rather than
my time. And so what

331
00:18:15.660 --> 00:18:18.360
you actually ended up doing
is reducing the number of

332
00:18:18.360 --> 00:18:24.150
lines you're actually dealing with
by converting to MVC because

333
00:18:24.180 --> 00:18:31.500
the frameworks for developing asp.net
is NBC is much more

334
00:18:31.500 --> 00:18:35.040
succinct, much more, much more
capable with fewer lines of

335
00:18:35.040 --> 00:18:38.960
code to be Frank. Yeah,
it's interesting. When we were

336
00:18:38.960 --> 00:18:42.080
doing these things, you know,
early on, there was a

337
00:18:42.080 --> 00:18:44.750
feeling that we didn't have
any tools. We didn't have

338
00:18:44.750 --> 00:18:48.020
the things we wanted to
do, what we wanted. I

339
00:18:48.020 --> 00:18:50.270
don't know if it was
simply that we do now

340
00:18:50.270 --> 00:18:53.720
have abstraction layers that are,
that are what we need

341
00:18:53.720 --> 00:18:58.310
or if just our understanding
of the internet changed, because

342
00:18:58.310 --> 00:19:00.170
it feels like we spent
so much time in the

343
00:19:00.170 --> 00:19:04.040
early two thousands trying to
hide HTTP from ourselves. And,

344
00:19:04.160 --> 00:19:07.100
and now we just don't
and it's Oh, and that's

345
00:19:07.100 --> 00:19:11.030
okay. Yeah. I actually came
from, so my kind of

346
00:19:11.050 --> 00:19:17.120
a coding lineage starts before
C sharp with VB six,

347
00:19:17.120 --> 00:19:21.690
right? And for me it
was dropping object, click it,

348
00:19:21.740 --> 00:19:24.590
and an event set something
off. So I was kind

349
00:19:24.590 --> 00:19:27.440
of doing the same kind
of thing. I needed the

350
00:19:27.470 --> 00:19:30.980
OnRamp of web forms to
get into web development because

351
00:19:30.980 --> 00:19:32.990
of that point and click
idea was, was something I

352
00:19:32.990 --> 00:19:35.480
was used to, it, it
worked, it got me upgraded

353
00:19:35.480 --> 00:19:38.330
to the web, but then
understanding the vernacular of the

354
00:19:38.330 --> 00:19:42.260
web is really what actually
having gospel kind of helped

355
00:19:42.260 --> 00:19:44.900
me do because the idea
of a get and post

356
00:19:44.900 --> 00:19:47.810
wasn't there for me in
the kind of desktop world.

357
00:19:48.590 --> 00:19:54.020
So yeah, web forms is
useful, but it's certainly it,

358
00:19:54.170 --> 00:19:57.050
it was helping a particular
problem that I don't think

359
00:19:57.050 --> 00:20:00.290
exists today. Hey folks, I
want to take a moment

360
00:20:00.290 --> 00:20:02.630
to thank our sponsors and
remind you that when you

361
00:20:02.630 --> 00:20:06.080
support them, you're supporting Hansel
minutes because they make this

362
00:20:06.080 --> 00:20:10.700
show possible. Innovative developers help
improve the lives of millions,

363
00:20:10.700 --> 00:20:14.750
of small businesses and accountants
that use QuickBooks worldwide. Your

364
00:20:14.750 --> 00:20:17.240
app could make the difference
that helps them work smarter

365
00:20:17.570 --> 00:20:20.900
and put more money in
their pocket, enter into it.

366
00:20:20.930 --> 00:20:24.560
Developer from tech tools to
growing your customer base, to

367
00:20:24.560 --> 00:20:28.340
helping you get funding. Intuit
developer helps your app go

368
00:20:28.340 --> 00:20:34.850
from concept to company, find
out more at intuit.me/code that's

369
00:20:34.910 --> 00:20:42.020
I N T U I
t.me/code. So since we started

370
00:20:42.020 --> 00:20:46.010
in this and you did
your, your initial spike and

371
00:20:46.010 --> 00:20:50.590
now quite a competence I've
gotten at core we've re-imagined

372
00:20:50.590 --> 00:20:54.310
or renamed it DAS blog
core, and it's also been

373
00:20:54.310 --> 00:21:01.180
moved from github.com/s Hanselman to
get hub.com/papa P O PPA

374
00:21:01.210 --> 00:21:06.030
string, Papa string. You're a
string instrument player. Yeah. Bass

375
00:21:06.030 --> 00:21:10.770
player, and a little bit
of guitar. Alright. So I

376
00:21:10.770 --> 00:21:13.680
thought, and again, I feel
like I'm, I'm, I'm diminishing

377
00:21:13.680 --> 00:21:16.260
you or minimizing you in
some way that you would

378
00:21:16.800 --> 00:21:20.040
hold it there as a
hobby, but somehow issues started

379
00:21:20.040 --> 00:21:22.500
showing up and pull requests
started showing up, how did

380
00:21:22.500 --> 00:21:25.920
this go from being, you
know, a side project where

381
00:21:25.920 --> 00:21:28.950
you and I just keep
our blogs alive, our ancient,

382
00:21:28.950 --> 00:21:32.100
silly blogs to being a
complete reimagination to now being

383
00:21:32.100 --> 00:21:35.610
something that's actually got pull
requests. Yeah. It's actually quite

384
00:21:35.610 --> 00:21:39.360
surprising to be honest. So
I've always been a developer

385
00:21:39.360 --> 00:21:43.500
who, who kind of develops
at work exclusively and never

386
00:21:43.500 --> 00:21:46.950
in public. I used blogging
as a way to learn

387
00:21:47.130 --> 00:21:51.300
kind of the idea of
set explaining something, but I

388
00:21:51.300 --> 00:21:54.960
never did open source before.
You know, I just did

389
00:21:54.960 --> 00:21:57.000
a few pull requests. I
did a one pull request

390
00:21:57.000 --> 00:21:59.850
of life writer and then
everything else was, was essentially

391
00:22:00.180 --> 00:22:02.520
DAS blog and this idea
that I needed to push

392
00:22:02.550 --> 00:22:07.470
my blog forward. So it
was kind of surprising that

393
00:22:07.470 --> 00:22:09.870
I kind of realized at
one point that, Hey, I'm

394
00:22:09.870 --> 00:22:14.040
actually an open source of
developer and technically a project

395
00:22:14.040 --> 00:22:18.920
manager here and how I
was accepting Paul, Chris. So

396
00:22:18.920 --> 00:22:20.250
I had to learn a
lot of things, right. Cause

397
00:22:20.250 --> 00:22:25.740
I'm, I come from a
subversion lineage and the idea

398
00:22:25.740 --> 00:22:28.830
of get was is kind
of still a it's still

399
00:22:28.830 --> 00:22:31.770
something I'm learning. So yeah,
I had to get up

400
00:22:31.800 --> 00:22:37.590
to speed relatively quickly on
how to manage a project

401
00:22:37.620 --> 00:22:42.390
in public, how to vet
somebody's pull requests and how

402
00:22:42.390 --> 00:22:47.940
to set up issues or
receive issues or validate issues.

403
00:22:48.660 --> 00:22:50.640
So it was, it was,
it's been a very interesting

404
00:22:50.640 --> 00:22:53.220
experience, but the thing that
I did want to make

405
00:22:53.220 --> 00:22:56.400
sure I did from the
beginning was make sure that

406
00:22:56.400 --> 00:22:59.220
I had an environment that
was welcoming to people that

407
00:22:59.220 --> 00:23:01.980
were so I, I immediately
started thinking about low hanging

408
00:23:01.980 --> 00:23:04.980
fruit. And I think actually
that kind of helped with

409
00:23:05.010 --> 00:23:09.210
people coming to the projects
because they saw that I

410
00:23:09.210 --> 00:23:14.190
was happy to set up
relatively small and relatively accessible

411
00:23:15.690 --> 00:23:19.110
tasks. And then I was
willing to help people with

412
00:23:19.110 --> 00:23:24.000
those tasks and see, you
know, set up examples. And

413
00:23:24.000 --> 00:23:27.330
then to the more complicated
stuff where folks were just

414
00:23:27.330 --> 00:23:31.320
generously giving of their time
and their skills and kind

415
00:23:31.320 --> 00:23:33.750
of adding really important parts
that we just got a

416
00:23:33.750 --> 00:23:37.620
pull request the other day
related to security, which, you

417
00:23:37.620 --> 00:23:41.730
know, solve 95% of the
security related questions I had.

418
00:23:41.860 --> 00:23:44.400
I simply didn't know how
to do it. And I

419
00:23:44.400 --> 00:23:46.670
was able to kind just
finish off the, the remaining

420
00:23:46.670 --> 00:23:50.150
5%. So it's been both,
I've been set up, set

421
00:23:50.150 --> 00:23:52.370
it up to make sure
that people can do it

422
00:23:52.370 --> 00:23:55.130
successfully, but then, you know,
people are just been generously

423
00:23:55.130 --> 00:23:58.750
giving their time. How close
is DAS blog core to

424
00:23:58.750 --> 00:24:00.940
being, you know, something you
could switch your blog over

425
00:24:00.940 --> 00:24:03.400
to, or have you already
done that? I haven't done

426
00:24:03.400 --> 00:24:06.340
it yet. I've got a
test that I'm hosting up

427
00:24:06.370 --> 00:24:09.130
on Azure, and that has
been critical to this as

428
00:24:09.130 --> 00:24:11.410
well, but I've got a
version that I'm hosting up

429
00:24:11.410 --> 00:24:13.360
at the zoo right now
that I'm doing some testing

430
00:24:13.360 --> 00:24:17.320
on. I think I kind
of in my project manager

431
00:24:17.320 --> 00:24:20.470
hat, I kind of set
milestones as the kind of

432
00:24:20.470 --> 00:24:24.730
MVP thing. And the last
thing that I really want

433
00:24:24.730 --> 00:24:28.660
to do is comments before
I kind of really unleash

434
00:24:28.660 --> 00:24:32.020
it on my, on my
particular, my actual blog and

435
00:24:32.020 --> 00:24:36.760
replace it. So I've got
several open issues related to

436
00:24:36.760 --> 00:24:39.940
comments that I want to
make sure. And then, you

437
00:24:39.940 --> 00:24:42.040
know, my skill set really
isn't UI, but I've got

438
00:24:42.040 --> 00:24:43.870
to do some, I've got
to make sure that the

439
00:24:43.870 --> 00:24:46.030
UI kind of looks the
way I was hoping it

440
00:24:46.030 --> 00:24:49.030
to look, but I'm, I
may be weeks away from,

441
00:24:49.390 --> 00:24:52.780
from switching over rather than,
and by weeks, I mean

442
00:24:53.530 --> 00:24:56.320
spare time weeks, which is,
you know, several hours and

443
00:24:56.320 --> 00:25:00.550
evening after several hours a
week. So that could be

444
00:25:00.550 --> 00:25:03.070
two or three weeks, but
in fact, you know, 18

445
00:25:03.070 --> 00:25:07.870
hours or something like that,
How many pieces of it

446
00:25:07.930 --> 00:25:13.690
ended up being pure or
quote unquote pure.net core.net standard

447
00:25:13.690 --> 00:25:15.880
and how many are still
being built with the older

448
00:25:16.270 --> 00:25:18.680
ms. Build and kind of
you're using a shim to,

449
00:25:18.680 --> 00:25:21.790
to get what you want.
So right now there is

450
00:25:21.880 --> 00:25:27.490
efficiently, there is a dos
block, there was a NBC

451
00:25:27.490 --> 00:25:34.390
core project. There is a
standard project as well, and

452
00:25:34.990 --> 00:25:39.190
there is a core project
and all the rest are

453
00:25:39.190 --> 00:25:42.850
kind of old. They kind
of point to dot some

454
00:25:42.850 --> 00:25:46.450
kind of version of.net project.
And there may be five

455
00:25:46.450 --> 00:25:49.330
projects that are going to
probably live on and maybe

456
00:25:49.330 --> 00:25:51.220
another three or four that
we can get rid of.

457
00:25:52.120 --> 00:25:54.670
So, so there's still quite
a few projects that are

458
00:25:54.700 --> 00:25:59.110
related to.net, but I think
that's going to kind of

459
00:25:59.140 --> 00:26:02.920
prevent, present a challenge with
building across platform, but certainly

460
00:26:02.920 --> 00:26:06.670
for, for, for deploying to
other platforms, I think we'll

461
00:26:06.670 --> 00:26:08.560
be fine, but that's still
going to be a bit

462
00:26:08.560 --> 00:26:10.780
of a challenge of everything
I see. So you're calling

463
00:26:10.780 --> 00:26:13.330
out the difference between building
on windows and deploying on

464
00:26:13.330 --> 00:26:16.800
Lennox versus building anywhere. Exactly.
Exactly. I'm not sure how

465
00:26:16.800 --> 00:26:19.240
quickness solve that problem to
be honest. So yeah. Yeah.

466
00:26:19.270 --> 00:26:21.460
Well, some of the things
that it depends on are

467
00:26:21.670 --> 00:26:28.120
really, really old. There's a,
there's a pop three male

468
00:26:28.120 --> 00:26:33.250
thing that was written by
Paolo <inaudible> in like 1999

469
00:26:33.250 --> 00:26:36.250
kind of thing. You know,
the question is then we

470
00:26:36.250 --> 00:26:38.140
used to have features in
DAS blog where you could

471
00:26:38.140 --> 00:26:41.440
basically email your blog posts
and then we would use

472
00:26:41.440 --> 00:26:44.610
pop three to retrieve the
blog post and then post

473
00:26:44.610 --> 00:26:49.320
it, which was quite revolutionary
for the time. One solution

474
00:26:49.320 --> 00:26:52.320
might be just to remove
that functionality and then you

475
00:26:52.320 --> 00:26:56.270
toss that entire library, right?
Yeah. Precisely. So yeah, there

476
00:26:56.270 --> 00:26:59.510
are quite a few features
even right now that tie

477
00:26:59.510 --> 00:27:02.630
us either to a project
that we don't necessarily need

478
00:27:02.630 --> 00:27:06.920
anymore or to a technology
that, you know, we don't

479
00:27:06.920 --> 00:27:10.610
have to have entire projects
dedicated or entire series of

480
00:27:10.610 --> 00:27:13.220
classes. That's dedicated to that.
As you mentioned, pop three's

481
00:27:13.220 --> 00:27:15.950
one of those projects that
we should be looking for

482
00:27:15.950 --> 00:27:18.590
a new gift package to
kind of replace, we have

483
00:27:18.590 --> 00:27:21.860
whole projects dedicated to things
like capture. And I think

484
00:27:21.860 --> 00:27:24.560
we can do, we, we,
we, there's better solutions that

485
00:27:24.560 --> 00:27:26.690
are kind of open and
that are probably a better

486
00:27:26.690 --> 00:27:29.390
fit at this point. One
of the big, one of

487
00:27:29.390 --> 00:27:31.640
the big ones that I'm
looking forward to, to fixing

488
00:27:31.640 --> 00:27:35.300
actually is there's a comp
custom implementation of time. How

489
00:27:35.300 --> 00:27:39.860
time is managed and time
zones. It was interesting because

490
00:27:39.860 --> 00:27:43.790
this one ties has itself
has ties to things like

491
00:27:43.910 --> 00:27:49.430
accessing the registry, which obviously
is purely windows thing. It

492
00:27:49.430 --> 00:27:52.730
uses the registry, I think,
to pull out all the

493
00:27:52.730 --> 00:27:56.450
possible variations of time zones
out there, which have no

494
00:27:56.450 --> 00:28:00.320
doubt changed, changed in the
last 18 years or so,

495
00:28:01.460 --> 00:28:04.850
but this is an antiquated
system. There's things like no

496
00:28:04.850 --> 00:28:08.210
other time you could use.
So I'm kind of looking

497
00:28:08.300 --> 00:28:11.660
at how we can take
out portions of the project

498
00:28:11.690 --> 00:28:16.910
and replace them with, with
standards that are obviously available

499
00:28:17.300 --> 00:28:21.470
to every developer. So Yeah,
indeed, if we could remove

500
00:28:21.700 --> 00:28:25.190
change the captcha for modern
techniques, right? Like the capture

501
00:28:25.310 --> 00:28:28.310
generated a capture on the
server side with system dot

502
00:28:28.310 --> 00:28:30.740
drawing and made a, made
a gift and sent it

503
00:28:30.740 --> 00:28:34.190
across the wire, that can
be recapture. Right? We could,

504
00:28:34.310 --> 00:28:38.480
yeah, we could toss pop
three. It's funny. If you

505
00:28:38.480 --> 00:28:41.780
go back and look, it's
almost a, a historical project

506
00:28:41.780 --> 00:28:44.990
thinking about how, how we
used to blog like ping

507
00:28:44.990 --> 00:28:49.220
backs and track backs, they're
probably not needed either. You

508
00:28:49.220 --> 00:28:53.270
could refactor via subtract. Exactly.
Which is again, you know,

509
00:28:53.270 --> 00:28:56.870
a lot of this stuff
you're mentioning here where handlers

510
00:28:57.140 --> 00:29:01.430
HTTP handlers and Haiti's few
modules that existed that were

511
00:29:01.430 --> 00:29:04.310
part of the old system
dot web way of thinking.

512
00:29:04.820 --> 00:29:07.130
And so part of what
I've been trying to do

513
00:29:07.130 --> 00:29:09.980
is con is look at
conversion points. So that's one

514
00:29:09.980 --> 00:29:14.060
right there. So there's a
direct connection between something like

515
00:29:14.660 --> 00:29:18.200
middleware and HTTP handlers and
modules, you can kind of

516
00:29:18.470 --> 00:29:21.350
almost kind of do a
bit of gymnasts it, mental

517
00:29:21.350 --> 00:29:24.650
gymnastics and say, and figure
out how to convert a,

518
00:29:24.920 --> 00:29:28.910
a module into a middleware,
which is much more inline

519
00:29:28.910 --> 00:29:35.450
with.net MVC and core. So
yeah, Since asp.net razor pages,

520
00:29:35.480 --> 00:29:38.900
which is still ultimately MVC
came out, have you thought

521
00:29:38.900 --> 00:29:41.120
about whether you want to
keep this as an MVC,

522
00:29:41.500 --> 00:29:44.830
very kind of model view
controller or more page focused

523
00:29:44.830 --> 00:29:48.370
with a T with a
template potentially being a razor

524
00:29:48.370 --> 00:29:52.410
page. Yeah. I've, I've at
the present. It's very much

525
00:29:52.440 --> 00:29:59.340
the MVC model of it
where you can call bits

526
00:29:59.340 --> 00:30:02.700
of, of, of views and
have them then make up

527
00:30:02.700 --> 00:30:04.530
a bigger view, especially when
it comes to that kind

528
00:30:04.530 --> 00:30:07.920
of homepage view with multiple
blog posts in it. So

529
00:30:07.920 --> 00:30:13.290
we've, we've, I've stayed away
from single pages mostly because

530
00:30:13.380 --> 00:30:15.570
of, you know, I know
NBC a little bit better

531
00:30:15.570 --> 00:30:17.460
and it was a, it
was a better fit to

532
00:30:17.460 --> 00:30:21.390
the pattern of collecting a
series of objects and then

533
00:30:21.390 --> 00:30:24.060
converting them to a series
of views. So presently at

534
00:30:24.060 --> 00:30:27.690
kind of more the MBC
pattern. And did you use

535
00:30:27.690 --> 00:30:30.060
a view locator or how
do you swap out the

536
00:30:30.060 --> 00:30:32.010
entire theme? Cause one of
the things Josh blog did

537
00:30:32.010 --> 00:30:34.680
that was so great was
not just swapping out CSS

538
00:30:34.710 --> 00:30:40.620
themes, but entire physicality, like
the fundamental markup theme. Right?

539
00:30:40.620 --> 00:30:44.670
Exactly. So I CA there's
this interface called I view

540
00:30:44.670 --> 00:30:50.070
location expander, which allows you
to define which location you

541
00:30:50.070 --> 00:30:52.440
want to go to for
your foot for some set

542
00:30:52.440 --> 00:30:55.320
of views. And so I've
kind of used that as

543
00:30:55.320 --> 00:30:57.810
a mechanism to say, well,
I want you to look

544
00:30:57.810 --> 00:31:01.560
in this location based on
this series of settings coming

545
00:31:01.560 --> 00:31:04.560
from this file, from this
XML file or from this

546
00:31:04.560 --> 00:31:07.350
Jason file. I forget which
one it is. But so

547
00:31:07.350 --> 00:31:12.150
that I view location expander
kind of just gets injected

548
00:31:12.150 --> 00:31:16.470
with information from our configuration
file. And then I'm pointing

549
00:31:16.470 --> 00:31:18.570
to another location. I've got
to kind of flesh that

550
00:31:18.570 --> 00:31:20.760
out a little bit more,
but right now it works.

551
00:31:20.820 --> 00:31:23.640
And I do have a
theme folder that this thing,

552
00:31:24.000 --> 00:31:26.670
this whole thing kind of
points to One of the

553
00:31:26.670 --> 00:31:28.440
last things that I wanted
to kind of comment on

554
00:31:28.440 --> 00:31:32.280
and ask you about is
I, I personally recently rewrote

555
00:31:32.280 --> 00:31:35.520
my podcast site that I've
been talking to folks about.

556
00:31:35.880 --> 00:31:38.370
So when, when you go
to hanselminutes.com, it's running down

557
00:31:38.370 --> 00:31:42.120
at core and I've added
testing and unit testing and

558
00:31:42.120 --> 00:31:45.180
integration testing, and I've added
Twitter card support, and I've

559
00:31:45.180 --> 00:31:47.790
done all this different stuff
and ultimately created a bunch

560
00:31:47.790 --> 00:31:51.540
of really great blog posts
because I'm working on something

561
00:31:51.540 --> 00:31:54.210
that I'm excited about, that
I'm passionate about. That affects

562
00:31:54.210 --> 00:31:59.370
me personally. And if folks
go to pop a string.com,

563
00:31:59.880 --> 00:32:02.160
I'm just looking for example,
at your blog post avoiding

564
00:32:02.190 --> 00:32:05.310
threading issues and asp.net core,
right. You've got like 10

565
00:32:05.310 --> 00:32:10.110
or 11, really great, nice
technical solid blog posts. So

566
00:32:10.110 --> 00:32:12.000
you're practicing kind of what
you preach. Like you're not

567
00:32:12.000 --> 00:32:14.250
just learning, but you're, you're
putting what you learned into

568
00:32:14.250 --> 00:32:17.010
blog posts. I'm curious if
working on Dutch blog and

569
00:32:17.010 --> 00:32:19.650
getting involved more on open
source as a, not nine

570
00:32:19.650 --> 00:32:23.030
to five developer has got
the blogging juices going. Yeah,

571
00:32:23.080 --> 00:32:26.430
definitely. It's it was about,
it gave me a lot

572
00:32:26.430 --> 00:32:28.530
of material to think about.
So, so the way I

573
00:32:28.530 --> 00:32:31.320
basically learn is I pick
a topic, I try to

574
00:32:31.320 --> 00:32:36.240
explain it as simply as
I can. I then try

575
00:32:36.240 --> 00:32:37.890
to figure out if I've
made any gaps in that

576
00:32:38.010 --> 00:32:40.940
kind of explanation. And then
I review and I kind

577
00:32:40.940 --> 00:32:43.130
of simplify in that kind
of way of processing it.

578
00:32:43.670 --> 00:32:49.430
And so seeing how asp.net
has gone from its system

579
00:32:49.430 --> 00:32:52.490
web asp.net system web has
gone from where it's at

580
00:32:52.490 --> 00:32:55.880
to where it is today
has kind of presented me

581
00:32:55.880 --> 00:32:58.460
with tons of deltas to
kind of talk about. So

582
00:32:58.670 --> 00:33:01.340
almost all of the blog
posts kind of look back

583
00:33:01.370 --> 00:33:03.620
and then kind of look
at what the direction we're

584
00:33:03.620 --> 00:33:07.230
going, because it feels to
me like core was the

585
00:33:07.800 --> 00:33:10.010
chance we have to, if
we, if we could do

586
00:33:10.010 --> 00:33:11.690
it all again, this is
the way we'd do it.

587
00:33:11.720 --> 00:33:15.590
Right. But then understanding what
it was, kind of presents

588
00:33:15.590 --> 00:33:18.560
you with a really good
arc to kind of discuss

589
00:33:19.580 --> 00:33:21.890
and, and see how it's
improved and then kind of

590
00:33:21.890 --> 00:33:24.170
understand it at a really
deeper level. So that's been

591
00:33:24.170 --> 00:33:26.980
very helpful for me, for
my blogging, just to get

592
00:33:26.990 --> 00:33:31.190
something new. Well, I'm looking
forward to helping you more

593
00:33:31.190 --> 00:33:32.900
on it and working on
it. And hopefully at some

594
00:33:32.900 --> 00:33:36.620
point moving my blog forward,
which is gonna make me

595
00:33:36.620 --> 00:33:38.720
feel still a little bit
like it's legacy, but it's

596
00:33:38.720 --> 00:33:40.670
also a new legacy that
we're building on a new

597
00:33:40.670 --> 00:33:45.080
platform. And I assume that
you noticed something interesting happened

598
00:33:45.080 --> 00:33:47.690
online a couple of weeks
ago, where the folks at

599
00:33:47.720 --> 00:33:52.340
corgi bytes, this is a
company that is dedicated to

600
00:33:52.340 --> 00:33:55.340
dealing with legacy code and
teaching people how to, how

601
00:33:55.340 --> 00:33:58.490
to deal with and move
forward. Legacy code projects picked

602
00:33:58.820 --> 00:34:03.140
DAS blog to do some
mob programming on, they got

603
00:34:03.140 --> 00:34:05.330
like a half dozen people
in the room to brainstorm

604
00:34:05.330 --> 00:34:08.360
about, you know, how to
re factor and make the

605
00:34:08.420 --> 00:34:10.690
code base more modern, which
is pretty exciting. Yeah. That's

606
00:34:10.710 --> 00:34:12.920
very cool. That's a very
good idea to do something

607
00:34:12.920 --> 00:34:15.290
like that. Yeah, it is.
And people can go and

608
00:34:15.290 --> 00:34:18.560
check out my YouTube channel
and you and I spent

609
00:34:18.560 --> 00:34:24.500
two or three, you know,
long, somewhat sloppy hours. Paraprogramming

610
00:34:24.530 --> 00:34:27.290
not, not quite Twitch live
programming. We still, we had

611
00:34:27.290 --> 00:34:30.530
fun hacking on DAS blog.
And I assume you would

612
00:34:30.530 --> 00:34:32.870
still look for volunteers if
people are interested in helping

613
00:34:32.870 --> 00:34:35.330
out. Yeah, absolutely. If people
are interested in helping out,

614
00:34:35.330 --> 00:34:37.760
there are a lot of
issues, various levels, I'm on

615
00:34:37.760 --> 00:34:40.640
Twitter a lot. So if
you get into an issue

616
00:34:40.640 --> 00:34:43.160
and you get stuck or,
you know, you're just looking

617
00:34:43.160 --> 00:34:46.310
to get a couple of
issues that are for beginners.

618
00:34:46.820 --> 00:34:48.950
There are lots out there
and I'm happy to help.

619
00:34:49.820 --> 00:34:52.550
Fantastic. Well, thanks so much
for talking with me today.

620
00:34:52.850 --> 00:34:56.750
Thank you. This has been
another episode of Hansel minutes

621
00:34:56.810 --> 00:35:18.760
and we'll see you again
Next week. <inaudible>.

