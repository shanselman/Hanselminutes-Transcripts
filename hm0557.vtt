WEBVTT FILE

1
00:00:12.720 --> 00:00:18.570
From hanselminutes.com. It's Hansel minutes,
a weekly discussion with web

2
00:00:18.570 --> 00:00:23.820
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:23.820 --> 00:00:29.250
number 557. In this episode,
Scott talks with Yuna Kravitz

4
00:00:29.520 --> 00:00:38.160
about rethinking front end design
and development. Hi, this is

5
00:00:38.160 --> 00:00:40.860
Scott Hanselman. This is another
episode of Hansel minutes. Today.

6
00:00:40.860 --> 00:00:43.770
I'm talking with Yuna Kravitz,
who is a UI engineer

7
00:00:44.070 --> 00:00:46.970
at a digital ocean. How
are you? I'm doing great.

8
00:00:46.970 --> 00:00:49.310
How are you doing Very
happy to have you on

9
00:00:49.310 --> 00:00:52.160
the show? I am constantly
going down your Twitter and

10
00:00:52.160 --> 00:00:54.800
just starring all the cool
stuff that you build. And,

11
00:00:55.400 --> 00:00:58.220
and then also feeling bad
about my own GitHub contributions,

12
00:00:58.220 --> 00:01:01.730
because yours is so green.
Do not feel bad. There's

13
00:01:01.730 --> 00:01:03.860
so many ways to contribute
to the development community. Not

14
00:01:03.860 --> 00:01:06.380
just on GitHub. Yeah. Sorry.
I should not feel bad

15
00:01:06.380 --> 00:01:10.490
about my not so green
get hub. Yes. Never, never

16
00:01:10.490 --> 00:01:13.190
let that make you feel
bad. Those are just some

17
00:01:13.190 --> 00:01:16.550
weird visual ways to kind
of get us into contributing

18
00:01:16.550 --> 00:01:19.040
more. So don't worry about
it. I was thinking I

19
00:01:19.040 --> 00:01:21.320
would just start making like
spell check people's sites and

20
00:01:21.320 --> 00:01:23.570
then just do a pull
request today with like spellcheck

21
00:01:23.570 --> 00:01:25.220
and then maybe it would
look like maybe people would

22
00:01:25.220 --> 00:01:27.560
hire me. Then I think
that you're fine to get

23
00:01:27.560 --> 00:01:31.580
hired. I think I'm okay.
So you, you put out

24
00:01:31.580 --> 00:01:34.790
something really fun a couple
of weeks ago that I

25
00:01:34.790 --> 00:01:36.230
just thought was so great.
I wanted to talk to

26
00:01:36.230 --> 00:01:38.660
you about it and it's
a website that people can

27
00:01:38.660 --> 00:01:43.610
go check out right now.
You might not need js.com.

28
00:01:43.610 --> 00:01:45.800
You might not need JavaScript.
W where did you steal

29
00:01:45.800 --> 00:01:48.860
this from? I stole this
from a website called you

30
00:01:48.860 --> 00:01:53.330
might not need J cray.com,
which is not new at

31
00:01:53.330 --> 00:01:56.810
all. That came out a
couple of years ago. I

32
00:01:56.810 --> 00:01:59.600
don't remember exactly when, but
I remember I was just

33
00:01:59.600 --> 00:02:02.750
learning development when that site
was out. And it was

34
00:02:02.750 --> 00:02:05.360
really a good resource for
me to sort of realize

35
00:02:05.360 --> 00:02:07.430
that J Cray wasn't necessary.
And there were a lot

36
00:02:07.430 --> 00:02:10.670
of ways to do things
in vanilla Java script instead

37
00:02:10.670 --> 00:02:14.330
of turning to a framework
instantly. Yeah, that site is

38
00:02:14.330 --> 00:02:18.170
actually still super interesting. You
might not need jquery.com, but

39
00:02:18.170 --> 00:02:20.600
it has like examples of
here's how to do something

40
00:02:20.600 --> 00:02:24.380
in jQuery and here's <inaudible>
plus, you know, so it

41
00:02:24.380 --> 00:02:26.660
is a little dated, but
it is a really interesting

42
00:02:26.840 --> 00:02:30.260
perspective. I think the idea
there was that jQuery solved

43
00:02:30.260 --> 00:02:34.880
a lot of problems with
browsers, specifically mending the gap

44
00:02:34.880 --> 00:02:39.350
between possibilities and support on
browsers. So that's the big

45
00:02:39.350 --> 00:02:41.420
reason why people use jQuery.
And then if you're going

46
00:02:41.420 --> 00:02:44.690
to replace that with vanilla
JavaScript, they wanted to provide

47
00:02:44.720 --> 00:02:47.270
a way that you can
ensure that the browsers you're

48
00:02:47.270 --> 00:02:51.020
supporting as a company are
available to you. Like the

49
00:02:51.020 --> 00:02:53.000
methods to do that on
the browser that you need

50
00:02:53.000 --> 00:02:56.030
is there. Now I'm sure
that neither of us wants

51
00:02:56.030 --> 00:02:59.830
to eat disrespect or pick
on jQuery at, but it

52
00:02:59.830 --> 00:03:02.560
does kind of feel a
little bit like it made

53
00:03:02.560 --> 00:03:05.230
JavaScript so easy and it
made doing stuff so easy

54
00:03:05.230 --> 00:03:08.700
that people just used it
for literally everything. I think

55
00:03:08.700 --> 00:03:11.370
we're seeing a lot of
that today, and it's not

56
00:03:11.370 --> 00:03:13.050
that there's a problem with
J crew. I think J

57
00:03:13.050 --> 00:03:15.630
crew was a great solution
is a great solution for

58
00:03:15.630 --> 00:03:18.150
a lot of challenges that
we have on the web

59
00:03:18.150 --> 00:03:20.790
today. And that's why it
was created. But I think

60
00:03:20.910 --> 00:03:24.600
the whole idea of using
a framework without thinking much

61
00:03:24.630 --> 00:03:26.940
if you need it or
not. And then the whole

62
00:03:26.940 --> 00:03:29.670
idea of how dependency users
grow and grow from that

63
00:03:29.670 --> 00:03:33.420
individual framework is a problem.
So the whole point of

64
00:03:33.420 --> 00:03:36.180
writing this, you might not
need JS like little parody

65
00:03:36.600 --> 00:03:39.780
was to sort of showcase
CSS and just to make

66
00:03:39.780 --> 00:03:43.200
a commentary that we don't
need to always be turning

67
00:03:43.200 --> 00:03:47.460
immediately to JavaScript solutions for
a lot of web components

68
00:03:47.460 --> 00:03:49.200
that can be native or
can be done with a

69
00:03:49.200 --> 00:03:52.980
mix of HTML and CSS.
You know, one of the

70
00:03:53.500 --> 00:03:55.920
most canonical examples that I
think of as far as

71
00:03:55.920 --> 00:03:59.670
like how JavaScript is, is,
is hurting us all is

72
00:04:00.000 --> 00:04:01.680
let's say, I want to
put together a quick site.

73
00:04:02.130 --> 00:04:04.530
I don't really want to
do all the CSS myself.

74
00:04:04.530 --> 00:04:06.210
So I go to like
theme forest or something and

75
00:04:06.210 --> 00:04:08.070
I find some great theme
and I look at it

76
00:04:08.520 --> 00:04:10.680
and it looks and behaves
the way I want it

77
00:04:10.680 --> 00:04:13.710
visually. It's like awesome. And
I pay for it and

78
00:04:13.710 --> 00:04:15.720
I download it and I
open it up and I

79
00:04:15.720 --> 00:04:19.470
go, Oh no, what have
I done? Because in order

80
00:04:19.470 --> 00:04:22.530
to achieve that gorgeous look
that I wanted, for whatever

81
00:04:22.530 --> 00:04:27.450
reason, they've done 15 different
custom JavaScript things and custom

82
00:04:27.450 --> 00:04:30.240
bootstrap, this and that. And
I did not realize the

83
00:04:30.240 --> 00:04:33.390
weight of what was beneath
it to do something as

84
00:04:33.390 --> 00:04:35.430
simple as a hero image
that goes in, you know,

85
00:04:35.440 --> 00:04:39.000
shows me an image slider.
It's not just cognitive weight

86
00:04:39.000 --> 00:04:42.570
there. It's like physical load
on your user as well.

87
00:04:43.290 --> 00:04:45.780
So yeah, that's a double
edged sword there and it's

88
00:04:45.780 --> 00:04:48.750
harder to sort of style
things if they're styled in

89
00:04:48.750 --> 00:04:51.270
JavaScript and you weren't expecting
that when you originally bought

90
00:04:51.270 --> 00:04:57.180
theme. Yeah. I think JavaScript
because it's so powerful, people

91
00:04:57.180 --> 00:05:00.780
find versatile ways to use
it, which is great. But

92
00:05:01.350 --> 00:05:04.650
over use, I think is
a problem that we're seeing

93
00:05:05.040 --> 00:05:08.760
and it has potential to
just make development more difficult

94
00:05:08.760 --> 00:05:12.480
for more people. Do you
think it's because people think

95
00:05:12.570 --> 00:05:17.160
JavaScript equals interactivity and if
something moved on the page

96
00:05:17.220 --> 00:05:19.170
or if something did something,
when I clicked on it,

97
00:05:19.560 --> 00:05:21.660
it must have been JavaScript.
So then I must use

98
00:05:21.660 --> 00:05:23.850
JavaScript. Yeah. I mean, that's
a good way to put

99
00:05:23.850 --> 00:05:27.480
it. I think that that's
still true in a lot

100
00:05:27.480 --> 00:05:29.910
of ways you can't really
do a toggle with CSS.

101
00:05:29.910 --> 00:05:32.310
I wish there was like
a, a toggle pseudo selector.

102
00:05:32.310 --> 00:05:36.150
That'd be awesome. But you
still do. You probably need

103
00:05:36.150 --> 00:05:39.000
JavaScript like in projects in
total overall, let's just say

104
00:05:39.000 --> 00:05:42.570
that. And also JavaScript allows
for a lot of important

105
00:05:43.380 --> 00:05:47.280
ad-ons to websites like accessibility
is not something that's inherent

106
00:05:47.280 --> 00:05:52.590
in browsers, unfortunately, and you
can make a website and

107
00:05:52.590 --> 00:05:55.140
try to create an experience
as much as you can.

108
00:05:55.140 --> 00:05:59.330
But if you're introducing components
that aren't to the structure

109
00:05:59.330 --> 00:06:01.220
of just like a plain
page, if you have some

110
00:06:01.220 --> 00:06:05.390
interactivity in there, you probably
need to also include accessibility

111
00:06:05.390 --> 00:06:09.020
considerations through JavaScript. So that's
like the biggest place where

112
00:06:09.020 --> 00:06:11.000
something like you might not
need JS sort of falls

113
00:06:11.270 --> 00:06:14.630
because a lot of these
examples while they may be

114
00:06:14.660 --> 00:06:16.400
cool to look at, if
you're trying to make your

115
00:06:16.400 --> 00:06:19.250
site fully accessible for every
user, that includes users who

116
00:06:19.250 --> 00:06:22.430
use screen readers, users who
need the keyboard to navigate,

117
00:06:23.390 --> 00:06:25.250
it's a high possibility that
you're going to need to

118
00:06:25.250 --> 00:06:29.980
use some sort of JavaScript
to support those users. Yes,

119
00:06:29.990 --> 00:06:33.400
we definitely agree that very,
very often, if not always,

120
00:06:33.910 --> 00:06:36.160
you know, JavaScript is going
to be needed, but like,

121
00:06:36.160 --> 00:06:37.900
let's look at that example,
you said like you wished

122
00:06:37.900 --> 00:06:40.450
you could have a toggle
on your site. You might

123
00:06:40.450 --> 00:06:44.110
not need js.com. You've got
a cool modal kind of

124
00:06:44.110 --> 00:06:46.840
dialogue thing, which isn't, there's
not quite a toggle, but

125
00:06:46.840 --> 00:06:49.000
you click on a button
and then it pops up

126
00:06:49.000 --> 00:06:50.770
a modal and then you
have like a little X

127
00:06:50.770 --> 00:06:53.620
and then it closes it.
That's, that's a little bit

128
00:06:53.620 --> 00:06:56.020
of interactivity. That's pretty impressive.
And it's done in like

129
00:06:56.470 --> 00:07:00.070
four lines of CSS. Yeah.
There are a lot of

130
00:07:00.100 --> 00:07:02.860
creative solutions. And I, I
strongly think that the more

131
00:07:02.860 --> 00:07:06.100
people we have thinking about
ways to write interactions without

132
00:07:06.100 --> 00:07:09.700
JavaScript, the more patterns that
we'll have, but right now

133
00:07:09.730 --> 00:07:12.160
people just turn to JavaScript
immediately turn to the patterns

134
00:07:12.160 --> 00:07:14.680
that they know and are
even using patterns that are

135
00:07:14.710 --> 00:07:18.220
included in frameworks to sort
of build things out. So

136
00:07:18.460 --> 00:07:20.050
if I'm building a website
and I want it to

137
00:07:20.050 --> 00:07:24.010
use a JavaScript framework like
reactor, Ember, there's likely already

138
00:07:24.010 --> 00:07:28.060
examples and solutions out there
of patterns like the model

139
00:07:28.330 --> 00:07:32.290
that are very intertwined with
the system they've already integrated.

140
00:07:32.440 --> 00:07:35.320
So that makes sense. But
then if I don't have

141
00:07:35.320 --> 00:07:38.320
that system and I'm using
these as examples, maybe somebody

142
00:07:38.320 --> 00:07:42.310
that's new to this web
world just expects all of

143
00:07:42.310 --> 00:07:46.330
these interactions, every single one
to require JavaScript, which isn't

144
00:07:46.330 --> 00:07:51.760
necessarily true. I think a
good example is forms like

145
00:07:52.240 --> 00:07:57.700
there's a lot within native
HTML form validation and like

146
00:07:57.760 --> 00:08:01.420
uploading color uploading files and
like just picking colors. These

147
00:08:01.420 --> 00:08:03.100
are all things that are
native to browsers and we

148
00:08:03.100 --> 00:08:05.770
don't need additional plugins for
when I first started web

149
00:08:05.770 --> 00:08:09.610
development, that wasn't true. We
needed to include a separate

150
00:08:09.610 --> 00:08:12.700
form validation checker to make
sure that things were working

151
00:08:12.700 --> 00:08:15.700
properly. But as browsers evolve,
these things are all just

152
00:08:15.700 --> 00:08:19.540
becoming more inherent to the
web. So I think that

153
00:08:19.540 --> 00:08:21.790
is really important for people
to realize that there are

154
00:08:21.790 --> 00:08:24.880
solutions that they should look
into before, including other dependency

155
00:08:25.030 --> 00:08:28.810
and adding weight that you're
sending to your users. Ah,

156
00:08:28.840 --> 00:08:30.430
that's a good, that's a
good point. So then if,

157
00:08:30.820 --> 00:08:32.350
if I look at the
site and you call it

158
00:08:32.350 --> 00:08:34.420
a parody, but I think
you should give yourself some

159
00:08:34.420 --> 00:08:37.090
credit for it. It's really
food for thought is the

160
00:08:37.090 --> 00:08:40.390
way I looked at it.
Like you're using form validation,

161
00:08:40.390 --> 00:08:45.160
you know, there's there's resources
like Mozilla's data form validation

162
00:08:45.160 --> 00:08:48.130
page, and there's examples of
how to do like form,

163
00:08:48.220 --> 00:08:50.980
you know, phone number validation
without necessarily including like a

164
00:08:50.980 --> 00:08:55.590
regular expression in your, you
know, in JavaScript somewhere you're,

165
00:08:55.590 --> 00:08:57.870
you're, you're not just reminding
us that CSS can do

166
00:08:57.870 --> 00:09:01.830
stuff, but that there's HTML
five isms that some of

167
00:09:01.830 --> 00:09:05.840
us may have forgotten about
like pattern equals, Right? There's

168
00:09:05.870 --> 00:09:08.120
there are a lot out
there that I think people

169
00:09:08.510 --> 00:09:11.300
forgot about or they didn't
realize existed because they just

170
00:09:11.300 --> 00:09:15.260
turned to JavaScript for the
answer to that. Yeah. That

171
00:09:15.260 --> 00:09:16.670
was kind of a big
part of this. Just kind

172
00:09:16.670 --> 00:09:20.360
of making people think and
rethink if they necessarily need

173
00:09:20.360 --> 00:09:24.470
to turn to an external
plugin immediately As a, as

174
00:09:24.470 --> 00:09:27.890
a person that watches, you
know, designers and engineers like

175
00:09:27.890 --> 00:09:31.640
yourself, seem to just know
this stuff. Intuitively I feel

176
00:09:31.640 --> 00:09:35.420
like it's moving so fast
that I've I've become overwhelmed.

177
00:09:35.450 --> 00:09:38.660
Do you go to websites?
Like, can I use, or

178
00:09:38.660 --> 00:09:41.150
do you just know that
you can use something that

179
00:09:41.150 --> 00:09:43.340
you can't use? Something Definitely.
It turned to can I

180
00:09:43.340 --> 00:09:45.200
use, because I don't, I
don't know what the latest

181
00:09:45.200 --> 00:09:47.990
browser technologies are. Like, I'm
constantly learning. It seems like

182
00:09:47.990 --> 00:09:50.570
you all, do you know
what I mean? It just

183
00:09:50.570 --> 00:09:52.820
seems like you all do.
Like, I feel like we,

184
00:09:52.820 --> 00:09:55.040
you know, UI engineers just
seem to know this stuff.

185
00:09:55.040 --> 00:09:56.510
And as I watch you
all on Twitter, it's just

186
00:09:56.510 --> 00:09:58.160
like, Oh my goodness, I
need to catch up. I

187
00:09:58.160 --> 00:10:00.890
think that we, not all
of us, but people who

188
00:10:00.890 --> 00:10:04.790
keep up on this really
sort of religiously, like what's

189
00:10:04.790 --> 00:10:06.440
new out there. I have,
I have a great curated

190
00:10:06.440 --> 00:10:08.420
Twitter feed, just cause I
follow all these people who

191
00:10:08.420 --> 00:10:12.200
are doing cool things. But
from that, it doesn't mean

192
00:10:12.200 --> 00:10:14.930
that something is supported in
browsers. So that's why you

193
00:10:14.930 --> 00:10:16.400
need to go to, can
I use and see if

194
00:10:16.400 --> 00:10:20.060
it supports the browsers that
your company supports like today

195
00:10:20.240 --> 00:10:23.180
I saw this really, really
cool feature that's coming out,

196
00:10:23.420 --> 00:10:27.380
it's called color fonts. And
it allows for colors like

197
00:10:27.500 --> 00:10:31.250
be Fiji's to become individual
glyphs in icon fonts, which

198
00:10:31.250 --> 00:10:34.550
solves the problem that people
have of not being able

199
00:10:34.550 --> 00:10:36.140
to use icon fonts, because
you only get like a

200
00:10:36.140 --> 00:10:39.590
single color. It solves that
problem. And it also allows

201
00:10:39.590 --> 00:10:43.100
you to create multicolored typography
on your page as a

202
00:10:43.100 --> 00:10:45.620
single glyphs, which is super,
super cool. And I think

203
00:10:45.620 --> 00:10:49.520
the possibilities are great for
this, but it's only supported

204
00:10:49.520 --> 00:10:52.640
in Firefox and edge. So
you kind of have to

205
00:10:52.640 --> 00:10:54.320
weigh those pros and cons
and see what's on the

206
00:10:54.320 --> 00:10:57.440
horizon and also be more
realistic about what you can

207
00:10:57.440 --> 00:11:00.500
use today. Yeah. That's a
tough one. And those are

208
00:11:00.500 --> 00:11:03.470
the kinds of things where
you'll burn an entire, you

209
00:11:03.470 --> 00:11:05.570
know, entire week trying to
figure that out, something simple

210
00:11:05.570 --> 00:11:07.430
like, Oh, look, there's the
feature I need, but it

211
00:11:07.430 --> 00:11:10.820
only works in this browser.
Then you're poking around at,

212
00:11:11.240 --> 00:11:14.720
you know, websites from 2014
that tell you how to

213
00:11:14.720 --> 00:11:17.270
do it in pure CSS
or how to do it

214
00:11:17.270 --> 00:11:19.460
with SVG. And then you're
looking at all the 15

215
00:11:19.460 --> 00:11:22.400
different ways. SVGs don't work
the way you thought. Yeah.

216
00:11:22.400 --> 00:11:25.130
It's like that meme that's
like there are 14 standards.

217
00:11:25.340 --> 00:11:28.550
We'd write a new standard
that consolidates all the 14

218
00:11:28.550 --> 00:11:30.740
standards and just has one.
And then it's like current

219
00:11:30.740 --> 00:11:34.700
status. There are 15 standards.
Yeah, exactly. And even when

220
00:11:34.700 --> 00:11:36.680
there is a standard, like
I think we all love

221
00:11:37.130 --> 00:11:40.970
SVGs. You had a great
blog post earlier this year

222
00:11:40.970 --> 00:11:45.230
about, you know, weird SVG
consistencies. Like you can't just

223
00:11:45.320 --> 00:11:47.480
drop it in like a
PNG and assume it's going

224
00:11:47.480 --> 00:11:50.570
to work. Right. That's another
thing to be aware of.

225
00:11:50.600 --> 00:11:54.130
Even if you do your
browser, can I use checking

226
00:11:54.130 --> 00:11:58.930
beforehand there oftentimes bugs and
certain browsers that you might

227
00:11:58.930 --> 00:12:02.170
find or uncover by accident.
So it's really important to

228
00:12:02.170 --> 00:12:05.860
actually test in multiple browsers
before shipping. And this is

229
00:12:05.860 --> 00:12:07.900
something that I don't think
anyone is like perfect at

230
00:12:07.900 --> 00:12:11.410
doing, but if you create
standards in your company and

231
00:12:11.410 --> 00:12:15.190
create like some sort of
testing suite or continuous integration

232
00:12:15.190 --> 00:12:17.230
system to sort of remind
you to do these things

233
00:12:17.230 --> 00:12:21.160
or enforce them, it really
helps with the consistency. And

234
00:12:21.160 --> 00:12:23.410
I know that I've shipped
things that turn out to

235
00:12:23.410 --> 00:12:28.180
like be broken in Chrome
on windows or something. And,

236
00:12:28.270 --> 00:12:29.920
and that's how you learn,
like all the things that

237
00:12:29.920 --> 00:12:32.110
you mentioned in this blog
post I wrote, it was

238
00:12:32.110 --> 00:12:34.910
like three SVG and consistencies.
Those are all things I

239
00:12:34.910 --> 00:12:37.150
discovered after I was shipping
something. I was like, oops,

240
00:12:38.050 --> 00:12:41.680
let me wind that back
and see why that happened.

241
00:12:42.600 --> 00:12:44.760
Yeah. And one of them,
like you had one that

242
00:12:44.760 --> 00:12:47.190
was the blocky appearance where
an, you know, a, an

243
00:12:47.190 --> 00:12:49.170
SVG looks fine and icon
looks fine. And then it

244
00:12:49.170 --> 00:12:52.020
looks, it breaks an IEP
or breaks in Firefox. And

245
00:12:52.050 --> 00:12:53.970
you spend a lot of
time thinking, you can fix

246
00:12:53.970 --> 00:12:56.490
it with CSS or fix
it with HTML, or maybe

247
00:12:56.490 --> 00:12:58.830
it's a bug. And then
you actually have to go

248
00:12:58.830 --> 00:13:03.600
into the SVG document itself
and like modify the document

249
00:13:03.600 --> 00:13:06.720
that clipping mask or whatever.
Yeah. That's exactly what that

250
00:13:06.720 --> 00:13:09.450
was. I had to open
them all and illustrator individually

251
00:13:09.480 --> 00:13:12.270
because there's no automated tool
to do that and remove

252
00:13:12.270 --> 00:13:15.870
the clipping mask. One of
the great examples that you

253
00:13:15.870 --> 00:13:18.180
did that really blew my
mind on your, you might

254
00:13:18.180 --> 00:13:22.290
not need JS was a
scroll indicator where you have

255
00:13:22.290 --> 00:13:24.870
a viewport with some stuff
in it and you're scrolling

256
00:13:24.900 --> 00:13:27.750
and there's like a progress
bar at the top. And

257
00:13:28.080 --> 00:13:31.500
that was done without JavaScript.
This is a really interesting

258
00:13:31.500 --> 00:13:34.830
one because I think it
shows the power of visual

259
00:13:34.830 --> 00:13:37.980
CSS, but also one that
I wouldn't recommend in production.

260
00:13:38.190 --> 00:13:41.310
There uses notes now underneath
all of these, but Right,

261
00:13:41.310 --> 00:13:44.730
this particular one says there's
no screen readers Or support,

262
00:13:44.730 --> 00:13:49.980
but also mobile does not
find this very fun. What

263
00:13:49.980 --> 00:13:54.480
it's essentially doing is it's
creating a background gradient on

264
00:13:54.480 --> 00:13:58.110
your entire page to create
the scroll bar and then

265
00:13:58.110 --> 00:13:59.970
it's hiding it. So you
only see the fixed area

266
00:13:59.970 --> 00:14:02.610
at the top. And as
you scroll, it shows different

267
00:14:02.610 --> 00:14:04.950
parts of that gradient like
it scrolls up. So it

268
00:14:04.950 --> 00:14:07.140
fills up the whole bar.
So this is really like

269
00:14:07.140 --> 00:14:10.590
an example of creative CSS,
something that is clever and

270
00:14:10.590 --> 00:14:15.300
like a hack, but definitely
not recommended to use in

271
00:14:15.300 --> 00:14:21.780
a production application. And this
one I found from Mike Mueller

272
00:14:21.780 --> 00:14:24.390
and he's on the resources
on the, you may not

273
00:14:24.390 --> 00:14:28.020
need JSP page for the
example. So yeah. Props to

274
00:14:28.020 --> 00:14:29.940
him for that really cool
CSS hack that I do

275
00:14:29.940 --> 00:14:32.970
not recommend you use in
production. Yeah. That one's a

276
00:14:32.970 --> 00:14:36.480
code pen.io and you can
see it's made by Mike.

277
00:14:36.750 --> 00:14:38.670
And he also says, I
wanted to see if I

278
00:14:38.670 --> 00:14:41.910
could do this. You shouldn't,
you know, and it talks

279
00:14:41.910 --> 00:14:43.980
about the consequences of it,
but that's such an interesting

280
00:14:43.980 --> 00:14:46.800
one because you can see
why one browser might not

281
00:14:46.800 --> 00:14:49.590
like that because you just
said, it makes a background

282
00:14:49.770 --> 00:14:53.750
gradient on the entire site.
So somewhere it's calculating this

283
00:14:53.750 --> 00:14:57.610
massive gradient and then hiding
it. Yeah. So it works.

284
00:14:57.640 --> 00:15:00.400
It seems to work fine
on desktop. But again, if

285
00:15:00.400 --> 00:15:02.530
your website is going to
be on the internet, I

286
00:15:02.530 --> 00:15:04.960
don't recommend you just look
at your own system and

287
00:15:04.960 --> 00:15:10.060
say, Oh, it works on
my system. So This episode

288
00:15:10.060 --> 00:15:12.340
of Hansel minutes is brought
to you by brain tree

289
00:15:12.340 --> 00:15:15.730
payments. Why make payment integration
more difficult than it has

290
00:15:15.730 --> 00:15:19.720
to be? Braintree's powerful. Full
stack payment platform allows you

291
00:15:19.720 --> 00:15:22.810
to accept nearly any type
of payment from any device

292
00:15:22.810 --> 00:15:26.650
with one integration it's flexible
to your system's needs and

293
00:15:26.650 --> 00:15:30.070
supports most programming languages. So
whether you're using Java, Ruby,

294
00:15:30.070 --> 00:15:33.100
or Python, you'll always have
a range of service side

295
00:15:33.130 --> 00:15:37.630
and client side SDKs available.
Braintree makes payments and your

296
00:15:37.630 --> 00:15:43.930
job a whole lot easier.
You can learn more@braintreepayments.com slash

297
00:15:44.050 --> 00:15:53.800
Hanselman that's Braintree payments.com/hanselman. So
do you, is the, is

298
00:15:53.800 --> 00:15:57.370
the lesson here for me
to just check, always check.

299
00:15:57.400 --> 00:16:00.640
Do I really need JavaScript?
Like at every decision, do

300
00:16:00.640 --> 00:16:03.640
you do that? How do
you catch yourself from filling

301
00:16:03.640 --> 00:16:06.940
up your pages with just
unnecessary modules? Well, for me,

302
00:16:06.940 --> 00:16:11.650
the golden rule is start
small and then add on.

303
00:16:11.710 --> 00:16:14.950
So if I can build
something without JavaScript, if I

304
00:16:14.950 --> 00:16:17.530
can build it with just
HTML with no CSS, I

305
00:16:17.530 --> 00:16:19.720
will build it with just
HTML. If I need some

306
00:16:19.720 --> 00:16:21.850
kind of styling on that,
then I'll add a style

307
00:16:21.850 --> 00:16:24.490
layer. If I then need
an interaction layer, I'll then

308
00:16:24.490 --> 00:16:28.450
add an interaction layer, but
always start from the basics

309
00:16:28.450 --> 00:16:31.780
and then add on this
is sort of the, the

310
00:16:31.780 --> 00:16:35.050
idea also behind progressive enhancement,
where you start with a

311
00:16:35.050 --> 00:16:38.470
base experience, and then you
progressively enhance your website to

312
00:16:38.470 --> 00:16:43.780
include things that are additional
things that you might need

313
00:16:44.050 --> 00:16:48.040
as you grow this component.
Same thing with a JavaScript

314
00:16:48.070 --> 00:16:51.010
framework. I would not recommend
anyone just dive into using

315
00:16:51.250 --> 00:16:55.030
react. I would say, try
to build it in the

316
00:16:55.030 --> 00:16:57.370
most basic way possible. First,
try to build it as

317
00:16:57.370 --> 00:17:00.010
a static website. If you
need more interaction than that,

318
00:17:00.250 --> 00:17:03.010
then think about interaction then
think about if you need

319
00:17:03.010 --> 00:17:04.660
another layer, if you need
a framework to build it.

320
00:17:04.960 --> 00:17:07.300
But yeah, kind of like
what I was saying earlier

321
00:17:07.300 --> 00:17:09.070
in the podcast, I think
a lot of people just

322
00:17:09.070 --> 00:17:12.010
jump to frameworks because it's
the new hotness and don't

323
00:17:12.010 --> 00:17:17.170
realize that building like a
single page, a blog does

324
00:17:17.170 --> 00:17:19.600
not require a framework behind
it to stand it up.

325
00:17:20.830 --> 00:17:23.800
No, that is a really,
really good point that we

326
00:17:23.800 --> 00:17:28.510
should kind of like double
click on because it frameworks

327
00:17:28.510 --> 00:17:30.850
have made it so easy.
It's so easy to just

328
00:17:30.850 --> 00:17:35.200
go in there, start with
bootstrap. And as a developer

329
00:17:35.230 --> 00:17:38.110
who is not a designer,
I am not a unicorn.

330
00:17:40.090 --> 00:17:43.210
I it's overwhelming to me
now for some reason, in

331
00:17:43.210 --> 00:17:45.970
2016 to go on like
open up, you know, notepad

332
00:17:45.970 --> 00:17:50.070
or VIM and say, all
right, HTML window, black, text,

333
00:17:50.070 --> 00:17:52.950
white background, and build it
like that. But when I

334
00:17:52.950 --> 00:17:57.140
see really good designers, they
do just that. Cause they,

335
00:17:57.140 --> 00:18:00.120
they build it exactly as
you said from nothingness so

336
00:18:00.120 --> 00:18:03.920
that there's no more than
they need. Yeah. It's a,

337
00:18:03.920 --> 00:18:06.770
it's a nice, like, keep
it simple principle. You catch

338
00:18:06.770 --> 00:18:09.230
yourself, like, not following that,
like you say that, but

339
00:18:09.590 --> 00:18:10.970
you know, are you going
to like hang up on

340
00:18:10.970 --> 00:18:13.040
the podcast and then go
and bust out a framework

341
00:18:13.280 --> 00:18:14.660
or is this really the
right way for us to

342
00:18:14.660 --> 00:18:16.790
do it? Well, that's a
good question. I think a

343
00:18:16.790 --> 00:18:21.500
lot of it depends on
what the product is. So

344
00:18:21.530 --> 00:18:24.530
the only time that I've
actually used react has been

345
00:18:25.280 --> 00:18:27.950
when I was like making
a side project just to

346
00:18:27.950 --> 00:18:30.380
learn how to use it.
I've never found myself needing

347
00:18:30.380 --> 00:18:32.930
it for any application that
I've worked on. All of

348
00:18:32.930 --> 00:18:35.150
my personal projects for the
most part can work as

349
00:18:35.150 --> 00:18:38.600
static sites with some JavaScript
that I write, like natively

350
00:18:38.600 --> 00:18:41.600
for it. And then at
work at digital ocean, we

351
00:18:41.600 --> 00:18:46.070
use Ember. So our application
does require some sort of

352
00:18:46.610 --> 00:18:50.180
framework because it's this interactive
application that needs to speak

353
00:18:50.180 --> 00:18:54.200
to like middleware and the
server. And it's a much

354
00:18:54.200 --> 00:18:56.780
larger thing than just a
side project or a blog

355
00:18:56.780 --> 00:18:59.060
website. And there are a
lot of reasons that we're

356
00:18:59.060 --> 00:19:04.760
using a framework in terms
of sort of uniformity among

357
00:19:04.760 --> 00:19:07.040
the team. Those decisions are
already made for us kind

358
00:19:07.040 --> 00:19:13.130
of why we chose Ember
it's that there are these

359
00:19:13.130 --> 00:19:17.270
larger components that require something
that is more, I don't

360
00:19:17.270 --> 00:19:20.600
want to say heavy handed,
but more heavy handed approach

361
00:19:20.600 --> 00:19:24.740
to a production web application.
Then a lot of people

362
00:19:24.740 --> 00:19:29.060
who are just building like
smaller projects. Yeah, definitely. So

363
00:19:29.060 --> 00:19:31.490
if you're building something like
digital ocean, there is a

364
00:19:31.490 --> 00:19:35.390
certain expectation that this be
tight and clean and sharp

365
00:19:35.420 --> 00:19:38.660
and performance. Well, you know,
a one off goofy website

366
00:19:38.660 --> 00:19:41.540
that we might make, or
even my blog is somehow

367
00:19:41.540 --> 00:19:44.060
less, is less important, but
like I'm looking at your,

368
00:19:44.270 --> 00:19:47.750
your source right now for,
for unit dot I am.

369
00:19:48.470 --> 00:19:51.620
And it's really, it's really
kind of classic HTML. It's

370
00:19:51.620 --> 00:19:54.470
very clean. I do have
one question though. You have

371
00:19:54.470 --> 00:19:59.030
a section called critical CSS
where you have inline CSS

372
00:19:59.030 --> 00:20:01.190
and I've not seen that
before. I'm not sure what

373
00:20:01.190 --> 00:20:04.640
does that do? So what
it's doing is it is

374
00:20:04.640 --> 00:20:07.850
downloading the CSS that you
see as you instantly load

375
00:20:07.850 --> 00:20:10.940
the page before it loads
the CSS file. So it

376
00:20:11.000 --> 00:20:13.550
increases performance of the website.
It allows for it to

377
00:20:13.550 --> 00:20:16.250
visually load before the server
has to send a request

378
00:20:16.250 --> 00:20:18.680
to download the CSS file
for the rest of the

379
00:20:18.680 --> 00:20:22.310
styling on the page. Oh,
okay. So it is literally

380
00:20:22.310 --> 00:20:24.260
what it says. It is
the critical CSS and that

381
00:20:24.260 --> 00:20:28.960
avoids that initial splash of
unstylish content. Yeah, exactly. And

382
00:20:28.960 --> 00:20:30.920
I think this is interesting
because when I started web

383
00:20:30.920 --> 00:20:33.560
development, there was like a
big, Oh, don't put style

384
00:20:33.560 --> 00:20:36.680
directly on your page, but
there was a big push

385
00:20:36.680 --> 00:20:40.640
a couple of years ago
in the performance community to

386
00:20:40.640 --> 00:20:43.580
include critical CSS. And there's
a lot of tools that

387
00:20:43.850 --> 00:20:47.890
can help you with this
one is called penthouse. There's

388
00:20:47.890 --> 00:20:50.260
a few bookmarklets that you
can use to determine what

389
00:20:50.260 --> 00:20:54.190
the critical CSS of your
pages. And then you can

390
00:20:54.190 --> 00:20:57.580
include it on your page
to sort of reduce requests

391
00:20:57.580 --> 00:21:01.350
before page load. Yeah, I
think there was an, there

392
00:21:01.350 --> 00:21:03.960
was an article in smashing
magazine about the idea of

393
00:21:03.960 --> 00:21:07.950
critical CSS. That's really smart.
Do you, do you spend

394
00:21:07.950 --> 00:21:10.770
as much time, like I'm
sitting here like doing view

395
00:21:10.770 --> 00:21:12.980
source on all your stuff,
making sure that I understand

396
00:21:12.990 --> 00:21:14.280
it. Do you do the
same when you see cool

397
00:21:14.280 --> 00:21:17.730
things? What I'm trying to
understand? Something I definitely will

398
00:21:17.730 --> 00:21:21.240
view sores. That's absolutely a
way that I, I learned

399
00:21:21.660 --> 00:21:25.530
to code. There was a
website recently at a conference

400
00:21:25.530 --> 00:21:29.670
I spoke at called Mixon
comp and it's beautiful. So

401
00:21:29.820 --> 00:21:32.040
I think that they took
it off now, but there

402
00:21:32.040 --> 00:21:35.820
was an area where they
had these beautiful animated SVGs

403
00:21:35.820 --> 00:21:38.760
that changed color at a
certain point in the page.

404
00:21:39.000 --> 00:21:42.180
I spent probably 30 minutes
just investigating this. How did

405
00:21:42.180 --> 00:21:45.150
they do that? I thought
it was really cool. Cool.

406
00:21:45.360 --> 00:21:47.490
That's cool. And actually at
that cough, that was the

407
00:21:47.490 --> 00:21:51.120
one in, in, in Perth,
Australia, you did a talk

408
00:21:51.120 --> 00:21:55.500
called the joy of optimizing.
What were you optimizing All

409
00:21:55.500 --> 00:21:58.050
about images? So the whole
point of the talk was

410
00:21:58.050 --> 00:22:01.860
modeled after Bob Ross is
the joy of painting and

411
00:22:01.860 --> 00:22:05.370
it was about making happy
little pixels like the littler

412
00:22:05.370 --> 00:22:09.900
the better. So the whole
talk was basically about all

413
00:22:09.900 --> 00:22:14.520
these different techniques for optimizing
assets, like media videos, images

414
00:22:14.760 --> 00:22:19.380
on your sites, how that
is really the biggest bottleneck

415
00:22:19.410 --> 00:22:22.770
in terms of web performance.
And also talked about some

416
00:22:22.770 --> 00:22:25.080
new file formats that for
images that are coming out,

417
00:22:25.080 --> 00:22:29.220
that people should be aware
of. Yeah. You, you talked

418
00:22:29.220 --> 00:22:31.740
about how the average web
page sizes, as much as

419
00:22:31.740 --> 00:22:35.580
like two or three minutes.
Yes. It is huge these

420
00:22:35.580 --> 00:22:40.500
days and of that 64%
is images and that 64%

421
00:22:40.500 --> 00:22:43.080
number has been consistent for
a while. Even as the

422
00:22:43.080 --> 00:22:47.160
average website grows with every
run of the HTTP archive,

423
00:22:47.160 --> 00:22:50.910
which is like a bimonthly
test that is run on

424
00:22:50.910 --> 00:22:54.390
like the average size of
webpages today. So images are

425
00:22:54.390 --> 00:22:57.300
growing just as fast as
the websites. It seems like

426
00:22:57.810 --> 00:23:00.930
there are some amazing, you
know, new media companies and

427
00:23:00.930 --> 00:23:02.940
new websites and new blogs
that come out and I'll

428
00:23:02.940 --> 00:23:04.320
go to them and they're
looking at, they look like

429
00:23:04.320 --> 00:23:06.120
the verge or they're really
pretty or whatever. And then

430
00:23:06.120 --> 00:23:08.580
I'll do a view source
and I'll go, okay, that's

431
00:23:08.580 --> 00:23:10.320
kind of cool. But then
I hit F 12 and

432
00:23:10.320 --> 00:23:12.540
I hit refresh. And then
I do the chart, you

433
00:23:12.540 --> 00:23:14.370
know, the bar chart thing.
And I go, Oh my

434
00:23:14.400 --> 00:23:19.650
gosh, that's a format PNG
of a person like, you

435
00:23:19.650 --> 00:23:23.130
know, Yeah. People don't realize
that they can make huge,

436
00:23:23.160 --> 00:23:26.850
huge impact by just thinking
about reducing image size. Yeah.

437
00:23:27.000 --> 00:23:30.090
Yeah. And they might then
go, Oh, I'll make it

438
00:23:30.090 --> 00:23:33.420
a JPEG. But then it's
like a, to make JPEG

439
00:23:33.450 --> 00:23:37.110
that's 2000 by 2000, but
then they resize it rather

440
00:23:37.110 --> 00:23:40.080
than, you know, tidying it.
How important is that? Having

441
00:23:40.080 --> 00:23:41.910
a, an image be the
size that it shows up

442
00:23:41.910 --> 00:23:45.500
on the page? I think
it's really important. So one

443
00:23:45.500 --> 00:23:48.500
reason that you might see
larger images is because of

444
00:23:48.500 --> 00:23:52.340
the idea of retina screens.
So sometimes people save images

445
00:23:52.340 --> 00:23:54.890
at two times their size
and shrink them down because

446
00:23:54.890 --> 00:23:58.610
retina screens can show more
pixels in a smaller space.

447
00:23:59.090 --> 00:24:01.460
But part of my talk
was sort of denouncing this

448
00:24:02.480 --> 00:24:05.810
cause you really can't tell
that much of a difference

449
00:24:05.810 --> 00:24:09.140
on retina screens. And also
you're sending such a big

450
00:24:09.170 --> 00:24:12.290
file to your users and
you're likely not using something

451
00:24:12.290 --> 00:24:14.420
like the picture element, which
allows you to send multiple

452
00:24:14.420 --> 00:24:18.130
sources to your users when
they're on smaller devices or

453
00:24:18.160 --> 00:24:21.710
mobile devices. So you send
this huge retina image to

454
00:24:22.100 --> 00:24:24.980
a giant monitor, as well
as a small mobile device.

455
00:24:24.980 --> 00:24:27.650
And that's why the web
is so slow to load,

456
00:24:29.000 --> 00:24:31.130
especially when you're just trying
to send content here, your

457
00:24:31.130 --> 00:24:33.530
user, like they want to
read the article, they, they

458
00:24:33.530 --> 00:24:36.050
can download a lower Rez
version of your image and

459
00:24:36.050 --> 00:24:38.480
then scale up from there
or just, you know, send

460
00:24:38.480 --> 00:24:40.340
them the correct image size
in the first place. And

461
00:24:40.340 --> 00:24:43.730
you'll save a lot of
size and memory for user,

462
00:24:45.160 --> 00:24:48.100
All browsers do that. Now,
like for example, I'm looking

463
00:24:48.100 --> 00:24:50.890
at mix in Coffs website
and there's a picture of

464
00:24:50.890 --> 00:24:53.380
you and your talk and
when your talk is, and

465
00:24:53.380 --> 00:24:56.020
it's a, it's a reasonably
sized image. It's maybe 500

466
00:24:56.170 --> 00:24:58.450
wide or something like that.
And then I went and

467
00:24:58.840 --> 00:25:02.920
looked off at it and
it's actually like 2000 wide.

468
00:25:02.920 --> 00:25:05.680
So that would explain the,
what you just said about

469
00:25:05.680 --> 00:25:08.110
retina displays, but the browser
would need to support that.

470
00:25:08.110 --> 00:25:09.940
It would need to know
it's on a retina display

471
00:25:09.970 --> 00:25:12.640
and do that little dance
where it's like, I'll show

472
00:25:12.640 --> 00:25:14.500
it at a hundred percent,
but I know I'm on

473
00:25:14.500 --> 00:25:16.570
a retina, so I'll show
it in super high red.

474
00:25:17.170 --> 00:25:22.240
Right. And honestly, I would
really stress that designers take

475
00:25:22.240 --> 00:25:25.120
a look at the differences
as well, because oftentimes you

476
00:25:25.120 --> 00:25:28.300
will not see a big
change and you can look

477
00:25:28.300 --> 00:25:30.400
at those differences and the
compare them to the file

478
00:25:30.400 --> 00:25:32.500
size say because they were
getting to make the final

479
00:25:32.500 --> 00:25:34.390
decision when you're sending in
your, like your images and

480
00:25:34.390 --> 00:25:37.090
your assets. What do you
think about how medium does

481
00:25:37.090 --> 00:25:39.790
that progressive image loading, where
it's like, Oh, it's blurry.

482
00:25:39.790 --> 00:25:43.180
You know, it's not blurry.
I love that. It's great.

483
00:25:43.270 --> 00:25:45.730
So that was sort of
another example that I gave.

484
00:25:46.060 --> 00:25:48.130
How if I had an
image that I wanted to

485
00:25:48.130 --> 00:25:51.100
send, I could resize that
to being really small, say

486
00:25:52.210 --> 00:25:55.150
from a thousand pixels to
like 30 pixels. And that

487
00:25:55.150 --> 00:25:58.300
image can go from being
like 500 kilobytes to less

488
00:25:58.300 --> 00:26:01.150
than one kilobyte. What you
can then do is stretch

489
00:26:01.150 --> 00:26:03.850
that image to fit the
container and then apply some

490
00:26:03.850 --> 00:26:05.770
kind of blur to it.
So you can do this

491
00:26:05.770 --> 00:26:07.870
with SVG. You can do
this with CSS, you can

492
00:26:07.870 --> 00:26:11.920
do this with canvas and
then have that be the

493
00:26:12.340 --> 00:26:14.890
image that your user sees.
So it loads instantly, and

494
00:26:14.890 --> 00:26:18.160
there's still a color sort
of placement of what the

495
00:26:18.160 --> 00:26:20.860
image make-out will be. And
then the user can start

496
00:26:20.860 --> 00:26:23.230
reading the article while your
image fades in. They're not

497
00:26:23.230 --> 00:26:25.960
waiting for your image to
load. And then it'll like

498
00:26:26.170 --> 00:26:28.900
resize the page. Cause when
that image pops in, sometimes

499
00:26:28.900 --> 00:26:30.580
change the size of the
people aren't cognizant of that.

500
00:26:31.300 --> 00:26:34.120
So I really, really love
that technique and it definitely

501
00:26:34.120 --> 00:26:38.350
saves them perceived performance and
lets the user start to

502
00:26:38.380 --> 00:26:42.670
absorb that content instantly, These,
these, these thumbnails, these JPEG

503
00:26:42.700 --> 00:26:45.690
thumbnails might be very low
quality, like 10 or 20%.

504
00:26:45.810 --> 00:26:47.880
They're like, they're like nothing
and they're like a K

505
00:26:47.880 --> 00:26:51.740
or two, right? They're often
less than a K. It

506
00:26:51.740 --> 00:26:55.820
depends on what like what
size. So like the example

507
00:26:55.820 --> 00:26:57.860
I gave was half of
a kilobyte, it was 30

508
00:26:57.860 --> 00:27:01.070
pixels wide at like 10%
quality and unskilled up. It's

509
00:27:01.070 --> 00:27:04.700
just like a blurry background
and it worked really well.

510
00:27:05.030 --> 00:27:07.490
So I would recommend that
and then lazy load the

511
00:27:07.490 --> 00:27:10.490
images in load them on
top or replace that image.

512
00:27:10.520 --> 00:27:14.090
And you have a much
more efficient approach to displaying

513
00:27:14.120 --> 00:27:16.730
image loading. Right. And then
maybe make sure that those

514
00:27:16.730 --> 00:27:20.870
images are on a different
DNS, like images dot, you

515
00:27:20.870 --> 00:27:23.120
know, dot I am so
that they, you get that

516
00:27:23.120 --> 00:27:28.850
DNS parallelization as well. Yeah.
Interesting. So what you said,

517
00:27:28.850 --> 00:27:33.230
alternate image formats what's coming.
So there are a few

518
00:27:33.620 --> 00:27:35.810
things that you can use
right now, which I think

519
00:27:35.810 --> 00:27:38.330
are really great. There's a
format called the web P

520
00:27:38.690 --> 00:27:45.200
and what P is currently
implanted in Safari and Chrome,

521
00:27:45.290 --> 00:27:48.110
I believe. No, no, no
opera and Chrome, not Firefox

522
00:27:48.110 --> 00:27:51.440
and Safari web piece or
of stems from web M,

523
00:27:51.440 --> 00:27:53.630
which is a movie format.
And it takes sort of

524
00:27:53.630 --> 00:27:57.530
the same idea of encoding
the differences between pixels instead

525
00:27:57.530 --> 00:28:00.740
of rewriting every pixel like
a JPEG does. So it

526
00:28:00.740 --> 00:28:03.020
ends up being smaller. You
get like 10 to 30%

527
00:28:03.020 --> 00:28:06.350
savings for VR, for like
identical size and quality of

528
00:28:06.350 --> 00:28:09.140
a JPEG to a webpage
and also lots of alpha

529
00:28:09.140 --> 00:28:13.460
transparency. So you can replace
PNGs with web P. You

530
00:28:13.460 --> 00:28:15.440
can use this today and
then use something like the

531
00:28:15.440 --> 00:28:18.470
picture element to replace it.
Or you can do service

532
00:28:18.470 --> 00:28:21.770
eye detection of your browser
and then send assets for

533
00:28:21.770 --> 00:28:24.170
your user. So that could
be stopping at what P

534
00:28:24.170 --> 00:28:27.770
for JPEG or PNG like
YouTube uses these. There's a

535
00:28:27.770 --> 00:28:30.080
lot of sites that are
starting to implement web P

536
00:28:30.080 --> 00:28:32.660
because it does save that
like 10 to 30%, which

537
00:28:32.660 --> 00:28:33.770
could be a lot if
you have a lot of

538
00:28:33.770 --> 00:28:36.860
images on your site. So
I definitely say look into

539
00:28:36.860 --> 00:28:40.370
a P there's two other
formats that I think are

540
00:28:40.370 --> 00:28:42.530
pretty cool that are coming
out. There are open source

541
00:28:42.530 --> 00:28:45.860
formats. One's called the BPG
and one's called the F

542
00:28:45.860 --> 00:28:50.210
L I F or the
flip both are smaller than

543
00:28:50.210 --> 00:28:51.740
like Webby or any of
the other formats that are

544
00:28:51.740 --> 00:28:55.430
used today. I think flip
also sounds funny, But it's

545
00:28:55.430 --> 00:28:57.980
cool. It sounds silly, but
like in, on the real,

546
00:28:58.070 --> 00:28:59.940
the you're not going to
be able to come to

547
00:29:00.050 --> 00:29:03.650
replace something like GIF with
something called web P that's

548
00:29:03.650 --> 00:29:05.900
just stupid. But if you
call it flare, like I

549
00:29:05.900 --> 00:29:08.720
could totally see that happening.
Well, fun fact about GIF.

550
00:29:09.140 --> 00:29:11.360
If you're using a gift
and it's not animated, you

551
00:29:11.360 --> 00:29:14.720
should probably be using a
eight bit PNG because the

552
00:29:14.720 --> 00:29:17.840
compression on the PNG is,
is better. So with a

553
00:29:17.840 --> 00:29:20.580
similar quality item, you're probably
gonna have a smaller size.

554
00:29:21.480 --> 00:29:24.230
Interesting. That's a good reminder.
And then for, for old

555
00:29:24.230 --> 00:29:25.970
school, people who are thinking
about, well, I just use

556
00:29:26.470 --> 00:29:28.970
the IMG tag. Could you
expand a little bit more

557
00:29:28.970 --> 00:29:31.370
on the picture and why,
what is the relationship between

558
00:29:31.370 --> 00:29:35.570
the picture element and an
IMG? Yeah. So the picture

559
00:29:35.570 --> 00:29:39.830
element allows for somebody to
send multiple sources similar to

560
00:29:39.830 --> 00:29:42.070
the video element, which allows
a user to send multiple

561
00:29:42.070 --> 00:29:48.610
sources. The browser support is
pretty widely supported. See, this

562
00:29:48.610 --> 00:29:50.350
is another example, like I'm
not, I don't know, off

563
00:29:50.350 --> 00:29:51.600
the top of my head,
what the support is. So

564
00:29:51.600 --> 00:29:54.850
I had to look it
up, but you can send

565
00:29:54.880 --> 00:29:58.630
different source sets based on
the screen size that your

566
00:29:58.630 --> 00:30:02.350
user might be accessing. And
then you send an image

567
00:30:02.350 --> 00:30:04.390
as sort of your last
input so that if the

568
00:30:04.390 --> 00:30:06.670
browser does not support the
picture element, they could still

569
00:30:06.670 --> 00:30:10.350
get the image fall back.
Ah, okay. So this is

570
00:30:10.350 --> 00:30:13.710
part of that, that classic
C as the classic HTML

571
00:30:13.710 --> 00:30:15.780
trick, where if I don't
know what the element is,

572
00:30:15.780 --> 00:30:19.740
I'll just ignore it. Yes.
And with picture, you can,

573
00:30:19.890 --> 00:30:22.560
you can either query size
and you can also send

574
00:30:22.560 --> 00:30:24.930
multiple sources. So you can
send like a web P

575
00:30:25.620 --> 00:30:27.660
before like a PNG and
it will load the web

576
00:30:27.660 --> 00:30:30.930
P if and only if
the browser supports it. Okay.

577
00:30:30.930 --> 00:30:33.510
So I say picture, I
have my alternate sources. I

578
00:30:33.510 --> 00:30:35.160
have my web P I
have my image. And then

579
00:30:35.160 --> 00:30:37.920
if I don't understand any
of those only image will

580
00:30:37.920 --> 00:30:41.130
be seen in the rest
is just ignored. Yep. So

581
00:30:41.130 --> 00:30:44.040
then these are, these are
techniques and formats that have

582
00:30:44.040 --> 00:30:46.200
been around for awhile. How
long do we have to

583
00:30:46.200 --> 00:30:48.810
wait years? Two years, three
years? Or are you saying

584
00:30:48.810 --> 00:30:50.970
that we could be doing
this? Absolutely. Right now we

585
00:30:50.970 --> 00:30:52.890
don't have to wait because
of these texts Not have

586
00:30:52.890 --> 00:30:56.760
to wait for picture element
because I'm looking at this

587
00:30:56.760 --> 00:31:02.580
part right now, it's supported
in edge Firefox Chrome opera

588
00:31:03.720 --> 00:31:07.980
and not supported in E
or the current version of

589
00:31:07.980 --> 00:31:09.930
Safari, but it's supposed to
be supported in the next

590
00:31:09.930 --> 00:31:13.050
version of Safari. So that
means that you could still

591
00:31:13.050 --> 00:31:16.050
use it and then send
that fall back image with

592
00:31:16.050 --> 00:31:18.210
it As far as kind
of the new IAE anyway.

593
00:31:19.980 --> 00:31:22.470
Well, I guess they're in
the same boat here. They

594
00:31:22.470 --> 00:31:26.180
really are, so, okay, cool.
So people can go to,

595
00:31:26.180 --> 00:31:28.980
to Yuna dot. I am
that's U N a dot

596
00:31:29.010 --> 00:31:32.460
I M. And you've got
your, your, some videos, some

597
00:31:32.460 --> 00:31:34.800
links to where you speak,
what do you have coming

598
00:31:34.800 --> 00:31:36.660
up? Are you, are you
done for the year? At

599
00:31:36.660 --> 00:31:39.510
this point? I am proud
to say that I am

600
00:31:39.510 --> 00:31:44.010
not speaking at a conference
until March. Hi 17. Yay.

601
00:31:44.130 --> 00:31:47.250
Wow. That's really cool. Congratulations.
I should do this. It's

602
00:31:47.250 --> 00:31:49.680
overwhelming. Cause you really do
have to spend time building

603
00:31:49.680 --> 00:31:51.960
stuff and not just talking
about stuff. Yeah. And I've

604
00:31:51.960 --> 00:31:54.510
got a serve big project
coming down the pipeline, but

605
00:31:54.510 --> 00:31:58.320
I'm excited to take some
time to settle down and

606
00:31:58.320 --> 00:32:02.940
work on. I'm also moving
cities next week. So that's,

607
00:32:02.970 --> 00:32:09.060
that's a big change. Yeah.
Life stuff. Very cool. Congratulations.

608
00:32:09.060 --> 00:32:12.480
Life stuff matters. Well, thanks
so much for chatting with

609
00:32:12.480 --> 00:32:14.760
us today. You so much
for having me, this is

610
00:32:14.820 --> 00:32:18.960
definitely a pleasure. This has
been another episode of Hanselminutes

611
00:32:18.990 --> 00:32:20.550
and we'll see you again
next week.

