WEBVTT FILE

1
00:00:12.060 --> 00:00:17.430
From hanselminutes.com. It's Hansel minutes.
Our weekly discussion with web

2
00:00:17.430 --> 00:00:22.020
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.020 --> 00:00:29.460
number three 64. Recorded live
Thursday, March 21st, 2013. Support for Hanselman

4
00:00:29.460 --> 00:00:32.550
it's as provided by Tellerik
offering the best in developer

5
00:00:32.550 --> 00:00:41.370
tools and support online@tlerikdotcomandbyfranklins.net makers
of gesture pack a powerful

6
00:00:41.370 --> 00:00:44.940
gesture, recording and recognition system
for Microsoft connect for windows

7
00:00:44.940 --> 00:00:52.290
developers details@gesturepak.com. In this episode,
Scott talks with Jared Parsons

8
00:00:52.560 --> 00:00:58.250
about <inaudible>. Hi, this is
Scott Hanselman. This is another

9
00:00:58.250 --> 00:01:00.920
episode of Hansel minutes. I'm
on the phone here. I've

10
00:01:00.920 --> 00:01:04.850
got Jared Parsons. How are
you doing great. You are

11
00:01:04.850 --> 00:01:09.590
the creator of <inaudible>. Is
that right? That's right. So

12
00:01:09.590 --> 00:01:12.500
this is a tool that
plugs into visual studio that

13
00:01:12.920 --> 00:01:15.890
tries to make it like
them, or brings them to

14
00:01:15.890 --> 00:01:18.470
visual studio. What is, what
is the goal here? The

15
00:01:18.470 --> 00:01:21.860
goal is to it's exactly
that it's to bring the,

16
00:01:22.500 --> 00:01:25.640
the VIM key experience and
them key buying experience into

17
00:01:25.640 --> 00:01:29.390
visual studio and to make
people who are comfortable with

18
00:01:29.390 --> 00:01:31.550
them. Who've been using them
their whole lives and switching

19
00:01:31.550 --> 00:01:34.400
to visual studio to make
it a better editor for

20
00:01:34.400 --> 00:01:39.440
them. Okay. Now this, this,
this interview should be part

21
00:01:39.530 --> 00:01:42.410
like, convince me why I
should convert to your religion

22
00:01:43.610 --> 00:01:46.580
part. How could you make
visual? Do some visual studio

23
00:01:46.580 --> 00:01:49.730
do something that is show
against its very nature. Okay.

24
00:01:50.160 --> 00:01:53.210
I think those two topics
should be really interesting. So

25
00:01:53.240 --> 00:01:58.880
first like JK, what is
the whole cursor thing? It's

26
00:01:58.970 --> 00:02:02.000
H J K L so
right where your right hand

27
00:02:02.000 --> 00:02:05.450
sits on the keyboard. You
have the core motion sensors.

28
00:02:05.450 --> 00:02:09.110
You have H M J
and K, you got your

29
00:02:09.110 --> 00:02:10.700
up and down and H
now you got your left

30
00:02:10.700 --> 00:02:14.690
and right. So the idea
of them is keep your

31
00:02:14.690 --> 00:02:17.660
hands on the keyboard and
you don't have to be

32
00:02:17.660 --> 00:02:20.180
constantly switching to the mouse.
Your, your editor is right

33
00:02:20.180 --> 00:02:23.450
there. It's all in your
hands. And it's really powerful

34
00:02:23.570 --> 00:02:26.930
and really fast, but don't
use switch modes. I understand

35
00:02:26.930 --> 00:02:29.150
in VIM there's insert mode
and overtype mode is that

36
00:02:29.150 --> 00:02:32.240
right? Or insert mode in
command mode then has a

37
00:02:32.240 --> 00:02:36.620
lot of modes. And when
you start developing them, you

38
00:02:36.620 --> 00:02:41.390
find out about all of
them. Typically though, people use

39
00:02:41.390 --> 00:02:44.900
about three modes. The most
common mode is command a

40
00:02:44.930 --> 00:02:47.840
command or normal mode where
that's, where you have the

41
00:02:47.840 --> 00:02:52.250
HTA K L. So it's,
you have very built in

42
00:02:52.250 --> 00:02:54.890
like movement keys, edit keys.
It's really easy to delete

43
00:02:54.890 --> 00:02:59.120
lines, swap lines, copy things
out, move things around paste,

44
00:02:59.260 --> 00:03:03.310
search and through the file
for various text formats, various

45
00:03:03.310 --> 00:03:08.350
texts items. And then you
have insert mode. Insert mode

46
00:03:08.350 --> 00:03:11.200
is what most people think
of an editor you type,

47
00:03:11.680 --> 00:03:14.530
and it puts in text
for you in certain mode

48
00:03:14.530 --> 00:03:18.970
in them is pretty straightforward.
There's not, there's a lot

49
00:03:18.970 --> 00:03:21.490
of kind of esoteric features
around it, but most people

50
00:03:21.490 --> 00:03:25.000
use insert mode for just
inserting text. And then the

51
00:03:25.180 --> 00:03:28.660
third more popular mode is
visual mode. And visual is

52
00:03:28.660 --> 00:03:31.510
when you start selecting text
in the editor. And so

53
00:03:31.510 --> 00:03:34.720
it's very similar to normal
mode in that you have,

54
00:03:34.750 --> 00:03:36.880
it's more of a command
structure where you're moving the

55
00:03:36.880 --> 00:03:40.090
mouse around and you're yanking
texts and deleting texts, but

56
00:03:40.420 --> 00:03:43.990
it's based off of the
selection more than just, what

57
00:03:43.990 --> 00:03:46.030
if you said delete line,
or it will delete the

58
00:03:46.030 --> 00:03:48.450
selection instead of deleting the
line. And how do I

59
00:03:48.450 --> 00:03:51.780
switch between the modes? Oh,
there's lots of different ways.

60
00:03:52.380 --> 00:03:54.390
Escape is escape. One of
the ways or that like

61
00:03:55.070 --> 00:03:58.920
that, the least popular way
to switch modes. Escape is

62
00:03:59.220 --> 00:04:01.770
getting out of insert mode
is where your most commonly

63
00:04:01.770 --> 00:04:05.490
used escape. You can also
use control close bracket to

64
00:04:05.490 --> 00:04:08.700
get out of escape visual
mode. Earlier. I said, there

65
00:04:08.700 --> 00:04:11.580
was lots of modes. There's
actually three different visual modes.

66
00:04:13.230 --> 00:04:15.240
And really if you get
down to it, they're more

67
00:04:15.240 --> 00:04:18.840
like there's a couple more,
but there's kind of three

68
00:04:18.840 --> 00:04:24.330
types of visual modes, line,
character, and block. So line

69
00:04:24.330 --> 00:04:26.760
mode is when all of
your selections are line based.

70
00:04:26.790 --> 00:04:29.040
So getting to that as
control V I mean, sorry,

71
00:04:29.040 --> 00:04:32.130
shift to the uppercase V
and what that does is

72
00:04:32.130 --> 00:04:35.610
all, it'll do a line
based selection. So it'll select

73
00:04:35.610 --> 00:04:37.440
the current line. And as
you start moving the cursor

74
00:04:37.440 --> 00:04:41.070
around, it'll select the entire
line for, from this where

75
00:04:41.070 --> 00:04:44.000
your cursor started to where
your cursor is now. And

76
00:04:44.000 --> 00:04:46.920
so that's really good if
you're doing, if you've been

77
00:04:46.920 --> 00:04:48.890
coding for 10 minutes, you
realize it's crap. You just

78
00:04:48.900 --> 00:04:52.560
wanna select it all and
delete it. Character mode is

79
00:04:52.560 --> 00:04:55.650
more of what you're familiar
with a mouse selection. It'll

80
00:04:55.650 --> 00:04:57.990
select just a continuous stream
of text and you can

81
00:04:57.990 --> 00:05:02.190
operate on that forwards or
backwards. And block mode is

82
00:05:02.190 --> 00:05:05.850
something I think visual studio
started adding again in 2010,

83
00:05:06.300 --> 00:05:09.930
where you can actually select
columns of text, right? You

84
00:05:09.930 --> 00:05:12.120
can select columns of text
delete, and then you can

85
00:05:12.120 --> 00:05:15.270
even insert on those columns
of text. And when you're

86
00:05:15.270 --> 00:05:17.130
done, one of the most
common things is if you

87
00:05:17.130 --> 00:05:19.260
want to add like a
case or something to select

88
00:05:19.260 --> 00:05:22.560
a column of text, you'll
go to insert mode type

89
00:05:22.560 --> 00:05:24.180
case. And then when you
jump out of him, sir,

90
00:05:24.180 --> 00:05:28.260
mode, it'll actually replicate whatever
edit operations you've done through

91
00:05:28.260 --> 00:05:31.320
every column that you previously
had selected. And do you

92
00:05:31.320 --> 00:05:33.270
have to hold these messages
In your head, right? There's

93
00:05:33.270 --> 00:05:36.480
no like icon that tells
you this is there. The

94
00:05:36.480 --> 00:05:38.910
bottom of the screen and
the status bar will tell

95
00:05:38.910 --> 00:05:41.430
you what mode you're currently
in. And it'll actually, if

96
00:05:41.430 --> 00:05:42.960
you really look at it,
when you do things, like

97
00:05:42.960 --> 00:05:45.030
if you go from block
mode to insert mode, it'll

98
00:05:45.030 --> 00:05:47.250
actually show you all of
the kind of sub modes

99
00:05:47.250 --> 00:05:49.290
that it has in there.
But generally they're down at

100
00:05:49.290 --> 00:05:52.980
the bottom of the screen.
Okay. And do these, does

101
00:05:52.980 --> 00:05:55.350
this really make you faster?
Like, you know, I'm always

102
00:05:55.350 --> 00:05:58.310
arguing with Phil hack about
Devorah cause he switched it

103
00:05:58.310 --> 00:06:00.920
to Varek, but he continues
to type on a keyboard

104
00:06:00.920 --> 00:06:03.440
that's Cordy. So, you know,
he always jokes that like

105
00:06:03.470 --> 00:06:06.830
<inaudible> is a security mechanism.
Right. And you just make

106
00:06:06.830 --> 00:06:08.690
it so no one can
ever use your computer because

107
00:06:08.690 --> 00:06:11.480
you're in <inaudible> mode. But
you know, I don't see

108
00:06:11.480 --> 00:06:15.560
the dramatic improvement in typing
speed. It just seems to

109
00:06:15.560 --> 00:06:18.500
dig it. And I understand
that VIM people like swear

110
00:06:18.500 --> 00:06:23.540
by this is way more
productive, but is it, or

111
00:06:23.540 --> 00:06:26.250
is it just a preference?
The kind of grid to

112
00:06:26.250 --> 00:06:28.090
fill in some ways, because
I actually used the VAR

113
00:06:28.100 --> 00:06:32.010
act too. Okay. What's wrong
with it? Well, I used

114
00:06:32.010 --> 00:06:34.420
it Oreck and I've never
remapped my keyboard. So my

115
00:06:34.420 --> 00:06:37.150
them bindings, I'm sure people
are hearing me struggle to

116
00:06:37.150 --> 00:06:39.190
think of what keys depressed
and it's because I have,

117
00:06:39.250 --> 00:06:40.570
I can't even look at
my keyboard and tell you

118
00:06:40.570 --> 00:06:43.900
what keeps the muscle memory.
Yeah. It's really muscle memory.

119
00:06:44.830 --> 00:06:49.510
So why is them, so
then why has been better

120
00:06:49.510 --> 00:06:52.330
at, I think it mainly
comes down to the fact

121
00:06:52.330 --> 00:06:56.590
like for me, it's what
you can do. And just

122
00:06:56.590 --> 00:06:59.650
a few keystrokes, like, especially
it's an editor, it has

123
00:06:59.650 --> 00:07:03.670
leads commands, but they're really
geared towards coding. But for

124
00:07:03.670 --> 00:07:06.850
instance, like the percent key
will jump between braces. So

125
00:07:06.850 --> 00:07:08.230
if you're in the middle
of something, you want to

126
00:07:08.230 --> 00:07:10.630
grab a block and switch
it around. It's a real

127
00:07:10.630 --> 00:07:14.950
quick key combination. It's a
delete percent search. The next

128
00:07:14.950 --> 00:07:18.970
one paste done. Well, they
can VSU would say control

129
00:07:19.480 --> 00:07:22.600
a left brace or right
brace. Right. That's how you

130
00:07:22.600 --> 00:07:27.610
switch between braces, right? But
you would have to Initialize

131
00:07:27.610 --> 00:07:29.230
the selection from your key.
You'd have to start a

132
00:07:29.230 --> 00:07:32.080
selection somehow from your keyboard.
Then use the jump brace,

133
00:07:32.080 --> 00:07:36.070
command, hope your language service
didn't, de-select it. Then cut

134
00:07:36.070 --> 00:07:39.940
it. Then reach over to
your arrow keys or a

135
00:07:39.940 --> 00:07:43.210
page up and down, jump
up or use control left

136
00:07:43.210 --> 00:07:46.960
to implement fine. Then you
have to enter in your

137
00:07:46.960 --> 00:07:51.670
constantly the act of kind
of cutting and pasting and

138
00:07:52.060 --> 00:07:55.240
visual studio and searching between
texts. There's a lot of

139
00:07:55.240 --> 00:07:57.520
different things that do it,
and it's not on your

140
00:07:57.520 --> 00:08:00.370
keyboard. Some of it involves
the mouse. If you've worked

141
00:08:00.370 --> 00:08:02.110
in visual studio long enough,
like me, you know what

142
00:08:02.110 --> 00:08:05.950
the key code combinations are,
but they often involve different

143
00:08:05.950 --> 00:08:09.310
windows. And the focus jumps
between the two are not

144
00:08:09.850 --> 00:08:14.560
always crisp. And with them,
it's all designed to, it's

145
00:08:14.560 --> 00:08:17.560
basically designed without a mouse.
So it's all right there.

146
00:08:17.560 --> 00:08:22.690
The searching, the pasting, having
multiple gunk registers. So the

147
00:08:22.690 --> 00:08:25.870
visual studio, when you cut
and paste, you have one

148
00:08:25.870 --> 00:08:29.770
clipboard that you're pasting to
and cutting to in VIM

149
00:08:29.770 --> 00:08:33.880
though, you have roughly 26
places that you can go.

150
00:08:34.810 --> 00:08:37.690
Hmm. I was on the
phone last night with a

151
00:08:37.690 --> 00:08:41.110
friend who's working on a
productivity tool and they wanted

152
00:08:41.110 --> 00:08:44.830
to watch me work. And
I had outlook and Gmail

153
00:08:44.830 --> 00:08:48.250
and Trello open. And when
I was running around in

154
00:08:48.280 --> 00:08:51.700
Gmail, I mentioned to my
friend who also used Gmail

155
00:08:51.760 --> 00:08:55.030
that there's these hotkeys and
how like fundamental hotkeys are

156
00:08:55.230 --> 00:08:59.520
web websites now. And then
I showed him like, you

157
00:08:59.520 --> 00:09:04.050
know, GI go to inbox,
which seems totally intuitive. And

158
00:09:04.080 --> 00:09:06.600
J K, which happens to
be like the standard for

159
00:09:06.600 --> 00:09:09.630
going up and down on
the web now and went

160
00:09:09.630 --> 00:09:13.590
through kind of a standard
inbox, zero operation, and cleared

161
00:09:13.590 --> 00:09:17.040
my inbox in Gmail and
realized that even though there's

162
00:09:17.040 --> 00:09:19.800
a mate, there's like 40,
50 keystrokes that you could

163
00:09:19.800 --> 00:09:22.740
learn key bindings in, in
Gmail. I think I used

164
00:09:22.740 --> 00:09:26.010
seven. And then I realized
that that's like the limit

165
00:09:26.010 --> 00:09:28.800
of my ability. That's all
I can remember. You know

166
00:09:28.800 --> 00:09:30.090
what I mean? But those
are the ones that I

167
00:09:30.090 --> 00:09:33.030
use. So when I hear
about them, I'm like, Oh

168
00:09:33.030 --> 00:09:36.960
man, you know, control K
control Q hit, left shift,

169
00:09:37.140 --> 00:09:40.110
you know, understand on your
foot. It's it seems impossible.

170
00:09:40.860 --> 00:09:42.960
I only have enough room
to hold five or six,

171
00:09:42.990 --> 00:09:46.860
maybe seven key things to
remember. Am I not smart

172
00:09:46.860 --> 00:09:51.140
enough to do him? Absolutely
not. I'm absolutely not smart

173
00:09:51.140 --> 00:09:53.660
enough. I'm glad that you
finally Not, not smart. And

174
00:09:53.660 --> 00:09:58.940
you're definitely, so them, the
thing, the set of commands

175
00:09:58.940 --> 00:10:01.850
you can do in VIM
is daunting. If you, it

176
00:10:01.850 --> 00:10:07.100
has an extensive help documentation
system and it is baffling

177
00:10:07.100 --> 00:10:09.110
sometimes when people are like,
how close are you to

178
00:10:09.110 --> 00:10:11.780
doing all of them? And
I'm like, no, where close,

179
00:10:11.780 --> 00:10:15.050
like it's this is, bafflingly
like complex in places. But

180
00:10:15.560 --> 00:10:18.770
most people really settled down
with just a few core

181
00:10:18.770 --> 00:10:21.770
commands. I mean, my, I
can probably list my most

182
00:10:21.770 --> 00:10:27.860
common commands or delete yank
search and insert. And those

183
00:10:27.860 --> 00:10:31.610
are an jump word. Those
are kind of like five

184
00:10:31.610 --> 00:10:34.220
or six core commands that
I use daily all the

185
00:10:34.220 --> 00:10:38.300
time. And, but like you
said, and that makes, I

186
00:10:38.300 --> 00:10:40.610
think that makes me a
much more productive programmer because

187
00:10:40.610 --> 00:10:43.490
when you really get down
to it, it's navigating your

188
00:10:43.490 --> 00:10:46.370
code, insert in your code
and effectively moving things around.

189
00:10:48.020 --> 00:10:50.210
Definitely, definitely VIM needs. I'm
sure there's something out there

190
00:10:50.210 --> 00:10:51.590
that does this. But like
if ever there was a

191
00:10:51.590 --> 00:10:55.010
thing that needed like achievements
where you could like build

192
00:10:55.010 --> 00:10:57.650
your gamer score based entirely
on using him. That was

193
00:10:57.650 --> 00:11:00.140
like, I know there's some
games like learn them by

194
00:11:00.140 --> 00:11:03.830
playing multiplayer, dungeon games and
stuff like that. But yeah,

195
00:11:04.190 --> 00:11:06.140
I would need, I would
need to be encouraged to

196
00:11:06.140 --> 00:11:10.190
learn more than five or
six, I think. Yeah. Well,

197
00:11:10.280 --> 00:11:12.020
it's one of those things.
When you start using it,

198
00:11:12.020 --> 00:11:14.210
you get comfortable with just
a few commands and most

199
00:11:14.210 --> 00:11:16.460
of the VIM tutorials out
there, if you search for

200
00:11:16.460 --> 00:11:19.250
them tutorial, there are plenty
out there and they will

201
00:11:19.250 --> 00:11:21.890
just introduce you to the
core commands and that's enough

202
00:11:21.890 --> 00:11:24.860
to make you productive. And
it's when you start talking

203
00:11:24.860 --> 00:11:26.360
to other people and they're
like, Oh, you didn't know

204
00:11:26.360 --> 00:11:29.450
that you could do this
to make that command easier.

205
00:11:29.540 --> 00:11:32.900
And that's kind of where
people start to grow. But

206
00:11:32.900 --> 00:11:34.790
I still, when I talk
to most people, most people

207
00:11:34.790 --> 00:11:37.280
really kind of are hardcore
down into a small number

208
00:11:37.280 --> 00:11:40.790
of commands. I actually used
to think I was more

209
00:11:40.790 --> 00:11:44.600
of a, when I started
writing visit them. VSM a

210
00:11:44.600 --> 00:11:47.060
long time ago. I I'd
kind of pegged myself as

211
00:11:47.060 --> 00:11:50.750
a moderate them user. And
then people started filing bug

212
00:11:50.750 --> 00:11:54.610
reports and I quickly realized
this like, wow, I'm gonna

213
00:11:54.610 --> 00:11:56.950
have to knock myself down.
A few notches spoke. Reports

214
00:11:56.950 --> 00:11:59.820
are like, like, This is
not the way it's supposed

215
00:11:59.820 --> 00:12:02.820
to behave because it behaves
this way. Yes. I mean,

216
00:12:03.270 --> 00:12:06.630
you get them as such,
like I said, it's a

217
00:12:06.630 --> 00:12:09.240
very focused edit, and people
get so ingrained into muscle

218
00:12:09.240 --> 00:12:11.640
memory. I mean, I get
bugs where it's like, I

219
00:12:11.640 --> 00:12:14.790
inserted this, I deleted a
word hit undo. And the

220
00:12:14.790 --> 00:12:17.940
cursor was one place to
the left of where Shouldn't

221
00:12:17.940 --> 00:12:19.620
you just like give up
at that point, wouldn't you

222
00:12:19.620 --> 00:12:20.820
just like, there's no way
you're gonna be able to

223
00:12:20.820 --> 00:12:22.440
fix that. Right. Because you'd
fix it and it would

224
00:12:22.440 --> 00:12:25.860
break something else That's no,
no, no. Now I have

225
00:12:25.860 --> 00:12:28.470
to have it right now.
I'm like, if it's not

226
00:12:28.470 --> 00:12:32.070
right, like people won't use
it. Like people, them having

227
00:12:32.070 --> 00:12:34.350
cursor position is something that
it's really easy to get

228
00:12:34.350 --> 00:12:38.520
wrong. And especially with undos
and redos, but it's, it's

229
00:12:38.520 --> 00:12:41.190
fundamental to how people code
them because they're so used

230
00:12:41.190 --> 00:12:43.110
to knowing, like when I
yanked this, the crucial jump

231
00:12:43.110 --> 00:12:44.970
here, then I can hit
paste. It'll put it before

232
00:12:44.970 --> 00:12:47.850
the curse or after the
cursor. It's very fundamental. Yeah.

233
00:12:48.030 --> 00:12:50.640
I see. I somehow I
imagine that as being like,

234
00:12:50.880 --> 00:12:52.860
if you were trying to
write a Mario brothers clone

235
00:12:53.370 --> 00:12:55.530
and it didn't behave, like
the way we all remember

236
00:12:55.530 --> 00:12:57.420
the Mario brothers to work,
you like jumped onto the

237
00:12:57.900 --> 00:12:59.910
internet. Then I landed, I
didn't land. Right. And I

238
00:12:59.910 --> 00:13:02.190
couldn't do my combo. It's
like, Oh man. Right. It's

239
00:13:02.190 --> 00:13:05.910
all about combos. Isn't fam
isn't it. Exactly. And macro

240
00:13:05.910 --> 00:13:08.100
recording, especially. So one of
the other things, one of

241
00:13:08.100 --> 00:13:11.250
the most powerful things of
them is macro recording. You

242
00:13:11.250 --> 00:13:14.670
can actually, by pressing QR,
you can use one of

243
00:13:14.670 --> 00:13:18.180
the anchor registers that I
talked about to a record

244
00:13:18.390 --> 00:13:21.240
and edit session. And so
if you're doing this repetitive,

245
00:13:21.240 --> 00:13:23.730
that it, like you need
to edit text file and

246
00:13:23.730 --> 00:13:26.430
you want to delete the
first word and pay something

247
00:13:26.430 --> 00:13:29.970
else in. You can record
yourself doing it once and

248
00:13:29.970 --> 00:13:32.100
then replay it against all
of the different lines in

249
00:13:32.100 --> 00:13:36.330
the file or a subset
of the lines. And with

250
00:13:36.330 --> 00:13:41.070
macro recording, cursor position is
extremely important because it's, depending

251
00:13:41.070 --> 00:13:43.770
upon every single time you
execute this command, the cursor

252
00:13:43.770 --> 00:13:46.260
will go to the exact
position necessary for the next

253
00:13:46.260 --> 00:13:49.200
command to complete success. Did
Mac macro recording still in

254
00:13:49.200 --> 00:13:51.240
visual studio 2012? Or is
that one of the controversial

255
00:13:51.240 --> 00:13:53.520
things that got pulled? That
is one of the controversial

256
00:13:53.520 --> 00:13:58.380
things that got pulled It's
just scandalous. Yep. It was,

257
00:13:58.560 --> 00:14:00.510
it was a hard cut.
I remember when they told

258
00:14:00.510 --> 00:14:01.800
me they were going to,
when I was, I was

259
00:14:01.800 --> 00:14:03.690
actually working on one of
the teams and I said

260
00:14:03.690 --> 00:14:04.980
they were going to do
it. And I was very

261
00:14:04.980 --> 00:14:06.510
shocked that they thought they
could do it and that

262
00:14:06.510 --> 00:14:09.270
they pulled it off. But
it did impact a lot

263
00:14:09.270 --> 00:14:13.260
of people. Yeah, yeah, yeah.
It was quite a burden

264
00:14:13.410 --> 00:14:16.140
in terms of maintenance. Cause
it was visual basic for

265
00:14:16.140 --> 00:14:21.120
applications behind it. Presumably. Yes.
Well it was, it was

266
00:14:21.120 --> 00:14:22.830
a lot of things and
it was a bit of

267
00:14:22.830 --> 00:14:25.350
the VB code base, a
bit of VBA and a

268
00:14:25.350 --> 00:14:28.740
bit of always one release
behind. And so it was

269
00:14:28.830 --> 00:14:31.680
a significant maintenance burden for
the team. And so it

270
00:14:31.680 --> 00:14:38.130
was a hard cut, but
they had some justification. So

271
00:14:38.130 --> 00:14:41.460
if I, and no offense
to anyone who has a

272
00:14:41.460 --> 00:14:44.460
particular religion, but if I
convert to your religion, Jared,

273
00:14:45.090 --> 00:14:47.460
okay. You know, is it
going to be welcoming to

274
00:14:47.460 --> 00:14:49.320
me? Or am I just
going to have people who've

275
00:14:49.320 --> 00:14:52.610
like read farther into the,
of him that are going

276
00:14:52.610 --> 00:14:55.610
to like look down on
me. As I struggle to

277
00:14:55.670 --> 00:15:00.010
learn this new incantation, I
find that the VIM community

278
00:15:00.010 --> 00:15:03.190
is actually really open because
everyone wants to tell you

279
00:15:03.190 --> 00:15:05.650
about their piece of black
magic that makes their life

280
00:15:05.680 --> 00:15:09.040
better. And so it's not,
you're doing it wrong or

281
00:15:09.040 --> 00:15:11.290
whatever. They're like, no, have
you heard about this cool

282
00:15:11.290 --> 00:15:14.440
thing? Like every time I
like talk to like a

283
00:15:14.440 --> 00:15:16.870
person about them and when
I seen them in the

284
00:15:16.870 --> 00:15:19.860
real world, it's never like,
Oh, you did this batter.

285
00:15:19.910 --> 00:15:21.730
This is a terrible, I
do things they're always like,

286
00:15:21.730 --> 00:15:24.850
did you know, you can
do this. It's I find

287
00:15:24.850 --> 00:15:28.270
it to be a very
positive community. Somewhat went up.

288
00:15:28.270 --> 00:15:31.330
Most men ship sometimes. But
overall it's just a bunch

289
00:15:31.330 --> 00:15:34.000
of people saying, Oh man,
there's this, you can really

290
00:15:34.000 --> 00:15:37.210
like make that faster by
doing this motion instead of

291
00:15:37.210 --> 00:15:39.850
that motion. It's, it's a,
I don't know. I find

292
00:15:39.850 --> 00:15:42.100
it to be a very
fun community. Oh, ultimately I

293
00:15:42.100 --> 00:15:45.850
think that's exemplary of a
community that's, that's healthy and,

294
00:15:45.850 --> 00:15:49.450
and fun. I mean, I
always, I always use religion

295
00:15:49.510 --> 00:15:51.670
as the, as the metaphor
for these kinds of things.

296
00:15:51.670 --> 00:15:55.090
Because from my perspective, religion
is something that you're really

297
00:15:55.090 --> 00:15:58.150
excited about. And if someone
has a thing, whether their

298
00:15:58.150 --> 00:16:02.110
religion is ReSharper or whether
it's an actual religion, they're

299
00:16:02.110 --> 00:16:03.640
always going to be like,
have you heard the news?

300
00:16:03.910 --> 00:16:05.350
Have you heard the news?
You know? And then they'll

301
00:16:05.350 --> 00:16:07.480
tell you all about their
thing. And that's kind of

302
00:16:07.960 --> 00:16:10.150
what I do is when
I find something I'm totally

303
00:16:10.150 --> 00:16:13.570
jazzed about. I want everyone
to know. So presumably the

304
00:16:13.570 --> 00:16:15.670
same as is true with,
with VIM people who just

305
00:16:15.670 --> 00:16:17.890
want the world to see
the light and that light

306
00:16:17.890 --> 00:16:21.970
is him. Exactly visual studio
though. Unfortunately creates a bit

307
00:16:21.970 --> 00:16:25.210
of a paradox because it
introduces polytheism because you have

308
00:16:25.210 --> 00:16:28.300
people who both love them
and research sharper, and they

309
00:16:28.300 --> 00:16:30.850
want the two religions to
be compatible with each other.

310
00:16:31.090 --> 00:16:33.160
So let's talk about it.
Let's talk about addons and

311
00:16:33.160 --> 00:16:35.860
then we'll talk about ReSharper.
So you have an add

312
00:16:35.860 --> 00:16:39.250
in that runs in any
version of visual studio that's

313
00:16:39.250 --> 00:16:44.530
not expressed, right? Correct. Anything,
2010 and later. Okay. 2010

314
00:16:44.530 --> 00:16:46.930
and 2012. And it's the
same ad in, or it's

315
00:16:46.930 --> 00:16:50.200
compiled differently for the two
It's the same Adam it's

316
00:16:50.200 --> 00:16:52.360
compiled once. And it runs
in all of the versions

317
00:16:52.360 --> 00:16:55.540
of visual studio and it
even runs in a visual

318
00:16:55.540 --> 00:16:58.060
studio, has what they call
the isolated shell. And some

319
00:16:58.060 --> 00:17:01.630
people productize the isolated shell.
Like for instance, Atmel studio

320
00:17:01.630 --> 00:17:07.810
is a visual studio, shell
implementation, which is for embedded

321
00:17:07.810 --> 00:17:10.810
device development. And it runs
in there as well. And

322
00:17:10.810 --> 00:17:12.340
this is something you just
do on the side. This

323
00:17:12.340 --> 00:17:14.710
is not like a business.
Yup. Now it's just something

324
00:17:14.710 --> 00:17:16.750
I do in my spare
time. And how long have

325
00:17:16.750 --> 00:17:23.370
you doing this? Oh, Ever,
probably since 2000 and 2000.

326
00:17:23.870 --> 00:17:25.450
And is this open source?
If you get hit by

327
00:17:25.450 --> 00:17:28.990
a bus, what happens? It's
completely open source. It's a,

328
00:17:28.990 --> 00:17:30.640
it took a lot, it
took a bit of doing,

329
00:17:30.640 --> 00:17:33.910
but it's open source. I
have a good set of

330
00:17:33.910 --> 00:17:37.450
community contribute contributions to the
project. So it's all under

331
00:17:37.450 --> 00:17:40.120
a patchy too. And what,
what took, what took time?

332
00:17:40.120 --> 00:17:41.470
Like why does it matter?
Is it because it's a

333
00:17:41.470 --> 00:17:44.830
moonlighting thing? Yeah. So when
I, when I started this

334
00:17:44.830 --> 00:17:48.100
in 2009, I've actually released
a couple of things and

335
00:17:48.670 --> 00:17:51.810
an open source at Microsoft
and it's gotten progressively better,

336
00:17:51.930 --> 00:17:54.660
but I've usually at the
time been kind of pushing

337
00:17:54.870 --> 00:17:58.080
what was established at the
time. The first thing I

338
00:17:58.080 --> 00:18:01.500
released was like key invoke,
interrupt, assistant, and back in

339
00:18:01.500 --> 00:18:06.060
like 2006 or seven. And
that was kind of a

340
00:18:06.060 --> 00:18:08.760
crushing thing. It was, it
took about six months and

341
00:18:08.760 --> 00:18:10.530
of me like working and
working work. And eventually I

342
00:18:10.530 --> 00:18:12.330
gave up and thought I
would never get it released.

343
00:18:12.330 --> 00:18:15.720
And then the CLR team
had an interest in shipping

344
00:18:15.720 --> 00:18:17.160
it. And one of their
PM's did a lot of

345
00:18:17.160 --> 00:18:20.220
work for me. Got it
released. And then a few

346
00:18:20.220 --> 00:18:23.400
years later, when I started
to work on the SFM,

347
00:18:24.630 --> 00:18:26.490
one of the big motivations
at a time, the SM

348
00:18:26.490 --> 00:18:28.410
actually kind of started out
as a toy. It was

349
00:18:28.410 --> 00:18:31.440
just, we were working on
a visual studio, 2010. They

350
00:18:31.440 --> 00:18:34.800
had a brand new editor.
That's the WPF editor and

351
00:18:34.800 --> 00:18:36.900
VM clones that I've been
using the past and work

352
00:18:36.900 --> 00:18:39.900
anymore because our shims weren't
working and it was in

353
00:18:39.900 --> 00:18:42.120
the nibble of development. So
no one had access to

354
00:18:42.120 --> 00:18:44.130
the bits, but us and
I was just kind of

355
00:18:44.130 --> 00:18:45.930
bored one night and was
like, yeah, I want at

356
00:18:45.930 --> 00:18:48.390
least my little three commands
back that I like. And

357
00:18:49.050 --> 00:18:53.010
I wrote it and then
it kind of taught, like

358
00:18:53.010 --> 00:18:54.480
I wrote it and then
I showed it to a

359
00:18:54.480 --> 00:18:56.250
few people and people took
it from me and started

360
00:18:56.250 --> 00:18:58.200
using it. So then I
had to support it. And

361
00:18:59.790 --> 00:19:02.940
at that time, people actually
started pushing me to release

362
00:19:02.940 --> 00:19:06.180
VSM for more, for the
fact that it was good

363
00:19:06.180 --> 00:19:09.060
samples for people who wanted
to write visual studio, editor

364
00:19:09.060 --> 00:19:12.890
extends. Wasn't it also an
exercise for what, what is

365
00:19:12.890 --> 00:19:15.320
literally possible in the editor?
Because one of the things

366
00:19:15.320 --> 00:19:17.750
that I think is interesting
about it, whenever I hear

367
00:19:17.750 --> 00:19:20.300
about stuff like code rush,
or we sharper or via

368
00:19:20.300 --> 00:19:24.650
spam, I'm thinking to myself
here is a complete re-imagining

369
00:19:24.650 --> 00:19:27.140
about how this is supposed
to behave. And I always

370
00:19:27.140 --> 00:19:30.500
presume that at some point
you're going to hit a

371
00:19:30.500 --> 00:19:34.730
limitation of what's possible. And
then you'll literally just, Nope,

372
00:19:34.760 --> 00:19:38.150
we got to stop now.
Sorry, can't catch that keystroke.

373
00:19:38.360 --> 00:19:40.910
Or can't, you know, it
really wants to behavior and

374
00:19:40.910 --> 00:19:42.980
I really want that one
and never the Twain shall

375
00:19:42.980 --> 00:19:46.850
meet it's over, you know,
good times are over. It

376
00:19:46.850 --> 00:19:49.100
is, but I'm just not
very good at admitting defeat.

377
00:19:50.120 --> 00:19:53.810
Especially one thing you mentioned
there, keystrokes that is the

378
00:19:53.810 --> 00:19:56.990
ultimate challenge. Raymond shin wrote
a blog post called like

379
00:19:56.990 --> 00:19:59.660
shoots and ladders where I'm
trying to get the keystroke

380
00:19:59.660 --> 00:20:01.250
that you're trying to get
someone to do this. And

381
00:20:01.250 --> 00:20:02.750
then you're going to build
a wall and I'm gonna

382
00:20:02.750 --> 00:20:05.390
build the ladder taller than
you keystrokes and visual studio

383
00:20:05.390 --> 00:20:08.480
is the ultimate games of
walls and ladders. Like everyone

384
00:20:08.480 --> 00:20:12.230
is fighting for the keystrokes.
And I have, I know

385
00:20:12.380 --> 00:20:16.790
vis the SM tries to
catch keystrokes, at least I

386
00:20:16.790 --> 00:20:20.300
think 12 or 13 different
ways Really just to make

387
00:20:20.300 --> 00:20:23.630
sure you don't miss them
all. Yes. And their visual

388
00:20:23.630 --> 00:20:26.990
studio has a mechanism for
handing keystrokes and then a

389
00:20:27.020 --> 00:20:33.500
book of exceptions. And it
was, and it's very challenging

390
00:20:33.500 --> 00:20:36.560
to find them all. And
I constantly email the guys

391
00:20:36.560 --> 00:20:37.820
in charge of it and
show them the new tricks.

392
00:20:38.210 --> 00:20:40.250
But I thought that the
new editor was supposed to

393
00:20:40.250 --> 00:20:42.080
be pretty straight forward. You
have like, you know, key

394
00:20:42.080 --> 00:20:44.420
down and that's it. What,
what, what, where, who else

395
00:20:44.420 --> 00:20:48.640
could be stealing keystrokes from
you? So the New editor

396
00:20:48.640 --> 00:20:50.950
itself, so visual studio has
a very, the new editor

397
00:20:50.950 --> 00:20:52.900
is very well factored. So
you just have the WPF

398
00:20:52.900 --> 00:20:56.290
editor and the WPF editor
itself is very beautiful. I

399
00:20:56.330 --> 00:20:58.600
love it. And I actually
have, the estimate is actually

400
00:20:58.600 --> 00:21:01.900
factored into, I talked to
the editor and another part,

401
00:21:01.900 --> 00:21:06.160
which talks to visual studio
on top of it. But

402
00:21:06.160 --> 00:21:10.390
visual studio is a 20
year old product. At least

403
00:21:10.390 --> 00:21:13.390
then you have people who
are still overriding pre-process message.

404
00:21:13.420 --> 00:21:16.150
You have people who are
hooking windows messages, who are

405
00:21:16.150 --> 00:21:24.120
people, various feature opponent features.
Yes. Are these features in

406
00:21:24.120 --> 00:21:26.280
visual studio? Like you might
say, Oh, the server Explorer

407
00:21:26.310 --> 00:21:28.020
really wants that message and
they're cheating in the way

408
00:21:28.020 --> 00:21:29.880
they ask for it or
whatever. I'm just making something

409
00:21:29.880 --> 00:21:31.650
up. But you know what
I'm saying? Yeah. A good

410
00:21:31.650 --> 00:21:34.410
example is the debugger. If
you're debugging and 64 bit

411
00:21:34.410 --> 00:21:38.370
mode, visual studio, doesn't support,
edit and continue in 64

412
00:21:38.370 --> 00:21:41.880
bit mode. And there's one
part of that bugger that

413
00:21:41.880 --> 00:21:45.210
actually will override pre-pro I,
I can't remember. I believe

414
00:21:45.210 --> 00:21:48.510
it's pre-process message. And what
they do is when they

415
00:21:48.510 --> 00:21:51.390
override it, they are trying,
if they see a keystroke

416
00:21:51.390 --> 00:21:53.850
come while you're debugging and
in 64 bit mode, they

417
00:21:53.850 --> 00:21:56.670
pop up a message box
that says, can't edit the

418
00:21:56.670 --> 00:21:58.970
buffer, but I'm not trying
to edit the buffer because

419
00:21:58.970 --> 00:22:01.620
you're just trying to make
room to move around. And

420
00:22:02.160 --> 00:22:05.160
I actually, that's a, that's
a good one. I have

421
00:22:05.160 --> 00:22:06.840
the minute dirty secret. I
had to use reflection to

422
00:22:06.840 --> 00:22:09.510
beat that one. Oh, I
think, I think most people

423
00:22:09.510 --> 00:22:11.460
who are listening have to
use reflection every day. So

424
00:22:11.460 --> 00:22:13.320
I would not feel bad
about the one time you

425
00:22:13.320 --> 00:22:18.390
had to use reflection. And
so I, but yeah, and

426
00:22:18.390 --> 00:22:21.210
that one I had to
like dig in there, find

427
00:22:21.210 --> 00:22:23.220
that component and figure out
when it would run and,

428
00:22:23.220 --> 00:22:25.710
and certain my trick into
it to get it, to

429
00:22:25.710 --> 00:22:27.960
let me have the keystroke
in that particular case, How

430
00:22:27.960 --> 00:22:30.240
often is visual studio trying
to put the cursor somewhere

431
00:22:30.240 --> 00:22:31.620
and then you're trying to
move it. And then you

432
00:22:31.620 --> 00:22:33.540
get flickering where it's like,
no, I really want it

433
00:22:33.540 --> 00:22:35.400
over here. And then you
slam the cursor back to

434
00:22:35.400 --> 00:22:37.050
where you want it to
be like, are you keeping

435
00:22:37.050 --> 00:22:40.170
a whole parallel universe of
your own theoretical text editor?

436
00:22:40.770 --> 00:22:42.840
And then you're trying to
make visual studio reflect what

437
00:22:42.840 --> 00:22:45.330
you believe reality is, or
do you let visual studio

438
00:22:45.330 --> 00:22:49.800
holds? I led visual studio
hold in terms of editor,

439
00:22:49.800 --> 00:22:51.960
state, like where's the cursor,
what is the selection? I

440
00:22:51.960 --> 00:22:55.170
let visual studio hold all
of that. And it's really

441
00:22:55.170 --> 00:22:58.020
critical that I do that
because one of the things

442
00:22:58.020 --> 00:23:00.600
I wanted to do with
Fiesta and was, I wanted

443
00:23:00.600 --> 00:23:03.750
to, I want people who
are comfortable with them to

444
00:23:03.870 --> 00:23:06.840
be comfortable with the SFM,
but I also want visual

445
00:23:06.840 --> 00:23:09.510
studio to be awesome. Like
I want to tell a

446
00:23:09.510 --> 00:23:12.780
sense if people have smart
tips and things like that,

447
00:23:13.170 --> 00:23:15.240
I want the cursor position
and selection to be correct.

448
00:23:15.240 --> 00:23:18.210
So all of these things
continue to pop up. I

449
00:23:18.210 --> 00:23:21.270
don't, if I start holding
like a side state from

450
00:23:21.270 --> 00:23:23.400
the editor then, and don't
give the editor to the

451
00:23:23.400 --> 00:23:27.120
true state, then those features
stop. Right? So the more

452
00:23:27.120 --> 00:23:29.100
you've tried to fool a
visual studio, the more you're

453
00:23:29.100 --> 00:23:30.990
going to basically turn off
the features that are useful

454
00:23:30.990 --> 00:23:33.840
about it. Exactly. Can you
still get IntelliSense and things

455
00:23:33.840 --> 00:23:35.700
like that and what mode
in VSPN would I get

456
00:23:35.700 --> 00:23:40.680
things in tech intelligence And
it's so IntelliSense works exactly.

457
00:23:40.680 --> 00:23:43.110
Like if you're just using
visual studio, when you're an

458
00:23:43.110 --> 00:23:45.920
insert mode and you're typing
code IntelliSense will pop up

459
00:23:45.950 --> 00:23:50.420
exactly as if the SFM
was not installed and there

460
00:23:50.420 --> 00:23:52.370
have been, and it does
actually create a bit of

461
00:23:52.370 --> 00:23:58.730
a conflict because there, how,
how I should interpret keystrokes

462
00:23:58.730 --> 00:24:03.560
when IntelliSense is up and
them actually has this thing

463
00:24:03.560 --> 00:24:06.290
called Omni completion, which is
very similar to IntelliSense, but

464
00:24:06.290 --> 00:24:09.290
they have a different name
for it. And I have

465
00:24:09.290 --> 00:24:13.980
tended to their experiences. I
don't feel as good as

466
00:24:13.980 --> 00:24:16.900
officials. Well, I mean, tell
us since is different from

467
00:24:16.930 --> 00:24:20.620
do your best to auto-complete
anything that looks familiar Exactly.

468
00:24:20.920 --> 00:24:24.010
And what I've done in
some cases I've broken from

469
00:24:24.010 --> 00:24:27.160
standard behavior in terms of
how keystrokes work when IntelliSense

470
00:24:27.160 --> 00:24:31.000
is up. Because I, the
majority feedback I've gotten is

471
00:24:31.000 --> 00:24:33.340
led Intel since when and
tell, since it's the coolest

472
00:24:33.340 --> 00:24:35.710
thing about visual studio, make
it as good as possible

473
00:24:35.710 --> 00:24:37.750
and natural. Yeah. That's an
interesting one. I had a

474
00:24:37.750 --> 00:24:39.520
lot, I've had a lot
of interesting conversations with people

475
00:24:39.520 --> 00:24:42.670
because for example, I use
sublime text as one of

476
00:24:42.670 --> 00:24:46.240
my text editor replacements. Basically
I have three editors, visual

477
00:24:46.240 --> 00:24:48.610
studio notepad too, because if
you always use it for

478
00:24:48.610 --> 00:24:52.120
years and now more recently
supplying texts and sublime text

479
00:24:52.120 --> 00:24:55.030
has an IntelliSense like behavior.
That is basically like you

480
00:24:55.030 --> 00:24:57.910
said, Omni completion, which is
the, if I've seen a

481
00:24:57.910 --> 00:25:01.300
token I've seen anywhere ever
before, try to try to

482
00:25:01.300 --> 00:25:05.260
auto complete that, which is
not intelligence, it's dumb sense,

483
00:25:05.590 --> 00:25:09.250
but it's right. Often enough
that it feels like magic.

484
00:25:10.240 --> 00:25:14.140
Exactly. And the VIM actually
has a mode exactly like

485
00:25:14.140 --> 00:25:15.790
that, where you can hit
control in and get it

486
00:25:15.790 --> 00:25:18.760
to show you, for instance,
like basically look at the

487
00:25:18.760 --> 00:25:20.890
word to the left and
find all of the words

488
00:25:20.890 --> 00:25:23.530
in the open doc set
of open documents, which are

489
00:25:23.860 --> 00:25:25.750
a super set of that
words and display them to

490
00:25:25.750 --> 00:25:29.260
tell us, right. And I
have actually implemented that. And

491
00:25:29.260 --> 00:25:31.240
if you want to do
control in, it'll pop it

492
00:25:31.240 --> 00:25:33.910
up and insert mode. But
in general, though, people want

493
00:25:34.330 --> 00:25:36.730
to see like visual studio
and tell with sentence. And

494
00:25:36.730 --> 00:25:38.800
so that's what we give
them. No, I thought when

495
00:25:38.800 --> 00:25:43.030
I hit escape and go
like con colon, w Q

496
00:25:43.240 --> 00:25:47.500
bang, I'm into like a
little command line that exists.

497
00:25:48.160 --> 00:25:51.070
Yes. That is the other,
probably the most popular mode

498
00:25:51.070 --> 00:25:53.740
outside of visual normal and
insert it's command. Like some

499
00:25:53.740 --> 00:25:55.690
people call that command mode.
Some people call it command

500
00:25:55.690 --> 00:25:58.570
line editing mode, but that
certainly exists. And where is

501
00:25:58.570 --> 00:26:00.610
that? Do you make your
own little buffer and hover

502
00:26:00.610 --> 00:26:03.520
over the command line? Or
where does that go? So

503
00:26:03.520 --> 00:26:05.830
that goes in, I've implemented
as kind of a margin.

504
00:26:05.830 --> 00:26:07.540
So like if you have
the break point margin, which

505
00:26:07.540 --> 00:26:08.680
is just kind of on
the left side of your

506
00:26:08.680 --> 00:26:11.650
screen and the scroll, the
command line margins just on

507
00:26:11.650 --> 00:26:13.810
the bottom of your screen.
And so that's where, when

508
00:26:13.810 --> 00:26:17.260
you're using the estimate, it'll
still it'll replicate in many

509
00:26:17.260 --> 00:26:20.830
ways, the status bar of
like GM or something, it'll

510
00:26:20.830 --> 00:26:22.570
show you what mode you're
currently in. And when you

511
00:26:22.570 --> 00:26:25.330
hit colon, it basically pops
up an editor box right

512
00:26:25.330 --> 00:26:27.220
there so that you can
type in the command line

513
00:26:27.220 --> 00:26:31.330
mode and run them. Okay.
So that, that is a,

514
00:26:31.500 --> 00:26:34.390
you call it a margin
indicating that a margin is

515
00:26:34.390 --> 00:26:37.000
a, is an actual thing
that visual studio knows about.

516
00:26:37.210 --> 00:26:39.040
And you're using that feature
as it is. You just

517
00:26:39.040 --> 00:26:41.740
happened to be doing one
that's bottom line rather than

518
00:26:41.740 --> 00:26:45.030
left aligned. Exactly. That's cool.
Is that owner draw or

519
00:26:45.030 --> 00:26:46.740
they have the idea that
you could have text in

520
00:26:46.740 --> 00:26:50.780
a margin. They basically allow
you, they just have, when

521
00:26:50.780 --> 00:26:52.730
you do a margin as
an admin, you just say,

522
00:26:52.730 --> 00:26:54.530
I want this much base
and they give you a

523
00:26:54.530 --> 00:26:57.770
canvas. And I, in this
particular case, I just throw

524
00:26:57.770 --> 00:27:01.310
up, I have a little
XAML control, which switches between

525
00:27:01.310 --> 00:27:04.550
a couple of little things
that people like, and it's

526
00:27:04.550 --> 00:27:07.160
pretty standard. There's no owner
draw or issue like that.

527
00:27:07.160 --> 00:27:09.830
I'm by no means a
WPF expert. And I, And

528
00:27:09.830 --> 00:27:12.440
I can control, scroll and
make sizes bigger and small,

529
00:27:12.440 --> 00:27:14.510
and it looks natural and
it has their same texts

530
00:27:15.290 --> 00:27:18.110
as my, and at the
same metrics as the kind

531
00:27:18.110 --> 00:27:21.260
of text I'm using. Yes,
that's cool. I do have

532
00:27:21.260 --> 00:27:23.630
some Fimian issues. I need
to work out in 2012,

533
00:27:23.660 --> 00:27:27.110
but in general it gets
the expectation that people want.

534
00:27:27.140 --> 00:27:30.170
Yeah. Yeah. When you change
themes in 2012, and now

535
00:27:30.170 --> 00:27:34.490
in 2012 update to 2012
dot two, they've added the

536
00:27:34.490 --> 00:27:36.950
blue theme back. A lot
of people don't realize that

537
00:27:37.160 --> 00:27:39.380
after all of the gnashing
of teeth, about the gray

538
00:27:39.380 --> 00:27:42.170
theme, they gone and added
the blue theme back. And

539
00:27:42.170 --> 00:27:45.980
no one cares Well, if
they two's not officially out

540
00:27:45.980 --> 00:27:48.920
yet. So I, some people
are reluctant to update it

541
00:27:48.920 --> 00:27:51.260
to it. Yeah, yeah, you're
right. It is. As of

542
00:27:51.260 --> 00:27:53.480
the time of this recording,
it's a CTP four or

543
00:27:53.480 --> 00:27:55.610
something like that, but I
thought it was cool that

544
00:27:55.610 --> 00:27:57.260
they added the blue one,
but now I'm noticing that

545
00:27:57.620 --> 00:28:00.530
ultimately things will look weird
until you restart, because a

546
00:28:00.530 --> 00:28:02.840
lot of different admins aren't
ready for that kind of

547
00:28:03.140 --> 00:28:07.230
dynamic theme changing. Yes. And
responding to theme changed in

548
00:28:07.230 --> 00:28:11.510
an ad. It is, it's
not well I've, I've had

549
00:28:11.510 --> 00:28:14.000
trouble finding documentation on it.
And I've been fortunate enough

550
00:28:14.000 --> 00:28:15.860
to find some of the
devs involved in it and

551
00:28:15.860 --> 00:28:18.860
they've helped me out there,
but there's still it's especially

552
00:28:18.860 --> 00:28:20.930
w one of the problems
you have is if you

553
00:28:20.930 --> 00:28:23.270
have an ad in which
works on 2010, which has

554
00:28:23.270 --> 00:28:25.910
no theming, and then you
have to load it in

555
00:28:25.910 --> 00:28:29.390
both 2010 and 12, it
can get a little complex

556
00:28:29.420 --> 00:28:31.610
to keep your theming. Correct.
How often are you updating

557
00:28:31.610 --> 00:28:34.130
this? This is signed. Is
this signed and up on

558
00:28:34.350 --> 00:28:38.180
official studio gallery? It's on
the visual studio gallery. I

559
00:28:38.180 --> 00:28:42.590
update, I T the cadence
I try to have is

560
00:28:42.590 --> 00:28:46.940
a planned release one every
two months. And I do

561
00:28:46.940 --> 00:28:51.020
unplanned releases as dictated. If
someone finds a critical bug

562
00:28:51.890 --> 00:28:55.370
and it's, I deem it
to be impactful, then I

563
00:28:55.370 --> 00:28:57.260
will do a point release
as soon as I can

564
00:28:57.260 --> 00:28:59.990
get it out the door
and get confirmation that it

565
00:28:59.990 --> 00:29:03.200
works. But I tried to
pay plan releases every once.

566
00:29:03.200 --> 00:29:05.840
I've tried a lot to
get it to one month,

567
00:29:05.870 --> 00:29:10.160
but that usually kind of
stresses too hard. And so

568
00:29:10.160 --> 00:29:11.930
it usually comes out to
about two months. Sure. And

569
00:29:11.930 --> 00:29:14.150
that would also make it
your primary hobby, which is

570
00:29:14.150 --> 00:29:17.450
a big deal. Exactly. And
that back to what we

571
00:29:17.450 --> 00:29:19.520
were talking about in the
middle, where we said ReSharper

572
00:29:19.520 --> 00:29:22.010
and getting along with resharpen,
we're using ReSharper as the,

573
00:29:22.010 --> 00:29:24.770
kind of the canonical example,
because between ReSharper and code

574
00:29:24.770 --> 00:29:27.650
rush, everyone's got some add
on that will conflict with

575
00:29:27.650 --> 00:29:30.200
another add on. And sometimes
I think ReSharper and add

576
00:29:30.200 --> 00:29:33.890
ons, like it get unfairly
blamed because it's like something,

577
00:29:33.890 --> 00:29:36.830
something crashed. Well, I've got
ReSharper and that's just saying,

578
00:29:37.100 --> 00:29:41.230
I've got something, that's a
third party thing. How do

579
00:29:41.230 --> 00:29:43.750
you get along with third
party controls? And if something

580
00:29:43.750 --> 00:29:45.730
crashes, how do I know
if it's via spam or

581
00:29:45.730 --> 00:29:50.340
if it's visual studio that
crashed. So I try to

582
00:29:50.370 --> 00:29:54.810
get along as well as
possible. Third party controls, for

583
00:29:54.810 --> 00:29:58.860
instance, ReSharper is enormously popular.
And there is a significant

584
00:29:58.860 --> 00:30:01.200
number of people who want
both the STM and ReSharper

585
00:30:01.200 --> 00:30:03.540
in there. And when it
comes right down to it,

586
00:30:03.540 --> 00:30:05.760
people usually pay money for
ReSharper. And if you're going

587
00:30:05.760 --> 00:30:07.320
to kick out an add
in, you can kick out

588
00:30:07.320 --> 00:30:08.910
the one you paid for
the one you didn't pay

589
00:30:08.910 --> 00:30:13.140
for. So I kind of
do my best to exceed

590
00:30:13.140 --> 00:30:16.860
to them. And I do
have to ReSharper. I have

591
00:30:16.860 --> 00:30:19.410
to play a lot of
tricks with Code. That's like,

592
00:30:19.440 --> 00:30:22.500
ah, you're in my room
with me, we shot her.

593
00:30:22.510 --> 00:30:25.500
I'm going to do different
things. Exactly. One of the

594
00:30:25.500 --> 00:30:29.880
big things is people resharpen
has this great feature for

595
00:30:29.880 --> 00:30:32.910
refactoring. Like when you, you
can do a like live

596
00:30:32.910 --> 00:30:35.940
template editing where basically you
can like click on a

597
00:30:35.940 --> 00:30:39.150
local click rename and it
will actually open up when

598
00:30:39.150 --> 00:30:42.030
you type it'll both change
the local that you have.

599
00:30:42.090 --> 00:30:44.310
You're currently editing in every
use of that local in

600
00:30:44.320 --> 00:30:48.180
the method simultaneously as you're
typing. And to do that,

601
00:30:48.180 --> 00:30:50.790
it actually creates the conflict
because they select the text

602
00:30:50.790 --> 00:30:54.680
that they're editing. And so
the SMC is a text

603
00:30:54.680 --> 00:30:56.430
select, and it's like, Oh,
I should go into visual

604
00:30:56.430 --> 00:31:00.120
mode now because you selected
something and people will turn

605
00:31:00.120 --> 00:31:02.100
off. If I, if I
do that, when they're trying

606
00:31:02.100 --> 00:31:04.680
to edit live template, they'll
turn off. Yes, ma'am Hi.

607
00:31:04.980 --> 00:31:07.470
So they're actually programmatically selecting
it so they can do

608
00:31:07.470 --> 00:31:10.830
their job. And VSPN thinks
that a user initiated action,

609
00:31:10.860 --> 00:31:16.260
a call. Exactly. And so
I have actually a pretty

610
00:31:16.260 --> 00:31:19.380
significant component, which they do
some other things to the

611
00:31:19.380 --> 00:31:21.960
buffer when they're doing refactoring.
And what I do is

612
00:31:21.960 --> 00:31:25.170
I'm constantly looking for that
cue to be added to

613
00:31:25.170 --> 00:31:28.050
the buffer. And I have,
actually, what I've done is

614
00:31:28.050 --> 00:31:30.870
when I said, there's lots
of modes in them, I

615
00:31:30.870 --> 00:31:35.310
added a, a mode and
the motives called external edit,

616
00:31:35.370 --> 00:31:39.660
meaning that ReSharper visual, assists,
snippets, something that's happening, and

617
00:31:39.660 --> 00:31:42.180
we should do nothing to
interfere with it. And so

618
00:31:42.180 --> 00:31:45.960
when I see a live
template pop up, the SPM

619
00:31:45.960 --> 00:31:47.610
basically dropped, throws his hands
up in the air and

620
00:31:47.610 --> 00:31:48.900
says, I'll just stay out
of the way for now.

621
00:31:49.140 --> 00:31:52.290
And as soon as the
template kind of gets finished

622
00:31:52.290 --> 00:31:55.260
editing, and they remove their
markers from the buffer, then

623
00:31:55.260 --> 00:31:58.890
bam, it goes right back
into insert mode and usually

624
00:31:58.890 --> 00:32:01.710
provides a pretty seamless experience.
Very cool. Well, I mean,

625
00:32:01.710 --> 00:32:03.750
I think I can speak
for the community, even those

626
00:32:03.750 --> 00:32:07.020
that don't use VIM, that
what you're doing and what

627
00:32:07.020 --> 00:32:11.160
people are doing, single individuals
like, like Mads and like

628
00:32:11.160 --> 00:32:14.760
yourself that have admins that
are cared about and loved

629
00:32:14.760 --> 00:32:17.460
and appreciated by presumably thousands.
I mean, how many people

630
00:32:17.460 --> 00:32:21.060
have downloaded your I'm almost
up to 100,000 now. I

631
00:32:21.060 --> 00:32:23.610
think I was Right at
the border. Yeah. During the

632
00:32:23.610 --> 00:32:26.460
community, you're doing the community
service and we all appreciate

633
00:32:26.550 --> 00:32:29.790
that you care enough to
make an editor that we,

634
00:32:29.790 --> 00:32:32.130
that we either love to
use or are forced to

635
00:32:32.130 --> 00:32:34.590
use depending on how you,
how you feel about visual

636
00:32:34.590 --> 00:32:38.130
studio, a better place to
live. So on behalf of

637
00:32:38.130 --> 00:32:40.930
everybody, we appreciate, well, I
Also wanna say thanks to

638
00:32:40.950 --> 00:32:44.210
community, because there are tons
of bugs. I never could

639
00:32:44.210 --> 00:32:49.250
have fixed without like awesome
users. And because people have

640
00:32:49.280 --> 00:32:53.150
so many setups, like I
have virtual machines, like one

641
00:32:53.150 --> 00:32:56.000
with visual assist, one with
ReSharper and a bunch of

642
00:32:56.000 --> 00:32:59.390
other different combinations, but people
email me and they'll say

643
00:32:59.390 --> 00:33:00.860
a bug report. And I'm
like, what do you have

644
00:33:00.860 --> 00:33:02.750
installed in your machine? And
they'll send me a list

645
00:33:02.750 --> 00:33:06.410
of sometimes like 15 extensions.
Hmm. Wow. So it's like,

646
00:33:06.410 --> 00:33:09.680
I don't know how to
replicate that. That's when I

647
00:33:09.680 --> 00:33:12.560
do that, don't do that.
Yeah. And I've had other

648
00:33:12.560 --> 00:33:14.570
people, there were like VSA
and the slow and I'm

649
00:33:14.570 --> 00:33:17.030
like, well, what are you
doing? And I've actually had

650
00:33:17.030 --> 00:33:20.570
very significant dialogue with just
random people who filed bugs

651
00:33:20.570 --> 00:33:24.740
on GitHub. And if they
had not put up with

652
00:33:24.740 --> 00:33:26.930
me and all of the
things where I'm like, could

653
00:33:26.930 --> 00:33:29.240
you try this, try that,
or candid them, the bug

654
00:33:29.240 --> 00:33:31.820
builds and then had them
send me some information back.

655
00:33:33.310 --> 00:33:34.870
It's a two way street.
The fact that you cared

656
00:33:34.870 --> 00:33:39.040
enough to, to, to have
a dialogue, you're both to

657
00:33:39.040 --> 00:33:43.180
be commended. So people can
just go and Google with

658
00:33:43.180 --> 00:33:45.940
a bang or whatever, and
a doctor go and find

659
00:33:45.940 --> 00:33:48.580
themselves a VSM and they'll
have no trouble finding it.

660
00:33:49.030 --> 00:33:51.490
Absolutely. Or you can just
open up extensions and updates

661
00:33:51.490 --> 00:33:54.250
and visual studio type in
VFM and there you go.

662
00:33:54.310 --> 00:33:56.380
Even better. You don't have
to browse. Thank you very

663
00:33:56.380 --> 00:33:59.170
much, Jared Parsons for chatting
with us today. Thank you

664
00:33:59.170 --> 00:34:01.600
very much. Thanks for having
me. This has been another

665
00:34:01.600 --> 00:34:04.390
episode of Hansel minutes. We'll
see you again next week.

