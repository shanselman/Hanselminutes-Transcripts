WEBVTT FILE

1
00:00:12.120 --> 00:00:17.520
From hanselminutes.com. It's Hansel minutes,
a weekly discussion with web

2
00:00:17.520 --> 00:00:22.170
developer and technologists. Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.170 --> 00:00:28.560
number two 93. Recorded live
Wednesday, November 9th, 2011. Support for Hanselman

4
00:00:28.710 --> 00:00:32.640
is provided by Telerik rad
controls, the most comprehensive suite

5
00:00:32.640 --> 00:00:41.250
of components for windows forms
and asp.net web applications online@wwwdottelerik.com.

6
00:00:42.270 --> 00:00:45.930
In this episode, Scott talks
with Tom Billups about developing

7
00:00:45.930 --> 00:00:52.760
apps for iPhone windows, phone
seven. And man, Hi, this

8
00:00:52.760 --> 00:00:55.040
is Scott Hanselman, and this
is another episode of Hansel

9
00:00:55.040 --> 00:00:58.580
minutes and today mobile development
and the mobile development report

10
00:00:58.580 --> 00:01:01.940
card. I'm actually talking to
Torin Billups, and he's an

11
00:01:01.940 --> 00:01:05.930
interesting guy because he has
created iPhone, Android and windows

12
00:01:05.930 --> 00:01:08.450
phone seven applications. And I
thought it'd be cool to

13
00:01:08.450 --> 00:01:09.770
talk to him and find
out what the state of

14
00:01:09.770 --> 00:01:15.620
mobile development is today from
a pretty unbiased, unbiased perspective.

15
00:01:15.620 --> 00:01:18.590
Would you agree that you
are unbiased? I'm trying to

16
00:01:18.590 --> 00:01:20.570
be advised. I came to
you, Scott. You're the most

17
00:01:20.570 --> 00:01:24.110
unbiased you're too kind. You're
too kind. So how did

18
00:01:24.110 --> 00:01:26.180
this start? You decided one
day to start writing mobile

19
00:01:26.180 --> 00:01:30.380
apps. You needed a hobby,
right? Every developer needs a

20
00:01:30.380 --> 00:01:34.160
hobby outside of the corporate
world. Right? Sometime last year

21
00:01:34.340 --> 00:01:38.360
I was working for a
software company and kind of

22
00:01:38.360 --> 00:01:42.560
started a small mobile team
internally and a friend of

23
00:01:42.560 --> 00:01:45.530
mine. One of the developers
on this team had some

24
00:01:45.530 --> 00:01:48.950
great success with an Android
application, and I thought I

25
00:01:48.950 --> 00:01:53.150
would attempt to duplicate his
success, but across all the

26
00:01:53.150 --> 00:01:56.660
platforms and along the way,
hopefully learn this a new

27
00:01:56.660 --> 00:02:00.650
mobile development paradigm or what's
exciting about mobile development. And

28
00:02:00.650 --> 00:02:03.830
did you end up going
into this with the idea

29
00:02:03.830 --> 00:02:06.050
that you would try each
of the three and ended

30
00:02:06.050 --> 00:02:07.760
up writing a report card
or was it just you

31
00:02:07.760 --> 00:02:10.280
wanted to do mobile and
it didn't really matter which

32
00:02:10.280 --> 00:02:14.030
phone you used? You know,
I initially started on the

33
00:02:14.030 --> 00:02:17.240
iPhone side thinking if I
was going to fail, I

34
00:02:17.240 --> 00:02:21.290
should fail fast. And initially
I felt like objective C

35
00:02:21.290 --> 00:02:24.020
from what I had read
and heard about it, might've

36
00:02:24.020 --> 00:02:27.080
been a reach for me
technically, just because I don't

37
00:02:27.080 --> 00:02:30.050
come from a, a C
background. A lot of my

38
00:02:30.080 --> 00:02:32.900
college experience and work experience
was in the managed world.

39
00:02:33.290 --> 00:02:35.270
So I thought, Hey, if
I'm gonna, if I'm not

40
00:02:35.270 --> 00:02:36.620
gonna be able to do
it, let's start with what

41
00:02:36.620 --> 00:02:39.650
everyone claims to be the
hardest platform on the iPhone

42
00:02:39.650 --> 00:02:42.230
side. And I think around
this time windows phone seven

43
00:02:42.230 --> 00:02:44.930
was just getting off the
ground if I remember right.

44
00:02:44.930 --> 00:02:48.500
Like last year sometime. So
yeah, I just kind of

45
00:02:48.710 --> 00:02:50.510
initially thought I would build
an iPhone app and then

46
00:02:50.510 --> 00:02:52.280
go from there. I didn't
really have plans at the

47
00:02:52.280 --> 00:02:54.950
time to say that, Oh,
at one point I want

48
00:02:54.950 --> 00:02:57.980
to give talks or write
blog posts about how these

49
00:02:57.980 --> 00:03:00.670
things compare. In fact, that
part really didn't come up

50
00:03:00.670 --> 00:03:03.040
until much later when I
saw a lot of people

51
00:03:03.100 --> 00:03:07.420
comparing or contrasting Android and
iPhone development. And at that

52
00:03:07.420 --> 00:03:09.310
time I was already starting
to do some windows phone

53
00:03:09.310 --> 00:03:11.770
and I thought, you know,
nobody's talking about windows phone.

54
00:03:11.800 --> 00:03:14.200
So maybe if I get
a little experience or build

55
00:03:14.200 --> 00:03:17.200
an app or two on
windows phone, I could kind

56
00:03:17.200 --> 00:03:19.360
of contrast all three, which
hasn't been done that I've

57
00:03:19.360 --> 00:03:21.990
seen. So Certainly not, certainly
not as exhaustively as I

58
00:03:21.990 --> 00:03:24.390
thought your post was and
as fairly. And just to

59
00:03:24.390 --> 00:03:26.580
make sure that for folks
that maybe haven't listened to

60
00:03:26.580 --> 00:03:29.130
the show before I work,
I work for Microsoft, but

61
00:03:29.130 --> 00:03:31.740
I do not work for
the windows phone team. And

62
00:03:31.770 --> 00:03:34.920
I have no particular interests
either way in windows phone.

63
00:03:35.910 --> 00:03:37.920
And you don't work for
Microsoft and I'm looking at

64
00:03:37.920 --> 00:03:40.620
your blog and you've got
tags like Boone two and

65
00:03:40.620 --> 00:03:45.450
fitness and Ruby and WCF.
So it looks like you're

66
00:03:45.450 --> 00:03:48.240
a generalist. I'm, I'm a
generalist that works for Microsoft

67
00:03:48.240 --> 00:03:50.970
and the website. I happen
to have an iPhone. What's

68
00:03:50.970 --> 00:03:53.650
your primary phone that you
use every day? Right. And

69
00:03:53.660 --> 00:03:56.130
in right now, it is
an iPhone four. Okay. So

70
00:03:56.130 --> 00:04:00.090
we're two iPhone users and
I've done a couple of

71
00:04:00.090 --> 00:04:03.460
run bias. We're unbiased in
that we hate it. We

72
00:04:03.480 --> 00:04:05.280
have a love, hate relationship
with our iPhones. I'm sure.

73
00:04:05.430 --> 00:04:07.740
There you go. Okay. So
let's, let's start with that.

74
00:04:07.770 --> 00:04:10.290
Let's start with the iPhone
what's hello world, like on

75
00:04:10.290 --> 00:04:14.430
an iPhone. Yeah. So the
hello world experience was, I

76
00:04:14.430 --> 00:04:17.190
tried to be nice about
it mainly because I'm not

77
00:04:17.310 --> 00:04:21.150
a nos 10 user by
default. I did change jobs

78
00:04:21.600 --> 00:04:24.420
probably a few too many
times this last year, and

79
00:04:24.420 --> 00:04:27.060
I'm actually working on Linux
right now doing Python. And,

80
00:04:27.060 --> 00:04:29.730
but prior to that, I'd
always done development on windows.

81
00:04:29.730 --> 00:04:32.460
So I, when I started
to do some objective C

82
00:04:32.460 --> 00:04:35.540
stuff, of course, the first
kind of straw that breaks

83
00:04:35.550 --> 00:04:37.380
her back is, Oh, do
you have a Mac? And

84
00:04:37.380 --> 00:04:39.240
are you running the latest
version of iOS 10, et

85
00:04:39.240 --> 00:04:41.940
cetera. So that part of
it, I kind of decided

86
00:04:41.940 --> 00:04:45.540
to be nice to the
iPhone story and say, assuming

87
00:04:45.540 --> 00:04:48.540
you have a Mac, the
hello world experience was actually

88
00:04:48.690 --> 00:04:52.200
pretty awesome because similar to
the visual studio experience with

89
00:04:52.200 --> 00:04:54.720
windows phone, you pretty much
just pull down the tooling.

90
00:04:55.020 --> 00:04:56.370
And as soon as you
have the tooling up, it's

91
00:04:56.370 --> 00:04:58.650
kind of finally project F
five, so to speak where

92
00:04:58.650 --> 00:05:01.230
you just launched the simulator
and you can actually see

93
00:05:01.710 --> 00:05:04.170
your app in the background,
so to speak. And I

94
00:05:04.170 --> 00:05:06.270
felt was pretty good for
being a non Mac user

95
00:05:06.270 --> 00:05:08.580
too. So they, I mean,
they've got a nice simulator,

96
00:05:08.610 --> 00:05:12.330
both iPhone and windows phone
have a, an assimilator slash

97
00:05:12.360 --> 00:05:15.690
emulator X code is what
you use on the OSX.

98
00:05:15.750 --> 00:05:18.510
And you just say, file
new project, you name it

99
00:05:18.510 --> 00:05:20.520
and you hit a five
or whatever the equivalent is.

100
00:05:20.520 --> 00:05:22.590
And it runs into, in
a little mini iPhone on

101
00:05:22.590 --> 00:05:25.680
your, on your Mac, Right?
Yeah, exactly. I mean, that's

102
00:05:26.040 --> 00:05:28.590
was, I didn't feel, it'd
be that quick just from,

103
00:05:28.860 --> 00:05:31.440
you know, the stigma in
the community, that there is

104
00:05:31.440 --> 00:05:33.900
a lot of effort to
get your first iPhone project

105
00:05:33.900 --> 00:05:35.820
up. And I would say
just to get a hello

106
00:05:35.820 --> 00:05:38.760
world that was probably proved
wrong just by me going

107
00:05:38.760 --> 00:05:40.920
out and doing it as
a, as a novice. And

108
00:05:40.920 --> 00:05:43.530
I should probably throw a
little disclaimer out saying that

109
00:05:43.530 --> 00:05:46.290
when I, when I built
this report card, I wasn't

110
00:05:46.590 --> 00:05:49.230
trying to come at it
from a, these are, this

111
00:05:49.230 --> 00:05:51.660
is how the world is
today on all these platforms.

112
00:05:51.660 --> 00:05:54.270
It was really from, I've
been doing web development in

113
00:05:54.270 --> 00:05:57.320
C sharp or Java the
last three, four years. And

114
00:05:57.320 --> 00:05:59.810
what is that experience like
if you want to get

115
00:05:59.810 --> 00:06:02.180
into mobile, but you've pretty
much been a web developer.

116
00:06:02.180 --> 00:06:04.610
So that was really the
angle I came at. And

117
00:06:04.610 --> 00:06:08.740
the hello world for me
was blatantly easy. Okay. But

118
00:06:08.740 --> 00:06:11.140
on the Android though, what's
that like, what, what do

119
00:06:11.140 --> 00:06:12.670
you use to develop on
an Android? What do you

120
00:06:12.670 --> 00:06:16.060
have to download to get
started? Yeah, if you go

121
00:06:16.060 --> 00:06:18.520
out and read the post,
I was, I think in

122
00:06:18.520 --> 00:06:21.730
retrospect, a bit unfair to
Android, you know, throughout the

123
00:06:21.730 --> 00:06:24.850
post, I tried to be
very apples to apples, meaning

124
00:06:24.850 --> 00:06:27.430
that, you know, I was
not having a bias or

125
00:06:27.430 --> 00:06:31.150
I wasn't doing different steps
and the hello world side.

126
00:06:31.150 --> 00:06:33.640
I think I went a
little bit far with Android

127
00:06:33.640 --> 00:06:36.010
saying that, you know, if
I really wanted to get

128
00:06:36.010 --> 00:06:38.680
Android up with minimal effort,
I would pretty much install

129
00:06:38.680 --> 00:06:41.020
the SDK and open a
clips. And at that point

130
00:06:41.020 --> 00:06:44.890
it is fairly file new
project. Like I just personally

131
00:06:44.890 --> 00:06:47.890
am not a, I'm just
not an eclipse person. So

132
00:06:47.890 --> 00:06:49.990
of course I want to
be difficult and intern made

133
00:06:50.290 --> 00:06:52.690
my life very difficult. So
I decided to go the

134
00:06:52.690 --> 00:06:55.600
intelligent route, which is a
JetBrains product, the same kind

135
00:06:55.600 --> 00:06:59.050
of parent company of ReSharper.
And, you know, the, the

136
00:06:59.050 --> 00:07:02.050
experience was, I would say
just a little Rocky because

137
00:07:02.050 --> 00:07:05.740
not just that eclipse is
the only way to kind

138
00:07:05.740 --> 00:07:08.350
of get going with Android,
but if you're doing Android

139
00:07:08.470 --> 00:07:11.020
on windows and you're kind
of used to the out

140
00:07:11.020 --> 00:07:14.140
of the box <inaudible> experience,
I described, you're not going

141
00:07:14.140 --> 00:07:17.020
to get that same experience
doing Java right out of

142
00:07:17.020 --> 00:07:20.080
the gate. In fact, I
had such a painful experience.

143
00:07:20.080 --> 00:07:22.930
I had a coworker finally,
coworker finally come over and

144
00:07:23.260 --> 00:07:25.540
helped me out because obviously
I was doing Java earlier

145
00:07:25.540 --> 00:07:29.020
this year. And I was
just, wasn't probably accustomed to

146
00:07:29.020 --> 00:07:32.230
all the stuff that Java
developers are on, on the

147
00:07:32.230 --> 00:07:35.080
windows side, especially. So there's,
there's a lot of steps

148
00:07:35.080 --> 00:07:37.840
and I kind of rated
the hello world experience poorly

149
00:07:37.840 --> 00:07:41.440
because the more steps there
are for the developer, the

150
00:07:41.440 --> 00:07:43.810
more chance there is for
human error. And let's be

151
00:07:43.810 --> 00:07:46.000
honest, that's where all the
pain comes in. And I

152
00:07:46.000 --> 00:07:48.850
felt, I felt like on
both the iPhone and the

153
00:07:48.850 --> 00:07:51.730
windows phone side, there's no
real human error, unless you

154
00:07:51.940 --> 00:07:54.400
can't figure out how to
download the tooling, because once

155
00:07:54.400 --> 00:07:56.140
you have that installer up
and running, you pretty much

156
00:07:56.140 --> 00:07:59.650
done. So if you use
eclipse on Android, hello world,

157
00:07:59.650 --> 00:08:01.510
while you were a little
bit unfair, because you went

158
00:08:01.510 --> 00:08:04.210
a little slightly off, I
mean, off the beaten path,

159
00:08:04.240 --> 00:08:06.670
it sounds like hello world,
pretty straightforward on each of

160
00:08:06.670 --> 00:08:09.160
the files. Right. And one
of the other gripes I

161
00:08:09.160 --> 00:08:12.070
had, especially on windows is
if you were installing the

162
00:08:12.070 --> 00:08:15.430
SDK, the very first kind
of prerequisite is, Hey, do

163
00:08:15.430 --> 00:08:17.650
you have the JDK installed?
Because you're going to be

164
00:08:17.650 --> 00:08:22.030
doing Java development. And the
weirdest bug in the installer

165
00:08:22.030 --> 00:08:25.060
was that if you had
the JDK installed correctly, everything

166
00:08:25.060 --> 00:08:28.060
was fine. For some reason,
the next button was just

167
00:08:28.060 --> 00:08:31.780
grayed out in the actual
install. So every time I

168
00:08:31.780 --> 00:08:33.010
would install it, I would
kind of look at it

169
00:08:33.010 --> 00:08:36.010
and go, okay, maybe I've
messed something up. So it

170
00:08:36.010 --> 00:08:38.920
took me actually reinstalling the
JDK a couple of different

171
00:08:38.920 --> 00:08:42.460
times, and then full-out paving
my workstation. Before I, before

172
00:08:42.460 --> 00:08:45.100
I went online and said,
maybe someone else is having

173
00:08:45.100 --> 00:08:48.700
this problem. Exactly. And I
found out that it's just

174
00:08:48.700 --> 00:08:50.770
a bug in the SDK,
but that made it a

175
00:08:50.770 --> 00:08:52.630
painful for a newbie. And
like I said, I tried

176
00:08:52.630 --> 00:08:54.310
to come at the angle
on the mobile dev side

177
00:08:54.310 --> 00:08:56.790
that if I've done this
stuff, how hard is it

178
00:08:56.790 --> 00:09:00.380
really to get going? So,
So hello world A's and

179
00:09:00.380 --> 00:09:03.350
B's, if you stay on
the beaten path, but when

180
00:09:03.350 --> 00:09:06.560
you come to learning curve,
it sounds like since you

181
00:09:06.560 --> 00:09:09.170
are, you're kind of a.net
developer or a Java developer,

182
00:09:09.170 --> 00:09:11.390
it sounds like you've been
doing Java since January of

183
00:09:11.390 --> 00:09:14.510
this year. And before that.net,
you're I definitely a curly

184
00:09:14.510 --> 00:09:19.040
braces developer, right. You're familiar
with curly brace related languages,

185
00:09:19.460 --> 00:09:22.070
Right? So you can see
where the learning curve is

186
00:09:22.070 --> 00:09:25.190
gonna, you know, take a
turn towards the iPhone and

187
00:09:25.190 --> 00:09:27.410
kind of beat up on,
on the iPhone platform. And,

188
00:09:27.740 --> 00:09:30.170
you know, as I mentioned
earlier, I don't really have

189
00:09:30.170 --> 00:09:33.560
a C background and I
was very hesitant to get

190
00:09:33.560 --> 00:09:36.230
into objective C because everyone
kind of talks about, of

191
00:09:36.230 --> 00:09:39.500
course, what memory management and
the pointer thing. Of course,

192
00:09:39.890 --> 00:09:41.690
if you don't know pointers,
you shouldn't be a programmer

193
00:09:41.690 --> 00:09:44.570
and all that good stuff.
So I came in very

194
00:09:44.570 --> 00:09:47.870
afraid and spent a long
time just kind of looking

195
00:09:47.870 --> 00:09:50.930
at the code, thinking why
is everything in array? You

196
00:09:50.930 --> 00:09:52.550
know, when you, when you
first come to objective C

197
00:09:52.550 --> 00:09:55.940
there's so many brackets, or
it feels very bracket heavy,

198
00:09:56.120 --> 00:09:57.950
that the joke, the joke
is just, you know, you

199
00:09:57.950 --> 00:09:59.570
look at it and everything's
in a Ray for two

200
00:09:59.570 --> 00:10:03.170
months, but, you know, I
initially built my product December

201
00:10:03.170 --> 00:10:05.870
of last year and I
kind of prototyped it for

202
00:10:05.870 --> 00:10:08.570
about 30 days thinking, I
don't know, objective C I'm

203
00:10:08.570 --> 00:10:10.760
kind of copying and pasting
this from stack overflow as

204
00:10:10.760 --> 00:10:12.920
I go, I know in
the end, you know, in

205
00:10:12.920 --> 00:10:15.470
this 30 day sprint or,
you know, time box, if

206
00:10:15.470 --> 00:10:16.910
you want to call it
that I'll be throwing this

207
00:10:16.910 --> 00:10:19.790
away. And I did actually
throw the product. I had

208
00:10:19.790 --> 00:10:21.970
a way because it wasn't
ready for prime time. And

209
00:10:21.970 --> 00:10:24.500
then in addition to that,
you know, what's the best

210
00:10:24.500 --> 00:10:26.420
thing for code quality, of
course, his hard drive failure.

211
00:10:26.430 --> 00:10:30.440
So why not do that
myself? And I basically threw

212
00:10:30.440 --> 00:10:32.210
it all away and spent
another two months kind of

213
00:10:32.210 --> 00:10:35.690
refining and rewriting it all.
And through that process, you

214
00:10:35.690 --> 00:10:37.790
know, where the weird things
I described for learning curve

215
00:10:37.820 --> 00:10:39.950
is not just how long
does it take me to

216
00:10:39.950 --> 00:10:41.780
learn how to, you know,
new up a string or

217
00:10:41.790 --> 00:10:44.300
new up some object and
objective C or Java or

218
00:10:44.300 --> 00:10:47.330
C sharp. It was more,
how long was it before

219
00:10:47.330 --> 00:10:50.480
I really felt productive? Like,
you know, the, if you

220
00:10:50.480 --> 00:10:52.850
kind of equate this to
natural language, you know, a

221
00:10:52.850 --> 00:10:54.740
Spanish teacher told me a
long time ago in high

222
00:10:54.740 --> 00:10:57.320
school that, you know, you
really know a foreign language

223
00:10:57.350 --> 00:10:59.750
when you sit down and
think in Spanish or French,

224
00:10:59.900 --> 00:11:01.940
you're no longer thinking in
English. And that's how I

225
00:11:02.210 --> 00:11:04.190
kind of labeled this learning
curve is I wanted you

226
00:11:04.190 --> 00:11:07.580
to sit down and boom,
I just wanted to kind

227
00:11:07.580 --> 00:11:09.590
of be thinking in the
language, but I did so

228
00:11:09.590 --> 00:11:12.710
much of this, what I
would say harmful unlearning where

229
00:11:12.710 --> 00:11:15.020
instead of just saying, this
is how it creates something

230
00:11:15.020 --> 00:11:16.640
objective to see, I'm just
going to run with it.

231
00:11:16.640 --> 00:11:18.770
I said, that's how I
do an objective C, but

232
00:11:18.770 --> 00:11:20.810
how would I do it
in C sharp? Oh, that's

233
00:11:20.810 --> 00:11:22.430
how I would. And then
instead of, you know, kind

234
00:11:22.430 --> 00:11:24.920
of learning the language, I
was learning it by proxy

235
00:11:24.920 --> 00:11:26.690
in a way. And I
would always do this left-right

236
00:11:26.690 --> 00:11:29.270
context switch in my head.
And that's it, you know,

237
00:11:29.270 --> 00:11:31.310
I think Jeremy Miller talked about
this a while back that,

238
00:11:31.340 --> 00:11:34.220
you know, the hardest thing
about learning new technologies is

239
00:11:34.220 --> 00:11:35.930
as you get older, you
have a lot of things

240
00:11:35.930 --> 00:11:38.960
to compare that to or
unlearn. And I feel like

241
00:11:38.960 --> 00:11:40.610
that's what really held me
back. And I'm not even,

242
00:11:40.730 --> 00:11:42.500
I'm not even 30 years
old at this point, but

243
00:11:42.500 --> 00:11:44.870
I feel like, you know,
a lot of the C-sharp

244
00:11:44.930 --> 00:11:47.420
each Java now I'm doing
Python full time. A lot

245
00:11:47.420 --> 00:11:49.100
of those things just get
in your head and you

246
00:11:49.550 --> 00:11:51.530
kind of have to just
muscle memory to some, to

247
00:11:51.530 --> 00:11:53.560
some degree. So in your
post, you said it took

248
00:11:53.560 --> 00:11:56.590
two months Of writing code
daily for two to four

249
00:11:56.590 --> 00:11:59.470
hours. And that seems like
a long time. Do you

250
00:11:59.470 --> 00:12:02.890
think that that's fair that
anyone's sitting down on any

251
00:12:02.890 --> 00:12:05.830
of these things iPhone, Android,
or windows phone would need

252
00:12:05.830 --> 00:12:08.470
to really think about this
for two solid months, pretty

253
00:12:08.470 --> 00:12:10.570
much every day? Or do
you think that you paid

254
00:12:10.570 --> 00:12:12.910
an extra tax, maybe doubling
the amount of time it

255
00:12:12.910 --> 00:12:16.570
would take because of your
predisposition towards a, like a

256
00:12:16.570 --> 00:12:20.250
dotnet language? Yeah, that's a
good point. You know, a

257
00:12:20.250 --> 00:12:22.560
big part of it early
on was I was so

258
00:12:22.560 --> 00:12:25.950
concerned about pointers and memory
management. And every time I

259
00:12:25.950 --> 00:12:27.960
went to, you know, a
local user group or a

260
00:12:27.960 --> 00:12:30.840
code camp, and I talked
to the person presenting on

261
00:12:30.840 --> 00:12:33.510
getting in, getting started with
iPhone, they always say, well,

262
00:12:33.510 --> 00:12:35.400
you have to be doing
memory management. You have to

263
00:12:35.400 --> 00:12:39.240
understand pointers and about, you
know, after that spike or

264
00:12:39.240 --> 00:12:41.610
that initial 30 day trial
that I threw it away.

265
00:12:41.610 --> 00:12:43.530
I said, you know what?
I didn't even think about

266
00:12:43.530 --> 00:12:46.410
memory management and I didn't
have a problem. And also,

267
00:12:46.410 --> 00:12:48.930
I didn't really worry about
pointers when I did that

268
00:12:48.930 --> 00:12:51.930
little asterix. I just assumed
that was a variable. So

269
00:12:51.930 --> 00:12:53.790
in my head, I mean,
this sounds kind of bad.

270
00:12:53.790 --> 00:12:55.620
And like I said, two
months probably makes me sound

271
00:12:55.620 --> 00:12:59.460
on hireable on your podcast.
But the thing for me

272
00:12:59.460 --> 00:13:02.540
was just kind of throwing
those, those fears. Cause I

273
00:13:02.550 --> 00:13:04.350
feel like I had honest
to God, some kind of

274
00:13:04.350 --> 00:13:07.080
code fear where I was
actually not very productive on

275
00:13:07.080 --> 00:13:08.880
my, because I was afraid
I was going to screw

276
00:13:08.880 --> 00:13:10.950
something up. But the two
months that I really got

277
00:13:10.950 --> 00:13:13.020
into it, two to four
hours a day, I just

278
00:13:13.020 --> 00:13:15.330
treated everything like variables. And
didn't even worry about memory

279
00:13:15.330 --> 00:13:16.950
management until I got to
the point where I was

280
00:13:16.950 --> 00:13:18.870
getting ready to ship it,
because I didn't know if

281
00:13:18.870 --> 00:13:20.550
I was going to make
any money anyway. So why

282
00:13:20.550 --> 00:13:23.760
would I kind of do
all that optimization upfront? And

283
00:13:24.030 --> 00:13:25.770
when I actually got ready
to ship the product, I

284
00:13:25.770 --> 00:13:28.650
kind of looked back over
the code and releasing memory

285
00:13:28.650 --> 00:13:30.600
really wasn't as big a
deal as everyone had told

286
00:13:30.600 --> 00:13:32.970
me. So I thought, you
know, if I had gone

287
00:13:32.970 --> 00:13:35.790
into that with all out
these negative biases against me,

288
00:13:36.150 --> 00:13:38.040
I might've, I might've actually
just rolled with it and

289
00:13:38.040 --> 00:13:40.890
said, Hey, it's just another
programming language. I think like

290
00:13:40.890 --> 00:13:43.320
you're saying that there's a
big, a bunch of stuff

291
00:13:43.320 --> 00:13:44.850
in my head that I
had to just kind of

292
00:13:44.850 --> 00:13:48.060
get past before I was
productive. And why, why was,

293
00:13:48.120 --> 00:13:50.370
why were you so concerned
about memory management? Just because

294
00:13:50.370 --> 00:13:52.680
did you have an impression
of objective C as not

295
00:13:52.680 --> 00:13:55.170
being a language that did
much for you? I mean,

296
00:13:55.170 --> 00:13:57.510
doesn't it have smart pointers
and some abilities to release

297
00:13:57.510 --> 00:14:00.180
memory or I guess let
me put it this way.

298
00:14:00.180 --> 00:14:02.040
When I first had mobile
development, I did it on

299
00:14:02.040 --> 00:14:04.470
a Palm pilot. It was
a Palm 1000 and I

300
00:14:04.470 --> 00:14:07.740
had, I think, 16 K
of heap and forecasts stack

301
00:14:07.770 --> 00:14:11.070
and memory management was a
huge deal. And the hardest

302
00:14:11.070 --> 00:14:13.740
part for me, developing on
a tiny, tiny mobile device

303
00:14:13.740 --> 00:14:16.980
and see again much, much,
much smaller than an iPhone

304
00:14:18.060 --> 00:14:22.680
was thinking about like objects,
scope, object, lifetime, like, you

305
00:14:22.680 --> 00:14:24.900
know, how long should this
array be around and am

306
00:14:24.900 --> 00:14:27.150
I, am I leaking four
bites here and there, because

307
00:14:27.150 --> 00:14:29.040
if I do, I'm going
to eventually hear about it.

308
00:14:29.610 --> 00:14:32.430
Do those kinds of thing
exists on these, on these

309
00:14:32.430 --> 00:14:34.680
different platforms on these three
different mobile platforms? How much

310
00:14:34.680 --> 00:14:37.950
are you thinking about object
lifetime? Yeah, that's, that's really

311
00:14:37.950 --> 00:14:40.560
what kind of hung me
up in the early days

312
00:14:40.560 --> 00:14:42.150
when I was building this
app is I was so

313
00:14:42.150 --> 00:14:44.970
concerned about, you know, like
you said, leaking four bites

314
00:14:44.970 --> 00:14:46.980
here and there and come
to find out this thing's

315
00:14:46.980 --> 00:14:50.370
got 512 megabytes of Ram
on it. So why am

316
00:14:50.370 --> 00:14:53.890
I that about leaking four
bites? Memory leaks are bad

317
00:14:53.890 --> 00:14:55.480
though. I mean, I don't
want to like call you

318
00:14:55.480 --> 00:14:57.790
out on the podcast, but
I mean, we don't want

319
00:14:57.790 --> 00:15:00.550
to leak memory, right. To
be clear. Did the development

320
00:15:00.550 --> 00:15:02.650
tools help you find stuff
like that and do the,

321
00:15:02.650 --> 00:15:06.430
does the guidance and the
prescriptive documentation for all of

322
00:15:06.430 --> 00:15:08.800
these platforms, like tell you
when you should be thinking

323
00:15:08.800 --> 00:15:12.070
about leaking memory or not?
Yeah. So let me dig,

324
00:15:12.130 --> 00:15:15.760
dig myself out of this
hole here. I initially, when

325
00:15:15.760 --> 00:15:18.130
I worked on the product,
this was last December, right?

326
00:15:18.160 --> 00:15:20.560
And back then it was
X code three, which was

327
00:15:20.830 --> 00:15:23.410
in my opinion, probably just
the worst IDE I've ever

328
00:15:23.410 --> 00:15:26.500
used. And that's a bold
statement, but I didn't really

329
00:15:26.500 --> 00:15:29.410
help you with memory management
or tell you any helpful

330
00:15:29.410 --> 00:15:33.640
hints. Now I have downloaded
X code for recently and

331
00:15:33.670 --> 00:15:35.770
in X code for it's
doing kind of what you're

332
00:15:35.770 --> 00:15:38.710
talking about, which is more
helpful hints. And I did

333
00:15:38.710 --> 00:15:40.570
develop an app about a
month ago for our code

334
00:15:40.570 --> 00:15:43.210
camp locally and found that
to be a huge help

335
00:15:43.210 --> 00:15:45.640
because there were certainly places
where I wasn't auto releasing.

336
00:15:45.940 --> 00:15:47.650
And it would just say,
you know, Hey, you're need

337
00:15:47.650 --> 00:15:49.420
to auto release this. And
I'm like, yeah, you know,

338
00:15:49.510 --> 00:15:52.030
I do. So I would
use the tooling in that

339
00:15:52.030 --> 00:15:53.530
way and it's gotten a
lot better. I, you know,

340
00:15:53.770 --> 00:15:55.630
I personally though, if you're,
if you're going to do

341
00:15:55.630 --> 00:15:58.540
some objective C full time,
I would, I would recommend

342
00:15:58.540 --> 00:16:01.330
actually pulling down the latest
JetBrains product called the app

343
00:16:01.330 --> 00:16:06.010
code. And it's essentially like
ReSharper or any tool that

344
00:16:06.010 --> 00:16:07.990
you can that JetBrains makes
this kind of a, a

345
00:16:07.990 --> 00:16:10.360
great IDE. And the thing
I like about it is

346
00:16:10.360 --> 00:16:13.210
that, you know, I can
transition from work and home

347
00:16:13.330 --> 00:16:15.880
without having to relearn a
bunch of shortcuts. And that's

348
00:16:15.880 --> 00:16:17.830
what I really kind of
bummed me out about. Excode

349
00:16:17.830 --> 00:16:20.110
was in addition to being
kind of a very poor

350
00:16:20.110 --> 00:16:23.800
editor, it's also a whole
nother set of mappings. You

351
00:16:23.800 --> 00:16:26.740
have to learn. So I'm
doing Python now. And the

352
00:16:26.740 --> 00:16:28.780
great thing is we're using
pie charm, the other jet

353
00:16:28.780 --> 00:16:30.880
Brian's product. And then I
come home and if I'm

354
00:16:30.880 --> 00:16:34.330
doing objective C same shortcuts,
same editor, then I use

355
00:16:34.330 --> 00:16:37.660
re and if I'm using
ReSharper in visual studio, same

356
00:16:37.660 --> 00:16:43.930
shortcuts from using the intelligence.
This episode of Hansel minutes

357
00:16:43.930 --> 00:16:46.450
is brought to you by
careers, 2.0 and our friends

358
00:16:46.450 --> 00:16:49.780
at stack overflow careers, 2.0
is the only career site

359
00:16:49.780 --> 00:16:53.350
dedicated to matching graded offers
with great jobs, post your

360
00:16:53.350 --> 00:16:56.500
open depositions on careers to
point out today, reach the

361
00:16:56.500 --> 00:17:01.150
entire development community, all 15 million
monthly visitors on stack overflow.

362
00:17:01.720 --> 00:17:04.710
The best part is you'll
receive exceptional candidates, not just

363
00:17:04.720 --> 00:17:07.780
a massive pile of unqualified
resumes. You're used to waiting

364
00:17:07.780 --> 00:17:10.720
through. We'll save you tons
of time and headaches of

365
00:17:10.720 --> 00:17:13.420
careers. When you're posting your
job, you can even choose

366
00:17:13.420 --> 00:17:16.210
to receive or candidates careers
profile instead of just their

367
00:17:16.210 --> 00:17:20.230
resume, making your candidate sorting
even easier. The guys at

368
00:17:20.230 --> 00:17:22.870
stack overflow believe in that
product so much. And if

369
00:17:22.870 --> 00:17:25.540
you're not incredibly happy, they'll
refund your money. No questions

370
00:17:25.540 --> 00:17:28.060
asked. And to top it
off as a Hansel minutes

371
00:17:28.060 --> 00:17:30.550
listener, you've been a free
stack or float tee shirt.

372
00:17:30.580 --> 00:17:33.040
When you purchase a job
listing to get your free,

373
00:17:33.040 --> 00:17:37.300
t-shirt use the code Hansel
minutes and check out careers

374
00:17:37.330 --> 00:17:41.380
dot stack overflow.com. Once again,
that URL is careers dot

375
00:17:41.380 --> 00:17:45.460
stack overflow.com. No, that's an
interesting point that you're bringing

376
00:17:45.460 --> 00:17:48.190
up because, you know, if
you, if, if people who

377
00:17:48.190 --> 00:17:53.910
are listening, go check your
app@blueflixapp.com, B L M B

378
00:17:53.910 --> 00:17:57.150
L U E Flix, F
L I X app.com. We'll

379
00:17:57.150 --> 00:17:59.520
put that in the show
notes. This is an application

380
00:17:59.520 --> 00:18:02.850
that lets you manage, you
know, your blockbuster express movie

381
00:18:02.850 --> 00:18:06.630
kiosk, and you have an
iPhone, a windows phone and

382
00:18:06.630 --> 00:18:09.810
an Android app. So you're
context switching. And if you

383
00:18:09.810 --> 00:18:13.200
pee, you're really, you're, you're
a tiny ISV, right? You're

384
00:18:13.200 --> 00:18:15.570
a micro ISV. You're that?
You're kind of that dream,

385
00:18:16.050 --> 00:18:19.200
that dream startup one guy
in a garage with three

386
00:18:19.200 --> 00:18:22.560
apps, all branded all working
on any device at all.

387
00:18:22.920 --> 00:18:26.190
And you're switching between those
devices, fixing bugs and dealing

388
00:18:26.190 --> 00:18:30.750
with customer requests. Context switching
is more than just the

389
00:18:30.750 --> 00:18:33.510
language and the concepts. It's
also like you're pointing out

390
00:18:33.540 --> 00:18:37.740
the muscle memory and it
sounds like you standardized on

391
00:18:37.740 --> 00:18:41.790
JetBrains tools for your muscle
memory and that made you

392
00:18:41.790 --> 00:18:45.570
more productive. So people should
take into consideration that muscle

393
00:18:45.570 --> 00:18:48.740
memory tax as it were,
Right. I mean, if you,

394
00:18:48.740 --> 00:18:50.150
if you're going to be
in this industry for more

395
00:18:50.150 --> 00:18:52.100
than a year, you're going
to have to eventually be

396
00:18:52.100 --> 00:18:53.420
very good at it. Right?
And you want to be

397
00:18:53.420 --> 00:18:56.330
productive and have high velocity.
And especially as you mentioned

398
00:18:56.330 --> 00:18:59.180
in the micro ISB sense,
this is my time, right?

399
00:18:59.420 --> 00:19:02.240
This isn't an employer's time
where if I'm learning a

400
00:19:02.240 --> 00:19:04.730
couple of shortcuts, so be
it, this is how quickly

401
00:19:04.730 --> 00:19:06.710
can I get a new
feature out to either be

402
00:19:06.770 --> 00:19:09.680
beat the competition or create
a whole new app that

403
00:19:09.680 --> 00:19:11.960
someone would pay money for.
And that's been like you

404
00:19:11.960 --> 00:19:15.410
said something I've re-evaluated over
time because it really wasn't

405
00:19:15.410 --> 00:19:16.970
important to me early on,
I was just playing around.

406
00:19:16.970 --> 00:19:18.560
It was a hobby, but
like you said, now I've

407
00:19:18.560 --> 00:19:20.990
got not just effort and
coding, but all that brand

408
00:19:20.990 --> 00:19:23.450
recognition work and the, you
know, trying to keep the

409
00:19:23.450 --> 00:19:26.060
name up in the internet
sort of space on Twitter

410
00:19:26.060 --> 00:19:27.980
and get people interested in
buying it or checking it

411
00:19:27.980 --> 00:19:30.110
out. That's a lot of
work too. So you certainly

412
00:19:30.110 --> 00:19:32.780
don't want to waste the
little time you have, you

413
00:19:32.780 --> 00:19:35.870
know, kind of relearning a
new editor or any other

414
00:19:35.870 --> 00:19:38.870
kind of context, wishing that's
expensive. All right. Let's move

415
00:19:38.870 --> 00:19:43.970
on to a test driven
development. Cause I know that

416
00:19:43.970 --> 00:19:46.190
I've sat down with a
windows phone app and thought

417
00:19:46.190 --> 00:19:50.240
about writing it and actually
stopped writing. It got frustrated

418
00:19:50.240 --> 00:19:51.920
and gave up for a
couple of weeks because I

419
00:19:51.920 --> 00:19:54.320
just couldn't figure out what
the right way to test.

420
00:19:54.320 --> 00:19:57.050
One of these things is
how do you test a

421
00:19:57.050 --> 00:19:59.390
phone application? What's the right
way to set up a

422
00:19:59.390 --> 00:20:03.770
unit test framework and how
do each of these phones

423
00:20:04.550 --> 00:20:07.610
stack up? Yeah. I, you
know, I also have a

424
00:20:07.610 --> 00:20:10.610
disclaimer kind of in this
post because I'm still not

425
00:20:10.610 --> 00:20:12.740
really test driving a lot
of the front end stuff.

426
00:20:13.070 --> 00:20:15.170
So your question kind of
begs, like how are you

427
00:20:15.410 --> 00:20:18.740
verifying these views kind of
look good and that sort

428
00:20:18.740 --> 00:20:20.690
of stuff I haven't really
found a way to do

429
00:20:20.690 --> 00:20:23.540
yet. What I, what I
kind of labeled this category

430
00:20:23.540 --> 00:20:26.480
as was if I'm just
driving out the domain model

431
00:20:26.480 --> 00:20:29.930
or kind of the class
library underneath, how easy is

432
00:20:29.930 --> 00:20:32.810
it to get that code
under test just the actual

433
00:20:32.810 --> 00:20:35.420
classes and services or whatever
you want to use underneath

434
00:20:35.420 --> 00:20:37.490
the covers. And for that,
you know, on the windows

435
00:20:37.490 --> 00:20:39.590
phone, I kind of beat
them up here a little

436
00:20:39.590 --> 00:20:43.880
bit because the, the express
tooling, which, you know, Microsoft

437
00:20:43.910 --> 00:20:45.860
probably like all the other
vendors is trying to have

438
00:20:45.860 --> 00:20:48.700
some tooling that a pretty
good job for micro ISV

439
00:20:48.790 --> 00:20:51.190
who just don't want to
spend any money. Right. And

440
00:20:51.190 --> 00:20:53.650
for the express tooling, one
of the biggest shortcomings, if

441
00:20:53.650 --> 00:20:55.840
you are in that group
is you can't use any

442
00:20:55.840 --> 00:20:59.530
plugins. So ReSharper, as we
mentioned earlier, I'm just one

443
00:20:59.530 --> 00:21:01.480
of those developers where I
really have a hard time

444
00:21:01.480 --> 00:21:05.470
working without ReSharper. So had
I been a victim, if

445
00:21:05.470 --> 00:21:07.750
you were to the express
only tooling, that would have

446
00:21:07.750 --> 00:21:10.600
just been a huge issue
for my productivity, but I'm

447
00:21:10.600 --> 00:21:12.460
kind of in a weird
space, because like you said,

448
00:21:12.460 --> 00:21:15.970
I I've done some C
sharp development in the past

449
00:21:15.970 --> 00:21:18.940
and I spend a lot
of times still writing C-sharp.

450
00:21:18.970 --> 00:21:22.150
And so I actually have
a visual studio, 2010 ultimate,

451
00:21:22.270 --> 00:21:24.490
and I actually have a
ReSharper license. So for me

452
00:21:24.700 --> 00:21:26.260
to jump in, you know,
I have a test runner

453
00:21:26.260 --> 00:21:29.590
with ReSharper and it seems
to work. My, my other

454
00:21:29.590 --> 00:21:32.440
real gripe with the TDD
side was the community. I

455
00:21:32.440 --> 00:21:35.560
saw so many blog posts
out there saying, you know,

456
00:21:35.620 --> 00:21:37.210
I can figure out this,
any of the things. So

457
00:21:37.210 --> 00:21:39.460
I just wrote my own
X unit, yada yada, and

458
00:21:39.460 --> 00:21:41.560
I kind of got hung
up on those posts for

459
00:21:41.560 --> 00:21:44.890
a long time and finally
landed on a Silverlight three

460
00:21:44.890 --> 00:21:48.400
compatible version of end unit.
And just, just added that

461
00:21:48.400 --> 00:21:50.470
to my kind of test
project and the only real

462
00:21:50.470 --> 00:21:53.040
pain point at that, that
step was telling me just

463
00:21:53.050 --> 00:21:54.940
video. Yeah, I know it's
I know it's a Silverlight

464
00:21:54.940 --> 00:21:56.860
assembly. Don't worry about it.
You know, I'm not deploying

465
00:21:56.860 --> 00:22:00.130
this it as far as
how those things stack up

466
00:22:00.700 --> 00:22:02.680
compared to the iPhone and
the Android side on the

467
00:22:02.680 --> 00:22:05.230
Android side, it was awesome
because I was using Maven

468
00:22:05.560 --> 00:22:07.570
and Maven. It's kind of
like new get, if I

469
00:22:07.570 --> 00:22:10.450
equate that to the.net world
kind of dependency management build

470
00:22:10.450 --> 00:22:13.090
tool, and it's very similar
to you get, I basically

471
00:22:13.090 --> 00:22:15.280
said, Hey, I want J
unit. And it went out

472
00:22:15.280 --> 00:22:17.590
and got J unit for
me. So to write tests,

473
00:22:17.590 --> 00:22:20.440
that was pretty simple. And
then on the X code

474
00:22:20.440 --> 00:22:23.650
side, the early ex-co days
was actually very painful, but

475
00:22:23.650 --> 00:22:25.420
I want to give excode
some credit today. If you're

476
00:22:25.420 --> 00:22:28.000
still using X code, it
actually does kind of what

477
00:22:28.000 --> 00:22:30.400
NBC does out of the
box. When you create a

478
00:22:30.400 --> 00:22:33.190
new project that says, Hey,
I assume, I assume you

479
00:22:33.190 --> 00:22:35.590
want a, a unit test
project here. Right. And you

480
00:22:35.590 --> 00:22:38.220
can say yes or no.
So, So it sounds like

481
00:22:38.220 --> 00:22:40.110
test driven development straight forward
in all of them, but

482
00:22:40.110 --> 00:22:41.430
when do you get it
out of the box? I

483
00:22:41.430 --> 00:22:44.940
mean, I, can you go
file new app with tests

484
00:22:44.970 --> 00:22:47.070
and it sets you up
like this hello world, come

485
00:22:47.070 --> 00:22:52.740
with tests on these three
different devices On the iPhone

486
00:22:52.740 --> 00:22:55.410
side. If you're using X
code, it will prompt you

487
00:22:55.470 --> 00:22:57.660
and say, do you want
this project set up for

488
00:22:57.660 --> 00:22:59.880
testing? So really out of
the box, that's pretty much

489
00:22:59.880 --> 00:23:01.680
the only one that's going
to have it all set

490
00:23:01.680 --> 00:23:03.960
up for you, file new
project. And does that, is

491
00:23:03.960 --> 00:23:06.120
that something that you missed,
like, was that a big

492
00:23:06.810 --> 00:23:08.580
a tax that you paid
to go and say, I

493
00:23:08.580 --> 00:23:10.920
want to find out how
to, how, how one tests?

494
00:23:11.850 --> 00:23:14.340
Cause I know it's a
good question. W with each

495
00:23:14.340 --> 00:23:17.310
of these communities, do they
value unit testing as, as

496
00:23:17.310 --> 00:23:19.800
a tenant? Yeah. And of
course I came after the

497
00:23:19.800 --> 00:23:23.370
Microsoft community there just because,
you know, my experience on

498
00:23:23.370 --> 00:23:26.010
the Microsoft stack is more
of like an 80, 20,

499
00:23:26.010 --> 00:23:29.100
there's certainly a 20% that,
you know, they're the hardcore

500
00:23:29.100 --> 00:23:32.970
TDD crowd. They're very loud,
but there's a good 80%

501
00:23:32.970 --> 00:23:35.280
that could care less. Or,
you know, and I'm not

502
00:23:35.280 --> 00:23:37.530
even a purist in that
sense. Chester and development is

503
00:23:37.530 --> 00:23:40.740
just my style of choice.
And for me, I just

504
00:23:40.740 --> 00:23:43.800
want Microsoft in that community
obviously to see the value

505
00:23:43.800 --> 00:23:46.640
of the beginner, kind of
the express edition of the

506
00:23:46.640 --> 00:23:49.250
micro ISV, I would like
to give a little more

507
00:23:49.250 --> 00:23:51.710
support to that person, obviously.
But like you said, it's

508
00:23:51.710 --> 00:23:56.000
not that the eclipse or
the, the intelligent experience is

509
00:23:56.000 --> 00:23:58.700
much better out of the
box. So I probably can't

510
00:23:58.700 --> 00:24:00.950
complain too much. I just
feel like some of the

511
00:24:01.190 --> 00:24:03.560
pain that I went through
wasn't really helped out by

512
00:24:03.560 --> 00:24:06.170
the community. So of course
I tried to do my

513
00:24:06.170 --> 00:24:08.270
part and I actually did
kind of a short screencast

514
00:24:08.270 --> 00:24:10.250
that just says, look, if
you have a file new

515
00:24:10.250 --> 00:24:12.710
project on windows phone, here's
how you get an unit

516
00:24:12.710 --> 00:24:15.740
up and running. And another
issue I had is actually

517
00:24:15.770 --> 00:24:19.970
not Microsoft's fault, but it's
a JetBrains. Their latest ReSharper

518
00:24:20.060 --> 00:24:22.430
plugin actually has a bug
in it. Where when you

519
00:24:22.430 --> 00:24:25.040
go to run these Silverlight
tests, the test, the test

520
00:24:25.040 --> 00:24:27.590
runner just goes gray. Like
it doesn't know what you're

521
00:24:27.590 --> 00:24:29.900
talking about. So I actually
did some research there and

522
00:24:29.900 --> 00:24:32.870
there's actually a bug with
jet. So hopefully they fix

523
00:24:32.870 --> 00:24:34.820
it. But in the short
term, I had to kind

524
00:24:34.820 --> 00:24:37.190
of uninstalled jet brain or
the ReSharper six plugin, go

525
00:24:37.190 --> 00:24:40.580
back, go back to an
old, I think some version

526
00:24:40.580 --> 00:24:43.130
of five and five actually
was able to run that.

527
00:24:43.130 --> 00:24:46.060
So, So I'm hearing a
lot of anecdotes from you

528
00:24:46.060 --> 00:24:48.910
about, you know, this seemed
like a good idea when

529
00:24:48.910 --> 00:24:51.870
I plugged that tool into
this tool, this tool, it,

530
00:24:51.870 --> 00:24:54.850
it didn't quite work out.
So you, you you're hitting

531
00:24:54.880 --> 00:24:57.520
speed bumps that are kind
of typical software engineering, speed

532
00:24:57.520 --> 00:25:01.130
bumps where things didn't quite
plug in in the, in

533
00:25:01.130 --> 00:25:05.410
the magical way that one
thought that would, Yeah, no,

534
00:25:05.410 --> 00:25:07.270
that's true. You know, and
that's going to be any

535
00:25:07.270 --> 00:25:09.550
new platform, right. So it's
certainly not going to come

536
00:25:09.550 --> 00:25:11.350
out of the box and
have an app delivered in

537
00:25:11.350 --> 00:25:14.590
two days, right? Yeah, definitely.
Yeah. I mean that, I

538
00:25:14.590 --> 00:25:17.290
mean, I keep these presentations
and I give these keynotes

539
00:25:17.290 --> 00:25:18.940
and it always looks like
you can build an app

540
00:25:18.970 --> 00:25:22.390
in five minutes, but only
if everything works exactly perfectly.

541
00:25:22.420 --> 00:25:25.030
Right. Yeah. And that's never
the case, as we know.

542
00:25:25.030 --> 00:25:26.830
So, you know, I just
tried to do kind of

543
00:25:26.830 --> 00:25:29.800
my part as I was
learning this stuff and give,

544
00:25:29.830 --> 00:25:31.240
you know, kind of give
back in that way to

545
00:25:31.240 --> 00:25:34.090
say, look, here's some serious
issues I had and I

546
00:25:34.090 --> 00:25:36.010
just kind of took a
short screencast to say, this

547
00:25:36.010 --> 00:25:38.080
is how I solved it.
So that I feel like

548
00:25:38.080 --> 00:25:40.750
at least I'm a very
visual learner and I've watched

549
00:25:40.750 --> 00:25:42.400
a lot of screencasts in
the last couple of years.

550
00:25:42.400 --> 00:25:43.810
And I just feel like
I get a lot more

551
00:25:43.810 --> 00:25:47.620
value from those. So, right.
Well, you've got these screencasts

552
00:25:48.070 --> 00:25:50.590
of screencast of blue flicks
in action, and you can

553
00:25:50.590 --> 00:25:52.930
kind of see what it
looks like on an Android.

554
00:25:53.290 --> 00:25:57.160
And it looks like a
fairly straightforward looking application. It's

555
00:25:57.160 --> 00:26:01.000
got a list. And within
that list, you've got movie

556
00:26:01.000 --> 00:26:03.730
posters information about the movies
that you might want to

557
00:26:03.730 --> 00:26:07.600
register and bingo pick up
at a, at a kiosk

558
00:26:07.600 --> 00:26:11.170
location. You do some GPS
work when you're laying out

559
00:26:11.170 --> 00:26:13.510
a page like this. Did
you lay out the three

560
00:26:13.510 --> 00:26:16.780
different applications on the three
different, three different phones to

561
00:26:16.780 --> 00:26:19.210
look identical? Or did you
think I want this to

562
00:26:19.210 --> 00:26:21.400
look very iPhone and I
want this to look very

563
00:26:21.400 --> 00:26:25.720
windows phony. That's yeah, that's
a great question. I initially,

564
00:26:25.720 --> 00:26:27.760
when I finished the iPhone
app, I thought this is

565
00:26:27.760 --> 00:26:30.550
perfect, right? This is exactly
what people want. It kind

566
00:26:30.550 --> 00:26:34.120
of mirrored the red box
experience because blockbuster express is

567
00:26:34.120 --> 00:26:36.610
kind of a clone of
red box. And so I

568
00:26:36.610 --> 00:26:39.190
kind of had a guide
to go from there when

569
00:26:39.220 --> 00:26:41.440
I finally shipped the iPhone
app. And I thought, you

570
00:26:41.440 --> 00:26:43.620
know what, maybe I'll make
the Android app. Now I

571
00:26:43.620 --> 00:26:47.340
did go in with that
mindset that Whoa, I'm shipping

572
00:26:47.340 --> 00:26:50.220
the exact same product. It's
just on another platform. It

573
00:26:50.220 --> 00:26:53.160
must look identical. I mean,
I need images to be

574
00:26:53.160 --> 00:26:56.070
the same, et cetera. And
what I found was, you

575
00:26:56.070 --> 00:26:59.070
know, how many people who
are using my iPhone product

576
00:26:59.070 --> 00:27:01.500
today also are using the
Android product or the windows

577
00:27:01.500 --> 00:27:05.490
phone products. Yeah, exactly. I
mean, if people only have

578
00:27:05.490 --> 00:27:08.670
one primary phone, so I
got less concerned about that

579
00:27:08.700 --> 00:27:11.700
and just kind of went
with whatever looks good on

580
00:27:11.700 --> 00:27:15.540
the platform. In fact, on
the Android side specifically, I

581
00:27:15.540 --> 00:27:20.070
just completely scrapped using custom
PNG images because the different

582
00:27:20.070 --> 00:27:22.920
resolutions, I just had such
a poor experience with that,

583
00:27:22.920 --> 00:27:24.960
that I finally said, you
know what, I'll use native

584
00:27:24.960 --> 00:27:28.200
controls and just color them
red or blue, whatever, because

585
00:27:28.230 --> 00:27:31.170
the image, I just wasn't
comfortable shipping images to all

586
00:27:31.170 --> 00:27:33.960
these different resolutions that kind
of, you know, unless you

587
00:27:33.960 --> 00:27:36.750
have about 60 phones, you
can't really be confident on

588
00:27:36.750 --> 00:27:38.220
the web on the Android
side. You know, I kind

589
00:27:38.220 --> 00:27:41.250
of joke that it's the
<inaudible> of mobile development, because

590
00:27:41.250 --> 00:27:43.200
that's how it feels when
I'm actually working on a

591
00:27:43.200 --> 00:27:46.550
UI for Android right now,
Things out, I know that

592
00:27:46.550 --> 00:27:49.640
on windows, phone, seven, you're
using XAML, which is an

593
00:27:49.640 --> 00:27:53.270
XML markup language. And I
seem to remember, you know,

594
00:27:53.270 --> 00:27:56.420
layout systems or layout systems.
I was working at Nike

595
00:27:56.420 --> 00:28:01.040
and about 90, 97 or
99 on Java, you know,

596
00:28:01.040 --> 00:28:04.010
and it was a grid
layouts and call spans and

597
00:28:04.010 --> 00:28:06.020
things like that. I mean,
layouts or layouts, whether or

598
00:28:06.020 --> 00:28:08.330
not they're elastic or not,
and things like that. So

599
00:28:08.330 --> 00:28:11.720
it was this XAML and
XML markup is markup. How

600
00:28:11.720 --> 00:28:14.540
do you lay out a,
an iPhone application? What's that

601
00:28:14.540 --> 00:28:19.430
layout look like? Yeah, so
the, the iPhone side was

602
00:28:19.550 --> 00:28:23.780
a little different. I initially
started doing my objective C

603
00:28:23.780 --> 00:28:26.600
views in all objective C.
So I wouldn't even use

604
00:28:26.600 --> 00:28:29.480
the layout tooling called interface
builder. I just kind of

605
00:28:29.480 --> 00:28:31.910
said, I don't trust cause
it's a kind of a

606
00:28:31.910 --> 00:28:34.430
drag and drop tool. I
said, I don't trust, drag

607
00:28:34.430 --> 00:28:36.650
and drop that's the devil,
you know, I'm going to,

608
00:28:36.650 --> 00:28:38.330
I'm going to hand code
this, like, you know, the

609
00:28:38.330 --> 00:28:41.210
real programmer I am. And
I kind of found that,

610
00:28:41.240 --> 00:28:43.310
you know, in addition to
being a lot more code

611
00:28:43.700 --> 00:28:45.920
the, the drag and drop
stuff on the front end

612
00:28:45.920 --> 00:28:50.060
for the iPhone, really isn't
Bucky, you know, there's no

613
00:28:50.060 --> 00:28:52.550
real issues. I feel like
I was jaded again, this

614
00:28:52.550 --> 00:28:55.550
comes from my unlearning, but
in my early dotnet days,

615
00:28:55.550 --> 00:28:57.770
I was doing drag and
drop web forms, sort of

616
00:28:57.770 --> 00:29:00.500
development. And I remember some
of the dragon drop stuff

617
00:29:00.500 --> 00:29:02.600
where I would kind of
bring an Ajax toolkit down

618
00:29:02.600 --> 00:29:05.210
and compile and then ship
it. And then the next

619
00:29:05.210 --> 00:29:07.370
day, my coworker next to
me would say, Hey, you

620
00:29:07.370 --> 00:29:08.630
know, I went to the
web page and it says,

621
00:29:08.630 --> 00:29:11.060
I'm missing this DLL or
this component. And I'm like,

622
00:29:11.300 --> 00:29:13.400
how's that possible? I just
drag that on there and

623
00:29:13.450 --> 00:29:15.380
it should have just compiled
it, you know? So I

624
00:29:15.380 --> 00:29:17.660
kind of was a distrusting
of drag and drop, but

625
00:29:17.660 --> 00:29:20.450
I found the iPhone experience
was really nice because in

626
00:29:20.450 --> 00:29:23.480
addition to just dragging stuff
on the form, it also

627
00:29:23.480 --> 00:29:25.430
gave me a better idea
of what it looked like

628
00:29:25.460 --> 00:29:28.910
in the previous setting. And
I never saw from my

629
00:29:28.940 --> 00:29:32.750
limited experience, I never saw
a view look differently in

630
00:29:32.750 --> 00:29:34.970
the simulator or on a
real phone compared to what

631
00:29:34.970 --> 00:29:36.800
I thought it was gonna
look like. So it was

632
00:29:36.800 --> 00:29:39.670
very accurate. I just never
had any issues. So, So,

633
00:29:39.670 --> 00:29:43.120
so Microsoft's failure in the
past for some drag and

634
00:29:43.120 --> 00:29:46.900
drop things ended up jading
you against dragon drop and

635
00:29:46.900 --> 00:29:50.130
the iPhone layout dragging up
works very well. Yeah. It's

636
00:29:50.130 --> 00:29:52.650
yeah, it's definitely very white.
I honestly don't understand the

637
00:29:52.650 --> 00:29:55.440
deep underpinnings of it all,
but for, for a kind

638
00:29:55.440 --> 00:29:57.360
of a, you know, someone
who wants to ship an

639
00:29:57.360 --> 00:29:59.940
app was the view I
went in with. It was,

640
00:30:00.060 --> 00:30:02.010
it was awesome. I really
didn't have any problems with

641
00:30:02.010 --> 00:30:03.870
th the, the real issues
I had as far as

642
00:30:04.080 --> 00:30:06.960
layouts on any of the
platforms was on the Android

643
00:30:06.960 --> 00:30:09.750
side. And when I was
doing my Android development a

644
00:30:09.750 --> 00:30:12.930
couple months ago, the only
product that even offered a

645
00:30:12.930 --> 00:30:16.620
preview was some version of
eclipse at the time. And

646
00:30:16.620 --> 00:30:19.440
of course I was using
Intelijay. So I didn't have

647
00:30:19.440 --> 00:30:21.630
a single preview. So literally
when I was building my

648
00:30:21.630 --> 00:30:24.720
app and intelligent, I'm just
writing XML. I have no

649
00:30:24.720 --> 00:30:26.970
idea what this is going
to look like. And if

650
00:30:26.970 --> 00:30:29.490
you remember the painful days
of early web development, pre

651
00:30:29.490 --> 00:30:32.250
jQuery and all that good
stuff, you'd have, you know,

652
00:30:32.460 --> 00:30:34.500
a ton of different browsers
open. And every time you

653
00:30:34.500 --> 00:30:36.660
kind of push a new
CSS file or whatever, you

654
00:30:36.660 --> 00:30:38.820
go refresh them all and
make sure it wasn't broken.

655
00:30:39.090 --> 00:30:41.550
That's kind of how it
felt like doing Android view

656
00:30:41.550 --> 00:30:45.150
development except much worse because
that preview, you had to

657
00:30:45.150 --> 00:30:48.030
actually either a load, the
emulator to go see what

658
00:30:48.030 --> 00:30:50.100
it looks like. And you
want to talk about slow

659
00:30:50.100 --> 00:30:51.990
feedback. You know, the, the
older I get in the

660
00:30:51.990 --> 00:30:55.290
software world, the more I'm
starting to value fast feedback,

661
00:30:55.320 --> 00:30:56.850
you know, the, the projects
I've been on that have

662
00:30:56.850 --> 00:30:59.400
either failed or not done
very well have been because

663
00:30:59.400 --> 00:31:02.940
feedback got so expensive that
what a developers do, they

664
00:31:02.940 --> 00:31:06.210
start taking shortcuts, right. I
can't change one variable and

665
00:31:06.210 --> 00:31:08.340
check it because it's too
expensive. I'll change two or

666
00:31:08.340 --> 00:31:11.280
three hope that I got
everything just right. Well, that

667
00:31:11.280 --> 00:31:13.170
obviously eats up more time
because if you actually have

668
00:31:13.170 --> 00:31:15.810
a bug, you don't know
which of those three changes

669
00:31:15.930 --> 00:31:18.750
actually introduced it. So that's
kind of the experience. In

670
00:31:18.750 --> 00:31:21.540
fact, when I did the
Iowa code camp apps recently,

671
00:31:21.930 --> 00:31:24.720
I remember putting off the
Android app till very, very

672
00:31:24.720 --> 00:31:27.570
last because of, I just
had this gut reaction. I

673
00:31:27.570 --> 00:31:29.070
was like, Oh, I don't
want to do that view

674
00:31:29.070 --> 00:31:32.910
development. It's so time consuming.
So, Okay. So last two

675
00:31:32.910 --> 00:31:36.540
questions then publishing, was it
pretty straightforward to get these

676
00:31:36.540 --> 00:31:40.770
three apps into the three
stores? Yeah. Publishing, I really

677
00:31:40.770 --> 00:31:43.470
beat up on the, the
iPhone experience because as someone

678
00:31:43.470 --> 00:31:47.040
new to iOS 10 and
obviously someone new to iPhone

679
00:31:47.040 --> 00:31:51.120
development, it was the most
confusing process to after I

680
00:31:51.120 --> 00:31:54.210
had the app built, get
it kind of DRM and

681
00:31:54.210 --> 00:31:57.390
shipped up to Apple because
for one, I was not

682
00:31:57.390 --> 00:31:58.590
in the last 10 years
or so, I didn't really

683
00:31:58.590 --> 00:32:02.250
understand how certificates and all
that stuff worked, but I

684
00:32:02.250 --> 00:32:05.130
honestly remember phoning a friend
of mine saying, Hey, I'm

685
00:32:05.130 --> 00:32:06.690
at the point where I
think I'm just not going

686
00:32:06.690 --> 00:32:08.730
to sell this iPhone app
right now, because it's so

687
00:32:08.730 --> 00:32:11.130
hard. You know, he's like,
I thought learning objective, see

688
00:32:11.130 --> 00:32:14.130
what's hard. And, you know,
really publishing the app was

689
00:32:14.400 --> 00:32:17.550
very difficult from that whole
certificate standpoint thing. And again,

690
00:32:17.550 --> 00:32:20.310
I did a screencast recently
to help other people who

691
00:32:20.310 --> 00:32:21.960
are just like, what in
the world do I need

692
00:32:21.960 --> 00:32:24.120
to do to get this
thing in the store? But

693
00:32:24.120 --> 00:32:27.090
in addition to that, of
course, the rumors about very

694
00:32:27.090 --> 00:32:30.300
tough certifications, you know, they
hold true Apple. I think

695
00:32:30.300 --> 00:32:31.860
the first month I tried
to get my app in

696
00:32:31.860 --> 00:32:33.930
the store, I got rejected
six or seven times. It

697
00:32:33.930 --> 00:32:36.720
was just a beat down
For what kind of stuff.

698
00:32:36.750 --> 00:32:39.000
What kind of, why would
you get rejected? You know,

699
00:32:39.020 --> 00:32:41.420
it's probably mostly my Fault.
One of the very simple

700
00:32:41.420 --> 00:32:43.490
ones, which, you know, if
I maybe had done my

701
00:32:43.490 --> 00:32:46.610
research was that when you
launch an app and you're

702
00:32:46.610 --> 00:32:48.350
in airplane mode, so to
speak where you don't have

703
00:32:48.350 --> 00:32:51.650
any wifi, or you don't
have any network connectivity, you

704
00:32:51.650 --> 00:32:53.330
can't just let the app
kind of sit there and

705
00:32:53.330 --> 00:32:59.360
spin so to speak. So
I obviously didn't know that

706
00:32:59.360 --> 00:33:02.030
because it was my, my
first app, my first rejection

707
00:33:02.030 --> 00:33:04.790
actually. And so I was
like, okay, you know, and

708
00:33:04.790 --> 00:33:07.280
I eventually worked through all
those issues. And one thing

709
00:33:07.280 --> 00:33:10.430
I will give Apple credit
for is they're very consistent.

710
00:33:10.610 --> 00:33:12.950
So if they go through
and find, you know, three

711
00:33:12.950 --> 00:33:15.620
things this time, and I
fix those three things it's

712
00:33:15.620 --> 00:33:17.450
done, as long as they
do it correctly, it's done.

713
00:33:17.450 --> 00:33:19.520
And they ship it. One
of the pains I had

714
00:33:19.520 --> 00:33:22.070
on the windows phone side
was that they weren't very

715
00:33:22.070 --> 00:33:24.590
consistent. Like I would, I
would submit it and they'd

716
00:33:24.590 --> 00:33:27.560
be like, great, good job,
mr. Developer, here you go.

717
00:33:27.770 --> 00:33:29.270
And they'd be like, Oh,
cool. Well then the next

718
00:33:29.270 --> 00:33:31.910
time I submit like the
smallest bug, they find like

719
00:33:31.910 --> 00:33:33.890
six things that were wrong
with it the first time,

720
00:33:33.890 --> 00:33:36.920
but I didn't find, so
it was very weird because

721
00:33:36.920 --> 00:33:40.040
I sometimes, you know, there's
no more, you know, there's

722
00:33:40.040 --> 00:33:43.220
no more heartbreak for a
developer then. No. Right. So

723
00:33:43.220 --> 00:33:45.200
when you're working on this
app for X amount of

724
00:33:45.200 --> 00:33:46.670
hours and you go to
ship it, all you want

725
00:33:46.670 --> 00:33:49.220
to see is approved, good
job. You're going to start

726
00:33:49.220 --> 00:33:52.130
making money. So when I,
you know, those two, both

727
00:33:52.130 --> 00:33:54.200
the Apple side and the
Microsoft side, when you get

728
00:33:54.200 --> 00:33:57.020
that first rejection, it was
just very heartbreaking for me

729
00:33:57.020 --> 00:33:59.090
as, as you know, you
can revoke my man card,

730
00:33:59.090 --> 00:34:01.420
but it was a sad
day. So, All right. So

731
00:34:01.420 --> 00:34:03.340
in closing, let's talk about
money. How are we doing?

732
00:34:03.370 --> 00:34:06.040
How are we selling these
things? Yeah. You know, the

733
00:34:06.040 --> 00:34:08.710
sales side, I kind of
looked at it from two

734
00:34:08.710 --> 00:34:11.380
angles. One, how much money
am I actually making? And

735
00:34:11.380 --> 00:34:14.980
two what's the community or
the people, the consumers like

736
00:34:14.980 --> 00:34:18.100
in those ecosystems. And as
far as Ross sales, I've

737
00:34:18.100 --> 00:34:21.100
obviously made the most money
on the iPhone side. Not

738
00:34:21.400 --> 00:34:23.560
necessarily to beat up on
Android or windows phone because

739
00:34:23.590 --> 00:34:26.020
I did the iPhone first
way back in March. So

740
00:34:26.020 --> 00:34:27.820
I've had a lot more
time to do sales, but

741
00:34:27.820 --> 00:34:31.390
on a month to month
basis, I probably sell, I

742
00:34:31.390 --> 00:34:34.630
don't know, maybe four or
five times the iPhone apps

743
00:34:34.630 --> 00:34:37.270
that I do at windows
phone. And on the Android

744
00:34:37.270 --> 00:34:39.340
side, I've been kind of
surprised. I haven't even made

745
00:34:39.340 --> 00:34:41.770
my money back for, you
know, kind of the phones

746
00:34:41.780 --> 00:34:43.600
I had to buy to
do some testing and to

747
00:34:43.600 --> 00:34:46.750
actually pay the $25. Because
the, what I've found about

748
00:34:46.750 --> 00:34:49.810
the Android market is unlike
iPhone and windows phone, where

749
00:34:49.810 --> 00:34:51.820
it's like, Hey, the app's
not even five bucks, it's

750
00:34:51.820 --> 00:34:54.490
cheap. Right. That's just how
the community feels. And I

751
00:34:54.490 --> 00:34:56.470
talked to my wife and
her friends and other people

752
00:34:56.470 --> 00:34:58.480
in the community. It's like,
Hey, you know, stop five

753
00:34:58.480 --> 00:35:00.430
bucks. It can't be that
bad. But people on the

754
00:35:00.430 --> 00:35:03.130
Android side who traditionally are,
you know, are known for

755
00:35:03.130 --> 00:35:05.740
not paying for apps. I
found they will pay for

756
00:35:05.740 --> 00:35:07.990
apps, but they've got to
find a lot of value.

757
00:35:07.990 --> 00:35:11.230
So for instance, I have
a, usually a spike in

758
00:35:11.230 --> 00:35:15.400
my sales when the Android
Redbox app is crashing or

759
00:35:15.400 --> 00:35:17.860
broken, because people just want
to reserve a movie. At

760
00:35:17.860 --> 00:35:20.020
that point, they have no
brand loyalty. They're like, forget

761
00:35:20.020 --> 00:35:21.370
it. I just want, you
know, I just want to

762
00:35:21.370 --> 00:35:23.320
go out and actually rent
this movie. I'll, I'll pick

763
00:35:23.320 --> 00:35:26.470
this up on, you know,
on blockbuster tonight. So Interesting.

764
00:35:26.470 --> 00:35:28.090
I heard this similar things
for the guy that made

765
00:35:28.090 --> 00:35:30.640
angry birds that remember they
gave angry birds away on

766
00:35:30.640 --> 00:35:33.820
Android because there's like no
Android developers, Android users rather

767
00:35:33.820 --> 00:35:35.710
will never pay for anything.
So you're right. There is

768
00:35:35.710 --> 00:35:39.090
a definite feel in the
different, the different on stores.

769
00:35:39.630 --> 00:35:42.060
So people can check out
your application at a, at

770
00:35:42.060 --> 00:35:46.290
blue flicks app.com and your
website is torn billups.com. I'll

771
00:35:46.290 --> 00:35:48.660
put both of those in
the show, show notes, as

772
00:35:48.660 --> 00:35:52.220
well as your complete mobile
development report card. Yeah. You

773
00:35:52.220 --> 00:35:54.500
could probably also include my,
I actually have a red

774
00:35:54.500 --> 00:35:57.110
box app for windows phone.
It's the only red box

775
00:35:57.110 --> 00:35:59.240
out there today. Cause the,
the parent company has a

776
00:35:59.250 --> 00:36:01.940
built an official red box
app yet. All right, cool.

777
00:36:01.940 --> 00:36:03.290
We'll put all of that
in the, in the show

778
00:36:03.290 --> 00:36:06.050
notes. And of course, people
can read about this on

779
00:36:06.050 --> 00:36:08.360
your blog and, and pick
on you in the, in

780
00:36:08.360 --> 00:36:11.990
the country. Nice. Sounds good.
Thanks a lot. This has

781
00:36:11.990 --> 00:36:15.230
been another episode of Hansel
minutes. We'll see you again

782
00:36:15.230 --> 00:36:15.800
next week.

