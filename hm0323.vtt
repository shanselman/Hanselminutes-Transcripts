WEBVTT FILE

1
00:00:04.920 --> 00:00:16.830
<inaudible> from hanselminutes.com. It's Hansel
minutes, our weekly discussion with

2
00:00:16.830 --> 00:00:21.390
web developer and technologist Scott
Hanselman. This is Lawrence Ryan announcing

3
00:00:21.390 --> 00:00:27.390
show number three 25. Recorded
live Thursday, June 21st, 2012. Support for

4
00:00:27.390 --> 00:00:30.630
Hanselman. This is provided by
Tellerik offering the best of

5
00:00:30.630 --> 00:00:34.440
developer tools and support online.
Add T E L E

6
00:00:34.440 --> 00:00:39.510
R I k.com and by
franklins.net training developers to work

7
00:00:39.510 --> 00:00:43.590
smarter and now offering gesture
pack a powerful gesture, recording

8
00:00:43.590 --> 00:00:47.910
and recognition system for Microsoft
connect for windows developers details,

9
00:00:47.910 --> 00:00:52.230
app gesture, PA k.com. In
this episode, Scott talks with

10
00:00:52.260 --> 00:00:59.070
Damien Edwards about the latest
updates to asp.net 4.5. Hi,

11
00:00:59.070 --> 00:01:01.080
this is Scott Hanselman. This
is another episode of Hansel

12
00:01:01.080 --> 00:01:03.120
minutes. And today on the
show I've got Damien Edwards.

13
00:01:03.150 --> 00:01:05.550
How's it going, sir? I'm
well, how are you? Good.

14
00:01:05.580 --> 00:01:07.380
You have been all over
the world. You just got

15
00:01:07.380 --> 00:01:09.720
back from Europe or where
did you get back from?

16
00:01:10.080 --> 00:01:14.070
I was in Oslo for
NDC, the Norwegian developers conference

17
00:01:14.070 --> 00:01:16.290
for a week, and then
I flew direct from there

18
00:01:16.290 --> 00:01:20.370
via London to Orlando for
ticket us. And what did

19
00:01:20.370 --> 00:01:25.710
you present on? So in
Norway, I presented on asp.net

20
00:01:25.710 --> 00:01:28.500
for top five what's in
the box and then a

21
00:01:28.500 --> 00:01:32.790
signaler. And I also did
a NDC cage match with

22
00:01:32.790 --> 00:01:36.330
signal with Rob Connery and
John Galloway, where we get signal

23
00:01:36.330 --> 00:01:38.340
out versus a socket IO,
which was a lot of

24
00:01:38.340 --> 00:01:43.080
fun. And then in Orlando,
I presented on asp.net, loves

25
00:01:43.080 --> 00:01:47.790
HTML five asp.net or its
mobile and tablet development phrase,

26
00:01:47.790 --> 00:01:50.880
be.net. And then again on
signaler. Wow. That's a lot

27
00:01:50.880 --> 00:01:53.220
of presenting who would have
signed you up for so

28
00:01:53.220 --> 00:01:56.430
many presentations. I cannot possibly
imagine who would have told

29
00:01:56.430 --> 00:02:00.180
me I had to do
those presentations. I appreciate that.

30
00:02:00.180 --> 00:02:03.570
You're doing those though. Yeah.
Yeah. I mean, I, to

31
00:02:03.570 --> 00:02:06.810
be totally honest, I generally
don't like doing talks that

32
00:02:06.810 --> 00:02:10.470
I didn't write myself. Yeah.
But those two talks, I

33
00:02:10.470 --> 00:02:12.930
did it take, it went
over really well and they

34
00:02:12.930 --> 00:02:17.700
actually scored amazingly. I had
880 people at the HTML

35
00:02:17.700 --> 00:02:20.430
five talk, which blew me
away. And then the mobile

36
00:02:20.430 --> 00:02:24.690
talk said I had 1300
people, but I think the

37
00:02:24.690 --> 00:02:27.420
room only sat six 50.
So I don't know where

38
00:02:27.420 --> 00:02:30.600
the other 700 odd people
were unless there was an

39
00:02:30.600 --> 00:02:33.060
overflow room, but I'll take
it. Right. And those are

40
00:02:33.060 --> 00:02:35.790
talks that the mobile one
I've done before. And Steve

41
00:02:35.790 --> 00:02:39.420
Sanderson did those demos. Did
you? And I know that.

42
00:02:39.600 --> 00:02:41.010
I know what you're saying.
Like I don't like doing

43
00:02:41.010 --> 00:02:43.950
talks that someone else wrote
either. Except if that Steve

44
00:02:43.950 --> 00:02:46.470
Sanderson. Yeah. Well, if someone
else has done the hard

45
00:02:46.470 --> 00:02:48.750
work and make you look
good, then I can't really

46
00:02:48.750 --> 00:02:52.110
complain Kevin. Yeah, exactly. Exactly.
Well, I just got back

47
00:02:52.110 --> 00:02:56.550
from the Phoenix day of
the GU Scott goo has

48
00:02:56.550 --> 00:02:58.350
been going down to Phoenix
for the last seven or

49
00:02:58.350 --> 00:03:02.290
eight years and They've, they've
expanded it to anyone named

50
00:03:02.290 --> 00:03:06.030
Scott. Oh, nice. So Scott Brady
gastro. Yeah. Scott, Brady, guests,

51
00:03:07.830 --> 00:03:11.400
and anyone else who chooses
to change their name to

52
00:03:11.400 --> 00:03:12.540
be a part of the
event. So that was cool.

53
00:03:12.540 --> 00:03:14.910
And we did a thousand
or 1200 people in a

54
00:03:14.910 --> 00:03:18.720
big art house and it
was cool. And I know

55
00:03:18.720 --> 00:03:20.040
if some people think that
we're out there kind of

56
00:03:20.040 --> 00:03:22.290
beating the drum and trying
to get the word out,

57
00:03:22.350 --> 00:03:24.150
that's one way to do
it. But I think they

58
00:03:24.150 --> 00:03:26.940
forget that, you know, when,
when 50,000 people read your

59
00:03:26.940 --> 00:03:30.540
blog every day, a thousand
people in person, that's not

60
00:03:30.540 --> 00:03:32.850
the best way to get
the word out, but it's

61
00:03:32.850 --> 00:03:36.180
the conversations afterwards. That's, what's
useful. It's not just the

62
00:03:36.180 --> 00:03:40.530
talks. It's the, it's the
showing them new stuff, really

63
00:03:40.530 --> 00:03:43.290
new stuff, which we are
now, we now, and actually

64
00:03:43.290 --> 00:03:44.790
for the last few years,
I've been allowed to do

65
00:03:44.790 --> 00:03:47.940
daily builds and then finding
out what they really think

66
00:03:47.940 --> 00:03:50.790
about it. I ha I've
been actually segmenting my talks

67
00:03:50.790 --> 00:03:54.900
up a little bit lately
by developer. So I'll go

68
00:03:54.970 --> 00:03:57.300
or, you know, by developer
of the technology. So I'll

69
00:03:57.300 --> 00:04:00.090
go and say, you know,
here's what Mads Christianson's been

70
00:04:00.090 --> 00:04:02.790
working on. And then I'll
have daily builds of stuff

71
00:04:02.790 --> 00:04:05.370
that Mads will have given
me the day before. Right.

72
00:04:05.580 --> 00:04:06.780
You know what I mean?
And then show him that

73
00:04:06.780 --> 00:04:10.260
and see what they think.
Yeah. Yeah. I showed your

74
00:04:10.730 --> 00:04:14.010
open auth stuff. Yes. Maybe
you can talk about that

75
00:04:14.040 --> 00:04:17.880
because people went bananas for
that. Yes. With a visual

76
00:04:17.880 --> 00:04:23.460
studio, 2012 and.net four, five,
we shipped support for logging

77
00:04:23.490 --> 00:04:27.810
into your website via open
ID or OAuth in the

78
00:04:27.810 --> 00:04:30.960
web pages templates, I think
right back in the first

79
00:04:31.200 --> 00:04:35.850
beader. And since then, obviously
we've, we've always planned to

80
00:04:35.850 --> 00:04:38.610
have the support in not
just web pages, but in

81
00:04:38.610 --> 00:04:40.680
MVC and web forms as
well, but it kept sort

82
00:04:40.680 --> 00:04:43.620
of getting pushed back, pushed
back, pushed back. And so

83
00:04:44.070 --> 00:04:45.990
I can glad to say
that it is going to

84
00:04:45.990 --> 00:04:49.290
be in the RTM release.
And I was lucky enough

85
00:04:49.290 --> 00:04:52.920
to actually do the development
work for making the web

86
00:04:52.920 --> 00:04:57.300
forms, you know, version of
this work. So com RTM

87
00:04:57.450 --> 00:05:00.120
of vs 2012. When you
say file new project, you'll

88
00:05:00.120 --> 00:05:03.300
be able to, by default
in your website, very easily

89
00:05:03.360 --> 00:05:06.540
add support for looking in
via Google or Facebook or

90
00:05:06.540 --> 00:05:09.060
Microsoft account or, you know,
whatever it is. It might

91
00:05:09.060 --> 00:05:11.250
be to any of those
project types, which will be

92
00:05:11.250 --> 00:05:14.460
great When I was showing
that yeah, a couple of

93
00:05:14.460 --> 00:05:17.130
the days ago, one of
the things that I think

94
00:05:17.130 --> 00:05:21.750
is deceptively complex about it
and I, and as someone

95
00:05:21.750 --> 00:05:25.650
who has implemented open ID,
if I remember correctly, I

96
00:05:25.650 --> 00:05:32.370
did it in with open
dotnet open ID in 2006

97
00:05:32.370 --> 00:05:35.130
or 2007 with DAS blog.
And then I used open

98
00:05:35.130 --> 00:05:38.820
off to add Twitter logins
and stuff to near dinner

99
00:05:38.820 --> 00:05:42.240
a couple of years ago.
So it hasn't been super

100
00:05:42.480 --> 00:05:46.740
hard except, and this is
where the deceptively complex part

101
00:05:46.800 --> 00:05:48.990
comes in. I think about
it in the context of

102
00:05:48.990 --> 00:05:53.250
a real world membership system,
right. You're logging in as

103
00:05:53.510 --> 00:05:57.470
a remote, as an external
subscription first and you no

104
00:05:57.470 --> 00:05:59.540
local subscription. And then you,
it, what if you log

105
00:05:59.540 --> 00:06:04.970
in as a internal subscription,
an internal authorization, like I'm,

106
00:06:05.000 --> 00:06:08.390
I'm as Hanselman, let's say
on nerd dinner. And then

107
00:06:08.390 --> 00:06:11.660
I associate external. There's a
lot of permutations there. What

108
00:06:11.660 --> 00:06:14.540
if I remove some, I
mean, how many different scenarios

109
00:06:14.540 --> 00:06:16.040
are there that we have
to handle and make it

110
00:06:16.040 --> 00:06:18.370
all still work with membership?
Yeah, that's a really good

111
00:06:18.370 --> 00:06:20.470
point. I mean, we wanted
to go beyond just doing

112
00:06:20.470 --> 00:06:22.750
the easiest thing, which is,
let me log in with

113
00:06:22.750 --> 00:06:25.900
Twitter because as you rightly
point out, we have an

114
00:06:25.900 --> 00:06:28.390
existing membership system in asp.net,
which a lot of people

115
00:06:28.390 --> 00:06:31.690
use. We have sort of
this simple membership system, which

116
00:06:31.690 --> 00:06:33.820
is kind of an augmenting
version of that, which is

117
00:06:33.820 --> 00:06:37.750
using web pages and the
new version of MVC. So

118
00:06:37.750 --> 00:06:40.510
what does it mean to
add external authentication? So as

119
00:06:40.510 --> 00:06:42.520
you, as you said, I
can come to the side,

120
00:06:42.520 --> 00:06:44.980
having never been to the
site before I can then

121
00:06:44.980 --> 00:06:48.430
choose to log in via
Twitter or Facebook. And now

122
00:06:48.430 --> 00:06:51.940
I have some record on
this website saying that I

123
00:06:51.940 --> 00:06:53.590
can log in via Twitter,
but I don't have a

124
00:06:53.590 --> 00:06:56.350
password for this website, but
I could also be an

125
00:06:56.350 --> 00:06:58.660
existing user that has a
standard username or password. And

126
00:06:58.660 --> 00:07:02.950
then I want to associate
an existing, external credential, like

127
00:07:02.950 --> 00:07:05.800
my Facebook account with that
local credential so that I

128
00:07:05.800 --> 00:07:07.930
can log in with either.
And then at some point

129
00:07:07.930 --> 00:07:10.180
in the future, I may
want to remove my Facebook

130
00:07:10.180 --> 00:07:13.060
association, just leaving the ability
to log in with username

131
00:07:13.060 --> 00:07:16.510
and password. So we added
all of those scenarios so

132
00:07:16.510 --> 00:07:18.610
that you can either be
an existing user that adds

133
00:07:18.610 --> 00:07:21.190
Twitter. You can be just
a Twitter user, then adds

134
00:07:21.190 --> 00:07:24.340
a local password. You can
add more than one external

135
00:07:24.340 --> 00:07:27.160
credentials. So you could have
two Twitter accounts linked to

136
00:07:27.400 --> 00:07:29.950
a local user or a
Twitter and a Facebook account

137
00:07:29.950 --> 00:07:34.030
linked to a local user.
We protect against you deleting

138
00:07:34.030 --> 00:07:37.270
your last way to log
in was an interesting one.

139
00:07:37.690 --> 00:07:40.990
Right? I have a bunch
of externals and you start

140
00:07:40.990 --> 00:07:42.910
removing, Oh, I don't use
Twitter anymore. Oh, I always

141
00:07:42.910 --> 00:07:45.250
don't Facebook anymore. Right. Oh.
But I have no other

142
00:07:45.250 --> 00:07:48.130
way to log into this
site. That was really good.

143
00:07:48.670 --> 00:07:50.800
Yeah. So, I mean, especially
when you think about the

144
00:07:50.800 --> 00:07:53.230
web again, the naive thing
to do with them is

145
00:07:53.230 --> 00:07:56.680
just the, like when we
rendered the page check, if

146
00:07:56.680 --> 00:07:58.540
this is the only as
I check, if they have

147
00:07:58.540 --> 00:08:01.270
a local password and if
they don't check how many

148
00:08:01.270 --> 00:08:04.390
external credentials they've got registered,
and if it's more than

149
00:08:04.390 --> 00:08:07.390
one show the delete button,
but of course this is

150
00:08:07.390 --> 00:08:09.460
the web and things are
asynchronous and happen at the

151
00:08:09.460 --> 00:08:12.220
same time. And there are
often delays. And so you

152
00:08:12.220 --> 00:08:15.340
can easily envisage a scenario
where I have two tabs

153
00:08:15.370 --> 00:08:18.880
open and I've rendered sort
of the managed account page

154
00:08:18.880 --> 00:08:22.000
in both without realizing it.
And I delete one account

155
00:08:22.000 --> 00:08:24.700
from one page and then
I forget, and then, you

156
00:08:24.700 --> 00:08:27.160
know, 50 minutes later, I
come back to the other

157
00:08:27.460 --> 00:08:29.320
tab and I go, Oh
yeah, I was going to

158
00:08:29.320 --> 00:08:31.420
delete this one. And I
delete the other one because

159
00:08:31.420 --> 00:08:34.120
that page is still showing
that I have two accounts,

160
00:08:34.120 --> 00:08:36.700
even though I'd previously deleted
one of them. And then

161
00:08:36.700 --> 00:08:38.740
I delete the other account
and now I have no

162
00:08:38.740 --> 00:08:40.480
way to log in. So
we actually had to do

163
00:08:40.480 --> 00:08:43.330
that in such a way
that it's protected by our

164
00:08:43.330 --> 00:08:46.570
transaction in the database. So
that no matter how you

165
00:08:46.570 --> 00:08:48.220
get to the point where
you want to delete an

166
00:08:48.220 --> 00:08:51.940
account, we absolutely fundamentally prevent
you from deleting your last

167
00:08:51.940 --> 00:08:54.130
way to log in. Cause
it's actually a serialized transaction

168
00:08:54.130 --> 00:08:56.460
in the database. Now this
is something that Sits on

169
00:08:56.460 --> 00:08:59.850
top of membership and a
guy that I was talking

170
00:08:59.850 --> 00:09:02.010
to, and this is, this
is the kind of cool

171
00:09:02.040 --> 00:09:03.690
information and feedback that we
get when we talk to

172
00:09:03.690 --> 00:09:07.170
people in person is he
says, well, I have membership.

173
00:09:07.200 --> 00:09:09.690
Now I have an existing
membership system that really works

174
00:09:09.690 --> 00:09:12.420
fine. The database is there.
It's full, we're doing a

175
00:09:12.420 --> 00:09:14.670
lot of cool stuff with
it. What's what's going to

176
00:09:14.670 --> 00:09:17.640
happen here. I'm gonna, I'm
gonna upgrade to four or

177
00:09:17.640 --> 00:09:20.850
five. And how am I
going to add whatever needs

178
00:09:20.850 --> 00:09:22.680
to be added to my
database? Is there a conversion

179
00:09:22.680 --> 00:09:26.240
process? What we did for?
So as I said, web

180
00:09:26.240 --> 00:09:28.340
forms is a little bit
different. So web pages and

181
00:09:28.340 --> 00:09:32.570
MVC, both uses sync called
simple membership, which sort of

182
00:09:32.570 --> 00:09:36.290
sits on top of membership,
but it also ignores a

183
00:09:36.290 --> 00:09:38.390
big part of the membership
API APIs, because it's an

184
00:09:38.390 --> 00:09:41.600
attempt to sort of redefine
how membership and ESPN on

185
00:09:41.600 --> 00:09:44.660
networks. But if you have
an existing membership system that's

186
00:09:44.660 --> 00:09:48.380
using sort of using an
asp.net membership provider or a

187
00:09:48.380 --> 00:09:51.770
custom provider, you wrote the
way we implemented it in

188
00:09:51.770 --> 00:09:55.490
web forms is we have
a sort of a package

189
00:09:55.490 --> 00:10:00.230
is called Microsoft dot ASP,
net.membership.open off, which allows you

190
00:10:00.230 --> 00:10:03.230
to add open or support
to any asp.net site that

191
00:10:03.230 --> 00:10:06.350
is using the asp.net membership
system. And then what it

192
00:10:06.350 --> 00:10:08.390
does is under the covers,
it takes, it takes a

193
00:10:08.390 --> 00:10:11.360
dependency on dotnet open auth,
which is an open source,

194
00:10:11.390 --> 00:10:13.220
you know, sort of new
get packages for doing open

195
00:10:13.220 --> 00:10:16.220
orphanages, but on natural dinette
in general. And it takes

196
00:10:16.220 --> 00:10:19.280
a dependency on entity framework
and it will create for

197
00:10:19.280 --> 00:10:22.970
you automatically using ETF code.
First, those mapping tables that

198
00:10:22.970 --> 00:10:26.390
are required to map a
local ASP net membership user

199
00:10:26.390 --> 00:10:29.870
to one or more external
accounts. And so if you

200
00:10:29.870 --> 00:10:32.630
had an existing site first,
you would need to, the

201
00:10:32.630 --> 00:10:34.460
easiest thing to do would
be to create a completely

202
00:10:34.460 --> 00:10:38.120
new site. I'm not certainly,
I'm not suggesting you delete

203
00:10:38.120 --> 00:10:39.500
your old one. What I'm
saying is create a new

204
00:10:39.500 --> 00:10:43.460
one in visual studio, use
that to get the assets

205
00:10:43.460 --> 00:10:45.500
that you want for your
resisting site, because there are

206
00:10:45.500 --> 00:10:48.500
some new pages in there,
like manager account. There's a

207
00:10:48.500 --> 00:10:50.690
user control that you can
add that gives you the

208
00:10:50.690 --> 00:10:53.960
buttons login with Twitter login
with Facebook, that type of

209
00:10:53.960 --> 00:10:57.350
stuff, grab those assets out
of there, copy them into

210
00:10:57.350 --> 00:10:59.450
your site and then just
buy a new gate. You

211
00:10:59.450 --> 00:11:02.780
can new get in this
sort of shim package that

212
00:11:02.780 --> 00:11:05.240
will then pull in.net open
or for you. Then you

213
00:11:05.240 --> 00:11:07.040
can, now that you have
all those assets in your

214
00:11:07.040 --> 00:11:09.440
project, you can hook them
up because there's code in

215
00:11:09.440 --> 00:11:11.690
those pages as well. But
does all of the hookup

216
00:11:12.140 --> 00:11:15.620
to those packages in today's
API And what do you

217
00:11:15.620 --> 00:11:19.520
need is an additional table
and a additional column that

218
00:11:19.520 --> 00:11:22.130
hooks that? Yeah. Yeah. So
the way that the membership

219
00:11:22.130 --> 00:11:24.650
one works is that it
doesn't affect the membership tables

220
00:11:24.650 --> 00:11:27.560
themselves. It adds an extra
set of mapping tables, which

221
00:11:27.560 --> 00:11:30.590
it creates for you automatically
using ETF, but there are

222
00:11:30.590 --> 00:11:32.990
properties on those API, so
you can change the table

223
00:11:32.990 --> 00:11:35.240
name and those types of
things. So it's fairly customizable.

224
00:11:35.450 --> 00:11:38.000
Everything's also behind interfaces so
that if you don't want

225
00:11:38.000 --> 00:11:40.700
to use sort of the
easiest set of a, we

226
00:11:40.700 --> 00:11:43.050
have like a multilevel API,
I'm really, I'm, I'm, I'm

227
00:11:43.070 --> 00:11:45.290
a big fan of these
API designs where you have

228
00:11:45.290 --> 00:11:49.250
a fully customizable behind an
interface to port dependent, you

229
00:11:49.250 --> 00:11:51.950
know, supports dependency, injection, and
unit testing, sort of API

230
00:11:51.950 --> 00:11:54.100
level. And then you have
the really brain dead. Just

231
00:11:54.100 --> 00:11:55.720
give me a static class
with a bunch of methods

232
00:11:55.720 --> 00:11:58.150
on it that Coles into
that level. And so the

233
00:11:58.150 --> 00:12:02.130
templates by default use the
static type that has all

234
00:12:02.150 --> 00:12:04.690
the easy methods, but if
you wanted to not use

235
00:12:04.690 --> 00:12:07.450
that and instead go to
the direct, you know, full

236
00:12:07.460 --> 00:12:10.840
unit, testable, fully dependence and
dependency injection sort of supported

237
00:12:10.960 --> 00:12:13.570
level, you could do that
as well. And again, it's

238
00:12:13.570 --> 00:12:15.280
all Casa where you can
set the properties, you can

239
00:12:15.280 --> 00:12:17.950
set the connection string by
default, it'll look at the

240
00:12:17.950 --> 00:12:21.220
connection string for the configure
provider. It'll look, it'll has

241
00:12:21.220 --> 00:12:23.560
a default table name, et
cetera, but you can change

242
00:12:23.560 --> 00:12:28.710
those things. So if we
use web pages or MVC

243
00:12:28.710 --> 00:12:31.530
or web forms, everyone will
have the option to use

244
00:12:31.860 --> 00:12:34.590
open auth to log into
their system. Yeah, yeah, absolutely.

245
00:12:34.860 --> 00:12:37.320
They basically all have feature
parity. Now, the other thing

246
00:12:37.320 --> 00:12:39.840
I wanted to point at
at why it's sort of

247
00:12:40.380 --> 00:12:43.410
more complex at a may
at first seem is that

248
00:12:43.800 --> 00:12:47.580
you're talking about letting people
log into your website and

249
00:12:47.580 --> 00:12:50.820
letting them create accounts on
your website. So that's a

250
00:12:50.820 --> 00:12:53.820
serious, serious security thing that
you're talking about here. And

251
00:12:53.820 --> 00:12:56.460
we did a lot of
work to ensure that we

252
00:12:56.460 --> 00:12:59.220
plug up all of the
holes that we could identify

253
00:12:59.220 --> 00:13:01.980
that could potentially let people
do nefarious things with your

254
00:13:01.980 --> 00:13:04.680
authentication system. Some of the,
some of the really common

255
00:13:04.680 --> 00:13:07.500
things that things like cross
site request forgery or phishing

256
00:13:07.500 --> 00:13:11.250
attacks, where I craft a
special link that I then

257
00:13:11.250 --> 00:13:14.070
get someone else to click.
Now, this may be someone

258
00:13:14.070 --> 00:13:16.470
that I know has an
account on your website, or

259
00:13:16.470 --> 00:13:19.290
I suspect they do, or
they might not even. And

260
00:13:19.290 --> 00:13:21.300
then when they click that
link, I can craft a

261
00:13:21.300 --> 00:13:25.140
post to this website and,
you know, potentially log that

262
00:13:25.140 --> 00:13:28.050
person either in, as me
and then convince them to

263
00:13:28.050 --> 00:13:31.110
enter sensitive information about themselves
into my account so that

264
00:13:31.110 --> 00:13:34.140
now I can see their
sensitive information or perhaps I

265
00:13:34.140 --> 00:13:36.810
convince them to click a
link that associates my Facebook

266
00:13:36.810 --> 00:13:39.630
account with their local accounts.
So now I can log

267
00:13:39.630 --> 00:13:42.180
in as them using my
Facebook account. Those are the

268
00:13:42.180 --> 00:13:44.580
types of things that we
had to protect against now

269
00:13:44.790 --> 00:13:47.820
web pages and MVC has
a built in cross-site request,

270
00:13:47.820 --> 00:13:51.870
forgery protection mechanism, which this
stuff utilizes for web forms.

271
00:13:51.870 --> 00:13:56.220
What we did is we
in the master page, in

272
00:13:56.220 --> 00:13:59.550
the new project template, we
added cross-site request forgery support

273
00:13:59.550 --> 00:14:02.010
to the master page. And
so that all the pages

274
00:14:02.010 --> 00:14:04.770
in the template get the
sort of protections such that

275
00:14:04.770 --> 00:14:07.410
they can't be posted to
from another side, Is that

276
00:14:07.410 --> 00:14:09.660
something we would want to
put in web forms baked

277
00:14:09.660 --> 00:14:12.300
in? It would be, I
mean, again, this is, unfortunately

278
00:14:12.300 --> 00:14:13.980
this was something that we
realized sort of too late.

279
00:14:13.980 --> 00:14:15.570
And we, when we were
building the feature, we're like,

280
00:14:15.570 --> 00:14:17.910
wow, we really need the
support. It's too late to

281
00:14:17.910 --> 00:14:19.800
put it in the runtime,
but let's put it in

282
00:14:19.800 --> 00:14:22.350
the template to show people
we'll aim to secure the

283
00:14:22.350 --> 00:14:24.810
template and B show people
how they can do this

284
00:14:25.050 --> 00:14:27.420
using the existing features that
are in web form. So

285
00:14:27.420 --> 00:14:30.120
we actually utilize features like
view, state, encryption, and view,

286
00:14:30.120 --> 00:14:34.080
state, user keys to ensure
that we can push stuff

287
00:14:34.080 --> 00:14:36.600
into view, state roundtrip it
in a secure fashion so

288
00:14:36.600 --> 00:14:38.400
that we know that the
page came from the server

289
00:14:38.400 --> 00:14:41.820
originally. Yeah, actually I remember
using view state user key

290
00:14:41.820 --> 00:14:45.960
in 2005, 2006, that was
doing, do you say user

291
00:14:45.960 --> 00:14:47.400
K? I actually did a
whole series of blog posts

292
00:14:47.400 --> 00:14:49.950
on it, as I remember
was a really powerful way

293
00:14:49.950 --> 00:14:52.700
to make sure that you
flip a switch and make

294
00:14:52.700 --> 00:14:54.410
things just a little bit
more secure because we were

295
00:14:54.410 --> 00:15:00.140
doing banking sites. Right, right.
Okay, cool. So all that

296
00:15:00.140 --> 00:15:02.630
stuff will be open source
and that'll all be out

297
00:15:02.630 --> 00:15:04.550
of the box so people
can tear it apart, play

298
00:15:04.550 --> 00:15:06.770
with it, change it, do
whatever they want to with

299
00:15:06.770 --> 00:15:09.250
it. Yeah. That's absolutely the
intent. So it'll all be

300
00:15:09.250 --> 00:15:11.080
on new get, they can
pull it into existing pack

301
00:15:11.220 --> 00:15:14.950
into existing projects and hopefully
it's, it's a good example

302
00:15:14.950 --> 00:15:16.570
of how to do this
stuff as well. Okay. So

303
00:15:16.570 --> 00:15:19.180
the other thing that we
both presented on was signal

304
00:15:19.180 --> 00:15:21.310
R and we're going to
be talking about it more

305
00:15:21.310 --> 00:15:24.070
and more as a signal
R was a weekend project

306
00:15:24.070 --> 00:15:27.310
for you and David Fowler. And
now is it going to

307
00:15:27.310 --> 00:15:30.010
become more than a weekend
project? I, It is. It

308
00:15:30.010 --> 00:15:33.340
is. So I think you
announced not that long ago,

309
00:15:33.370 --> 00:15:34.930
one of the conferences you
were at, maybe it was

310
00:15:34.930 --> 00:15:37.570
Russia. I can't remember. I
think it was, yeah, that

311
00:15:37.570 --> 00:15:40.720
we're, we're gonna pull signal
out in. So it's being

312
00:15:40.720 --> 00:15:44.440
promoted from a, when we
have time in our own

313
00:15:44.440 --> 00:15:48.340
time moonlighting project to a
fully funded, fully supported sort

314
00:15:48.340 --> 00:15:53.200
of sub component of the
greater asp.net ecosystem. And so

315
00:15:53.200 --> 00:15:56.080
it's going to be part
of the Microsoft open source

316
00:15:56.110 --> 00:15:58.210
web stack runtime as we
conduct what we like to

317
00:15:58.210 --> 00:16:01.090
call it. So we're just
in the process of starting

318
00:16:01.090 --> 00:16:03.910
that now. So David and
I are just figuring out

319
00:16:03.910 --> 00:16:06.270
what that means. Now it's
sort of spinning up a

320
00:16:06.280 --> 00:16:09.520
local team in the holes
here of building 18 to

321
00:16:09.520 --> 00:16:11.890
start working on that. And
I've literally have on my

322
00:16:11.890 --> 00:16:15.640
desktop open right now, sort
of the executive review, PowerPoint

323
00:16:15.670 --> 00:16:18.280
of the signal, a roadmap
to version one, because that's

324
00:16:18.280 --> 00:16:19.960
what we have to do
now that we're a Microsoft

325
00:16:19.960 --> 00:16:22.240
project. Right. You need to
finish it, we need to

326
00:16:22.240 --> 00:16:24.100
finish it. Right. We can't
just do this now. So

327
00:16:24.100 --> 00:16:26.410
we, we I'm, I'm now
we're now putting together sort

328
00:16:26.410 --> 00:16:28.810
of this road two V
one, and obviously we'll share

329
00:16:28.810 --> 00:16:31.780
this roadmap on publicly very,
very shortly and get feedback

330
00:16:31.780 --> 00:16:33.910
on it. So, So how
does, how does that work?

331
00:16:33.910 --> 00:16:35.980
Is it still going to
be on GitHub and under,

332
00:16:35.980 --> 00:16:38.530
under, I think it's under
Fowler's name or is this,

333
00:16:38.530 --> 00:16:39.520
I mean, how do we
get, how do we get

334
00:16:39.520 --> 00:16:44.320
the word out? That's an
interesting question. So today, yeah.

335
00:16:44.320 --> 00:16:47.200
So today it's a repository
on GitHub. It has its

336
00:16:47.200 --> 00:16:50.710
own organization. We created the
signal out organization on GitHub

337
00:16:50.980 --> 00:16:52.960
of which David and I
are members. And so it

338
00:16:52.960 --> 00:16:56.320
has its own repository and
it, you know, it's actually

339
00:16:56.320 --> 00:17:00.760
the number two watched GitHub
C-sharp repository now, which is

340
00:17:00.760 --> 00:17:02.350
kind of cool. Like it's
great that we've got that

341
00:17:02.350 --> 00:17:05.400
much support on GitHub for
a C sharp report. I'm

342
00:17:05.410 --> 00:17:08.050
actually, I'm just gonna check
again because we we're trying

343
00:17:08.050 --> 00:17:10.360
to get to number one,
but this is one project

344
00:17:10.360 --> 00:17:14.710
above us, which is less
than 50 watches above us.

345
00:17:14.710 --> 00:17:18.250
Right now we're at 1,612
and it's at 1,680 or

346
00:17:18.250 --> 00:17:20.770
something like that. So we're
really, we're sort of chasing

347
00:17:20.770 --> 00:17:23.260
up on these guys. So
it's there at the moment.

348
00:17:24.430 --> 00:17:25.990
I'm not sure if it's
going to stay there or

349
00:17:25.990 --> 00:17:28.120
not. You know, we have
other, the rest of the

350
00:17:28.120 --> 00:17:30.970
open source web stack runtime
is on code Plex. So

351
00:17:30.970 --> 00:17:34.450
that's, you know, web API,
MVC, web pages, razor, all

352
00:17:34.450 --> 00:17:36.820
those things are OncoPLEX. So
I'm not sure whether we

353
00:17:36.820 --> 00:17:38.560
have to move it there
and we're still figuring that

354
00:17:38.560 --> 00:17:40.420
stuff out. And the end
of the day, it doesn't

355
00:17:40.420 --> 00:17:42.220
really matter. I mean, it's
source code as long as

356
00:17:42.220 --> 00:17:44.500
it's there. And it's good
when I'm kind of happy.

357
00:17:46.270 --> 00:17:49.680
So, you know, beyond that
it will a new get

358
00:17:49.680 --> 00:17:55.470
package. It'll probably be included
in some future web stack,

359
00:17:55.470 --> 00:17:59.520
runtime release, whatever that looks
like. But our goal is

360
00:17:59.520 --> 00:18:02.370
to get a version one
of signaler out by the

361
00:18:02.370 --> 00:18:05.570
end of the year. That's
cool. How do you think

362
00:18:05.570 --> 00:18:08.600
we should tell people about
it? Like if we, if

363
00:18:08.600 --> 00:18:11.060
we get it into the
templates by updating the templates

364
00:18:11.060 --> 00:18:15.800
afterwards, file new signal, our
applications, right, Right. Yeah. I

365
00:18:15.800 --> 00:18:19.670
think we should definitely have
item templates so that you

366
00:18:19.670 --> 00:18:23.180
could, in any asp.net project,
say, add a signal, a

367
00:18:23.180 --> 00:18:26.780
hub, or a signal, a
connection, and you could get

368
00:18:26.780 --> 00:18:28.550
that. It would use new,
get to pull in signal,

369
00:18:28.550 --> 00:18:30.680
or if you didn't have
it already, a project template

370
00:18:30.680 --> 00:18:35.780
is an interesting idea. I'm,
I'm not sure that signaler

371
00:18:35.780 --> 00:18:38.240
is a good fit for
like a brand new project.

372
00:18:38.900 --> 00:18:41.150
I think part of the
one ASP net thing is

373
00:18:41.150 --> 00:18:43.340
we really want to encourage
people this, you know, this

374
00:18:43.370 --> 00:18:46.220
Lego, you know, sort of
mindset where they can start

375
00:18:46.220 --> 00:18:49.340
an ASP net application. And
then, Hey, I want some

376
00:18:49.340 --> 00:18:52.010
real time, Hey, I want
an HVP API, Hey, I

377
00:18:52.010 --> 00:18:55.790
want some dynamic data scaffolded
stuff and just choose what

378
00:18:55.790 --> 00:18:58.280
they want either at the
beginning of the project or

379
00:18:58.280 --> 00:19:00.710
at any time in the
future of the project. And

380
00:19:00.710 --> 00:19:02.840
so I think actually as
we move forward, we're going

381
00:19:02.840 --> 00:19:05.990
to see a deemphasis on
this idea of file. You

382
00:19:05.990 --> 00:19:10.010
web API project file, new
MVC project file, new dynamic

383
00:19:10.010 --> 00:19:13.370
data project. It'll just be
file new ASP net project.

384
00:19:13.610 --> 00:19:15.500
And then you choose what
type of things do you

385
00:19:15.500 --> 00:19:18.140
need in your application? And
as I said, not just

386
00:19:18.140 --> 00:19:22.610
upfront, but also anytime in
the future, How much thought

387
00:19:22.610 --> 00:19:25.250
is being put into what
was one asp.net will look

388
00:19:25.250 --> 00:19:27.050
like now I'm kind of
asking loaded questions cause I'm

389
00:19:27.050 --> 00:19:28.700
involved in it. And I
know it, but of course,

390
00:19:29.300 --> 00:19:34.340
you know, w w w
asp.net for me means saying

391
00:19:34.340 --> 00:19:38.570
file new project and having
it not be a series

392
00:19:38.570 --> 00:19:42.110
of choices that are scary,
right. You know, it should

393
00:19:42.110 --> 00:19:44.480
be, I want an asp.net
project, no matter what kind

394
00:19:44.480 --> 00:19:46.220
of project you're going to
make, it's going to start

395
00:19:46.220 --> 00:19:48.620
out as an asp.net project.
And then I want to

396
00:19:48.620 --> 00:19:50.570
be able to say, I'd
like this, and I'd like

397
00:19:50.570 --> 00:19:53.150
this, not like this. And
like for the example that

398
00:19:53.150 --> 00:19:56.270
you're giving about open auth,
you know, I, the first

399
00:19:56.270 --> 00:19:57.740
thing I said was, how
do I add that to

400
00:19:57.740 --> 00:20:00.860
my existing application? You know,
and that's not an easy

401
00:20:00.860 --> 00:20:06.080
answer today, right? But with
well-organized new, get packages that

402
00:20:06.080 --> 00:20:09.350
know about other new get
packages, you know, things can

403
00:20:09.350 --> 00:20:12.800
plug in. We saw, we
saw you, you and I

404
00:20:12.800 --> 00:20:16.220
have presented. And we we've,
we've shown people, some stuff

405
00:20:16.730 --> 00:20:19.400
like some, some prototypes where
I could start with an

406
00:20:19.400 --> 00:20:23.990
empty application file, new empty,
and bring in an NBC

407
00:20:23.990 --> 00:20:26.720
starter or web form starter
web, a web pages starter

408
00:20:26.900 --> 00:20:29.450
that all talked to the
same model. They all kind

409
00:20:29.450 --> 00:20:34.160
of imagine a dependency tree
where, you know, microsoft.asp.net, web

410
00:20:34.160 --> 00:20:39.710
forms dot sample depends on
a model sample like a

411
00:20:39.710 --> 00:20:42.560
stock ticker or something. If
we all use the same

412
00:20:42.560 --> 00:20:45.170
stock, ticker in writing that
sample, we could bring in

413
00:20:45.950 --> 00:20:48.730
all sorts of ridiculous, calm,
competent torics, and it would

414
00:20:48.730 --> 00:20:51.630
all just work out of
the box. Yeah. And the

415
00:20:51.630 --> 00:20:53.700
thing I love about that
approach is it really sort

416
00:20:53.700 --> 00:20:57.450
of levels the playing field
as such between the three

417
00:20:57.450 --> 00:21:00.180
sort of higher end frameworks
that we have in asp.net.

418
00:21:00.180 --> 00:21:03.330
And, and, and it's, it
reduces this argument of, Oh,

419
00:21:03.330 --> 00:21:05.730
it's a web phones project,
or it's an MVC project

420
00:21:05.910 --> 00:21:08.160
too. It's an asp.net project.
And if you want to

421
00:21:08.160 --> 00:21:10.650
have some pots, if your
app using web forms, because

422
00:21:10.650 --> 00:21:14.100
it's particularly good at doing
certain types of UI, versus

423
00:21:14.100 --> 00:21:15.770
I want this part to
be web API or this

424
00:21:15.780 --> 00:21:19.530
part to be MVC, you
can, you absolutely can do

425
00:21:19.530 --> 00:21:22.860
that. Now, today, we haven't
done the best job, and

426
00:21:22.880 --> 00:21:25.230
this is more than just
a philosophy, you know, it's

427
00:21:25.230 --> 00:21:28.500
part, philosophy and messaging. And
it's also part driving how

428
00:21:28.500 --> 00:21:30.420
we do features and how
we do tooling. What we

429
00:21:30.420 --> 00:21:33.960
haven't done particularly well today
is setting up the tooling

430
00:21:33.990 --> 00:21:38.100
experience and the development experience
in general, to these type

431
00:21:38.100 --> 00:21:42.690
of heterogeneous sort of hybrid
applications, which in reality are

432
00:21:42.720 --> 00:21:46.830
all applications. You know, I
doubt there is any application

433
00:21:46.830 --> 00:21:49.740
out there in reality, where
there's strictly a web forms

434
00:21:49.740 --> 00:21:52.170
application that has only ever
had stuff dragged and dropped

435
00:21:52.170 --> 00:21:54.180
onto the surface and, you
know, stuff in the property

436
00:21:54.180 --> 00:21:57.810
grid set. You know, everybody
has to pull in other

437
00:21:57.810 --> 00:22:01.260
libraries and tweak various things
in your hand, write custom

438
00:22:01.260 --> 00:22:03.570
parts of the application to
make it do what you

439
00:22:03.570 --> 00:22:05.730
do. I mean, software is
complicated. We can never make

440
00:22:05.730 --> 00:22:08.250
it completely easy, but we
can, I think you said

441
00:22:08.250 --> 00:22:10.320
this, but we can smooth
over those edges as much

442
00:22:10.320 --> 00:22:13.200
as we possibly can. Yeah,
exactly, exactly. And that's the

443
00:22:13.200 --> 00:22:16.920
goal. So, I mean, I'm
hoping that there'll be additional

444
00:22:16.920 --> 00:22:19.440
improvements because we're going to
be able to ship stuff

445
00:22:19.530 --> 00:22:23.250
post RTM. And that's really
an important point. That's a

446
00:22:23.250 --> 00:22:25.950
big change too. I mean,
that's, that's something that I'm

447
00:22:25.950 --> 00:22:28.710
really looking forward to in
terms of, of what we

448
00:22:28.710 --> 00:22:30.900
can do as a team,
because, you know, previously it's

449
00:22:30.900 --> 00:22:34.080
been, we have the.net framework
and we have visual studio

450
00:22:34.080 --> 00:22:36.390
and those were our ship
vehicles. And then with the

451
00:22:36.390 --> 00:22:39.360
advent of MVC, we kind
of broke from the pack

452
00:22:39.360 --> 00:22:41.430
and said, well, we'd really
like to be able to

453
00:22:41.430 --> 00:22:45.300
iterate more frequently. And now
that mentality is, is sort

454
00:22:45.300 --> 00:22:47.340
of falling back to everything
else we do. So as

455
00:22:47.340 --> 00:22:50.790
you said, from visual studio,
2012, when it RTMS, w

456
00:22:51.060 --> 00:22:52.500
some of the stuff, a
lot of the stuff that

457
00:22:52.500 --> 00:22:55.800
we have in visual studio
in including the core tooling,

458
00:22:56.040 --> 00:22:58.230
the project systems and the
editors, and those types of

459
00:22:58.230 --> 00:23:01.320
things that are now updatable
out of band. So we

460
00:23:01.320 --> 00:23:04.320
can release new versions of
the templates. We can release

461
00:23:04.320 --> 00:23:08.750
new wizards, we can release
new designers and, and, and

462
00:23:09.060 --> 00:23:11.940
various other aspects of tooling,
which is gonna really free

463
00:23:11.940 --> 00:23:15.540
us up to, to add
value on a continuing basis.

464
00:23:15.720 --> 00:23:17.970
What all has been pulled
out like what has been

465
00:23:17.970 --> 00:23:22.440
externalized? That's a really good
question. The, the really big

466
00:23:22.470 --> 00:23:24.990
thing is if you have
visual studio, 2012 installed, you

467
00:23:24.990 --> 00:23:27.900
can go to the extension
manager and you you'll see

468
00:23:27.900 --> 00:23:30.660
an entry called a web
tooling extensions. I think it

469
00:23:30.660 --> 00:23:32.460
is. Or let me have
a look right here. I

470
00:23:32.460 --> 00:23:34.440
think it's, if you go
into tools and then go

471
00:23:34.440 --> 00:23:37.560
to extensions and updates, and
you look at what's installed,

472
00:23:37.560 --> 00:23:41.190
there is something called web
tooling extensions. And that includes

473
00:23:41.190 --> 00:23:44.520
things like page inspector. So
the new sort of, I

474
00:23:44.520 --> 00:23:48.350
E hosted inside visual studio
that gives you the amazing

475
00:23:49.010 --> 00:23:52.460
sort of debugging of your
HTML capability is called patient

476
00:23:52.460 --> 00:23:56.150
specter. That's in there. All
of the web forms templates

477
00:23:56.180 --> 00:24:00.560
are in the web tooling
extensions. We can also deliver

478
00:24:00.590 --> 00:24:04.490
extensions to the editor so
we can improve the HTML,

479
00:24:04.490 --> 00:24:07.310
CSS and JavaScript editors out
of band because of the

480
00:24:07.310 --> 00:24:11.660
plugability of the visual studio
editor system, even project system

481
00:24:11.660 --> 00:24:15.080
stuff. So the MVC tooling
itself, we get new context

482
00:24:15.080 --> 00:24:18.470
menus, we get new wizards,
we get the MVC scaffolding

483
00:24:18.470 --> 00:24:21.890
dialogue, which lets you create
new controllers and views. That

484
00:24:21.890 --> 00:24:25.190
is all updatable out of
band as well. And if,

485
00:24:25.190 --> 00:24:28.310
for instance, we've actually just
started this week, work on

486
00:24:28.310 --> 00:24:30.950
the web form, scaffolding. This
is something we've been wanting

487
00:24:30.950 --> 00:24:33.470
to do for a very
long time. And so we're

488
00:24:33.470 --> 00:24:35.810
starting work on that now.
So the idea is you'll

489
00:24:35.810 --> 00:24:37.940
be able to say in
a web, in an ACE,

490
00:24:37.940 --> 00:24:40.490
but on that project, right,
mouse click add new item.

491
00:24:40.730 --> 00:24:42.800
And then in the new
item template list, there'd be

492
00:24:42.800 --> 00:24:45.650
a scaffolded web form and
you click on that, give

493
00:24:45.650 --> 00:24:48.350
it a name hit. Okay.
And then another dialogue would

494
00:24:48.350 --> 00:24:51.500
show, which will be very
similar to the MVC ad

495
00:24:51.500 --> 00:24:53.620
controller dialogue, where you can
say, well, I just want,

496
00:24:53.620 --> 00:24:55.460
you know, I want to
scaffold a web form based

497
00:24:55.460 --> 00:24:59.840
on this entity framework context
and using model binding. And

498
00:24:59.840 --> 00:25:03.040
it will scaffold all that
out for you. I remember

499
00:25:03.040 --> 00:25:04.900
that I saw a prototype
of that and I talked

500
00:25:04.900 --> 00:25:08.260
about prototypes of, of web
form scaffolding a long time

501
00:25:08.260 --> 00:25:12.460
ago. Why do I say
that? Kind of like I'm

502
00:25:12.550 --> 00:25:15.190
torpedoing here a little bit,
because I'm like a huge

503
00:25:15.190 --> 00:25:17.230
advocate of that. And I've
been trying to get web

504
00:25:17.230 --> 00:25:19.510
form scaffolding. They haven't, I
know you love web forms,

505
00:25:19.510 --> 00:25:22.090
so you want to get
that as well. Why do

506
00:25:22.090 --> 00:25:26.950
things like that? You know,
get postponed. We were not

507
00:25:26.950 --> 00:25:29.770
a big team at the
end of the day. We

508
00:25:29.770 --> 00:25:33.610
only have a literally a
handful of developers working on

509
00:25:34.240 --> 00:25:36.850
certain features. The NBC team
is small. The web API

510
00:25:36.850 --> 00:25:39.430
team is small. The web
forms team is small. The

511
00:25:39.430 --> 00:25:42.340
core ASP net runtime team
is small. And so we've

512
00:25:42.340 --> 00:25:44.920
been part, you know, obviously
a major focus for the

513
00:25:44.920 --> 00:25:47.290
last two years has since,
since we shipped visual studio

514
00:25:47.290 --> 00:25:51.670
2010 and.net four has been.net
four dot five. And so

515
00:25:51.700 --> 00:25:55.570
we've been really busy doing.net
four dot five. And as

516
00:25:55.570 --> 00:25:57.640
part of the planning of
that, it was like, well,

517
00:25:58.000 --> 00:25:59.500
this is what we're going
to do for web forms.

518
00:25:59.500 --> 00:26:00.970
We want to do model
binding. We want to do

519
00:26:00.970 --> 00:26:02.950
on the truths of validation
we want to do. Async

520
00:26:03.310 --> 00:26:05.740
we'd really like to do
these other things, but you

521
00:26:05.740 --> 00:26:08.740
know, these could be done
out of band. These don't

522
00:26:08.800 --> 00:26:12.730
require updates to.net four or
five. So we actually, when

523
00:26:12.730 --> 00:26:15.430
we did the planning up
exercise, we said, what absolutely

524
00:26:15.430 --> 00:26:17.620
has to be done in
the box, what can't we

525
00:26:17.620 --> 00:26:20.710
possibly do out of band?
So we separated the out

526
00:26:20.710 --> 00:26:23.410
of band potential items, and
we said, let's put those

527
00:26:23.410 --> 00:26:26.140
in a backlog. We'll get
to those once we finished

528
00:26:26.140 --> 00:26:29.080
doing dotnet four, five. So
we fixed what we, what

529
00:26:29.320 --> 00:26:31.240
we did the work that
we absolutely had to do

530
00:26:31.240 --> 00:26:33.550
in band, because they require
updates to parts of the

531
00:26:33.550 --> 00:26:36.040
system that we can't ship,
unless we ship a new

532
00:26:36.040 --> 00:26:39.220
version of.net. And now that
that work is finished or

533
00:26:39.220 --> 00:26:41.770
is winding up, we're moving
on to the stuff that

534
00:26:41.770 --> 00:26:45.660
we can do out of
band. Okay, Cool. Because one

535
00:26:45.660 --> 00:26:48.120
of the things that I
said that in Phoenix was

536
00:26:48.120 --> 00:26:50.730
that, you know, the internet
is moving really, really fast.

537
00:26:51.390 --> 00:26:54.480
And if you try to
get something right, and you

538
00:26:54.480 --> 00:26:57.510
only have, you know, there's
one window within 18 months

539
00:26:57.510 --> 00:26:59.340
to do it, you're probably
gonna get it wrong. And

540
00:26:59.340 --> 00:27:01.710
then it's going to sit
around for 18 months. So

541
00:27:01.710 --> 00:27:04.740
we're trying to get the
core stuff, correct. And then

542
00:27:04.740 --> 00:27:09.090
set up a system by
which we can deliver updates

543
00:27:09.150 --> 00:27:11.220
on a regular basis because,
you know, vigils through to

544
00:27:11.220 --> 00:27:13.350
2012 might not be updated
for a year or two,

545
00:27:14.100 --> 00:27:15.510
but the web is going
to have all sorts of

546
00:27:15.510 --> 00:27:17.760
fun and interesting things happening,
you know, real time is

547
00:27:17.760 --> 00:27:20.580
just one as an example,
for sure. So we can

548
00:27:20.580 --> 00:27:23.940
change the templates. We can
change new libraries. The other

549
00:27:23.940 --> 00:27:25.860
thing that I think is
cool about new gettin I'm

550
00:27:25.860 --> 00:27:28.920
interested as in your opinion,
as an open source person,

551
00:27:28.920 --> 00:27:31.440
is that, do you think
that we're setting people up

552
00:27:31.470 --> 00:27:36.930
where open source projects in
new get aren't necessarily, man,

553
00:27:36.930 --> 00:27:39.930
I was going to say
competing, but we're, we're trying

554
00:27:39.930 --> 00:27:42.150
to level the playing field
a little bit. So when

555
00:27:42.150 --> 00:27:44.460
someone's, you know, in the
past people have said, Oh,

556
00:27:44.460 --> 00:27:48.030
Microsoft just killed my open
source project. I would like

557
00:27:48.330 --> 00:27:50.910
to set up the system
such that Microsoft just made

558
00:27:50.910 --> 00:27:55.620
an opportunity for my open
source project. Right? Like bundling

559
00:27:55.620 --> 00:27:58.320
for example, right? Like you
could declare your bundling tool

560
00:27:58.320 --> 00:28:01.350
dead, or you could plug
your bundling stuff into the

561
00:28:01.350 --> 00:28:05.000
framework directly now, right? Yeah,
absolutely. Now I think at

562
00:28:05.000 --> 00:28:07.790
the end of the day,
open source in.net is still

563
00:28:07.790 --> 00:28:10.010
in its infancy. If you
look at sort of it's

564
00:28:10.010 --> 00:28:13.460
mind share amongst the greater.net
community, I mean, there are

565
00:28:13.700 --> 00:28:17.270
millions of.net developers literally, and
we know a lot of

566
00:28:17.270 --> 00:28:22.550
those haven't had great exposure
to sort of using and

567
00:28:22.550 --> 00:28:26.210
incorporating open source software into
their products. Yet we know

568
00:28:26.220 --> 00:28:28.820
there are still companies out
there that flatly refuse to

569
00:28:28.820 --> 00:28:34.700
use open source libraries in
their projects. So I look

570
00:28:34.700 --> 00:28:36.770
at it as part of
ways that when Microsoft starts

571
00:28:36.770 --> 00:28:40.370
doing open source, it makes
open source better for everybody.

572
00:28:40.850 --> 00:28:43.130
And so sure as we
do that, there are going

573
00:28:43.130 --> 00:28:46.520
to be cases where perhaps
we release an open source

574
00:28:46.520 --> 00:28:50.990
library that has some overlap
with an existing library that

575
00:28:50.990 --> 00:28:53.660
was in the field. But
there are going to be

576
00:28:53.660 --> 00:28:55.700
a lot of times where
if we hadn't have done

577
00:28:55.700 --> 00:28:58.010
that, there would be a
large portion of customers that

578
00:28:58.010 --> 00:29:01.370
perhaps would never have even
considered the other sort of

579
00:29:01.370 --> 00:29:05.720
open source versions. So I
think part of that leveling

580
00:29:05.720 --> 00:29:08.690
the play playing field, isn't
about, isn't just about us

581
00:29:08.690 --> 00:29:13.400
competing with open source libraries.
It's about raising the perception

582
00:29:13.400 --> 00:29:17.270
of what open source software
is to customers who previously

583
00:29:17.270 --> 00:29:19.730
wouldn't have even considered open
source. And then in doing

584
00:29:19.730 --> 00:29:23.060
that, hopefully make it easier
for other open source libraries

585
00:29:23.060 --> 00:29:26.420
to get used by that
class of customer. Does that

586
00:29:26.420 --> 00:29:28.690
make sense? Yeah. But do
you think that if, if,

587
00:29:28.770 --> 00:29:32.000
if the open source people
aren't digging something, some of

588
00:29:32.000 --> 00:29:35.360
the things that we're doing,
should we try to, if

589
00:29:35.360 --> 00:29:37.910
we even try to get
them to love us, you

590
00:29:37.910 --> 00:29:40.490
know what I mean? Like
we were not Ruby and

591
00:29:40.490 --> 00:29:43.630
we're not, you know, we
aren't, we aren't these other

592
00:29:43.630 --> 00:29:46.590
things we should develop our
own culture. Sure. Yes, I

593
00:29:46.590 --> 00:29:51.480
think so. I mean, we
have traditional strengths, which perhaps

594
00:29:51.480 --> 00:29:55.740
different to the strength of
these other ecosystems. And I

595
00:29:55.740 --> 00:29:58.980
think we can, the ecosystems
can learn from each other.

596
00:29:59.040 --> 00:30:01.050
I mean, you know, there
are things and we've certainly

597
00:30:01.050 --> 00:30:04.470
done that. That's why the
shape of.net has, has changed

598
00:30:04.500 --> 00:30:07.560
somewhat in the last few
years, but I don't think

599
00:30:07.560 --> 00:30:09.930
we should, that should just
result in a massive pendulum

600
00:30:09.930 --> 00:30:12.750
swing from what we've been
really strong at traditionally to

601
00:30:12.750 --> 00:30:15.720
some completely new model that
perhaps has the risk of

602
00:30:15.750 --> 00:30:19.830
alienating our, you know, our
existing strong customer base. I

603
00:30:19.830 --> 00:30:23.250
think we need to find
that way of, of making

604
00:30:23.250 --> 00:30:26.130
sure that we stay relevant
to our existing customers and

605
00:30:26.130 --> 00:30:30.000
continue to deliver value to
them while also, you know,

606
00:30:30.210 --> 00:30:32.280
perhaps loosening up in other
areas and one of a

607
00:30:32.280 --> 00:30:36.210
better term, but becoming more
attractive so that people who

608
00:30:36.210 --> 00:30:39.270
are making that choice about
what platform or what ecosystem

609
00:30:39.270 --> 00:30:42.450
they want to sort of
onboard onto are attracted to

610
00:30:42.450 --> 00:30:45.030
what we're doing because of
perhaps reasons that were not

611
00:30:45.030 --> 00:30:49.570
traditionally associated with while maintaining
all those, you know, those

612
00:30:49.590 --> 00:30:51.720
strengths that we traditionally had.
No, that's, that's not an

613
00:30:51.720 --> 00:30:55.230
easy thing to do sometimes,
but you know, I, I'm

614
00:30:55.230 --> 00:30:58.350
an advocate internally. I'm sort
of the last thing I

615
00:30:58.350 --> 00:31:00.240
want us to do is
get to a point where

616
00:31:00.240 --> 00:31:03.450
in five or 10 years,
we, we turn around and

617
00:31:03.450 --> 00:31:05.730
then realize we don't have
all those people following us

618
00:31:05.730 --> 00:31:07.560
that we thought we did.
The last thing we want

619
00:31:07.560 --> 00:31:10.080
to do is become irrelevant
because we think that what

620
00:31:10.080 --> 00:31:12.420
we have is so strong
or we're so drunk, strong,

621
00:31:12.420 --> 00:31:14.160
and our existing customer base
that we don't need to

622
00:31:14.160 --> 00:31:18.450
change. We always need to
be aware of, you know,

623
00:31:18.450 --> 00:31:21.060
changing trends and even driving
new trends when we have

624
00:31:21.060 --> 00:31:23.880
to. Correct. Cool. I'm glad
I think things are working

625
00:31:23.880 --> 00:31:25.470
out. I mean, I think
things are starting to happen.

626
00:31:25.470 --> 00:31:28.170
I feel at least from
the web team, I'm not

627
00:31:28.170 --> 00:31:31.320
speaking about Microsoft at the
larger Microsoft, but for us,

628
00:31:31.350 --> 00:31:33.360
I think we're starting to
execute in a way that

629
00:31:33.360 --> 00:31:36.390
may is making me happy.
I think that the, the

630
00:31:36.400 --> 00:31:41.130
Lego stories and the open
source focus and, you know,

631
00:31:41.130 --> 00:31:45.270
with Azure and with get
everywhere now, I think that

632
00:31:45.270 --> 00:31:47.490
we're going to do some
damage in the best possible

633
00:31:47.490 --> 00:31:49.770
way. Yeah, I think so.
I'm going to, I really

634
00:31:49.800 --> 00:31:54.840
think that this is the
philosophy behind one asp.net that

635
00:31:55.170 --> 00:31:57.570
is, is positive all across
it. I think no one

636
00:31:57.570 --> 00:31:59.970
loses in that. So Very
cool. Well, thanks for chatting

637
00:31:59.970 --> 00:32:01.710
with me. Not a problem.
I'd love to, I'd love

638
00:32:01.710 --> 00:32:03.360
to talk to you all
the time. This has been

639
00:32:03.360 --> 00:32:05.820
another episode of Hansel minutes
and I'll see you again

640
00:32:05.820 --> 00:32:06.390
next week.

