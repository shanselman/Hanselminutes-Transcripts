WEBVTT FILE

1
00:00:12.020 --> 00:00:17.120
From hanselminutes.com. It's Hanselman it's
Oh, weekly discussion with web

2
00:00:17.120 --> 00:00:21.650
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:21.650 --> 00:00:27.980
number three 97. Recorded live
Thursday, November 7th, 2013. This episode of

4
00:00:27.980 --> 00:00:30.860
Hansel minutes is brought to
you by a Tellerik offering

5
00:00:30.860 --> 00:00:39.830
the best in developer tools
and support online@telerikdotcomandbyfranklins.net makers of

6
00:00:39.830 --> 00:00:43.430
gesture pack a powerful gesture,
recording and recognition system for

7
00:00:43.430 --> 00:00:47.990
Microsoft connect for windows developers,
details that gesture P a

8
00:00:47.990 --> 00:00:52.250
k.com. In this episode, Scott
moderates, a live panel at

9
00:00:52.250 --> 00:00:55.400
the angle brackets conference in
Las Vegas, where he asks

10
00:00:55.400 --> 00:00:58.220
the question, what will web
developers need to know in

11
00:00:58.220 --> 00:01:03.440
2014 with guests? Douglas Crockford,
John Papa, Denise Jacobs and Michelle

12
00:01:03.440 --> 00:01:10.520
<inaudible>. Hi friends. Hello, Scott.
How are you? I'm good.

13
00:01:10.550 --> 00:01:13.460
How are you? Lovely. Aren't
you guys looking lovely today

14
00:01:13.490 --> 00:01:21.140
as well? Are you guys
having fun? Yeah. So this,

15
00:01:21.140 --> 00:01:25.550
this panel is actually a
selfish handle because I have

16
00:01:25.910 --> 00:01:28.970
put this panel together because
I want to know what

17
00:01:28.970 --> 00:01:32.540
I need to learn in
2014. This is not for

18
00:01:32.540 --> 00:01:36.500
you people. I'm starting to
feel overwhelmed. There's too much

19
00:01:36.530 --> 00:01:40.040
going on in web development
right now. So the goal

20
00:01:40.040 --> 00:01:41.420
here is to try to
get a sense of what

21
00:01:41.420 --> 00:01:43.370
are the things you want
to focus on. Those things

22
00:01:43.370 --> 00:01:45.920
may be tools may be
frameworks. They need the mindsets.

23
00:01:45.950 --> 00:01:49.400
They need be architectural considerations
because we've assembled a group

24
00:01:49.400 --> 00:01:51.770
of folks here that we'll
be able to talk to

25
00:01:51.770 --> 00:01:55.970
that Denise Jacobs, how are you?
I'm fine. How are you?

26
00:01:56.030 --> 00:01:57.800
I'm lovely. How, what kind
of things do you focus

27
00:01:57.800 --> 00:02:01.580
on? I focus actually on
creativity and work and how

28
00:02:01.580 --> 00:02:04.280
to work better so you
can create more inquiry veteranos.

29
00:02:04.520 --> 00:02:07.490
My background is front end,
web design and web development,

30
00:02:07.490 --> 00:02:11.450
but I've moved more into
this other, Yeah, John Papa.

31
00:02:11.840 --> 00:02:14.930
He's got a lovely shirt.
You have been upping your

32
00:02:14.930 --> 00:02:17.450
shirt game conference to conference
to the point where I'm

33
00:02:17.450 --> 00:02:20.660
just ashamed. I'll let you
borrow it. You will. That's

34
00:02:20.660 --> 00:02:23.090
fantastic. What kinda stuff do
you work on? I know

35
00:02:23.090 --> 00:02:26.330
that you do angular and
front end web development. Also

36
00:02:26.330 --> 00:02:28.810
thinking about hot towel, hot
towel. I'm going to go

37
00:02:28.810 --> 00:02:31.520
to spot with that one.
Yeah. So yeah, I do

38
00:02:31.520 --> 00:02:33.410
a lot of web development.
Mostly. I try to keep

39
00:02:33.410 --> 00:02:35.210
up with what's new and
cool. And where things are

40
00:02:35.210 --> 00:02:38.420
heading Michelle Bustamante. I want
to know what a hot

41
00:02:38.420 --> 00:02:45.770
towel is. It's front end
web development. Hi. I focus

42
00:02:45.770 --> 00:02:50.510
on really any cloud type
deployment technology. Azure is one

43
00:02:50.510 --> 00:02:54.110
of my major focuses security
related of course, and you

44
00:02:54.110 --> 00:02:57.770
know, really just user driven
design and experiences. Yeah. And

45
00:02:57.770 --> 00:03:01.630
are those Crockford a discoverer
of Jason and a architect

46
00:03:01.660 --> 00:03:06.130
at PayPal? Hi, I'm glad
to be here. We are

47
00:03:06.130 --> 00:03:09.220
happy to have you here.
We talked a little bit

48
00:03:09.220 --> 00:03:12.280
in a podcast yesterday. You
and I about people having

49
00:03:12.280 --> 00:03:14.740
maybe a missing, missing pieces
of history that they need

50
00:03:14.740 --> 00:03:18.220
to be thinking about. We
don't have nearly the good

51
00:03:18.220 --> 00:03:21.310
enough appreciation of our own
history and our profession. It's

52
00:03:21.310 --> 00:03:25.840
something I'm trying to fix.
Cool. So I am trying

53
00:03:25.840 --> 00:03:29.500
to think about kind of
like planning my personal strategy

54
00:03:29.510 --> 00:03:32.950
for learning. And is it
something as simple as I

55
00:03:32.950 --> 00:03:36.610
should just follow now dot
JS, whatever that new noun

56
00:03:36.610 --> 00:03:38.770
is and that's, that's it.
And all I need to

57
00:03:38.770 --> 00:03:41.050
do is just learn the
new hot JavaScript library is

58
00:03:41.050 --> 00:03:43.240
it was jQuery before, right.
And that kept me in,

59
00:03:43.870 --> 00:03:47.440
I kept getting jobs with
jQuery or do I need

60
00:03:47.440 --> 00:03:49.630
to change the way that
I think about my job?

61
00:03:52.200 --> 00:03:55.950
I actually think that it,
it's more of really having

62
00:03:55.950 --> 00:03:59.340
a system for understanding how
to learn things. You guys

63
00:03:59.340 --> 00:04:02.700
probably already do have this,
but then also having ways

64
00:04:02.760 --> 00:04:06.150
of, you know, when you're
having moments where you are

65
00:04:06.150 --> 00:04:08.400
getting blocked and you're not
being able to come up

66
00:04:08.400 --> 00:04:12.120
with ideas, kind of having
some kind of tools and

67
00:04:12.120 --> 00:04:16.140
some tools in your kit
and some, some things in

68
00:04:16.140 --> 00:04:19.230
your arsenal to be able
to deal with working through

69
00:04:20.250 --> 00:04:22.590
mental blocks and working through
creative blocks so that you

70
00:04:22.590 --> 00:04:26.160
can come up with new
ideas and then actually take

71
00:04:26.160 --> 00:04:29.040
in information better and put
it together in different ways

72
00:04:29.040 --> 00:04:31.740
and come up and innovate
because actually one of the

73
00:04:31.800 --> 00:04:34.650
most important things, I think
that's that people are going

74
00:04:34.650 --> 00:04:37.920
to need moving forward is
the ability to innovate and

75
00:04:37.920 --> 00:04:41.370
having kind of confidence about
your skills around innovation and

76
00:04:41.370 --> 00:04:43.680
being creative. Yeah, but I
have a pile of books

77
00:04:43.680 --> 00:04:45.900
on my desk that is
a monolift to my own

78
00:04:45.900 --> 00:04:49.980
failure. And it is a
list of books that I

79
00:04:49.980 --> 00:04:52.710
tell myself I'm going to
read this year. And every

80
00:04:52.710 --> 00:04:54.270
once in a while, I'll
take the Ruby way and

81
00:04:54.270 --> 00:04:56.010
I'll put it up on
the top and I'll read,

82
00:04:56.010 --> 00:04:59.160
dedicate myself to getting through
that one or a JavaScript,

83
00:04:59.160 --> 00:05:01.680
the good parts, which I
have read the first half,

84
00:05:02.040 --> 00:05:04.710
several times. But it's just
that last half that I

85
00:05:04.710 --> 00:05:06.600
keep having trouble with. Maybe
that's not the good part.

86
00:05:06.840 --> 00:05:08.820
How do I just make,
what do I do with

87
00:05:08.820 --> 00:05:11.430
the model is of shame.
I'm not, I think we

88
00:05:11.430 --> 00:05:13.080
all feel like that. Don't
we, we all have those

89
00:05:13.080 --> 00:05:15.630
books, those libraries there's tools
that we're trying to learn

90
00:05:16.200 --> 00:05:18.840
to John Wood. What do I
do to work through that?

91
00:05:18.840 --> 00:05:21.120
A personal crisis? Do you
know how many books, technical

92
00:05:21.120 --> 00:05:23.700
books I read a year?
No, close your eyes and

93
00:05:23.700 --> 00:05:26.760
say, what did he say?
Nuts? Yeah, I I've given

94
00:05:26.760 --> 00:05:28.140
up on that approach. I
used to work for me

95
00:05:28.140 --> 00:05:30.180
real well, but it, it
just takes too long to

96
00:05:30.180 --> 00:05:33.120
digest where everything is in
a book these days for

97
00:05:33.120 --> 00:05:35.100
me. So what I tend
to do is I had

98
00:05:35.100 --> 00:05:36.750
to find a way to
filter out what do I

99
00:05:36.750 --> 00:05:38.940
need to be aware of
and what do I need

100
00:05:38.940 --> 00:05:41.280
to pay attention to? And
those are two different things

101
00:05:41.280 --> 00:05:42.810
in a way, there's a
level of awareness that I

102
00:05:42.810 --> 00:05:44.790
think we all need to
have of what technologies are

103
00:05:44.790 --> 00:05:49.050
out there. What personality styles,
what new themes like usability

104
00:05:49.050 --> 00:05:51.870
and user experience, you know,
understanding what we've learned in

105
00:05:51.870 --> 00:05:53.880
the past and where we're
heading towards in the future,

106
00:05:54.240 --> 00:05:55.860
but you don't need to
be deep in those things

107
00:05:56.490 --> 00:05:59.300
and then identify those, which
ones are really getting momentum

108
00:05:59.300 --> 00:06:00.920
and are going to help
me in my career that

109
00:06:00.920 --> 00:06:04.070
I need to dive deep
into on the past couple

110
00:06:04.070 --> 00:06:06.740
of say, six months or
so. I've done dove really

111
00:06:06.740 --> 00:06:09.230
deep inside of like angular
to figure out where's that

112
00:06:09.230 --> 00:06:11.330
headings a lot of momentum
behind it and going down

113
00:06:11.330 --> 00:06:12.920
there, but I've kept my
finger on the pulse of

114
00:06:12.920 --> 00:06:15.860
more things as an awareness
level. And I find that

115
00:06:15.860 --> 00:06:18.350
things like Twitter quite frankly,
are very helpful to just

116
00:06:18.350 --> 00:06:20.810
kind of keep the pulse
on what's happening out there.

117
00:06:21.050 --> 00:06:23.150
Even if you don't contribute,
just watching where things are

118
00:06:23.660 --> 00:06:25.220
and then it's time to
dive into a book. And

119
00:06:25.400 --> 00:06:27.200
once you decide to figure
out that you're going to

120
00:06:27.200 --> 00:06:29.330
go down the JavaScript road,
for example, first thing you

121
00:06:29.330 --> 00:06:32.150
do is obviously reading Douglas
book on Josh, got the

122
00:06:32.150 --> 00:06:34.730
good parts and read about
the patterns for Java script

123
00:06:34.730 --> 00:06:37.040
and figure those things out.
What are that technology or

124
00:06:37.040 --> 00:06:39.770
pattern might be. But if
I listened, I listened to

125
00:06:39.770 --> 00:06:42.170
the web and I read
things like hacker news. You

126
00:06:42.170 --> 00:06:45.860
know, they're telling me what's
how people in the Silicon

127
00:06:45.860 --> 00:06:48.410
Valley develop software, but may
not necessarily be how we're

128
00:06:48.410 --> 00:06:51.140
doing it in my office.
They're maybe using web forms

129
00:06:51.140 --> 00:06:52.970
from 10 years ago. And
we just got permission to

130
00:06:52.970 --> 00:06:56.810
use Jake Berry. When you
say you explore libraries on

131
00:06:56.810 --> 00:06:59.360
the side, are you trying
to build real apps? You're

132
00:06:59.360 --> 00:07:00.740
just going to fool them
around. Do you know what

133
00:07:00.740 --> 00:07:03.560
I mean? Both. Yes. So
yeah, I do. I do

134
00:07:03.560 --> 00:07:04.940
a lot of stuff on
the side where one of

135
00:07:04.940 --> 00:07:07.340
the companies, I work with
a large entertainment company, which

136
00:07:07.340 --> 00:07:09.920
has a mouse as an
employer, will let me do

137
00:07:09.920 --> 00:07:11.570
things on the side to
figure out what kind of

138
00:07:11.570 --> 00:07:14.420
things can we do, but
may not necessarily be for

139
00:07:14.420 --> 00:07:17.240
something at work. So it
does take time to figure

140
00:07:17.240 --> 00:07:19.370
those things out on the
side and play with them.

141
00:07:19.370 --> 00:07:21.710
But then I also take
those and take real applications

142
00:07:21.710 --> 00:07:23.750
that we have, and actually
try to map them out

143
00:07:23.750 --> 00:07:25.370
and figure out how do
I build that with this?

144
00:07:25.370 --> 00:07:27.500
And is it feasible? And
sometimes quite frankly, it's the

145
00:07:27.500 --> 00:07:30.680
wrong technology solution. How much
time should I spend doing

146
00:07:30.680 --> 00:07:33.760
this? Yeah. You know, I,
I, a couple of things

147
00:07:33.760 --> 00:07:35.410
that you're saying resonate because
there are going to be

148
00:07:35.410 --> 00:07:38.560
people that just really can't
in their office use the

149
00:07:38.560 --> 00:07:42.220
latest and greatest, it's a
reality. So the thing that

150
00:07:42.220 --> 00:07:44.500
I always tell people to
do, and I think this

151
00:07:44.500 --> 00:07:46.360
is what I did when
I was, you know, moving

152
00:07:46.360 --> 00:07:48.790
in my career is, you
know, I made deadlines for

153
00:07:48.790 --> 00:07:51.370
myself, for me, maybe that
was writing an article in

154
00:07:51.370 --> 00:07:54.250
today. That would be a
blog post, you know, or

155
00:07:54.250 --> 00:07:56.860
trying to take on a
new technology to speak about

156
00:07:56.860 --> 00:08:00.430
because it will help me
dig into that technology. While

157
00:08:00.430 --> 00:08:03.130
in the meantime, I have
deadlines at work. So at

158
00:08:03.130 --> 00:08:04.270
the end of the day,
if you don't have a

159
00:08:04.270 --> 00:08:06.580
deadline or put something on
yourself, you might not be

160
00:08:06.580 --> 00:08:09.880
disciplined enough to explore that
new thing. But a way

161
00:08:09.880 --> 00:08:12.850
to try to inject that
into your office would be

162
00:08:12.850 --> 00:08:16.000
for you to take your
spare time, whatever it is

163
00:08:16.000 --> 00:08:19.060
that you're willing to spare,
you know, and, and every

164
00:08:19.060 --> 00:08:21.160
week commit a certain amount
of time, a couple nights

165
00:08:21.160 --> 00:08:24.100
a week, maybe a little
bit every weekend to forward

166
00:08:24.100 --> 00:08:27.460
yourself on something that might
apply to your company. So

167
00:08:27.490 --> 00:08:29.950
let's say you have a
boring web forms, you know,

168
00:08:30.070 --> 00:08:33.370
implementation. And there's nothing, I
didn't mean boring story anybody.

169
00:08:35.380 --> 00:08:39.370
So let's say you have,
you know, a web forms

170
00:08:39.370 --> 00:08:41.050
app and you can't get
out of it, but you'd

171
00:08:41.050 --> 00:08:43.120
like to see, well, how
would that compare an MVC,

172
00:08:43.130 --> 00:08:45.310
right? What would that look
like? So take your own

173
00:08:45.310 --> 00:08:47.380
time, take a slice of
the project, do a little

174
00:08:47.380 --> 00:08:49.660
thing on your own, and
then show your boss, show

175
00:08:49.660 --> 00:08:51.700
your team, whatever, but you
did it on your own

176
00:08:51.700 --> 00:08:53.230
time and you say, you
know, I was just playing

177
00:08:53.230 --> 00:08:54.670
with this and I was
realizing, you know, if we

178
00:08:54.670 --> 00:08:57.030
wanted to migrate from here
to here, It might not

179
00:08:57.030 --> 00:08:58.680
be that bad because I've
kind of already figured it

180
00:08:58.680 --> 00:09:00.180
out on my own time.
So what do you think,

181
00:09:00.180 --> 00:09:03.150
you know, it's one suggestion,
but just a way to

182
00:09:03.150 --> 00:09:06.660
try to introduce the new
stuff that is relevant to

183
00:09:06.990 --> 00:09:09.930
where you work today, rather
than just the cool, latest

184
00:09:09.930 --> 00:09:12.320
and greatest. That was, what
do you think? Sometimes I

185
00:09:12.320 --> 00:09:14.510
feel that the young people
are kind of reinventing the

186
00:09:14.510 --> 00:09:19.490
wheel, those young people. Yeah.
I'm sorry. So we're in

187
00:09:19.490 --> 00:09:24.200
a period of massive innovation
right now, you know, in

188
00:09:24.200 --> 00:09:29.330
2000 when the.com com bubble
popped, we're all innovation in

189
00:09:29.330 --> 00:09:32.510
this area. First lead stopped
and stopped for several years,

190
00:09:32.510 --> 00:09:36.740
almost a decade. In some
ways it was a lot

191
00:09:36.740 --> 00:09:39.320
nicer then because none of
this stuff is changing all

192
00:09:39.320 --> 00:09:41.420
the time. So it was
pretty easy to keep on

193
00:09:41.420 --> 00:09:44.090
top of it. What we're
seeing now is a lot

194
00:09:44.090 --> 00:09:47.810
of change. Not all of
it is necessarily beneficial or

195
00:09:47.810 --> 00:09:50.390
is worth the cost of
the change. You know, so

196
00:09:50.630 --> 00:09:53.300
JS, JS dot JS just
came out and it changes

197
00:09:53.300 --> 00:09:56.300
everything. And in fact, it's
about that much different than

198
00:09:56.300 --> 00:09:58.370
the other thing, except it's
completely different. So you have

199
00:09:58.370 --> 00:10:01.640
to throw out everything and
start over. There's not much

200
00:10:01.670 --> 00:10:05.390
value in that. So I
think that the value is

201
00:10:05.390 --> 00:10:08.780
in understanding the principles, the
things that are not subject

202
00:10:08.780 --> 00:10:11.960
to fads, which are not
going to be obsolete tomorrow.

203
00:10:12.860 --> 00:10:15.500
And if you keep on
the principles, then you can

204
00:10:15.530 --> 00:10:17.420
weed out the rest of
it. And it makes more

205
00:10:17.420 --> 00:10:21.020
sense. And I also want
to say that I think

206
00:10:21.020 --> 00:10:25.430
there is a, it's important
to kind of be able

207
00:10:25.430 --> 00:10:29.720
to keep yourself from just
being seduced by the new

208
00:10:29.720 --> 00:10:32.390
and shiny, right? Like there's
always going to be a

209
00:10:32.390 --> 00:10:34.310
new and shiny, and there's
always going to be the

210
00:10:34.310 --> 00:10:38.240
thing that everybody says is
all the rage, but you

211
00:10:38.240 --> 00:10:41.870
know, the aphorism that your
parents probably told you, just

212
00:10:41.870 --> 00:10:43.730
because everybody's doing it, does
that mean you're going to

213
00:10:43.730 --> 00:10:47.510
do it too, is actually
very true. And so, you

214
00:10:47.510 --> 00:10:49.610
know, sometimes it's really good
to kind of have a

215
00:10:49.610 --> 00:10:52.160
moment where you observe and
you look at it from

216
00:10:52.160 --> 00:10:55.400
a distance without entirely diving
in and maybe look into

217
00:10:55.400 --> 00:10:57.890
it, check under the hood,
kick the tires, but don't

218
00:10:57.890 --> 00:11:00.590
actually commit to getting in
the car and driving. What

219
00:11:00.590 --> 00:11:03.680
if I'm not confident in
my own code, smell my

220
00:11:03.680 --> 00:11:05.930
own ability to smell it.
Something's a bad idea. What

221
00:11:05.930 --> 00:11:09.650
you're describing intellectually makes sense.
But I might look at

222
00:11:09.980 --> 00:11:13.880
the way that some new
application runs entirely in the

223
00:11:13.880 --> 00:11:17.060
browser. You know what I
mean? Like an application, like

224
00:11:17.060 --> 00:11:19.760
a Gmail or something like
that, where they commit to

225
00:11:20.150 --> 00:11:23.450
putting as much JavaScript responsibility.
I don't know if that's

226
00:11:23.450 --> 00:11:25.490
a good idea or not.
Seems like a good idea

227
00:11:25.880 --> 00:11:28.490
to nothing on the server.
Servers are dead. MVC is

228
00:11:28.490 --> 00:11:32.000
dead at all in the
browser now as new and

229
00:11:32.000 --> 00:11:34.610
shiny, but I don't feel
like I have enough experience

230
00:11:34.610 --> 00:11:36.350
to be the one to
make that judgment. What if

231
00:11:36.350 --> 00:11:39.440
I pick wrong? I think
there's a balance to be

232
00:11:39.440 --> 00:11:41.990
had there because what you're
saying is a trend that

233
00:11:41.990 --> 00:11:44.930
is going to continue very,
very strongly. And that is

234
00:11:44.930 --> 00:11:49.850
the HTML five with, you
know, JavaScript more and more

235
00:11:49.850 --> 00:11:52.550
JavaScript is going to be
how people build apps. And

236
00:11:52.850 --> 00:11:55.000
part, the reason is there's
going To be what, something

237
00:11:55.000 --> 00:11:58.270
like I read a statistic
on gardener. I think it

238
00:11:58.270 --> 00:12:02.740
was something like there's 8 billion
people in the world, or,

239
00:12:02.770 --> 00:12:05.230
you know, projection in the
next few years. And there's

240
00:12:05.230 --> 00:12:08.980
going to be like 50 billion
devices, which are how that

241
00:12:08.980 --> 00:12:12.220
math works. That's really crazy,
right? Like people have multiple

242
00:12:12.220 --> 00:12:14.380
devices all over and you
can imagine there's people in

243
00:12:14.380 --> 00:12:16.300
the world that don't have
any devices. So that's a

244
00:12:16.300 --> 00:12:19.120
prediction, right? It's just something
like in the next five

245
00:12:19.120 --> 00:12:21.280
years or something, but the
point is there's going to

246
00:12:21.280 --> 00:12:24.220
be so much mobile and
there's still going to be

247
00:12:24.220 --> 00:12:26.530
chaos in mobile. There's still
going to be chaos in

248
00:12:26.680 --> 00:12:29.680
how we develop for mobile.
And the only thing that

249
00:12:29.680 --> 00:12:33.370
works, you know, sort of
cross platform really well is,

250
00:12:33.370 --> 00:12:37.450
you know, JavaScript investment with
HTML five and CSS. So

251
00:12:37.450 --> 00:12:39.550
I'm not saying native isn't
going to happen. It is,

252
00:12:39.550 --> 00:12:41.710
and people will fumble through
it, but there's going to

253
00:12:41.710 --> 00:12:43.930
be more and more and
more websites that want rich

254
00:12:43.930 --> 00:12:47.050
and interactive experiences as well
and responsive experiences. And I

255
00:12:47.050 --> 00:12:48.490
think that's where a lot
of trends going to be,

256
00:12:48.490 --> 00:12:51.100
but you still need the
backend. That's more about the

257
00:12:51.100 --> 00:12:54.220
interactive, rich part, not so
much about put all the

258
00:12:54.220 --> 00:12:58.680
data up there, you know,
put the data somewhere. Absolutely.

259
00:12:58.680 --> 00:13:00.870
And in fact, I jumped
on that as well. The

260
00:13:00.870 --> 00:13:03.330
more mobile the Maurice, my
father is the more there

261
00:13:03.330 --> 00:13:05.250
is a need for a
strong backend and then a

262
00:13:05.250 --> 00:13:07.670
good cloud service to talk
to it. This stuff is

263
00:13:07.700 --> 00:13:10.260
that mobile devices don't have
long tethering lines to talk

264
00:13:10.260 --> 00:13:12.120
to things we're going to
have to have these kinds

265
00:13:12.120 --> 00:13:15.240
of resilient services that we
can And tight payloads, you

266
00:13:15.240 --> 00:13:18.660
know, really small, fast, fast,
fast async, there's certain technologies

267
00:13:18.660 --> 00:13:21.240
that if you mastered that
you're going to be wicked,

268
00:13:21.480 --> 00:13:24.300
you know, popular in any
job you go for. Right.

269
00:13:25.050 --> 00:13:26.580
Well, the really exciting part
is that they're going to

270
00:13:26.580 --> 00:13:28.680
be 8 billion people and they're
all going to be writing

271
00:13:28.680 --> 00:13:34.500
Java script. So I'm hearing
you guys say that on

272
00:13:34.500 --> 00:13:38.490
the wet, yeah, I'm afraid
we're stuck with the web.

273
00:13:39.150 --> 00:13:44.190
I'm really discouraged by that
Forrester predicted in 2000 that

274
00:13:44.200 --> 00:13:45.570
the web was going to
die in a couple of

275
00:13:45.570 --> 00:13:50.220
years and we'll be done
with it. A lot of

276
00:13:50.220 --> 00:13:53.880
people believe them, including Microsoft,
you know, they abandoned III,

277
00:13:53.880 --> 00:13:55.440
you know, good we're done
with that web thing. We'll

278
00:13:55.440 --> 00:13:59.880
get onto the next internet,
turned out the web survived.

279
00:14:00.120 --> 00:14:03.690
I think because of JavaScript,
JavaScript allowed the web become

280
00:14:03.810 --> 00:14:06.690
an application delivery system that
just being a document retrieval

281
00:14:06.690 --> 00:14:11.880
system, wasn't going to ensure
its survival. And you know,

282
00:14:11.880 --> 00:14:13.920
so thanks Java script, you
know, we're now stuck with

283
00:14:13.920 --> 00:14:17.090
the web. What about, what
about the people who, who

284
00:14:17.100 --> 00:14:20.950
hate Jonathan and those who
say that JavaScript it's ugly

285
00:14:22.050 --> 00:14:27.230
then on the formality to
the application delivery model, the

286
00:14:27.240 --> 00:14:29.700
formality is not a problem.
You don't trust me discipline.

287
00:14:29.980 --> 00:14:31.110
And then a lot of
people who want to do

288
00:14:31.110 --> 00:14:34.440
this stuff without discipline and
then complain about the results

289
00:14:36.000 --> 00:14:38.340
I, and the discipline is
hard. And so I wrote

290
00:14:38.340 --> 00:14:43.830
chance length as a mechanical
discipline. And you know, if

291
00:14:43.830 --> 00:14:48.420
you're complaining about JavaScript being
too loose or unregimented, or,

292
00:14:48.420 --> 00:14:51.800
or unceremonious you should be
using Jaslyn because it's going

293
00:14:51.800 --> 00:14:54.950
to kick your ass and
make your program better or

294
00:14:54.950 --> 00:14:58.640
make you cry. Sometimes it'll
make you cry. Probably deserve

295
00:14:58.640 --> 00:15:01.930
it. No, but it's, it's
like anything you have to

296
00:15:01.930 --> 00:15:05.020
invest the time. Right? I
am actually only just dangerous

297
00:15:05.020 --> 00:15:07.930
enough with, with JavaScript because
I do mostly the backend,

298
00:15:08.290 --> 00:15:10.360
but when my team sets
up, you know, a lot

299
00:15:10.360 --> 00:15:13.150
of really cool, interactive things
in the client side, I

300
00:15:13.150 --> 00:15:15.580
can jump in and fill
in places. Cause I understand

301
00:15:15.820 --> 00:15:18.400
the code itself and I
understand, you know, how to

302
00:15:18.400 --> 00:15:20.080
make the calls back. So
there's going to be people

303
00:15:20.080 --> 00:15:21.910
that are probably going to
be more like me that

304
00:15:21.910 --> 00:15:24.820
maybe never will be JavaScript.
You know, developers, maybe they

305
00:15:24.820 --> 00:15:28.030
don't have the design ideas
and whatnot, but they understand

306
00:15:28.030 --> 00:15:29.770
how it connects and how
it works. And then there's

307
00:15:29.770 --> 00:15:32.110
other people that really need
to focus. Like I just

308
00:15:32.110 --> 00:15:35.470
know JavaScript inside out. I
understand the best libraries for

309
00:15:35.740 --> 00:15:37.720
X, Y, and Z, and
I've mastered it. And I

310
00:15:37.720 --> 00:15:40.210
can whip that together in
no time and make it

311
00:15:40.210 --> 00:15:43.960
safe, make it secure and
make it also handle errors

312
00:15:43.960 --> 00:15:45.850
for goodness sakes. Because you
know what happens when the

313
00:15:45.850 --> 00:15:48.550
errors aren't caught. Number one
thing we find at our

314
00:15:48.550 --> 00:15:51.070
company, when we deal with
stuff with JavaScript issues, we

315
00:15:51.080 --> 00:15:52.990
run JS lint. We go
through it all the biggest

316
00:15:52.990 --> 00:15:56.800
issue. We find exception handling,
same stuff we found in.net

317
00:15:56.800 --> 00:15:59.560
and in Java and PHP,
people just decide not to

318
00:15:59.560 --> 00:16:02.800
do it. What about this
idea that JavaScript applications are

319
00:16:02.800 --> 00:16:05.590
not maintainable when they reach
a certain size, people keep

320
00:16:05.590 --> 00:16:07.630
talking about a hundred thousand
lines of code being some

321
00:16:07.630 --> 00:16:10.990
magic number that causes JavaScript
apps to be, I'll just

322
00:16:10.990 --> 00:16:13.810
turn to spaghetti. At some
point you can turn to

323
00:16:13.810 --> 00:16:21.280
spaghetti a lot earlier than
that. And you can have

324
00:16:21.280 --> 00:16:23.830
apps of any size in
any language go to crap.

325
00:16:23.860 --> 00:16:28.600
Yes. So that statement is
generally made without any documentation,

326
00:16:28.600 --> 00:16:32.860
without any research at all.
It's just a supposition. I

327
00:16:32.860 --> 00:16:36.280
believe that with adequate tooling
and with adequate discipline, you

328
00:16:36.280 --> 00:16:41.140
can write JavaScript in any
necessary size. One thing, which

329
00:16:41.140 --> 00:16:43.720
is a problem is we
see a lot of stuff,

330
00:16:43.750 --> 00:16:48.040
which is way, way too
big bloating is a big

331
00:16:48.070 --> 00:16:50.620
problem in all languages. And
apparently it's, it's big on

332
00:16:50.620 --> 00:16:53.260
the web as well. And
on the web, we're less

333
00:16:53.260 --> 00:16:55.330
tolerant of bloat than anywhere
else. Cause we have to

334
00:16:55.330 --> 00:16:58.390
ship all of that crap
over the wire or through

335
00:16:58.390 --> 00:17:02.500
the air. And that is
for most applications, the most

336
00:17:02.500 --> 00:17:06.280
significant cost of the application
of delivering it. One of

337
00:17:06.280 --> 00:17:07.990
the things I preach a
lot, when I talk to

338
00:17:07.990 --> 00:17:09.670
people about how they develop
their apps, I often get

339
00:17:09.670 --> 00:17:12.880
asked, how do I develop
a 1000 screen after JavaScript?

340
00:17:13.270 --> 00:17:14.830
And I say, well, take
the word. Jobs cuts off

341
00:17:14.830 --> 00:17:16.780
that. And I first asked
you, why are you developing

342
00:17:16.780 --> 00:17:19.480
a 1000 screen app is
one monolithic unit in the

343
00:17:19.480 --> 00:17:21.520
first place. How are you
ever going to iterate over

344
00:17:21.520 --> 00:17:23.590
this or update it or
maintain it, or keep going

345
00:17:24.010 --> 00:17:25.960
one to break it into
logical units where you can

346
00:17:25.960 --> 00:17:28.330
ship pieces of the app
that all work together to

347
00:17:28.330 --> 00:17:30.850
the user. It's one usable
app, but for you, you're

348
00:17:30.850 --> 00:17:33.910
shipping components of the app
together. And when you break

349
00:17:33.910 --> 00:17:36.130
things down into their modular
components, it's a lot easier

350
00:17:36.130 --> 00:17:40.540
to maintain, update, forget the
language we just made. JavaScript

351
00:17:40.570 --> 00:17:42.310
may be more difficult to
some people, but the way

352
00:17:42.310 --> 00:17:46.600
I look@itisin.net or in Java
and structured type languages. You're

353
00:17:46.600 --> 00:17:48.550
driving over a bridge with
guard rails. If you hit

354
00:17:48.550 --> 00:17:50.430
those guard rails, you're gonna
bounce back on the road,

355
00:17:50.490 --> 00:17:53.190
right? That helps you do
that. But with JavaScript, they

356
00:17:53.190 --> 00:17:55.530
just remove the guard rails,
the same bridge. If you

357
00:17:55.530 --> 00:17:57.720
want to drive off the
cliff, you can. But why

358
00:17:57.720 --> 00:17:59.970
would you, you know, you
just gotta be disciplined to

359
00:17:59.970 --> 00:18:02.490
go down those roads, follow
things, follow the good patterns.

360
00:18:02.550 --> 00:18:04.370
Oh, they said that about
C and about a similar

361
00:18:04.400 --> 00:18:06.090
things like that as well.
Like when we move up

362
00:18:06.090 --> 00:18:09.270
the stack, but I'm hearing
people sometimes refer to JavaScript

363
00:18:09.270 --> 00:18:11.310
as this wonderful high level
language that allows you to

364
00:18:11.310 --> 00:18:15.090
build rich componentized applications with
lazy loading. And then I

365
00:18:15.090 --> 00:18:17.490
see other people saying, this
is the new assembler I

366
00:18:17.490 --> 00:18:19.080
can get down in the
middle. And we were talking

367
00:18:19.080 --> 00:18:22.800
to the metal. We're talking
really. That's a completely different

368
00:18:22.800 --> 00:18:26.130
thing. So there's this amazingly
clever thing called ASM JS

369
00:18:26.160 --> 00:18:29.520
that was discovered at Mozilla.
And they found that there

370
00:18:29.520 --> 00:18:34.530
are certain idioms of JavaScript
that a clever engine can

371
00:18:34.530 --> 00:18:39.690
optimize very effectively and generate
machine code, which can run

372
00:18:39.690 --> 00:18:44.130
as fast as any other
language. That particular dialect of

373
00:18:44.130 --> 00:18:46.530
JavaScript is a subset of
Java script. But it's not

374
00:18:46.530 --> 00:18:50.940
one that any human being
should write it's way ugly.

375
00:18:50.940 --> 00:18:54.990
It's way complicated machines can
do that stuff very easily,

376
00:18:54.990 --> 00:18:57.930
but humans should not. So
we've got this ironic thing

377
00:18:57.930 --> 00:19:00.870
with JavaScript now that I
think this is the first

378
00:19:00.870 --> 00:19:03.330
time in the history of
computing, that this is true,

379
00:19:03.990 --> 00:19:08.040
that a machine can write
or translate stuff into Java

380
00:19:08.040 --> 00:19:12.270
script that will run faster
than hand written JavaScript. We've

381
00:19:12.270 --> 00:19:15.690
never had anything like that
before. Why is that? Help

382
00:19:15.690 --> 00:19:17.850
me understand that a little
bit deeper because of these

383
00:19:17.850 --> 00:19:21.630
weird idioms, that Java script
doesn't have an entity type,

384
00:19:21.640 --> 00:19:28.110
for example. And, and it
has this crazy plus operator,

385
00:19:28.110 --> 00:19:31.170
which wants to concatenate. And
so that makes it really

386
00:19:31.170 --> 00:19:35.370
hard to generate efficient code.
But by putting these weird

387
00:19:35.370 --> 00:19:38.010
annotations into the code, which
are allowed in the language,

388
00:19:38.040 --> 00:19:43.530
things like after a variable
or constant or an expression,

389
00:19:43.530 --> 00:19:47.370
you say vertical bar zero,
which is a no op

390
00:19:47.460 --> 00:19:49.530
it doesn't mean anything. It
doesn't change the value of

391
00:19:49.530 --> 00:19:51.930
the expression, but it does
guarantee you that it's going

392
00:19:51.930 --> 00:19:55.020
to be an integer. And
so code generator can go,

393
00:19:55.080 --> 00:19:57.990
that's an integer. I know
what to do. So it's

394
00:19:57.990 --> 00:20:00.570
a different style of programming
and it's not like a

395
00:20:00.570 --> 00:20:02.790
type system. It's not a
friendly thing, which helps you

396
00:20:02.790 --> 00:20:05.850
to make more reliable programs.
It's almost the opposite of

397
00:20:05.850 --> 00:20:10.200
that, but properly employed, it
makes programs go faster is

398
00:20:10.200 --> 00:20:13.800
the fact that we have,
you know, quad processor, pocket,

399
00:20:13.800 --> 00:20:16.980
super computers, and with two
gigs of Ram reason enough

400
00:20:17.010 --> 00:20:19.740
for us to start sending
megabytes of Jason across the

401
00:20:19.740 --> 00:20:23.310
wire and utilizing it as
a memory database, God, I

402
00:20:23.310 --> 00:20:26.670
hope not. Well, if it
works people, yeah. If it

403
00:20:26.670 --> 00:20:29.610
works, people will do what
they'll do. Well, I designed

404
00:20:29.610 --> 00:20:33.300
Jason, my expectation was most
of the payloads were going

405
00:20:33.300 --> 00:20:37.170
to be like, okay, maybe
10 K at max. It

406
00:20:37.170 --> 00:20:40.470
really surprises me. Now. I've
seen people creating Jason. Tech's

407
00:20:40.710 --> 00:20:44.610
many gigabytes in size. I
never anticipated that. They'd take

408
00:20:44.610 --> 00:20:47.050
their entire database and they
download it to their client,

409
00:20:47.070 --> 00:20:49.030
whole database and Jason. Yeah.
Which, and they wonder why

410
00:20:49.030 --> 00:20:51.130
their data is out of
sync too. Yeah. It's just

411
00:20:51.130 --> 00:20:54.730
the whole HX thing. We,
most of us still haven't

412
00:20:54.730 --> 00:20:59.830
figured out how to partition
the application efficiently. In the

413
00:20:59.830 --> 00:21:03.340
beginning, it was everything's in
the, in the server, we

414
00:21:03.340 --> 00:21:08.230
treat the client as a
terminal. That was terrible. And

415
00:21:08.230 --> 00:21:11.320
then you see a lot
of people now saying, we'll

416
00:21:11.320 --> 00:21:16.690
move everything into the browser
and we'll treat the server

417
00:21:16.750 --> 00:21:22.210
as a file system. That's
terrible. There's this middle way,

418
00:21:22.270 --> 00:21:26.470
right? Where you're sending just-in-time
data just enough, not sending

419
00:21:26.470 --> 00:21:29.110
everything. And we got him
to this and things like

420
00:21:29.110 --> 00:21:32.500
search results. You know, Google
can find a billion things

421
00:21:32.500 --> 00:21:34.660
which match your query, but
they'll only send you a

422
00:21:34.660 --> 00:21:36.670
10 of them because they
know if they send you

423
00:21:36.670 --> 00:21:38.620
the whole billion, it's going
to take a while and

424
00:21:38.740 --> 00:21:41.260
you're probably in a hurry
and you probably won't look

425
00:21:41.260 --> 00:21:44.740
at more than 10. Anyway,
we should think about that

426
00:21:44.740 --> 00:21:47.790
when we're writing these sorts
of applications, People are in

427
00:21:47.790 --> 00:21:50.790
too much of a hurry
to get code done, I

428
00:21:50.790 --> 00:21:54.120
think. And I think that
with the whole Silicon Valley

429
00:21:54.120 --> 00:21:56.370
side of things, with startups,
people need to be very

430
00:21:56.370 --> 00:21:58.860
agile and quick and get
a POC done and get

431
00:21:58.900 --> 00:22:02.190
a minimum viable product done.
And it's okay in those

432
00:22:02.190 --> 00:22:04.800
States to sort of just
get code done, sling it.

433
00:22:05.070 --> 00:22:07.830
But you know, you have
to, at some point, come

434
00:22:07.830 --> 00:22:11.130
back and say, we can't
ship that for real, to

435
00:22:11.130 --> 00:22:13.950
like a lot of customers.
So at what point do

436
00:22:13.950 --> 00:22:16.320
we take that step back
and say, have I really

437
00:22:16.320 --> 00:22:18.870
designed this right? You know,
did I really, you know,

438
00:22:18.870 --> 00:22:20.610
I, I just, I got
the data to work at

439
00:22:20.610 --> 00:22:24.160
works. It's, it's going, it's
coming, it's displaying. It's, it's

440
00:22:24.180 --> 00:22:27.000
working. Let's just keep fixing
stuff. And it just doesn't

441
00:22:27.000 --> 00:22:29.100
work. Cause you have to
be an architect at some

442
00:22:29.100 --> 00:22:31.620
point, you have to put
that hat on and, and

443
00:22:31.620 --> 00:22:34.770
think about your patterns in
the app. And you can

444
00:22:34.770 --> 00:22:36.840
do it a piece at
a time if you compartmentalize

445
00:22:36.840 --> 00:22:39.990
the app. So it's not
overwhelming As a, as a

446
00:22:39.990 --> 00:22:42.330
server person who is thinking
about an architect and these

447
00:22:42.330 --> 00:22:46.620
large scale applications, how do
you Michelle, and imagine that

448
00:22:46.620 --> 00:22:48.690
slider Mar that slides from
the server, doing all the

449
00:22:48.690 --> 00:22:50.340
work to the client, all
doing all the work and

450
00:22:50.340 --> 00:22:54.210
pick the right heart and
the right partitioning point, the

451
00:22:54.210 --> 00:22:58.110
bright line, if responsibility who's
chewing on what amount of

452
00:22:58.110 --> 00:23:02.100
data I think today, we
still have limited amount. We

453
00:23:02.100 --> 00:23:04.620
should send the browser just
because the fact that, I

454
00:23:04.620 --> 00:23:06.660
mean, you would end up,
you know, how many times

455
00:23:06.660 --> 00:23:09.660
have you seen a browser
hang on you Today? Yeah.

456
00:23:11.610 --> 00:23:14.550
Depends on the track. It
does depend on the browser,

457
00:23:14.550 --> 00:23:19.560
but we need all the
branch to work. It seems

458
00:23:19.560 --> 00:23:24.330
like everyone has a quad
processor now, even crappy phones

459
00:23:24.330 --> 00:23:27.930
have a quad processor. So
everyone has adjustable JavaScript engine.

460
00:23:27.930 --> 00:23:30.300
I mean the JavaScript engines
are darn near as fast

461
00:23:30.300 --> 00:23:34.260
as C. It's not the
compilation, that's the issue. It's

462
00:23:34.260 --> 00:23:36.900
Dominic relation or it's network
traffic. So I feel like

463
00:23:36.930 --> 00:23:39.690
the browser Wars in the
let's see who can have

464
00:23:39.690 --> 00:23:42.450
the fastest JavaScript engender kind
of over. And now it's

465
00:23:42.450 --> 00:23:44.250
more of a, like who's
going to architect the app

466
00:23:44.280 --> 00:23:47.800
that has the right balance
of responsibility. Well, and it's

467
00:23:47.800 --> 00:23:50.770
also on the server side.
You can have throttle issues

468
00:23:50.770 --> 00:23:53.680
too, right? Because you've got
maybe too many users hitting

469
00:23:53.680 --> 00:23:55.930
all at once. I mean,
you can, you can cause

470
00:23:55.930 --> 00:24:00.040
the client to, you know,
have perceived performance issues. And

471
00:24:00.040 --> 00:24:02.230
it really is a bottleneck
at the server because your

472
00:24:02.230 --> 00:24:06.160
same page is up downloading
like 10 to 50 documents

473
00:24:06.160 --> 00:24:09.880
or images that display and
render and on their own,

474
00:24:09.880 --> 00:24:11.680
it would have been fast.
But the way the server

475
00:24:11.680 --> 00:24:13.690
side code was written, wasn't
good enough to make it

476
00:24:13.690 --> 00:24:16.330
parallel or, I mean, there's
just so many places in

477
00:24:16.330 --> 00:24:19.030
an app that can have
performance issues or design issues

478
00:24:19.030 --> 00:24:21.880
that I don't think there's
one silver bullet it's you

479
00:24:21.880 --> 00:24:23.980
have to look at what
you're building and take a

480
00:24:23.980 --> 00:24:27.790
vertical slice. And at some
point say, okay, where are

481
00:24:27.790 --> 00:24:31.780
some patterns we're seeing air
handling patterns, you know, security

482
00:24:31.780 --> 00:24:36.640
patterns and diagnostics and logging
patterns and data transfer patterns

483
00:24:36.640 --> 00:24:39.670
and paging like where do
those fit in my app?

484
00:24:39.700 --> 00:24:43.630
Because every app is different.
So I've heard a lot

485
00:24:43.630 --> 00:24:46.750
of complaints from customers who
have said, I don't want

486
00:24:46.750 --> 00:24:49.120
to put things in JavaScript
because then everyone can see

487
00:24:49.120 --> 00:24:51.640
my code. They're gonna steal
my stuff. The same thing

488
00:24:51.640 --> 00:24:53.200
happened with gotten that early
on. I was like, Oh,

489
00:24:53.200 --> 00:24:56.620
you can decompile. It is
this illusion of intellectual property.

490
00:24:57.880 --> 00:25:00.100
Now that I'm bringing people
are literally saying, well, I

491
00:25:00.100 --> 00:25:01.480
don't want to do that
because there's no way to

492
00:25:01.480 --> 00:25:03.790
secure the web service. I
use API keys, but they

493
00:25:03.790 --> 00:25:05.560
snip that. And they steal
that. I don't want to

494
00:25:05.830 --> 00:25:07.600
give them my JavaScript because
they're just going to take

495
00:25:07.600 --> 00:25:08.920
all of that. So we're
going to do everything on

496
00:25:08.920 --> 00:25:11.350
the server because that's the
last place where they can't

497
00:25:11.350 --> 00:25:14.710
steal our intellectual property. Is
there any validity to that

498
00:25:14.770 --> 00:25:18.610
argument? You guys, Well, the
validity around the keys is

499
00:25:18.610 --> 00:25:21.790
true because you can't really
protect keys and JavaScript, but

500
00:25:22.630 --> 00:25:25.120
there are some tricky ways
you could, you know, find

501
00:25:25.120 --> 00:25:26.710
a way to get a
dynamic key and have a

502
00:25:26.710 --> 00:25:29.980
period like a lease key
or something, but you don't

503
00:25:29.980 --> 00:25:32.350
really want to complicate your
app that way, unless you

504
00:25:32.350 --> 00:25:34.660
really know what you're doing.
So I would suggest that,

505
00:25:34.690 --> 00:25:37.330
you know, from JavaScript, you
should be posting back to

506
00:25:37.330 --> 00:25:40.750
your, you know, MVC and
living in the same security

507
00:25:40.750 --> 00:25:43.930
session with the cookie that
you've already authenticated to and

508
00:25:43.930 --> 00:25:48.040
on SSL. And that's, I
mean, acceptable, that's perfectly acceptable

509
00:25:48.220 --> 00:25:50.590
now you're not problems on
the backend. Right. And then

510
00:25:50.590 --> 00:25:52.870
the backend is where, you
know, the keys are stored

511
00:25:52.870 --> 00:25:55.510
the certificates to call the
other service and whatnot. So

512
00:25:55.780 --> 00:25:59.170
that's the classic implementation that
doesn't get you into trouble.

513
00:25:59.170 --> 00:26:00.970
And I realize sometimes people
want to go out of

514
00:26:00.970 --> 00:26:02.500
that, but if you want
to go out of it,

515
00:26:02.500 --> 00:26:04.570
don't complain about it because
you're going to give something

516
00:26:04.570 --> 00:26:08.050
up. Yeah. But you know,
all Java script code is

517
00:26:08.050 --> 00:26:11.200
free. It's hard to give
this crap away. Right. And

518
00:26:11.200 --> 00:26:14.260
so worrying that someone's going
to steal it. No, that

519
00:26:14.260 --> 00:26:17.800
was more about the key
though, right? Yeah. You can't

520
00:26:17.860 --> 00:26:21.880
trust the browser to keep
any secrets. So yeah, you

521
00:26:21.880 --> 00:26:25.060
don't do that. You don't
put keys. People try. I

522
00:26:25.060 --> 00:26:26.740
think that's the, the issue
is people try and they

523
00:26:26.740 --> 00:26:28.690
use it as a crutch
to say JavaScript, but dress

524
00:26:28.690 --> 00:26:31.720
code equals bad because I
can't put my security in

525
00:26:31.720 --> 00:26:35.200
there. Why are you trying
to shove everything into JavaScript?

526
00:26:35.410 --> 00:26:38.290
Well, we have solutions. If
you're genuinely concerned about security,

527
00:26:38.290 --> 00:26:40.150
you're not putting keys in
Java script and sending them

528
00:26:40.150 --> 00:26:45.150
to the browser. That's not
JavaScript's no. Nope. Well, people

529
00:26:45.150 --> 00:26:47.940
are always trying to ice
skate up Hill. These things

530
00:26:47.940 --> 00:26:53.520
happen. I've noticed I've noticed
more and more visualizations from

531
00:26:53.520 --> 00:26:56.310
the user experience side. Like
things like <inaudible> where in

532
00:26:56.310 --> 00:26:58.350
order to get an effective
visualization, one is to bring

533
00:26:58.350 --> 00:27:00.740
over half a Meg or
make a bite of, of

534
00:27:00.850 --> 00:27:03.120
information. And then they start
using not just JavaScript, but

535
00:27:03.120 --> 00:27:06.450
also as three and things
like that. What about the

536
00:27:06.450 --> 00:27:10.290
peripheral technologies around JavaScript? What,
which ones do you think

537
00:27:10.290 --> 00:27:13.020
are winning? I mean, it's
S is SVG here, here

538
00:27:13.050 --> 00:27:14.610
today, and we can count
on that and feel good

539
00:27:14.610 --> 00:27:19.320
about that. Things like <inaudible>
dot JS for visualizations, charting,

540
00:27:19.320 --> 00:27:22.410
things like that. My personal
opinions, I think that's a

541
00:27:22.410 --> 00:27:24.840
wide open territory. I think
we'll be looking at all

542
00:27:24.840 --> 00:27:27.150
new features over the next
six months to a year

543
00:27:27.150 --> 00:27:30.450
to two years in that
area. Obviously CSS is here.

544
00:27:30.560 --> 00:27:33.540
I think that's firmly entrenched.
It's one. We count on

545
00:27:33.540 --> 00:27:36.300
it, transitions, transitions. That's a
given and anybody who's got

546
00:27:36.300 --> 00:27:38.370
a modern browser, which has
pretty much every mobile device

547
00:27:38.820 --> 00:27:41.040
can handle those things. But
when you get into SVG

548
00:27:41.040 --> 00:27:43.410
and dethrone and other kinds
of three D rendering engines

549
00:27:43.410 --> 00:27:46.680
and animations, that's, what's going
to evolve considerably. I believe

550
00:27:47.430 --> 00:27:50.850
it's still in the founding
stage. It's really? Yeah. They're

551
00:27:50.850 --> 00:27:53.210
still trying to get the
specs to go. That's all

552
00:27:53.210 --> 00:27:55.910
part of the whole sort
of gamification. They call it

553
00:27:55.910 --> 00:27:58.550
right of the enterprise, right?
That trend that's sort of

554
00:27:58.550 --> 00:28:01.850
picking up in the next
few years around making the

555
00:28:01.850 --> 00:28:06.260
work. You do more the
workflow, better making the process

556
00:28:06.260 --> 00:28:09.530
more effective and efficient, but
making it interesting and fun.

557
00:28:09.530 --> 00:28:12.650
So you participate. So that
boring job you have, you're

558
00:28:12.650 --> 00:28:14.630
going to tweet, you're going
to share, you're going to

559
00:28:14.630 --> 00:28:17.150
have statistics and you're going
to get tokens because you

560
00:28:17.150 --> 00:28:19.760
did a good job. And
because everyone's doing it, you're

561
00:28:19.760 --> 00:28:21.740
going to get excited about
that and love your job

562
00:28:21.770 --> 00:28:23.930
more. And I know it
all sounds really hokey, but

563
00:28:23.930 --> 00:28:26.450
that's kind of the, the
new topic that seems to

564
00:28:26.450 --> 00:28:28.940
be happening. That probably over
the next three to five

565
00:28:28.940 --> 00:28:31.910
years, we're going to see
pick it up. Oh, you

566
00:28:31.910 --> 00:28:37.880
got it. Didn't talk about
it yesterday. Hey, Interesting and

567
00:28:37.880 --> 00:28:41.690
fun part. Interesting and fun
for who? Probably not for

568
00:28:41.690 --> 00:28:43.730
the poor bastards. You're gonna
have to use the stuff.

569
00:28:43.790 --> 00:28:47.300
Yeah. Not if they don't
do a good job. Yeah.

570
00:28:47.300 --> 00:28:50.150
It's more fun for the
developers and programmers. Wow. We're

571
00:28:50.150 --> 00:28:51.860
going to do three D
you know, we used to

572
00:28:51.860 --> 00:28:54.350
just do pie charts, But
it's not supposed to be

573
00:28:54.350 --> 00:28:56.690
a game. I think the
intent and you're right. It's

574
00:28:56.690 --> 00:28:58.550
going to go there. Right?
Somebody's going to mess it

575
00:28:58.550 --> 00:29:01.070
up because they're not going
to be focusing on the

576
00:29:01.070 --> 00:29:04.010
UI. They're not going to
be thinking about the user's

577
00:29:04.010 --> 00:29:07.790
experience. And it's 75% psychology
that somebody loves something, right.

578
00:29:07.790 --> 00:29:11.300
25% technology. So that 75%
has to kick it up.

579
00:29:11.300 --> 00:29:14.210
So everybody should be thinking
about usability. How do I

580
00:29:14.210 --> 00:29:17.300
make this interactive? But not
just interactive for nothing. Like,

581
00:29:17.690 --> 00:29:20.900
do people really use this?
And is it working? What

582
00:29:20.900 --> 00:29:23.030
do they think? What do
you think the user wants

583
00:29:23.030 --> 00:29:25.910
to do next? What's their
intent and think of it

584
00:29:25.940 --> 00:29:28.820
before they do so that
it's just, wow, that works.

585
00:29:28.850 --> 00:29:33.020
That's awesome. Where things tend
to go wrong. The worst

586
00:29:33.440 --> 00:29:36.740
is forgetting who we're working
for. So I have a

587
00:29:36.740 --> 00:29:41.560
list of three parties. I'm
working for number one, the

588
00:29:41.770 --> 00:29:44.230
poor People have to use
the software. Then writing there

589
00:29:44.230 --> 00:29:46.150
at the top of my
list. I really care about

590
00:29:46.150 --> 00:29:49.680
them. I want to not
make their lives unpleasant. I

591
00:29:49.690 --> 00:29:50.920
want to make it as
good for them as I

592
00:29:50.920 --> 00:29:53.260
can. Number two, I want
to make it work with

593
00:29:53.260 --> 00:29:55.870
the people I'm working with.
Even people who are going

594
00:29:55.870 --> 00:29:57.400
to be working with me
in the future, who I

595
00:29:57.400 --> 00:29:59.530
haven't met yet, who I
may never meet, who are

596
00:29:59.530 --> 00:30:01.330
going to have to work
with my code. And I

597
00:30:01.330 --> 00:30:03.550
want to have so much
goodness, in my code that

598
00:30:03.550 --> 00:30:05.740
they're not going to hate
me for what I've done

599
00:30:05.740 --> 00:30:08.590
to them or talk bad
about you. Yeah, they can,

600
00:30:09.100 --> 00:30:11.650
but they'll talk, but I
really do want to make

601
00:30:11.650 --> 00:30:15.100
their lives better. And then
number three, the people who

602
00:30:15.100 --> 00:30:18.580
you're working for, the people
that are paying you so

603
00:30:18.580 --> 00:30:22.390
much of our software is
labeled legacy, which means it

604
00:30:22.390 --> 00:30:26.260
has negative value to the
enterprise. It's, it's a liability

605
00:30:27.160 --> 00:30:31.030
and I want to be
producing stuff so that the

606
00:30:31.090 --> 00:30:35.920
enterprise is actually better off
for having employed and most

607
00:30:35.920 --> 00:30:38.530
software. I don't think qualify
as to that, but I

608
00:30:38.530 --> 00:30:40.300
think that's what we should
all be trying to, to

609
00:30:40.400 --> 00:30:44.740
get. And so trying to
adopt the latest technology because

610
00:30:44.740 --> 00:30:47.710
it's spawn, or we put
3d in an accounting application

611
00:30:47.710 --> 00:30:50.200
because we can, because we're
bored because we we're hit

612
00:30:50.200 --> 00:30:52.450
or jobs or lives or
whatever. And we think maybe

613
00:30:52.450 --> 00:30:56.950
software is the answer. It's
not, you know, it's, it's

614
00:30:57.070 --> 00:31:00.580
providing good service to humanity.
That's the answer? What was

615
00:31:00.580 --> 00:31:02.080
he saying? What about people
who actually do hate their

616
00:31:02.080 --> 00:31:04.840
jobs and their lives? Because
they're on ice six or

617
00:31:05.830 --> 00:31:07.880
eight and they're hearing all
of this. They say, well,

618
00:31:07.880 --> 00:31:10.480
that's great. You, but we
are back in the past.

619
00:31:10.480 --> 00:31:13.060
And my boss just let
us upgrade to, I ate

620
00:31:15.990 --> 00:31:19.290
Kind of related to this.
Maybe not entirely directly related,

621
00:31:19.290 --> 00:31:22.320
but somewhat related. I, I
spoke with a woman who

622
00:31:22.320 --> 00:31:26.250
is a head of HR
at Groupon. And she shared

623
00:31:26.250 --> 00:31:29.280
a very interesting statistic with
me in that is that

624
00:31:29.640 --> 00:31:33.900
last year there were over
a million jobs developer jobs

625
00:31:33.930 --> 00:31:37.920
that didn't get filled because
there weren't enough qualified applicants.

626
00:31:39.150 --> 00:31:42.810
Yeah. Like there were a
lot, in other words, all

627
00:31:42.810 --> 00:31:47.430
a y'all should never have
trouble finding a job because

628
00:31:47.610 --> 00:31:51.030
you are the people who
a lot of people are

629
00:31:51.030 --> 00:31:54.960
looking for. And so to
kind of talk about what

630
00:31:54.960 --> 00:31:57.090
you're talking about, if you
hate your job and you

631
00:31:57.090 --> 00:32:00.060
don't like what you're doing,
go find another one because

632
00:32:00.180 --> 00:32:04.260
it exists. It's an exclusively
software engineering, computer science kind

633
00:32:04.260 --> 00:32:05.730
of thing right now. I
mean, I thought the economy

634
00:32:05.730 --> 00:32:08.130
was in the toilet. They
call me, I'm just saying,

635
00:32:08.160 --> 00:32:10.080
all I'm saying is I
talked to a woman who

636
00:32:10.260 --> 00:32:12.390
I'm not. So I'm just
saying all I'm saying, isn't

637
00:32:12.390 --> 00:32:15.150
just saying, well, I didn't
pull this and pull this

638
00:32:15.150 --> 00:32:20.760
number out of my air.
I, you know, I talked

639
00:32:20.760 --> 00:32:22.570
to somebody who, this is
her job. I hear this.

640
00:32:23.970 --> 00:32:26.790
She's in technical recruiting. And
she has to work really

641
00:32:26.790 --> 00:32:29.670
hard to find people who
are qualified to work for

642
00:32:29.670 --> 00:32:34.410
them. And so whenever I
hear people say, Oh, it's

643
00:32:34.410 --> 00:32:36.690
hard. And this and this.
And I'm like, in my

644
00:32:36.690 --> 00:32:41.230
own personal developer, hell, then
I'm like, well leave. But

645
00:32:41.230 --> 00:32:43.540
it's more than leaving. We've
got a lot of programmers

646
00:32:43.540 --> 00:32:46.750
out of work. And most
of them are under skilled

647
00:32:46.810 --> 00:32:49.420
that they have not kept
up. And so they are

648
00:32:49.420 --> 00:32:53.050
not employable. There are jobs
there, if they could level

649
00:32:53.050 --> 00:32:54.910
up their skills and they
haven't. So what do they

650
00:32:54.910 --> 00:32:56.920
do? Where do we, where
do we level up? Is

651
00:32:56.920 --> 00:32:59.620
it just a matter of
working on some little league

652
00:32:59.650 --> 00:33:02.140
project and writing it in
angular and becoming proficient night?

653
00:33:02.500 --> 00:33:06.400
I think it is working
with craft writing programs, you

654
00:33:06.400 --> 00:33:10.210
know, instead of watching TV
and waiting for the phone

655
00:33:10.210 --> 00:33:13.330
to ring, it's like anything,
if you don't work on

656
00:33:13.330 --> 00:33:15.370
it, it's not going to
happen for you. And one

657
00:33:15.370 --> 00:33:17.320
thing, I go to a
lot of companies and they

658
00:33:17.320 --> 00:33:19.180
ask me how we do
keep up to speed on

659
00:33:19.180 --> 00:33:21.220
these things. And one of
the things I tell them

660
00:33:21.220 --> 00:33:22.480
a lot is, well, tell
me what you do. Now.

661
00:33:22.630 --> 00:33:24.490
Tell me more about how
you work, how you live,

662
00:33:24.490 --> 00:33:27.190
how you do your craft.
And they tell me what

663
00:33:27.190 --> 00:33:28.840
they do. And it's funny
how often I go to

664
00:33:28.840 --> 00:33:30.790
a company and the people
in the secure next to

665
00:33:30.790 --> 00:33:32.920
the next person's closest. Me
and Michelle are right here.

666
00:33:32.980 --> 00:33:34.780
Don't talk to each other.
They might work on the

667
00:33:34.780 --> 00:33:38.200
same thing, but they're not
coordinating on this. Get up

668
00:33:38.200 --> 00:33:40.060
and talk to the people
around you. You're the one

669
00:33:40.060 --> 00:33:41.620
who has the power to
change what you have to

670
00:33:41.620 --> 00:33:44.110
do. She want to learn
something new, make it happen.

671
00:33:44.140 --> 00:33:46.480
Don't blame your boss because
they won't let you do

672
00:33:46.480 --> 00:33:48.490
it. Don't go on the
internet. Go. Well, it's too

673
00:33:48.490 --> 00:33:51.160
hard. I couldn't do it.
Well, we can always blame

674
00:33:51.160 --> 00:33:52.960
forever and ever, but at
some point you got to

675
00:33:52.960 --> 00:33:55.300
get up and actually get
involved. This is interesting. I

676
00:33:55.300 --> 00:33:57.460
didn't think that the panel
would turn into like a

677
00:33:57.690 --> 00:34:02.400
pep talk for the disenfranchised
developer, but you know what?

678
00:34:02.400 --> 00:34:04.360
You bring up a really
interesting point. I've talked about

679
00:34:04.360 --> 00:34:06.310
this. I have different terms.
I've talked about this social

680
00:34:06.310 --> 00:34:08.680
developer, the idea of being
a social developer. I've also

681
00:34:08.680 --> 00:34:11.530
used this term before the
idea of a dark matter

682
00:34:11.530 --> 00:34:14.470
developer. They take up the
larger amount of the space

683
00:34:14.470 --> 00:34:18.730
in the universe. We can't
prove that they exist. I'm

684
00:34:18.730 --> 00:34:20.710
sure that for every one
of you, all that are

685
00:34:20.710 --> 00:34:25.060
here, there's a thousand dark
matter developers because you, because

686
00:34:25.060 --> 00:34:27.310
you're at a conference listening
to a panel of that

687
00:34:27.310 --> 00:34:29.350
software, you care about your
craft. You are in the

688
00:34:29.350 --> 00:34:34.060
top 1% of developers by
your very presence here and

689
00:34:34.060 --> 00:34:37.750
the other 99 or 90
or 999 that are feeling

690
00:34:37.750 --> 00:34:42.250
disenfranchised. I'm hearing you say,
get out there, have conversations,

691
00:34:42.460 --> 00:34:46.810
Hare on things. Pairing helps
a lot. Yeah. Herring is

692
00:34:46.810 --> 00:34:49.120
the only reason I still
have a job. I feel

693
00:34:49.120 --> 00:34:51.820
like pairing when it was
introduced kind of like formally,

694
00:34:51.820 --> 00:34:54.640
like 10 years ago, just
completely changed the way that

695
00:34:54.640 --> 00:34:57.460
I focused. I mean, I
have trouble focusing and as

696
00:34:57.460 --> 00:35:00.670
you can tell, no, and
being able to sit down

697
00:35:00.670 --> 00:35:02.740
with someone and just brainstorm.
And even though I'm a

698
00:35:02.740 --> 00:35:05.560
remote worker, I pair with
people remotely and just keep

699
00:35:05.560 --> 00:35:08.200
a whole monitor, dedicated to
someone just to sit there

700
00:35:08.200 --> 00:35:10.930
and we can work a
problem. It doesn't even matter

701
00:35:10.930 --> 00:35:14.230
if you are quote unquote,
the, the expert or you

702
00:35:14.230 --> 00:35:16.990
think you're the expert at
this topics that you're pairing

703
00:35:16.990 --> 00:35:20.500
on because I find it
really rewarding to take something

704
00:35:20.500 --> 00:35:22.750
that I think I know
all the answer to and

705
00:35:22.750 --> 00:35:25.570
talk to somebody else. Who's
also interested in that topic

706
00:35:25.570 --> 00:35:28.480
because I can always learn
something from somebody else that's

707
00:35:28.480 --> 00:35:30.640
done at a different way,
or maybe we'll come to

708
00:35:30.640 --> 00:35:32.530
a middle ground or maybe
it will prove that my

709
00:35:32.530 --> 00:35:34.690
theory was right. But it's,
it's cool to hear that.

710
00:35:34.690 --> 00:35:38.070
And it's cool to experience
that. And most times something

711
00:35:38.070 --> 00:35:40.290
New is learned, you know,
in that process on both

712
00:35:40.290 --> 00:35:42.600
sides. So, yeah. And not
only that, even if you

713
00:35:42.600 --> 00:35:45.600
are the so called expert,
by going through the process

714
00:35:45.600 --> 00:35:48.960
of trying to teach somebody,
something, you Uplevel your skills

715
00:35:48.960 --> 00:35:52.230
tremendously, because I don't know
about you guys, but I

716
00:35:52.230 --> 00:35:54.870
hate looking like, I don't
know what I'm talking to

717
00:35:54.870 --> 00:35:57.450
you about. And so whenever
I had to teach something,

718
00:35:57.600 --> 00:36:00.060
I would be like trying
to find out every single

719
00:36:00.060 --> 00:36:02.850
last thing so that I
would know that if somebody

720
00:36:02.850 --> 00:36:05.010
asked me a question that
I had some kind of

721
00:36:05.100 --> 00:36:07.560
something in my, you know,
in my bag of tricks

722
00:36:07.560 --> 00:36:09.030
to come back with them
that, and if I couldn't

723
00:36:09.030 --> 00:36:11.310
find it, then that was
something gave me an opportunity

724
00:36:11.310 --> 00:36:13.700
to learn something else. Just
use the term in our

725
00:36:13.700 --> 00:36:16.730
conversation yesterday in software archeology,
I asked him if he

726
00:36:16.730 --> 00:36:18.950
was the inventor of Jason,
he said, no, I discovered

727
00:36:18.950 --> 00:36:22.730
it. It was already there.
It's playing with software, working

728
00:36:22.730 --> 00:36:25.220
on software isn't necessarily that
you have an inspiration and

729
00:36:25.220 --> 00:36:29.000
you discover something, you uncover
it well. Yeah. So the

730
00:36:29.000 --> 00:36:33.200
best idea currently in software
now is functional programming. It's

731
00:36:33.200 --> 00:36:36.760
something that JavaScript got in
99. That's something that's in

732
00:36:36.760 --> 00:36:39.080
C sharp. Now Java's going
to have it next year.

733
00:36:39.080 --> 00:36:43.850
Maybe there are lots of
new languages coming on line,

734
00:36:43.850 --> 00:36:46.700
which are all about that.
And that's an idea that

735
00:36:46.700 --> 00:36:50.720
comes from 1958 and it
took a really long time

736
00:36:50.750 --> 00:36:53.990
for it to move into
the mainstream, but we're finally

737
00:36:53.990 --> 00:36:56.720
adopting it because it works.
It is a solution to

738
00:36:56.720 --> 00:36:59.810
problems that we have now
like managing asynchronicity and other

739
00:36:59.810 --> 00:37:05.700
things that are peculiar to
the future. So often we're,

740
00:37:05.700 --> 00:37:08.510
we're chasing the new shiny
thing, but often the thing

741
00:37:08.510 --> 00:37:12.050
we should be chasing is
something that was invented a

742
00:37:12.050 --> 00:37:16.190
long, long time ago, but
not adequately recognized how much

743
00:37:16.190 --> 00:37:21.140
time should we spend reading
whatever kind of historical documents,

744
00:37:21.140 --> 00:37:25.130
finding historical context. I think
we should be doing a

745
00:37:25.130 --> 00:37:28.220
lot more of that as
a profession, we seem to

746
00:37:28.220 --> 00:37:31.940
have no intellectual curiosity about
how we got here and

747
00:37:32.000 --> 00:37:36.470
in what mistakes and accidents
and insights and inventions led

748
00:37:36.470 --> 00:37:39.410
to where we are. It's
not that the smartest guys

749
00:37:39.410 --> 00:37:41.330
in the world got in
a room and decided, and

750
00:37:41.330 --> 00:37:43.220
this is how it will
be. And this is what

751
00:37:43.220 --> 00:37:46.460
we do. It wasn't like
that at all. And understanding

752
00:37:47.330 --> 00:37:49.700
how we got here and
the roads not taken and

753
00:37:49.700 --> 00:37:52.520
the missed opportunities and all
of that. For example, one

754
00:37:52.520 --> 00:37:54.860
of the best guys who
ever lived was Doug Engelbart,

755
00:37:55.310 --> 00:38:00.410
who was doing the augmentation
project at Sri brilliant way

756
00:38:00.410 --> 00:38:02.870
ahead of his time stuff.
Way, way ahead. So far

757
00:38:02.870 --> 00:38:05.330
as who did the greatest
demo ever done the mother

758
00:38:05.330 --> 00:38:08.780
of all time, Mark he's
best remembered today for having

759
00:38:08.780 --> 00:38:12.050
invented the mouse. The mouse
was the least of the

760
00:38:12.050 --> 00:38:15.500
things that he did, and
we still have not caught

761
00:38:15.500 --> 00:38:18.290
up to his vision. Although
most of what we're doing

762
00:38:18.290 --> 00:38:20.600
now is a direct consequence
of things that he was

763
00:38:20.600 --> 00:38:23.990
developing. There's still stuff in
his vision, which we haven't

764
00:38:23.990 --> 00:38:28.460
accomplished yet. So understanding angle,
part, going back and reading

765
00:38:28.460 --> 00:38:30.980
his papers, looking at his
demo and going, wow, you

766
00:38:30.980 --> 00:38:33.350
know, how, how do we
make this stuff real? I

767
00:38:33.350 --> 00:38:34.910
think that'd be a valuable
thing for us to be

768
00:38:34.930 --> 00:38:37.780
doing as a brief Aside
about when was the mother

769
00:38:37.780 --> 00:38:42.300
of all time. I think
it was 1967. At that

770
00:38:42.300 --> 00:38:45.600
time everybody was on punch
cards. He was on CRTs

771
00:38:45.600 --> 00:38:51.600
that were networked with real
time teleconferencing and yeah, Go

772
00:38:51.600 --> 00:38:54.420
out there and being for
the mother of all demos

773
00:38:54.720 --> 00:38:56.760
and watch. I think it's
about an hour 80 minutes

774
00:38:56.760 --> 00:39:01.530
long, and you've got multi
editing over distance with two

775
00:39:01.530 --> 00:39:06.660
way video communication with hypertext
hypertext before any of these

776
00:39:06.660 --> 00:39:08.670
things exist. And even now
they still don't exist in

777
00:39:08.670 --> 00:39:12.300
this elegant of a way.
Right? 1967. Oh yeah. This

778
00:39:12.300 --> 00:39:14.310
guy it's called, it was
called the mother of all

779
00:39:14.310 --> 00:39:16.770
demos for We did. And
it was a demo on

780
00:39:16.800 --> 00:39:19.800
his laboratory was in Menlo
park. The demo was conducted

781
00:39:19.800 --> 00:39:25.050
in San Francisco over the
network. They had parties in

782
00:39:25.050 --> 00:39:29.940
both locations interacting so far
ahead of his time. Wow.

783
00:39:31.650 --> 00:39:33.480
Yeah, that's a good point.
We should all know about

784
00:39:33.480 --> 00:39:36.540
this guy. It's amazing stuff.
One thing I did want

785
00:39:36.540 --> 00:39:38.340
to cover, I'm just going
to change direction a little

786
00:39:38.340 --> 00:39:41.730
bit. I was talking with
Christian Heilmann from Mozilla about

787
00:39:41.730 --> 00:39:44.640
their operating system, their Firefox
EOS, which is all JavaScript

788
00:39:44.640 --> 00:39:46.290
and all the, and one
of the things that I

789
00:39:46.290 --> 00:39:49.530
got from him was that
we complain about the power

790
00:39:49.530 --> 00:39:52.440
usage and the power issues
with our phones. And you

791
00:39:52.440 --> 00:39:54.780
say, Oh man, this phone
sucks. And that laptop sucks,

792
00:39:54.960 --> 00:39:58.020
but we never associate the
power hungriness or not with

793
00:39:58.020 --> 00:40:00.480
a website. We might do
this. I could have the

794
00:40:00.480 --> 00:40:04.170
same phone that John has,
except he visits news.com and

795
00:40:04.170 --> 00:40:06.630
I visit cnn.com. And I
don't understand why my battery

796
00:40:06.630 --> 00:40:08.550
doesn't last until we have
more than four hours. And

797
00:40:08.550 --> 00:40:11.580
he lasts all day. I've
never once said to myself,

798
00:40:11.610 --> 00:40:15.090
I wonder if it's inappropriate
use of JavaScript and CSS

799
00:40:15.360 --> 00:40:18.060
in the website I'm visiting
that is causing that power

800
00:40:18.060 --> 00:40:21.270
issue. Are those kinds of
things we need to worry

801
00:40:21.270 --> 00:40:23.610
about because the folks that
at Mozilla would indicate that

802
00:40:23.610 --> 00:40:26.580
they in fact, are, we
need to be thinking about

803
00:40:27.060 --> 00:40:30.480
this many Watts, you know,
milliwatts are being used because

804
00:40:30.570 --> 00:40:33.000
I chose to do a
tight loop with jQuery to

805
00:40:33.000 --> 00:40:36.000
do a CSS animation when
I could have used CSS

806
00:40:36.000 --> 00:40:37.890
three. And it hadn't happened
on the hardware and the

807
00:40:37.890 --> 00:40:42.180
GPU, and this is literally
orders of magnitude, more of

808
00:40:42.180 --> 00:40:44.550
power. Do we need to
make understanding of power usage

809
00:40:44.550 --> 00:40:46.440
into the web? And Mavericks
has just put that kind

810
00:40:46.440 --> 00:40:49.260
of stuff in Safari and
into the operating system recently.

811
00:40:49.650 --> 00:40:53.220
Any thoughts about power usage
in JavaScript? Yeah, I feel,

812
00:40:53.250 --> 00:40:57.630
I feel torn on that
topic in general because performance

813
00:40:57.630 --> 00:41:00.060
is a huge issue and
performance in many factors and

814
00:41:00.060 --> 00:41:03.120
battery consumption, speed is one
side of it. But the

815
00:41:03.120 --> 00:41:05.430
other side of it is
you should be aware of

816
00:41:05.430 --> 00:41:07.350
certain things at the start
of an application. When you

817
00:41:07.350 --> 00:41:10.380
design any system back in
front of wherever that you

818
00:41:10.380 --> 00:41:12.810
just shouldn't be doing. For
example, animations, if you can

819
00:41:12.810 --> 00:41:15.780
support CSS three transitions and
animations, you should be using

820
00:41:15.780 --> 00:41:17.460
them. You shouldn't be running
JavaScript to do those things

821
00:41:17.460 --> 00:41:19.770
because it will consume more.
And it's not just performance

822
00:41:19.770 --> 00:41:21.720
in the battery. It says
the app and the experience

823
00:41:21.720 --> 00:41:25.380
and everything else. But the
other side is the over-optimization

824
00:41:25.380 --> 00:41:27.990
of things. We can analyze
things to death. And if

825
00:41:27.990 --> 00:41:30.870
you do that, you're going
to develop an app that

826
00:41:30.870 --> 00:41:33.110
you're going to spend six
months designing, and then you

827
00:41:33.110 --> 00:41:35.300
have no time left to
actually write the app. So

828
00:41:35.300 --> 00:41:37.580
I generally tend to record
recognize people when they are

829
00:41:37.580 --> 00:41:39.860
trying to optimize things, take
the canned things that you

830
00:41:39.860 --> 00:41:42.410
know, we're going to make
the big impact. Do those

831
00:41:42.500 --> 00:41:45.080
get an iteration of the
app out first, see how

832
00:41:45.080 --> 00:41:48.170
it operates. Then when you
identify this is an issue,

833
00:41:48.440 --> 00:41:50.720
let's go back and let's
operate on that because there's

834
00:41:50.720 --> 00:41:52.610
lots of apps that don't
need that kind of optimization.

835
00:41:52.810 --> 00:41:56.260
You just described lean startup.
So, you know, lean startup.

836
00:41:56.410 --> 00:41:59.320
Yeah. I mean the whole
iterative process that really has

837
00:41:59.320 --> 00:42:01.050
nothing to do with startups,
to be honest. I mean,

838
00:42:01.160 --> 00:42:03.670
it has to do with
startups because people who are

839
00:42:03.730 --> 00:42:06.310
doing startups need to show
progress to get the funding,

840
00:42:06.310 --> 00:42:07.810
they got to get something
live. They got to get

841
00:42:07.810 --> 00:42:11.140
some people tracking and using
the product. But any company,

842
00:42:11.140 --> 00:42:14.650
anybody building anything, in my
opinion, you know, it's okay

843
00:42:14.650 --> 00:42:17.770
to quote unquote, sling the
first thing together to get

844
00:42:17.770 --> 00:42:20.170
it out there because you
don't even know how you're

845
00:42:20.170 --> 00:42:22.000
going to end up designing
it. Or if people like

846
00:42:22.000 --> 00:42:25.630
what you're doing, don't even
waste a minute on perfecting

847
00:42:25.630 --> 00:42:28.480
the code and the architecture
till, you know, somebody's actually

848
00:42:28.480 --> 00:42:30.940
going to use the thing
that you're building, but you

849
00:42:30.940 --> 00:42:33.550
have to take the time
to go back. And that's

850
00:42:33.550 --> 00:42:36.250
where people mess up you
either. So I was an

851
00:42:36.250 --> 00:42:39.580
architect for what, like just
architecture for like 10 years.

852
00:42:39.610 --> 00:42:41.620
And I didn't do a
lot of app development. And

853
00:42:41.620 --> 00:42:43.810
then I went out and
became part of a startup

854
00:42:43.810 --> 00:42:45.430
and had to actually write
the code. And I built

855
00:42:45.430 --> 00:42:48.430
an STS like soup to
nuts, 300 hours a month

856
00:42:48.430 --> 00:42:50.080
for like, I don't know
how many months, but like

857
00:42:50.110 --> 00:42:53.020
just hardcore development. And then
I realized, Oh, well this

858
00:42:53.020 --> 00:42:55.390
is what it's like to
finish stuff. Okay. So I

859
00:42:55.390 --> 00:43:00.850
remembered, but the point is
that architecture, my first instinct

860
00:43:00.850 --> 00:43:03.400
is always architect. First architect,
first gotta design, got to

861
00:43:03.400 --> 00:43:05.680
design. And I started doing
that with my startups. And

862
00:43:05.680 --> 00:43:08.110
then I realized, wait a
minute. I'm like not letting

863
00:43:08.110 --> 00:43:10.960
us get stuff done because
I'm too being too anal

864
00:43:10.960 --> 00:43:13.750
about like how this is
designed and where stuff goes.

865
00:43:13.750 --> 00:43:15.820
So I'm just going to
stop that right now. And

866
00:43:15.820 --> 00:43:18.220
as soon as I stopped
that we got stuff done

867
00:43:18.340 --> 00:43:20.440
and things got shipped. And
then we were able to

868
00:43:20.440 --> 00:43:22.480
go back and fix stuff.
And just recently, because some

869
00:43:22.480 --> 00:43:24.760
customers are coming on board,
took us a couple sprints

870
00:43:24.760 --> 00:43:27.010
and really cleaned up some
things, you know, before the

871
00:43:27.010 --> 00:43:29.740
app has gotten bigger and
too wide and too massive

872
00:43:29.740 --> 00:43:32.410
to manage that. So you've
got to find that sweet

873
00:43:32.410 --> 00:43:36.520
spot. It is a tight
rope because you're the problem

874
00:43:36.520 --> 00:43:39.790
is your boss. So, you
know, I, I'm the one

875
00:43:39.790 --> 00:43:43.210
making that decision saying, I'm
not shipping that like this,

876
00:43:43.600 --> 00:43:45.460
but if your boss doesn't
agree that way and they

877
00:43:45.460 --> 00:43:46.960
just say, no, no, no,
this is good enough ship.

878
00:43:46.960 --> 00:43:49.600
It let's keep going. Then
they're going to cause that

879
00:43:49.600 --> 00:43:51.850
not to work. So then
you have to design upfront

880
00:43:52.090 --> 00:43:54.910
to make sure They may
just say, Oh, we'll ship

881
00:43:54.920 --> 00:43:57.670
that we'll fix it later.
And then 15 years later,

882
00:43:57.670 --> 00:44:04.450
so someone for archeologists uncovers
that code, It has to

883
00:44:04.450 --> 00:44:10.330
deal with the consequences. Then
you'll be embarrassed. I can

884
00:44:10.330 --> 00:44:13.930
only hope That's also where
discipline comes into play. I

885
00:44:13.930 --> 00:44:15.520
mean, some of the companies
I've been working with lately,

886
00:44:15.520 --> 00:44:17.800
they struggle with that. We
have a deadline. It doesn't

887
00:44:17.800 --> 00:44:19.180
matter what we're building. We
just have to get the

888
00:44:19.180 --> 00:44:20.860
app out by then. Well,
what if we can't get

889
00:44:20.860 --> 00:44:22.660
all the features done? It
doesn't matter. The app has

890
00:44:22.660 --> 00:44:24.550
to be out by this
date. That's the money we

891
00:44:24.550 --> 00:44:26.320
have otherwise it's gone and
we all live in that

892
00:44:26.320 --> 00:44:29.320
world. Right. But if you
can iterate through and create

893
00:44:29.320 --> 00:44:30.700
version of the app and
get it out there and

894
00:44:30.700 --> 00:44:33.900
try it, sometimes it's better
to spend, pick a number,

895
00:44:33.900 --> 00:44:37.530
a hundred thousand dollars for,
you know, outsource some application

896
00:44:37.530 --> 00:44:40.290
and get it written on
a platform, Android, iOS, whatever,

897
00:44:40.590 --> 00:44:42.660
just to see if it
works and is viable to

898
00:44:42.660 --> 00:44:44.700
get that feedback from the
users to find out, do

899
00:44:44.700 --> 00:44:47.160
you like it? We often
don't get to talk to

900
00:44:47.160 --> 00:44:49.620
the most important people who
use these apps. And we've

901
00:44:49.620 --> 00:44:52.920
designed the ask by based
upon timelines and deadlines and

902
00:44:52.920 --> 00:44:54.480
money and what our boss
is trying to tell us

903
00:44:54.480 --> 00:44:55.410
to do. And when we
have to get home for

904
00:44:55.410 --> 00:44:58.470
dinner, but the people using
the apps, don't often even

905
00:44:58.470 --> 00:45:00.120
know what they want to
do until they get something

906
00:45:00.120 --> 00:45:02.430
in their hands. Right? So
if you wait a year

907
00:45:02.460 --> 00:45:04.740
to do that, you've lost
a year's of the valuable

908
00:45:04.740 --> 00:45:09.350
information. So I kinda, I
look at this, you know,

909
00:45:09.530 --> 00:45:13.490
the, the whole decision that
tightrope as something that depends

910
00:45:13.490 --> 00:45:16.730
on what you're doing, startups
whip it out there, but

911
00:45:16.760 --> 00:45:18.860
whoever's in charge to make
sure you come back before

912
00:45:18.860 --> 00:45:21.530
it gets to be messy
in a business. When you're

913
00:45:21.530 --> 00:45:23.750
not the boss, you're going
to have to be careful

914
00:45:23.750 --> 00:45:26.550
about that because somebody might
say deadline, deadline, deadline, sorry.

915
00:45:26.550 --> 00:45:29.000
You know, time to fix
what I did when I

916
00:45:29.000 --> 00:45:31.580
was building that security product,
I had to give it

917
00:45:31.580 --> 00:45:33.050
to customers and it had
to work. And it was

918
00:45:33.050 --> 00:45:35.870
a security product. So kind
of important that it's, you

919
00:45:35.870 --> 00:45:39.950
know, secure. So I was
in the middle of designing

920
00:45:39.950 --> 00:45:42.830
it and getting some features
out. And I realized if

921
00:45:42.830 --> 00:45:45.380
I just take a step
back now, after we added

922
00:45:45.380 --> 00:45:47.480
a certain number of things
and just fix this and

923
00:45:47.480 --> 00:45:49.250
this and this and bring
it together with common code

924
00:45:49.250 --> 00:45:51.680
base. Cause I saw the
pattern cause I was the

925
00:45:51.680 --> 00:45:54.770
main person seeing everything, which
is also useful by the

926
00:45:54.770 --> 00:45:56.960
way, to have somebody who
sees the whole thing. Sure.

927
00:45:56.960 --> 00:46:00.080
But that's the chief architect
program. There's a luxury, right?

928
00:46:00.080 --> 00:46:02.420
It's a luxury, but each
of you are describing luxuries,

929
00:46:02.420 --> 00:46:04.010
by the way, you've described
being able to go and

930
00:46:04.010 --> 00:46:06.470
do a proof of concept
and have outsourced that's luxury,

931
00:46:06.920 --> 00:46:09.170
the luxury of the chief.
But I'm trying to show

932
00:46:09.170 --> 00:46:12.020
you only a point that
I realized not everybody will

933
00:46:12.230 --> 00:46:14.690
sit in this position and
it might never happen to

934
00:46:14.840 --> 00:46:17.630
you cause you're on a
team, but I'm impressing the

935
00:46:17.630 --> 00:46:21.110
value of this, which is
I had a customer waiting

936
00:46:21.110 --> 00:46:23.300
and I stayed up how
many nights in a row.

937
00:46:23.330 --> 00:46:26.210
But I purposely like, just
kind of said, like this

938
00:46:26.210 --> 00:46:28.010
is going to be late.
Like I just pushed it

939
00:46:28.400 --> 00:46:30.140
and I didn't want to
push it for their sake.

940
00:46:30.170 --> 00:46:32.120
But I knew that if
I didn't for their sake,

941
00:46:32.120 --> 00:46:33.620
the next thing they asked
for was going to be

942
00:46:33.620 --> 00:46:35.300
like taking me forever. Cause
I would've had to go

943
00:46:35.300 --> 00:46:38.600
back and do it. So
I took the executive decision

944
00:46:38.600 --> 00:46:40.250
and I took a step
back and I was like

945
00:46:40.250 --> 00:46:42.170
a week and a half
late working. Nice, nice, nice

946
00:46:42.170 --> 00:46:44.750
nights, nights, weekends, weekends. But
when I cleaned that stuff

947
00:46:44.750 --> 00:46:47.450
up, Oh my God was
everything else fast. Like, I

948
00:46:47.450 --> 00:46:49.610
mean, you could just add
features like this, like that,

949
00:46:49.610 --> 00:46:52.280
like big bang. And that's
the kind of stuff that

950
00:46:52.280 --> 00:46:55.280
you got to tell your
boss or whomever, you know,

951
00:46:55.310 --> 00:46:58.760
that that's going to help
them understand the importance of

952
00:46:58.760 --> 00:47:01.670
taking a step back and
making time for that. And

953
00:47:01.670 --> 00:47:03.740
every developer should know how
to talk to their boss.

954
00:47:04.280 --> 00:47:06.530
Well, should be able to
communicate. It seems like with

955
00:47:06.530 --> 00:47:11.660
that, with that approach, that
we're, then you know, the

956
00:47:11.660 --> 00:47:14.930
way to actually make it
a compelling argument for your

957
00:47:14.930 --> 00:47:19.040
bosses to also talk time
and money. If we put

958
00:47:19.100 --> 00:47:21.770
this much more time into
it, we will be able

959
00:47:21.770 --> 00:47:24.770
to save this much amount
of time later in this

960
00:47:24.770 --> 00:47:27.560
amount of amount of money.
And if you're going to

961
00:47:27.560 --> 00:47:30.460
have to deal with that
conversation, you should probably understand

962
00:47:30.700 --> 00:47:34.000
That consequences too, as well.
If we don't do this,

963
00:47:34.000 --> 00:47:36.490
this is what's going to
happen. Your boss doesn't care

964
00:47:36.490 --> 00:47:38.110
that if we don't use
angular, I'm not going to

965
00:47:38.110 --> 00:47:41.280
learn the coolest new thing.
That was a really interesting

966
00:47:41.280 --> 00:47:45.090
thing. The idea that underneath
discipline, underneath measuring underneath these

967
00:47:45.090 --> 00:47:47.850
things you're talking about, there
is a reminder like Douglas

968
00:47:47.850 --> 00:47:50.670
said at the beginning that
who exactly are we working

969
00:47:50.670 --> 00:47:52.890
for? We're working for the
user, but we're also trying

970
00:47:52.890 --> 00:47:55.980
to support presumably a business
unless we're in academia or

971
00:47:55.980 --> 00:47:59.370
open source for fun. We
are ultimately trying to create

972
00:47:59.370 --> 00:48:01.770
some kind of a business.
I think it's really easy

973
00:48:01.770 --> 00:48:04.530
when you are several levels
deep kind of forget why

974
00:48:04.530 --> 00:48:06.510
it is. We wrote this
feature or why didn't we

975
00:48:06.510 --> 00:48:11.340
use that library? And some
Is it sometimes it's for

976
00:48:11.340 --> 00:48:12.720
the business, but we also
have to be able to

977
00:48:12.720 --> 00:48:15.030
articulate that while it may
not be a direct impact

978
00:48:15.030 --> 00:48:17.550
on the bottom line to
get some money into the

979
00:48:17.550 --> 00:48:21.060
business. If a business understands
like a service organization that

980
00:48:21.060 --> 00:48:24.240
by providing better service for
the user, like having an

981
00:48:24.300 --> 00:48:26.970
iPhone that has cool apps
on it, what they did

982
00:48:26.970 --> 00:48:29.520
was they basically in gendered
people who wanted to use

983
00:48:29.520 --> 00:48:31.560
their apps. So if you
can build better service and

984
00:48:31.560 --> 00:48:33.600
that can translate to money
too, but you have to

985
00:48:33.600 --> 00:48:35.370
be able to articulate that
to the people. You can't

986
00:48:35.370 --> 00:48:36.870
just go in and say,
you're wrong, you're stupid. I

987
00:48:36.870 --> 00:48:39.240
know best and move along.
Which we all like to

988
00:48:39.240 --> 00:48:41.790
do. I didn't want to
ask a question about jQuery.

989
00:48:41.820 --> 00:48:44.850
Cause I've heard people say
before that we're, we've raised

990
00:48:44.850 --> 00:48:46.680
a generation of developers who
don't actually know how to

991
00:48:46.680 --> 00:48:49.650
write Java script. They just
don't have right. Jacob, I

992
00:48:49.650 --> 00:48:52.650
don't want to demonize jQuery,
but are, are those days

993
00:48:52.650 --> 00:48:55.740
over jQuery served a purpose.
It spackled over issues with

994
00:48:55.740 --> 00:48:57.400
the browser. And now we
don't need to think about

995
00:48:57.400 --> 00:49:00.510
it. Then I think we're
stuck with it. Now, once

996
00:49:01.110 --> 00:49:03.420
something gets into the enterprise,
it's going to be there

997
00:49:03.420 --> 00:49:07.440
for a long time. And
particularly after Microsoft adopted jQuery.

998
00:49:07.770 --> 00:49:10.290
Yeah. It's, it's, it's going
to be like a weed.

999
00:49:10.290 --> 00:49:12.660
It's going to take decades
to pull it all out.

1000
00:49:12.660 --> 00:49:15.510
So you're not a fan.
I think it's great. Anything

1001
00:49:15.510 --> 00:49:17.490
is better than trying to
write directly to the Dom.

1002
00:49:18.190 --> 00:49:21.960
I would. Anything is better
than that. And jQuery is

1003
00:49:21.960 --> 00:49:23.850
definitely better than the Dom.
There was a time that

1004
00:49:23.850 --> 00:49:26.160
it was needed because there
was so many different variations

1005
00:49:26.160 --> 00:49:27.510
of the Dom that it
would, you would have just

1006
00:49:28.350 --> 00:49:30.840
decided not to do web
programming. Like I did four

1007
00:49:30.840 --> 00:49:32.700
or five years ago because
it got so painful before

1008
00:49:32.700 --> 00:49:36.360
jQuery came out. So you're
saying it's a necessary evil.

1009
00:49:36.810 --> 00:49:39.660
It was now it's an
unnecessary evil, but we're stuck

1010
00:49:39.660 --> 00:49:43.800
with it. Yes. Do you
want to translate that into

1011
00:49:43.800 --> 00:49:46.680
actionable or should I just
paraphrase for you sir? Knock

1012
00:49:46.680 --> 00:49:49.950
yourself out. Pretty sure you
guys can like just scale

1013
00:49:49.960 --> 00:49:52.110
back a little bit on
the jQuery is actually talk

1014
00:49:52.110 --> 00:49:54.450
here this week on that
scaling back, the Jacobs, Elijah

1015
00:49:54.450 --> 00:49:57.000
Manor has a talk. I
forget the title on, do

1016
00:49:57.000 --> 00:49:59.280
I need Jay creating more?
And I'm paraphrasing title scaling

1017
00:49:59.280 --> 00:50:01.710
back and Jake and he
would know. Yeah. He wouldn't

1018
00:50:01.710 --> 00:50:04.410
know. Absolutely. Cause he works
for the jQuery. Yes, exactly.

1019
00:50:05.670 --> 00:50:07.170
And I don't know what
the conclusion is. Let's all

1020
00:50:07.170 --> 00:50:09.960
find out. Absolutely. Oh, we've
just got a couple more

1021
00:50:09.960 --> 00:50:12.630
minutes. Let's just go, go
down the panel. And if

1022
00:50:12.630 --> 00:50:14.340
you have like a takeaway
or an action item or

1023
00:50:14.340 --> 00:50:16.980
something for someone to write
in their notebook or their

1024
00:50:16.980 --> 00:50:19.380
to do dot text file,
let's start that way. Let's

1025
00:50:19.380 --> 00:50:21.780
put the pressure on, on,
on Doug. It will say

1026
00:50:21.780 --> 00:50:24.060
to do sir. All right.
If I could give everybody

1027
00:50:24.060 --> 00:50:26.820
one piece of advice, if
everybody would just do this

1028
00:50:26.820 --> 00:50:30.230
one, it would be great.
And that is please stop

1029
00:50:30.260 --> 00:50:39.730
making bugs. It was number
one in my list. No,

1030
00:50:40.360 --> 00:50:43.390
I guess, you know, to
follow on from that, I

1031
00:50:43.390 --> 00:50:47.380
would just say how the
importance of being disciplined to

1032
00:50:47.380 --> 00:50:51.400
take a word from, from
hair and the importance of,

1033
00:50:51.430 --> 00:50:55.120
you know, getting things done.
But remembering that at some

1034
00:50:55.120 --> 00:50:58.000
point design is really, really
important. And if you need

1035
00:50:58.000 --> 00:50:59.890
to go to somebody to
help you with that great

1036
00:51:00.970 --> 00:51:03.670
or team up with some
of your peers at work

1037
00:51:03.700 --> 00:51:06.850
great, but get a visual
on pieces of the code

1038
00:51:06.850 --> 00:51:09.040
vertical slice at a time.
So it's manageable and just

1039
00:51:09.040 --> 00:51:11.920
try and think of error,
pattern, security patterns, all of

1040
00:51:11.920 --> 00:51:15.850
the patterns that can help
it just, you know, streamline

1041
00:51:15.850 --> 00:51:18.910
future development to make it
faster for you and also

1042
00:51:18.910 --> 00:51:25.300
more healthy code that would
actually back you up. Oh,

1043
00:51:25.420 --> 00:51:29.230
you were both. Yeah. Jump
up. So I call something

1044
00:51:29.230 --> 00:51:31.000
a concept called the vertical
slice and I think you've

1045
00:51:31.000 --> 00:51:32.560
referred to it a couple
of times as well, getting

1046
00:51:32.560 --> 00:51:35.080
a slice of your application
working, I think far too

1047
00:51:35.080 --> 00:51:37.720
often, many of us try
to figure out the perfect

1048
00:51:37.720 --> 00:51:40.570
database, then the perfect ORM,
the perfect, we layer the

1049
00:51:40.570 --> 00:51:42.940
hall app out, trying to
get everything working together and

1050
00:51:42.940 --> 00:51:45.760
we don't actually see progress.
It's a lot of times

1051
00:51:45.760 --> 00:51:47.410
I look at it as
let's get a vertical slice

1052
00:51:47.410 --> 00:51:50.110
of the app from top
to bottom, see one feature

1053
00:51:50.110 --> 00:51:52.480
of the app working. If
you could do that first,

1054
00:51:52.480 --> 00:51:54.100
a lot of times, the
rest of it will flow

1055
00:51:54.100 --> 00:51:55.960
out from there and you
can prove quite a bit

1056
00:51:55.960 --> 00:52:01.060
that way. Thanks. You guys
touched on a lot of

1057
00:52:01.060 --> 00:52:03.370
this stuff. A lot of
things that I talked about

1058
00:52:03.370 --> 00:52:06.220
in both of my talks.
And so basically I think

1059
00:52:06.220 --> 00:52:09.610
it's really important to basically
start thinking about how you

1060
00:52:09.610 --> 00:52:11.560
can hack the ways that
you can work, that you

1061
00:52:11.560 --> 00:52:15.310
work so that you're ever
able to work better, create

1062
00:52:15.310 --> 00:52:18.280
more and to create better
things. Kind of like Douglas

1063
00:52:18.280 --> 00:52:21.730
was talking about earlier that
you know, you're working for

1064
00:52:21.910 --> 00:52:25.600
your users, you're working for
your company and you're working

1065
00:52:25.600 --> 00:52:28.300
for your team. And so
figure out ways that you

1066
00:52:28.300 --> 00:52:31.060
can work really well so
that you can serve all

1067
00:52:31.060 --> 00:52:34.390
of those needs and also
serve your own needs. Very

1068
00:52:34.390 --> 00:52:37.780
cool. Oh, sorry. Go ahead.
And if you're looking for

1069
00:52:37.780 --> 00:52:42.040
a job, I'm just saying,
I have a feeling healthcare.gov

1070
00:52:42.040 --> 00:52:46.180
is hiring And they pay
by the line of code

1071
00:52:46.180 --> 00:52:49.060
don't they? And they need
your help. And on that

1072
00:52:49.060 --> 00:52:51.550
note, let's give a big
hand to our illustrious panel.

1073
00:52:51.910 --> 00:53:06.010
<inaudible>.

