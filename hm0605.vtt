WEBVTT FILE

1
00:00:00.180 --> 00:00:03.360
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.360 --> 00:00:06.300
they make the show possible.
Today's show is sponsored by

3
00:00:06.300 --> 00:00:10.500
developer express, become a UI
superhero with dev express controls

4
00:00:10.500 --> 00:00:15.030
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.420 --> 00:00:19.500
by leveraging your existing knowledge,
you can build next generation

6
00:00:19.500 --> 00:00:23.610
touch enabled solutions for tomorrow,
you can download your free

7
00:00:23.700 --> 00:00:45.170
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com.
<inaudible>. Hi, this is Scott

8
00:00:45.170 --> 00:00:47.810
Hanselman. This is another episode
of Hansel minutes. And today

9
00:00:47.810 --> 00:00:50.930
I'm talking with Tara <inaudible>
from progress software. How are

10
00:00:50.930 --> 00:00:54.170
you? Good. How are you
doing Scott? I'm getting there.

11
00:00:54.470 --> 00:00:56.210
I'm trying to get my
head around how fast the

12
00:00:56.210 --> 00:00:59.630
internet is moving. Just when
I think I know something,

13
00:00:59.630 --> 00:01:02.390
a new thing comes out
and then I have to

14
00:01:02.390 --> 00:01:06.020
decide is that new thing,
something I already knew and

15
00:01:06.020 --> 00:01:08.270
they just made a new
name for it or is

16
00:01:08.270 --> 00:01:10.850
it something else? And I'm
trying to get my brain

17
00:01:10.850 --> 00:01:15.290
around PWAs, progressive web apps,
and I'm hoping you can

18
00:01:15.290 --> 00:01:18.110
explain it to me. Yes.
The internet is definitely moving

19
00:01:18.110 --> 00:01:22.460
a ludicrous speed, but hopefully
progressive web apps. One of

20
00:01:22.460 --> 00:01:24.800
the biggest things about them
is that they're progressive. So

21
00:01:24.800 --> 00:01:30.110
it's not, it's not something
that you have to like

22
00:01:30.110 --> 00:01:34.160
go into full speed and
just commit hardcore. It's something

23
00:01:34.160 --> 00:01:38.450
that you can progressively enhance
on your web applications. Okay.

24
00:01:38.660 --> 00:01:41.060
Could I take one of
my old applications that it's

25
00:01:41.060 --> 00:01:42.830
already out there and just
decide I'm going to call

26
00:01:42.830 --> 00:01:45.080
it progressive or do they
have to have certain characteristics

27
00:01:45.110 --> 00:01:47.810
before they get that name
Could decide to call it

28
00:01:47.810 --> 00:01:51.650
progressive, but there are standards
that you do want to

29
00:01:51.680 --> 00:01:54.230
kind of adhere to too.
So what I like to

30
00:01:54.230 --> 00:01:56.720
think about it is kind
of a one liner for

31
00:01:56.720 --> 00:02:00.770
what progressive web apps are,
and it basically is taking

32
00:02:00.770 --> 00:02:05.390
your web application and using
modern technologies like cache API

33
00:02:05.390 --> 00:02:08.990
APIs, and push API APIs
to make it more accessible

34
00:02:08.990 --> 00:02:14.960
and reliable and more engaging
for your users. Okay. That

35
00:02:14.960 --> 00:02:18.950
sounds good. But it also
sounds a little squishy. Maybe

36
00:02:18.950 --> 00:02:23.150
we can break it down
more, more technically. Is it

37
00:02:23.150 --> 00:02:26.390
more about being pinnable on
a mobile device or is

38
00:02:26.390 --> 00:02:28.790
it about dealing with flaky
networks or is it about

39
00:02:28.790 --> 00:02:31.370
push notifications? Is it all
of those things or one

40
00:02:31.370 --> 00:02:36.020
of those things? Yes. All
D all of the above.

41
00:02:36.920 --> 00:02:39.530
So it is like, it
is this kind of pie

42
00:02:39.530 --> 00:02:43.160
in the sky mentality of,
everybody's always been trying to

43
00:02:43.160 --> 00:02:47.720
figure out how to, you
know, make web applications available

44
00:02:47.720 --> 00:02:50.600
offline and make it so
that you can engage in

45
00:02:50.600 --> 00:02:54.200
your user with your user
using push notifications. So this

46
00:02:54.200 --> 00:02:58.250
is what these progressive web
apps are striving to do.

47
00:02:58.610 --> 00:03:03.040
So are some kind of
like core concepts that especially

48
00:03:03.040 --> 00:03:10.000
like Google in particular adhere
to, but it's basically, there

49
00:03:10.000 --> 00:03:13.720
are things like progressiveness. So,
you know, it's in the

50
00:03:13.720 --> 00:03:18.310
name, right. And it's basically
saying if a browser supports

51
00:03:19.330 --> 00:03:22.750
all the technologies that are
made to do this application,

52
00:03:22.870 --> 00:03:25.570
go ahead, use it. If
they don't don't break anything,

53
00:03:25.570 --> 00:03:28.840
like don't break somebody's app,
just because they don't, your

54
00:03:28.840 --> 00:03:31.720
browser doesn't support it. So
that's the progressive part. That's

55
00:03:31.750 --> 00:03:36.180
pretty important. Okay. So let's
break this down because I

56
00:03:36.180 --> 00:03:39.630
think this is important though,
but not, not everyone who

57
00:03:39.630 --> 00:03:43.020
listens to the show has
English as their first language,

58
00:03:43.350 --> 00:03:45.630
so we should break that
word down. So as I

59
00:03:45.630 --> 00:03:50.610
understand the word progressive to
mean is things that happen

60
00:03:50.610 --> 00:03:54.540
gradually or things that happen,
like in stages, like step-by-step

61
00:03:55.890 --> 00:03:59.040
yeah. Like a buildup, right.
I could build up. Okay.

62
00:03:59.370 --> 00:04:02.310
And then I remember that
there was a term that

63
00:04:02.310 --> 00:04:07.530
we would use probably 14
years ago called progressive enhancement.

64
00:04:07.740 --> 00:04:12.720
Right. Which was dealing, dealing
with, you know, little improvements.

65
00:04:12.720 --> 00:04:16.620
So it's like, Oh, you
support geolocation. I'll use that.

66
00:04:17.160 --> 00:04:20.280
So like almost like feature
detection. Yeah. And then I've

67
00:04:20.280 --> 00:04:24.600
also heard it used with
JavaScript in particular, how you

68
00:04:24.600 --> 00:04:27.300
want to make sure that
if people had turned JavaScript

69
00:04:27.300 --> 00:04:30.690
off, you were progressively making
it so that they could

70
00:04:30.690 --> 00:04:34.620
still use your application. So
handling things, if JavaScript's off

71
00:04:34.620 --> 00:04:37.710
and, you know, doing a
progression, a buildup of things

72
00:04:37.710 --> 00:04:44.100
to make it's. So nothing
just broke completely. Right. As

73
00:04:44.100 --> 00:04:48.360
I recall, the term that
they used was graceful degradation,

74
00:04:48.450 --> 00:04:51.510
which is kind of like,
not as, not as positive,

75
00:04:51.540 --> 00:04:55.860
like I think progressive enhancements,
like the happier way to

76
00:04:55.860 --> 00:04:59.130
say graceful degradation, but the
essence is the same, right.

77
00:05:01.770 --> 00:05:05.850
The example I always use
is the g-mail app. You

78
00:05:05.850 --> 00:05:08.460
know how, when you show
up on Gmail and it,

79
00:05:08.460 --> 00:05:10.380
like, you're on a really
bad network and they're like,

80
00:05:10.380 --> 00:05:12.630
you know, things aren't working
out well, I'm going to

81
00:05:12.630 --> 00:05:17.580
go ahead and put you
in basic mode. Yeah, yeah,

82
00:05:17.610 --> 00:05:21.630
exactly. And I think that,
that another, so we think

83
00:05:21.630 --> 00:05:24.210
of it in the way
of, you know, you know,

84
00:05:24.210 --> 00:05:29.370
in a sense, like no
backwards breaking changes. So you're

85
00:05:29.460 --> 00:05:33.300
the biggest thing is basically
a build up to make

86
00:05:33.300 --> 00:05:37.740
it so that people aren't
left behind if things don't

87
00:05:37.740 --> 00:05:43.170
work with the new things,
the new buildup. Okay. All

88
00:05:43.170 --> 00:05:46.290
right. So I'm hearing that
it uses the coolest stuff

89
00:05:46.290 --> 00:05:49.770
that my browser or my
desktop, my mobile device has,

90
00:05:49.770 --> 00:05:52.500
if it, if it can,
but it doesn't kick me

91
00:05:52.500 --> 00:05:55.080
out and make me feel
sad if I doesn't support

92
00:05:55.080 --> 00:06:00.280
those things. Exactly. Totally inclusive.
Okay. So that's one example.

93
00:06:00.580 --> 00:06:03.370
And then I heard you
say something about the network

94
00:06:03.370 --> 00:06:06.070
being flaky. So you, you
want this thing to load

95
00:06:06.070 --> 00:06:08.860
instantly and be, you know,
work, even if I'm going

96
00:06:08.860 --> 00:06:11.950
through a tunnel. Yes, exactly.
And that's a, that's a

97
00:06:11.950 --> 00:06:15.610
really great example of saying
if you don't have a

98
00:06:15.610 --> 00:06:19.060
network, so it has it
with service workers, which we

99
00:06:19.060 --> 00:06:22.510
can dig into later, which
basically just as a heads

100
00:06:22.510 --> 00:06:26.890
up are just JavaScript files.
But so if you lose

101
00:06:26.890 --> 00:06:28.930
your service, you don't have
a network, you go into

102
00:06:28.930 --> 00:06:32.470
a tunnel, you go on
an airplane, it's able to

103
00:06:32.530 --> 00:06:35.620
cash things so that you
can have them without a

104
00:06:35.620 --> 00:06:41.200
network. So it holds your
information, your files into storage,

105
00:06:41.200 --> 00:06:43.840
so that if a user
loses the network and it

106
00:06:43.840 --> 00:06:45.910
checks with the network to
make a request and the

107
00:06:45.910 --> 00:06:49.420
network isn't available, or it's
really weak, it can take

108
00:06:49.420 --> 00:06:51.700
it from the user's storage
and serve it up to

109
00:06:51.700 --> 00:06:54.760
the user. So if they
have no network, they're still

110
00:06:54.760 --> 00:06:59.200
able to interact with your
application. Okay. So that sounds

111
00:06:59.200 --> 00:07:02.080
like it means kind of
breaking things off of what

112
00:07:02.080 --> 00:07:05.260
I think of as the
UI loop, you know, not

113
00:07:05.260 --> 00:07:07.780
everything's a four loop that
runs directly on your UI.

114
00:07:07.810 --> 00:07:12.160
You're breaking your, your front
end application into multiple pieces.

115
00:07:12.160 --> 00:07:15.850
And those surface workers, those
JavaScripts, they don't talk to

116
00:07:15.850 --> 00:07:18.730
the page, do they, they
do their own thing and

117
00:07:18.730 --> 00:07:21.520
they run in the background
and hopefully to keep things

118
00:07:21.520 --> 00:07:24.400
running, even while you're interacting
with your page, or maybe

119
00:07:24.400 --> 00:07:28.060
you've even lost connectivity. Exactly.
And that's like, that's one

120
00:07:28.060 --> 00:07:31.480
of the core concepts of
the service worker, the service

121
00:07:31.480 --> 00:07:35.020
worker API, like the JavaScript
files that you're using to

122
00:07:35.020 --> 00:07:38.170
talk to the service worker
API is that they're running.

123
00:07:38.200 --> 00:07:42.370
So they're in between your
application and the network or

124
00:07:42.370 --> 00:07:45.730
your servers. And I like
to call them the little

125
00:07:45.730 --> 00:07:49.060
lurkers, cause they're sitting there
kind of waiting to hear

126
00:07:49.060 --> 00:07:52.630
and intercept your requests to
see if there, if the

127
00:07:52.630 --> 00:07:55.060
network is available or if
they need to get your

128
00:07:55.060 --> 00:07:58.990
information, they request, serve that
request with information that they

129
00:07:58.990 --> 00:08:02.680
have locally instead. So that
is a core concept of

130
00:08:02.680 --> 00:08:06.640
the service workers. It's, it's
lurking outside of your application

131
00:08:06.940 --> 00:08:10.810
in between the network or
the servers. It sounds like

132
00:08:10.810 --> 00:08:14.110
that solves one of the
fundamental problems that causes us

133
00:08:14.110 --> 00:08:17.440
to use apps. Like let's,
let's assume for the purposes

134
00:08:17.440 --> 00:08:20.020
of this discussion that you
and I both agree that

135
00:08:20.020 --> 00:08:24.190
we'd rather write web pages
and web apps than native

136
00:08:24.190 --> 00:08:26.830
apps, because we are open
web people. Right. Let's that's

137
00:08:26.830 --> 00:08:32.200
a fair statement. It's for
me. Okay, good. So if

138
00:08:32.200 --> 00:08:35.200
we say that, then we'll
say, well, you know, I

139
00:08:35.200 --> 00:08:38.770
really have to use an
app for this project because

140
00:08:38.800 --> 00:08:41.800
I want to make it
so people can post messages

141
00:08:42.100 --> 00:08:46.460
offline, or I don't want
to have duplicate messages, or

142
00:08:46.460 --> 00:08:48.880
I, you know, I'm making
a, a customer service rep

143
00:08:48.910 --> 00:08:51.280
app and my customer service
reps want to do their

144
00:08:51.280 --> 00:08:54.670
job on the train. And
they're constantly updating their things.

145
00:08:55.110 --> 00:08:58.890
That sounds like an occasionally
connected scenario. Clearly I need

146
00:08:58.890 --> 00:09:01.380
an app and then they,
they leave they're off of

147
00:09:01.380 --> 00:09:03.420
JavaScript. They're off the open
web and there are now

148
00:09:04.200 --> 00:09:06.780
new writing native code because
they didn't think it was

149
00:09:06.780 --> 00:09:11.360
possible. Yeah. And so, so
you're asking a, what if

150
00:09:11.360 --> 00:09:15.380
they have both a native
and the web app, because

151
00:09:15.380 --> 00:09:18.470
they didn't realize that service
workers were capable of Yes,

152
00:09:18.500 --> 00:09:21.680
that's it. I think that
I'm wondering, are you saying

153
00:09:21.680 --> 00:09:26.450
that service workers will solve
issues like background sync, being

154
00:09:26.450 --> 00:09:30.200
able to like throw messages
into the index DB API

155
00:09:30.200 --> 00:09:33.950
and pretend that it's an
outbox, maybe no one knows

156
00:09:33.950 --> 00:09:36.560
those things exist and those
are fundamental aspects of being

157
00:09:36.560 --> 00:09:39.590
a progressive web app. Yes.
And that does exist. And

158
00:09:39.590 --> 00:09:42.350
you can do that with
service workers. And that's the

159
00:09:42.350 --> 00:09:47.120
big, that's one of the
great things about being able

160
00:09:47.120 --> 00:09:52.640
to use the cash API.
And it's a cash storage

161
00:09:52.670 --> 00:09:56.120
API as well, is that
you're able to store these

162
00:09:56.120 --> 00:10:00.050
things. And the service worker
is basically sitting there waiting

163
00:10:00.050 --> 00:10:02.180
to see when the network
is available so it can

164
00:10:02.180 --> 00:10:07.160
push the user's interactions up.
So it's basically making Java

165
00:10:07.160 --> 00:10:11.420
script files to say, okay,
the user has submitted this

166
00:10:11.420 --> 00:10:18.350
new help desk title or
document that I need to

167
00:10:18.350 --> 00:10:21.290
put up, but the network's
not available. Okay. The service

168
00:10:21.290 --> 00:10:24.230
worker will wait until the
network is available and notice

169
00:10:24.230 --> 00:10:28.220
send that up once it
can. Hmm. Can you explain

170
00:10:28.250 --> 00:10:32.570
the relationship between that service
worker, that background lurker between

171
00:10:32.570 --> 00:10:36.890
that and cache storage API
and the index DB API?

172
00:10:36.920 --> 00:10:39.200
Cause I, I don't understand
that there's these two different

173
00:10:39.200 --> 00:10:43.190
storage APIs, index DB and
cash storage and what I

174
00:10:43.190 --> 00:10:45.350
would use one for and
the other four and how

175
00:10:45.350 --> 00:10:50.840
the service workers talk to
them. So there you can

176
00:10:50.840 --> 00:10:54.830
use like local storage and
index DB and Cassius like

177
00:10:54.860 --> 00:11:00.200
that. Like, those are all
basically storage's that exist for

178
00:11:00.200 --> 00:11:07.910
the user to use, but
they are synchronous. So the

179
00:11:08.360 --> 00:11:12.680
service worker API is asynchronous.
So it can't actually work

180
00:11:12.680 --> 00:11:17.900
with index DB and that's
where you, yeah. So that's

181
00:11:17.900 --> 00:11:23.060
where you want to be
using the cache API, the,

182
00:11:23.070 --> 00:11:27.710
or the cache storage API,
because those are also asynchronous.

183
00:11:29.000 --> 00:11:34.100
Okay. So cash storage goes
well with the service worker

184
00:11:34.460 --> 00:11:38.480
universe. Yes. Cause it's, they're
both out outside there, but

185
00:11:38.510 --> 00:11:41.630
index DB is like a
no SQL database, but it's

186
00:11:41.630 --> 00:11:45.830
not something I talked to
with the service worker. Correct.

187
00:11:49.160 --> 00:11:52.940
He was at synchronicity because
which ones are synchronous and

188
00:11:52.960 --> 00:11:56.230
which one's the async. Okay.
But I suppose I could

189
00:11:56.230 --> 00:11:58.630
use the service worker to
send a message to my

190
00:11:58.630 --> 00:12:01.690
main app to then do
stuff with the index DB.

191
00:12:02.640 --> 00:12:06.270
Yeah. Because it's basically, since,
since service workers are basically

192
00:12:06.270 --> 00:12:10.140
JavaScript verifications, you're able to
just, you know, treat it

193
00:12:10.140 --> 00:12:14.100
like anything you would do
with Java script, but then

194
00:12:14.100 --> 00:12:17.790
you can have tools you're
able to use tools like,

195
00:12:19.350 --> 00:12:25.770
like the async app cache,
The async app cache what's

196
00:12:25.770 --> 00:12:29.100
that? Oh, so I mean,
saying like, so, so like

197
00:12:29.100 --> 00:12:34.290
local storage is secret. Okay.
The API APIs that are

198
00:12:34.290 --> 00:12:36.750
as asynchronous. Okay. So let
me see if I understand

199
00:12:36.750 --> 00:12:42.330
correctly then. So I'm paraphrasing
what you said. So cash

200
00:12:42.330 --> 00:12:45.660
storage is, you know, named
caches that I can talk

201
00:12:45.660 --> 00:12:47.970
to with service workers. I
can throw blobs in it.

202
00:12:48.000 --> 00:12:50.880
It's, it's a, it's a
way to like store things,

203
00:12:51.030 --> 00:12:54.180
all kinds of things, images,
JavaScript, whatever. Yeah. I can

204
00:12:54.180 --> 00:12:58.770
talk to it with the
service worker, but index DB

205
00:12:59.010 --> 00:13:02.100
is more like more like
structured data. Like let's talk

206
00:13:02.100 --> 00:13:04.680
a little database and I
would not talk to that

207
00:13:04.680 --> 00:13:08.840
with service worker and it's
a little more sophisticated, more,

208
00:13:08.880 --> 00:13:12.570
more powerful and more, more
databases than the cash storage.

209
00:13:13.950 --> 00:13:17.280
And I think, I think
the main reason that I've

210
00:13:17.280 --> 00:13:19.920
been aware of, of why
we don't use those two

211
00:13:19.920 --> 00:13:24.870
together is because we're doing
a sync with service workers

212
00:13:24.900 --> 00:13:29.370
and the cache API. Is
that, does that make sense?

213
00:13:29.880 --> 00:13:31.830
Yeah, it does. But now
let's pop it from the

214
00:13:31.830 --> 00:13:33.660
low level all the way
back up off the stack

215
00:13:33.990 --> 00:13:36.780
to the first thing that
we said about progressive web

216
00:13:36.780 --> 00:13:40.290
apps, which is that they
are reliable. Yes. So you

217
00:13:40.290 --> 00:13:43.920
should be thoughtful and put
that, that service worker between

218
00:13:43.920 --> 00:13:47.820
you and your cash and
your resource requests. So like,

219
00:13:47.820 --> 00:13:50.700
I assume if I'm going
through a tunnel and I'm

220
00:13:50.700 --> 00:13:54.570
requesting something and I can't
get to it, my traditional

221
00:13:54.570 --> 00:13:57.090
web app would freak out
and four Oh four and

222
00:13:57.090 --> 00:14:00.000
my progressive web app would
maybe return stale data and

223
00:14:00.000 --> 00:14:03.390
let them know, Hey, we're
offline for a second. Yeah.

224
00:14:03.450 --> 00:14:06.840
Or, or like maybe so
a lot of, a lot

225
00:14:06.840 --> 00:14:09.390
of people, or a lot
of things that people tend

226
00:14:09.390 --> 00:14:13.950
to cash are like, like
you can cash blog posts

227
00:14:14.010 --> 00:14:17.610
like the HTML and like
the content of a blog

228
00:14:17.640 --> 00:14:21.060
post. And so when they
go onto the site, the

229
00:14:21.060 --> 00:14:25.440
service worker goes in and
immediately caches some of this

230
00:14:25.440 --> 00:14:29.760
content. So now you can
either have it. So that

231
00:14:29.760 --> 00:14:32.940
every page that can't be
reached sends you a page,

232
00:14:32.940 --> 00:14:35.400
it's saying this can't be
reached, but these things can,

233
00:14:35.400 --> 00:14:37.560
so you can be selective
about what you serve up

234
00:14:37.560 --> 00:14:41.670
when there's no network with
the service worker. Ah, okay.

235
00:14:42.330 --> 00:14:46.890
Is this quite a rabbit
hole? Well, like right now,

236
00:14:46.920 --> 00:14:49.770
my blog is not a
progressive web app. It is

237
00:14:49.830 --> 00:14:53.330
a responsive from a mobile
perspective, but, and you can

238
00:14:53.330 --> 00:14:55.700
pin it to your home
screen, but if you decide

239
00:14:55.700 --> 00:14:57.800
to visit it on a
subway train, you can't see

240
00:14:57.800 --> 00:15:02.050
my stuff. Yeah. So like
if you went to my

241
00:15:02.110 --> 00:15:06.640
website and you, cause you
can even, even on the

242
00:15:07.030 --> 00:15:11.260
like Chrome developer tools, if
you go into there and

243
00:15:11.260 --> 00:15:14.320
you double check what it
is, if you go under

244
00:15:14.320 --> 00:15:17.530
application, you can actually, there's
like a service worker tab

245
00:15:17.890 --> 00:15:22.750
under the application tab that
lets you click offline and

246
00:15:22.780 --> 00:15:25.540
reload the page to see
what, how it reacts offline.

247
00:15:25.840 --> 00:15:28.960
So my website will still
show you my full menu

248
00:15:28.990 --> 00:15:32.890
because I have the CSS
and the HTML cashed with

249
00:15:32.890 --> 00:15:37.330
a service worker and I
have like the front pages

250
00:15:37.330 --> 00:15:39.940
of everything. So it will
show up. But as soon

251
00:15:39.940 --> 00:15:43.060
as you go to any
of my non-cash items, then

252
00:15:43.060 --> 00:15:46.120
you'll get a four for
it because I need to

253
00:15:46.180 --> 00:15:50.020
keep working on it. Okay.
Okay. So this is cool.

254
00:15:50.020 --> 00:15:55.270
So right now I'm in
Chrome and I'm at TZ.

255
00:15:55.810 --> 00:15:59.530
A man is sick TZ,
M a N I Mannix

256
00:15:59.530 --> 00:16:03.430
TZ Mannix. And then I
go to the developer tools,

257
00:16:03.430 --> 00:16:06.970
the F 12 tools in
Chrome, I've clicked on application

258
00:16:07.000 --> 00:16:09.550
and I clicked on service
workers. And there it is,

259
00:16:09.550 --> 00:16:11.350
there's a service worker and
it has a number. It

260
00:16:11.350 --> 00:16:14.860
says one eight, one three,
two activated and running. So

261
00:16:14.860 --> 00:16:18.250
your, a service worker is
running in the background, thinking

262
00:16:18.250 --> 00:16:21.850
about stuff. I'm going to
click offline. The network just

263
00:16:21.850 --> 00:16:25.180
banged out. So now it's
like freaking out. I clicked

264
00:16:25.180 --> 00:16:28.180
on your resume, which is
a PDF and I got

265
00:16:28.180 --> 00:16:31.930
an internet disconnected. So that's
cool. Then if you click

266
00:16:31.930 --> 00:16:36.070
on, like, yes, I clicked
on web blog though. And

267
00:16:36.220 --> 00:16:39.580
I get a list of
blog posts and I'm offline.

268
00:16:39.790 --> 00:16:43.030
That's cool. I click on
videos and there's some, It

269
00:16:43.030 --> 00:16:47.890
shows you an interaction. Isn't
that fun? That is pretty

270
00:16:47.890 --> 00:16:50.590
cool. Oh, this is interesting.
So here's an example. So

271
00:16:50.590 --> 00:16:53.290
I clicked on web blog.
I got your list of

272
00:16:53.320 --> 00:16:58.510
posts, but I didn't get
the background image. Yeah. So

273
00:16:58.510 --> 00:17:01.540
that, yeah. Cause I did
that as a cause I

274
00:17:01.540 --> 00:17:04.270
fit. So one thing that
they like to focus on

275
00:17:04.300 --> 00:17:08.470
is, so I like to
do internet links for images

276
00:17:08.470 --> 00:17:11.770
instead of loading the resource.
And I don't see it

277
00:17:11.770 --> 00:17:15.370
as a very necessary thing
for my website to be

278
00:17:15.370 --> 00:17:18.040
used to have a background
image. So I don't cash

279
00:17:18.040 --> 00:17:20.830
it. And that's kind of
just being selective about what

280
00:17:20.830 --> 00:17:24.520
you cash because there are
limits to what you can

281
00:17:24.520 --> 00:17:27.820
cash and you don't want
to fill up a user's

282
00:17:27.850 --> 00:17:30.640
cash anyway. You don't want
to be that mean person.

283
00:17:30.640 --> 00:17:35.530
Yeah. What's interesting is now
I'm sitting here in my,

284
00:17:35.920 --> 00:17:37.930
in my developer tools and
I go to application to

285
00:17:37.930 --> 00:17:39.820
service workers. I'm on your
site, but I can click

286
00:17:39.820 --> 00:17:44.200
show all. And I'm a
little surprised. I see YouTube

287
00:17:44.650 --> 00:17:50.160
and Twitter and office.com. I
see all kinds of Bloomberg,

288
00:17:50.190 --> 00:17:53.580
all kinds of websites with
service workers out there that

289
00:17:53.580 --> 00:17:55.980
are, that are registered. Is
this something I should worry

290
00:17:55.980 --> 00:17:57.630
about? Or should I not
sweat it? Are they going

291
00:17:57.630 --> 00:18:03.320
to be well behaved? They
should. They should be. And

292
00:18:03.650 --> 00:18:07.670
your browser is pretty dependent
on the browser. They're pretty

293
00:18:07.670 --> 00:18:12.560
good about prompting you like
how much storage is happening.

294
00:18:12.610 --> 00:18:14.510
Some of them prompt you.
And some of them just

295
00:18:14.510 --> 00:18:19.340
max out when your storage
is like, let's see like

296
00:18:19.340 --> 00:18:22.670
Firefox doesn't have a limit,
but it prompts the user

297
00:18:22.670 --> 00:18:26.030
when like 50 megs of
data has been stored and

298
00:18:26.030 --> 00:18:30.140
you can clear your cache,
but they should behave. Okay.

299
00:18:31.520 --> 00:18:35.960
Service workers aren't directly related
to storing offline data though.

300
00:18:35.960 --> 00:18:38.210
Are they there? It's just
all part of like the

301
00:18:38.210 --> 00:18:40.610
toolbox that you use to
make a progressive web app.

302
00:18:40.940 --> 00:18:44.690
Yeah. And that is what
they're mainly used for, but

303
00:18:44.690 --> 00:18:49.760
it is basically having a
JavaScript file run independently of

304
00:18:49.760 --> 00:18:54.800
your app and be that
intermediate between the network and

305
00:18:54.800 --> 00:18:57.410
your application. So you can
do other things like use

306
00:18:57.410 --> 00:19:01.550
the push API to do
push notifications with your application.

307
00:19:02.240 --> 00:19:06.530
Okay. So adding something like
push notifications, which I'm noticing

308
00:19:06.530 --> 00:19:09.320
a lot of websites are
asking permission to send me

309
00:19:09.320 --> 00:19:12.380
notifications lately. That seems like
something that's really blown up

310
00:19:12.380 --> 00:19:17.060
in the last year. Yeah.
It's interesting because Chrome in

311
00:19:17.060 --> 00:19:23.150
particular even has its own
little push notification kind of

312
00:19:23.150 --> 00:19:26.720
thing, where if you follow
it, if you hit these

313
00:19:26.720 --> 00:19:31.370
certain pinpoints, like you visit
a site twice in two

314
00:19:31.370 --> 00:19:35.480
days or like two times
consecutively in two days that

315
00:19:35.480 --> 00:19:37.610
it will give you a
little pop up that says,

316
00:19:37.610 --> 00:19:39.470
do you want to add
this to your homescreen? So

317
00:19:39.470 --> 00:19:43.820
it's all about their push
for engaging the user more.

318
00:19:45.060 --> 00:19:48.170
Okay. So there's, so we
talked about reliable. Now you're

319
00:19:48.170 --> 00:19:50.420
talking about engaging. So this
is the idea where a

320
00:19:50.420 --> 00:19:53.390
web, a web app starts
feeling like an app. And

321
00:19:53.390 --> 00:19:55.520
I don't think of it
as a web app anymore.

322
00:19:55.550 --> 00:19:58.400
It's just a thought it's
a natural extension. Yeah. Yeah.

323
00:19:58.760 --> 00:20:01.910
And that's like, that's another
big part of progressive web

324
00:20:01.910 --> 00:20:06.290
apps. It's about push notifications
and like the home screen

325
00:20:06.290 --> 00:20:11.360
icons and also full screen
views where they get rid

326
00:20:11.360 --> 00:20:16.220
of the browser Chrome. Are
we trying to fool people

327
00:20:16.220 --> 00:20:18.140
and like, make them really
believe it's an app, like

328
00:20:18.140 --> 00:20:21.440
will nontechnical partner, like, you
know, my spouse or your

329
00:20:21.440 --> 00:20:23.540
spouse will, they think it's
an app or they just

330
00:20:23.540 --> 00:20:24.950
think it's an icon. They
click on it and they

331
00:20:24.950 --> 00:20:28.250
get their information. They don't
really care. I hate to

332
00:20:28.250 --> 00:20:33.340
consider it as fooling people,
but, but it is, I

333
00:20:33.350 --> 00:20:38.180
guess they would consider it
more immersive in a way.

334
00:20:38.630 --> 00:20:45.200
But it is in a
sense kind of taking you

335
00:20:45.200 --> 00:20:52.360
out of the web experience.
So you, you don't have

336
00:20:52.360 --> 00:20:55.390
like the back buttons and
the, you know, the bar

337
00:20:55.390 --> 00:20:59.500
up top. But I think
that, I think that it

338
00:20:59.500 --> 00:21:02.200
is more kind of just
to engage the user more

339
00:21:02.200 --> 00:21:05.470
and have full attention. And,
and the feel of native

340
00:21:05.470 --> 00:21:11.950
though, can be tricky and
feel confusing to users who

341
00:21:12.520 --> 00:21:16.870
may not be as technically
aware of what's going on.

342
00:21:19.080 --> 00:21:21.960
I'm trying to understand, you
know, if this is a,

343
00:21:23.370 --> 00:21:26.940
this is a still a
niche thing that is about

344
00:21:29.070 --> 00:21:31.470
if it's, if it's only
you and you and I

345
00:21:31.470 --> 00:21:33.270
and web people who are
going to care about this,

346
00:21:33.270 --> 00:21:35.820
or if I can, you
know, if it's, if I

347
00:21:35.820 --> 00:21:38.910
can engage my parents or
my, my, my partner where

348
00:21:39.150 --> 00:21:44.820
she'll be able to successfully
whip visit a web page,

349
00:21:45.120 --> 00:21:47.490
add it to her home
screen and then start interacting

350
00:21:47.490 --> 00:21:49.830
with it, like rather than
maybe downloading a Twitter app.

351
00:21:50.880 --> 00:21:53.400
And I honestly, I think
that's the hardest part is

352
00:21:53.400 --> 00:21:56.730
the, the kind of the
journey of the user. Because

353
00:21:56.730 --> 00:21:59.970
every time I go on
a plane, I immediately think,

354
00:22:00.030 --> 00:22:02.880
Oh, I should get an
app for this because I'm

355
00:22:02.880 --> 00:22:04.800
going on a plane. I
don't have service my mind

356
00:22:04.800 --> 00:22:08.460
doesn't automatically go, Oh, let
me see if this will,

357
00:22:08.460 --> 00:22:11.160
now it does, but it
doesn't immediately say, let me

358
00:22:11.160 --> 00:22:15.450
see if this website has
offline capabilities. My, my knee

359
00:22:15.450 --> 00:22:17.550
jerk reaction is, Oh, I
need to get the app

360
00:22:18.120 --> 00:22:21.240
That I think that right
there is the real question.

361
00:22:21.240 --> 00:22:23.010
And that brings kind of
brings it all the way

362
00:22:23.010 --> 00:22:25.800
around where the web has
been around for so long

363
00:22:25.800 --> 00:22:28.890
behaving one way. But now
we have to think about

364
00:22:29.550 --> 00:22:34.200
a retraining, not just our
nontechnical people, but ourselves, you

365
00:22:34.200 --> 00:22:36.570
know, I was on a
United airlines flight and they

366
00:22:36.570 --> 00:22:38.430
were like, okay, in order
to use this, go and

367
00:22:38.430 --> 00:22:40.260
get the app quick, before
we take off, get the

368
00:22:40.260 --> 00:22:45.150
app, get the app. I
know you're like, but I

369
00:22:45.150 --> 00:22:53.970
want to watch movies. Yeah.
I just visited mobile.twitter.com, which

370
00:22:54.030 --> 00:22:57.060
I've heard mentioned as being
one of the best progressive

371
00:22:57.060 --> 00:23:03.390
web apps. And if you
click on twitter.com, mobile.twitter.com, and

372
00:23:03.390 --> 00:23:05.580
then I clicked on notifications,
which was the, you know,

373
00:23:05.580 --> 00:23:08.820
the, the mentions and it
immediately said, Hey, would you

374
00:23:08.820 --> 00:23:13.550
like to enable notifications? You
know, it looks like, Like

375
00:23:13.550 --> 00:23:17.010
the whole screen, right? Yeah.
It looks like an app

376
00:23:17.040 --> 00:23:20.460
it's got, I mean, it's,
it seems extremely thoughtful. Like,

377
00:23:20.460 --> 00:23:23.740
I think that's a great
example of, of a, of

378
00:23:23.750 --> 00:23:27.120
a progressive web app. Yeah.
They did a really great

379
00:23:27.120 --> 00:23:31.380
job and they were a
pretty early adapter to PWS

380
00:23:31.440 --> 00:23:35.040
as well. And yeah, that's
one of my, I think

381
00:23:35.040 --> 00:23:40.650
they handle the request for
push notifications brilliantly. I really

382
00:23:40.650 --> 00:23:44.790
liked how they did that.
So should be on the

383
00:23:44.790 --> 00:23:46.760
home screen. It's something that
you want to pin, you

384
00:23:46.760 --> 00:23:49.190
want to start thinking about,
maybe I can use this

385
00:23:49.670 --> 00:23:52.610
rather than an app. So
that's a good, a good

386
00:23:52.610 --> 00:23:56.630
reason, a good benefit, a
reliable, even the network conditions

387
00:23:56.630 --> 00:24:01.340
being on an airplane maybe
would be cool. Push notifications,

388
00:24:01.340 --> 00:24:04.910
all of this makes the
experience better. Am I just

389
00:24:04.910 --> 00:24:08.330
writing this with, with visual
studio code or notepad or

390
00:24:08.330 --> 00:24:10.640
whatever? Like, is there any
phase it's just, just Jason

391
00:24:10.640 --> 00:24:13.750
and HTML. It's the same
stuff I'm already doing. Yeah.

392
00:24:13.750 --> 00:24:16.510
So with your service workers,
you're writing that in JavaScript

393
00:24:16.510 --> 00:24:18.580
per usual. And like a
lot of things will look

394
00:24:18.580 --> 00:24:21.160
familiar. Like the first thing
you do in service workers

395
00:24:21.160 --> 00:24:23.890
is you check to see
if it's supported in the

396
00:24:23.890 --> 00:24:27.460
browser. So use it if
statement and then rest of

397
00:24:27.460 --> 00:24:31.660
it is a lot of
promises. So like you're waiting

398
00:24:31.660 --> 00:24:34.450
to see if this thing
has fired in order to

399
00:24:34.450 --> 00:24:38.530
do this next thing. And
then your code for your

400
00:24:38.530 --> 00:24:41.500
app is basically whatever you
want to write it in.

401
00:24:41.500 --> 00:24:45.010
So for instance, what's really
nice is like Preact view

402
00:24:45.910 --> 00:24:50.170
and they all have their
CLI tools like the prereq

403
00:24:50.170 --> 00:24:54.010
CLI and the view CLI
and create react app all

404
00:24:54.010 --> 00:24:58.210
have a, you can just
run it from the command

405
00:24:58.210 --> 00:25:01.240
line to build up a
sample app or a, your

406
00:25:01.240 --> 00:25:04.300
like core skeleton app. And
it has a service worker

407
00:25:04.300 --> 00:25:07.720
file and a manifest that
Jason right off the bat,

408
00:25:08.050 --> 00:25:11.470
the manifests that Jason is
the kind of metadata being

409
00:25:11.470 --> 00:25:13.750
fed to your browser to
let it know, to do

410
00:25:13.750 --> 00:25:16.780
the full screen view and
the icon to use, to

411
00:25:16.780 --> 00:25:20.440
save it to your home
screen. Now, when I go

412
00:25:20.440 --> 00:25:23.500
and look about this information,
it says everywhere, I'm looking,

413
00:25:23.520 --> 00:25:28.060
it says, this is a
experimental technology. Should I worry

414
00:25:28.060 --> 00:25:30.220
about that? Like, does that
mean that this is like,

415
00:25:30.250 --> 00:25:33.100
Oh, well, that's cool, but
you know, maybe I should

416
00:25:33.100 --> 00:25:38.350
wait Honestly, a few months
ago I would have possibly

417
00:25:38.350 --> 00:25:42.430
said like, yeah, maybe hold
off a little bit, but

418
00:25:42.520 --> 00:25:45.130
it's for one thing, the
one main thing is that

419
00:25:45.130 --> 00:25:48.700
it's progressive. So it's not
going to break anything. If

420
00:25:48.700 --> 00:25:52.420
you do do it on
a, like your user is

421
00:25:52.420 --> 00:25:55.120
on a browser that doesn't
support it. It's not going

422
00:25:55.120 --> 00:25:57.400
to break anything. So you
could be ahead of the

423
00:25:57.400 --> 00:26:02.260
game for the browsers that
are, will eventually support it.

424
00:26:02.350 --> 00:26:05.380
And the really awesome news
is all of the big

425
00:26:05.410 --> 00:26:08.740
browsers are on their way
to supporting it. So like

426
00:26:09.070 --> 00:26:12.580
Chrome has it in development.
It's totally supported in Chrome

427
00:26:13.030 --> 00:26:16.990
edge is in development, but
it's under a flag and

428
00:26:16.990 --> 00:26:20.800
Safari is in development. It's
a marked is in development

429
00:26:20.800 --> 00:26:26.890
on WebKit. So everybody is
jumping on this bandwagon. So

430
00:26:26.950 --> 00:26:30.190
I'm looking at things like
web application manifests like this,

431
00:26:30.250 --> 00:26:34.570
this Jason file that describes
my home screen icon and

432
00:26:34.570 --> 00:26:38.230
where if there's an app
that's related and where I

433
00:26:38.230 --> 00:26:40.750
can get it. And then
my icons, that's just adjacent

434
00:26:40.750 --> 00:26:43.410
file that I linked to
with a REL equals link.

435
00:26:43.920 --> 00:26:45.960
I could add that to
my blog right now. And

436
00:26:45.960 --> 00:26:48.180
even if no one supports
it, it would just, just

437
00:26:48.210 --> 00:26:51.200
kind of sit there and
chill. So Totally. And that's

438
00:26:51.200 --> 00:26:54.680
honestly one of my favorite
steps because it's like the,

439
00:26:54.680 --> 00:26:57.830
this tiny amount of work
that you can do. And

440
00:26:57.830 --> 00:27:00.710
then if the user has
a supporting phone, they can

441
00:27:00.710 --> 00:27:04.010
have your icon on your
phone. And it's, it's, I

442
00:27:04.010 --> 00:27:07.100
think it's really, I'm a
big fan of icons and

443
00:27:07.100 --> 00:27:09.510
you can use emoji for
the short name. So you

444
00:27:09.510 --> 00:27:11.570
would just have like, on
my phone, my app is

445
00:27:11.570 --> 00:27:16.430
just like my picture and
my icon and three emojis

446
00:27:16.430 --> 00:27:19.780
underneath it. And I'm like,
I find it very sad.

447
00:27:20.270 --> 00:27:23.330
I'm glad that that makes
me very happy. I have

448
00:27:23.330 --> 00:27:26.630
very high standards. So it
does seem like things have

449
00:27:26.630 --> 00:27:29.030
changed a little bit. I
used to do a home

450
00:27:29.030 --> 00:27:32.120
screen icons with meta-tags and
they would stack up. And

451
00:27:32.120 --> 00:27:33.650
then I ended up with
like a dozen of them.

452
00:27:34.040 --> 00:27:36.680
It sounds like the, the,
the web has gotten together

453
00:27:36.680 --> 00:27:40.070
and decided that we're going
to do manifests with Jason.

454
00:27:40.460 --> 00:27:43.130
It's easier. And then it
only takes up one line.

455
00:27:43.130 --> 00:27:45.110
And if your browser doesn't
support it, then they won't

456
00:27:45.110 --> 00:27:47.360
even ask for the Jason
file and no harm, no

457
00:27:47.360 --> 00:27:50.600
foul. Yeah. Nice and succinct.
Yeah. And then you can

458
00:27:50.600 --> 00:27:54.200
also get like a free
splash screen and set FIM

459
00:27:54.200 --> 00:27:57.080
colors. And like, you get
like some cool features for

460
00:27:57.140 --> 00:28:01.580
free basically, don't you? It's
pretty awesome. And like the

461
00:28:01.610 --> 00:28:05.360
there's a link on there
then it's basically saying like,

462
00:28:05.390 --> 00:28:11.090
where you want your application
to start it. If they

463
00:28:11.090 --> 00:28:14.870
click it from the home
screen, do you want them

464
00:28:14.870 --> 00:28:17.960
to go straight to a
certain page? Like you want

465
00:28:17.960 --> 00:28:19.760
them to go straight to
blog posts, which, you know,

466
00:28:19.760 --> 00:28:21.950
you have cash, so you
can even control kind of

467
00:28:21.950 --> 00:28:24.920
the navigation of how a
user is clicking you from

468
00:28:24.920 --> 00:28:28.940
the home screen and where
they're ending up. And Chrome

469
00:28:28.940 --> 00:28:32.330
developer tools have the ability
to check this manifest and

470
00:28:32.330 --> 00:28:36.410
make sure that it's cool.
So like setting this theme

471
00:28:36.410 --> 00:28:39.470
color and the orientation, and
you would also said something

472
00:28:39.470 --> 00:28:41.900
about removing the URL and
making it look like it's

473
00:28:41.900 --> 00:28:45.890
a standalone app where you
can test Yeah, yeah, exactly.

474
00:28:45.890 --> 00:28:48.350
In the Chrome dev tools.
Yeah. That there's that where

475
00:28:48.350 --> 00:28:51.650
in the application tab, it
actually has an also on

476
00:28:51.650 --> 00:28:55.130
the menu for the manifest
and you can see the

477
00:28:55.130 --> 00:28:59.180
icons and everything. And then
from there, I was impressed

478
00:28:59.180 --> 00:29:03.410
with this display browser versus
display standalone. That's the full

479
00:29:03.410 --> 00:29:07.370
screen views. Do I want
a full screen view? Like

480
00:29:07.370 --> 00:29:08.660
if I I'm wondering if
I want to do this

481
00:29:08.660 --> 00:29:11.690
for my blog and how
progressive my blog could be

482
00:29:11.720 --> 00:29:14.060
in, in like a couple
of hours. I mean, that's

483
00:29:14.060 --> 00:29:17.690
a good question. I it's
nice, but do you have

484
00:29:17.690 --> 00:29:20.900
the right navigation that you
want on your blog to

485
00:29:20.930 --> 00:29:24.920
that people won't need, you
know, the back button or

486
00:29:24.920 --> 00:29:27.440
like, do you have something
in place that users users

487
00:29:27.440 --> 00:29:31.850
can navigate clearly without the
browser Chrome? That's a good

488
00:29:31.850 --> 00:29:34.160
point. So then people who
are listening, who might want

489
00:29:34.160 --> 00:29:38.060
to go in slightly progressive
eyes, their application should think

490
00:29:38.060 --> 00:29:42.370
about whether it's more app
like, or news site, like,

491
00:29:42.370 --> 00:29:44.470
or more blog, like, and
if it supports the kind

492
00:29:44.470 --> 00:29:47.550
of navigation that they would
want to have. Totally. And

493
00:29:47.550 --> 00:29:50.640
that's like, so that kind
of, that's one of my

494
00:29:50.760 --> 00:29:54.180
other favorite points about this
is when you make updates

495
00:29:54.210 --> 00:29:58.920
to your web application, you
just push those up. And

496
00:29:58.920 --> 00:30:01.200
instead of like an app,
you have to go through

497
00:30:01.230 --> 00:30:05.730
different stores and different the
regulations about submitting things. You

498
00:30:05.730 --> 00:30:07.680
don't have to do that
with progressive web apps, which

499
00:30:07.680 --> 00:30:11.220
is really nice. And instead
of like sharing an app

500
00:30:11.220 --> 00:30:13.380
with a friend, That was
actually a really good point.

501
00:30:14.040 --> 00:30:17.250
Yeah. Yeah. It's, I mean,
it makes, you know, all

502
00:30:17.250 --> 00:30:22.260
your updates, practically instantaneous. It's
pretty nice. Yeah. Yeah. I

503
00:30:22.260 --> 00:30:24.600
like that idea. Yeah. Well,
and that's the thing, right?

504
00:30:24.600 --> 00:30:29.340
That's the open web, not
having to ask anyone's permission

505
00:30:29.340 --> 00:30:30.870
or wait a week, like
how we're going to launch

506
00:30:30.870 --> 00:30:33.480
the app and then publish,
and then we wait for

507
00:30:33.480 --> 00:30:35.430
the app store to decide
whether it's a good idea

508
00:30:35.430 --> 00:30:39.510
or not. Yes. That's pretty
nice. And it's like, so

509
00:30:39.510 --> 00:30:42.420
one thing I like is
that it's more shareable and

510
00:30:42.420 --> 00:30:45.660
this is kind of another
standard of progressive web apps.

511
00:30:46.110 --> 00:30:50.010
So you can just send
somebody a link to the

512
00:30:50.010 --> 00:30:53.520
progressive web app because it's
a website after all. And

513
00:30:53.850 --> 00:30:55.830
instead of, you know, say
you want to go to

514
00:30:55.830 --> 00:30:59.610
a certain place in the
page instead of, you know,

515
00:30:59.610 --> 00:31:02.640
telling somebody to download an
app and then click this

516
00:31:02.640 --> 00:31:04.560
thing, go to this menu
and then go here. You

517
00:31:04.560 --> 00:31:07.110
could just send them a
direct link. So it's much

518
00:31:07.110 --> 00:31:10.320
more shareable than an app,
which, you know, the web

519
00:31:10.320 --> 00:31:13.830
is in general. Cool. All
right. Well now I see

520
00:31:13.830 --> 00:31:15.480
now you've given me work
to do, and now I

521
00:31:15.480 --> 00:31:19.550
have to go progressive eyes,
my web apps. So you've,

522
00:31:19.550 --> 00:31:21.600
you've gone and taken this
interview and turned it into

523
00:31:21.600 --> 00:31:24.060
a, to do list for
me. So I appreciate that

524
00:31:25.020 --> 00:31:29.520
Have to do is the
team with a lot of

525
00:31:29.520 --> 00:31:32.820
money has made kind of
a reference. That's nice. It's

526
00:31:32.820 --> 00:31:36.060
like the, you know, the,
to do MVCs, which is

527
00:31:36.060 --> 00:31:38.760
like a list of how
to do a bunch of

528
00:31:38.760 --> 00:31:42.360
framework examples. They have hacker
news PWA, which is H

529
00:31:42.360 --> 00:31:48.750
N pwa.com that shows you
different frameworks using and utilizing

530
00:31:48.780 --> 00:31:52.020
progressive web standards. So a
good place to just check

531
00:31:52.020 --> 00:31:55.620
everything out and see a
bunch of resources, H N

532
00:31:55.770 --> 00:32:00.930
pwa.com, hacker news readers as
progressive web apps. All right.

533
00:32:01.500 --> 00:32:03.840
Very cool. Well, thanks so
much for chatting with me

534
00:32:03.840 --> 00:32:07.080
today. Thanks for having me.
This has been another episode

535
00:32:07.080 --> 00:32:09.600
of Hansel minutes, and we'll
see you again next week.

