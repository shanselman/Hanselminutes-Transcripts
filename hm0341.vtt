WEBVTT FILE

1
00:00:12.050 --> 00:00:17.750
From hanselminutes.com. It's Hanselman. It's
a weekly discussion with web

2
00:00:17.750 --> 00:00:22.610
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.610 --> 00:00:28.520
number three 41 recorded live
Thursday, October 11, 2012. This

4
00:00:28.520 --> 00:00:31.610
episode is brought to you
by Tellerik offering the best

5
00:00:31.610 --> 00:00:40.580
in developer tools and support
online@telerikdotcomandbyfranklins.net training developers to work

6
00:00:40.580 --> 00:00:44.450
smarter and now offering gesture
pack a powerful gesture, recording

7
00:00:44.450 --> 00:00:50.750
and recognition system for Microsoft
connect for windows developers details@gesturepak.com.

8
00:00:51.560 --> 00:00:54.770
In this episode, Scott talks
with Eric Kim's Zack about

9
00:00:55.010 --> 00:00:59.090
porting the iOS touch-based game,
Contra issuer to HTML five

10
00:00:59.120 --> 00:01:04.790
and JavaScript. Hi, this is
Scott Hanselman. This is another

11
00:01:04.790 --> 00:01:07.490
episode of Hansel minutes. And
today I'm talking with Eric

12
00:01:07.490 --> 00:01:11.400
Clemson from clarity consulting. How's
it going, sir? How you

13
00:01:11.400 --> 00:01:15.500
doing Scott? I'm well, thanks
for talking to me. So

14
00:01:15.500 --> 00:01:16.790
I had to talk to
you. I had to call

15
00:01:16.790 --> 00:01:19.940
you guys right away because
a couple of days ago,

16
00:01:19.940 --> 00:01:24.830
you guys announced contrary. Sure.
It was a game that

17
00:01:24.830 --> 00:01:27.020
is a classic game. I've
got it on my iPhone

18
00:01:27.020 --> 00:01:30.950
and my iPad, except it
was built in HTML five.

19
00:01:30.950 --> 00:01:32.810
So you poured it this
whole thing over to HTML

20
00:01:32.810 --> 00:01:36.320
five and JavaScript, which pretty
much blew my mind. Yeah,

21
00:01:36.750 --> 00:01:38.870
that's what we've been doing
for the last six months.

22
00:01:38.870 --> 00:01:42.230
And we're really proud of
it. It's we just released

23
00:01:42.230 --> 00:01:45.410
it two days ago, maybe
a day ago. And so

24
00:01:45.410 --> 00:01:49.250
far the feedback has been
really positive. So this was

25
00:01:49.250 --> 00:01:52.010
originally created by mochas games.
Is that right? And then

26
00:01:52.010 --> 00:01:55.010
Microsoft approached them and said,
Hey, I really want to

27
00:01:55.010 --> 00:01:57.980
have this running in HTML
five, right? It was a

28
00:01:58.430 --> 00:02:03.830
one man shop out in
the Ukraine or Russia, one

29
00:02:03.830 --> 00:02:07.850
of the two. And you
know, this, this guy, max,

30
00:02:07.880 --> 00:02:11.750
he single handily kinda came
up with the game mechanics

31
00:02:11.750 --> 00:02:15.980
and the concepts and built
pretty much the whole game

32
00:02:15.980 --> 00:02:19.220
aside from the artwork and
the soundtrack by hand himself

33
00:02:19.250 --> 00:02:23.930
and is fairly obsessed with
the quality and kind of

34
00:02:23.930 --> 00:02:28.640
the fidelity of the game.
And one approached by Microsoft.

35
00:02:28.640 --> 00:02:31.340
He actually kinda turned us
down. You know, he actually

36
00:02:31.340 --> 00:02:34.430
said that he didn't think
it could, you could ever

37
00:02:34.430 --> 00:02:37.160
pull off that kind of
quality in a, an HTML

38
00:02:37.160 --> 00:02:40.220
five report of the game.
So he actually turned us

39
00:02:40.220 --> 00:02:43.220
down the first time. Then
he actually went on to

40
00:02:43.220 --> 00:02:48.950
win best tablet game of
the year by Apple and

41
00:02:49.130 --> 00:02:52.450
a handful of other kind
of game awards. And we

42
00:02:52.450 --> 00:02:57.050
reapproached him and he accepted.
Did you have to show

43
00:02:57.050 --> 00:02:58.880
him something to prove that
you could do it? I

44
00:02:58.880 --> 00:03:02.770
mean, could see if, if
Someone were really kind of

45
00:03:02.770 --> 00:03:05.890
detail oriented and just obsessed
with like, you know, buttery,

46
00:03:05.890 --> 00:03:08.260
smooth animation that they'd be
like, yeah, come on. Let's

47
00:03:08.260 --> 00:03:10.720
not, I don't want to
go and dirty my game

48
00:03:10.750 --> 00:03:14.190
by putting it in HTML
five. Right? So the I

49
00:03:14.190 --> 00:03:18.540
E 10 team I 19
internet Explorer team has been

50
00:03:18.540 --> 00:03:23.220
doing a series of what
they call game changers and

51
00:03:23.460 --> 00:03:25.800
cut the rope was kind
of the last example last

52
00:03:25.800 --> 00:03:27.870
year has kind of showed
piece item there. It was

53
00:03:27.870 --> 00:03:31.950
interactive game that was ported
from iOS as well. That

54
00:03:31.950 --> 00:03:34.830
kind of gave us a
little bit of street creds

55
00:03:34.860 --> 00:03:36.930
to, to say that, you
know, we think this is

56
00:03:36.930 --> 00:03:39.420
possible. We had also been
working with a handful of

57
00:03:39.450 --> 00:03:43.920
other game companies, kind of
behind the scenes doing proof

58
00:03:43.920 --> 00:03:47.640
of concepts that prove that
we could get that level

59
00:03:47.640 --> 00:03:52.620
of fidelity that they were
in seeking out at with

60
00:03:52.620 --> 00:03:56.490
JavaScript on an HTML five.
And it took a little

61
00:03:56.490 --> 00:03:58.590
arm twisting, but we, you
know, we got his buy

62
00:03:58.590 --> 00:04:01.170
in and he was fairly
skeptical even up until the

63
00:04:01.440 --> 00:04:05.190
final moments of development, but
all of a sudden done,

64
00:04:05.190 --> 00:04:08.970
everyone's very happy with the
output. So I don't know

65
00:04:08.970 --> 00:04:10.980
if the people that are
listening are game developers, but

66
00:04:10.980 --> 00:04:12.600
I'm going to presume that
they're not, I'm going to

67
00:04:12.600 --> 00:04:14.370
guess that most of the
people who are listening are

68
00:04:14.370 --> 00:04:17.430
kind of, you know, smart
developers, but are probably more

69
00:04:17.430 --> 00:04:20.940
likely to be doing text
boxes over data than they

70
00:04:20.940 --> 00:04:24.540
are to be doing, you
know, splines and, and math

71
00:04:24.570 --> 00:04:27.960
and complicated algebra inside of
in JavaScript. So let's kind

72
00:04:27.960 --> 00:04:30.450
of break this down a
little bit in my mind,

73
00:04:30.480 --> 00:04:32.130
if I were going to
go and create a game,

74
00:04:32.130 --> 00:04:36.000
I'd probably have a whole
lot of transparent PNGs. I'd

75
00:04:36.000 --> 00:04:39.150
have some JavaScript game engine
and that's about as far

76
00:04:39.150 --> 00:04:43.410
as my design has gotten
already, but I suspect though

77
00:04:43.410 --> 00:04:45.510
looking at the stuff that's
going on inside of countries,

78
00:04:45.510 --> 00:04:48.900
you're kind of comparing it
to cut the rope. This

79
00:04:48.900 --> 00:04:51.540
isn't a game that you
could just fill up with

80
00:04:51.570 --> 00:04:54.600
transparent bitmaps and, and try
to fool the eye. Can

81
00:04:54.600 --> 00:04:57.810
you, Right. That's a good
point. What you're referring to

82
00:04:58.020 --> 00:05:03.360
is just the tax, you
know, creative coding technique, creative

83
00:05:03.360 --> 00:05:07.410
design technique of using Sprite,
animations in games. And a

84
00:05:07.410 --> 00:05:11.250
lot of what you see,
especially in most kind of

85
00:05:11.250 --> 00:05:14.510
casual games is the animations.
And kind of the characters

86
00:05:14.540 --> 00:05:18.000
you see on the screen
are usually their emotions and

87
00:05:18.000 --> 00:05:20.850
their movement are controlled with
these sprites. And these sprites

88
00:05:20.850 --> 00:05:23.880
are more or less just
a strip of images with

89
00:05:23.880 --> 00:05:27.540
frames in them that show
characters in various stages or

90
00:05:27.900 --> 00:05:31.650
animations. And in Contra juror
that we did have a

91
00:05:31.650 --> 00:05:35.340
fair amount of that. However,
the majority of the design,

92
00:05:35.340 --> 00:05:38.220
or I guess the illusion
to your eye was actually

93
00:05:38.220 --> 00:05:42.810
math, calculating kind of complex
as a curves and dynamic

94
00:05:42.810 --> 00:05:46.980
drawing on the screen. So
for instance, there's, you know,

95
00:05:46.980 --> 00:05:51.690
the main characters name is
petite, his tail wags randomly,

96
00:05:51.720 --> 00:05:55.320
and it moves within the
direction that the characters moving

97
00:05:55.320 --> 00:05:58.820
in and it will stretch
on his velocity. And though

98
00:05:58.830 --> 00:06:01.640
that's the kind of detail
that a, you know, the

99
00:06:01.640 --> 00:06:04.940
game developer wanted in this
game. And so when you

100
00:06:04.940 --> 00:06:08.060
play that game, it feels
very, very fluid, especially with

101
00:06:08.570 --> 00:06:11.240
something like the tail. If
you notice that little detail

102
00:06:11.240 --> 00:06:14.420
there, the, you know, the
other kind of key element

103
00:06:14.420 --> 00:06:18.530
there, that's kind of nice
to highlight is box Tootie

104
00:06:18.560 --> 00:06:22.620
drives the, a lot of
the physics behind the scenes.

105
00:06:22.620 --> 00:06:25.580
So maybe we were getting
a little deep there for

106
00:06:27.110 --> 00:06:29.460
in the box duty, but
the, the kind of the

107
00:06:29.460 --> 00:06:32.960
drawing behind the game is
largely dynamic, which is a

108
00:06:32.960 --> 00:06:37.430
little different compared to how
most traditional casual games are

109
00:06:37.430 --> 00:06:42.370
done with Brightspace spreadsheets. Did
you work on cut the

110
00:06:42.370 --> 00:06:46.390
rope? I didn't some of
the fine folks at pixel

111
00:06:46.390 --> 00:06:50.170
lab worked on it. And
when I, when I looked

112
00:06:50.170 --> 00:06:52.330
at that and when I
play HTML five games, I

113
00:06:52.330 --> 00:06:54.370
always like to bring up
the developer toolbar and kind

114
00:06:54.370 --> 00:06:57.100
of wander around and try
to figure out what's what's

115
00:06:57.100 --> 00:06:59.020
going on. So let's, let's
actually do dig in a

116
00:06:59.020 --> 00:07:02.110
little bit. You don't just
write these things from scratch,

117
00:07:02.110 --> 00:07:05.800
right? I mean, there are
known libraries within JavaScript and

118
00:07:05.800 --> 00:07:08.710
other other engines that you
can use and box two

119
00:07:08.710 --> 00:07:12.580
D is a physics engine
for games that that was

120
00:07:12.580 --> 00:07:15.280
used. Is there, is this
a JavaScript engine or is

121
00:07:15.280 --> 00:07:17.920
this a C engine and
you poured it. So yeah,

122
00:07:19.000 --> 00:07:22.660
we talk about frameworks. The
biggest one that we used

123
00:07:22.660 --> 00:07:27.190
for this game was box
TD box duty is a

124
00:07:27.610 --> 00:07:31.600
pretty common physics engine in
the game world. It will

125
00:07:32.170 --> 00:07:36.010
allow you to easily hook
up things that are like

126
00:07:36.850 --> 00:07:40.510
joints and ropes. And for
example, we have characters in

127
00:07:40.510 --> 00:07:42.790
the game, which we call
snots, which are these kind

128
00:07:42.790 --> 00:07:45.520
of stringy, stretchy things. And
those are a collection of

129
00:07:45.520 --> 00:07:49.540
rope joints that are joined
together with some specific kind

130
00:07:49.540 --> 00:07:53.770
of properties on the box
duty objects. Those, if there

131
00:07:53.770 --> 00:07:56.350
was a debug menu, for
example, if you turn that

132
00:07:56.350 --> 00:07:58.930
on, you'd see kind of
a skeleton of all of

133
00:07:58.930 --> 00:08:02.740
the box, two D objects
in the background box two

134
00:08:02.740 --> 00:08:06.370
D it was originally written,
I believe in C plus

135
00:08:06.370 --> 00:08:09.490
plus, which was then ported
to action script, and then

136
00:08:10.030 --> 00:08:13.840
recently made available in a
JavaScript version for web developers.

137
00:08:14.580 --> 00:08:18.340
And then until maybe the
recent round of browser updates,

138
00:08:18.940 --> 00:08:22.210
most of the browsers had
a pretty hard time doing

139
00:08:22.210 --> 00:08:25.240
all the calculations that box
Judy does behind the scenes,

140
00:08:26.110 --> 00:08:29.980
but with, especially in an
Explorer 10 and some of

141
00:08:29.980 --> 00:08:33.640
the advanced, modern browsers out
there, we were able to

142
00:08:33.730 --> 00:08:37.810
replicate exactly the physics look
and feel that you get

143
00:08:37.810 --> 00:08:41.830
in the iOS game in
HTML five In box two

144
00:08:41.830 --> 00:08:45.460
D is interesting because it
originally was done by Aaron

145
00:08:45.850 --> 00:08:49.900
keto who works for blizzard
entertainment and was done a

146
00:08:49.900 --> 00:08:55.030
number of years. Yeah, it's,
it's a fairly old engine,

147
00:08:55.050 --> 00:08:57.750
not old in a bad
way, but it's pretty robust.

148
00:08:57.750 --> 00:09:02.610
And if anything, when I
looked at some of the

149
00:09:02.910 --> 00:09:08.640
game creators code for contractor,
he was using joints and

150
00:09:08.640 --> 00:09:12.330
ropes and different types of
bodies in ways that I

151
00:09:12.330 --> 00:09:16.140
really haven't seen inbox use
like that inbox duty in

152
00:09:16.140 --> 00:09:18.540
the past. So I think
that's what adds to a

153
00:09:18.540 --> 00:09:20.820
pretty unique gameplay. If you
compare it to say like

154
00:09:20.820 --> 00:09:25.050
an angry, angry birds, which
is fairly a standard, also

155
00:09:25.050 --> 00:09:30.050
has Fox TV running behind
the scenes. Yeah. One of

156
00:09:30.050 --> 00:09:33.020
the things that's really interesting
about countries you're, that's so

157
00:09:33.020 --> 00:09:35.360
unusual, I think compared to
other games, is that the

158
00:09:35.360 --> 00:09:39.050
amount of, of what kind
of organic animations and kind

159
00:09:39.050 --> 00:09:42.140
of, you know, idle animations
are really high. I mean,

160
00:09:42.440 --> 00:09:44.420
angry birds, blink, and they
do stuff. But for the

161
00:09:44.420 --> 00:09:47.300
most part, you know, you're
throwing a physical body at

162
00:09:47.300 --> 00:09:49.160
a bunch of other physical
bodies and they all have

163
00:09:49.160 --> 00:09:52.460
properties and it's finely tuned,
but the general idea is

164
00:09:52.460 --> 00:09:56.240
one of collision. But contrary
Jewish is filled with these

165
00:09:56.240 --> 00:10:00.410
organic curves. I mean, even
the splash screen has these

166
00:10:00.410 --> 00:10:04.130
eyeballs moving around and these
little creatures turning and moving,

167
00:10:04.130 --> 00:10:08.870
it just has a very
non rectangular rectilinear kind of,

168
00:10:10.550 --> 00:10:13.820
of style. That's almost kind
of impossible to get one's

169
00:10:13.820 --> 00:10:17.510
brain around. If you asked
me why this game one,

170
00:10:17.720 --> 00:10:21.080
you know, best tablet of
the year game or whatever

171
00:10:21.110 --> 00:10:27.320
the award was from Apple
it's exactly, for those reasons,

172
00:10:27.320 --> 00:10:31.940
the, the level of detail
and the amount of finesse

173
00:10:31.970 --> 00:10:35.540
that has gone into all
of the subtleties of the

174
00:10:35.570 --> 00:10:41.390
game are unbelievable. Absolutely mind
blowing to me, not really

175
00:10:41.390 --> 00:10:45.950
being a game designer per
se, but being a designer

176
00:10:45.950 --> 00:10:49.850
at heart and can appreciate
the finer subtleties of, of

177
00:10:49.850 --> 00:10:54.230
a craftsmanship. But I mean,
this is true craftsmanship in

178
00:10:54.230 --> 00:10:57.530
this game and everything from
the rotation of the particles,

179
00:10:57.530 --> 00:10:59.870
in the background to the
movement of the eyes, to

180
00:10:59.870 --> 00:11:04.070
the way the character will
move across the screen and

181
00:11:04.070 --> 00:11:08.240
the lighting effects that a
bounce off his skin. You

182
00:11:08.240 --> 00:11:10.490
know, if you look at
the snots, for example, they

183
00:11:10.490 --> 00:11:13.670
all look at the character
as he moves across the

184
00:11:13.670 --> 00:11:16.310
screen. So they're all kind
of following him. They all

185
00:11:16.310 --> 00:11:20.060
blink at different rates. They
all have, you know, just

186
00:11:20.180 --> 00:11:25.460
so much detail, some things
move. So subtly it's almost

187
00:11:25.670 --> 00:11:29.120
imperceivable. And yet the game
creator as we were building,

188
00:11:29.120 --> 00:11:33.560
it would, you know, create
50 bucks of all the

189
00:11:33.860 --> 00:11:38.930
visual discrepancies and things like,
you know, the one particle

190
00:11:38.930 --> 00:11:41.690
in the background of the
hundred that are back there,

191
00:11:41.930 --> 00:11:45.590
isn't moving correctly. So really
that was my question that

192
00:11:45.590 --> 00:11:48.410
he's actually kind of directing
this and he knows his

193
00:11:48.410 --> 00:11:51.020
game backwards and forwards cause
he wrote it from scratch

194
00:11:51.380 --> 00:11:54.490
and now you're creating homage
to it And he's not

195
00:11:54.490 --> 00:11:57.910
going to sign off on
it unless it is the

196
00:11:57.910 --> 00:12:00.060
same game. Right. And that
was a, you know, a

197
00:12:00.060 --> 00:12:03.360
major piece of the puzzle
here when we were building

198
00:12:03.360 --> 00:12:08.070
this part of our process
and max was deeply involved

199
00:12:08.070 --> 00:12:11.430
with everything we did. Max
is a unique character because

200
00:12:11.820 --> 00:12:15.540
he wrote this entire game
for iOS. He also wrote

201
00:12:15.540 --> 00:12:18.750
it in flash and he
also wrote it for a

202
00:12:18.780 --> 00:12:23.370
windows phone recently in X
and a so kind of

203
00:12:23.370 --> 00:12:27.930
this one man machine has
legitimately afforded this game to

204
00:12:28.020 --> 00:12:32.610
majority of, you know, frameworks
here and helped us along

205
00:12:32.610 --> 00:12:38.430
the way with JavaScript and
HTML. Yeah, he's definitely a

206
00:12:38.430 --> 00:12:41.250
beast. He, it looks like
at one iPad game of

207
00:12:41.250 --> 00:12:44.250
the year in December of
2011 at the iTunes rewind

208
00:12:44.850 --> 00:12:47.580
and it's also won a
Webby award for best tablet

209
00:12:47.580 --> 00:12:49.590
game. The list kind of
goes on over the last

210
00:12:50.160 --> 00:12:53.070
year. It's won a half
dozen awards from best physics

211
00:12:53.070 --> 00:12:58.050
games, best puzzle game, all
over the place. So he

212
00:12:58.140 --> 00:13:00.870
wrote a lot of the
ports himself, but he didn't

213
00:13:00.870 --> 00:13:02.940
write the JavaScript one. Did
he, did he write some

214
00:13:02.940 --> 00:13:05.160
JavaScript? Did he say, I
don't like the way this

215
00:13:05.160 --> 00:13:07.170
behaves and then dive in
and then fix some code

216
00:13:07.170 --> 00:13:11.850
and show it to you?
Well, not, not exactly. He

217
00:13:11.850 --> 00:13:15.240
wrote the game in action
script at some point and

218
00:13:15.240 --> 00:13:18.570
accident script and JavaScript are
fairly similar. So we had

219
00:13:18.570 --> 00:13:23.340
good kind of direction. However,
just being the nature of

220
00:13:23.340 --> 00:13:28.620
JavaScript and running in the
browser and getting interpreted in

221
00:13:28.620 --> 00:13:32.280
real time, we had to
make a lot of optimizations

222
00:13:32.310 --> 00:13:36.480
that were just fundamentally different.
So when you know, the

223
00:13:36.480 --> 00:13:39.330
game developer might say like,
Hey, you know, I've already

224
00:13:39.330 --> 00:13:42.810
written this just copy and
paste. It. It wouldn't be

225
00:13:42.810 --> 00:13:48.150
that simple, just given the
difference of how JavaScript is

226
00:13:48.150 --> 00:13:52.410
as a language as not
necessarily being object oriented, created

227
00:13:52.770 --> 00:13:56.160
a huge struggles for us
to kind of structure a

228
00:13:56.160 --> 00:13:59.610
large scale application like this
for JavaScript. So it is

229
00:13:59.610 --> 00:14:01.620
large scale. I mean, this
is a lot of, a

230
00:14:01.620 --> 00:14:03.840
lot of code. This isn't
just like a single HTML

231
00:14:03.840 --> 00:14:06.870
page and then countries your
dot JS. There's, there's some,

232
00:14:07.380 --> 00:14:09.600
some work in here you've
got the box to DJ.

233
00:14:09.780 --> 00:14:13.710
Yeah. It was probably about
50,000 lines of code. And

234
00:14:13.800 --> 00:14:15.900
there may even be more
at this point, but last

235
00:14:15.900 --> 00:14:20.070
time I checked, it was
about 50,000. And what libraries

236
00:14:20.070 --> 00:14:22.290
did you use other than
box today? So that's kind

237
00:14:22.290 --> 00:14:26.160
of the beauty of it.
There are a lot of

238
00:14:26.160 --> 00:14:29.520
game frameworks that are kind
of emerging at this time.

239
00:14:30.720 --> 00:14:34.730
Some that we explored like
easel JS and it, and

240
00:14:34.800 --> 00:14:37.650
chant JS and a handful
of the other ones. And

241
00:14:39.510 --> 00:14:43.380
they're good for most cases,
but when you need the

242
00:14:43.380 --> 00:14:47.310
control, every single aspect of
the game and squeeze out

243
00:14:47.340 --> 00:14:51.740
every tiny bit of performance
that you can, those frameworks

244
00:14:51.740 --> 00:14:53.810
tend to break down or
don't offer the type of

245
00:14:53.810 --> 00:14:57.170
control that you're looking for.
So there were no other

246
00:14:57.170 --> 00:15:01.790
frameworks used other than box
two D for our, our

247
00:15:01.790 --> 00:15:05.720
game. We built all of
it from scratch. And a

248
00:15:05.720 --> 00:15:08.780
lot of the time was
spent figuring out how to

249
00:15:08.780 --> 00:15:12.290
create our own kind of
bitmap managers or animation schedulers,

250
00:15:12.290 --> 00:15:18.800
or touch framework or a
handful of things. We, we

251
00:15:18.800 --> 00:15:23.030
had a strategy for splitting
up CSS, animations versus canvas

252
00:15:23.030 --> 00:15:25.940
dynamic animations to kind of
offset the load on, on

253
00:15:25.940 --> 00:15:30.650
the drawing engines, things like
that. We had done a

254
00:15:30.650 --> 00:15:33.770
lot of exploration of finding
kind of the secret sauce

255
00:15:33.860 --> 00:15:38.570
of what combinations of canvas
drawing and CSS, animation, and

256
00:15:38.570 --> 00:15:42.890
drop frame rating and different
strategies like that. It would

257
00:15:42.890 --> 00:15:45.650
take to, to kind of
produce the 60 frames per

258
00:15:45.650 --> 00:15:49.580
second quality that you get
on the iOS app. So

259
00:15:49.850 --> 00:15:54.500
there were no other frameworks.
He in iOS game, there

260
00:15:54.500 --> 00:15:58.220
was a handful of frameworks
that existed for game developers,

261
00:15:58.220 --> 00:16:01.250
but they're fairly minimal compared
to some of the larger

262
00:16:01.250 --> 00:16:04.610
game frameworks that exist. So
it wasn't hard to create

263
00:16:04.610 --> 00:16:09.880
our own. Hi, this is
Scott and I've got a

264
00:16:09.880 --> 00:16:14.470
cool offer from the folks@lynda.com,
L Y N D a.com.

265
00:16:14.470 --> 00:16:18.580
It's an online learning company.
They've got more than 77,000

266
00:16:18.580 --> 00:16:23.140
video tutorials. They teach software
creative business skills. Membership started

267
00:16:23.140 --> 00:16:26.920
only $25 a month. You
get unlimited 24 seven access

268
00:16:26.920 --> 00:16:29.530
to all their top quality
video courses. They're all taught

269
00:16:29.530 --> 00:16:32.680
by expert instructors. You get
to learn anytime, anywhere at

270
00:16:32.680 --> 00:16:36.910
your own pace. There's bite-size
tutorials, there's comprehensive courses. You

271
00:16:36.910 --> 00:16:41.770
could learn web design and
programing, regular design photography, business,

272
00:16:41.770 --> 00:16:45.580
3d animation, lots more lynda.com
has got a variety of

273
00:16:45.580 --> 00:16:49.390
courses for Microsoft developers. They've
got courses on visual studio,

274
00:16:49.690 --> 00:16:53.410
windows, windows, phones, SQL server.
You can pick the courses

275
00:16:53.410 --> 00:16:55.600
you want, put them in
your queue for whenever you're

276
00:16:55.600 --> 00:16:57.910
ready to watch. You can
even learn on the go.

277
00:16:57.910 --> 00:17:00.460
They've got an optimized mobile
site and they've even got

278
00:17:00.700 --> 00:17:04.300
a free iPhone and iPad
app for members. You can

279
00:17:04.300 --> 00:17:08.500
try lynda.com L Y N
D a.com free for seven

280
00:17:08.500 --> 00:17:16.630
days. Just visit lynda.com/hansel minutes,
L Y N D a.com/hanselman.

281
00:17:16.630 --> 00:17:22.000
It's exclusive for Hansel minutes,
listeners lynda.com training online for

282
00:17:22.030 --> 00:17:27.880
free seven days. Check it
out. lynda.com/hansel minutes. Do you

283
00:17:27.880 --> 00:17:32.020
feel that that it's time
for HTML five gaming or,

284
00:17:32.590 --> 00:17:34.810
I mean, remember that it
was just like 10 years

285
00:17:34.810 --> 00:17:36.550
ago when we were pretty
impressed that we could put

286
00:17:36.550 --> 00:17:38.770
a table up and put
some text boxes in it,

287
00:17:39.070 --> 00:17:42.430
you know, are we perverting
this, this, this kind of

288
00:17:42.640 --> 00:17:45.580
terminal effectively where the browser
is really just a dumb

289
00:17:45.580 --> 00:17:48.670
terminal and we're just trying
to shoehorn games into it.

290
00:17:48.670 --> 00:17:50.220
Or do you think that
we've got where we Need

291
00:17:50.220 --> 00:17:53.190
to go? As far as
the libraries at JavaScript in

292
00:17:53.190 --> 00:17:55.680
the browser are exposing that
it is time to make

293
00:17:56.010 --> 00:17:59.600
an HTML five gaming platter.
I definitely think it's ready.

294
00:17:59.990 --> 00:18:02.570
I don't know that the
tooling and the libraries are,

295
00:18:02.570 --> 00:18:06.740
have caught up yet, but
it takes games like contour

296
00:18:06.740 --> 00:18:11.840
and other creative technologists to
put, push out games of

297
00:18:11.840 --> 00:18:14.660
this quality to convince people
that, yeah, this is a

298
00:18:14.660 --> 00:18:19.250
totally viable platform for making
highly immersive high fidelity games.

299
00:18:19.580 --> 00:18:25.070
And I, I think our
biggest struggle was not, I

300
00:18:25.070 --> 00:18:28.850
don't know that JavaScript in
the current state of the

301
00:18:28.850 --> 00:18:34.640
browsers are targeting games necessarily.
So the means of producing

302
00:18:34.640 --> 00:18:40.580
a game framework are, are,
you know, it's the wild

303
00:18:40.580 --> 00:18:42.680
wild West right now. No
one really knows the best

304
00:18:42.680 --> 00:18:44.420
way. And I think the
way that we came up

305
00:18:44.420 --> 00:18:46.940
with is pretty good. And
there's a lot of other

306
00:18:46.940 --> 00:18:50.990
people that are doing similar
things, but once the tools

307
00:18:50.990 --> 00:18:57.410
catch up and there's a
better guidance for structuring large

308
00:18:57.410 --> 00:19:00.410
complex games for the web,
I think you'll see a

309
00:19:00.410 --> 00:19:03.980
lot more games like this
come out. And did you

310
00:19:03.980 --> 00:19:06.620
do most of your work
in like sublime text? I

311
00:19:06.620 --> 00:19:08.450
mean, I watched some of
the tear down videos and

312
00:19:08.450 --> 00:19:10.220
it seemed like some people
were notepad and some people

313
00:19:10.220 --> 00:19:11.960
were in visual studio and
some people were in sublime

314
00:19:11.960 --> 00:19:14.120
text if you just kind
of use whatever you could

315
00:19:14.120 --> 00:19:18.380
find. Yeah. That was actually
nice because given the being

316
00:19:18.380 --> 00:19:23.510
that it was JavaScript in,
in web based, we did

317
00:19:23.510 --> 00:19:27.380
have a slew of, you
know, Microsoft technologies like TFS

318
00:19:27.380 --> 00:19:30.440
to manage our code and
things like that. But we,

319
00:19:31.190 --> 00:19:33.830
we had a team of
like three or four people

320
00:19:33.830 --> 00:19:36.320
and they were rolling in
and off as we needed

321
00:19:36.320 --> 00:19:41.570
different expertise ranging from pure
designer to, you know, performance

322
00:19:41.570 --> 00:19:47.750
level JavaScript expert in. So
everyone would have different hardware

323
00:19:47.750 --> 00:19:50.480
and some of us designers
use Macs and some people

324
00:19:50.480 --> 00:19:54.020
used windows and some people
like the type of had

325
00:19:54.020 --> 00:19:56.900
features in visual studio 2012,
and some of us were

326
00:19:56.900 --> 00:20:01.970
comfortable writing in sublime. So
it, it was interesting workflow,

327
00:20:01.970 --> 00:20:05.840
but we worked pretty efficiently
on all sorts of different

328
00:20:05.840 --> 00:20:08.930
platforms with all sorts of
different hardware. So it came

329
00:20:08.930 --> 00:20:14.030
out pretty well. The, the,
the, I was looking here

330
00:20:14.030 --> 00:20:16.880
on a website about box
two D and web workers

331
00:20:16.880 --> 00:20:20.180
and performance. And I realized
that if I understand correctly,

332
00:20:20.180 --> 00:20:23.780
you were asked or approached
by the internet Explorer team

333
00:20:24.260 --> 00:20:28.610
to do this work, but
is the goal to make

334
00:20:28.610 --> 00:20:31.820
internet Explorer look good? I
mean, it's kind of a

335
00:20:31.820 --> 00:20:34.760
tough question to ask, but
I mean, one could presume

336
00:20:34.760 --> 00:20:37.940
that they were taking a
risk. I mean, that it

337
00:20:37.940 --> 00:20:41.150
worked, that it would work
really great on it. So

338
00:20:41.150 --> 00:20:45.440
at no point, did anyone
ever say, Hey, we need

339
00:20:45.440 --> 00:20:48.960
to make this, make this
game look awesome. I even

340
00:20:48.970 --> 00:20:52.290
make the other browsers look
bad. That was never the

341
00:20:52.330 --> 00:20:55.930
theme of this. And that
was never the, the point

342
00:20:55.930 --> 00:21:00.250
of it. The point was
just to create a game

343
00:21:00.250 --> 00:21:02.620
that we think is cool
and it was happened to

344
00:21:02.620 --> 00:21:04.750
be sponsored by Microsoft. And
it just happens to run

345
00:21:04.750 --> 00:21:08.530
the best on their browser.
The other kind of goal

346
00:21:08.530 --> 00:21:15.460
there was there aren't many,
multitouch enabled HTML five games

347
00:21:15.550 --> 00:21:19.480
and Microsoft's positioned really well,
especially with internet Explorer, 10

348
00:21:19.870 --> 00:21:23.260
to show off multitouch in
a browser, especially with the

349
00:21:23.260 --> 00:21:25.810
new windows eight tablets that
are coming out. This seemed

350
00:21:25.810 --> 00:21:29.920
like a natural play for
that platform. So while we

351
00:21:29.920 --> 00:21:34.780
do handle touch events for
all browsers, it works really

352
00:21:34.780 --> 00:21:38.890
well. The touch is actually
hardware accelerated in internet Explorer,

353
00:21:38.890 --> 00:21:41.560
10. So if you run
the game on a windows,

354
00:21:41.560 --> 00:21:46.210
eight tablet, that's touch enabled.
It actually performs really, really

355
00:21:46.210 --> 00:21:48.780
well compared to some of
the other browsers. Okay. So

356
00:21:48.780 --> 00:21:51.540
that brings up some interesting
questions around kind of vendor

357
00:21:51.540 --> 00:21:54.390
specific things. I mean, for
the most part, you're writing

358
00:21:54.420 --> 00:21:57.510
regular JavaScript and regular CSS,
but were there a number

359
00:21:57.510 --> 00:21:59.550
of times where you had
to drop in and say,

360
00:22:00.000 --> 00:22:02.130
we're going to need to
use these vendor specific prefixes

361
00:22:02.130 --> 00:22:04.110
here, and we're going to
need to do this this

362
00:22:04.140 --> 00:22:07.050
custom? Well, I could touch
event is touch events, something

363
00:22:07.050 --> 00:22:10.260
that HTML five and JavaScript
specify, or is that a

364
00:22:10.260 --> 00:22:17.280
Microsoft specific extension? So, So
two questions are the vendor

365
00:22:17.340 --> 00:22:23.970
specific code or prefixes we,
we had, that was so

366
00:22:24.360 --> 00:22:27.810
when we talk about being
honest, that was the biggest

367
00:22:28.440 --> 00:22:31.260
pain in the ass. I
guess, of this whole project

368
00:22:31.260 --> 00:22:35.460
was we, we basically in
many places had to write

369
00:22:35.700 --> 00:22:38.100
five times the amount of
code that we would normally

370
00:22:38.100 --> 00:22:41.250
have to write because there
was, you know, it's not

371
00:22:41.250 --> 00:22:43.470
that the code was all
that different. It was just

372
00:22:43.470 --> 00:22:45.990
that there was different vendor
prefixes that we had to

373
00:22:45.990 --> 00:22:50.850
satisfy. So dynamically transforming a
Dom element on the screen,

374
00:22:50.850 --> 00:22:54.600
let's say that I had
the right, the transform code

375
00:22:54.960 --> 00:22:57.840
three times or four times
to satisfy all the different

376
00:22:57.840 --> 00:23:01.500
browsers that said, because so
much of it was done

377
00:23:01.500 --> 00:23:06.150
in the canvas. The canvas
is pretty standard across all

378
00:23:06.150 --> 00:23:08.970
the browsers. And so when
you tell a rectangle go

379
00:23:08.970 --> 00:23:11.820
from zero to 50 points
and do it across the

380
00:23:11.820 --> 00:23:16.140
spline, it just works. And
it works really consistently across

381
00:23:16.620 --> 00:23:20.670
most of the browsers. So
that was good. That helped

382
00:23:20.670 --> 00:23:23.880
us kind of be consistent
with the browsers, the things

383
00:23:23.880 --> 00:23:26.400
that we split up and
did, and Dom and CSS,

384
00:23:26.760 --> 00:23:29.910
those were the things that
ended up being pretty verbose

385
00:23:30.330 --> 00:23:33.480
to satisfy all the conditions.
The other question I think

386
00:23:33.480 --> 00:23:40.140
you had was touch support,
specifically touches great. You know,

387
00:23:40.140 --> 00:23:43.560
I'm, I'm excited to see
more people take advantage of,

388
00:23:43.620 --> 00:23:47.030
of touch on, on as
more tablets come out and

389
00:23:47.390 --> 00:23:53.360
more browsers enable touch in
on those devices. But for

390
00:23:53.360 --> 00:23:57.890
us, there was we actually,
if you look at the

391
00:23:57.890 --> 00:24:01.430
developer tear down for the
game, we have a snippet

392
00:24:01.430 --> 00:24:03.680
in there that shows how
we kind of infer the

393
00:24:03.680 --> 00:24:07.670
platform and decide how we're
going to handle touch events.

394
00:24:08.300 --> 00:24:12.860
Each platform handles touch events
slightly different. So there was

395
00:24:12.860 --> 00:24:16.940
specific code for each browser.
What we have up there,

396
00:24:18.680 --> 00:24:21.470
I think is kind of
a nice way of hooking

397
00:24:21.470 --> 00:24:24.080
up events. If you're kind
of, if you're going to

398
00:24:24.080 --> 00:24:28.100
handle touch in your own
games, it'll certainly simplify, managing

399
00:24:28.100 --> 00:24:30.890
the various paths that the
touch events can go down.

400
00:24:31.820 --> 00:24:37.910
That said there wasn't a
huge advantage or disadvantage to

401
00:24:38.060 --> 00:24:41.510
handling raw touchpoints from any
platform. I think they're all

402
00:24:41.510 --> 00:24:45.530
about, about the same, no
platform did it better than

403
00:24:45.530 --> 00:24:50.630
others. Ms. Gesture is something
that's different. That's not what

404
00:24:50.630 --> 00:24:52.250
we used in the game,
but we have used it

405
00:24:52.940 --> 00:24:56.900
in other projects that library
is different than the way

406
00:24:56.900 --> 00:25:01.070
that other platforms handle gestures.
Now this is different than

407
00:25:01.070 --> 00:25:03.920
raw touch, but the actual
gesture. So the act of

408
00:25:04.160 --> 00:25:06.920
a two finger rotate or
a three finger swipe, something

409
00:25:06.920 --> 00:25:10.310
like that. Microsoft has some
really nice hooks in their

410
00:25:10.310 --> 00:25:14.150
own gesture, library, API that
I think personally, I think

411
00:25:14.150 --> 00:25:16.910
they, they work more intuitively
than some of the other

412
00:25:16.910 --> 00:25:21.970
platforms. What about things like
coffee script or TypeScript? Did

413
00:25:21.970 --> 00:25:24.400
you use any kind of
macro or expansion type things

414
00:25:24.400 --> 00:25:27.140
to try to get around
some of the, the, the

415
00:25:27.160 --> 00:25:30.850
not fun aspects of JavaScript
I had to do you

416
00:25:30.850 --> 00:25:34.480
have opinion on this? I've
been, I'm a, I'm a,

417
00:25:34.780 --> 00:25:38.140
I'm a creative guy and
I'm about as technical as

418
00:25:38.140 --> 00:25:41.590
a creative guy can get.
But I did write a

419
00:25:41.590 --> 00:25:44.320
lot of, a lot of
code for this, but mostly

420
00:25:44.320 --> 00:25:47.560
from a user experience standpoint
from a, how does this

421
00:25:47.560 --> 00:25:49.720
button feel when you touch
it? What are the animations

422
00:25:49.720 --> 00:25:52.780
doing? And when the, when
the menu slide open, all

423
00:25:52.780 --> 00:25:56.320
the animations are chained and,
you know, coordinated so that

424
00:25:56.320 --> 00:25:58.720
they kind of trickle onto
the page as opposed to

425
00:25:58.720 --> 00:26:01.450
just kind of literally showing
up and things like that.

426
00:26:01.450 --> 00:26:04.960
So, very much from a
front end perspective, do I

427
00:26:04.960 --> 00:26:06.940
spend my time, but there
are a lot of times

428
00:26:06.940 --> 00:26:10.480
where I have to get
into JavaScript to make the

429
00:26:10.480 --> 00:26:12.910
things work the way I
want them to work. And

430
00:26:13.660 --> 00:26:18.070
I'm not by any means
a JavaScript expert, if anything,

431
00:26:18.070 --> 00:26:20.260
I'm more confused by it
now than I was six

432
00:26:20.260 --> 00:26:24.460
months ago. And a lot
of guys, I know, kind

433
00:26:24.460 --> 00:26:27.310
of in the open source
space have been telling me

434
00:26:27.490 --> 00:26:29.470
to try out copy script.
And I know that there's

435
00:26:29.470 --> 00:26:33.100
a decent following of folks
that do copy script development.

436
00:26:34.210 --> 00:26:37.960
I've always been reluctant to
add an additional layer of

437
00:26:38.830 --> 00:26:42.340
anything on top of what
I thought already was fairly

438
00:26:42.340 --> 00:26:46.860
cumbersome to. So just recently
last week, maybe a week

439
00:26:46.860 --> 00:26:49.740
before that, I, I looked
into TypeScript after it was

440
00:26:49.740 --> 00:26:55.410
announced. And I was curious,
so I rewrote certain portions

441
00:26:55.410 --> 00:26:59.160
of kinda my own stuff
in, in TypeScript. And what

442
00:26:59.160 --> 00:27:01.590
happened was when I compiled
it and I looked at

443
00:27:01.590 --> 00:27:04.860
the code, it was like,
I instantaneously became a JavaScript

444
00:27:04.860 --> 00:27:09.600
master overnight without actually having
to write any advanced Java

445
00:27:09.600 --> 00:27:12.000
script. So it was great
for me because I know

446
00:27:12.000 --> 00:27:14.400
how to write object oriented
code. I, I, I've written

447
00:27:14.400 --> 00:27:16.800
a lot of C-sharp code
and I've written a lot

448
00:27:16.800 --> 00:27:19.110
of action script code, which
has a strong kind of

449
00:27:19.110 --> 00:27:22.590
inheritance and object model. And
when you're used to writing

450
00:27:22.590 --> 00:27:25.140
code like that, it makes
sense. But when you're writing

451
00:27:25.140 --> 00:27:27.750
JavaScript and you're hanging things
off a prototype and you're

452
00:27:27.870 --> 00:27:30.210
doing the object literal model
and things like that, it

453
00:27:30.210 --> 00:27:32.670
just gets confusing. And it's
just a simple thing. Like,

454
00:27:32.670 --> 00:27:34.500
well, how do I make
a Singleton and how do

455
00:27:34.500 --> 00:27:36.990
I access it? Or how
do I instantiate it? And

456
00:27:36.990 --> 00:27:38.760
those things throw me for
a loop all the time.

457
00:27:38.790 --> 00:27:40.530
And it may be that
our basic for a lot

458
00:27:40.530 --> 00:27:43.500
of developers, but for creative
guy like me, they throw

459
00:27:43.500 --> 00:27:46.620
me for a loop. And
so writing code, as I

460
00:27:46.620 --> 00:27:49.200
know how kind of in
the object oriented model in

461
00:27:49.200 --> 00:27:53.040
TypeScript and having compiled down
to well-written JavaScript, that was

462
00:27:53.040 --> 00:27:55.890
awesome. And if we would
have had that six months

463
00:27:55.890 --> 00:27:58.710
ago, when we started writing
contour, we probably would have

464
00:27:58.710 --> 00:28:03.020
wrote the whole thing in
TypeScript. Yeah. Interesting. Okay. When

465
00:28:03.020 --> 00:28:06.170
you were writing this, when
you're writing countries, you're, even

466
00:28:06.170 --> 00:28:08.510
though you're testing it on
all browsers, like I'm looking

467
00:28:08.510 --> 00:28:10.220
at it right now on
<inaudible> and then I've got

468
00:28:10.220 --> 00:28:12.080
an on another monitor. I've
also got it running in

469
00:28:12.080 --> 00:28:15.770
Chrome and it looks great
on both. Was there anything

470
00:28:15.890 --> 00:28:19.580
where you thought maybe you
were screwed, like you were

471
00:28:19.580 --> 00:28:22.220
60% done or 70% down
and you're like, Oh man,

472
00:28:22.460 --> 00:28:25.340
we just hit a limitation
in the browser or a

473
00:28:25.340 --> 00:28:28.310
limitation in JavaScript, or basically
you got stuck and you

474
00:28:28.310 --> 00:28:29.960
were afraid you're going to
have to go back and

475
00:28:29.960 --> 00:28:32.930
tell somebody that it was
over. I thought, I felt

476
00:28:32.930 --> 00:28:37.760
like that every single week,
I thought the project was

477
00:28:37.760 --> 00:28:41.660
going to have every single
week between kind of the,

478
00:28:41.960 --> 00:28:44.540
the level of detail. I,
it, the game started off

479
00:28:44.600 --> 00:28:47.240
when, when we first were
approached by Microsoft, it was,

480
00:28:47.660 --> 00:28:50.660
Hey, can you port a
few levels of Contra juror

481
00:28:50.690 --> 00:28:54.290
to Heidi 10? And we're
like, Oh, that's easy. And

482
00:28:54.290 --> 00:28:57.020
then it slowly evolved into
man. This thing's awesome. It'd

483
00:28:57.020 --> 00:29:00.200
be great if it worked
everywhere. Okay. Hey, what would

484
00:29:00.200 --> 00:29:02.780
it take to port every
single aspect of the iOS

485
00:29:02.780 --> 00:29:05.750
game exactly. As you see
it. And I need said,

486
00:29:06.200 --> 00:29:09.980
and then we had kind
of the added pressure from

487
00:29:09.980 --> 00:29:13.700
the game designer of just
hock eyeing, every single little

488
00:29:13.700 --> 00:29:17.360
detail in the game. And
that, you know, I was

489
00:29:17.360 --> 00:29:19.490
most worried that we weren't
going to be able to

490
00:29:19.550 --> 00:29:22.310
pull off the level of
quality that max was looking

491
00:29:22.310 --> 00:29:25.400
for along the way. And,
and he was pushing us

492
00:29:25.490 --> 00:29:28.700
and every path to make
sure that we replicated it

493
00:29:28.760 --> 00:29:31.430
exactly a hundred percent. And
I would be willing to

494
00:29:31.430 --> 00:29:33.200
guess that he would, even
to this day say it's

495
00:29:33.200 --> 00:29:37.100
not perfect, but it's very
close. The original question was

496
00:29:37.220 --> 00:29:39.110
how many, how many times
did you think that you

497
00:29:39.110 --> 00:29:41.200
were basically stuck and you
were like, yep, this is

498
00:29:41.200 --> 00:29:42.610
it. We got as far
as we could, this is

499
00:29:42.610 --> 00:29:44.740
as close as it's gonna
get. And now we're screwed

500
00:29:44.740 --> 00:29:47.890
and it's because of IIE
or it's because of JavaScript

501
00:29:47.890 --> 00:29:51.540
or whatever limitation. Well, we
were always worried about performance

502
00:29:51.540 --> 00:29:55.740
and JavaScript just because it's
JavaScript. And there's a lot

503
00:29:55.740 --> 00:29:58.200
of, not a lot, but
there's a handful of places

504
00:29:58.200 --> 00:30:01.890
in the iOS game that
were done with pixel shaders

505
00:30:01.890 --> 00:30:05.550
or just kind of open
GL like techniques that just

506
00:30:05.550 --> 00:30:09.600
don't exist in CSS or
JavaScript or the canvas. So

507
00:30:09.600 --> 00:30:13.440
we had to do our
best to kind of recreate

508
00:30:13.500 --> 00:30:16.950
visually what you saw, but
using very different means of

509
00:30:17.040 --> 00:30:20.730
producing that effect. And so
that was a huge pain

510
00:30:20.730 --> 00:30:23.130
point for us, not, not
pain point necessarily, but it

511
00:30:23.130 --> 00:30:25.680
was an area of the
game that we spent a

512
00:30:25.680 --> 00:30:28.170
lot of time trying to
figure out performance ways to

513
00:30:28.170 --> 00:30:33.270
pull off visually similar effects.
And I think at one

514
00:30:33.270 --> 00:30:36.360
point we had the ground,
which is actually fairly complex,

515
00:30:36.900 --> 00:30:39.180
the morphing of the ground
and the little shading around

516
00:30:39.180 --> 00:30:42.090
the ground to give it
some depth. That is the

517
00:30:42.090 --> 00:30:45.060
most complex part of this
whole game, because it's made

518
00:30:45.060 --> 00:30:48.450
up of, you know, anywhere
from 20 to 50 bodies

519
00:30:48.450 --> 00:30:53.940
in and joints inbox to
D and they handle touch

520
00:30:53.940 --> 00:30:57.000
and click input. And they
all react differently in a

521
00:30:57.570 --> 00:31:01.350
have little particles like graph
grass and ground particles that

522
00:31:01.350 --> 00:31:03.480
fall off it as you
move it, all those details,

523
00:31:03.690 --> 00:31:06.180
they're all connected to the
ground and the ground drives

524
00:31:07.920 --> 00:31:11.130
a large part of the
user experience. So when we

525
00:31:11.130 --> 00:31:13.830
got the ground working, I
think we got a whole

526
00:31:13.830 --> 00:31:16.920
10 frames per second. And
it was at that point

527
00:31:16.920 --> 00:31:18.870
in the game where we
were like, well, this may

528
00:31:18.870 --> 00:31:20.550
be a deal breaker, and
we might not be able

529
00:31:20.550 --> 00:31:24.360
to go any farther here.
And then somewhere along the

530
00:31:24.360 --> 00:31:25.980
line, I don't know who
did it, but someone here

531
00:31:25.980 --> 00:31:29.460
had the bright idea to
start breaking up the game

532
00:31:29.460 --> 00:31:33.360
into different canvases. So we
broke up the ground in

533
00:31:33.360 --> 00:31:36.810
each ground into its own
canvas that only got updated

534
00:31:37.050 --> 00:31:39.990
when you're interacting with it.
And the rest of the

535
00:31:39.990 --> 00:31:42.150
time, it would just kind
of sit there, idle same

536
00:31:42.150 --> 00:31:44.010
with the product is in
the background and same with

537
00:31:44.010 --> 00:31:46.980
the middle ground and the
character. So all those are

538
00:31:46.980 --> 00:31:49.710
different candidates over in any
given time, we have anywhere

539
00:31:49.710 --> 00:31:53.040
from six to 12 canvases
on the screen. And once

540
00:31:53.040 --> 00:31:58.350
we figured that out, we,
we got massive perf increases

541
00:31:58.380 --> 00:32:02.220
in all the browsers, but
actually specifically in IAE. And

542
00:32:02.250 --> 00:32:03.960
once we got that, it
was just a matter of

543
00:32:03.960 --> 00:32:06.570
honing it down to get,
you know, get exactly what

544
00:32:06.570 --> 00:32:08.490
we were looking for. So
that was once we got

545
00:32:08.490 --> 00:32:11.700
over that hump, it was
not smooth sailing, but it

546
00:32:11.700 --> 00:32:14.370
was a lot easier. We
were more confident at that

547
00:32:14.370 --> 00:32:16.740
point. Well, I would definitely
encourage people to check it

548
00:32:16.740 --> 00:32:19.410
out and not just play
it, but like spend time

549
00:32:19.410 --> 00:32:21.270
just kind of staring at
it. Like I'm sitting here

550
00:32:21.270 --> 00:32:26.100
on level two right now,
and there's, there's idle animations

551
00:32:26.100 --> 00:32:28.410
where the grass is moving
and you could, and I,

552
00:32:28.410 --> 00:32:30.570
and I'm thinking to myself,
okay, the grass is moving.

553
00:32:30.870 --> 00:32:33.450
And then suddenly it moves
like hard, like a, like

554
00:32:33.450 --> 00:32:35.520
a burst of wind shows
up. And then the grass

555
00:32:35.520 --> 00:32:40.640
really bends over totally random.
And then there's like this

556
00:32:42.290 --> 00:32:45.830
almost like burnt, you know,
burnt particles. Like there's these

557
00:32:45.830 --> 00:32:48.200
pieces of black that are
falling in the sky. And

558
00:32:48.200 --> 00:32:51.230
then if you push on
the ground at the bottom

559
00:32:51.230 --> 00:32:53.570
of one of these grounds,
then they kind of little

560
00:32:53.570 --> 00:32:56.690
particles just fall off of
it. And that's happening all

561
00:32:56.690 --> 00:32:59.750
at the same time while
there are, you know, these,

562
00:32:59.750 --> 00:33:01.400
these, I don't even know
how to describe what are

563
00:33:01.400 --> 00:33:03.290
the little blue things that
you're supposed to pick up

564
00:33:03.320 --> 00:33:07.760
these, the energy balls. They're
not just static energy balls.

565
00:33:07.790 --> 00:33:10.250
They're, they're moving in circles
and they're pulsing and they're

566
00:33:10.250 --> 00:33:13.550
transparent and they're, they have
a halo around them. It's

567
00:33:13.550 --> 00:33:17.050
just a, it's crazy. You
roll the guy over the

568
00:33:17.050 --> 00:33:21.190
grass Hill actually influence each
little blade of grass and

569
00:33:21.190 --> 00:33:23.110
it'll bend a little bit
as he rolls over it.

570
00:33:23.410 --> 00:33:25.570
Yeah. It actually works on
a mouse too. You've got

571
00:33:25.570 --> 00:33:27.210
T you've got touch and
you've got mouse. I mean,

572
00:33:27.210 --> 00:33:29.500
even as a mouse game,
it is really, really compelling.

573
00:33:30.130 --> 00:33:34.780
It's a good point too.
Cause we, we built different

574
00:33:34.780 --> 00:33:37.000
mechanisms to handle touch. This
game was never meant for

575
00:33:37.000 --> 00:33:39.640
touch. And it, we had
to kind of force it

576
00:33:39.640 --> 00:33:42.430
to be a touch game
or a sorry, a mouse

577
00:33:42.430 --> 00:33:45.310
game for mouse. And it
was always built for touch

578
00:33:45.640 --> 00:33:48.700
touch first. And so to
adapt it for mouse, we

579
00:33:48.700 --> 00:33:51.970
had that model, some of
the code and add little

580
00:33:51.970 --> 00:33:56.410
helpers there for the mouse.
But what's notable though is

581
00:33:56.410 --> 00:33:58.450
at the end of the
game. Well, once you get

582
00:33:58.450 --> 00:34:00.460
into the dark levels, some
of the visual start to

583
00:34:00.460 --> 00:34:04.060
get real interesting, but then
there's, I E specific levels.

584
00:34:04.060 --> 00:34:07.690
It doesn't mean that you
can't play these on other

585
00:34:07.690 --> 00:34:11.740
browsers. You have to play
them on a, multitouch a

586
00:34:11.750 --> 00:34:17.230
browser on a multi touch
device. But the level of

587
00:34:17.230 --> 00:34:19.930
sponsored by the I-Team they're
new levels, they're not in

588
00:34:19.930 --> 00:34:22.990
the iOS game and they
are kind of newly developed

589
00:34:23.260 --> 00:34:26.740
for this release. And once
you get to those levels,

590
00:34:27.700 --> 00:34:30.490
they're fairly difficult, but, and
you can only win them

591
00:34:30.490 --> 00:34:35.380
with, with multitouch, but they're
visually fairly, very stunning. And

592
00:34:36.100 --> 00:34:37.870
it was like a pleasure
to work on them and

593
00:34:37.930 --> 00:34:40.840
really bring those to life.
Well, that's great. Well, thanks

594
00:34:40.840 --> 00:34:43.660
so much. We're going to
put links to both clarity

595
00:34:43.690 --> 00:34:46.420
and countries. You are dot
I E in the show

596
00:34:46.420 --> 00:34:48.970
notes, and there's also some
videos and some YouTubes where

597
00:34:48.970 --> 00:34:51.700
you kind of discuss some
of these issues and do

598
00:34:51.700 --> 00:34:53.770
a little bit of a
developer tear down. Yeah. And

599
00:34:53.770 --> 00:34:56.320
we're going to be putting
up a series of kind

600
00:34:56.320 --> 00:35:00.190
of much more in depth
technical articles on our blog

601
00:35:00.190 --> 00:35:03.130
sites. So keep an eye
out for those maybe four

602
00:35:03.130 --> 00:35:05.140
or five of those over
the next couple of weeks.

603
00:35:05.740 --> 00:35:09.160
So, Cool. Well, thanks so
much, Eric. <inaudible> for sharing

604
00:35:09.340 --> 00:35:11.890
what your team did with
country as your, thank you

605
00:35:11.890 --> 00:35:14.680
for having me. This has
been another episode of Hanselminutes

606
00:35:14.680 --> 00:35:16.120
and we'll see you again
next week.

