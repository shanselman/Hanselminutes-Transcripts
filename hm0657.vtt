WEBVTT FILE

1
00:00:00.210 --> 00:00:07.890
Successful software starts@reagan.com. Raygun APM
provides.net application performance monitoring. Unlike

2
00:00:07.920 --> 00:00:11.460
anything you've experienced before, offering
greater clarity around how your

3
00:00:11.460 --> 00:00:13.980
software is performing for your
customers more than any other

4
00:00:13.980 --> 00:00:18.720
APM provider, easily detect and
diagnose issues impacting end users

5
00:00:18.960 --> 00:00:21.810
and monitor every part of
your stack. In one powerful

6
00:00:21.810 --> 00:00:25.890
solution, you can monitor unlimited
hosts, enjoy Richard trace data

7
00:00:25.890 --> 00:00:28.980
and call stack information and
unblock those hard to solve

8
00:00:28.980 --> 00:00:32.520
performance bottlenecks that affect your
web and mobile apps. It's

9
00:00:32.520 --> 00:00:34.890
time to get back to
building great software instead of

10
00:00:34.890 --> 00:00:38.040
fighting it. Start your journey
to better software quality and

11
00:00:38.040 --> 00:00:43.560
try Reagan free@raygun.com. That's R
a Y G U n.com

12
00:00:43.590 --> 00:00:59.700
today. Hi, this is Scott
Hanselman. This is another episode

13
00:00:59.700 --> 00:01:02.910
of Hansel minutes today. I'm
talking with Glenn Vanderburg, VP

14
00:01:02.910 --> 00:01:07.470
of engineering at first and
a pretty darn good public

15
00:01:07.470 --> 00:01:11.760
speaker. I really enjoyed your
talk on real software engineering.

16
00:01:12.540 --> 00:01:15.660
Thank you very much. I'm
always glad when people encounter

17
00:01:15.660 --> 00:01:18.690
that and, and enjoy watching
it, what does it feel

18
00:01:18.690 --> 00:01:21.420
like when you you've done
a bunch of talks? You've

19
00:01:21.510 --> 00:01:24.060
been speaking and writing and
talking about software for many,

20
00:01:24.060 --> 00:01:26.940
many years, but then you
do a talk and somehow

21
00:01:26.940 --> 00:01:29.280
it resonates more than the
others and it becomes your

22
00:01:29.280 --> 00:01:34.320
best talk. It feels great.
And a little bit intimidating.

23
00:01:34.410 --> 00:01:38.250
I mean, this, this talk
I've been giving it off

24
00:01:38.250 --> 00:01:41.790
and on for about eight
years, but even eight years

25
00:01:41.790 --> 00:01:44.310
ago, it was the product
of about 10 years of

26
00:01:44.670 --> 00:01:50.160
thinking and reading. And so
it kind of almost feels

27
00:01:50.160 --> 00:01:52.920
like that's the peak and
I'm not likely to ever

28
00:01:52.920 --> 00:01:56.700
hit that peak again, but
that's okay. If people are

29
00:01:56.700 --> 00:01:59.280
still asking you to give
one talk after eight years

30
00:01:59.500 --> 00:02:02.280
and asking you to give
it again and again, that's

31
00:02:02.280 --> 00:02:04.500
a good feeling. That is
a good feeling. It is

32
00:02:04.500 --> 00:02:06.690
good to hit a home
run. It does make you

33
00:02:06.690 --> 00:02:08.640
wonder if you'll ever hit
a home run again. It's

34
00:02:08.640 --> 00:02:11.460
like, no, no, you really
want this talk. Well, you

35
00:02:11.460 --> 00:02:15.000
talk about this one. We're
good with that. So you've

36
00:02:15.000 --> 00:02:18.480
given this talk many, many
times, probably a couple of

37
00:02:18.480 --> 00:02:21.300
dozen and you know, you'd
think it would get stale,

38
00:02:21.360 --> 00:02:24.390
but people like the talk
and it says something, the

39
00:02:24.390 --> 00:02:27.270
talk is called real software
engineering. You've done it as

40
00:02:27.270 --> 00:02:29.520
keynotes. You've done it several
times and there's videos of

41
00:02:29.520 --> 00:02:31.230
them online and I'll make
sure to put them in

42
00:02:31.230 --> 00:02:33.990
the show notes. What is
the essence of a real

43
00:02:33.990 --> 00:02:37.820
software engineering? The, the essence
of it is, you know,

44
00:02:37.830 --> 00:02:42.480
I, I studied software engineering
in college, in the eighties

45
00:02:42.540 --> 00:02:46.110
and started trying to apply
it at work in the

46
00:02:46.110 --> 00:02:49.230
nineties. And there was a
way it was all taught

47
00:02:49.230 --> 00:02:53.640
then. And, and something, we
were all aspiring to do

48
00:02:54.810 --> 00:02:58.350
to figure out the right
way to build software. And

49
00:02:59.920 --> 00:03:04.900
it Never quite felt right
to me. And something always

50
00:03:05.230 --> 00:03:08.800
seemed to be wrong with
that idea. And it took

51
00:03:08.800 --> 00:03:11.380
me, like I said, a
number of years to get

52
00:03:11.380 --> 00:03:14.710
to the bottom of it.
But the essence is that

53
00:03:15.760 --> 00:03:21.250
software engineering like any branch
of engineering really isn't that

54
00:03:21.250 --> 00:03:24.820
prescribed and regimented, there's not
just one way to do

55
00:03:24.820 --> 00:03:30.130
it. There are the, the,
the essence is finding the

56
00:03:30.130 --> 00:03:34.900
right balance of cost and
time to market and safety

57
00:03:34.900 --> 00:03:39.400
and robustness for the problem
at hand and figuring out

58
00:03:39.400 --> 00:03:43.400
the responsible way to build
it. What about the, the,

59
00:03:43.500 --> 00:03:46.170
the analogies that have been
used the extended analogies for

60
00:03:46.170 --> 00:03:49.050
many, many years about being
an engineer and building a

61
00:03:49.050 --> 00:03:53.640
house versus being an engineer
and building software. People have

62
00:03:53.640 --> 00:03:58.290
an idea about how building
houses is going to go.

63
00:03:58.290 --> 00:04:01.170
And the fact of the
matter is that we've been

64
00:04:01.170 --> 00:04:04.500
building houses for a long
time and across the realm

65
00:04:04.500 --> 00:04:08.670
of engineering. That's like one
of the best understood problems

66
00:04:08.670 --> 00:04:12.210
that we have even then,
though there are cost overruns

67
00:04:12.210 --> 00:04:16.680
often and things artist's stable,
as you might wish. It's

68
00:04:16.680 --> 00:04:20.970
not quite as predictable and
wrote, I guess, as people

69
00:04:20.970 --> 00:04:24.600
seem to think engineering always
is. And furthermore, when people

70
00:04:24.600 --> 00:04:27.690
think of engineering, they tend
to think of physical structures

71
00:04:27.690 --> 00:04:31.020
and civil engineering and bridges
and things like that. And

72
00:04:31.020 --> 00:04:33.090
that's where a lot of
the analogies come from, but

73
00:04:33.600 --> 00:04:36.240
there are a lot of
different kinds of engineering. And

74
00:04:36.240 --> 00:04:40.050
some of them are very,
very different from civil and

75
00:04:40.050 --> 00:04:44.550
structural engineering and a lot
more experimental and ad hoc

76
00:04:44.550 --> 00:04:48.870
like software is why We
continue to, to recreate the

77
00:04:48.870 --> 00:04:52.350
wheel in software engineering. And
there's whether it be extreme

78
00:04:52.350 --> 00:04:57.120
programming 20 years ago, or
peer pair programming or sprints

79
00:04:57.120 --> 00:04:59.460
or agile, like we're all
trying to figure this out.

80
00:04:59.700 --> 00:05:03.210
I am not a structural
engineer, but it doesn't feel

81
00:05:03.210 --> 00:05:05.760
from the outside as a
lay person that they're coming

82
00:05:05.760 --> 00:05:08.940
up with really revolutionary new
ways to put up walls

83
00:05:08.940 --> 00:05:13.320
and stuff. No, I think
there are several reasons for

84
00:05:13.320 --> 00:05:18.150
that. One is physical structures
have at most three dimensions.

85
00:05:18.210 --> 00:05:21.930
So you can depict that
in drawings, you might need

86
00:05:21.930 --> 00:05:25.140
a whole bunch of drawings
to describe different aspects of

87
00:05:25.380 --> 00:05:28.260
the thing, but you can
depict it in drawings and

88
00:05:28.260 --> 00:05:33.150
get really concrete, no pun
intended about what you're building

89
00:05:34.560 --> 00:05:41.400
software is abstract and any
program of any complexity has

90
00:05:41.970 --> 00:05:44.820
multiple dimensions and it's more
than three and I'm pretty

91
00:05:44.820 --> 00:05:48.030
sure the number is not
an integer. Software's kind of

92
00:05:48.030 --> 00:05:51.870
fractally complex. And it's hard
to visualize. It's hard to

93
00:05:51.870 --> 00:05:55.890
describe precisely. And a lot
of what we're doing comes

94
00:05:55.890 --> 00:06:01.520
from experimenting with ways of
communicating clearly both to other

95
00:06:01.520 --> 00:06:04.640
engineers, but also to the
machine, what it is we're

96
00:06:04.640 --> 00:06:08.920
building. Exactly That is really
thoughtful and gets. That is

97
00:06:08.920 --> 00:06:10.660
a way of thinking about
it that I had not

98
00:06:11.470 --> 00:06:15.670
done before we say. And
I have said that it's

99
00:06:15.730 --> 00:06:18.430
really about communication, like the
slapping, the keyboard part, and

100
00:06:18.430 --> 00:06:21.220
the four loop is really
secondary it's. Are you a

101
00:06:21.370 --> 00:06:25.090
effective communicator? That's kind of
what separates the, the mediocre

102
00:06:25.090 --> 00:06:27.730
developers from the, from the
good ones. But what you're

103
00:06:27.730 --> 00:06:30.490
describing is that at least
I can draw a picture

104
00:06:30.490 --> 00:06:34.120
and say, make it look
like that, but we're still

105
00:06:34.120 --> 00:06:36.340
trying to figure out the
right boxes and lines to

106
00:06:36.340 --> 00:06:40.660
describe the software even. Sure.
And because, and, you know,

107
00:06:40.660 --> 00:06:42.340
we, we spend a lot
of time. I talked about

108
00:06:42.400 --> 00:06:44.860
learning software engineering in the
eighties and nineties, and we

109
00:06:44.860 --> 00:06:50.740
spent a lot of time
investigating ways of depicting software

110
00:06:50.770 --> 00:06:54.850
in pictures. And none of
that has been very successful.

111
00:06:56.050 --> 00:06:59.410
And part of it is
the multidimensionality problem. And it

112
00:06:59.410 --> 00:07:04.000
turns out that the best
way we know to pursue

113
00:07:04.030 --> 00:07:09.850
really precisely described software is
in programming languages. And I

114
00:07:09.850 --> 00:07:13.300
think a lot of, you
know, it's, it's funny that

115
00:07:14.110 --> 00:07:19.630
this many years on we're
still inventing new programming languages

116
00:07:19.630 --> 00:07:22.750
almost as fast or faster
than people can reasonably learn

117
00:07:22.750 --> 00:07:25.390
them. And you would think
we would have figured out

118
00:07:25.390 --> 00:07:27.700
something, you know, and settled
on it by then. But

119
00:07:28.930 --> 00:07:31.990
I think a lot of
that is seeking ways to

120
00:07:31.990 --> 00:07:36.550
describe not only the precise
idea, but the intent behind

121
00:07:36.550 --> 00:07:40.720
it, of what software is
and how it works. Yeah,

122
00:07:40.750 --> 00:07:43.240
it is. All of this
is an expression of one's

123
00:07:43.240 --> 00:07:46.660
intent and whether it be
a picture's worth a thousand

124
00:07:46.660 --> 00:07:49.720
words, and we draw the
user interface and say, this

125
00:07:49.720 --> 00:07:52.840
should look like this. There's
never been a great way

126
00:07:52.840 --> 00:07:55.660
to express that. A thousand
words is a lot of

127
00:07:55.660 --> 00:07:59.770
words. Yeah. It's, it is
funny though, that the language

128
00:08:00.280 --> 00:08:03.940
does your, or do the
year, you know, is, is

129
00:08:03.940 --> 00:08:06.670
still happening. Like, and now
we ended up with the

130
00:08:06.670 --> 00:08:08.770
language that none of us
really deserve, but it's the

131
00:08:08.770 --> 00:08:11.440
language we have, which is
Java script. Like the least

132
00:08:11.440 --> 00:08:14.170
qualified language has become the
one that everything's expressed in.

133
00:08:16.230 --> 00:08:20.320
It was a moaning that
just earlier today, you know,

134
00:08:20.320 --> 00:08:22.840
you mentioned the picture is
worth a thousand words thing.

135
00:08:23.350 --> 00:08:26.350
I remember one conversation I
had that really crystallized some

136
00:08:26.350 --> 00:08:29.020
of the thoughts in real
software engineering for me was

137
00:08:29.410 --> 00:08:32.950
probably 13 or 14 years
ago. I was having lunch

138
00:08:32.950 --> 00:08:37.390
with Dave Thomas of the
pragmatic programmers. And I was

139
00:08:37.390 --> 00:08:41.560
wrestling with, you know, why
UML sucks so bad. And,

140
00:08:43.450 --> 00:08:45.880
and I said, you know,
it, it, the idea seems

141
00:08:45.880 --> 00:08:48.070
to make perfect sense. If
a picture is worth a

142
00:08:48.070 --> 00:08:51.910
thousand words, you know, why
does it turn out to

143
00:08:51.910 --> 00:08:55.210
not be too helpful to
draw pictures of our software?

144
00:08:56.060 --> 00:08:58.860
I mean, arguably it might
help you communicate some things

145
00:08:58.860 --> 00:09:01.170
about it, but it doesn't
seem to help help us

146
00:09:01.170 --> 00:09:06.540
think about it very well.
And he, in his wonderful

147
00:09:06.540 --> 00:09:10.350
way of piercing through, you
know, misconceptions, he immediately turned

148
00:09:10.350 --> 00:09:13.710
around and said, animals can
see pictures. Humans are creatures

149
00:09:13.710 --> 00:09:18.300
of language. And it just
sort of totally turned that

150
00:09:18.300 --> 00:09:21.240
picture is worth a thousand
words thing on its head

151
00:09:21.270 --> 00:09:25.230
to, well, you know, maybe
in some circumstances, but when

152
00:09:25.230 --> 00:09:28.500
you want to be precise
about complicated things, languages a

153
00:09:28.500 --> 00:09:30.950
lot more, That's a tough
one. That's a tough, I

154
00:09:30.950 --> 00:09:33.800
spent much of the nineties
doing UML diagrams as well.

155
00:09:33.800 --> 00:09:36.290
And whether you were switching.
And of course, for people

156
00:09:36.290 --> 00:09:38.150
who are maybe younger, who
are listening to the show,

157
00:09:38.510 --> 00:09:41.750
a UML is the unified
modeling language. It was basically

158
00:09:41.750 --> 00:09:43.460
the boxes and the lines
that they told us would

159
00:09:43.760 --> 00:09:46.940
solve all our problems. And
a lot of time, I

160
00:09:46.940 --> 00:09:49.610
just thought that, well, an
activity diagram or a use

161
00:09:49.610 --> 00:09:53.090
case diagram or a state
machine were just different lenses

162
00:09:53.090 --> 00:09:56.060
to look at the same
problem. But then once, once

163
00:09:56.060 --> 00:09:58.520
they became seven or eight
different diagrams, I felt like

164
00:09:58.520 --> 00:10:02.150
I kept repeating myself. Yes.
And none of them said

165
00:10:02.150 --> 00:10:05.150
what I needed to say.
Yeah. And, and really in

166
00:10:05.150 --> 00:10:07.100
order to get a full
view of the system and

167
00:10:07.100 --> 00:10:10.640
talk about it with any
degree of ease, you needed

168
00:10:10.640 --> 00:10:12.830
to be able to kind
of rapidly move between those

169
00:10:12.830 --> 00:10:16.280
different views of the system
and the tools all made

170
00:10:16.280 --> 00:10:19.550
that kind of complicated and
clumsy. There is an article

171
00:10:19.550 --> 00:10:22.310
that was written by in
the Atlantic and opinion piece.

172
00:10:22.370 --> 00:10:24.890
A number of years ago
that I thought was a

173
00:10:24.890 --> 00:10:28.130
little bit provocative. And it
said, programmers, stop calling yourself

174
00:10:28.190 --> 00:10:32.120
engineers because A screenshot of
that article in one of

175
00:10:32.120 --> 00:10:34.610
my talks, yeah. I felt
that was a little bit

176
00:10:34.610 --> 00:10:38.930
aggressive. And it said engineer
as an aspirational title in

177
00:10:38.930 --> 00:10:41.990
software development, it basically belittled
the entire engineer. And by

178
00:10:41.990 --> 00:10:47.270
us using it, it cheapened
technology. Yeah. I found that

179
00:10:47.270 --> 00:10:50.270
article really. I wish I
had read it, re rewrite

180
00:10:50.270 --> 00:10:52.430
it recently. And I had
it more on the top

181
00:10:52.430 --> 00:10:55.520
of my mind, but I
found that article frustrating because

182
00:10:55.520 --> 00:10:58.280
in some ways it got
so close to the truth.

183
00:10:58.280 --> 00:11:01.100
And in some ways it
was so far engineering is

184
00:11:01.100 --> 00:11:05.750
an aspirational title, even for,
you know, the traditional engineering

185
00:11:05.750 --> 00:11:10.730
fields. It's one of the
reasons I'm really passionate about

186
00:11:10.730 --> 00:11:14.870
using the word engineer and
kind of reclaiming that for

187
00:11:14.870 --> 00:11:19.070
software developers. I've had people
kind of ask me, you

188
00:11:19.070 --> 00:11:20.810
know, why does it matter
or are you just, you

189
00:11:20.810 --> 00:11:24.890
know, trying to, to gain
more respect or something like

190
00:11:24.890 --> 00:11:28.700
that. And no, it's that
using that name for yourself,

191
00:11:28.940 --> 00:11:35.000
carries with it, some expectations
about the seriousness with which

192
00:11:35.000 --> 00:11:38.030
you take your field and
the job you're doing and

193
00:11:38.330 --> 00:11:41.780
trying to have some rigor
around it and not be

194
00:11:41.780 --> 00:11:46.550
careless with people's money or
lives or data or whatever.

195
00:11:47.180 --> 00:11:51.500
So sure. Aspirational, that's fine.
But then, you know, in

196
00:11:51.500 --> 00:11:53.950
that article, when he, when
he talked it, he spent

197
00:11:53.950 --> 00:11:57.430
a lot of that article
talking about and comparing software

198
00:11:57.430 --> 00:12:01.660
development to other engineering disciplines.
And it was kind of

199
00:12:01.660 --> 00:12:04.120
funny because he made the
same mistakes that, that people

200
00:12:04.120 --> 00:12:09.130
always seem to do have
a only focusing on civil

201
00:12:09.130 --> 00:12:14.260
and structural engineering, large scale
physical objects, which is the

202
00:12:14.260 --> 00:12:17.200
most unlike it's the opposite
end of the spectrum of

203
00:12:17.200 --> 00:12:20.950
engineering from software development. And
also he made it seem

204
00:12:20.950 --> 00:12:25.780
a lot more predictable and
defined and prescribed than it

205
00:12:25.780 --> 00:12:29.410
actually is in the real
world. One of the wonderful

206
00:12:29.410 --> 00:12:32.230
things about giving this real
software engineering talk a couple

207
00:12:32.230 --> 00:12:35.290
of dozen times in different
places around the world is

208
00:12:35.290 --> 00:12:38.560
that every time I do
it, somebody comes up to

209
00:12:38.560 --> 00:12:41.650
me who is now a
software developer, but has a

210
00:12:41.650 --> 00:12:46.720
formal education in some branch
of engineering or another. And

211
00:12:47.440 --> 00:12:51.580
sometimes they have some challenges
for me and are able

212
00:12:51.580 --> 00:12:54.400
to correct me and help
me refine the message of

213
00:12:54.400 --> 00:12:58.120
the talk. But most often
what I hear is yes,

214
00:12:58.120 --> 00:13:02.650
you've got it exactly right.
Engineering. Isn't what non-engineers think

215
00:13:02.650 --> 00:13:06.910
it is. It's always more
creative and full of dead

216
00:13:06.910 --> 00:13:11.590
ends and blind alleys and,
and iterating through mistakes and

217
00:13:11.590 --> 00:13:16.500
trying to get better. Yeah,
that's true. It really is

218
00:13:16.500 --> 00:13:19.770
a way of thinking. I
always tease my parents when

219
00:13:19.770 --> 00:13:21.660
they call for tech support
and they say, you know,

220
00:13:21.720 --> 00:13:24.780
my mom literally emailed me
about the router earlier. She

221
00:13:24.780 --> 00:13:26.400
was like, you know, what
should I do? And I

222
00:13:26.400 --> 00:13:28.800
don't want to be flippant,
but I'm like, I don't

223
00:13:28.800 --> 00:13:31.470
know, man. I mean, unplug
it. Like, I'm just going

224
00:13:31.470 --> 00:13:35.040
to poke at the thing,
you know, and the idea

225
00:13:35.040 --> 00:13:37.110
that we somehow have the
answers and it, it is

226
00:13:37.110 --> 00:13:39.510
a structured, you know, sometimes
stuff happens and you got

227
00:13:39.510 --> 00:13:41.970
to unplug it and plug
it back in again. That's

228
00:13:41.970 --> 00:13:46.110
right. Why that concrete mix
is bad. Let's mix it

229
00:13:46.110 --> 00:13:49.650
again. For years, I had
this kind of, a bit

230
00:13:49.650 --> 00:13:51.990
of tension in my relationship
with my wife, where she

231
00:13:51.990 --> 00:13:54.420
would ask me how to
solve some problem on the

232
00:13:54.420 --> 00:13:57.330
computer with a program she
was using or something she

233
00:13:57.330 --> 00:14:00.030
was trying to do. And
she had some programming background

234
00:14:00.030 --> 00:14:05.160
as well. So she's not
the stereotypical tech support case,

235
00:14:05.160 --> 00:14:07.080
but she would say, how
do I do this? And

236
00:14:07.080 --> 00:14:08.970
I would say, you know,
well, scoot over and let

237
00:14:08.970 --> 00:14:13.230
me sit down and, and
well, no, don't do it

238
00:14:13.230 --> 00:14:16.050
for me. Show me how
to, or tell me how

239
00:14:16.050 --> 00:14:20.820
to do it. And then
I'll learn. And we, for

240
00:14:20.820 --> 00:14:23.550
years, we were frustrated with
each other about this until

241
00:14:23.550 --> 00:14:28.350
I finally understood myself well
enough to explain to her,

242
00:14:28.890 --> 00:14:32.370
I don't know how to
do anything on computers. I

243
00:14:32.370 --> 00:14:34.470
know how to figure out
how to do stuff on

244
00:14:34.470 --> 00:14:38.850
computers and that's, that's about
it. I, I generally don't

245
00:14:38.850 --> 00:14:41.520
know the answer to the
question you're asking me, but

246
00:14:41.520 --> 00:14:47.520
I have enough background knowledge
and good problem solving strategies

247
00:14:47.520 --> 00:14:49.110
to be able to sit
down and poke around in

248
00:14:49.110 --> 00:14:53.330
the menus and figure it
out. So, you know, that

249
00:14:53.330 --> 00:14:55.520
was kind of a real
turning point for us. And

250
00:14:55.550 --> 00:14:58.310
now she scoots over and
lets me sit down and

251
00:14:58.310 --> 00:15:00.500
figure it out. And then
I undo everything and has

252
00:15:00.500 --> 00:15:02.750
to have her sit down
until her explained to her

253
00:15:02.750 --> 00:15:04.370
what I did and how
to do it. And it

254
00:15:04.370 --> 00:15:06.490
works out. It's kind of
like, what's your password? I

255
00:15:06.490 --> 00:15:08.350
don't know. Let me touch
the keyboard on my fingers.

256
00:15:09.310 --> 00:15:14.110
Yes, exactly. This episode is
sponsored by Datadog a cloud

257
00:15:14.110 --> 00:15:18.880
monitoring platform built by engineers
for engineers, Datadog enables full

258
00:15:18.880 --> 00:15:23.140
stack observability for cloud infrastructure,
applications and logs. In one

259
00:15:23.140 --> 00:15:26.500
tightly integrated platform, you can
see across all your servers,

260
00:15:26.500 --> 00:15:30.550
containers, apps, and services in
one place to monitor performance

261
00:15:30.610 --> 00:15:34.090
and make data driven decisions
with a rich dashboards and

262
00:15:34.120 --> 00:15:38.290
algorithmic alerts, collaboration tools. Datadog
provides your team with the

263
00:15:38.290 --> 00:15:41.440
tools that they need to
quickly troubleshoot and optimize modern

264
00:15:41.440 --> 00:15:45.130
applications. See for yourself with
a free 14 day trial

265
00:15:45.280 --> 00:15:50.320
and receive a free Datadog.
T-shirt just go to bitly.com/data

266
00:15:50.320 --> 00:15:55.780
dog shirt to get started.
That's Bitly bit L y.com/data

267
00:15:55.840 --> 00:15:58.690
dog shirt. There was something
that you mentioned before we

268
00:15:58.690 --> 00:16:01.240
started recording. I wanted to
talk about which may be

269
00:16:01.240 --> 00:16:04.510
apply to that as you
move towards the, you improve

270
00:16:04.510 --> 00:16:08.980
your competence in something it's
the Dreyfus model of skill

271
00:16:08.980 --> 00:16:14.650
acquisition, which when looked at
it's four qualities, recollection recognition,

272
00:16:14.650 --> 00:16:17.710
decision awareness, and then each
of those qualities is binary.

273
00:16:17.980 --> 00:16:21.520
It smells like the engineers
equivalent of the Myers Briggs

274
00:16:22.750 --> 00:16:26.140
personal strengths. Yeah. Yeah. Do
do you mean in the

275
00:16:26.140 --> 00:16:29.150
sense of not really actually
being based on science and

276
00:16:29.500 --> 00:16:32.860
having any reality behind it,
or It appears to be

277
00:16:32.890 --> 00:16:36.310
like let's put together a
table and describe how one,

278
00:16:36.310 --> 00:16:38.800
you know, how a way
to think about things, whether

279
00:16:38.800 --> 00:16:44.710
it be Myers-Briggs or the
Dreyfus model or frankly astronomy,

280
00:16:45.130 --> 00:16:50.290
right. Or astrology rather, pardon
me? The Dreyfus model is

281
00:16:50.290 --> 00:16:53.890
something, another thing I learned
about from the programmatic programmers

282
00:16:55.240 --> 00:16:58.480
and I'm, I may be
completely butchering this in my

283
00:16:58.480 --> 00:17:02.590
memory, but my recollection is
that Andy Hunt's wife is

284
00:17:02.590 --> 00:17:07.030
a nurse or is in
the healthcare field. And so

285
00:17:07.090 --> 00:17:09.430
this came to his attention
and it's part of how

286
00:17:09.430 --> 00:17:16.600
nurses, how the nursing field
trains new nurses, and initially

287
00:17:16.990 --> 00:17:19.420
your sole job is to
learn to follow the rules.

288
00:17:19.750 --> 00:17:23.260
Yes, the rules are contextual
and they're complicated and there's

289
00:17:23.260 --> 00:17:27.310
all kinds of situations. But
as a, a beginning nurse,

290
00:17:27.760 --> 00:17:29.830
you don't think about that.
These are the rules, you

291
00:17:29.830 --> 00:17:31.480
do it this way. You
do it this way all

292
00:17:31.480 --> 00:17:35.440
the time. And as you
grow in competence and gain

293
00:17:35.440 --> 00:17:39.190
more experience, you reach a
point where you start to

294
00:17:39.190 --> 00:17:44.260
learn the reasons for the
rules and the rationale behind

295
00:17:44.260 --> 00:17:47.080
them. And start, can start
seeing some of the context

296
00:17:47.110 --> 00:17:51.780
that, that applies in those
reasons. And then the third

297
00:17:51.780 --> 00:17:56.100
stage is you start to,
you have enough understanding of

298
00:17:56.100 --> 00:18:01.470
the rationale and the context
context, and you learn when

299
00:18:01.470 --> 00:18:05.070
it's okay to break the
rules and go off script

300
00:18:05.070 --> 00:18:07.560
a little bit because the
situation calls for it and

301
00:18:07.560 --> 00:18:10.410
the rules don't apply here.
And then for the fourth

302
00:18:10.410 --> 00:18:17.070
stage of really expert experienced
nurses, you've internalized those things

303
00:18:17.070 --> 00:18:20.400
enough that you don't think
about the rules anymore. You

304
00:18:20.910 --> 00:18:25.140
act in the context that
a patient is and, and

305
00:18:25.140 --> 00:18:28.140
deal with their problems and
choose the right thing to

306
00:18:28.140 --> 00:18:32.490
do. Based on your experience,
Brian Merrick has written about

307
00:18:32.880 --> 00:18:36.870
these things a lot from
a similar perspective, his wife

308
00:18:36.870 --> 00:18:41.430
is a veterinarian and a
professor of veterinary medicine. And

309
00:18:42.360 --> 00:18:49.590
she talks about teaching students
to diagnose, you know, cows.

310
00:18:50.670 --> 00:18:54.150
And it's not something so
simple. You can put into

311
00:18:54.160 --> 00:18:58.740
a nice, neat decision tree
just takes a long period

312
00:18:58.740 --> 00:19:02.160
of apprenticeship where you walk
through. And well, this one

313
00:19:02.160 --> 00:19:04.380
looks great to me. Well,
no, you can tell it's

314
00:19:04.380 --> 00:19:06.360
sick because X, Y, and
Z, and then they come

315
00:19:06.360 --> 00:19:09.810
to the next one and
well, it's sick. No, it's

316
00:19:09.810 --> 00:19:12.030
not. Well, you said it
was sick if it was

317
00:19:12.030 --> 00:19:15.360
doing X, Y, and Z.
Well, well, yes, but this

318
00:19:15.360 --> 00:19:17.280
one's also doing a, B
and C, and that means

319
00:19:17.280 --> 00:19:22.560
it's perfectly fine. And you
just, you know, the complexities

320
00:19:22.560 --> 00:19:26.310
of a complex field with
a lot of different things

321
00:19:26.310 --> 00:19:30.830
to think about. I saw
a wonderful viral tweet that

322
00:19:30.830 --> 00:19:34.220
was talking about the show,
that TV show house, when

323
00:19:34.220 --> 00:19:36.650
the doctor always seems to
know what the problem is

324
00:19:36.650 --> 00:19:40.490
like, he's the Sherlock Holmes
of medicine. Right. You know,

325
00:19:40.490 --> 00:19:43.040
so someone comes in with
a rash and a fever

326
00:19:43.040 --> 00:19:44.440
and they're about to die
and they're, you know, they're

327
00:19:44.450 --> 00:19:47.990
going tachycardic and then houses
like, did you check his

328
00:19:47.990 --> 00:19:52.640
nose for raisins? And then
of course at the end,

329
00:19:52.640 --> 00:19:55.850
everyone's like, of course, Oh
God, the raisins. Yeah. Raisins

330
00:19:55.850 --> 00:19:59.060
have that's, that's exactly what
there's no, and there's nothing,

331
00:19:59.090 --> 00:20:01.670
no flowchart would ever have
potential to raisins in his

332
00:20:01.670 --> 00:20:03.980
nose, but that was it.
And that was the problem.

333
00:20:04.190 --> 00:20:05.840
And if you look at
the Dreyfus model, when it

334
00:20:05.840 --> 00:20:09.830
talks about decisions, as you
move from novice through competent

335
00:20:09.920 --> 00:20:13.460
to kind of proficient your
decision making process, as you

336
00:20:13.460 --> 00:20:17.480
point out, it goes from
analytical to intuitive, which as

337
00:20:17.480 --> 00:20:21.470
I am becoming a senior
programmer, and I say senior

338
00:20:21.470 --> 00:20:27.170
in the elder programmer way,
the term, I recently solved

339
00:20:27.170 --> 00:20:29.630
a problem at work. And
someone asked me, how could

340
00:20:29.630 --> 00:20:32.420
you have known that? And
the only answer I had

341
00:20:32.420 --> 00:20:39.860
was I'm old. Yes. I
mean, I don't know how

342
00:20:39.860 --> 00:20:42.290
you teach a 22 year
old about, you know, uni

343
00:20:42.290 --> 00:20:45.530
code and bit bitterness and
little Indian and you know,

344
00:20:45.620 --> 00:20:50.710
other than having been there.
Right. Exactly. I pretty early

345
00:20:50.710 --> 00:20:55.060
in my career, you know,
10 years in, I guess.

346
00:20:56.680 --> 00:21:00.250
So there's, there's the old
thing again, pretty 10 years

347
00:21:00.250 --> 00:21:02.740
seems it seems early in
my career to me, I

348
00:21:02.740 --> 00:21:09.250
started noticing myself making decisions
based on intuition and hunches.

349
00:21:10.030 --> 00:21:13.060
That felt really cool. But
as a member of a

350
00:21:13.060 --> 00:21:16.450
team, I didn't think I
could just get away with

351
00:21:16.450 --> 00:21:18.610
that all the time. Right.
You have to have some

352
00:21:18.610 --> 00:21:22.960
rationale and, and whether you're
justifying it to peers or

353
00:21:23.020 --> 00:21:26.650
explaining it to more junior
developers that you're trying to

354
00:21:26.650 --> 00:21:29.980
help them grow and learn
the things, you know, so

355
00:21:30.180 --> 00:21:32.410
I, I didn't always do
this, but I would kind

356
00:21:32.410 --> 00:21:36.580
of challenge myself to, okay,
you, you made this decision

357
00:21:36.580 --> 00:21:39.520
based on a hunch, but
that hunch had to come

358
00:21:39.520 --> 00:21:45.730
from somewhere. Your mind is
distilling your experiences in this

359
00:21:45.760 --> 00:21:49.420
sub cognitive way, but it's
still a product of your

360
00:21:49.420 --> 00:21:53.170
experience. And so I sort
of made this rough rule

361
00:21:53.170 --> 00:21:56.470
of thumb for myself that
I didn't get to go

362
00:21:56.470 --> 00:22:01.270
and advocate for one of
those hunch based decisions until

363
00:22:01.270 --> 00:22:06.370
I'd kind of delved in
and traced it and found

364
00:22:06.370 --> 00:22:11.020
a way to explain it
rationally. And that was a

365
00:22:11.020 --> 00:22:15.340
tremendously useful exercise for me.
And it helped the people

366
00:22:15.340 --> 00:22:17.600
around me too, but it
also helped me to, to

367
00:22:17.650 --> 00:22:21.580
kind of resurface some of
those older experiences and, and

368
00:22:21.610 --> 00:22:25.020
consciously think about how they
shaped my thinking. And I

369
00:22:25.020 --> 00:22:27.090
have found that having a
blog and having a blog

370
00:22:27.120 --> 00:22:30.000
for 15, 20 years has
been super useful because when

371
00:22:30.000 --> 00:22:33.960
something happens, I think to
myself, wow, okay, now I

372
00:22:33.960 --> 00:22:37.050
know that that's the thing,
right? I should probably write

373
00:22:37.050 --> 00:22:39.210
that down. So someone else
will know that that's the

374
00:22:39.210 --> 00:22:42.750
thing. And I recently had,
I spent about 16 hours

375
00:22:42.750 --> 00:22:48.720
debugging, a segmentation fault on
a raspberry PI. Yeah, exactly.

376
00:22:50.340 --> 00:22:53.220
Oh, it was lovely. 16
hours of my life. And

377
00:22:53.220 --> 00:22:56.430
it turned out that I
had been FTP binaries in

378
00:22:56.430 --> 00:22:59.100
ASCII mode and it was
swapping out the trend line.

379
00:22:59.790 --> 00:23:03.990
So you laugh, right. People
laughing at each other. And,

380
00:23:04.080 --> 00:23:05.730
and the thing that was
so ridiculous about that is

381
00:23:05.730 --> 00:23:07.560
when I started writing it
up, I was like, Oh,

382
00:23:07.560 --> 00:23:10.350
I should have seen that
20 minutes in, like, what

383
00:23:10.350 --> 00:23:12.810
was I doing? And then
when I wrote it up

384
00:23:13.230 --> 00:23:16.350
as, as with all good
blogs, the real quality is

385
00:23:16.350 --> 00:23:19.530
in the content of the
comments, the commenters was like,

386
00:23:19.590 --> 00:23:22.950
Oh, I knew it was
that within four sentences. Of

387
00:23:22.950 --> 00:23:26.040
course. Yeah. I could see
you crashing into the wall

388
00:23:26.040 --> 00:23:28.950
and I couldn't yell to
stop you, but it was

389
00:23:28.950 --> 00:23:33.900
fun to watch, but writing
that up and understanding that,

390
00:23:33.900 --> 00:23:36.000
and then sharing it and
making sure that people understand

391
00:23:36.000 --> 00:23:39.540
that failure and failing as
fast as you can, as

392
00:23:39.540 --> 00:23:41.730
often as you can. That's
really how you become a

393
00:23:41.730 --> 00:23:45.030
good Programmer. And it's, it's,
it's a big part of

394
00:23:45.050 --> 00:23:47.830
the essence of engineering as
well. It is, Isn't it,

395
00:23:47.920 --> 00:23:49.600
but it can, can it
be, and like, how do

396
00:23:49.600 --> 00:23:53.230
we not knock buildings down
accidentally, but we do allow

397
00:23:53.230 --> 00:23:57.280
software programs to fail. If
you're interested in what real

398
00:23:57.280 --> 00:24:01.720
engineering is like. And the
role of failure the book

399
00:24:01.720 --> 00:24:06.580
to start with is by
Henry Henry Petroski, professor of engineering

400
00:24:06.580 --> 00:24:11.470
at Duke university. I believe
he wrote a book many

401
00:24:11.470 --> 00:24:15.490
years ago, called to engineer
is human. And it's a

402
00:24:15.490 --> 00:24:18.940
book of essays about the
role of failure in engineering

403
00:24:18.940 --> 00:24:23.110
and design and in debates
about this kind of thing

404
00:24:23.110 --> 00:24:26.620
over the years, I've heard
many people say things like,

405
00:24:27.280 --> 00:24:32.110
yeah, real engineers have math,
so they can prove that

406
00:24:32.110 --> 00:24:36.430
their design won't fail. And
yet civil engineering designs fail

407
00:24:36.430 --> 00:24:40.120
every year to a greater
or lesser degree. And fortunately

408
00:24:40.120 --> 00:24:43.570
for everyone, most of the
failures are rather small scale

409
00:24:43.810 --> 00:24:48.190
and or they happen before
the structure is open or

410
00:24:48.580 --> 00:24:52.250
anything like that. But you
know, the bridge that, that

411
00:24:52.420 --> 00:24:57.310
collapsed in Italy earlier this
year, tremendous tragedy, the, the

412
00:24:57.310 --> 00:25:00.190
ultimate and, you know, the
full reports haven't come out

413
00:25:00.190 --> 00:25:03.160
yet and everything. So I'm
speculating based on what I

414
00:25:03.160 --> 00:25:07.180
read of other engineers speculating
about it. But the fundamental

415
00:25:07.180 --> 00:25:11.020
structural flaw in that bridge
was kind of around from

416
00:25:11.020 --> 00:25:15.400
the beginning. It was a
cable stayed bridge that used

417
00:25:15.430 --> 00:25:20.320
just one stay on each
side of the tower. So

418
00:25:20.320 --> 00:25:24.040
it was a single point
of failure. And it wasn't

419
00:25:24.040 --> 00:25:27.040
very resilient in the face
of any, any of the

420
00:25:27.040 --> 00:25:30.040
kinds of stresses that would
be applied to a bridge

421
00:25:30.040 --> 00:25:35.320
and engineers in all fields
are constantly trying to balance

422
00:25:35.410 --> 00:25:38.740
robustness and safety against costs
and trying to get their

423
00:25:38.740 --> 00:25:42.400
projects built and trying to
meet their customer's budgets and

424
00:25:43.000 --> 00:25:45.940
things like that. And there
are failures all the time,

425
00:25:46.630 --> 00:25:49.750
The, a that bridge, the
Miranda bridge was being made

426
00:25:49.750 --> 00:25:53.930
in 1967, which you would
think, why would it, it

427
00:25:53.950 --> 00:25:56.320
should have broken in the
last 50, 60 years, but

428
00:25:56.320 --> 00:25:58.870
then we have things like,
you know, SSL or, you

429
00:25:58.870 --> 00:26:00.730
know, that are being broken
where it's like, wow, I

430
00:26:00.730 --> 00:26:02.950
wrote that coat in the
late, late seventies. And now

431
00:26:02.950 --> 00:26:05.740
that broke, right? These things
do happen. It could run,

432
00:26:05.740 --> 00:26:09.910
it can be robust and
still, And you know, robust

433
00:26:09.970 --> 00:26:13.870
in. And here's the context
thing robust for most of

434
00:26:13.870 --> 00:26:16.330
the circumstances for which it
was designed. But then you

435
00:26:16.330 --> 00:26:21.910
take it outside of the
initial or original design center

436
00:26:22.030 --> 00:26:26.560
of that project and applied
different kinds of stresses to

437
00:26:26.560 --> 00:26:28.780
it. And all of a
sudden, it's, it's an a

438
00:26:28.780 --> 00:26:32.230
failure mode, You know, that
is, that kind of pops

439
00:26:32.230 --> 00:26:34.060
us all the way off
the, you know, pops off

440
00:26:34.060 --> 00:26:35.530
the stack all the way
back to the beginning where

441
00:26:35.530 --> 00:26:39.430
you talked about context. My,
my family asked me why

442
00:26:39.430 --> 00:26:42.460
they couldn't run windows seven
anymore. And I said, the

443
00:26:42.460 --> 00:26:44.700
internet is a different internet.
You know, like if you

444
00:26:44.700 --> 00:26:48.840
want to run it unplugged
air gap, please feel free.

445
00:26:48.840 --> 00:26:50.100
But if you want to
put it on the actual

446
00:26:50.100 --> 00:26:53.730
internet, I would encourage you
not to because the context

447
00:26:53.730 --> 00:26:57.690
of the entire planet and
everything has changed hardware, software,

448
00:26:57.840 --> 00:27:00.510
connectivity, it was hard to
explain that that things are

449
00:27:00.510 --> 00:27:04.520
different now. Yeah. Security engineering
is, is a particularly troublesome

450
00:27:04.520 --> 00:27:07.820
thing because it's always based
on what you think is

451
00:27:07.820 --> 00:27:11.480
hard. And people are always
finding ways to make things

452
00:27:11.480 --> 00:27:14.870
that used to be hard,
easy, and, you know, even

453
00:27:14.870 --> 00:27:17.990
something as simple as the
scripts that script kitties run,

454
00:27:17.990 --> 00:27:22.550
right. You and I are
old enough to remember when,

455
00:27:22.640 --> 00:27:26.000
you know, you think about
some of those crazy buffer,

456
00:27:26.000 --> 00:27:29.930
overrun attacks and, and having
to concoct just the right

457
00:27:30.110 --> 00:27:33.470
series of instructions to land
at just the right memory

458
00:27:33.470 --> 00:27:36.800
address. And think of how
many times you'd have to

459
00:27:36.800 --> 00:27:39.950
do that before you found
a computer where memory was

460
00:27:39.950 --> 00:27:43.700
laid out, just so, and
it's just, you know, nobody

461
00:27:43.700 --> 00:27:45.920
would bother to do that,
but then you wrap a

462
00:27:45.920 --> 00:27:48.020
script around it and automated
and figure out a way

463
00:27:48.020 --> 00:27:49.700
to test to see if
it worked right. And you

464
00:27:49.700 --> 00:27:52.240
can do it hundreds of
thousands of times. And now

465
00:27:52.240 --> 00:27:54.650
all of a sudden it
becomes easy. I recently saw

466
00:27:54.650 --> 00:27:59.120
something really interesting where someone
was doing fuzz testing on

467
00:27:59.240 --> 00:28:03.680
a FaceTime call and they
took over and crashed an

468
00:28:03.680 --> 00:28:07.190
iPhone simply by sending different
pixels down the wire. And

469
00:28:07.190 --> 00:28:10.850
it upset the FaceTime codec
and went all the way

470
00:28:10.850 --> 00:28:12.740
down to the beast in
the bowels of the beast

471
00:28:12.740 --> 00:28:15.980
itself. Wow. Who would even
think about that? If that's

472
00:28:15.980 --> 00:28:17.870
not real software engineering? I
don't know what it is.

473
00:28:19.190 --> 00:28:23.810
Yeah. As a particularly fiendish
kind, but yeah. Well, people

474
00:28:23.810 --> 00:28:27.200
can check out your talk
real software engineering. You point

475
00:28:27.200 --> 00:28:31.730
out on your website@vanderberg.org, that
there's a number of different

476
00:28:31.730 --> 00:28:34.670
versions and nicely enough, you've
listed them in order of

477
00:28:34.670 --> 00:28:39.320
your preference with the version
from a conference called software

478
00:28:39.350 --> 00:28:42.350
art thou as being your
favorite version of that. Yeah.

479
00:28:42.350 --> 00:28:47.210
That's a great little lecture
series put on by Zen

480
00:28:47.210 --> 00:28:51.290
desk in Melbourne Australia. They,
you know, periodically have a

481
00:28:51.290 --> 00:28:55.250
speaker in to do a
talk there in downtown Melbourne,

482
00:28:55.310 --> 00:28:57.860
and they were kind enough
to invite me and they

483
00:28:57.860 --> 00:29:00.830
had a good audio video
set up and it's by

484
00:29:00.830 --> 00:29:03.500
far the best version of
the talk. Fantastic. It's so

485
00:29:03.500 --> 00:29:06.410
nice when you do go
to a conference and they've

486
00:29:06.410 --> 00:29:08.750
set it up such that
they'll make the definitive version

487
00:29:08.750 --> 00:29:11.210
of that. It's almost like
a stand up comic getting

488
00:29:11.210 --> 00:29:13.820
the, the, the, the studio
album done, just so, so

489
00:29:13.820 --> 00:29:16.010
now we can put it
on Netflix. That's exactly it.

490
00:29:16.250 --> 00:29:18.950
Fantastic. Well, thank you so
much for chatting with me,

491
00:29:18.950 --> 00:29:21.860
Glenn Vanderburg. Thanks for having
me on this has been

492
00:29:21.860 --> 00:29:24.830
another episode of Hanselminutes and
we'll see you again next

493
00:29:24.830 --> 00:29:45.350
week. <inaudible>.

