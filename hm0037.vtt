WEBVTT FILE

1
00:00:10.160 --> 00:00:13.940
Oh man, Solomon it's dot
com. It's Hanselman. It's a

2
00:00:13.940 --> 00:00:17.780
weekly discussion with web developer
and technologist Scott Hanselman hosted

3
00:00:17.780 --> 00:00:22.250
by Carl Franklin. This is Lawrence Ryan
announcing show number 37 recorded

4
00:00:22.250 --> 00:00:27.860
Monday, October 16th, 2006. Support for Hansel
minutes is provided by COVID

5
00:00:27.860 --> 00:00:31.520
Smith tools, makers of code
Smith and extensible tip the

6
00:00:31.520 --> 00:00:36.380
base code generator for.net. Hanselman
is listeners. Get $100 off

7
00:00:36.380 --> 00:00:42.530
COVID Smith professional with coupon
code H M 100. online@covidsmithtools.com

8
00:00:43.580 --> 00:00:48.410
and buy slash N software
makers of RSS bus letting

9
00:00:48.410 --> 00:00:53.000
you easily create RSS feeds
from databases, spreadsheets, emails, and

10
00:00:53.000 --> 00:01:02.780
directories online@wwwdotrssbus.com. Support is also
provided by exceeds zip for.net,

11
00:01:03.110 --> 00:01:06.530
which lets you handle zip
tar and jesus' files on

12
00:01:06.530 --> 00:01:11.480
FTP servers in streams in
memory and more. Now get

13
00:01:11.480 --> 00:01:14.930
20% off any exceed component
or suite just for listening

14
00:01:14.930 --> 00:01:20.110
to Hansel minutes, go to
shrinks.com/fpt and use the code

15
00:01:20.210 --> 00:01:25.070
H M dash 20 dash
20. Support is also provided

16
00:01:25.070 --> 00:01:30.680
by.net developers journal. The world's
leading.net developer magazine online at

17
00:01:30.680 --> 00:01:35.840
www dot <inaudible> dot com.
In this episode has got

18
00:01:35.840 --> 00:01:45.590
interviews of one and only
Scott Guthrie. Hi, this is Scott

19
00:01:45.590 --> 00:01:47.870
Hanselman. We've got another interview
for you here on Hansel

20
00:01:47.870 --> 00:01:50.720
minutes where the podcast we
promise not to waste your

21
00:01:50.720 --> 00:01:53.690
time. And I'm sitting here
with Scott Guthrie. And what is

22
00:01:53.690 --> 00:01:57.910
your title now? It's group
all seeing eye. Yeah, I'm,

23
00:01:57.910 --> 00:02:00.560
I'm basically a general manager
in the developer division. So

24
00:02:00.560 --> 00:02:04.370
I basically run all of
our.net developer platform pieces. So

25
00:02:04.370 --> 00:02:10.790
like the CLR Avalon or
WPF asp.net, Atlas, windows forms,

26
00:02:11.420 --> 00:02:15.410
commerce server, I S done
it covered a few other

27
00:02:15.410 --> 00:02:17.510
things. So, so that's, that's
a lot of power and

28
00:02:17.510 --> 00:02:19.790
influence that includes yeah. The
developer experience and the base

29
00:02:19.790 --> 00:02:22.460
class library. Yes. Yeah. And
includes the developer experience, the

30
00:02:22.460 --> 00:02:26.400
base cost of library now.
So run the, the, of

31
00:02:26.400 --> 00:02:31.550
the visual studio tools, specifically
targeting development and client development.

32
00:02:31.880 --> 00:02:33.950
And you ran the ESPN
net team for a very

33
00:02:33.950 --> 00:02:35.840
long time. So I assume
you have a soft spot

34
00:02:35.840 --> 00:02:40.160
for asp.net amongst all of
your new properties. Sure. Yeah.

35
00:02:40.190 --> 00:02:44.240
Yeah. I, I kind of
helped start the ESPN team

36
00:02:44.240 --> 00:02:48.770
way back when, and, and
yeah. Ran a long time

37
00:02:48.770 --> 00:02:52.130
ago and yeah, so it's
still definitely a soft spot

38
00:02:52.130 --> 00:02:54.860
in my heart. So There
was some recent rebranding of

39
00:02:54.860 --> 00:02:58.790
the Atlas framework if the
branding is what now? Yeah.

40
00:02:58.790 --> 00:03:01.330
So we recently rebranded Alice.
Alice was kind of the

41
00:03:01.330 --> 00:03:05.140
code name for our Ajax
libraries and we basically are

42
00:03:05.140 --> 00:03:07.960
using two names for it.
One is the client side

43
00:03:07.960 --> 00:03:11.590
Java script library, which we're
calling the Microsoft Ajax library

44
00:03:11.890 --> 00:03:15.310
and that can be used
with any development platform out

45
00:03:15.310 --> 00:03:17.380
there to, you know, we
have samples on PHP and

46
00:03:17.380 --> 00:03:20.980
cold fusion and Java and
obviously asp.net. And then also

47
00:03:20.980 --> 00:03:23.830
there's a whole bunch of
server side infrastructure that provides

48
00:03:23.830 --> 00:03:26.260
kind of a nice clean
programming model to take advantage

49
00:03:26.260 --> 00:03:28.690
of it. And that we're
calling the ASP net Ajax

50
00:03:28.690 --> 00:03:31.890
extensions. Are you seeing a
lot of people decide to

51
00:03:31.890 --> 00:03:35.610
just take the JavaScript client
library and use that? Yes

52
00:03:35.610 --> 00:03:37.230
and no. I think what
we're seeing is we're certainly

53
00:03:37.230 --> 00:03:39.480
seeing a lot of people
use the clients that JavaScript

54
00:03:39.480 --> 00:03:45.630
library. And you typically, I
see with Ajax apps, people

55
00:03:45.630 --> 00:03:48.780
will typically do one of
two things. One is build

56
00:03:48.780 --> 00:03:51.390
what we kind of call
a server side Ajax approach

57
00:03:52.440 --> 00:03:54.840
or a client site, Ajax
approach and clients at Ajax

58
00:03:54.840 --> 00:03:57.150
approach makes, you know, it's
probably the easiest to explain

59
00:03:57.150 --> 00:03:59.340
and that's where you're running
lots of JavaScript on the

60
00:03:59.340 --> 00:04:03.030
client. And you're, you're typically
the locus of control for

61
00:04:03.030 --> 00:04:06.060
the application is on the
client, inside the browser. And

62
00:04:06.060 --> 00:04:09.210
so your, your, your navigation
logic and a lot of

63
00:04:09.870 --> 00:04:12.570
your interaction logic is client
side. And then we're seeing

64
00:04:12.570 --> 00:04:13.860
a lot of people do
what we call kind of

65
00:04:13.860 --> 00:04:18.300
server-side Ajax. And there you
are using Ajax to effectively

66
00:04:18.300 --> 00:04:21.450
transfer HTML back and forth
between the server and you

67
00:04:21.450 --> 00:04:25.470
still retain most of the
logic and most of the

68
00:04:25.470 --> 00:04:28.320
kind of navigation control on
the server and you're using

69
00:04:28.320 --> 00:04:31.710
Ajax to effectively have kind
of niftier effects. And with

70
00:04:32.100 --> 00:04:36.090
Atlas, we support both models.
And so people can just

71
00:04:36.090 --> 00:04:38.610
use a pure client side
approach, or what we're seeing

72
00:04:38.610 --> 00:04:40.920
is more people are actually
using the server side approach

73
00:04:41.610 --> 00:04:44.250
where they're, you know, they're,
they're effectively adding kind of

74
00:04:44.250 --> 00:04:47.340
smooth Ajax expects to their
app without having to write

75
00:04:47.340 --> 00:04:49.710
a lot of Java script
or rewrite their apps in

76
00:04:49.710 --> 00:04:52.020
a pretty substantial way. So
a lot of people have

77
00:04:52.020 --> 00:04:55.890
been talking about the update
panel and some, some people

78
00:04:55.890 --> 00:04:58.950
have said kind of disdainfully
that this is the cop-out

79
00:04:58.980 --> 00:05:01.380
version of Ajax in the
sense that you can take

80
00:05:01.380 --> 00:05:04.800
a site that's not Ajax
ified and Ajax defy it

81
00:05:05.010 --> 00:05:07.860
by just using this update
panel. And I think it

82
00:05:07.860 --> 00:05:10.200
was really nice the way
that you kind of juxtapose

83
00:05:10.200 --> 00:05:12.990
the client side Gmail style.
And I can a model

84
00:05:12.990 --> 00:05:15.180
view controller where the controller
is really on the, on

85
00:05:15.180 --> 00:05:17.330
the big penny and four
of the, of the user,

86
00:05:17.340 --> 00:05:19.500
the end user can get
that machine doing some work

87
00:05:19.980 --> 00:05:23.160
versus a service side, this
update panel, this, this is

88
00:05:23.160 --> 00:05:25.020
some kind of weird hybrid.
I mean, are we making

89
00:05:25.020 --> 00:05:27.570
Frankenstein's monsters when we build
these? Or is that just

90
00:05:27.570 --> 00:05:29.850
really a bridge? Is it
a gateway drug, you know,

91
00:05:29.910 --> 00:05:33.300
to get you started? Well,
do you have any panels?

92
00:05:33.300 --> 00:05:36.030
I think an example of
how you use kind of

93
00:05:36.030 --> 00:05:41.550
server-side Ajax we're, we're effectively,
you are, you know, your

94
00:05:41.550 --> 00:05:43.980
code is running on the
server in response to say

95
00:05:43.980 --> 00:05:47.100
a form submit or a
client site interaction. You're, you're

96
00:05:47.100 --> 00:05:48.970
going back to the server
and what your, what the

97
00:05:48.970 --> 00:05:51.570
uptick panel lets you do
is return the HTML for

98
00:05:51.570 --> 00:05:54.180
a region of a page.
So you're not returning the

99
00:05:54.180 --> 00:05:57.560
entire page. You're only returning
a small snippet of HTML

100
00:05:58.250 --> 00:06:00.980
encapsulate within that update panel
and then it handles updating

101
00:06:00.980 --> 00:06:02.720
it on the coin. And
so it lets you do

102
00:06:02.720 --> 00:06:06.890
animations and it lets you
provide progress bars and enables

103
00:06:06.890 --> 00:06:09.530
a much smoother, richer experience.
You could, for example, drop

104
00:06:09.530 --> 00:06:13.910
a grid view control inside
it and enable server-side paging,

105
00:06:14.780 --> 00:06:18.440
filtering, sorting, editing, deleting all
that stuff with Ajax and

106
00:06:18.440 --> 00:06:20.030
not have to write a
single line of Java script.

107
00:06:20.330 --> 00:06:22.790
And so it's, it's a
very compelling, easy way to

108
00:06:22.790 --> 00:06:26.300
get started with Ajax and,
you know, start enabling your

109
00:06:26.300 --> 00:06:30.290
site to have a smoother
experience without having to learn

110
00:06:30.290 --> 00:06:32.270
frankly many concepts at all.
And so it's certainly a

111
00:06:32.270 --> 00:06:35.210
great way to get started.
You can use it just

112
00:06:35.210 --> 00:06:38.270
by itself. It exposes client
side events. So if you

113
00:06:38.270 --> 00:06:41.450
want to go ahead and,
you know, do Richard transitions

114
00:06:41.450 --> 00:06:44.780
or Richard validation on the
client, you can certainly choose

115
00:06:44.780 --> 00:06:46.850
to do that. But what
we see is a heck

116
00:06:46.850 --> 00:06:48.590
of a lot of developers
say, look, I don't want

117
00:06:48.590 --> 00:06:51.560
to write 20,000 lines of
untight Java script. It doesn't

118
00:06:51.560 --> 00:06:54.980
perform well. There's lots of
different incompatibilities between browsers and

119
00:06:54.980 --> 00:06:57.350
I just don't want to
have to learn something radically

120
00:06:57.350 --> 00:07:00.380
new, you know, controls like
the update panel. And there's

121
00:07:00.380 --> 00:07:02.540
a host of other server
side controls that we shipped

122
00:07:02.540 --> 00:07:05.060
with Atlas or the Atlas
control toolkit. You know, it

123
00:07:05.060 --> 00:07:06.740
makes it brain dead easy
that if you want to,

124
00:07:06.950 --> 00:07:09.920
you know, add, pop up
controls or, you know, smoother

125
00:07:09.920 --> 00:07:14.360
animations or incremental refreshing on
your page, you can do

126
00:07:14.360 --> 00:07:16.720
it without having to learn
much. So like we do

127
00:07:16.720 --> 00:07:18.220
a lot of my company,
we do a lot of

128
00:07:18.220 --> 00:07:21.970
wizards, right? Where nothing on
the page, except maybe, you

129
00:07:21.970 --> 00:07:25.360
know, 400 pixels by 400
pixels in the middle where

130
00:07:25.360 --> 00:07:27.700
we've got a workflow control
and basically we're posting back

131
00:07:27.700 --> 00:07:30.370
and forth view state and
the entire page gets rendered.

132
00:07:30.370 --> 00:07:32.380
All the menuing structured, all
the ads, all that kind

133
00:07:32.380 --> 00:07:34.510
of stuff. If I put
an update panel on that,

134
00:07:34.780 --> 00:07:37.570
my, my, my controls that
do that work, they don't

135
00:07:37.570 --> 00:07:39.700
need to know that anything's
happened right there. They're being

136
00:07:39.700 --> 00:07:43.180
lied to very effectively. Right.
I mean, they're, they think

137
00:07:43.180 --> 00:07:45.970
they're going through the same
page life cycle Before. Yeah,

138
00:07:46.000 --> 00:07:49.180
correct. So, yeah, from a,
from a control perspective, it

139
00:07:49.180 --> 00:07:52.150
means that you can take
your existing, you know, if

140
00:07:52.150 --> 00:07:53.860
you have a wizard control
or you have your own

141
00:07:54.110 --> 00:07:56.650
panels that you're, you're building
kind of a workflow with,

142
00:07:57.310 --> 00:07:58.990
you don't need to rewrite
that you don't need to

143
00:07:59.260 --> 00:08:02.140
massively change it. And now
you can go ahead and

144
00:08:02.140 --> 00:08:05.620
effectively only refresh that portion
of the page that's changed

145
00:08:06.250 --> 00:08:08.110
and not have to rework
anything else on the site.

146
00:08:08.140 --> 00:08:10.900
And so, yeah, it's, it's
not necessarily, you know, if

147
00:08:10.900 --> 00:08:13.090
you want an experience like
Gmail or you want a

148
00:08:13.090 --> 00:08:16.990
really rich mashup that's, you
know, like Paige flakes, which

149
00:08:16.990 --> 00:08:20.170
is a great Atlas site
today, you know, you, you

150
00:08:20.170 --> 00:08:22.920
are going to end up
writing some Java script. You,

151
00:08:22.920 --> 00:08:24.940
you're not going to get
away from that, but for

152
00:08:25.170 --> 00:08:26.560
a heck of a lot
of apps and certainly a

153
00:08:26.560 --> 00:08:30.730
lot of line of business
apps, you know, using techniques

154
00:08:30.730 --> 00:08:32.650
like the update panel and
we have about 26 other

155
00:08:32.650 --> 00:08:35.800
controls in the Atlas control
toolkit. So if you want

156
00:08:35.800 --> 00:08:38.620
to do like nested dropdown
lists, where you during cascading,

157
00:08:38.890 --> 00:08:40.210
where, you know, you pick
one and you want to

158
00:08:40.210 --> 00:08:42.850
update the other, you know,
you can drop the cascading

159
00:08:43.340 --> 00:08:46.240
extender control on the page
point at to existing ESPN,

160
00:08:46.240 --> 00:08:49.390
a dropdown list controls pointed
a web service, and you

161
00:08:49.390 --> 00:08:51.340
don't have to write any
JavaScript to enable it. If

162
00:08:51.340 --> 00:08:54.160
you want collapsible panel support,
you know, it's built in.

163
00:08:54.460 --> 00:08:56.160
So those types of we're
just trying to make really

164
00:08:56.160 --> 00:08:59.730
easy, make it very approachable
and, you know, provide a

165
00:08:59.730 --> 00:09:03.060
way that you don't have
to be a JavaScript expert

166
00:09:03.060 --> 00:09:06.440
in order to actually build
a really cool Ajax. So

167
00:09:06.440 --> 00:09:08.030
you just touched on something
that I think is really

168
00:09:08.240 --> 00:09:11.120
not really well known is
this notion of extend controls.

169
00:09:11.120 --> 00:09:14.540
Now that's a different thing.
That's a different concept, right?

170
00:09:14.900 --> 00:09:17.990
That's not just Ajax proper.
That's something that extends existing

171
00:09:17.990 --> 00:09:21.110
controls. Yeah. The idea behind
an extend or control, it's

172
00:09:21.110 --> 00:09:25.550
something that isn't necessarily Ajax
specific or, or Atlas specific

173
00:09:25.550 --> 00:09:28.160
for that matter. But, but
we have found it very

174
00:09:28.160 --> 00:09:32.420
effective for adding Ajax UI
effects to a site. And

175
00:09:32.420 --> 00:09:34.760
the way it works is
basically you add this extend

176
00:09:34.760 --> 00:09:36.470
or control on a page.
And the pattern is you

177
00:09:36.470 --> 00:09:40.550
point out an existing control
and you're effectively saying, I

178
00:09:40.550 --> 00:09:43.280
want to add some capabilities
to it. So some examples

179
00:09:43.280 --> 00:09:45.740
would be an autocomplete extender.
And so you can drop

180
00:09:45.740 --> 00:09:47.960
this on the page. You
pointed out a text box

181
00:09:47.960 --> 00:09:49.640
and you say here's a
web service that as the

182
00:09:49.640 --> 00:09:51.440
person starts typing in the
text box, I want you

183
00:09:51.440 --> 00:09:55.220
to call, we have animation
extenders. So we point at

184
00:09:55.220 --> 00:09:57.920
saying update panel and say,
when a, when a call

185
00:09:57.920 --> 00:10:00.710
back goes back to the
server, go run this animation

186
00:10:00.710 --> 00:10:03.890
sequence in this location on
the page. So you can

187
00:10:03.890 --> 00:10:06.680
fade in or fade out
or wipes or dissolves or,

188
00:10:06.770 --> 00:10:10.930
you know, put a progress
thing up there. And, and

189
00:10:10.970 --> 00:10:12.290
it's, and it's a super
easy way. It's one of

190
00:10:12.290 --> 00:10:14.120
the things that we've done
with the Atlas control toolkit

191
00:10:14.450 --> 00:10:18.100
is provided a base class
called the control, extend your

192
00:10:18.110 --> 00:10:20.960
base class. And you can
subclass that. And, you know,

193
00:10:20.960 --> 00:10:23.720
typically within less than a
hundred lines of JavaScript and

194
00:10:23.720 --> 00:10:26.180
or VB or C sharp,
the right, the server control

195
00:10:26.180 --> 00:10:31.670
analogy, you can very easily
add a nice JavaScript. Cross-platform,

196
00:10:32.780 --> 00:10:35.480
you know, Ajax behavior that
you can then easily reuse

197
00:10:35.480 --> 00:10:38.330
across sites. And what the
Atlas control tool kit is,

198
00:10:38.510 --> 00:10:41.690
is it's an open source
project. It has Microsoft developers

199
00:10:41.690 --> 00:10:44.330
full time contributing code, but
any, you know, we have,

200
00:10:44.750 --> 00:10:48.530
it's now more developers outside.
Microsoft are contributing code to

201
00:10:48.530 --> 00:10:51.920
it than inside Microsoft, and
anyone can join. They can

202
00:10:51.920 --> 00:10:55.880
contribute their own code. And
we're basically building up a

203
00:10:55.880 --> 00:10:58.610
cool library of these types
of extend or controls. And

204
00:10:58.610 --> 00:11:02.930
so there's watermark extenders, there's
animation extenders. There's a collapsible

205
00:11:02.930 --> 00:11:07.010
panel, expandable panel extenders, there's
modal, pop-up extenders. You know,

206
00:11:07.010 --> 00:11:09.620
there's tons of tons of
cool stuff. And you know,

207
00:11:09.620 --> 00:11:12.500
the benefit from a developer
perspective is you add this

208
00:11:12.500 --> 00:11:16.640
into your toolbox and, you
know, you know, have, you

209
00:11:16.640 --> 00:11:19.250
know, 26 plus controls that
you can point to your

210
00:11:19.250 --> 00:11:22.130
existing apps with the code
you've already written. And go

211
00:11:22.130 --> 00:11:26.150
ahead and Ajax enable many
ways. Now the web 2.0

212
00:11:26.150 --> 00:11:28.970
is really brought up kind
of a design Renaissance. And

213
00:11:28.970 --> 00:11:30.800
a lot of people are
spending a lot more time

214
00:11:30.950 --> 00:11:34.100
looking at their markup, making
clean XHTML. And then we

215
00:11:34.100 --> 00:11:37.700
know that asp.net <inaudible> has
really great support for different

216
00:11:37.700 --> 00:11:39.920
kinds of rendering. You can
say use legacy rendering. You

217
00:11:39.920 --> 00:11:42.950
can say your vendor strict.
And I understand that some

218
00:11:42.950 --> 00:11:46.160
people weren't necessarily happy with
initially the CSS support, but

219
00:11:46.160 --> 00:11:48.320
you guys have released some
stuff now that makes doing

220
00:11:48.320 --> 00:11:51.350
really great CSS easier. And
that's as an add on,

221
00:11:51.350 --> 00:11:53.470
or what is this? No,
no, it's good. There's a,

222
00:11:53.470 --> 00:11:56.870
one of the things we
introduced To <inaudible> is a

223
00:11:57.220 --> 00:12:00.680
sensibility point. We call the
control adapters and it's, it's

224
00:12:00.690 --> 00:12:03.700
built into asp.net and it's
fairly fundamental to any control.

225
00:12:03.700 --> 00:12:05.770
And basically the way it
works is you can now

226
00:12:05.800 --> 00:12:08.710
plug in what we call
an adapter, which overrides the

227
00:12:08.710 --> 00:12:10.630
rendering of a control. And
it's not, it's not a

228
00:12:10.630 --> 00:12:12.970
hacky thing. It's not like
we're taking it the, and

229
00:12:12.970 --> 00:12:16.000
transforming it or doing XSLT
or anything like that. It's

230
00:12:16.000 --> 00:12:17.860
basically a way the control
just says, Oh, I'm going

231
00:12:17.860 --> 00:12:21.010
to render my tag or
my set of tags. And

232
00:12:21.010 --> 00:12:22.420
you can plug in and
say, Nope, I'm going to

233
00:12:22.420 --> 00:12:25.120
override it and provide this.
And you can very easily

234
00:12:25.120 --> 00:12:27.610
build these extenders. You can
register them as an assembly.

235
00:12:27.640 --> 00:12:30.070
You change a couple of,
you know, one line in

236
00:12:30.070 --> 00:12:32.950
your dot browser file for
either your machine or for

237
00:12:32.950 --> 00:12:36.610
your site. And now you've
changed the rendering. And so

238
00:12:36.800 --> 00:12:39.040
one of the things that
people have, you know, throughout

239
00:12:39.070 --> 00:12:41.500
the AskPat in this lifetime
have often complained about is,

240
00:12:41.830 --> 00:12:44.710
you know, I want more
control over the output. That's

241
00:12:44.710 --> 00:12:47.620
rendered from a control. And
we did do a lot

242
00:12:47.620 --> 00:12:49.180
of work in the assessment
to, to make sure we

243
00:12:49.180 --> 00:12:52.690
are, we do support XHTML
strict and XHTML transitional from

244
00:12:52.690 --> 00:12:54.910
all of the controls we
render. A lot of people

245
00:12:54.910 --> 00:12:56.830
say, you know what I
want, you know, I want

246
00:12:56.830 --> 00:13:00.430
the menu control the render
Liu elements instead of doing

247
00:13:00.430 --> 00:13:03.850
tables, I want, you know,
I want the grid or

248
00:13:03.850 --> 00:13:09.270
the data details, view control
to, you know, use THS

249
00:13:09.270 --> 00:13:11.980
in a slightly different way.
And so to help with

250
00:13:11.980 --> 00:13:13.840
that, we've been, we've released
something, we call the CSS

251
00:13:13.840 --> 00:13:17.470
control, adapter toolkit, and it's
basically a set of control

252
00:13:17.470 --> 00:13:19.600
adapters. I think there's like
15 or 16 of them

253
00:13:19.600 --> 00:13:22.690
in total. They cover all
the data controls and asp.net,

254
00:13:22.990 --> 00:13:25.330
all the navigation controls. So
like menu and tree view

255
00:13:25.330 --> 00:13:28.330
and things like that, as
well as a whole bunch

256
00:13:28.330 --> 00:13:31.120
of other common controls, logging
controls and things that we

257
00:13:31.120 --> 00:13:34.390
ship. And they basically provide
you a way without having

258
00:13:34.390 --> 00:13:37.540
to write any code. You
can get more CSS, friendly

259
00:13:37.540 --> 00:13:40.510
output from all those controls,
but more importantly, they ship

260
00:13:40.510 --> 00:13:43.120
with VB and C sharp
versions of it. So you

261
00:13:43.120 --> 00:13:46.150
can actually go in and
easily tweak the rendering. So

262
00:13:46.150 --> 00:13:48.940
if you want to further
override it, you can, and

263
00:13:48.940 --> 00:13:51.220
it provides a nice encapsulated
way to do it so

264
00:13:52.090 --> 00:13:55.030
that that's a free download
available today. And again, the

265
00:13:55.030 --> 00:13:58.240
full source code with Redis
and modification rights are provided.

266
00:13:58.240 --> 00:14:01.270
So if, if you really
care a lot about CSS

267
00:14:01.270 --> 00:14:03.700
and, and, and styling your
site in a nice way,

268
00:14:03.940 --> 00:14:06.520
definitely check that out. One
of these, you'll also see

269
00:14:06.520 --> 00:14:09.430
with the next release of
visual studio, which we're calling

270
00:14:09.560 --> 00:14:13.510
the orcas release is also
much richer CSS designer support

271
00:14:13.540 --> 00:14:16.300
built into the IDE. So
it'll make it even easier

272
00:14:16.300 --> 00:14:20.910
to build a really nice
CSS enabled sites. Now I'm

273
00:14:20.910 --> 00:14:24.570
with, with the Everett release
with 2003, we had a

274
00:14:24.570 --> 00:14:27.270
lot of trouble because in
the designer, because we were

275
00:14:27.270 --> 00:14:30.390
trying to do some tricky,
do it ourselves, master pages

276
00:14:30.390 --> 00:14:32.910
type of action. And it
seemed like the design view

277
00:14:32.910 --> 00:14:35.610
of the page went through
a life cycle as if

278
00:14:35.610 --> 00:14:38.160
it were kind of being
instantiated. So we had lots

279
00:14:38.160 --> 00:14:41.850
of checks, like if HTTP
context dot current isn't equal,

280
00:14:41.850 --> 00:14:46.020
no, as the designer surface
fundamentally changed, what is it

281
00:14:46.230 --> 00:14:48.090
that we used to begin
to get into situations where

282
00:14:48.090 --> 00:14:51.770
we couldn't get into design
mode anymore? Because some class

283
00:14:51.770 --> 00:14:54.650
in our hierarchy of pages
would throw an exception what's

284
00:14:54.650 --> 00:14:56.750
changed in the designer to
make it so much easier

285
00:14:56.750 --> 00:15:00.580
to have a good design
view. Yeah, well, we did

286
00:15:00.580 --> 00:15:03.130
a lot of work in
done at two O and

287
00:15:03.130 --> 00:15:07.120
VST thousand five on a
visual studio designer. So, you

288
00:15:07.120 --> 00:15:09.970
know, the big, the big
one that people always have

289
00:15:09.970 --> 00:15:13.090
complained about historically is visual
studio is mangling my HTML

290
00:15:13.090 --> 00:15:15.490
or reformatting issue. So it
no longer does that. It

291
00:15:15.490 --> 00:15:20.560
never changes your HTML format
for you. So that's, that's

292
00:15:20.560 --> 00:15:21.850
a big one. The other
thing that we did and

293
00:15:21.850 --> 00:15:26.230
did is we added a
lot of designer, the API

294
00:15:26.230 --> 00:15:29.230
support, so that as a
control developer, you can very

295
00:15:29.230 --> 00:15:31.810
easily go ahead and see
whether you're in design mode

296
00:15:31.810 --> 00:15:34.810
or not. And, and so
there's an API specifically to

297
00:15:34.810 --> 00:15:37.420
check on that. You can
go ahead and provide a

298
00:15:37.420 --> 00:15:41.950
much richer design editing experiences.
You can support kind of

299
00:15:41.950 --> 00:15:45.430
panel scenarios, where you have
content contained within another control

300
00:15:45.430 --> 00:15:47.950
and design view. You can
do watermarking. There's lots of

301
00:15:47.950 --> 00:15:50.710
much richer support. And then
obviously with PS 2005, we

302
00:15:50.710 --> 00:15:55.630
do have Wiziwig support for
master pages and themes. So,

303
00:15:55.690 --> 00:15:57.400
so that, you know, you
don't have to create your

304
00:15:57.400 --> 00:15:59.650
own controls in order to
enable kind of master page

305
00:15:59.650 --> 00:16:02.350
like scenarios. Pretty much sounds
like putting the developer in

306
00:16:02.350 --> 00:16:03.760
a control of their own
destiny is kind of a

307
00:16:03.760 --> 00:16:06.130
recurring theme. And there's a
bunch of guys at my

308
00:16:06.130 --> 00:16:10.510
work who look at other
JavaScript libraries like prototype Scriptaculous.

309
00:16:10.840 --> 00:16:13.030
It sounds like if I
wanted to use those with

310
00:16:13.030 --> 00:16:15.520
a site, whether I was
using Atlas or not, then

311
00:16:15.520 --> 00:16:18.670
maybe the CSS adapter set
would be what I would

312
00:16:18.670 --> 00:16:20.740
want to use. I could,
I mean, how would I

313
00:16:20.740 --> 00:16:24.340
integrate a third party Ajax
library without making anyone else

314
00:16:24.340 --> 00:16:27.490
upset within the, the, the
designer or the runtime, If

315
00:16:27.490 --> 00:16:30.480
you, if you want to
use, for example, a markup

316
00:16:30.480 --> 00:16:33.970
based ESS, and, and for
some reason, in your Ajax

317
00:16:33.970 --> 00:16:35.980
framework, you have a requirement
for that. You can certainly

318
00:16:35.980 --> 00:16:38.530
use the CSS adapters in
general. You know, there are

319
00:16:38.530 --> 00:16:41.200
people that are using prototype
and Scriptaculous without the CSS

320
00:16:41.200 --> 00:16:44.860
adapters, and that works perfectly
fine as well. One thing

321
00:16:44.860 --> 00:16:47.920
that we did have with
the CTP versions of Atlas

322
00:16:48.370 --> 00:16:51.910
that often made it hard
to integrate both a page

323
00:16:51.910 --> 00:16:56.920
that had, for example, dojo
or prototype prescriptive, Oculus, and

324
00:16:56.920 --> 00:16:59.740
Atlas, all working well together
in a single page is

325
00:16:59.740 --> 00:17:03.220
there were a number of
kind of helper functions with

326
00:17:03.220 --> 00:17:05.470
the same name and the
different libraries. And those would

327
00:17:05.470 --> 00:17:08.500
cause JavaScript conflicts. And of
course being JavaScript, you don't

328
00:17:08.500 --> 00:17:10.630
get compile time errors. You
just get weird runtime errors

329
00:17:10.630 --> 00:17:12.640
depending on the usage and
browser and things like that.

330
00:17:12.970 --> 00:17:14.830
One of the things that
we're doing with the Atlas

331
00:17:14.830 --> 00:17:21.190
release that's coming out shortly,
hopefully very shortly is we've

332
00:17:21.190 --> 00:17:23.890
actually, we've actually changed some
of the library names that

333
00:17:23.890 --> 00:17:29.890
conflicted. So specifically dollar sign
was something that was overloaded

334
00:17:29.890 --> 00:17:32.920
in a couple of different
JavaScript frameworks. And Atlas had

335
00:17:32.920 --> 00:17:35.500
one too. And those conflicted.
So we actually renamed the

336
00:17:35.500 --> 00:17:38.470
Atlas dollar signs specifically. So
you can have a page

337
00:17:38.470 --> 00:17:42.190
that imports the Atlas JavaScript
library, as well as import

338
00:17:42.190 --> 00:17:44.860
say, for example, the prototype
prescriptive Oculus library and the

339
00:17:44.860 --> 00:17:48.040
all work together on the
same page. So enabling that

340
00:17:48.040 --> 00:17:51.930
interrupt is definitely that we're
looking to enable, you know,

341
00:17:51.930 --> 00:17:54.690
Atlas today, you know, provides
what we think is sort

342
00:17:54.690 --> 00:18:00.150
of the super set of
the prototype Scriptaculous support if

343
00:18:00.150 --> 00:18:03.150
you had the control toolkit
with all the animation support.

344
00:18:03.540 --> 00:18:05.250
But yeah, we definitely want
to make sure that, you

345
00:18:05.250 --> 00:18:08.100
know, developers can use whichever
library, they feel works best

346
00:18:08.100 --> 00:18:11.010
for them and, you know,
have it worked great, Is

347
00:18:11.010 --> 00:18:13.340
it it's true that Atlas
is shipping in orcas as

348
00:18:13.340 --> 00:18:15.950
a first class part of
the, the whole environment right

349
00:18:15.950 --> 00:18:18.590
now, Atlas is a separate
download and an orcas. The

350
00:18:18.590 --> 00:18:20.510
next version of is your
studio. It's just, it's just

351
00:18:20.510 --> 00:18:24.470
there. Correct. So Atlas is
going to ship, we're going

352
00:18:24.470 --> 00:18:29.600
to ship a one O
supported version this winter. And,

353
00:18:30.020 --> 00:18:31.880
and so that will be
fully supported, meaning it's a

354
00:18:31.880 --> 00:18:35.060
10 year support lifetime, you
know, the standard Microsoft, you

355
00:18:35.060 --> 00:18:37.250
know, like if you're buying
windows, you get the same

356
00:18:37.250 --> 00:18:39.830
support agreement. And what that
means is that, you know,

357
00:18:39.860 --> 00:18:42.890
you can call up, you
know, midnight, if you have

358
00:18:42.890 --> 00:18:45.170
mission critical app and you
have a bug and you

359
00:18:45.170 --> 00:18:46.580
can get a support engineer
on the line, it's gonna

360
00:18:46.580 --> 00:18:48.500
help you to bug it.
And if you run into

361
00:18:48.500 --> 00:18:50.180
a bug and the product,
we can go ahead and

362
00:18:50.180 --> 00:18:53.630
release a fix for you
to go ahead and fix

363
00:18:53.630 --> 00:18:56.480
it. And so for, for,
for enterprise applications or for

364
00:18:56.480 --> 00:18:59.810
people that want that type
of mission, critical support, you

365
00:18:59.810 --> 00:19:01.430
know, the Atlas one, a
release coming out this year,

366
00:19:01.430 --> 00:19:03.170
we'll provide it. And that
works fine on needs to

367
00:19:03.170 --> 00:19:04.970
be done at two Oh
one with the S 2005.

368
00:19:05.300 --> 00:19:07.400
So it doesn't, it doesn't
require you to upgrade anything.

369
00:19:07.400 --> 00:19:09.200
You can go ahead and
take advantage of that immediately.

370
00:19:09.880 --> 00:19:11.720
And that's, that's a very
conscious decision we wanted to

371
00:19:11.720 --> 00:19:13.310
do is get that out.
You didn't get the support

372
00:19:13.310 --> 00:19:14.780
out as soon as possible.
Cause a lot of people

373
00:19:14.780 --> 00:19:17.300
have been waiting on that
in the orcas release, which

374
00:19:17.300 --> 00:19:19.910
is the next release of
both our visual studio tools,

375
00:19:19.910 --> 00:19:22.940
as well as kind of
our Dutton and framework. We

376
00:19:22.940 --> 00:19:25.670
are going to go ahead
and take the Atlas functionality

377
00:19:25.730 --> 00:19:28.820
and make it directly into
asp.net. So it's not a

378
00:19:28.820 --> 00:19:32.440
separate download. It'll just be,
you know, part of the,

379
00:19:32.440 --> 00:19:36.050
the standard Don and framework
install. And so, yeah, so,

380
00:19:36.050 --> 00:19:37.910
so there it's, it's, it's
not, it doesn't require you

381
00:19:37.910 --> 00:19:40.400
to install something separate and
obviously we'll have much richer

382
00:19:40.400 --> 00:19:44.390
tool support inside visual studio
to, you know, enable Intel

383
00:19:44.390 --> 00:19:47.920
sense and a much richer
designer support for doing Atlas

384
00:19:47.920 --> 00:19:50.960
style functionality. Are there any
other things that are separate

385
00:19:50.960 --> 00:19:53.330
downloads now that'll be baked
into orcas that we should

386
00:19:53.330 --> 00:19:55.440
know about A couple of
the other, a couple of

387
00:19:55.440 --> 00:19:58.490
other things that we're looking
at doing that, that we're

388
00:19:58.490 --> 00:20:02.240
kind of providing as a
separate downloads earlier so that

389
00:20:02.240 --> 00:20:04.670
people can take advantage of
them immediately. Well, you know,

390
00:20:04.670 --> 00:20:07.520
in general, we have quite
a few different, you know,

391
00:20:07.520 --> 00:20:11.510
kind of CTPs or sometimes,
you know, productized things that

392
00:20:11.510 --> 00:20:12.890
are, that are out there.
You know, one of the

393
00:20:12.890 --> 00:20:15.920
bigger ones that the, the
trauma CTP perspective that I

394
00:20:15.920 --> 00:20:18.050
definitely recommend people keep an
eye on and look at

395
00:20:18.050 --> 00:20:22.670
is link, which is our
new data access and query

396
00:20:23.030 --> 00:20:27.200
language integration. And that really
provides a way that from,

397
00:20:27.500 --> 00:20:29.690
you know, C-sharp or VB
or any dominant language that

398
00:20:29.690 --> 00:20:32.960
enables link, you know, data
access just gets radically simpler

399
00:20:33.320 --> 00:20:36.200
and you get sort of
a rich object, relational mapper

400
00:20:36.290 --> 00:20:41.660
style technology with great performance
with IntelliSense compilation, checking, debugging

401
00:20:41.660 --> 00:20:45.980
support, and can just from
a productivity perspective, really blow

402
00:20:45.980 --> 00:20:48.640
you away. And so we
have that CTP of that,

403
00:20:48.640 --> 00:20:51.370
that works on vs 2005
today, and that's going to

404
00:20:51.370 --> 00:20:56.180
be baked in directly into
orcas. And, you know, from

405
00:20:56.230 --> 00:20:58.090
my perspective, I actually think
I'm a big, I'm a

406
00:20:58.090 --> 00:20:59.500
huge link fan. And I
think it's actually going to

407
00:20:59.500 --> 00:21:03.640
be probably the biggest feature
in orcas, but there's lots

408
00:21:03.640 --> 00:21:05.270
of them, you know, Atlas
is going to be a

409
00:21:05.270 --> 00:21:07.270
huge one as well. And
obviously there's going to be

410
00:21:07.270 --> 00:21:09.780
tons of improvements in the
tools. Well, I really appreciate

411
00:21:09.780 --> 00:21:12.060
your taking time out of
your day to share this

412
00:21:12.060 --> 00:21:13.530
with our listeners. And I
hope to see you again.

413
00:21:13.800 --> 00:21:16.620
Yeah, thanks. Well, this has
been another episode of Hansel

414
00:21:16.620 --> 00:21:18.570
minutes. Thank you guys. I
hope we didn't waste your

415
00:21:18.570 --> 00:21:19.620
time. We'll see you next
week.

