WEBVTT FILE

1
00:00:12.330 --> 00:00:17.490
From Hansel minutes.com it's Hansel
minutes, a weekly discussion with

2
00:00:17.490 --> 00:00:21.630
web developer and technologists and
Scott Hanselman. This is Lawrence Ryan

3
00:00:21.630 --> 00:00:28.290
announcing show number two 47.
Recorded live Thursday, January 30th, 2010. Support

4
00:00:28.290 --> 00:00:31.680
for Hansel minutes is provided
by Tellerik rad control, the

5
00:00:31.680 --> 00:00:35.610
most comprehensive suite of components
for windows forms and asp.net

6
00:00:35.610 --> 00:00:44.370
web applications online@wwwdottelerik.com. In this
episode, Scott talks with John

7
00:00:44.370 --> 00:00:48.150
Wilger about going from agile
consultant to agile team member.

8
00:00:50.250 --> 00:00:52.440
Hi, this is Scott Hanselman
and this is another episode

9
00:00:52.440 --> 00:00:56.040
of Hansel minutes. And today
we have a studio guests

10
00:00:56.340 --> 00:00:59.790
and by studio guests. I
mean, my spare bedroom now

11
00:00:59.790 --> 00:01:01.140
has a person in it,
which is great. So we're

12
00:01:01.140 --> 00:01:03.180
doing a local show here
and I'm sitting with my

13
00:01:03.180 --> 00:01:05.970
friend, John Wilger, who has
been so kind as to

14
00:01:06.270 --> 00:01:08.790
join me on his vacation.
How's it going? Pretty good.

15
00:01:09.240 --> 00:01:12.060
Thanks for coming by. And
you may hear the ambient

16
00:01:12.060 --> 00:01:16.680
noises of two small children
upstairs beating their heads into

17
00:01:16.680 --> 00:01:20.280
the ground. So put up
with that, which was quieter

18
00:01:20.280 --> 00:01:22.860
than my four kids at
home. So, so it was

19
00:01:22.860 --> 00:01:26.790
a good choice that we
came here. So you were

20
00:01:26.790 --> 00:01:30.450
a consultant for a long
time and then came to

21
00:01:30.450 --> 00:01:32.610
work at the company that
you're at right now, which

22
00:01:32.610 --> 00:01:34.680
is a change from what
you were doing before. Talk

23
00:01:34.680 --> 00:01:37.050
to me about that. Right?
So the company I work

24
00:01:37.050 --> 00:01:41.670
for now is a renewable
funding and it was originally

25
00:01:41.670 --> 00:01:45.720
just project DX here in
Portland. And I started consulting

26
00:01:45.720 --> 00:01:51.810
with them in 2008 and
came on for a couple

27
00:01:51.810 --> 00:01:54.750
of reasons, basically to do
some agile coaching for a

28
00:01:54.750 --> 00:01:57.900
small team and also to
help lead some of the

29
00:01:57.900 --> 00:02:00.420
technology cause they were starting
to implement the site and

30
00:02:00.420 --> 00:02:04.440
rails really enjoyed the team
that I was working with

31
00:02:04.470 --> 00:02:07.920
there. They really kind of
got agile development really well,

32
00:02:08.760 --> 00:02:10.110
and they made me an
offer to come on as

33
00:02:10.110 --> 00:02:16.380
a full time employee, probably
about six months in and

34
00:02:17.190 --> 00:02:18.840
decided to take it. Cause
I really wanted to see

35
00:02:18.840 --> 00:02:20.490
where that team was going
to go. I wanted to

36
00:02:20.490 --> 00:02:23.610
stick around with it and
not too long after that,

37
00:02:24.270 --> 00:02:27.450
the company actually ended up
getting bought by renewable funding.

38
00:02:27.450 --> 00:02:30.630
Who's based out of California
and the guy that was

39
00:02:30.750 --> 00:02:33.540
running our team at the
time decided that he wanted

40
00:02:33.540 --> 00:02:35.940
to move on to something
else at that point. And

41
00:02:35.940 --> 00:02:38.490
I was given the opportunity
to actually manage the team.

42
00:02:39.570 --> 00:02:40.860
So that was a big
change for me, cause it

43
00:02:40.860 --> 00:02:44.100
was the first time for
me managing a software development

44
00:02:44.100 --> 00:02:47.070
team from kind of the
human resources perspective. So you

45
00:02:47.070 --> 00:02:49.920
were an agile coach, which
a lot of people kind

46
00:02:49.920 --> 00:02:51.960
of apply that, that, that
label. I want to understand

47
00:02:51.990 --> 00:02:55.050
like what an agile coach
does and which is a

48
00:02:55.050 --> 00:02:58.980
kind of management. And then
you've made this transition into

49
00:02:58.990 --> 00:03:02.490
a more kind of a
formal management Role, Right? I

50
00:03:02.490 --> 00:03:06.210
think as far as agile
coaching, the way I looked

51
00:03:06.210 --> 00:03:08.460
at it was, you know,
you have to have a

52
00:03:08.460 --> 00:03:11.460
group of people that are
interested in doing agile correctly.

53
00:03:13.140 --> 00:03:16.800
And then the job of
the coach is kind of

54
00:03:16.800 --> 00:03:18.750
to make sure, kind of
guide them along the way

55
00:03:18.750 --> 00:03:21.330
of making good decisions. It
took me a while to

56
00:03:21.330 --> 00:03:24.390
actually get good at doing
that. In fact, when I

57
00:03:24.390 --> 00:03:27.360
first moved to Portland, the
first job that I had

58
00:03:27.360 --> 00:03:30.150
here, I was brought in
specifically to help transition a

59
00:03:30.150 --> 00:03:35.730
team to an agile development
process had been practicing agile

60
00:03:35.730 --> 00:03:41.520
for several years at that
point, but had never really

61
00:03:41.550 --> 00:03:46.260
transitioned the team to it
and made the mistake and

62
00:03:46.260 --> 00:03:48.240
that team of kind of
coming in and just saying,

63
00:03:48.240 --> 00:03:50.670
okay, I've, you know, read
the books, been doing this

64
00:03:50.670 --> 00:03:53.520
for a while and here's
how we're going to do

65
00:03:53.520 --> 00:03:57.060
it. And let's go ahead
and change everything. And of

66
00:03:57.060 --> 00:03:59.820
course there was some resistance
on the team. You know,

67
00:03:59.820 --> 00:04:01.710
there were a couple of
developers that wanted to do

68
00:04:01.710 --> 00:04:04.080
it, but there were a
couple that weren't so sold

69
00:04:04.080 --> 00:04:06.840
on doing things that way.
And I think, you know,

70
00:04:06.840 --> 00:04:08.670
I didn't, I wasn't there
long enough to have a

71
00:04:08.670 --> 00:04:12.120
lot of trust with the
team at that point. So

72
00:04:12.120 --> 00:04:14.400
I changed things, say, okay,
we're going to do everything

73
00:04:14.400 --> 00:04:19.470
this way. And they didn't
work. Right. I mean, people

74
00:04:19.470 --> 00:04:21.540
resist, there were a couple
of places where it fell

75
00:04:21.540 --> 00:04:26.400
down and that company, you
know, that's probably one of

76
00:04:26.400 --> 00:04:28.650
the biggest mistakes in my
career really of doing it

77
00:04:28.650 --> 00:04:32.400
that way, because I think
I've forever ruined agile, that

78
00:04:32.400 --> 00:04:35.670
company with that move because
they kind of looked at

79
00:04:35.670 --> 00:04:37.950
it like, Oh, okay, yeah,
this agile development stuff, isn't

80
00:04:37.950 --> 00:04:39.870
really gonna work. Let's just
kind of go back to

81
00:04:39.870 --> 00:04:45.030
doing what we were doing
before. What I took from

82
00:04:45.030 --> 00:04:47.340
that is that it's more
important to kind of come

83
00:04:47.340 --> 00:04:50.070
into a position. And instead
of trying to change everything

84
00:04:50.070 --> 00:04:52.950
right away, you got to
kind of work with the

85
00:04:52.950 --> 00:04:56.730
people on the ground and
know what problems they're facing

86
00:04:57.120 --> 00:05:00.990
and just sit alongside them,
develop, do some pair programming,

87
00:05:00.990 --> 00:05:06.090
if you can, things like
that. And once you understand

88
00:05:06.090 --> 00:05:08.940
the problems that they're having,
you can kind of understand,

89
00:05:09.390 --> 00:05:12.630
okay, let's make a little
tweak here, you know, change

90
00:05:12.630 --> 00:05:15.990
this here and start to
move things towards an agile

91
00:05:15.990 --> 00:05:19.050
process, which is a little
bit different than I think

92
00:05:19.050 --> 00:05:21.870
a lot of agile consultants
want to do when they

93
00:05:21.870 --> 00:05:24.840
come into a place. There
are a lot of people

94
00:05:24.840 --> 00:05:27.630
that say, Oh, we need
to do full immersion. And

95
00:05:27.630 --> 00:05:32.100
that can work. I'm not
saying that it doesn't. But

96
00:05:32.100 --> 00:05:33.960
in my experience, I found
that I was a lot

97
00:05:33.960 --> 00:05:38.520
more effective coming in and
just kind of making small

98
00:05:38.520 --> 00:05:41.070
changes to kind of get
people to be more effective

99
00:05:41.490 --> 00:05:44.100
and be able to have
a more agile delivery process.

100
00:05:44.790 --> 00:05:48.750
One of my friends at
Microsoft named Brad Wilson, who

101
00:05:48.750 --> 00:05:50.730
is in the used to
be actually in a group

102
00:05:50.730 --> 00:05:52.890
called the patterns and practices
teams. Now he works on

103
00:05:52.890 --> 00:05:57.380
the asp.net web team always
use this term. Scrummerfall where

104
00:05:57.380 --> 00:06:01.370
he would find a group
that's doing waterfall for doing

105
00:06:01.370 --> 00:06:04.820
kind of classic big design
up front type development. And

106
00:06:04.820 --> 00:06:06.710
then they would start to
introduce agile and they would

107
00:06:06.710 --> 00:06:08.690
do it such a piecemeal
way. They would end up

108
00:06:08.690 --> 00:06:12.380
in this halfway place between
scrum and waterfall and they'd

109
00:06:12.380 --> 00:06:14.540
live in Scrummerfall. And they
think that they were agile,

110
00:06:14.990 --> 00:06:16.430
but it was all just
a big lie. And they

111
00:06:16.430 --> 00:06:20.870
were just doing iterations within
a larger waterfall. And when

112
00:06:20.870 --> 00:06:22.940
you said thinking about you
can come in and you

113
00:06:22.940 --> 00:06:26.360
can say, all right, everybody
stop what you're doing full

114
00:06:26.360 --> 00:06:28.580
immersion. Here's what we're going
to do. It's all agile

115
00:06:28.580 --> 00:06:31.760
all the time. Or you
can start tweaking and make

116
00:06:31.760 --> 00:06:34.850
tiny thing. And then hopefully
they wake up one moment

117
00:06:35.180 --> 00:06:36.530
and they go, Oh, wait
a second. We've been doing

118
00:06:36.530 --> 00:06:40.730
agile and we didn't even
realize it. Right. I think

119
00:06:40.730 --> 00:06:43.000
it, it, it certainly depends
on the team that you're

120
00:06:43.000 --> 00:06:46.690
working with too. Now, the
teams that I've done, you

121
00:06:46.690 --> 00:06:48.730
know, my kind of second
approach to it with have

122
00:06:48.730 --> 00:06:52.180
been smaller teams that I
think were more on board

123
00:06:52.180 --> 00:06:54.970
with at least wanting to
move towards an agile process

124
00:06:55.650 --> 00:06:58.960
and kind of buying the
philosophy, Meaning you didn't have

125
00:06:58.960 --> 00:07:01.270
to sneak it up on
them. I definitely didn't have

126
00:07:01.270 --> 00:07:06.070
to do that. In fact,
I wrote on my web

127
00:07:06.070 --> 00:07:09.550
blog recently, an article, you
know, what is agile really?

128
00:07:11.440 --> 00:07:14.860
And it's, I think the,
you know, agile with a

129
00:07:14.860 --> 00:07:16.870
big a is different than
agile with a little a

130
00:07:17.220 --> 00:07:18.850
and I tend to be
more of a proponent of

131
00:07:18.880 --> 00:07:22.180
the little, a agile. And
I said that there are

132
00:07:22.180 --> 00:07:24.490
basically two questions that you
can ask to see if

133
00:07:24.490 --> 00:07:27.400
a team is agile. One
of those is can you

134
00:07:27.400 --> 00:07:31.660
react immediately? And without panic,
if external constraints on your

135
00:07:31.720 --> 00:07:35.230
project change and the second
question being, do you review

136
00:07:35.230 --> 00:07:38.290
your process frequently and regularly
to make sure that the

137
00:07:38.290 --> 00:07:41.680
answer to the first question
is always yes. And that's

138
00:07:41.680 --> 00:07:45.370
really the essence of agile
to me now, the agile

139
00:07:45.780 --> 00:07:49.480
capital era kind of a
lower case, a agile, I

140
00:07:49.480 --> 00:07:52.360
mean, that's really what is
agility, but kind of the

141
00:07:52.360 --> 00:07:55.540
ability to react to things,
Right? That's almost a proper

142
00:07:55.540 --> 00:07:57.700
definition of agility and that
could even be applied to

143
00:07:57.700 --> 00:08:03.640
a person. Right? And so
certainly a lot of the

144
00:08:03.910 --> 00:08:09.550
agile with a big a
processes like scrum XP, any

145
00:08:09.550 --> 00:08:14.830
of those, they, they don't,
they're, they're not anti agile

146
00:08:14.830 --> 00:08:17.260
with a little a, but
I think that if somebody

147
00:08:18.310 --> 00:08:21.700
just kind of buys the
book and just does those

148
00:08:21.700 --> 00:08:25.900
things by the book without
really understanding the philosophies behind

149
00:08:25.900 --> 00:08:29.390
it, you're kind of doomed
to fail with it. It's

150
00:08:30.610 --> 00:08:34.060
really being agile is about
inspecting your process and regularly

151
00:08:34.060 --> 00:08:36.460
looking at it and making
the changes you need to

152
00:08:36.460 --> 00:08:40.960
make in order to be
more effective. So while I

153
00:08:40.960 --> 00:08:43.570
might start a team saying,
Hey, scrum is a pretty

154
00:08:43.570 --> 00:08:46.060
good place to start. You
know, we look at breaking

155
00:08:46.060 --> 00:08:49.090
up our work and developing
iterations and having kind of

156
00:08:49.090 --> 00:08:55.120
team ownership of everything that's
going on after several iterations,

157
00:08:55.440 --> 00:08:58.500
going through that process and
releasing and seeing what's wrong,

158
00:08:58.860 --> 00:09:01.110
you might end up with
something that doesn't look quite

159
00:09:01.110 --> 00:09:04.080
like scrum. You might have
a lot of it. You

160
00:09:04.080 --> 00:09:08.460
might change some of it
in particular on the project

161
00:09:08.460 --> 00:09:11.970
DX team. When I first
came on there, we were

162
00:09:11.970 --> 00:09:16.770
doing scrum an interesting way
of doing it though, is

163
00:09:16.770 --> 00:09:19.470
that we had basically in
our release cycle, we had

164
00:09:19.620 --> 00:09:23.130
two, three week development sprints.
And then it was followed

165
00:09:23.130 --> 00:09:26.430
by basically a two week
beta where we would go

166
00:09:26.430 --> 00:09:30.300
through and do QA. And
then two weeks of basically

167
00:09:30.330 --> 00:09:33.870
customer data where we'd actually
put it out to the

168
00:09:33.870 --> 00:09:35.610
people that were paying for
the product and let them

169
00:09:35.610 --> 00:09:38.040
kind of go through and
do this. So we ended

170
00:09:38.040 --> 00:09:40.620
up having a 10 week
release cycle, which really didn't

171
00:09:40.620 --> 00:09:44.460
work very well. And that
was the situation when I

172
00:09:44.460 --> 00:09:48.030
first came into the team,
the problem that we'd have

173
00:09:48.060 --> 00:09:52.350
is the reason we had
that release cycle was because

174
00:09:52.350 --> 00:09:55.530
kind of executive management talking
to the customers wanted to

175
00:09:55.530 --> 00:09:57.600
be able to say, Oh,
over the next 10 weeks,

176
00:09:57.600 --> 00:10:00.660
here's the list of things
we're going to deliver. And

177
00:10:01.020 --> 00:10:02.910
this is what it is.
Now, 10 weeks is certainly

178
00:10:02.910 --> 00:10:04.770
a lot shorter than you
get in a lot of

179
00:10:04.770 --> 00:10:08.550
people's release cycles. But the
problem was for us as

180
00:10:08.550 --> 00:10:13.530
a new startup business, the
market changed, or at least

181
00:10:13.530 --> 00:10:16.680
our perception of the market
changed more than once every

182
00:10:16.680 --> 00:10:20.940
10 weeks. So we would
react to that during that

183
00:10:20.940 --> 00:10:23.970
10 week cycle, you get
in, you'd have your plan.

184
00:10:23.970 --> 00:10:26.250
And then two weeks in,
Oh, sorry, we actually got

185
00:10:26.250 --> 00:10:29.220
to do this. And we
would make those adjustments and

186
00:10:29.220 --> 00:10:31.650
deliver things. So at the
end of 10 weeks, we

187
00:10:31.650 --> 00:10:35.070
would deliver something of value
and it would kind of

188
00:10:35.070 --> 00:10:37.860
match what our expectations of
what we needed to have

189
00:10:37.860 --> 00:10:41.310
at that moment where, but
then you'd have kind of

190
00:10:41.310 --> 00:10:44.280
executive management looking at the
list of things you said,

191
00:10:44.280 --> 00:10:46.710
you'd do it over that
10 weeks. And the list

192
00:10:46.710 --> 00:10:49.020
of things you did do,
and they wouldn't match up.

193
00:10:49.380 --> 00:10:51.510
And so there was a
question of, you know, Hey,

194
00:10:51.540 --> 00:10:53.220
why didn't you guys do
what you said you were

195
00:10:53.220 --> 00:10:55.890
going to do well, because
it didn't make sense to

196
00:10:55.890 --> 00:10:59.970
do that. It made sense
to do this. So still

197
00:10:59.970 --> 00:11:01.830
kind of, I was still
in my consulting role at

198
00:11:01.830 --> 00:11:05.130
that point, but we went
through and did some retrospectives

199
00:11:05.460 --> 00:11:07.050
at that point and looked
at it and said, you

200
00:11:07.050 --> 00:11:09.090
know, what, what really is
the purpose of that 10

201
00:11:09.090 --> 00:11:14.340
week cycle? And ended up
out of that, trying a

202
00:11:14.340 --> 00:11:18.740
Kanban process for awhile, And
then just spelled K a

203
00:11:18.740 --> 00:11:20.480
N B a N, just
for those of us who

204
00:11:20.480 --> 00:11:24.620
may not necessarily speak English
or listening to. Right. And

205
00:11:24.650 --> 00:11:30.320
that process largely does away
with the, the concept of

206
00:11:30.320 --> 00:11:34.280
fixed iterations. Yeah. I've got
a Kanban born for myself

207
00:11:34.280 --> 00:11:38.690
actually right here. Yeah. And
it's about mapping the value

208
00:11:38.690 --> 00:11:41.390
stream and kind of taking
one chunk of work and

209
00:11:41.390 --> 00:11:43.910
moving it through and making
sure, okay, done is done.

210
00:11:44.210 --> 00:11:46.940
You don't, you know, deliver
something in the first three

211
00:11:46.940 --> 00:11:49.850
weeks sprint and then wait
four weeks later to find

212
00:11:49.850 --> 00:11:52.700
out, Oh, there's some problems
with it in QA and

213
00:11:52.700 --> 00:11:54.490
then have kind of go
back and fix a whole

214
00:11:54.490 --> 00:11:57.160
bunch of bugs in two
weeks before you actually release

215
00:11:57.160 --> 00:12:01.210
something to production. And so
we tried that for awhile,

216
00:12:02.740 --> 00:12:06.160
worked pretty good in terms
of making sure that things

217
00:12:06.160 --> 00:12:08.410
kind of got out the
way they were supposed to

218
00:12:08.410 --> 00:12:12.250
with, you know, done is
done. But we found that

219
00:12:12.250 --> 00:12:16.000
it did kind of hamper
our predictability of, you know,

220
00:12:16.000 --> 00:12:18.700
well, what does the next
six months look like when

221
00:12:18.700 --> 00:12:20.350
we were only looking kind
of at one thing at

222
00:12:20.350 --> 00:12:25.540
a time ended up from
there, kind of going back

223
00:12:25.570 --> 00:12:29.710
to more of an iterative
planning cycle, but cut it

224
00:12:29.710 --> 00:12:31.990
down from a 10 week
release cycle to saying, well,

225
00:12:31.990 --> 00:12:35.050
we're going to release every
two weeks, no matter what,

226
00:12:36.190 --> 00:12:38.440
and we're gonna plan what
we can fit in there

227
00:12:38.500 --> 00:12:41.950
and whatever actually gets done
and accepted and is fully

228
00:12:41.950 --> 00:12:45.100
done, done makes it into
the release for that sprint.

229
00:12:46.380 --> 00:12:48.870
So when I've worked on
agile teams in the past,

230
00:12:48.900 --> 00:12:51.720
and we start to squeeze
that that 10 weeks or

231
00:12:51.720 --> 00:12:55.350
12 weeks or quarterly or
whatever, the standard releasing into

232
00:12:55.350 --> 00:12:58.170
that kind of ideal two
weeks in two weeks or

233
00:12:58.170 --> 00:13:00.090
three weeks, depending on the
size of the team, kind

234
00:13:00.090 --> 00:13:03.840
of consistently comes up as
the ideal. The number one

235
00:13:03.840 --> 00:13:06.180
thing that come that we
just started discussing or becomes

236
00:13:06.180 --> 00:13:09.900
an issue is of those,
you know, two weeks of

237
00:13:09.900 --> 00:13:13.620
that, that 10 days effectively
10 business days, how many

238
00:13:13.620 --> 00:13:17.340
days are our administrative overhead?
Like what processes are gonna

239
00:13:17.340 --> 00:13:19.770
cost us? Are we gonna
spend an entire day doing

240
00:13:19.860 --> 00:13:24.240
quote unquote, the build or,
or code signing or whatever,

241
00:13:24.240 --> 00:13:28.830
administrivia, that's not directly related
to delivering customer value, but

242
00:13:28.830 --> 00:13:31.710
it's still absolutely has to
be done. How did you

243
00:13:31.710 --> 00:13:34.140
do that? Did you, did
you assign a person in

244
00:13:34.140 --> 00:13:35.610
order to do that? Like
what we ended up doing

245
00:13:35.610 --> 00:13:37.530
in a, in a compiled
world, cause you're a Ruby

246
00:13:37.530 --> 00:13:39.690
person and I'm a dotnet
person. So we're going to

247
00:13:39.690 --> 00:13:42.030
static analysis, kind of where
we have a build and

248
00:13:42.030 --> 00:13:45.840
a build process. And there's
compiler is static analysis and

249
00:13:45.840 --> 00:13:49.080
stuff. We ended up having
a build engineer and we

250
00:13:49.080 --> 00:13:53.460
pushed a lot of the
agile administrivia, you know, onto

251
00:13:53.460 --> 00:13:56.010
that individual. W how does
it work? And I don't

252
00:13:56.010 --> 00:13:58.200
know, In a Ruby world,
so that that's actually been

253
00:13:58.200 --> 00:14:00.540
something that's been pretty interesting
for us over the last

254
00:14:00.840 --> 00:14:06.990
say, three months when we
started back onto the kind

255
00:14:06.990 --> 00:14:11.370
of release every two weeks
cycle for the first month

256
00:14:11.370 --> 00:14:13.350
and a half of that,
it was basically hell for

257
00:14:13.350 --> 00:14:19.500
me, because what was happening
was we'd have developers writing

258
00:14:19.500 --> 00:14:22.860
code on stories at the
time we use get for

259
00:14:22.860 --> 00:14:27.300
our source control. And at
the time everybody was just

260
00:14:27.450 --> 00:14:32.310
contributing basically directly to master.
And then what would happen

261
00:14:32.310 --> 00:14:34.410
is you'd get to kind
of the end of that

262
00:14:34.410 --> 00:14:37.410
two week cycle. You'd have
some of your stories that

263
00:14:37.410 --> 00:14:40.290
were QA and ready to
go, but not always, all

264
00:14:40.290 --> 00:14:43.830
of them got done. And
then I was sitting there,

265
00:14:43.860 --> 00:14:45.750
you know, the day before
we're supposed to go out

266
00:14:45.810 --> 00:14:49.500
and put the release candidate
out to our staging server

267
00:14:49.950 --> 00:14:52.730
and having to kind of
tease apart these commits and

268
00:14:52.730 --> 00:14:55.580
would be in merge hell
whenever I'd have to kind

269
00:14:55.580 --> 00:14:58.220
of pull some commits out
for stories that didn't make

270
00:14:58.220 --> 00:15:02.300
it in. And literally it
was pulling my hair out,

271
00:15:02.300 --> 00:15:04.910
staying till like eight o'clock
in the evening on that

272
00:15:05.600 --> 00:15:08.270
particular day, trying to deal
with merge, commits on code

273
00:15:08.270 --> 00:15:14.150
that I didn't write things
like that. So we basically

274
00:15:14.450 --> 00:15:19.820
instituted some changes with our
process there, where we now

275
00:15:19.880 --> 00:15:23.390
develop each story and its
own branch. We have a,

276
00:15:23.480 --> 00:15:28.010
a production branch in the
repository that always represents what's

277
00:15:28.010 --> 00:15:31.910
actually out in production. And
then once we do a

278
00:15:31.910 --> 00:15:35.750
production release, we make a
sprint branch that's based off

279
00:15:35.750 --> 00:15:39.860
of that. And then the
story branches are based off

280
00:15:39.860 --> 00:15:42.950
of the sprint branch. And
now when we go to

281
00:15:42.950 --> 00:15:47.750
acceptance with a particular feature,
that feature is pushed out

282
00:15:47.840 --> 00:15:51.320
on its own to our
development server for our QA

283
00:15:51.320 --> 00:15:54.140
folks and product owners to
look at and do acceptance.

284
00:15:54.470 --> 00:15:58.760
And then once it's accepted,
it gets merged entirely back

285
00:15:58.760 --> 00:16:02.390
into the sprint branch. And
then anybody else who's working

286
00:16:02.390 --> 00:16:06.320
on features for that release
will rebase that branch off

287
00:16:06.320 --> 00:16:08.900
of the sprint branch at
that time. So that way

288
00:16:09.110 --> 00:16:12.620
whatever's in the sprint is
always QA accepted, done has

289
00:16:12.620 --> 00:16:17.930
done work, and then everybody
else's branch is based off

290
00:16:17.930 --> 00:16:19.640
of that and they move
it in. So now when

291
00:16:19.640 --> 00:16:22.400
we go to do releases,
it's, you know, a five

292
00:16:22.400 --> 00:16:24.650
minute job for me to
actually put it together because

293
00:16:24.650 --> 00:16:27.470
it's basically okay, take the
sprint branch, merge it into

294
00:16:27.470 --> 00:16:32.950
production, push it to staging.
Hi, this is Scott coming

295
00:16:32.950 --> 00:16:35.380
to you from another place
in time. Are you using

296
00:16:35.380 --> 00:16:38.470
agile practices to manage your
software development? There's lots of

297
00:16:38.470 --> 00:16:40.330
tools in the market that
manage the steps of a

298
00:16:40.330 --> 00:16:43.780
project, but most of them
focus on individual roles, get

299
00:16:43.780 --> 00:16:45.790
ready for a solution that
caters for the success of

300
00:16:45.790 --> 00:16:49.420
the whole team guys at
Tellerik introduced team pulse. It's

301
00:16:49.420 --> 00:16:52.480
an agile project management tool.
That'll help you gather ideas,

302
00:16:52.660 --> 00:16:57.250
estimate plan, track progress in
a common workspace. Finally, companies,

303
00:16:57.250 --> 00:16:59.530
regardless of their size can
use a lightweight and convenient

304
00:16:59.530 --> 00:17:01.780
tool that makes all the
stakeholders work as a United

305
00:17:01.780 --> 00:17:06.010
team. Even if they're in
different countries by combining intuitive

306
00:17:06.010 --> 00:17:08.920
user interface and the power
server light team poles removes

307
00:17:08.920 --> 00:17:11.530
the roadblocks that you typically
face and applying agile in

308
00:17:11.530 --> 00:17:14.920
an effective manner, no more
lost data, no disparate systems,

309
00:17:15.550 --> 00:17:18.790
no lack of critical analytics
regarding the health and philosophy

310
00:17:18.790 --> 00:17:22.270
project. See if yourself get
a free copy for five

311
00:17:22.270 --> 00:17:28.750
users in one project at
tellerik.com/team pulse. And please do

312
00:17:28.750 --> 00:17:31.540
thank tolerance for supporting Hansel
minutes on their Facebook fan

313
00:17:31.540 --> 00:17:37.960
page, facebook.com/t L E R
I K Keller. We do

314
00:17:37.960 --> 00:17:39.850
appreciate it. There wouldn't be
a Hansel minutes. If there

315
00:17:39.850 --> 00:17:43.390
wasn't, Tellerik helping us, how
much overhead was involved in

316
00:17:43.390 --> 00:17:47.530
actually putting that together. Cause
sometimes, and I'm going, I'm

317
00:17:47.530 --> 00:17:49.620
not saying this is the
way to it. I'm just

318
00:17:49.620 --> 00:17:52.080
saying, this is the way
that it's happened on teams

319
00:17:52.080 --> 00:17:55.260
I've been involved is there's
sometimes a two weeks, you

320
00:17:55.260 --> 00:17:57.900
know, two week let's all
freak out and get that

321
00:17:57.900 --> 00:18:01.830
stuff done, sprint, like we're
not going to get any

322
00:18:01.830 --> 00:18:03.930
work done at all. We're
just going to learn, get,

323
00:18:04.080 --> 00:18:06.360
or we're going to learn
the new system or whatever.

324
00:18:06.360 --> 00:18:09.630
I mean, how are you
making these incremental changes? Like

325
00:18:09.660 --> 00:18:13.980
you just described how you
have production and then sprints

326
00:18:13.980 --> 00:18:17.220
and then stories. You didn't
just invent that like some

327
00:18:17.220 --> 00:18:19.800
Wednesday morning that, that, that,
that needed to be introduced

328
00:18:19.800 --> 00:18:22.380
and implemented and get everyone
on board and educate them

329
00:18:22.380 --> 00:18:25.230
and then make sure that
everyone does it. Because if,

330
00:18:25.230 --> 00:18:27.990
if that is a human
process that you described, I

331
00:18:27.990 --> 00:18:30.810
mean, the tool is great.
Certainly you could do that

332
00:18:30.810 --> 00:18:34.740
similarly in subversion or other
systems, but ultimately you needed

333
00:18:34.740 --> 00:18:37.860
to get everybody on board.
Was that a two week

334
00:18:37.860 --> 00:18:40.560
sprint to let people know
here's what we're going to

335
00:18:40.560 --> 00:18:44.810
do? Well, honestly, we kind
of had realized the problem

336
00:18:44.810 --> 00:18:46.760
was there for a while.
And my team members kind

337
00:18:46.760 --> 00:18:49.640
of saw me pulling my
hair out and, you know,

338
00:18:49.880 --> 00:18:52.910
occasionally going off on a
rant over a really bad

339
00:18:52.910 --> 00:18:57.050
merge commit, and I was
really stressed out, which wasn't

340
00:18:57.050 --> 00:18:58.820
good for me and it
wasn't good for the team.

341
00:19:00.710 --> 00:19:04.040
So we had essentially a
team meeting at one point

342
00:19:04.070 --> 00:19:07.190
and kind of sat down
and brainstormed how we could

343
00:19:07.190 --> 00:19:09.590
make this better. So everybody
was kind of involved in

344
00:19:09.590 --> 00:19:12.020
inventing the solution we were
going to do. And I

345
00:19:12.020 --> 00:19:14.720
have the advantage of being
on a relatively small team.

346
00:19:14.720 --> 00:19:16.850
There are about eight of
us now, I think on

347
00:19:16.850 --> 00:19:20.180
the development team. So we
didn't have a whole lot

348
00:19:20.180 --> 00:19:23.390
of problems with kind of
instituting that we basically said,

349
00:19:23.390 --> 00:19:27.260
okay, next sprint, we're going
to start doing this and

350
00:19:27.530 --> 00:19:30.170
just made the cut over.
Everybody was already comfortable with

351
00:19:30.170 --> 00:19:34.520
get and branching and merging
and things like that. So

352
00:19:34.790 --> 00:19:38.270
there wasn't a huge transition
for people at that point.

353
00:19:38.630 --> 00:19:40.730
Those are the size of
the team is Ellie. You

354
00:19:40.730 --> 00:19:42.920
said it was eight people.
If it was a hundred,

355
00:19:43.610 --> 00:19:45.200
If it was a hundred,
I would think that would

356
00:19:45.200 --> 00:19:50.660
be a lot more difficult
because of the number of

357
00:19:50.660 --> 00:19:52.940
lines of communication, really to
make sure everybody's on the

358
00:19:52.940 --> 00:19:57.320
same page with a small
team. And when you have

359
00:19:57.320 --> 00:20:00.080
a process that's driven by
the team and a self

360
00:20:00.080 --> 00:20:03.680
organizing team, and they're part
of inventing that solution. I

361
00:20:03.680 --> 00:20:05.810
think it's a lot easier
to get everybody on board

362
00:20:05.810 --> 00:20:08.900
with it. So even if
there are people that don't

363
00:20:09.050 --> 00:20:11.480
necessarily a hundred percent agree
that it's the way we

364
00:20:11.480 --> 00:20:13.280
should go. As long as
you kind of get the

365
00:20:13.280 --> 00:20:16.610
consensus of, well, you know,
I don't want a hundred

366
00:20:16.610 --> 00:20:18.470
percent agree, but I'm willing
to go along with what

367
00:20:18.470 --> 00:20:21.830
the team thinks and we'll
try this for awhile. It

368
00:20:21.830 --> 00:20:24.200
wasn't really that hard to
transition over to that system.

369
00:20:24.800 --> 00:20:26.720
You just brought up an
interesting term. I want you

370
00:20:26.720 --> 00:20:29.180
to dig into a little
bit, you said a self-organizing

371
00:20:29.180 --> 00:20:32.240
team. Talk to me more,
little bit more about what

372
00:20:32.240 --> 00:20:36.470
that means. So it's interesting
and something that I had

373
00:20:36.470 --> 00:20:39.950
to think about too, coming
on as manager of the,

374
00:20:39.950 --> 00:20:43.550
of the software development team
is what is kind of

375
00:20:43.550 --> 00:20:47.950
the manager's role on a
self-organizing team. You know, on

376
00:20:47.950 --> 00:20:50.140
a lot of teams, you
have the manager and you

377
00:20:50.140 --> 00:20:52.150
have the developers kind of
working under them. And the

378
00:20:52.150 --> 00:20:54.910
manager kind of sets all
of the process and how

379
00:20:54.910 --> 00:20:56.590
you're going to do things.
And maybe you'll get some

380
00:20:56.590 --> 00:20:59.260
input from the team, but
ultimately saying, well, this is

381
00:20:59.260 --> 00:21:01.780
the way we're going to
do it, handing it down.

382
00:21:03.400 --> 00:21:06.070
I purposefully viewed my role
as a manager a little

383
00:21:06.070 --> 00:21:09.790
bit differently and see it
as more of a facilitator,

384
00:21:09.970 --> 00:21:12.250
as far as the team
is concerned. In other words,

385
00:21:12.250 --> 00:21:15.490
I'm not any more important
or above anyone on the

386
00:21:15.490 --> 00:21:19.210
team equally important. And I
have a specific role to

387
00:21:19.210 --> 00:21:21.280
fill, which is to kind
of make sure that they

388
00:21:21.280 --> 00:21:24.130
don't have obstacles in their
way to development. They have

389
00:21:24.130 --> 00:21:26.830
the tools they need to
do their job. They have,

390
00:21:27.250 --> 00:21:29.890
you know, the purpose, they
have kind of the goal

391
00:21:29.890 --> 00:21:34.660
of what they're trying to
achieve. And other than that,

392
00:21:36.070 --> 00:21:40.390
I think the, the process
that's used for development and

393
00:21:40.390 --> 00:21:42.520
the way that they're going
to do the work, if

394
00:21:42.520 --> 00:21:47.650
you've hired reasonably good software
developers in the first place,

395
00:21:49.900 --> 00:21:52.480
you know, they're professionals, you
can trust them to kind

396
00:21:52.480 --> 00:21:55.300
of work together and figure
out what the best way

397
00:21:55.300 --> 00:21:58.390
is for them to do
their job. As long as

398
00:21:58.390 --> 00:22:01.390
they know what they're supposed
to be doing. You know,

399
00:22:01.750 --> 00:22:04.030
you can have that discussion
and work together and say,

400
00:22:04.030 --> 00:22:07.300
this is the process together
that we come up with

401
00:22:07.330 --> 00:22:09.190
and think will work the
best for us so that

402
00:22:09.190 --> 00:22:12.190
we can deliver this software,
you know, at high quality

403
00:22:12.190 --> 00:22:14.760
and in a reasonable amount
of time. So this might

404
00:22:14.760 --> 00:22:17.280
be a silly analogy, but
my mind always puts things

405
00:22:18.210 --> 00:22:20.430
as I'm learning, I'm trying
to absorb what you're saying.

406
00:22:20.430 --> 00:22:22.020
And then I put it
into an analogy that works

407
00:22:22.020 --> 00:22:23.430
for me. And I wonder
if you think this works

408
00:22:23.430 --> 00:22:26.490
for other people, but it's
kind of like, you know,

409
00:22:26.490 --> 00:22:30.540
swimming, doing a swimming relay
and except the rules are

410
00:22:30.600 --> 00:22:33.360
a little bit more loose
than Olympic swimming. This guy

411
00:22:33.360 --> 00:22:35.070
wants to do freestyle and
that guy wants to do

412
00:22:35.070 --> 00:22:37.500
a backstroke. That's totally up
to you, but we're heading

413
00:22:37.500 --> 00:22:40.350
that direction. And the rules
are, we stay within these

414
00:22:40.350 --> 00:22:42.810
lines and we know what
our goal is. And we're

415
00:22:42.810 --> 00:22:45.270
going to try to beat
our time, swim any way

416
00:22:45.270 --> 00:22:48.840
you want to. You're a
professional, just get that direction

417
00:22:48.840 --> 00:22:50.700
as long as we all
point in the right way.

418
00:22:52.890 --> 00:22:58.980
Yes and no. I think
that the, the, the basics

419
00:22:58.980 --> 00:23:01.560
of that are correct. And
certainly there, I think the,

420
00:23:01.560 --> 00:23:03.930
you need to make room
for every individual developer to

421
00:23:03.930 --> 00:23:06.720
have some flexibility in the
way they are going to

422
00:23:06.720 --> 00:23:13.320
work at the same time.
It's it would be sort

423
00:23:13.320 --> 00:23:16.950
of like a, a relay
where, you know, you have

424
00:23:17.460 --> 00:23:20.130
several people on your team
swimming at one time and

425
00:23:20.130 --> 00:23:23.010
you want to coordinate those
people. So there does need

426
00:23:23.010 --> 00:23:26.460
to be a, a little
bit more consensus around the

427
00:23:26.460 --> 00:23:30.780
way people are working. Where's
the room for creativity though.

428
00:23:30.780 --> 00:23:32.940
I mean, that's one of
the things, sometimes the more

429
00:23:32.940 --> 00:23:36.420
senior, like you, you, you
kind of said without saying

430
00:23:36.420 --> 00:23:39.350
that, well, if you hired
senior guys, you know, they

431
00:23:39.420 --> 00:23:42.150
know what they're doing and
you trust them, but at

432
00:23:42.150 --> 00:23:44.190
the same say senior, I
know. And I know you

433
00:23:44.190 --> 00:23:47.270
danced around that. Why didn't
you say senior? Because I

434
00:23:47.270 --> 00:23:51.920
think that there is, you
know, I think some people

435
00:23:51.920 --> 00:23:57.830
have an innate ability to
do software development. Well, I'm

436
00:23:57.830 --> 00:24:00.500
not saying it's something that
necessarily can't be learned. I

437
00:24:00.500 --> 00:24:02.540
think if somebody wants to
learn it, they will learn

438
00:24:02.540 --> 00:24:04.630
to do it. Well. Yeah.
Well, one of my old

439
00:24:04.630 --> 00:24:07.570
bosses said, if you're putting
together a basketball team, you

440
00:24:07.570 --> 00:24:13.000
can't teach height. Right, right.
But you know, at the

441
00:24:13.000 --> 00:24:17.620
same time I have some
relatively young software developers on

442
00:24:17.620 --> 00:24:20.890
my team who I look
at and say, wow, these

443
00:24:20.890 --> 00:24:23.530
people are going to be
really great at this and

444
00:24:23.530 --> 00:24:26.680
are really great at this
currently. So it wasn't a

445
00:24:26.680 --> 00:24:31.060
matter of seniority. It was
more, a matter of attitude,

446
00:24:31.480 --> 00:24:37.600
really a sense of professionalism,
craftsmanship, if you will, that

447
00:24:37.600 --> 00:24:43.210
they really care about doing
it. Right. And not only

448
00:24:43.210 --> 00:24:46.270
about doing it right, because
doing it right at the

449
00:24:46.270 --> 00:24:49.900
expense of the customer, isn't
necessarily such a good thing,

450
00:24:49.900 --> 00:24:52.870
but doing it right in
such a way that the

451
00:24:52.870 --> 00:24:55.870
customer is also satisfied with
what you're doing, That is

452
00:24:55.870 --> 00:24:59.830
such a hard thing to
quantify, to even discuss. I

453
00:24:59.830 --> 00:25:02.500
made a weak attempt a
number of years ago, where

454
00:25:02.500 --> 00:25:05.290
I wrote a blog post
called the five Oh one

455
00:25:05.290 --> 00:25:08.350
developer. And I described this
developer was like, Hey, it's

456
00:25:08.350 --> 00:25:10.360
five o'clock Oh, it's five
Oh one. Hey, can I,

457
00:25:10.480 --> 00:25:12.490
can I punch out? You
know, I'm going to go

458
00:25:12.490 --> 00:25:15.970
home. And people missed the
point. They thought I was

459
00:25:15.970 --> 00:25:18.190
talking about your level of
commitment to the number of

460
00:25:18.190 --> 00:25:21.030
hours at work. When I
refer to a guy who

461
00:25:21.040 --> 00:25:23.590
is a five Oh one
developer, I'm referring to the

462
00:25:23.590 --> 00:25:27.700
opposite of what you just
described. You know, you want

463
00:25:27.700 --> 00:25:31.150
a person who, who is
a steward of the code.

464
00:25:31.180 --> 00:25:34.900
When you say collective code
ownership, they like, Oh yeah,

465
00:25:34.930 --> 00:25:38.470
we as a group, as
a collective own, this, this

466
00:25:38.470 --> 00:25:45.670
thing, that's that sense of,
of aesthetic to the overall

467
00:25:45.670 --> 00:25:47.710
project and the way that
it runs, how do you

468
00:25:47.710 --> 00:25:49.930
teach that? You know, how
do you, it's like, it's

469
00:25:49.930 --> 00:25:52.990
like a, an art appreciation
class, you know, we should

470
00:25:52.990 --> 00:25:56.200
teach code appreciation classes in
college so that people can

471
00:25:56.200 --> 00:25:59.770
come out and appreciate that
when a team is really

472
00:25:59.770 --> 00:26:02.980
working on all cylinders and
everything's firing, that's just a

473
00:26:02.980 --> 00:26:05.020
beautiful thing. I mean, you
must have those sprints where

474
00:26:05.020 --> 00:26:06.620
it's just like two or
three sprints in a row.

475
00:26:06.640 --> 00:26:09.640
It's just like, boom, boom,
boom, Hey man, we're releasing

476
00:26:09.640 --> 00:26:12.310
software and it's awesome. And
everybody from the junior guy

477
00:26:12.310 --> 00:26:17.440
to the senior guy is
playing their role. Yeah. I

478
00:26:17.440 --> 00:26:23.050
mean, that is something that
we still struggle with. I

479
00:26:23.050 --> 00:26:29.600
think of how to organize
things during a sprint. So

480
00:26:29.600 --> 00:26:32.080
it's, I don't want to
pretend that I have all

481
00:26:32.080 --> 00:26:34.480
the answers and that, Oh,
if I'm mandating a team,

482
00:26:34.480 --> 00:26:38.530
everything's going to go swimmingly
That's utopia over there. We

483
00:26:38.530 --> 00:26:41.170
should all work at your
company. That's kind of the

484
00:26:41.170 --> 00:26:44.280
point of agile development. As
you can never assume that

485
00:26:44.280 --> 00:26:48.120
you always have to inspect
what you're doing, because not

486
00:26:48.120 --> 00:26:50.400
only are you not going
to get it right, but

487
00:26:50.610 --> 00:26:53.580
the environment around you changes
too. So you, even if

488
00:26:53.580 --> 00:26:55.650
you had it perfect for
one sprint, the same thing

489
00:26:55.650 --> 00:27:00.080
might not work the next
sprint for whatever reason. Well,

490
00:27:00.080 --> 00:27:02.990
back to this, back to
my, my, my now I

491
00:27:02.990 --> 00:27:07.160
realizing poor swimming analogy, where
is the room for creativity

492
00:27:07.160 --> 00:27:08.810
then? Cause when I was
kind of trying to put

493
00:27:08.810 --> 00:27:11.570
that together, I'm thinking about
everyone has their own style

494
00:27:11.570 --> 00:27:14.450
and their own way to
do things. Sometimes when I

495
00:27:14.450 --> 00:27:18.860
have had processes kind of
imposed upon me from above

496
00:27:19.400 --> 00:27:22.250
my, my reaction as the
developer on the ground is

497
00:27:22.250 --> 00:27:25.550
that this is really cramping.
My style. Do you mean,

498
00:27:26.000 --> 00:27:29.840
are these processes so lightweight
that no one feels like

499
00:27:29.840 --> 00:27:33.380
their, their, their, their being
their creativity or their, their,

500
00:27:35.000 --> 00:27:38.270
their sense of aesthetic is,
is being oppressed at all?

501
00:27:39.980 --> 00:27:41.870
I would hope that the
answer on my team is

502
00:27:41.870 --> 00:27:44.690
that they don't feel that
way. Certainly no one's specifically

503
00:27:44.690 --> 00:27:48.620
told me that they feel
that way. And what room

504
00:27:48.620 --> 00:27:52.640
does architecture play? So We
have one person on our

505
00:27:52.640 --> 00:27:56.450
team right now who is
the, the architect software architect

506
00:27:56.450 --> 00:28:01.370
for our platform. He's relatively
new at doing that job.

507
00:28:01.850 --> 00:28:06.320
He was the original one
person, a developer that was

508
00:28:06.320 --> 00:28:09.080
on the team when I
originally started consulting with them.

509
00:28:09.590 --> 00:28:11.300
So he's kind of grown
the system from the ground

510
00:28:11.300 --> 00:28:15.050
up, understands what's there the
best, but in terms of

511
00:28:15.050 --> 00:28:18.890
doing formal software architecture is
very new at doing that.

512
00:28:19.550 --> 00:28:22.550
So it's a learning experience
for him. And I think

513
00:28:23.000 --> 00:28:25.550
a learning experience for the
team in terms of how

514
00:28:25.890 --> 00:28:29.180
we're going to work within
those bounds. I kind of

515
00:28:29.180 --> 00:28:34.970
see it as his position,
being, looking at the whole

516
00:28:34.970 --> 00:28:37.580
platform from kind of the
macro level and saying, okay,

517
00:28:37.580 --> 00:28:42.410
we have this big application
here and this other part

518
00:28:42.410 --> 00:28:44.750
that fits into it. And
how are those going to

519
00:28:44.750 --> 00:28:47.630
communicate across what are, what
are the API is going

520
00:28:47.630 --> 00:28:51.170
to be? What, what are
the data formats going to

521
00:28:51.170 --> 00:28:54.440
be? How do we make
sure it's open and extensible,

522
00:28:54.470 --> 00:28:58.910
things like that, but specifically
not getting into the level

523
00:28:58.910 --> 00:29:01.100
of, okay, you're going to
use this class and call

524
00:29:01.100 --> 00:29:03.350
it this. And it's going
to have these specific methods

525
00:29:03.350 --> 00:29:06.320
on it inside that his
job is to kind of

526
00:29:06.320 --> 00:29:09.770
have the whole view of
the system across whatever sub

527
00:29:09.770 --> 00:29:12.230
teams we may eventually come
up with and make sure

528
00:29:12.230 --> 00:29:15.590
that it all gels together
really nicely. How does that

529
00:29:15.590 --> 00:29:17.840
fit together in terms of
user stories? Because I can

530
00:29:17.840 --> 00:29:20.840
understand where a, you know,
Joe, developer's going to make

531
00:29:20.840 --> 00:29:24.230
some screens and the neck,
that's a very clear user

532
00:29:24.230 --> 00:29:27.050
story and you can describe
the interactions and it's specked

533
00:29:27.050 --> 00:29:28.970
out and that person can
then start running in their

534
00:29:28.970 --> 00:29:31.730
direction and do their thing.
Then you've got architecture guy,

535
00:29:31.760 --> 00:29:34.520
who's got a vision in
his mind that may span

536
00:29:34.520 --> 00:29:36.950
multiple sprints. What are those
stories look like? And how

537
00:29:36.950 --> 00:29:39.020
does he work that into
an agile process? I'm not

538
00:29:39.020 --> 00:29:44.740
sure that those work terms
of a user story, I

539
00:29:44.740 --> 00:29:48.040
think at that point, it's
important that your overall product

540
00:29:48.160 --> 00:29:51.850
has some cohesion to it.
And some, you know, mission

541
00:29:51.850 --> 00:29:54.670
statement about what is the
big thing that we're doing.

542
00:29:55.750 --> 00:29:58.270
And so he's gonna look
at, you know, kind of

543
00:29:58.270 --> 00:30:02.110
a six month or 12
month plan of where in

544
00:30:02.110 --> 00:30:04.900
general, do we think we're
headed with this product and

545
00:30:04.900 --> 00:30:06.730
it may change during that
time. And he may have

546
00:30:06.730 --> 00:30:08.740
to go back to the
drawing board with some things,

547
00:30:09.040 --> 00:30:12.400
but he doesn't need to
look out that far and

548
00:30:13.150 --> 00:30:15.280
kind of see what components
we think are going to

549
00:30:15.280 --> 00:30:17.920
be involved in here and
start working on how those

550
00:30:17.920 --> 00:30:21.070
are going to come together.
So, so it's definitely a

551
00:30:21.070 --> 00:30:24.310
larger level than the specific,
Oh, the user is gonna

552
00:30:24.340 --> 00:30:28.090
click on this and see
this and fulfill this specific

553
00:30:28.090 --> 00:30:31.360
need. It's more about, you
know, how can we make

554
00:30:31.360 --> 00:30:34.090
sure this whole platform is
designed in such a way

555
00:30:34.090 --> 00:30:36.970
that when we get a
user story that we maybe

556
00:30:36.970 --> 00:30:39.730
weren't really expecting, we can
still adapt to that pretty

557
00:30:39.730 --> 00:30:44.400
easily. Sometimes trying to think
a little bit more about

558
00:30:45.330 --> 00:30:46.950
what I was, what I
was trying to express before

559
00:30:46.950 --> 00:30:51.720
about creativity is it's a
saying that, you know, everyone

560
00:30:51.720 --> 00:30:54.450
wants to be the architect,
but here you said that

561
00:30:54.450 --> 00:30:57.600
you, you basically assign that
to one, one person. So

562
00:30:57.690 --> 00:31:00.390
the, the team agrees that
that one individual is going

563
00:31:00.390 --> 00:31:05.850
to be focusing on architecture.
Yeah, I think, you know,

564
00:31:05.910 --> 00:31:07.800
No, his position is definitely
to be the one who

565
00:31:07.800 --> 00:31:11.610
kind of has that in
his mind and is drawing

566
00:31:11.610 --> 00:31:14.760
up, you know, whatever level
of documentation we may need,

567
00:31:14.760 --> 00:31:18.150
both for communication inside our
team, as well as communication

568
00:31:18.150 --> 00:31:22.500
to external stakeholders about what
we're doing. It is important.

569
00:31:22.740 --> 00:31:26.430
And the person that's doing
it for us agrees that

570
00:31:26.430 --> 00:31:30.180
it's important that he's not
in some, you know, room

571
00:31:30.180 --> 00:31:32.280
away from us kind of
doing this in a vacuum.

572
00:31:32.580 --> 00:31:35.100
He takes input from the
team. You know, we meet

573
00:31:35.100 --> 00:31:38.220
and talk about these things.
He's getting ideas. He's just

574
00:31:38.220 --> 00:31:43.230
ultimately the go to person
for, okay, given all of

575
00:31:43.230 --> 00:31:47.430
the discussion we've had, what
is, you know, the consensus

576
00:31:47.760 --> 00:31:51.120
and what is the design
of this going forward. So

577
00:31:51.120 --> 00:31:53.160
I think it is important
to have one person that

578
00:31:53.160 --> 00:31:57.570
you can go to who,
you know, has a really

579
00:31:57.570 --> 00:32:02.100
good handle on that. And
then kind of finally want

580
00:32:02.100 --> 00:32:04.350
to come back to where
we started, which was that

581
00:32:04.380 --> 00:32:06.900
you started as a consultant.
And you said that there

582
00:32:06.900 --> 00:32:10.170
was something about this team
that made you want to

583
00:32:10.950 --> 00:32:13.830
invest in their success more.
You wanted to stick around.

584
00:32:13.890 --> 00:32:16.770
I mean, it's almost like
as a consultant and I've

585
00:32:16.770 --> 00:32:19.020
done this too. I call
it white boarding for money.

586
00:32:20.040 --> 00:32:22.290
You know, you're kind of
flitting from place to place.

587
00:32:22.290 --> 00:32:24.570
And this is kind of
serial monogamy. And you spend

588
00:32:24.570 --> 00:32:26.340
time with someone for six
months and six months, and

589
00:32:26.340 --> 00:32:29.640
then you basically decided to
marry this, this group drop

590
00:32:29.670 --> 00:32:32.640
out of the single life.
And now you're married and

591
00:32:32.640 --> 00:32:35.040
you're building a family here
at your new, at your

592
00:32:35.040 --> 00:32:37.740
new company. Was it the,
was it the personalities of

593
00:32:37.740 --> 00:32:39.980
the guys? Was it the
size, the group? What, what,

594
00:32:39.980 --> 00:32:42.950
what, what caused you to
switch from an agile coach

595
00:32:43.430 --> 00:32:45.890
that went from place to
place doing something fresh every

596
00:32:46.520 --> 00:32:50.620
day? You know, honestly, it
was the amount of fun

597
00:32:50.620 --> 00:32:53.380
I was having just working
with the guys that were

598
00:32:53.380 --> 00:32:57.910
there. You know, it was,
it was both fun. You

599
00:32:57.910 --> 00:33:00.100
know, I, I looked forward
to getting up and going

600
00:33:00.100 --> 00:33:02.470
to work every single day.
There, there hasn't been a

601
00:33:02.470 --> 00:33:04.270
day since I've been with
this team where I've thought,

602
00:33:04.810 --> 00:33:06.400
man, I don't really want
to go to work today.

603
00:33:06.490 --> 00:33:08.500
And that's not been true
in all of my jobs.

604
00:33:10.030 --> 00:33:12.640
And it was, you know,
the specific personalities of the

605
00:33:12.640 --> 00:33:16.030
people on the team. I
think, you know, she use

606
00:33:16.030 --> 00:33:18.460
the term, a real family
atmosphere where you feel like,

607
00:33:18.460 --> 00:33:20.800
okay, these aren't just people
I work with, but are

608
00:33:20.800 --> 00:33:23.410
people that I care about
on a personal level, I

609
00:33:23.410 --> 00:33:25.570
care what's happening in their
lives. And you know, they

610
00:33:25.570 --> 00:33:28.120
care what's happening in my
life. And that just makes

611
00:33:28.420 --> 00:33:30.790
it so much more enjoyable
when you're going to spend

612
00:33:31.150 --> 00:33:33.010
eight to 10 hours a
day with a group of

613
00:33:33.010 --> 00:33:38.440
people, if you actually get
along really well. I discovered

614
00:33:38.470 --> 00:33:42.190
that, you know, my real
passion in life and my

615
00:33:42.190 --> 00:33:46.840
career is making sure that
people enjoy their jobs. You

616
00:33:46.840 --> 00:33:49.630
spend so much of your
time doing your work, that

617
00:33:49.960 --> 00:33:51.940
if you don't like it,
and you're not really passionate

618
00:33:51.940 --> 00:33:55.750
about what you're doing, that's
really sad and you should

619
00:33:55.750 --> 00:33:59.170
look at your life and
what you're doing for a

620
00:33:59.170 --> 00:34:02.980
living and try to bring
your work in line with

621
00:34:03.010 --> 00:34:08.380
kind of what your passion
is. Software development wasn't necessarily

622
00:34:08.380 --> 00:34:11.290
my first choice as a
career, I actually originally wanted

623
00:34:11.290 --> 00:34:16.480
to be a recreational therapist,
believe it or not got

624
00:34:16.480 --> 00:34:19.270
into software development because you
know, my wife and I

625
00:34:19.270 --> 00:34:22.270
had a kid very young
and it was something that,

626
00:34:22.540 --> 00:34:25.420
you know, I could earn
a decent living at and

627
00:34:25.420 --> 00:34:28.540
money was a very important
back then. It is every

628
00:34:28.540 --> 00:34:30.850
software engineer that I I've
talked to is like, well,

629
00:34:30.850 --> 00:34:32.590
I do it for the
money. Well, it is actually

630
00:34:32.590 --> 00:34:34.360
kind of fun, but one
day I'll have so much

631
00:34:34.360 --> 00:34:36.700
money that I'll go back
and do that thing that

632
00:34:36.700 --> 00:34:39.940
I originally wanted to do.
I think that, You know,

633
00:34:39.940 --> 00:34:43.240
for awhile, I thought that,
but what I've found is

634
00:34:43.240 --> 00:34:47.170
that as I've gotten more
experience and kind of moved

635
00:34:47.170 --> 00:34:49.510
up the ladder a little
bit, I found myself in

636
00:34:49.510 --> 00:34:53.200
a position where I can
actually bring software development in

637
00:34:53.200 --> 00:34:57.400
line with my personality and
my overall goals of helping

638
00:34:57.400 --> 00:35:01.810
people and helping people enjoy
their lives. And I think

639
00:35:01.810 --> 00:35:04.990
that's why I decided to
make that transition from, you

640
00:35:04.990 --> 00:35:09.550
know, a pure technical practitioner
into managing a team because

641
00:35:09.940 --> 00:35:12.940
when I had that opportunity
to kind of protect what

642
00:35:12.940 --> 00:35:16.210
was going on at, you
know, on the project, the

643
00:35:16.210 --> 00:35:18.340
X team, I wanted to
kind of take that and

644
00:35:18.340 --> 00:35:22.210
make sure that as the
team grew, we maintained that

645
00:35:22.210 --> 00:35:25.420
atmosphere where the people on
the team really felt that

646
00:35:25.420 --> 00:35:28.600
they were enjoying their work,
wanting to come to work.

647
00:35:30.070 --> 00:35:32.980
Very cool. Well, thank you
so much, John. Logar for

648
00:35:33.100 --> 00:35:35.590
hanging out with me today
and sharing your experience, moving

649
00:35:35.590 --> 00:35:38.130
from a consultant into a
time agile role At a

650
00:35:38.130 --> 00:35:41.130
company. I really appreciate it.
Thanks, Scott. This has been

651
00:35:41.130 --> 00:35:43.920
another episode of Hansel minutes
and I'll see you again

652
00:35:43.920 --> 00:35:44.430
next week.

