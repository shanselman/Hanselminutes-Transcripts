WEBVTT FILE

1
00:00:12.080 --> 00:00:17.540
From Hansel minutes.com it's Hansel
minutes, weekly discussion with web

2
00:00:17.540 --> 00:00:22.490
developer and technologists. Scott Hanselman
hosted by Carl Franklin. This is

3
00:00:22.490 --> 00:00:27.380
Morris Ryan announcing show number
61 recorded Thursday, April 19,

4
00:00:27.410 --> 00:00:32.210
2007. Support for Hansel minutes
is provided by Tellerik already

5
00:00:32.210 --> 00:00:36.230
controls the most comprehensive suite
of components for windows forms

6
00:00:36.230 --> 00:00:47.150
and asp.net web applications. online@wwwdottelerik.com.
Support is also provided by.net

7
00:00:47.150 --> 00:00:52.910
developers journal. The world's leading.net
developer magazine online at www

8
00:00:52.940 --> 00:00:58.100
dot <inaudible> dot com. In
this episode, Scott discusses with

9
00:00:58.100 --> 00:01:01.130
guests. Chris sells the impact
of the last 15 years

10
00:01:01.130 --> 00:01:05.840
of software Scott Hanselman. And
this is another episode of

11
00:01:05.840 --> 00:01:09.410
Hansel minutes. Carl Franklin has the
week off and I am

12
00:01:09.410 --> 00:01:14.210
sitting here in the den
computer room of inequity with

13
00:01:14.900 --> 00:01:18.230
Chris cells. Chris says I
just called my office, but

14
00:01:18.230 --> 00:01:20.480
from now on, I will
be calling it my computer

15
00:01:20.480 --> 00:01:22.970
room of iniquity. So we
were chatting earlier about what

16
00:01:22.970 --> 00:01:25.130
we would talk about, and
we had the idea that

17
00:01:25.130 --> 00:01:28.640
we would talk about where
is software and Microsoft going

18
00:01:28.640 --> 00:01:30.530
to go in the next
15 years? And you had

19
00:01:30.530 --> 00:01:33.710
a better idea to talk
about what we'd done in

20
00:01:33.710 --> 00:01:36.560
the last 15 years as
a kind of a prequel

21
00:01:36.560 --> 00:01:39.980
or prelude to the first
discussion. So 15 years ago

22
00:01:39.980 --> 00:01:44.960
was what? 92? Yeah, 92.
What would, well, I remember

23
00:01:44.960 --> 00:01:49.400
in 92, that's when I
took a essential comm from

24
00:01:49.400 --> 00:01:52.610
Don box. And after that
I was within a couple

25
00:01:52.610 --> 00:01:54.800
of months I was teaching.
And I remember that being

26
00:01:54.800 --> 00:01:59.210
a hole where you had
just come off the, what

27
00:01:59.210 --> 00:02:02.750
was the name of that
silly architecture, where we had

28
00:02:03.110 --> 00:02:05.360
the thing in the middle
and not know it was

29
00:02:05.360 --> 00:02:09.440
in before DNA. There was
this, Oh, this like TAPI

30
00:02:09.440 --> 00:02:11.240
was an example of this,
where we have a Tappy

31
00:02:11.240 --> 00:02:13.340
deal and you program your
apps against it. And then

32
00:02:13.340 --> 00:02:16.520
you have the provider API
underneath and Microsoft provided the

33
00:02:16.520 --> 00:02:18.620
thing in the middle and
it was like, Whoa. So,

34
00:02:18.650 --> 00:02:21.050
or I don't even remember
what they called it, but

35
00:02:21.050 --> 00:02:25.070
some are windows unified software,
something like that. And we,

36
00:02:25.130 --> 00:02:29.510
and now we can just
move from that into component

37
00:02:29.510 --> 00:02:32.120
based software. And that, I
remember that being a huge

38
00:02:32.120 --> 00:02:35.840
idea, the idea that we
had binary components, that we

39
00:02:35.840 --> 00:02:39.980
could build reusability into our
software and use it across

40
00:02:39.980 --> 00:02:44.000
languages. Now that actually had
some, I mean, that wasn't

41
00:02:44.000 --> 00:02:46.400
just talk, we could, we
could almost actually do that.

42
00:02:46.670 --> 00:02:50.150
I, I remember 92, 93,
I was working at a

43
00:02:50.150 --> 00:02:55.040
place that did car parts
cataloging, and people would say,

44
00:02:55.040 --> 00:02:58.640
I have a, you know,
an 85 Caprice or whatever.

45
00:02:58.640 --> 00:03:00.640
And I want to a
fax with all the parts

46
00:03:00.640 --> 00:03:04.210
on it. And we had
this huge database, many, many

47
00:03:04.210 --> 00:03:10.950
megabytes inside. Yes, many megabytes
SQL four to five or

48
00:03:10.950 --> 00:03:13.160
four to one or something
like that. And a and

49
00:03:13.170 --> 00:03:16.800
T was just in beta
Mt. Three five, Three, five

50
00:03:16.800 --> 00:03:20.610
three five one. That was
the era W when component-based

51
00:03:20.610 --> 00:03:23.430
software kind of blew me
away was then when it

52
00:03:23.430 --> 00:03:27.360
came time for us to
generate the facts, we automated

53
00:03:27.360 --> 00:03:30.170
word cause word six had
come out. Oh, sure, sure,

54
00:03:30.170 --> 00:03:32.430
sure, sure. We ran this
visual basic app on the

55
00:03:32.430 --> 00:03:35.610
server side that would listen
to the facts. You know,

56
00:03:35.640 --> 00:03:37.170
we had like a digital
board or whatever, you know,

57
00:03:37.530 --> 00:03:41.100
call to come in. We
had a fax farm. Yes.

58
00:03:41.130 --> 00:03:44.790
But we had this server
with 16 megabytes of Ram

59
00:03:44.790 --> 00:03:48.180
that would automate all these
copies of, of word and

60
00:03:48.210 --> 00:03:51.870
build from the database, you
know, for each car. And

61
00:03:51.870 --> 00:03:53.940
we built these giant word
docs and then fax them.

62
00:03:54.150 --> 00:03:56.550
Wow. And it was word
software as a service, you

63
00:03:56.550 --> 00:03:58.950
know, and word is, I
know to this, even to

64
00:03:58.950 --> 00:04:03.150
this day, people still try
to build websites that generate

65
00:04:03.150 --> 00:04:07.200
Excel spreadsheets by automating Excel
on the back end, which

66
00:04:07.410 --> 00:04:09.120
does not work at all.
And in fact has spawned

67
00:04:09.120 --> 00:04:13.320
a whole mini industry within
a component industry for just

68
00:04:14.100 --> 00:04:18.360
components that generate Excel compatible
files. Yeah. I just make

69
00:04:18.360 --> 00:04:21.360
a, was an XML spreadsheet
format. Yep. But you're right.

70
00:04:21.690 --> 00:04:24.960
That, that kind of has
become the, the exact wrong

71
00:04:24.960 --> 00:04:28.860
thing to do Local example,
but people do it all

72
00:04:28.860 --> 00:04:32.970
the time. So, so I
look at the technology by

73
00:04:32.970 --> 00:04:36.210
how easy it is, how
powerful the technology is, is

74
00:04:36.210 --> 00:04:39.420
how easy it is to
build the bad thing that

75
00:04:39.420 --> 00:04:44.490
still works. And so the
beauty of component-based software is

76
00:04:44.490 --> 00:04:47.220
that you could build something
that would just a terrible

77
00:04:47.220 --> 00:04:50.970
architecture, right. That you could
automate Excel on this audit

78
00:04:51.300 --> 00:04:53.850
and a heavy multi-user system.
And it would sort of

79
00:04:53.850 --> 00:04:57.240
almost sometimes work. And it
was the whole idea of

80
00:04:57.240 --> 00:05:01.200
binary components that enable that
Wouldn't that mean that, that,

81
00:05:01.620 --> 00:05:04.230
that.net is making it just
that much easier to do

82
00:05:04.230 --> 00:05:07.410
stupid stuff. Absolutely. Absolutely. But
what about the pit of

83
00:05:07.410 --> 00:05:09.960
success? Right? I mean, Rico
Mariani says allow them to

84
00:05:09.960 --> 00:05:13.080
fall into the pit of
success, make your systems such

85
00:05:13.080 --> 00:05:15.570
that even if they screw
up, it still turns out.

86
00:05:15.570 --> 00:05:18.630
Okay. And I guess that's
so much better way to

87
00:05:18.630 --> 00:05:21.390
say what I say right.
Which is even if you

88
00:05:21.390 --> 00:05:25.860
write something that's not optimal
or even approaching optimal, you

89
00:05:25.860 --> 00:05:28.950
can still solve your problem.
Well, enough to move on.

90
00:05:28.950 --> 00:05:31.740
Right there, there are two
kinds of computer people, right.

91
00:05:32.010 --> 00:05:35.340
There are the computer people
like you and I, and

92
00:05:35.340 --> 00:05:39.120
probably most of your listeners
that are unhealthy about their

93
00:05:39.120 --> 00:05:42.960
love of computers, right. That
they obsess over writing good

94
00:05:42.960 --> 00:05:45.300
code. And that, that has
a meaning to them. Right.

95
00:05:45.330 --> 00:05:48.120
Right. The purity for purity's
sake. Right. And these are

96
00:05:48.120 --> 00:05:50.130
the people that look at
an architecture, they look at

97
00:05:50.130 --> 00:05:53.010
code and they don't even,
they don't even think about

98
00:05:53.010 --> 00:05:57.770
it anymore. They just have
this person's style coastal. Right.

99
00:05:57.770 --> 00:06:00.200
They can feel the quality
or not, and they keep

100
00:06:00.200 --> 00:06:03.730
working on it. I, I
can feel the quality so

101
00:06:03.730 --> 00:06:06.700
much that I know now
it's been 10 years since

102
00:06:06.700 --> 00:06:10.570
I've written some decent code,
really like my sense of

103
00:06:10.570 --> 00:06:14.650
code smell is so highly
advanced coats. I cannot write

104
00:06:14.710 --> 00:06:16.720
any good code at all.
I am incapable of writing

105
00:06:16.720 --> 00:06:18.910
code. I'll write like four
lines and I'll just go,

106
00:06:19.180 --> 00:06:21.970
Oh yeah. But what if
someone used, what if someone

107
00:06:21.970 --> 00:06:25.150
use this line of code
at 2:00 AM the moment, the

108
00:06:25.150 --> 00:06:28.330
date, you know, the DST
says, Oh, it'll never work

109
00:06:28.330 --> 00:06:33.280
in Sri Lanka, you know? And
then, Well, so there again,

110
00:06:33.280 --> 00:06:35.290
we had, I applied my
success as a metric thing.

111
00:06:35.290 --> 00:06:40.030
Exactly. So, so, you know,
we are unhealthy in our

112
00:06:40.030 --> 00:06:42.670
love of the computer code.
Right. And then there's most

113
00:06:42.670 --> 00:06:46.390
of the programming population, the
people that actually have business

114
00:06:46.390 --> 00:06:49.540
problems to solve and they
solve them and they install

115
00:06:49.540 --> 00:06:51.820
and deploy and support the
systems and move on with

116
00:06:51.820 --> 00:06:54.670
their lives and their business
makes money as a result

117
00:06:54.670 --> 00:06:57.910
of that. Exactly. Right. Didn't
tell them pagers go off.

118
00:06:57.910 --> 00:07:00.850
Of course. So I slept
pretty well 15 years ago.

119
00:07:02.110 --> 00:07:04.690
Well, we had a system,
It worked really well. There

120
00:07:04.690 --> 00:07:08.080
you go. And right. And
you had cobbled together these

121
00:07:08.200 --> 00:07:12.340
pieces and it was, it
was this binary component, object

122
00:07:12.340 --> 00:07:15.040
model thing that enabled it.
So that bind your components,

123
00:07:15.040 --> 00:07:18.910
big thing. And of course
the binary component kind of

124
00:07:18.910 --> 00:07:22.360
in the abstract and the
power of that was the

125
00:07:22.390 --> 00:07:24.700
clemency Persky book, that component
book. Do you remember the

126
00:07:24.710 --> 00:07:27.430
title of that book? That
well, so the, the reason

127
00:07:27.430 --> 00:07:29.050
I bring that up is
because Clemons is on my

128
00:07:29.050 --> 00:07:32.830
team now that it's kind
of fun. It's kind of

129
00:07:32.830 --> 00:07:34.540
fun. He's a good guy.
He's really like that. Yeah.

130
00:07:34.870 --> 00:07:38.620
He's fun to work with
Your climate, you know? Well,

131
00:07:38.620 --> 00:07:42.360
except I also work with
Chris Anderson Don box. Yeah.

132
00:07:42.400 --> 00:07:45.100
So I could spend a
lot of time there. Yeah.

133
00:07:45.130 --> 00:07:49.420
Is that just kind of
wide-eyed Clem masters works around

134
00:07:49.420 --> 00:07:50.920
the hall from me. I
run into all the time.

135
00:07:50.920 --> 00:07:52.750
I mean, you know, there's
a lot of that two

136
00:07:52.750 --> 00:07:55.240
Clemens on one floor. Yes.
In fact, the only two

137
00:07:55.240 --> 00:07:57.940
Clemens in all of Microsoft
work in the same corner

138
00:07:57.940 --> 00:08:03.430
of the same building. Wow.
Okay. So binary objects, that

139
00:08:03.430 --> 00:08:06.730
was a big deal, right?
92. So what else since

140
00:08:06.730 --> 00:08:08.770
then, Graphical stuff. I mean,
Hey, you and your secretary

141
00:08:08.770 --> 00:08:10.690
can write an application. You
just drag a button onto

142
00:08:10.690 --> 00:08:16.330
a form. I would say
the, the Allen Cooper style

143
00:08:16.600 --> 00:08:20.350
drag and drop UI design,
that the, what you see

144
00:08:20.350 --> 00:08:23.230
is what you get for
application developers. That was huge.

145
00:08:23.560 --> 00:08:27.000
Right. Visual basic one. Oh.
And on MRC class was

146
00:08:27.760 --> 00:08:31.720
absolutely the dialogue editor and
MFC. And you could go

147
00:08:31.720 --> 00:08:34.660
back and forth between that
and your code. But I'd

148
00:08:34.660 --> 00:08:38.230
say that probably the best
example of that is really

149
00:08:38.230 --> 00:08:41.260
the WinForms designer. I'm a,
I'm in love with that.

150
00:08:41.980 --> 00:08:44.050
I am, I'm not a
big fan of that. I

151
00:08:44.050 --> 00:08:46.060
always got frustrated when I
would do something. I go

152
00:08:46.070 --> 00:08:48.040
and edit the you're not
supposed to edit this part

153
00:08:48.700 --> 00:08:51.100
to get the big kind
of like red icon. Yeah.

154
00:08:51.130 --> 00:08:54.130
Big red X. Yes, absolutely.
And of course, so what

155
00:08:54.130 --> 00:08:55.350
I was going to say
is I'm not a fan

156
00:08:55.350 --> 00:08:57.840
of the serialization format they
chose, which looks an awful

157
00:08:57.840 --> 00:09:01.190
lot like C-sharp or VB,
but isn't Right. Well, yeah.

158
00:09:01.340 --> 00:09:04.130
And so, So, you know,
as I look forward, I

159
00:09:04.130 --> 00:09:09.710
see a better serialization format.
Yeah, absolutely. But which makes

160
00:09:09.710 --> 00:09:11.330
me feel like we've just
come back to 15 years

161
00:09:11.330 --> 00:09:13.520
ago. It's just now they're
dot XAML files, not dot

162
00:09:13.520 --> 00:09:16.640
RC files. Sure. I'd say
that's true. Although I think

163
00:09:16.850 --> 00:09:18.880
the young folks, the young
kids today don't know that

164
00:09:19.880 --> 00:09:22.140
the young people Well, and
of course, you know, that

165
00:09:22.190 --> 00:09:25.160
RC files are just the
same as HTML files, which

166
00:09:25.160 --> 00:09:28.220
are the same as however
we differ. Well, I screamed,

167
00:09:28.220 --> 00:09:31.160
which was the same as
a 32, 72 70, the

168
00:09:31.160 --> 00:09:33.980
web has 32 70 example
has been the ongoing thing

169
00:09:33.980 --> 00:09:38.470
for me. Absolutely. Here we
are. Remoting UI again. Now

170
00:09:38.480 --> 00:09:40.640
we're going all the way
back to the chubby client.

171
00:09:40.640 --> 00:09:46.400
Again, The reason I went
yeah, agreed, agreed. Well, JavaScript

172
00:09:46.400 --> 00:09:50.090
is a lousy computational engine.
Let's really be seriousness time

173
00:09:50.090 --> 00:09:54.620
and let's, let's enable some
managed code on the client,

174
00:09:54.740 --> 00:09:58.580
but make it less difficult
to get the runtime Light

175
00:09:58.610 --> 00:10:04.370
is definitely a graphics. Cross-platform
high performance, high fidelity graphics,

176
00:10:04.370 --> 00:10:07.820
video. Yeah. GDI specific to
D but it's still all.

177
00:10:09.590 --> 00:10:13.640
Oh yeah. But well, they
still all JavaScript driven on

178
00:10:13.640 --> 00:10:15.800
the client. Well, no, it's
JavaScript driven to get the

179
00:10:15.800 --> 00:10:18.110
information in and out of
it from the Dom, from

180
00:10:18.110 --> 00:10:22.310
the HTML Dom into an
into Silverlight and back. But,

181
00:10:22.340 --> 00:10:25.280
but in may, in March
or may of 2006, Mike

182
00:10:25.280 --> 00:10:28.580
harsh the PM for several
light on his blog said

183
00:10:28.850 --> 00:10:32.270
that it will have managed
code support. So it's become

184
00:10:32.270 --> 00:10:35.000
a tiny little, is that
the case in the one

185
00:10:35.000 --> 00:10:38.480
old version? That's, that's what
everyone's speculating will happen next

186
00:10:38.480 --> 00:10:41.210
week. Next, you know, I
can't say either way, we

187
00:10:41.210 --> 00:10:43.280
just did it. Our last
show was on Silverlight. Sure.

188
00:10:43.460 --> 00:10:48.650
So Paul Wilson Wilson's dot net
had basically combed through every

189
00:10:48.650 --> 00:10:52.220
interview. That's got goo every
day, you know, analyze the

190
00:10:52.220 --> 00:10:55.520
ums and the AHS. And
everyone believes that there's some

191
00:10:55.520 --> 00:10:58.580
kind of managed runtime next
week. That's happening inside of

192
00:10:58.580 --> 00:11:01.550
several lights to enable C
sharp in the browser on

193
00:11:01.550 --> 00:11:06.680
a Mac. So I have
In my WPF book, an

194
00:11:06.680 --> 00:11:09.560
appendix written by Sean will
remove on dev on Silverlight

195
00:11:09.590 --> 00:11:15.320
WPP. Yeah. Sean fan, I've
been trying to get them

196
00:11:15.320 --> 00:11:17.840
hired at Microsoft forever. Anyway,
That's what I do with

197
00:11:17.840 --> 00:11:20.180
all my friends. Haven't I
tried to get you. Okay.

198
00:11:20.840 --> 00:11:24.560
So We have a silver
light appendix in our book

199
00:11:24.710 --> 00:11:28.910
because it's the XAML part
and the graphics part, it's

200
00:11:29.180 --> 00:11:35.360
very much a subset of
WPE WPF that. Right. But

201
00:11:35.360 --> 00:11:38.900
there's nothing about managed runtime
on the client, in that,

202
00:11:39.140 --> 00:11:41.750
in that chat appendix, is
that chapter gone to print?

203
00:11:42.320 --> 00:11:44.660
No one has it then
maybe. No, I have no

204
00:11:44.660 --> 00:11:47.750
idea. And we definitely are.
All I know is getting

205
00:11:47.750 --> 00:11:50.690
our eyes opened. Yeah. That's
what they intended. That's what

206
00:11:50.690 --> 00:11:54.220
my car, and I'm not
saying anything that hasn't been

207
00:11:54.220 --> 00:11:58.750
printed. So my point being
though that whether it's JavaScript

208
00:11:59.020 --> 00:12:01.540
or whether it's C-sharp, it
doesn't matter. The point is

209
00:12:01.540 --> 00:12:03.820
that there's all these penny
and fours out there not

210
00:12:03.820 --> 00:12:07.510
doing any freaking work they're
waiting around for angle brackets

211
00:12:07.510 --> 00:12:09.760
to show up so they
can do something with them.

212
00:12:09.760 --> 00:12:13.150
For the most part, my
CPU is largely idol. I

213
00:12:13.150 --> 00:12:16.000
mean, basically my CPU does
two things. It waits for

214
00:12:16.000 --> 00:12:17.620
web pages to show up
so it can show them

215
00:12:17.620 --> 00:12:21.790
to me and it makes
thumbnails. So it's an explore.

216
00:12:21.790 --> 00:12:23.970
Those are the two things
that my CPU does. It's

217
00:12:23.970 --> 00:12:28.740
funny because I, Why aren't
we using the web as

218
00:12:28.740 --> 00:12:31.500
a big, why aren't, why
aren't web applications more of

219
00:12:31.500 --> 00:12:34.020
the kind of distributed computation
farm kind of a thing.

220
00:12:34.230 --> 00:12:38.970
So I, I absolutely, I
definitely do serve two websites.

221
00:12:39.240 --> 00:12:43.680
Right? I do. I mean,
I look up <inaudible> I

222
00:12:43.680 --> 00:12:46.600
surf the web. Absolutely. You
heard it here first. I

223
00:12:46.620 --> 00:12:49.590
searched for information on the
web, but I'll tell you

224
00:12:49.650 --> 00:12:53.790
more and more. I mean,
I live and breathe the

225
00:12:53.790 --> 00:12:56.790
real outlook, right? Not the
web outlook. I spend all

226
00:12:56.790 --> 00:13:01.460
my time in various copies
of visual studio, sometimes two,

227
00:13:01.470 --> 00:13:07.770
three at a time word,
PowerPoint, Connected applications, you're saying,

228
00:13:08.460 --> 00:13:10.620
but they're outside the browser
frame. They own their own

229
00:13:10.620 --> 00:13:13.890
frame. Yes. And they take
advantage of the operating system

230
00:13:13.890 --> 00:13:15.780
platform so much. So in
fact that I just got,

231
00:13:15.840 --> 00:13:17.100
I had to order some
new memory for my life.

232
00:13:17.820 --> 00:13:19.890
Well, let me give you
an example. Like someone said

233
00:13:20.250 --> 00:13:22.650
on an alias recently that
they were frustrated that they

234
00:13:22.650 --> 00:13:26.340
have to upgrade to the
latest version of QuickBooks. Cause

235
00:13:26.340 --> 00:13:29.070
the older versions weren't supported
on Vista and another guy

236
00:13:29.070 --> 00:13:32.340
said, well, Hey, I just
use the QuickBooks web version

237
00:13:32.790 --> 00:13:38.190
and 92%, well, you know,
the same and every once

238
00:13:38.190 --> 00:13:40.050
in a while you'll be
using it. And you'll think

239
00:13:40.380 --> 00:13:43.170
that it's the real desktop
version and you, Oh, wait

240
00:13:43.170 --> 00:13:45.810
a second. I'm on the
web. It's that good? Wow.

241
00:13:45.840 --> 00:13:48.390
But the benefit, you know,
the 8% that you lose

242
00:13:48.390 --> 00:13:50.130
and these are just kind
of nonsense numbers, but the

243
00:13:50.130 --> 00:13:53.250
little few percent you lose
is outweighed by the fact

244
00:13:53.250 --> 00:13:57.330
that his accountant can log
in any machines and manages

245
00:13:57.630 --> 00:14:01.980
You definitely see benefits in
a connected app. So what

246
00:14:01.980 --> 00:14:04.230
are the benefits of a
connected app versus an an

247
00:14:04.560 --> 00:14:08.340
a non-connected app? The only
difference is then distribution. When

248
00:14:08.340 --> 00:14:11.100
you visit with an IRL
and one, you install from

249
00:14:11.100 --> 00:14:15.090
an MSI. So even today
with, well, for awhile now

250
00:14:15.090 --> 00:14:17.610
with click wands and wind
farms and WPF, would you

251
00:14:18.090 --> 00:14:21.660
visit with the neuro and
now with Silverlight with the

252
00:14:21.660 --> 00:14:25.260
rich stuff inside the browser
window, the very enriched stuff.

253
00:14:25.290 --> 00:14:27.780
Yeah. They've even, you know,
before with flash, but the

254
00:14:27.790 --> 00:14:30.720
no touch, no touch deploy
was largely kind of a

255
00:14:30.780 --> 00:14:34.350
0.9 release. And people got
frustrated with it, right. Once

256
00:14:34.350 --> 00:14:36.390
is the one I'll click
once works pretty well. I've

257
00:14:36.390 --> 00:14:39.180
written a number of them
until you get into certificate

258
00:14:39.180 --> 00:14:42.690
revocation problems. There's a pretty,
if you're, if your certificate,

259
00:14:42.970 --> 00:14:45.660
then you're kind of screwed
and that's a known bug.

260
00:14:45.930 --> 00:14:48.480
Sure. I mean, it's, it's
there and it's closed, but

261
00:14:48.480 --> 00:14:52.190
you know, office as click
once app. Yeah. I Don't

262
00:14:52.190 --> 00:14:54.440
know what I'm saying. That'd
be pretty sweet. So my

263
00:14:54.890 --> 00:14:58.240
mission about surfing the web
before was making, yes, there's

264
00:14:58.240 --> 00:15:01.840
a bunch of apps that
I use, you know, 60

265
00:15:01.840 --> 00:15:05.620
seconds at a time, all
day long. But if I

266
00:15:05.620 --> 00:15:07.990
have to spend more than
five minutes in an app,

267
00:15:08.770 --> 00:15:12.550
I can't stand the web
app that I just, I'm

268
00:15:12.550 --> 00:15:17.170
such a keyboard guy and
I'm sorry, windows, UI guy.

269
00:15:17.770 --> 00:15:21.490
And without that, I, I
can't use an app. It

270
00:15:21.490 --> 00:15:24.580
drives me crazy. It really
does. And so that's why

271
00:15:24.820 --> 00:15:28.840
I'll use, Oh, Woah only
on computers that I occasionally

272
00:15:29.320 --> 00:15:33.730
outlook web access, simply because
it's there and I can

273
00:15:33.730 --> 00:15:35.470
use it for five minutes
to check my email quick,

274
00:15:36.210 --> 00:15:37.630
late for something or whatever.
But then I close it

275
00:15:37.630 --> 00:15:39.160
down and I go to
my real COVID couldn't you

276
00:15:39.160 --> 00:15:43.120
live in Gmail actually. Gmail.
No, but I'll tell ya.

277
00:15:44.020 --> 00:15:48.040
I probably could live in
Yahoo mail when I say

278
00:15:48.160 --> 00:15:52.090
control and in Yahoo mail,
it works Yahoo mail. Well,

279
00:15:52.090 --> 00:15:54.220
I think they bought odd
posts. They did come. They

280
00:15:54.220 --> 00:15:56.920
did. They totally did. Yeah.
And so I just have

281
00:15:56.920 --> 00:15:59.950
it, a little experimental email
address over there and I

282
00:15:59.950 --> 00:16:03.400
like that email client a
lot more than g-mail really?

283
00:16:03.460 --> 00:16:08.040
Yes, yes. Okay. So let's
go back onto the, so

284
00:16:08.040 --> 00:16:10.540
the WinForms designer, the reason
it's, it's kind of the

285
00:16:10.670 --> 00:16:13.120
physical so far. And in
fact, if you look at

286
00:16:13.120 --> 00:16:17.290
the WPF designer so far
in the developer space cider,

287
00:16:18.280 --> 00:16:19.840
I'm just waiting for it
to get to the same

288
00:16:19.840 --> 00:16:22.990
bar set by the windows.
Desirable cider is, Oh, sorry.

289
00:16:22.990 --> 00:16:26.590
Cider is the WPF designer.
That's inside of visual studio.

290
00:16:26.620 --> 00:16:29.860
Right? So when you install
the WPF extensions, the visual

291
00:16:29.860 --> 00:16:32.560
studio or the stuff that'll
come with orcas orcas already

292
00:16:32.560 --> 00:16:34.390
comes with even a better
side or that comes with

293
00:16:34.510 --> 00:16:37.150
right. That came. How many
different SAML editors are there

294
00:16:37.150 --> 00:16:42.190
now? There's expression, blend and
design there's. Yes. And then

295
00:16:42.190 --> 00:16:47.170
there's also, some folks have
been building output filters for

296
00:16:47.170 --> 00:16:51.160
like Adobe and things like
that. There. Thank you. That's

297
00:16:51.160 --> 00:16:53.350
a company name, not an
application name. Thank you for

298
00:16:53.350 --> 00:16:56.890
filling that in for me,
there was the cider one

299
00:16:56.890 --> 00:17:00.130
built into visual studio. XAML
pad or something. Oh, well

300
00:17:00.130 --> 00:17:04.720
there's seven XAML pads and
don't tell me you write

301
00:17:04.720 --> 00:17:07.090
it in notepad. I don't
write it in notepad because

302
00:17:07.090 --> 00:17:10.030
I need the IntelliSense. I
write it in the XML

303
00:17:10.030 --> 00:17:13.030
editor in visual studio. Okay.
So it's less important that

304
00:17:13.030 --> 00:17:15.520
you have a preview for
you and more important that

305
00:17:15.520 --> 00:17:19.130
you have IntelliSense. Absolutely. Now
with HTML, I remember remember

306
00:17:19.480 --> 00:17:23.080
here. So think about this,
right? So 92, what was

307
00:17:23.080 --> 00:17:24.970
the most difficult thing to
do? Like what was the

308
00:17:24.970 --> 00:17:28.390
pinnacle? It was riding an
HTML table without looking at

309
00:17:28.390 --> 00:17:31.810
the, with the hell. Yup.
Was like, Oh, an HTML

310
00:17:31.810 --> 00:17:33.850
is great. It's so intuitive.
Except I really wish I

311
00:17:33.850 --> 00:17:37.900
could write a table. So
front page existed only for

312
00:17:37.900 --> 00:17:40.420
the purposes of allowing people
to make really complicated tables

313
00:17:40.420 --> 00:17:43.060
with call spans and those
bands with all the properties

314
00:17:43.060 --> 00:17:45.400
in the property browsers. And
in fact, it's funny too,

315
00:17:45.400 --> 00:17:49.950
because again, the what made,
front-page interesting that it had

316
00:17:49.950 --> 00:17:53.760
this kind of Wiziwig develop.
You draw what you see

317
00:17:53.760 --> 00:17:57.050
is what you get UI
design environment. I remember, of

318
00:17:57.050 --> 00:17:58.940
course, in word, the first
thing they had the table

319
00:17:58.940 --> 00:18:02.990
painter. Yes, yes, yes. And
you could erase the little

320
00:18:02.990 --> 00:18:07.250
lines. Are you anticipating that
people that are going to

321
00:18:07.250 --> 00:18:10.790
just get over it at
some point and when it

322
00:18:10.790 --> 00:18:12.830
comes to basic UI stuff,
they're going to write them

323
00:18:12.830 --> 00:18:18.560
themselves and not the polylines
and stuff. No, I don't.

324
00:18:19.040 --> 00:18:24.380
I am an oddity in
the XAML world. Well, in

325
00:18:24.380 --> 00:18:27.200
many ways I'm an oddity,
but in this particular case,

326
00:18:27.590 --> 00:18:30.500
yes, everyone that I know
that's written, the XAML book

327
00:18:30.890 --> 00:18:34.100
is able to be very
productive in the raw yeah.

328
00:18:34.400 --> 00:18:36.830
Three people on the planet
who care to do that.

329
00:18:36.830 --> 00:18:39.710
But most people use expression
or use Exactly. Right. That's

330
00:18:39.710 --> 00:18:42.650
exactly, exactly what I anticipated.
But the beauty of see,

331
00:18:42.650 --> 00:18:47.000
this is the huge difference
between XAML and WinForms designer

332
00:18:47.000 --> 00:18:50.270
and why it is a
big staff is if I

333
00:18:50.270 --> 00:18:52.640
go and edit the XAML,
I can have a reasonable

334
00:18:53.480 --> 00:18:57.320
assurance that the editor, the
designers, visual designers will understand

335
00:18:57.320 --> 00:19:00.050
it. Whereas with code, as
you point out, it's very

336
00:19:00.050 --> 00:19:02.330
likely that they won't As
a shortest side, are there,

337
00:19:02.360 --> 00:19:05.450
are there buttons and controls
and stuff? They're buttons, if

338
00:19:05.450 --> 00:19:06.620
you know there aren't, so
you don't get any of

339
00:19:06.620 --> 00:19:08.480
those things. Don't want a
button you drive. And in

340
00:19:08.480 --> 00:19:09.800
fact, one of the things
we talked about in our

341
00:19:09.800 --> 00:19:13.370
appendix The purpose, yes. Is
it on purpose? It's all

342
00:19:13.370 --> 00:19:17.150
about what is the minimal
environment we can build. We

343
00:19:17.150 --> 00:19:20.150
can provide to people to
build rich, interactive application, But

344
00:19:20.150 --> 00:19:25.160
not full screen. You know,
Silverlight application takes over the

345
00:19:25.160 --> 00:19:28.490
entire browser. You have two
choices, right? And we cover

346
00:19:28.490 --> 00:19:30.800
both of these in the
appendix because they're both important

347
00:19:30.800 --> 00:19:35.000
models. One is you can,
you know, use it as

348
00:19:35.000 --> 00:19:38.030
a little islands of XAML
in your HTML and use

349
00:19:38.030 --> 00:19:40.280
the regular HTML controls. And,
you know, you can have

350
00:19:40.280 --> 00:19:42.590
an HTML button for pause
and play and rewind for

351
00:19:42.590 --> 00:19:45.440
your videos. Right? The other
thing you can do is

352
00:19:45.440 --> 00:19:48.320
you can actually, of course
you can, from the graphics

353
00:19:48.320 --> 00:19:51.980
primitives and the interactive primitives,
they provide the event mouse

354
00:19:51.980 --> 00:19:55.070
and keyboard event handling. You
can build things that look

355
00:19:55.070 --> 00:19:57.770
like buttons and work like
buttons, and you have the

356
00:19:57.770 --> 00:20:03.560
styling and XAML, and you
have the graphics control. And,

357
00:20:04.340 --> 00:20:07.040
and in fact, you can
even package them in little

358
00:20:07.400 --> 00:20:09.650
reusable, things that you serve
up from your web server.

359
00:20:10.490 --> 00:20:12.710
Okay. So like the one
thing about HTML that I've

360
00:20:12.710 --> 00:20:17.000
always hated is tables, right?
Sure. So tables as layout

361
00:20:17.000 --> 00:20:20.150
has largely been a solved
problem because Gibbs and CSS,

362
00:20:20.540 --> 00:20:24.290
but tables as places to
put data still exist, right?

363
00:20:24.290 --> 00:20:26.720
The only purpose for a
table is for tabular data.

364
00:20:26.750 --> 00:20:29.150
Sure. But I have this
kind of weird idea in

365
00:20:29.150 --> 00:20:31.340
my head that somehow Silverlight
is going to replace that.

366
00:20:31.760 --> 00:20:35.510
I just want the ultimate
grid in Silverlight. So then

367
00:20:35.510 --> 00:20:39.920
I'll have dibs for everything.
And then I'll, there's still,

368
00:20:39.920 --> 00:20:42.410
the hacker had a better
layout forms. So what you're

369
00:20:42.410 --> 00:20:45.800
saying is that one of
two things, one, you look

370
00:20:45.800 --> 00:20:48.250
for a future versions of
silver to have a much

371
00:20:48.250 --> 00:20:50.920
richer set of controls built
with silver light. And I

372
00:20:50.920 --> 00:20:52.840
think that's what I wouldn't
say that just the first

373
00:20:52.840 --> 00:20:56.050
guy to ride a really
awesome grid or enterprising third-parties

374
00:20:56.050 --> 00:20:59.620
Microsoft has made room for
enterprising third it's. Absolutely. Yeah.

375
00:20:59.680 --> 00:21:03.580
And in fact, by far
and away, the coolest WPF

376
00:21:03.580 --> 00:21:07.960
control that I've seen is
the, the free exceed data

377
00:21:07.960 --> 00:21:11.170
grip control, interestingly enough. And
that's total coincidence, although people

378
00:21:11.170 --> 00:21:13.720
won't think so they were
a sponsor of this podcast

379
00:21:13.720 --> 00:21:16.210
for awhile and they are,
if you go into my

380
00:21:16.210 --> 00:21:20.530
homepage enhancement.com, they're the big
black advertisement under my, under

381
00:21:20.530 --> 00:21:23.370
my huge head. I didn't
know that Honestly, but yeah.

382
00:21:23.370 --> 00:21:26.400
They're, they're awesome. Those guys
are. Yeah. Yeah, absolutely. So,

383
00:21:26.880 --> 00:21:31.080
so anyway, so mainline again.
Okay. So the visual drawing

384
00:21:31.080 --> 00:21:34.890
of things, was he with
you on one of the

385
00:21:34.890 --> 00:21:36.510
things actually, as an aside,
one of the really cool

386
00:21:36.510 --> 00:21:38.880
things about Chris, as long
as I've known him, he

387
00:21:38.880 --> 00:21:40.770
has the ability to push
things on the stack and

388
00:21:40.770 --> 00:21:42.690
pop them off and get
right back to where, you

389
00:21:42.690 --> 00:21:45.090
know, you never hear Chris
go, what was I talking

390
00:21:45.090 --> 00:21:47.850
about? He immediately just goes,
pop, pop, pop, and he's

391
00:21:47.850 --> 00:21:50.310
right back where it was
please. Okay. Well that's I

392
00:21:50.320 --> 00:21:53.910
never knew that about myself,
but after all that instructor,

393
00:21:53.910 --> 00:21:55.980
I think that's what it
was. All the teachings. You

394
00:21:55.980 --> 00:21:58.230
went off into a tangent
and come back. Yeah. Because

395
00:21:58.680 --> 00:22:00.810
the tangents are the fun
part. Right? My on my,

396
00:22:00.810 --> 00:22:02.820
on the other hand, I've
completely forgotten why I'm here.

397
00:22:03.990 --> 00:22:06.600
Not at, I have no
clue. That's funny too, because

398
00:22:06.600 --> 00:22:09.720
when you do that in
regular conversations, if you, I

399
00:22:09.720 --> 00:22:13.290
have had to learn to
not pop a regular conversation

400
00:22:13.290 --> 00:22:16.860
back to cause they really,
once they're off in Lala

401
00:22:16.860 --> 00:22:18.990
land, then following their rent,
they don't want to be

402
00:22:18.990 --> 00:22:21.630
pulled back. That's right. They've
had that conversation now they're

403
00:22:21.630 --> 00:22:24.930
moving on. Yes. I've had,
that's been a problem. In

404
00:22:24.930 --> 00:22:29.430
fact, that thing you pointed
out. So anyway, so before

405
00:22:29.430 --> 00:22:32.760
92, I would have said
that as an older Unix

406
00:22:32.760 --> 00:22:36.300
and Mac programmer, the only
thing I liked me, only

407
00:22:36.300 --> 00:22:39.930
thing I liked about windows
3.1 was the programming environment.

408
00:22:40.290 --> 00:22:43.680
Assuming I could ignore the
silly, you know, low, medium,

409
00:22:43.680 --> 00:22:48.600
high memory, whatever it was
because not only did I

410
00:22:48.600 --> 00:22:51.510
really like the program model,
these are 32 when compared

411
00:22:51.510 --> 00:22:55.680
to units in the Mac
for UIs, but they had

412
00:22:55.680 --> 00:22:58.980
the most amazing thing that
changed, transformed my programming life.

413
00:22:59.370 --> 00:23:03.330
They had F one, I
remember programming without effluent and

414
00:23:03.330 --> 00:23:06.000
then finding F one, it
was like manna from heaven

415
00:23:06.370 --> 00:23:08.970
that changed my programming lights
for formats. And tell us

416
00:23:08.970 --> 00:23:13.290
that. Definitely. And then, so
in the 92 or after

417
00:23:13.290 --> 00:23:15.690
that, that's when isn't that,
when we started getting IntelliSense,

418
00:23:16.050 --> 00:23:19.770
I mean, when did we
get that VB? So I

419
00:23:19.770 --> 00:23:23.700
was never, I tried programming
visual basic several times as

420
00:23:23.700 --> 00:23:26.640
a comp program. Right. I
had starting in VB four,

421
00:23:26.640 --> 00:23:33.090
VB five right now. And
I subsequently I've learned why

422
00:23:33.090 --> 00:23:35.400
without the subclass thing, I
just can't factor my code

423
00:23:35.400 --> 00:23:37.740
properly. So that's why I
could never be a VB

424
00:23:38.220 --> 00:23:41.640
six or below programmer. Right.
Right. Because the, the, the,

425
00:23:41.640 --> 00:23:45.170
the comfortable, we're not quite
object oriented. We're hiding because

426
00:23:45.170 --> 00:23:48.080
the entire purpose, I said
this before the entire point

427
00:23:48.080 --> 00:23:51.320
of visual, basic as a
language was to lie to

428
00:23:51.320 --> 00:23:54.110
the developer and say, you
know, making, you know, don't

429
00:23:54.110 --> 00:23:56.630
look behind the curtain comm
doesn't exist, blah, blah, blah.

430
00:23:56.660 --> 00:23:58.070
I can't hear you. We'd
like to think of it

431
00:23:58.070 --> 00:24:01.760
as a layer of abstraction
as opposed to lie. I

432
00:24:01.760 --> 00:24:03.890
like to think of it
as the matrix. There you

433
00:24:03.890 --> 00:24:06.260
go. Yes. Because what was
the first thing you wanted

434
00:24:06.260 --> 00:24:08.360
to do when you were
a hardcore video programmers, call

435
00:24:08.370 --> 00:24:12.440
Dan Appleman and get the
VBX message Cracker, right. It's

436
00:24:12.440 --> 00:24:14.510
control and see, what's really
going on. Getting back to

437
00:24:14.510 --> 00:24:17.150
the matrix analogy, the value
of visual basic is it

438
00:24:17.150 --> 00:24:20.150
actually show you shows you
the blondes, brunettes and redheads,

439
00:24:20.450 --> 00:24:22.460
as opposed to making you
imagine it though, you have

440
00:24:22.460 --> 00:24:27.200
to C plus plus nice
matrix. So I would say

441
00:24:27.200 --> 00:24:31.190
that IntelliSense and now I
am completely spoiled unless a

442
00:24:31.190 --> 00:24:34.100
language or a data format
or whatever it is I

443
00:24:34.100 --> 00:24:37.790
have to type has IntelliSense.
I reject it out of

444
00:24:37.790 --> 00:24:39.290
hand. So you're not going
to go to Ruby and

445
00:24:39.290 --> 00:24:41.690
tell this Ruby and tell
us exactly. Right. And you're

446
00:24:41.690 --> 00:24:44.630
not ashamed to say that
with your coming out because

447
00:24:44.630 --> 00:24:48.290
people think that program is
supposed to be hard squiggly

448
00:24:48.290 --> 00:24:50.450
lines underneath my know. It's
hard enough to make it

449
00:24:50.450 --> 00:24:54.680
work, let alone without, I
mean, the way I learn

450
00:24:54.680 --> 00:24:58.070
how to program anything. Cause
there's so much functionality in

451
00:24:58.070 --> 00:25:01.450
the world, right. I mean,
I'm a reflector if I

452
00:25:01.520 --> 00:25:04.700
didn't have reflector, but forget
about it. I mean, reflectors.

453
00:25:04.700 --> 00:25:06.980
Awesome. Oh yeah. Don't get
me wrong. And I hear,

454
00:25:07.190 --> 00:25:10.220
I hear somebody in a
Microsoft meeting bring up the

455
00:25:11.390 --> 00:25:14.360
reflector at least once an
hour. It just, it is

456
00:25:14.360 --> 00:25:18.440
that useful a tool in
that prevalent. I was in

457
00:25:18.440 --> 00:25:20.420
a review the other day
and Don said, I don't

458
00:25:20.420 --> 00:25:21.670
want to see the code.
Just bring it up in

459
00:25:21.680 --> 00:25:25.310
reflector. He just wanted to
see the right the wrong

460
00:25:25.310 --> 00:25:30.380
way. So, so reflection is
a big deal, but reflector

461
00:25:30.830 --> 00:25:32.570
there's. I was thinking about
this the other day, cause

462
00:25:32.570 --> 00:25:35.360
I've been doing power scripts
a little bit PowerShell, PowerShell.

463
00:25:35.360 --> 00:25:39.860
Thank you. There are so
many, there's so much existing

464
00:25:39.860 --> 00:25:42.800
functionality on my box. If
I had some way to

465
00:25:42.800 --> 00:25:45.860
list all of the DLL
calls I could make and

466
00:25:45.860 --> 00:25:48.980
all of the duck, I
could call them and line

467
00:25:48.980 --> 00:25:52.640
arguments and, and all of
the calm objects and all

468
00:25:52.640 --> 00:25:56.030
of the.net classes and big
surface area, it's a huge

469
00:25:56.030 --> 00:25:59.090
surface area. And so if
I'm going to navigate that

470
00:25:59.090 --> 00:26:02.510
surface area, I want some
help. And the help, the

471
00:26:02.510 --> 00:26:05.150
thing I do is I
go, well, I'm going to,

472
00:26:05.180 --> 00:26:09.850
I think in system dot
networking is something I want.

473
00:26:09.860 --> 00:26:12.560
So system that networking dot,
Oh wait, here's the thing.

474
00:26:13.220 --> 00:26:19.060
And that's how I learned
<inaudible>. This is Lawrence Ryan tune

475
00:26:19.060 --> 00:26:21.100
in next week for part
two of this discussion with

476
00:26:21.100 --> 00:26:30.910
guest Chris cells right here,
<inaudible>.

