WEBVTT FILE

1
00:00:00.750 --> 00:00:03.900
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.900 --> 00:00:06.870
they make the show possible.
Today's show is sponsored by

3
00:00:06.870 --> 00:00:11.040
developer express, become a UI
superhero with dev express controls

4
00:00:11.040 --> 00:00:15.570
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.960 --> 00:00:20.040
by leveraging your existing knowledge,
you can build next generation

6
00:00:20.070 --> 00:00:24.150
touch enabled solutions for tomorrow,
you can download your free

7
00:00:24.270 --> 00:00:34.500
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com.
One more thing. Let me

8
00:00:34.500 --> 00:00:37.770
tell you about a new
sponsor gun. If you're wanting

9
00:00:37.770 --> 00:00:40.800
to detect and diagnose errors
and crashes in your software,

10
00:00:40.830 --> 00:00:43.650
even find problems that you
didn't know existed to improve

11
00:00:43.650 --> 00:00:46.920
your software and Reagan might
be perfect for you. You

12
00:00:46.940 --> 00:00:49.020
had a few lines of
code your application, and in

13
00:00:49.020 --> 00:00:52.230
minutes, you'll get real time
error reports with all the

14
00:00:52.230 --> 00:00:55.320
information that you need to
fix bugs fast, you can

15
00:00:55.320 --> 00:00:58.230
even hook it up to
your team chat, bug tracking

16
00:00:58.230 --> 00:01:02.790
development, workflow tools, Reagan covers
all major web and mobile

17
00:01:02.790 --> 00:01:07.500
programming languages, including.net, the full
Xamarin stack JavaScript, and many

18
00:01:07.500 --> 00:01:13.020
more. Go check out Reagan
today@reagan.io. I use this myself

19
00:01:13.050 --> 00:01:16.860
on my little startup and
I really, really recommend this

20
00:01:16.860 --> 00:01:19.590
product. It is a great,
great product. Check it out.

21
00:01:20.010 --> 00:01:41.100
Ray gun@reagan.io. <inaudible> from hanselminutes.com.
It's Hanselman. It's a weekly

22
00:01:41.100 --> 00:01:45.480
discussion with web developer and
technologist Scott Hanselman. This is

23
00:01:45.480 --> 00:01:50.130
Lawrence Ryan announcing show number four
76. In this episode, Scott

24
00:01:50.130 --> 00:01:54.030
talks with Cassandra perch about
getting started making node bots

25
00:01:54.090 --> 00:02:00.090
and wearables. Hi, this is
Scott Hanselman. This is another

26
00:02:00.090 --> 00:02:02.670
episode of Hansel minutes and
on the phone we've got

27
00:02:02.910 --> 00:02:06.420
Cassandra perse, the node botanist
and educator and mad scientist

28
00:02:06.420 --> 00:02:09.210
at Boku and an expert
on node bots. And I'm

29
00:02:09.210 --> 00:02:11.970
very, very excited to be
talking to you today. Thanks.

30
00:02:13.110 --> 00:02:16.050
So people actually, you just
had a book come out

31
00:02:16.260 --> 00:02:19.320
with a whole group of
people called make JavaScript robotics.

32
00:02:19.740 --> 00:02:21.330
This is a brand new
book coming out this week.

33
00:02:21.950 --> 00:02:24.710
Yeah, it just came out
last Friday. I'm really excited

34
00:02:24.710 --> 00:02:27.650
about it. It's a really,
it's really a compendium of

35
00:02:27.650 --> 00:02:30.890
a bunch of different projects
from a really great cast

36
00:02:30.890 --> 00:02:34.010
of people. And yeah, it's
really great. So is each

37
00:02:34.010 --> 00:02:38.390
chapter and individual pro Yes.
Each chapter goes into a

38
00:02:38.390 --> 00:02:41.390
different platform of node bot
or a different scale. And

39
00:02:41.390 --> 00:02:44.210
so you can build, I
think something like 12 different

40
00:02:44.210 --> 00:02:48.020
projects with eight or nine
different types of a node

41
00:02:48.020 --> 00:02:51.170
bot. Is this something that's
like advanced that like maybe

42
00:02:51.170 --> 00:02:52.910
only a programmer would look
at or could I get

43
00:02:52.910 --> 00:02:54.860
this with my kids? And
we could just, is this

44
00:02:54.860 --> 00:02:58.760
accessible? I think there's a
couple projects that would be

45
00:02:58.760 --> 00:03:01.780
good for, but most of
the projects are more aimed

46
00:03:01.780 --> 00:03:05.110
at folks who are already
programming and already building things.

47
00:03:05.520 --> 00:03:08.850
Okay. So some familiarity with
programming and, you know, be

48
00:03:08.860 --> 00:03:13.530
able to turn a computer
on why is it that

49
00:03:13.530 --> 00:03:16.830
you are so excited about
JavaScript as it relates to

50
00:03:16.830 --> 00:03:19.500
robots because people have been
programming robots forever, but why

51
00:03:19.500 --> 00:03:22.980
does JavaScript and node make
robots so much more accessible?

52
00:03:23.520 --> 00:03:26.250
Oh, that's a great question.
A lot of it has

53
00:03:26.250 --> 00:03:28.920
to do with the fact
that a lot of, a

54
00:03:28.920 --> 00:03:30.510
lot of people see C
and C plus plus as

55
00:03:30.510 --> 00:03:34.830
an accessible, especially nowadays where
folks are being educated, not

56
00:03:34.830 --> 00:03:37.140
in C or in a
low level language, but they're

57
00:03:37.140 --> 00:03:39.900
being educated and things like
Python or Java where they,

58
00:03:40.100 --> 00:03:42.840
they have a good grasp
of abstract languages as soon

59
00:03:42.840 --> 00:03:45.030
as they get out of
school. And they feel that

60
00:03:45.030 --> 00:03:48.210
those lower level languages are
inaccessible. I think JavaScript in

61
00:03:48.210 --> 00:03:51.240
particular is a very easy
to adapt to language. And

62
00:03:51.240 --> 00:03:54.420
so it's great that we
can write robotics without having

63
00:03:54.420 --> 00:03:58.230
to get into the deep
code without getting into these

64
00:03:58.410 --> 00:04:00.480
assembly languages that can seem
cryptic to a lot of

65
00:04:00.480 --> 00:04:03.390
people. It seems like for
me, when I was learning

66
00:04:03.390 --> 00:04:05.820
see years ago, it was
always the memory management that

67
00:04:05.820 --> 00:04:07.620
was like, why am I
dealing with that? I thought

68
00:04:07.620 --> 00:04:09.480
we were moving a robot
from left to right. And

69
00:04:09.480 --> 00:04:12.150
now you're telling me I
have to Malik. Oh yeah,

70
00:04:12.180 --> 00:04:15.840
definitely. A memory management is
a huge issue that is

71
00:04:15.840 --> 00:04:18.750
taken care of when you
write with a higher level

72
00:04:18.750 --> 00:04:22.020
language like Java. And is
there an aspect of the

73
00:04:22.020 --> 00:04:25.620
events concepts around like how
node works like that an

74
00:04:25.620 --> 00:04:28.800
event shows up and event
driven programming? Does that change

75
00:04:28.800 --> 00:04:33.480
things? Yeah, Definitely. It, it
moves a lot of trying

76
00:04:33.480 --> 00:04:35.700
to wrap your head around
interrupts. It can be tricky,

77
00:04:35.700 --> 00:04:38.220
but wrapping your head around
an event system, especially if

78
00:04:38.220 --> 00:04:40.260
you're already a web developer
and you deal with events

79
00:04:40.260 --> 00:04:44.370
all day. Moving into that
with robotics is definitely Chris

80
00:04:44.370 --> 00:04:47.160
Williams does a couple of
really great talks and has

81
00:04:47.160 --> 00:04:48.990
a couple of really great
blog posts about why the

82
00:04:48.990 --> 00:04:53.640
vented system and JavaScript adapts
so well to rebel. What

83
00:04:53.640 --> 00:04:55.410
do I do I need,
do I need to go

84
00:04:55.410 --> 00:04:59.280
and buy like a robot
kit or can I simulate

85
00:04:59.280 --> 00:05:01.620
a robot? It gets started
like, what's the hello world

86
00:05:01.830 --> 00:05:06.390
for a node bot? Yeah.
Some folks are working on

87
00:05:06.390 --> 00:05:09.300
simulations with robotics, but right
now the best way to

88
00:05:09.300 --> 00:05:12.030
go about it is to
get an Arduino UNO or

89
00:05:12.360 --> 00:05:15.720
some form of Arduino board.
Luckily these can be very

90
00:05:16.170 --> 00:05:19.230
cost efficient. You can get
a scene smart, which is

91
00:05:19.230 --> 00:05:23.460
a, an Arduino compatible board
for about $15 on Amazon.

92
00:05:23.490 --> 00:05:26.490
And you can get a
pack of components for about

93
00:05:26.490 --> 00:05:29.460
five bucks that will allow
you to do the basics.

94
00:05:29.880 --> 00:05:32.040
The hello world program would
be kind of the, the

95
00:05:32.040 --> 00:05:35.580
blinking of the onboard led.
So there's one led on

96
00:05:35.580 --> 00:05:38.760
Ardwino who knows that users
can control. And so the

97
00:05:38.760 --> 00:05:41.310
Johnny five, hello world sketches,
basically you plug in your

98
00:05:41.310 --> 00:05:43.860
board and you run a
sketch that blinks, that led

99
00:05:43.860 --> 00:05:45.600
to tell you that the
board is working and the

100
00:05:45.600 --> 00:05:50.220
computers is communicating with it
properly. When I did some

101
00:05:50.220 --> 00:05:54.810
basic Arduino myself, that language
and that, that word that

102
00:05:54.810 --> 00:05:57.920
you just used sketch, that's
kind of a C language.

103
00:05:57.950 --> 00:06:00.230
Can you explain the relationship
between our Dean or do

104
00:06:00.230 --> 00:06:02.900
we know the sketches? And
then when does the higher

105
00:06:02.900 --> 00:06:07.120
level JavaScript come in? That's
a great question. So what

106
00:06:07.120 --> 00:06:08.920
a sketch is in the
terms of the age, we

107
00:06:08.920 --> 00:06:11.080
know world is a piece
of a C, C plus

108
00:06:11.080 --> 00:06:14.380
plus, or a lower level,
or even processing that you

109
00:06:14.380 --> 00:06:18.100
can load directly onto the
Arduino board that runs where

110
00:06:18.100 --> 00:06:20.890
JavaScript comes in as you
load what's, it's a very

111
00:06:20.890 --> 00:06:23.560
special sketch gets kind of
out an OSTP of sorts

112
00:06:23.560 --> 00:06:26.470
called fermata. And what for
Mada does is it allows

113
00:06:26.470 --> 00:06:30.040
the board to run through
communications on the serial port,

114
00:06:30.040 --> 00:06:32.560
which in our case is
USB ports from our computer.

115
00:06:33.010 --> 00:06:35.350
What Johnny five does, is
it uses for Mada and

116
00:06:35.350 --> 00:06:37.600
you write a Johnny five.
I called them sketches. A

117
00:06:37.600 --> 00:06:39.940
lot of people just call
them programs. But what it

118
00:06:39.940 --> 00:06:42.310
does is it communicates with
the fermata on the board

119
00:06:42.310 --> 00:06:45.430
and send special instructions to
cue, to basically translate your

120
00:06:45.430 --> 00:06:48.850
JavaScript commands into commands that
are run on the board.

121
00:06:49.510 --> 00:06:54.370
I see. So it makes
the Arduino a, a terminal

122
00:06:54.370 --> 00:06:57.100
of sorts, a receiver. So
rather than becoming the brain,

123
00:06:57.100 --> 00:07:00.760
it becomes the listener. Yes.
The Ardwino essentially becomes a

124
00:07:00.760 --> 00:07:03.280
thin client that just waits
for instructions from the serial

125
00:07:03.280 --> 00:07:06.880
port. Now, is that a,
is that a good thing?

126
00:07:07.030 --> 00:07:09.820
Like I could see someone
saying, well, wait, I thought

127
00:07:09.850 --> 00:07:11.680
that the robot was going
to be smart, but now

128
00:07:11.680 --> 00:07:14.320
the robot is an extension
of a computer that I

129
00:07:14.320 --> 00:07:17.290
have to have somewhere else.
It definitely can be seen

130
00:07:17.290 --> 00:07:20.230
as a limitation that you
have to tether your arch.

131
00:07:20.240 --> 00:07:23.320
We know to a computer
that's running node, but with

132
00:07:23.350 --> 00:07:26.590
new platforms that are coming
out by the day, there

133
00:07:26.590 --> 00:07:29.920
are actually now platforms that
run a node on it,

134
00:07:29.920 --> 00:07:32.830
much like the BeagleBone black
or the raspberry PI that

135
00:07:32.830 --> 00:07:35.530
run Linux and note on
the board, you can actually

136
00:07:35.530 --> 00:07:38.290
run Johnny five with those
and you don't have to

137
00:07:38.290 --> 00:07:40.960
tether it. It's just running
directly on the BeagleBone or

138
00:07:40.960 --> 00:07:44.470
on the raspberry PI. And
then there are microcontrollers that

139
00:07:44.470 --> 00:07:47.440
now run JavaScript, natively, such
as the Tesla, which has

140
00:07:47.440 --> 00:07:49.600
been out for awhile and
the SQL, the TESL two

141
00:07:49.600 --> 00:07:51.730
is about to come out.
I'm really excited about that.

142
00:07:51.970 --> 00:07:55.840
And the Esperino, which runs,
it's a very modified version

143
00:07:55.900 --> 00:07:59.950
of, of what looked like
a client side JavaScript, but

144
00:07:59.950 --> 00:08:01.870
it's definitely still an application
that you could use if

145
00:08:01.870 --> 00:08:05.020
you wanted to break the
tether up. And the TESL

146
00:08:05.020 --> 00:08:07.750
too, that you said you're
excited about that comes out

147
00:08:07.750 --> 00:08:10.060
later this year, and it's
only going to be $35.

148
00:08:10.630 --> 00:08:13.810
Yes. That's definitely one of
the biggest things I'm excited

149
00:08:13.810 --> 00:08:17.440
about. They've managed to make
it more powerful, more useful

150
00:08:17.440 --> 00:08:19.540
and cheaper all at the
same time. Oh, and smaller.

151
00:08:20.050 --> 00:08:24.490
I'm really excited about that.
And they're working, they're working

152
00:08:24.490 --> 00:08:26.680
really hard to make it
a great price. Yeah. It

153
00:08:26.680 --> 00:08:29.050
looks like it's got 64
megs of Ram. It's got

154
00:08:29.050 --> 00:08:31.660
a nice little processor. It's
going to do everything that

155
00:08:31.660 --> 00:08:33.670
we needed. Two USB ports.
And the part that I

156
00:08:33.670 --> 00:08:35.800
think is the most interesting,
at least in the context

157
00:08:35.800 --> 00:08:38.170
of robots is it's going
to have wifi on the

158
00:08:38.170 --> 00:08:41.860
thing, which is, I think
important. Yeah. The Tesla one

159
00:08:41.860 --> 00:08:45.160
actually has a wifi chip
as well. A few other

160
00:08:45.160 --> 00:08:48.580
platforms like spark. However, the
big update is going to

161
00:08:48.580 --> 00:08:51.520
be, they're moving from a
Texas instruments, wifi chip, which

162
00:08:51.520 --> 00:08:55.530
has been riddled with issues
into, I believe, sparks moving

163
00:08:55.530 --> 00:08:57.570
to the Broadcom chip. And
I'm not sure which one

164
00:08:57.570 --> 00:08:59.940
the tussle is moving to,
but both of these chips

165
00:08:59.970 --> 00:09:02.940
are much more stable and
much more easier to interact

166
00:09:02.940 --> 00:09:06.780
with the, the, I believe
it's called the CC 3000

167
00:09:06.780 --> 00:09:09.570
has just been a huge
issue in terms of reliability.

168
00:09:09.570 --> 00:09:11.460
And I'm really glad to
see that we have options

169
00:09:11.460 --> 00:09:15.620
now. Yeah. I'm not as
familiar with the details as

170
00:09:15.620 --> 00:09:17.960
you are, but I know
that I recognize the names

171
00:09:18.020 --> 00:09:20.350
like Broadcom and I know
that on my laptop. So

172
00:09:20.350 --> 00:09:25.280
those have been very reliable.
Yeah. Broadcom. The problem was

173
00:09:26.150 --> 00:09:28.100
if I believe, if I
remember correctly was, had to

174
00:09:28.100 --> 00:09:30.830
do with open sourcing and
drivers, and I believe rod

175
00:09:30.830 --> 00:09:33.080
comes to me and some
really good steps into allowing

176
00:09:33.080 --> 00:09:36.200
drivers to be written by
other parties. And I believe

177
00:09:36.200 --> 00:09:38.270
that was really the breakthrough
that allowed that technology to

178
00:09:38.270 --> 00:09:41.120
move on to. So as
a newbie, when I get

179
00:09:41.120 --> 00:09:43.460
into this, how much of
these kinds of details do

180
00:09:43.460 --> 00:09:45.500
I need to know about
and how much time can

181
00:09:45.500 --> 00:09:48.650
I spend up in the
node high level, I'm moving

182
00:09:48.650 --> 00:09:52.190
a robot around versus the
man I'm getting flaky wifi,

183
00:09:52.370 --> 00:09:53.840
or I need to go
and get new drivers for

184
00:09:53.840 --> 00:09:58.610
this or that. Yeah. Luckily
my answer now is much

185
00:09:58.610 --> 00:10:00.920
better than it was a
few months, Really, even as,

186
00:10:00.980 --> 00:10:04.340
even as recently as a
few months ago. Yes. Even

187
00:10:04.340 --> 00:10:06.740
the, that there actually was
a firmware update to the

188
00:10:06.740 --> 00:10:09.200
chips that I mentioned that
were a little bit unreliable

189
00:10:09.200 --> 00:10:12.230
that has made them much
more reliable. The only problems

190
00:10:12.230 --> 00:10:14.690
we really have now are
when we do hackathons and

191
00:10:14.690 --> 00:10:16.550
we have 30 chips in
the same room, there's a

192
00:10:16.550 --> 00:10:18.560
little bit of an issue,
but just for the average

193
00:10:18.560 --> 00:10:21.050
user that buys a board,
brings it home and runs

194
00:10:21.050 --> 00:10:24.230
it. It's gotten a lot
more stable. Luckily, a software

195
00:10:24.230 --> 00:10:27.260
update managed to repair a
lot of the issues as

196
00:10:27.260 --> 00:10:30.980
long as you're just using
one border. So I've heard

197
00:10:30.980 --> 00:10:34.010
you say spark and they
have the core and photon

198
00:10:34.020 --> 00:10:37.670
electron, I've heard you say
TESL raspberry PI, which I'm

199
00:10:37.670 --> 00:10:41.600
familiar with. And also our
Duino, that's quite a diverse

200
00:10:42.350 --> 00:10:45.980
group of different systems. All
of them are running the

201
00:10:45.980 --> 00:10:48.560
same libraries and using node
in the same kind of

202
00:10:48.560 --> 00:10:53.270
way. That's the best part
you have options. So my,

203
00:10:53.300 --> 00:10:56.210
one of my favorites is
definitely Johnny five, because you

204
00:10:56.210 --> 00:10:58.790
can run the same code
on all of the aforementioned

205
00:10:58.790 --> 00:11:03.320
platforms. And even more, the,
the Johnny five.io website just

206
00:11:03.320 --> 00:11:04.970
came out a few weeks
ago and it shows all

207
00:11:04.970 --> 00:11:08.300
the platforms that it's available
for. And you can use

208
00:11:08.300 --> 00:11:11.000
Johnny five with all these
platforms, with the BeagleBone or

209
00:11:11.000 --> 00:11:13.340
the raspberry PI, you can
just run node natively and

210
00:11:13.340 --> 00:11:16.760
there's libraries to control the
GPIO pins. The Tesla has

211
00:11:16.760 --> 00:11:19.580
its own library set up,
but yeah, that's the best

212
00:11:19.580 --> 00:11:22.880
part is you with Johnny
five, you can get started

213
00:11:22.880 --> 00:11:25.010
immediately without knowing a lot
of the details of the

214
00:11:25.010 --> 00:11:28.040
board that you're using, especially
because the documentation is just

215
00:11:28.040 --> 00:11:30.860
so fantastic. Especially with the
new website, they made it

216
00:11:30.860 --> 00:11:34.130
look a lot prettier. So
yeah. Yeah. I'm going to

217
00:11:34.130 --> 00:11:36.020
put links to all of
this in the show notes,

218
00:11:36.050 --> 00:11:38.660
but Johnny five, is it
J O H N N

219
00:11:38.660 --> 00:11:43.370
y-five.io. And I think it's
so funny that the people,

220
00:11:44.060 --> 00:11:46.100
particularly people like my kids
that are going to start

221
00:11:46.100 --> 00:11:48.710
doing this kind of stuff
will have no idea who

222
00:11:48.710 --> 00:11:51.050
Johnny five was or why
he was one of our

223
00:11:51.050 --> 00:11:55.090
great heroes. I actually hadn't
seen The movie until I

224
00:11:55.090 --> 00:11:58.120
started working with the library.
I then saw the movie

225
00:11:58.620 --> 00:12:00.480
Didn't that immediately make you
want to build a Johnny

226
00:12:00.480 --> 00:12:02.160
five? Like, that's the thing
about Johnny class? Like, I

227
00:12:02.160 --> 00:12:03.720
must have one and he's
like our two, you know,

228
00:12:03.720 --> 00:12:07.110
we need one in the
garage. Yeah. Some of the

229
00:12:07.110 --> 00:12:10.230
work that's been done with
hexapod is by Rick Waldron

230
00:12:10.230 --> 00:12:13.950
and Donovan buck has been
amazing. And I would definitely

231
00:12:13.980 --> 00:12:16.650
take a look at Donovan,
did a talk for, it

232
00:12:16.650 --> 00:12:20.460
was either empire JS or
an empire note on his

233
00:12:20.460 --> 00:12:23.610
hexapod and it walks and
dances and responds to commands.

234
00:12:23.610 --> 00:12:26.610
And it's, it's amazing what
you can do with node

235
00:12:26.610 --> 00:12:30.630
routes. At this point, I
specialize in wearables and I

236
00:12:30.630 --> 00:12:32.730
now have two outfits that
are going to be ready

237
00:12:32.730 --> 00:12:35.490
for JS comp that are
all powered by JavaScript. And

238
00:12:35.490 --> 00:12:37.800
so I'll be all lit
up and, and sensor fired

239
00:12:37.850 --> 00:12:42.180
and internet of things as
my sibling put it that.

240
00:12:42.630 --> 00:12:45.600
Yeah, it's going to be
interesting. That's fantastic. And hexapod

241
00:12:45.600 --> 00:12:48.090
for people who may not
be familiar, are there spider

242
00:12:48.090 --> 00:12:52.650
robots, basically robots that have
six legs. So you said

243
00:12:52.650 --> 00:12:55.800
that you're specializing in wearables
and you mentioned sensors. How

244
00:12:55.800 --> 00:12:58.630
many kinds of sensors can
one bring in to their,

245
00:12:58.630 --> 00:13:02.850
their node bot? Oh wow.
That's growing by the day,

246
00:13:03.450 --> 00:13:06.720
Johnny five alone supports I
think 25 to 20, 25

247
00:13:06.720 --> 00:13:10.710
to 35 different types of
sensors. And we just cracked,

248
00:13:10.710 --> 00:13:13.830
I squared C support on
a bunch of platforms which

249
00:13:13.830 --> 00:13:16.110
opens up a whole new.
So what does that mean?

250
00:13:16.110 --> 00:13:18.720
What does I square C
I squared C is a

251
00:13:18.720 --> 00:13:21.510
different type of, of a
protocol. So basically when you

252
00:13:21.510 --> 00:13:24.060
have a standard sensor, you
plug it into one analog

253
00:13:24.060 --> 00:13:27.090
input and you basically determine
the voltage to be the

254
00:13:27.090 --> 00:13:30.360
sensor reading with I squared
C each device has an

255
00:13:30.360 --> 00:13:33.420
address and you can plug
multiple devices into the same

256
00:13:33.420 --> 00:13:36.360
three pins. And so you
say, I want to read

257
00:13:36.390 --> 00:13:39.000
this from this address in
order to say, to, in

258
00:13:39.000 --> 00:13:41.280
order to differentiate between all
of the devices that are

259
00:13:41.280 --> 00:13:43.650
on the same pins. So
not only can you fit

260
00:13:43.740 --> 00:13:46.290
as many sensors as you
can power on to just

261
00:13:46.290 --> 00:13:49.470
a couple of pins, but
you can also a lot

262
00:13:49.470 --> 00:13:51.720
of devices now come in.
I squared C that have

263
00:13:51.720 --> 00:13:55.530
so much more capability on
one little board. For instance,

264
00:13:55.530 --> 00:13:59.190
accelerometers really start to shine
in, I squared C because

265
00:13:59.190 --> 00:14:01.590
you've got all these different
readings. And instead of using

266
00:14:01.590 --> 00:14:03.870
one pin for each reading,
you just use ice squared.

267
00:14:03.870 --> 00:14:05.700
See if you just got
the same three pins and

268
00:14:05.700 --> 00:14:07.350
you get the data in
a nice little bite packet.

269
00:14:08.100 --> 00:14:11.190
Okay. So there's a little
like my brain is exploding,

270
00:14:11.190 --> 00:14:12.720
cause there's so much good
information there. Let me see

271
00:14:12.720 --> 00:14:14.520
if I can paraphrase some
of that. And you tell

272
00:14:14.520 --> 00:14:16.620
me if I got it
right. So I know with

273
00:14:16.620 --> 00:14:20.190
my Arduino, I can stack
the shields, right? I can

274
00:14:20.190 --> 00:14:21.750
have my Arduino and I
can put stuff on top

275
00:14:21.750 --> 00:14:24.630
of them, but I do
have to, at least before

276
00:14:24.630 --> 00:14:26.760
you just told me this,
I have to be aware

277
00:14:26.760 --> 00:14:30.450
of what's on what pin
you're telling me that I

278
00:14:30.450 --> 00:14:33.120
squared C and people can
search for that using the

279
00:14:33.120 --> 00:14:36.000
letter I, the number two
and the literacy, I to

280
00:14:36.000 --> 00:14:39.240
see ice cream, see that
this is a way of

281
00:14:39.360 --> 00:14:42.540
kind of multiplexing things across
one pin. It lets you

282
00:14:42.540 --> 00:14:45.330
not worry so much about
that. In fact, a lot

283
00:14:45.330 --> 00:14:47.520
of shields use ice square
at sea. So that's how

284
00:14:47.520 --> 00:14:49.860
you're able to stack those
shields is each shield has

285
00:14:49.860 --> 00:14:52.790
its own address. And so
it's using your, I squared

286
00:14:52.790 --> 00:14:55.450
C pins and it has
its own address so that

287
00:14:55.490 --> 00:14:57.940
you can use as many
shields as you can. So

288
00:14:57.940 --> 00:15:00.100
should I go through my
shields that I've got in

289
00:15:00.100 --> 00:15:03.130
my, in my closet here
and maybe kind of put

290
00:15:03.130 --> 00:15:05.620
the ones that support ice
squared see aside and say,

291
00:15:05.620 --> 00:15:07.000
all right, those are the
best of what I'm going

292
00:15:07.000 --> 00:15:08.290
to be doing. And then
maybe the other ones are

293
00:15:08.290 --> 00:15:11.770
older shields that I might
not need. Maybe a, what

294
00:15:11.770 --> 00:15:13.990
I would definitely do is
check Johnny five support. If

295
00:15:13.990 --> 00:15:16.420
you're looking for doing with
node, I would definitely check

296
00:15:16.420 --> 00:15:19.270
the Johnny five website and
see what shields are already

297
00:15:19.270 --> 00:15:21.970
supported. And then out of
that, if outside of that,

298
00:15:22.150 --> 00:15:24.370
if it's not supported yet,
I would definitely take a

299
00:15:24.370 --> 00:15:27.700
look at implementing it. I
squared C once you get

300
00:15:27.700 --> 00:15:31.660
the addresses and figure out
what's going on, you can

301
00:15:31.720 --> 00:15:34.870
implement, I squared C in
Johnny five fairly easily, and

302
00:15:34.870 --> 00:15:36.880
you can end up putting
a pull request back to

303
00:15:36.880 --> 00:15:39.730
the repo. Oh, there you
go. So I'm up here

304
00:15:39.730 --> 00:15:42.670
on the Johnny five website,
which is, you know, in

305
00:15:42.670 --> 00:15:44.590
seriously, you know, we've all
seen a lot of websites.

306
00:15:44.590 --> 00:15:46.090
You know, everyone looks at
a website and like, Oh,

307
00:15:46.090 --> 00:15:50.020
this is bootstrap. This is
a gorgeous website. I actually

308
00:15:50.020 --> 00:15:53.200
did a little work on
it. I'm look, I just

309
00:15:53.200 --> 00:15:56.680
clicked on platform support. And
there's this grid of all

310
00:15:56.680 --> 00:16:00.010
the different Arduinos that it
supports. And of course being

311
00:16:00.010 --> 00:16:02.020
the jaded old web person
than I am, I'm like,

312
00:16:02.050 --> 00:16:04.780
Oh, here's some clip art.
I click on them. And

313
00:16:04.780 --> 00:16:08.050
I go to this fantastic
page called platform support. And

314
00:16:08.050 --> 00:16:11.080
it lists out dozens and
dozens and dozens of different

315
00:16:11.080 --> 00:16:15.280
devices with a clear yes
and no about what that

316
00:16:15.280 --> 00:16:19.480
device supports. It is just
fantastic. Yeah. That a lot

317
00:16:19.480 --> 00:16:21.850
of that work was Rick
Waldron. So that's one of

318
00:16:21.850 --> 00:16:23.620
the things I have to
say about my employer is

319
00:16:23.830 --> 00:16:26.470
this was a project that,
that my employer actually gave

320
00:16:26.470 --> 00:16:29.340
us time to do. They're
a huge supporter, but who

321
00:16:29.410 --> 00:16:31.780
a huge supporter of the
node box movement. Rick works

322
00:16:31.780 --> 00:16:35.950
there. I worked there and
Rick and Matt Marcie, and

323
00:16:35.950 --> 00:16:38.860
I all worked on that
website to, to make it

324
00:16:38.860 --> 00:16:41.470
shine and make it look
great because previously we were

325
00:16:41.470 --> 00:16:45.160
using GitHub wikis and that
was getting a little unmaintainable.

326
00:16:45.160 --> 00:16:48.430
So we moved to a
full website and yeah, our

327
00:16:48.430 --> 00:16:50.920
designer did a great job
of, of, of tying things

328
00:16:50.920 --> 00:16:53.830
together. And I really like
how the website. Yeah. I

329
00:16:53.830 --> 00:16:55.630
mean, it's not just that
it's pretty, but the idea

330
00:16:55.630 --> 00:16:58.180
that it's, it's got the
answers I want. I mean,

331
00:16:58.180 --> 00:17:00.400
it's like, I have a
device it's sitting right next

332
00:17:00.400 --> 00:17:01.930
to me. I don't know
what it's come kind of

333
00:17:01.930 --> 00:17:04.570
older Arduino. I go on,
I go up here. I

334
00:17:04.600 --> 00:17:07.930
like, Oh, there it is.
RDO mega. And suddenly I

335
00:17:07.930 --> 00:17:09.580
feel like I can do
this now. Like, you know,

336
00:17:09.580 --> 00:17:11.020
I may have a node
bot running by the end

337
00:17:11.020 --> 00:17:13.750
of the day. Yeah. That's
the best part about Johnny

338
00:17:13.750 --> 00:17:17.740
five? The community cares so
much about documentation and they

339
00:17:17.740 --> 00:17:20.830
see, I remember one time
we were, we were on

340
00:17:20.830 --> 00:17:22.990
IRC and someone said, well,
I haven't really contributed to

341
00:17:22.990 --> 00:17:25.900
Johnny five. I just put
docs in. And Rick immediately

342
00:17:25.900 --> 00:17:27.880
jumped in and said, no,
that means you've contributed to

343
00:17:27.880 --> 00:17:31.390
Johnny five because without our
documentation, we would be just,

344
00:17:31.420 --> 00:17:33.910
we would be useless because
everybody would look at the

345
00:17:33.910 --> 00:17:36.760
library and say, well, I
can't use that. And our

346
00:17:36.760 --> 00:17:39.610
documentation is really what makes
us shine as a usable

347
00:17:39.610 --> 00:17:42.670
library. You can, you can
see that in the documentation

348
00:17:42.670 --> 00:17:44.350
that, Oh, I can do
this. This is just a

349
00:17:44.350 --> 00:17:48.790
few lines of JavaScript. And
it supports the boards. What

350
00:17:48.790 --> 00:17:52.700
is this word, Fritz saying
that I hear everywhere. Ah,

351
00:17:52.700 --> 00:17:54.980
yeah. So all of the
diagrams that you see in

352
00:17:54.980 --> 00:17:57.530
the documentation that show you
how to wire things together

353
00:17:57.530 --> 00:17:59.960
are done in Fritz saying,
it's a very great open

354
00:17:59.960 --> 00:18:03.290
source project. That's kind of
CAD software, but it has

355
00:18:03.290 --> 00:18:06.350
all of your components and
all your boards already done

356
00:18:06.350 --> 00:18:09.290
in a, in a, in
a, I call it clipart,

357
00:18:09.290 --> 00:18:11.330
but it looks so much
nicer than clip art kind

358
00:18:11.330 --> 00:18:13.310
of style. They take a
lot of pride in their

359
00:18:13.310 --> 00:18:17.030
graphics. And so it's easy
to diagram out what you've

360
00:18:17.030 --> 00:18:20.120
made in Fritz sing, save
it as a PNG and

361
00:18:20.120 --> 00:18:21.980
upload it to a website.
And that's part of what

362
00:18:21.980 --> 00:18:24.950
makes our documentation shine is
the fact that fritzing works

363
00:18:24.950 --> 00:18:28.730
so well is we can
just kinda quickly write up

364
00:18:28.760 --> 00:18:30.710
what we're doing and throw
it up on the website.

365
00:18:30.710 --> 00:18:32.570
And it makes the doc
so much easier to make

366
00:18:32.630 --> 00:18:34.340
that we don't have to
draw our own boards out.

367
00:18:37.190 --> 00:18:39.200
I want to take a
moment to thank our sponsors,

368
00:18:39.200 --> 00:18:43.100
sync, fusion, sync fusions, mobile
web, and desktop controls are

369
00:18:43.100 --> 00:18:46.100
trusted worldwide, but did you
know that they also provide

370
00:18:46.100 --> 00:18:51.710
educational resources? The succinctly series
of free eBooks has great

371
00:18:51.710 --> 00:18:56.660
content on popular technologies and
100 completely ad free pages.

372
00:18:57.200 --> 00:19:00.530
These books are written by
industry experts and topics range

373
00:19:00.530 --> 00:19:04.460
from Cassandra to no JS
to windows 8.1. They are

374
00:19:04.460 --> 00:19:07.730
available for Kindle apps and
in PDF format and new

375
00:19:07.730 --> 00:19:13.970
eBooks are released each month.
So browse their library@syncfusion.com to

376
00:19:13.970 --> 00:19:18.500
download your free ebook today.
One of the things that

377
00:19:18.500 --> 00:19:21.110
I think turns people off
when they start getting into

378
00:19:21.110 --> 00:19:25.490
electronics are using the standard
electronics diagrams, you know, and

379
00:19:25.490 --> 00:19:28.460
the triangles and stuff. I
mean, I remember doing this

380
00:19:28.460 --> 00:19:32.180
in college, but honestly, I'm
just going to be Googling

381
00:19:32.180 --> 00:19:33.380
for work. And what does
that look? Is that a

382
00:19:33.380 --> 00:19:36.950
resistor and the fritzing diagrams
and the cleanliness of it,

383
00:19:37.310 --> 00:19:39.290
it kind of goes, I'm
sure. I'm sure that there

384
00:19:39.290 --> 00:19:42.170
are purists in E that
are like not okay with

385
00:19:42.170 --> 00:19:44.960
that, but it's so much
more accessible to myself and

386
00:19:44.960 --> 00:19:46.640
for my kids to be
able to put something together

387
00:19:46.640 --> 00:19:50.210
with these. Yeah. I, I
find the, the purists to

388
00:19:50.210 --> 00:19:52.160
be a bit arbitrary. Like
if you're building, if you're

389
00:19:52.160 --> 00:19:54.800
working in any and you're
building a chip, I can

390
00:19:54.800 --> 00:19:57.350
definitely understand the use of
the, the classical style. But

391
00:19:57.350 --> 00:20:00.680
I think for, for applications
such as hobby hobbyist, would

392
00:20:00.680 --> 00:20:03.140
you like, like with Johnny
five, I think fixing a

393
00:20:03.140 --> 00:20:04.940
really makes it a lot
more accessible and a lot

394
00:20:04.940 --> 00:20:07.700
easier to read. Yeah. It's
so it's so important. I

395
00:20:07.760 --> 00:20:10.310
work with my 13 year
old nephew recently to hook

396
00:20:10.310 --> 00:20:12.800
up an led to a
raspberry PI. I think we

397
00:20:12.800 --> 00:20:14.930
spent probably four hours trying
to do this, just to

398
00:20:14.930 --> 00:20:17.220
get the concepts across to
him. But when you go

399
00:20:17.810 --> 00:20:20.090
to Johnny five and you
click on led blink, it's

400
00:20:20.090 --> 00:20:22.340
like, Oh, there's a picture
of an led shoved right

401
00:20:22.340 --> 00:20:24.710
into the Arduino direction. It
didn't have to go in

402
00:20:24.710 --> 00:20:26.150
and get a breadboard. I
didn't have to get a

403
00:20:26.150 --> 00:20:31.520
resistor. You got me to
that led moment fast. Oh

404
00:20:31.580 --> 00:20:33.980
yeah. That's definitely something we
also take pride in is

405
00:20:34.800 --> 00:20:37.700
I believe I can attribute
it to Rick's teaching style,

406
00:20:37.700 --> 00:20:41.090
which is the faster, you
can get someone to you

407
00:20:41.090 --> 00:20:43.670
faster. You can show someone
something, the more likely it

408
00:20:43.670 --> 00:20:46.040
is. They'll want to know
how the code runs. So

409
00:20:46.040 --> 00:20:49.570
when, when he does a,
he says, okay, so basically

410
00:20:49.570 --> 00:20:52.420
just, just follow along and
then I'll explain what goes

411
00:20:52.420 --> 00:20:53.770
on in a minute, because
if you can get a

412
00:20:53.770 --> 00:20:56.440
student to blink an led,
they'll want to know how

413
00:20:56.440 --> 00:20:59.350
that code works. And I
think that theory really applies.

414
00:20:59.740 --> 00:21:01.990
I've started adapting it to
my own kind of teaching

415
00:21:01.990 --> 00:21:05.020
style. Now, when I teach
a node just playing node,

416
00:21:05.020 --> 00:21:07.900
no, no robots. I actually
will build a robot and

417
00:21:07.900 --> 00:21:09.850
give it a rest API.
And then I will tell,

418
00:21:09.850 --> 00:21:12.100
I will have students build
a web app that interfaces

419
00:21:12.100 --> 00:21:15.310
with our robot. And you'd
be amazed how excited people

420
00:21:15.310 --> 00:21:18.940
get when they can make
a light, a robot turn

421
00:21:18.940 --> 00:21:22.450
green or purple or blue
just from their web browser.

422
00:21:22.450 --> 00:21:24.640
And they get so much,
so much excitement out of

423
00:21:24.640 --> 00:21:26.740
building a web app that
can do that. And then

424
00:21:26.840 --> 00:21:28.900
of course, there's always some
interest at the end of

425
00:21:28.900 --> 00:21:30.400
the class of, Oh, well,
how do I build that

426
00:21:30.430 --> 00:21:35.070
robot? Yeah. I think that's
actually why we started this

427
00:21:35.070 --> 00:21:38.220
conversation on Twitter was you
were talking to someone about

428
00:21:38.220 --> 00:21:42.300
that led moment and my,
my partner saran and I,

429
00:21:42.300 --> 00:21:45.420
when we did our marches
for makers, we just came

430
00:21:45.420 --> 00:21:47.130
up with that idea too.
Cause it's one of those

431
00:21:47.460 --> 00:21:49.650
ideas. It's like, yeah, I
remember the first time I

432
00:21:49.650 --> 00:21:51.480
was able to like push
a button and have a

433
00:21:51.480 --> 00:21:54.930
light go on because it's
like, it feels like it

434
00:21:54.930 --> 00:21:57.750
went from the world through
your brain and then back

435
00:21:57.750 --> 00:22:00.510
into the world. And that
loop when you close that

436
00:22:00.510 --> 00:22:04.440
loop, it's like suddenly you're
powerful. Yeah. I actually, a

437
00:22:04.440 --> 00:22:06.720
lot of people ask me
how long I've been doing

438
00:22:06.720 --> 00:22:09.090
node bots. And they're very
surprised to hear I've only

439
00:22:09.090 --> 00:22:12.720
been doing robotics at all
for about a year, I

440
00:22:12.720 --> 00:22:15.900
guess, 12 to two years
now. Yeah. It's only been

441
00:22:15.900 --> 00:22:18.870
two years. What happened was
I was at JS comp

442
00:22:18.900 --> 00:22:22.410
2013 and Raquel and Rick
showed me how to build

443
00:22:22.410 --> 00:22:24.840
a node bot. And I'd
always thought that hardware was

444
00:22:24.840 --> 00:22:27.030
just beyond me. And it
was just something I, I

445
00:22:27.030 --> 00:22:31.020
couldn't do. And I had
built an RGB led that

446
00:22:31.020 --> 00:22:34.140
responded to a web page
in about eight hours of

447
00:22:34.140 --> 00:22:35.880
work. I didn't leave the
note box room for eight

448
00:22:35.880 --> 00:22:38.670
hours. I was so excited
to build this and the

449
00:22:38.670 --> 00:22:41.790
fact that I went from
no hardware experience to building

450
00:22:41.790 --> 00:22:45.690
that, it just inspired me
to, to build. I left

451
00:22:45.720 --> 00:22:48.600
knowing I wanted to build
a light up dress. And

452
00:22:49.020 --> 00:22:51.360
at JS comp 2014, I
had that I had a

453
00:22:51.360 --> 00:22:53.910
dress that had LEDs on
it and they reacted to

454
00:22:53.910 --> 00:22:57.480
an accelerometer. And I've built
that into, I, I know

455
00:22:57.480 --> 00:23:00.120
have a skirt that does
that as well. I have

456
00:23:00.180 --> 00:23:05.400
a tuxedo jacket that reacts
to the weather. I have,

457
00:23:05.460 --> 00:23:07.710
I have like eight or
nine wearables projects just sitting

458
00:23:07.710 --> 00:23:09.780
around within two feet of
me in my lab right

459
00:23:09.780 --> 00:23:12.990
now. And all because of
that led moment, all because

460
00:23:12.990 --> 00:23:15.420
it was, it was just
so easy to get into

461
00:23:15.420 --> 00:23:19.020
robotics and, and see the
documentation and think, Oh, I

462
00:23:19.020 --> 00:23:23.280
can do this. How much
let's get down to the

463
00:23:23.280 --> 00:23:25.980
soldering though. Like, that's the
thing that slows people down.

464
00:23:25.980 --> 00:23:27.960
How much soldering am I
have to do? How much,

465
00:23:28.590 --> 00:23:31.020
how many multimedia am I
going to need to get?

466
00:23:31.140 --> 00:23:33.330
When will I hit the
multimedia moment where things suddenly

467
00:23:33.330 --> 00:23:37.080
slow down For me, I
got my first multimedia for

468
00:23:37.080 --> 00:23:40.770
Christmas 2014. My dad is
an electrical engineer. And he

469
00:23:40.770 --> 00:23:42.930
said, well, you've been working
with robots enough so that

470
00:23:42.930 --> 00:23:45.680
you're, you're gonna start needing
a multimeter soon. And sure

471
00:23:45.680 --> 00:23:48.710
enough, he was right. They're
really great tools for detecting

472
00:23:48.710 --> 00:23:51.740
shorts. And when you work
with wearables, you work with

473
00:23:51.770 --> 00:23:55.580
a threaded wire, that kind
of phrase. And so you

474
00:23:55.580 --> 00:23:58.100
can get shorts pretty easily,
especially with conductive thread as

475
00:23:58.100 --> 00:24:00.560
well. So he was right.
I was using that multimedia

476
00:24:00.560 --> 00:24:02.950
within a couple of weeks
to detect shorts and, and

477
00:24:02.990 --> 00:24:06.980
find problems. But on the
other hand, if you want

478
00:24:06.980 --> 00:24:09.020
to build something stationary, or
if you want to build

479
00:24:09.020 --> 00:24:12.110
something that, that doesn't need
to be worn, you can

480
00:24:12.110 --> 00:24:15.020
actually get away without soldering
for quite a while. There

481
00:24:15.020 --> 00:24:17.240
are quite a few projects
built on breadboards that just

482
00:24:17.240 --> 00:24:20.480
kinda either sit on window
cells or they're, they're not,

483
00:24:20.510 --> 00:24:23.120
they're just stationary. So you
can get away for quite

484
00:24:23.120 --> 00:24:28.340
a while without soldering and
multimedia use. But honestly, it's,

485
00:24:28.340 --> 00:24:31.070
it's funny. How, how, how,
how much of a barrier

486
00:24:31.070 --> 00:24:34.820
has been put around soldering
and around multimeters when really

487
00:24:34.820 --> 00:24:37.940
all you need is the
right documentation. When I found

488
00:24:37.940 --> 00:24:40.550
a website on how to
use my multimeter, it made

489
00:24:40.550 --> 00:24:42.920
the manual, I threw the
manual out the window and

490
00:24:42.920 --> 00:24:45.020
just results into the website.
Cause it was just so

491
00:24:45.020 --> 00:24:47.720
much easier to read. I
think there's such a cryptic

492
00:24:47.720 --> 00:24:50.930
barrier around all these electronics
that if we can just

493
00:24:50.930 --> 00:24:54.290
break that down and document
what we're doing, we can

494
00:24:54.470 --> 00:24:56.900
invite so many people into
this hobby that think they

495
00:24:56.900 --> 00:24:59.830
can't do it. I think
you're absolutely right. You know,

496
00:24:59.830 --> 00:25:02.020
and I I've used my
multimeter. I've had the same

497
00:25:02.020 --> 00:25:04.480
one. My dad gave me
20 years ago. But even

498
00:25:04.480 --> 00:25:07.120
now, because I really don't
fully understand how to use

499
00:25:07.120 --> 00:25:09.070
it. I just turn the
knob until I see a

500
00:25:09.070 --> 00:25:12.940
number that doesn't look insane.
I really need to put

501
00:25:12.940 --> 00:25:15.670
a little more thought into
that. Yeah. I think it's

502
00:25:15.670 --> 00:25:18.130
not just, people need to
put more thought into how

503
00:25:18.130 --> 00:25:19.960
they use tools. I, like
I said, I think, I

504
00:25:19.960 --> 00:25:21.730
think it's just as much
up to the people who

505
00:25:21.910 --> 00:25:23.860
do know how to use
those tools to turn around

506
00:25:23.860 --> 00:25:26.650
and give back to the
community. I always say, when

507
00:25:26.650 --> 00:25:28.330
I give a talk about
robotics, the best thing you

508
00:25:28.330 --> 00:25:31.750
can do is document not
just your successes, but always

509
00:25:31.750 --> 00:25:36.160
document what went wrong and
why. And because that documentation

510
00:25:36.160 --> 00:25:38.620
is what's going to bring
new people into the, into

511
00:25:38.620 --> 00:25:42.790
the robotics hobbyist area is
that documentation is going to

512
00:25:42.790 --> 00:25:45.440
show them that, Oh, we're
human. All of us have

513
00:25:45.520 --> 00:25:48.070
blown and led up. All
of us have, have most

514
00:25:48.070 --> 00:25:49.720
of us have seen the
blue smoke monster and we're

515
00:25:49.720 --> 00:25:53.080
okay. And life goes on
and you can do this

516
00:25:53.080 --> 00:25:54.580
and you can build these
things and you're not going

517
00:25:54.580 --> 00:25:56.440
to break anything and you're
not going to hurt yourself.

518
00:25:56.830 --> 00:25:59.110
So A good reminder that
this is low voltage. So

519
00:26:00.010 --> 00:26:02.350
hopefully you won't burn your
house down. Yeah. Unless you're

520
00:26:02.350 --> 00:26:05.440
working with relay is the
likelihood of you hurting yourself

521
00:26:05.470 --> 00:26:09.220
or anyone else's is remarkably
small. There's another site that

522
00:26:09.220 --> 00:26:13.510
Johnny five links to that
says node dash ARDX. And

523
00:26:13.510 --> 00:26:15.160
that has a lot of
really great information. That's a

524
00:26:15.160 --> 00:26:17.680
little more kind of low
level, a little more detailed.

525
00:26:17.680 --> 00:26:21.190
And it has diagrams as
well as traditional electronics diagrams.

526
00:26:21.190 --> 00:26:25.900
What is that site? That
site is a walkthrough. And

527
00:26:25.900 --> 00:26:29.350
so the ARDX is a
kit that comes with an

528
00:26:29.350 --> 00:26:34.090
Arduino and a set of,
of components. And the writer

529
00:26:34.090 --> 00:26:35.920
of that site, what she
did was she said, okay,

530
00:26:35.920 --> 00:26:38.410
I want to walk through
the same tutorials that come

531
00:26:38.410 --> 00:26:41.140
with that kit, but in
node. And so that's what

532
00:26:41.140 --> 00:26:43.650
she did is she wrote
that entire site, that through

533
00:26:43.650 --> 00:26:45.480
it walks through the same
manual that comes through that

534
00:26:45.480 --> 00:26:48.060
manual, or it comes with
that kit in C and

535
00:26:48.060 --> 00:26:51.030
she goes through it with
node. So definitely a great

536
00:26:51.030 --> 00:26:53.250
place to get started. If
you're interested in learning about

537
00:26:53.250 --> 00:26:56.010
node boxes to just get
the kit and follow through

538
00:26:56.010 --> 00:26:58.830
with node, our ARDX, it's
a great website. And she

539
00:26:59.130 --> 00:27:01.320
she's put a lot of
thought into the documentation and

540
00:27:01.320 --> 00:27:04.400
a lot of work. Yeah.
Yeah. That's Anna Gerber and

541
00:27:04.400 --> 00:27:06.590
it looks like a really
amazing site. And the kid

542
00:27:06.590 --> 00:27:09.500
is really extraordinary too, because
to make things accessible, they

543
00:27:09.520 --> 00:27:12.350
printed out the wiring as
pictures. So it's like a

544
00:27:12.350 --> 00:27:14.630
top down version of the
breadboard and it's like, yeah,

545
00:27:14.660 --> 00:27:17.660
put the wire here, kids,
which for me as an

546
00:27:17.660 --> 00:27:21.830
adult makes me very, very
happy. Yeah. I'm a, I'm

547
00:27:21.830 --> 00:27:25.160
a visual person. And so
the photos and Fritz and

548
00:27:25.160 --> 00:27:27.830
diagrams are usually what I
go to because I'm terrible

549
00:27:27.830 --> 00:27:31.460
at memorizing symbols and things.
So I definitely rely on

550
00:27:31.460 --> 00:27:33.320
the pick or the pictures
of what's going on the

551
00:27:33.320 --> 00:27:37.220
seat to when I'm replicating.
Okay. So we're, we're, we're

552
00:27:37.220 --> 00:27:40.640
blinking lights, we're responding to,
to, to sensors, but you

553
00:27:40.640 --> 00:27:42.860
talked a little bit about
relays. Can you talk about

554
00:27:42.860 --> 00:27:45.020
relays and motors and how
do I actually make this

555
00:27:45.020 --> 00:27:48.890
thing roll across the floor?
Yeah. So relays would have

556
00:27:48.890 --> 00:27:51.170
to do with the electronics
that are outside the realm

557
00:27:51.170 --> 00:27:52.730
of Arduino. So if you
want to light up a

558
00:27:52.730 --> 00:27:55.010
lamp with a text message,
you would, you would wire

559
00:27:55.010 --> 00:27:57.020
up the lamp to a
relay. It allows you to

560
00:27:57.020 --> 00:28:01.670
use higher voltage technology with
the Arduino, whereas motors and

561
00:28:01.670 --> 00:28:04.550
servos. They, they, they tend
to use a little bit

562
00:28:04.550 --> 00:28:07.280
higher voltage, but you can
start with five volt motors

563
00:28:07.280 --> 00:28:09.740
and servos. What I do
if I was interested in

564
00:28:09.740 --> 00:28:13.970
movement is definitely, again, back
to Johnny five Donovan buck

565
00:28:13.970 --> 00:28:16.460
has done some amazing things
with what's called the animation

566
00:28:16.460 --> 00:28:20.540
library, and it allows you
to time robotics movements, which

567
00:28:20.540 --> 00:28:23.630
was something that was previously
not something we were capable

568
00:28:23.630 --> 00:28:26.510
of doing with node bots.
And that's how the hexapod

569
00:28:26.510 --> 00:28:29.900
work is. It's, it's, it's
amazing how much balance it

570
00:28:29.900 --> 00:28:32.660
requires for a hexapod to
walk. And so without the

571
00:28:32.660 --> 00:28:35.360
animation library, those hexapod, wouldn't
be able to walk because

572
00:28:35.360 --> 00:28:37.850
we wouldn't be able to
time the leg movements properly.

573
00:28:38.180 --> 00:28:40.640
So if you're interested in
movement and robotics, I would

574
00:28:40.640 --> 00:28:42.920
definitely take a look at
Donovan Buck's work in general

575
00:28:42.920 --> 00:28:45.050
and definitely take a look
at the animation library and

576
00:28:45.050 --> 00:28:48.950
Johnny. Okay. And I'm seeing,
I've got this kit that

577
00:28:48.950 --> 00:28:50.990
I, you know, RadioShack went
out of business. So I

578
00:28:50.990 --> 00:28:53.390
ran over there and bought
all the, anything that looked

579
00:28:53.390 --> 00:28:56.450
interesting. It's ridiculous. But I
have like this Arduino motor

580
00:28:56.450 --> 00:29:00.110
thing, I've got DC motors,
I've got servo motors and

581
00:29:00.110 --> 00:29:02.780
I've got stepper motors. I
don't know which one I'm

582
00:29:02.780 --> 00:29:08.360
supposed to use. I believe
Donovan mostly uses regular servers

583
00:29:08.360 --> 00:29:12.080
for the hexapod stepper. Motors
are very accurate and they're

584
00:29:12.080 --> 00:29:14.300
mostly used in three D
printing as far as I've

585
00:29:14.300 --> 00:29:18.110
seen. And regular DC motors
are for applications that don't

586
00:29:18.110 --> 00:29:20.240
require a lot of accuracy
because they mostly just have

587
00:29:20.270 --> 00:29:22.730
on and off. And they
don't measure like how far

588
00:29:22.730 --> 00:29:24.860
something is moved. So you
can't tell a regular DC

589
00:29:24.860 --> 00:29:28.520
motor move, 20 degrees, whereas
a stepper motor you can,

590
00:29:28.520 --> 00:29:31.280
and a servo error, rotational
servo, which goes all the

591
00:29:31.280 --> 00:29:33.110
way around as opposed to
just zero to one 80,

592
00:29:33.110 --> 00:29:36.140
like a regular survey can
do, you can say, I

593
00:29:36.140 --> 00:29:38.720
want a certain number of
degrees. Okay. So then that

594
00:29:38.720 --> 00:29:40.580
makes me think that I
would I'd use a DC

595
00:29:40.580 --> 00:29:44.080
motor, like zoom. That would
be my go forward. And

596
00:29:44.080 --> 00:29:45.580
I could use a servo
if I were going to

597
00:29:45.580 --> 00:29:48.280
hook up like an Xbox
controller and steer the thing

598
00:29:48.880 --> 00:29:51.370
with accuracy. And then maybe
if I had an eyeball

599
00:29:51.370 --> 00:29:53.290
on top, I might use
a step promoter if I

600
00:29:53.290 --> 00:29:55.990
needed real accuracy to move
the eyeball. That sounds about

601
00:29:55.990 --> 00:29:58.840
right. Oh, okay. See, this
makes me happy. Cause I

602
00:29:58.840 --> 00:30:02.740
feel like I'm understanding what's
going on. The, the other

603
00:30:02.740 --> 00:30:08.350
thing is the sensors there's
proximity sensors, there are sonar

604
00:30:08.350 --> 00:30:10.690
and things like that. How
much, how often do you

605
00:30:10.690 --> 00:30:15.190
put intelligence into these things
versus remote control? You know

606
00:30:15.190 --> 00:30:17.290
what I mean? Like, are
they responding to sensors and

607
00:30:17.470 --> 00:30:19.720
thinking about stuff they're on
their own or are these

608
00:30:19.720 --> 00:30:23.760
kind of RC cars? It
depends on who's, who's controlling

609
00:30:23.760 --> 00:30:27.010
it. I've mostly built things
that, you know, I, I,

610
00:30:27.010 --> 00:30:29.520
I don't build movable robots
too much, but when I

611
00:30:29.520 --> 00:30:32.790
do, they're not usually very
smart. Whereas Rick and Donovan

612
00:30:32.790 --> 00:30:35.850
have done a lot of
work with Donovan, especially with

613
00:30:35.850 --> 00:30:37.770
the leap motion. He has
a thing where he can

614
00:30:37.770 --> 00:30:40.680
put his hands up of
the wheat motion and the

615
00:30:40.740 --> 00:30:43.590
hexapod will sit back and
take the front legs and

616
00:30:43.590 --> 00:30:47.850
mimic his hand movements with
the front legs. It's amazing.

617
00:30:47.880 --> 00:30:52.890
It's I was completely just
flabbergasted when I saw it.

618
00:30:54.300 --> 00:30:57.450
You can definitely make the
robots as smart as, as,

619
00:30:58.260 --> 00:31:00.840
as smart as you want,
which is kind of a

620
00:31:00.840 --> 00:31:03.510
terrifying statement. When you think
about it. Oh, smart. How

621
00:31:03.510 --> 00:31:05.550
smart are your wearables? Because
I think it's important for

622
00:31:05.550 --> 00:31:07.860
people to know that robots
don't necessarily have to have

623
00:31:07.860 --> 00:31:11.440
motors your, your wearables in
your, your dress is a

624
00:31:11.460 --> 00:31:14.340
robot of sorts. If it's
interacting with the environment, does

625
00:31:14.340 --> 00:31:16.920
it know about what's going
on around it? It does

626
00:31:17.250 --> 00:31:21.240
my vest and my shoes.
No. When someone stars or

627
00:31:21.240 --> 00:31:27.150
follows me on Twitter. Yeah.
Yeah. It's, it's very funny

628
00:31:27.150 --> 00:31:28.380
when I'm at a conference
and I have to tell

629
00:31:28.380 --> 00:31:30.000
somebody, hold on, I have
to charge my shoes real

630
00:31:30.000 --> 00:31:33.810
quick, but yeah, I have
Twitter enabled clothes. I have

631
00:31:33.810 --> 00:31:36.750
weather enabled clothes. Most of
mine get their information from

632
00:31:36.750 --> 00:31:38.670
the internet, but I do
have some that still rely

633
00:31:38.670 --> 00:31:41.790
on sensors. I just got
a, a pitch roll in

634
00:31:41.790 --> 00:31:44.400
y'all sensor and then I'm
putting into a pendant that

635
00:31:44.400 --> 00:31:46.890
will change the way my
clothing looks based on the

636
00:31:46.890 --> 00:31:51.300
rotation of the pendant. How
are you getting through airport

637
00:31:51.300 --> 00:31:54.690
security with these? I'm not
wearing them, put them in

638
00:31:54.690 --> 00:31:58.440
my check luggage. That's awesome.
I somehow, I just immediately

639
00:31:58.440 --> 00:32:00.990
had an image of you
taking off in an airplane

640
00:32:00.990 --> 00:32:03.960
and suddenly you're starting to
change color as the airplane

641
00:32:03.960 --> 00:32:06.540
starts to take off at
an angle. I try not

642
00:32:06.540 --> 00:32:08.220
to wear them on the
plane because I get the

643
00:32:08.220 --> 00:32:10.830
feeling I would cause, cause
a bit of a ruckus

644
00:32:11.430 --> 00:32:16.110
That would be problematic. Oh
right. Oh my goodness. Okay.

645
00:32:16.260 --> 00:32:20.670
So we've got Johnny five.io.
We've got the Johnny five

646
00:32:20.670 --> 00:32:22.410
library, which is kind of
like the hub of it.

647
00:32:22.410 --> 00:32:25.050
All right. This is where
we, we start with Johnny

648
00:32:25.050 --> 00:32:27.060
five. Are there any, is
there anything else or is

649
00:32:27.060 --> 00:32:29.190
Johnny five? The brain there's
no other brain. We would

650
00:32:29.190 --> 00:32:31.920
want to think about it.
There are other libraries out

651
00:32:31.920 --> 00:32:35.130
there. Johnny five is definitely
the farthest along and has

652
00:32:35.130 --> 00:32:38.550
the best community, but there's
some community around the, the

653
00:32:38.550 --> 00:32:42.230
TESL has its own library
on the Esperino, which has

654
00:32:42.230 --> 00:32:45.290
its own way of doing
things. But I would definitely

655
00:32:45.290 --> 00:32:47.480
start with Johnny five because
it tends to lead to

656
00:32:47.480 --> 00:32:51.790
those libraries and those platforms.
So I would definitely start.

657
00:32:51.800 --> 00:32:55.300
Yeah. Can I use Johnny
five with a TESL? Not

658
00:32:55.360 --> 00:33:00.460
yet stopped by that. I
like that. Okay. Not yet.

659
00:33:00.760 --> 00:33:02.890
And then I noticed that
when I went over to,

660
00:33:03.220 --> 00:33:06.010
I found my way from
Johnny five over to IO

661
00:33:06.010 --> 00:33:09.520
plugins. This is where things
start getting interesting. Anytime someone

662
00:33:09.520 --> 00:33:11.500
finds an object that they
want to talk to, they

663
00:33:11.500 --> 00:33:13.930
just build a plugin for
this thing. Yes, exactly. And

664
00:33:13.930 --> 00:33:16.540
that's how Johnny five a
is one of those right.

665
00:33:16.540 --> 00:33:19.970
Ones work anywhere sort of
libraries is basically you installed

666
00:33:20.080 --> 00:33:22.330
IO plugin for the platform
you want to use and

667
00:33:22.330 --> 00:33:24.790
maybe change some pin numbers.
And all of a sudden

668
00:33:24.790 --> 00:33:26.170
your code that you wrote
for an earth, we know

669
00:33:26.170 --> 00:33:28.450
who know can run on
a BeagleBone black or Latino

670
00:33:28.450 --> 00:33:31.960
one or all sorts of
different. And that right there,

671
00:33:31.960 --> 00:33:33.670
you, you threw that out.
Like it was a small

672
00:33:33.670 --> 00:33:38.320
thing and change some pin
numbers. It really is small.

673
00:33:39.040 --> 00:33:42.100
So basically when you write
an output it's to a

674
00:33:42.100 --> 00:33:44.560
pin number and an Arduino
UNO, it's usually a digit.

675
00:33:45.190 --> 00:33:48.100
However, in some other platforms
it's like a BeagleBone black,

676
00:33:48.100 --> 00:33:50.410
for instance, the pin number
would be P, which is

677
00:33:50.410 --> 00:33:52.240
the column and then a
number which is eight or

678
00:33:52.240 --> 00:33:55.420
nine underscore. And then the
number on that column. So,

679
00:33:55.420 --> 00:33:57.100
I mean, you have to
look up the pin differences,

680
00:33:57.100 --> 00:34:01.750
but everything else, the API
is the, the event system.

681
00:34:01.780 --> 00:34:04.960
It does transfer from platform
to platform. So it's truly

682
00:34:04.960 --> 00:34:09.700
a minimal thing. Now you've
said Arduino, UNO and many

683
00:34:09.700 --> 00:34:11.710
times, and that happens to
be the first one at

684
00:34:11.710 --> 00:34:15.700
the top of platform support.
I think I've got an

685
00:34:15.730 --> 00:34:19.660
old one with an Italian
name from a couple years

686
00:34:19.660 --> 00:34:22.540
ago. W is the UNO,
the one that people really

687
00:34:22.540 --> 00:34:25.300
should start with is that
the you've you've mentioned it

688
00:34:25.300 --> 00:34:26.980
so many times. It's the
first one on the list

689
00:34:26.980 --> 00:34:30.760
is that preferred? It's the
easiest one to get? I

690
00:34:30.760 --> 00:34:34.030
think the, the Johnny five
community is so welcoming and

691
00:34:34.030 --> 00:34:36.400
the, and the code works
well enough on each platform

692
00:34:36.400 --> 00:34:39.070
that there is no real
one. You should start here

693
00:34:39.370 --> 00:34:42.070
platform. It's just, the UNO
is so easy to get.

694
00:34:42.070 --> 00:34:48.280
And so cheap really. That's
usually why it's at the

695
00:34:48.280 --> 00:34:50.410
forefront of the Johnny five.
And also it was one

696
00:34:50.410 --> 00:34:51.700
of the, it was the
first board that it was

697
00:34:51.700 --> 00:34:53.680
tested with. So I think,
I think it's got a

698
00:34:53.680 --> 00:34:57.190
special places. Our hearts is
the first note bought And

699
00:34:57.190 --> 00:34:59.200
it does not have that
one does not have wifi.

700
00:34:59.230 --> 00:35:02.710
Correct. It does not. You
can get shields for it,

701
00:35:02.710 --> 00:35:04.990
but I don't think Johnny
five has compatibility for those

702
00:35:04.990 --> 00:35:06.760
shields. If you're looking for
a wifi out of the

703
00:35:06.760 --> 00:35:10.570
box, I would look at
spark or TESL, but Tesla

704
00:35:10.570 --> 00:35:12.070
doesn't work with Johnny five
yet, but so I would

705
00:35:12.070 --> 00:35:14.500
look at spark or electric
amp, which has a really

706
00:35:14.500 --> 00:35:19.720
nice little SD card shaped
microcontroller. Hmm. And are you

707
00:35:19.720 --> 00:35:22.210
usually just using a really
long USB cable for these

708
00:35:22.210 --> 00:35:27.190
kinds of things? I usually
use wifi enabled rope node

709
00:35:27.190 --> 00:35:29.980
bots. So I don't, but
Rick, What do I put

710
00:35:29.980 --> 00:35:32.050
on top of an Ardwino
UNO then to get that

711
00:35:32.050 --> 00:35:36.790
wifi, wifi shield, Or you
could use Bluetooth. If you

712
00:35:36.790 --> 00:35:40.650
have Bluetooth breakout board, you
can connect to your laptop

713
00:35:40.650 --> 00:35:45.300
with a Bluetooth serial connection.
But yeah, if you're interested

714
00:35:45.300 --> 00:35:47.790
in doing basically what's called
a wireless node bot, I

715
00:35:47.790 --> 00:35:50.460
would start with the electric
imp, but yeah. Donovan and

716
00:35:50.460 --> 00:35:52.200
Rick can tell you where
to get really, really long

717
00:35:52.200 --> 00:35:56.010
cables for the, you know,
because they're, hexapod have really,

718
00:35:56.010 --> 00:35:59.030
really long tethers on them.
Oh, okay. Well maybe you'll

719
00:35:59.030 --> 00:36:02.270
make an introduction and we'll
do part two. Yeah. Well

720
00:36:02.270 --> 00:36:04.010
this has been so much
fun. Thank you so much.

721
00:36:05.210 --> 00:36:07.760
This has been Cassandra perch
talking to me about node

722
00:36:07.760 --> 00:36:11.120
bots and I'm ready to
start building something. This has

723
00:36:11.120 --> 00:36:13.400
been another episode of Hansel
minutes and we'll see you

724
00:36:13.400 --> 00:36:14.360
again next week.

