WEBVTT FILE

1
00:00:00.180 --> 00:00:03.360
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.360 --> 00:00:06.300
they make the show possible.
Today's show is sponsored by

3
00:00:06.300 --> 00:00:10.500
developer express, become a UI
superhero with dev express controls

4
00:00:10.500 --> 00:00:15.030
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.420 --> 00:00:19.500
by leveraging your existing knowledge,
you can build next generation

6
00:00:19.500 --> 00:00:23.610
touch enabled solutions for tomorrow,
you can download your free

7
00:00:23.700 --> 00:00:45.540
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com.
Hi, this is Scott Hanselman.

8
00:00:45.540 --> 00:00:48.330
This is another episode of
Hanselminutes today. I'm talking with

9
00:00:48.330 --> 00:00:52.380
Sarah Squire. She's a senior
technical architect at ping identity,

10
00:00:52.740 --> 00:00:54.840
and you're going to help
me understand what's going on

11
00:00:54.840 --> 00:00:58.010
with identity. How are you?
I'm great. Thanks for having

12
00:00:58.010 --> 00:01:01.070
me on Scott. Yeah, this
is great. I'm finally, someone

13
00:01:01.070 --> 00:01:02.960
will explain to me what
the heck's going on because

14
00:01:03.050 --> 00:01:06.980
I thought we solved identity
on the web. I remember

15
00:01:06.980 --> 00:01:12.140
somewhere around 2005, 2006, there
was this announcement of like,

16
00:01:12.800 --> 00:01:16.430
you know, kind of quasi
announcement identity, 2.0, and we

17
00:01:16.430 --> 00:01:18.920
were going to stop doing,
you know, emails and passwords

18
00:01:18.920 --> 00:01:21.380
and it was all being
solved. So that's been 12

19
00:01:21.380 --> 00:01:26.960
years what's w what was
that entity? 2.0, So identity

20
00:01:26.960 --> 00:01:32.210
2.0 was an OSCON keynote
by Dick Hart, who at

21
00:01:32.210 --> 00:01:34.250
the time worked for a
skip identity, which was his

22
00:01:34.250 --> 00:01:37.520
own startup who now works
on Amazon Alexa. So if

23
00:01:37.520 --> 00:01:39.740
that tells you anything about
the direction that Alexa is

24
00:01:39.740 --> 00:01:45.470
going. So identity 2.0 is
actually part of the onboarding

25
00:01:45.470 --> 00:01:48.290
curriculum. That speech was part
of my onboarding curriculum when

26
00:01:48.290 --> 00:01:54.870
I went into identity about
six years ago. So it

27
00:01:54.890 --> 00:01:59.450
got me really passionate about
the field. It, it explained

28
00:01:59.450 --> 00:02:00.740
to me that there were
a lot of problems to

29
00:02:00.740 --> 00:02:02.630
be solved and that people
are solving them in creative

30
00:02:02.630 --> 00:02:06.560
ways. And one of the
things that I love about

31
00:02:06.740 --> 00:02:09.290
working in identity, and that
really inspires me about the

32
00:02:09.290 --> 00:02:11.930
field is that you can
put in a small amount

33
00:02:11.930 --> 00:02:13.700
of work. This is like
the one part of the

34
00:02:13.700 --> 00:02:15.770
technology stack, where you can
put in a small amount

35
00:02:15.770 --> 00:02:18.710
of work and get a
huge output, both in terms

36
00:02:18.710 --> 00:02:21.560
of security and in terms
of usability. And if you

37
00:02:21.560 --> 00:02:23.960
can make people happier and
more secure at the same

38
00:02:23.960 --> 00:02:27.140
time, that buys you a
lot in terms of value.

39
00:02:27.140 --> 00:02:32.390
Add for technology. I was
thinking about the differences though,

40
00:02:32.390 --> 00:02:35.810
between identity for the technical
person and identity for the

41
00:02:35.810 --> 00:02:38.690
nontechnical person. And I was
just thinking about this yesterday.

42
00:02:38.690 --> 00:02:41.990
I've had the same email
address, and I have owned

43
00:02:41.990 --> 00:02:46.070
my own domain now for
gosh, forever. I don't know,

44
00:02:46.250 --> 00:02:53.210
17, 18, 19 years, but
my nontechnical family members go

45
00:02:53.210 --> 00:02:57.530
through email addresses like, like
crackers. And some of them

46
00:02:57.530 --> 00:02:59.870
I've had four or five,
six emails, the last and,

47
00:02:59.870 --> 00:03:01.900
and the reason that they
abandoned them is that they,

48
00:03:02.140 --> 00:03:05.080
they lose access. They forget
the password, they lose interest,

49
00:03:05.950 --> 00:03:08.680
they change their email because
maybe it wasn't professional and

50
00:03:08.680 --> 00:03:12.400
now they need to be
professional. So their identity doesn't

51
00:03:12.400 --> 00:03:15.280
change in, in the world,
but it changes online a

52
00:03:15.280 --> 00:03:17.500
lot, which makes it really
frustrating for them to move

53
00:03:17.500 --> 00:03:21.930
around the internet. Absolutely account
recovery is a huge issue

54
00:03:21.930 --> 00:03:24.390
in identity, and there's some
really interesting work going on

55
00:03:24.390 --> 00:03:27.510
there. So there are two
initiatives that were both started

56
00:03:27.510 --> 00:03:36.690
by Facebook. One is key
recovery through a third party.

57
00:03:36.750 --> 00:03:42.810
So you can leave a
key to your Facebook account

58
00:03:42.870 --> 00:03:45.390
in your GitHub account, so
that if you can get

59
00:03:45.390 --> 00:03:48.060
into one, you can get
into the other. But it's

60
00:03:48.060 --> 00:03:50.820
very privacy preserving because GitHub
doesn't actually know what that

61
00:03:50.820 --> 00:03:53.580
key is for. It's like
giving, giving a physical key

62
00:03:53.580 --> 00:03:56.100
to a neighbor and saying,
I might need this from

63
00:03:56.100 --> 00:03:57.450
you someday, but I'm not
going to tell you what

64
00:03:57.450 --> 00:03:58.680
the key is for. I'm
not going to tell you

65
00:03:58.680 --> 00:04:02.460
what safe deposit it is
at which bank. Right. So

66
00:04:02.460 --> 00:04:05.310
that's a great, great method
of account recovery, right? So

67
00:04:05.310 --> 00:04:07.530
then like even someone who
stumbled upon the key, like

68
00:04:07.530 --> 00:04:10.560
I've found, we've all found
keys on the sidewalk. Sure,

69
00:04:10.740 --> 00:04:13.710
exactly. Ooh, I like that.
There's always a movie where

70
00:04:13.710 --> 00:04:15.240
someone finds a key and
it has a number on

71
00:04:15.240 --> 00:04:20.130
it and we always assume
it's true. Yeah. Another exciting

72
00:04:20.430 --> 00:04:22.530
thing that's going on in
account recovery is called social

73
00:04:22.530 --> 00:04:26.400
recovery. So a lot of
businesses are looking at, I

74
00:04:26.400 --> 00:04:30.510
can delegate five different trusted
friends. And if three of

75
00:04:30.510 --> 00:04:33.330
them come back to the
service that I'm using and

76
00:04:33.330 --> 00:04:36.240
say, yes, this is Sarah.
I have verified with her

77
00:04:36.240 --> 00:04:39.090
that she lost her key.
Give me a code and

78
00:04:39.090 --> 00:04:40.500
I will give it to
Sarah so that she can

79
00:04:40.500 --> 00:04:42.960
get back into her account.
And if I can, if

80
00:04:42.960 --> 00:04:45.210
I, Sarah can recover three
of those codes, they will

81
00:04:45.210 --> 00:04:50.370
let me back in. That
sounds like initially awesome. But

82
00:04:50.610 --> 00:04:53.760
if someone grouped someone kind
of piled on you like

83
00:04:53.790 --> 00:04:57.420
grouped up, you could have
five, six, mean people all

84
00:04:57.420 --> 00:04:59.700
collectively try to take over
your account and they're all

85
00:04:59.700 --> 00:05:01.860
bad. Yeah. See, now you
have to be nice to

86
00:05:01.860 --> 00:05:05.490
your friends. It's good for
the world. I got an

87
00:05:05.490 --> 00:05:11.160
email literally yesterday saying from
Facebook that someone was trying

88
00:05:11.160 --> 00:05:14.190
to recover my account. And
I wonder for people with

89
00:05:14.190 --> 00:05:18.450
well-known email addresses or with,
you know, internet famous people,

90
00:05:18.630 --> 00:05:21.660
if that could become like
a huge problem, like our

91
00:05:21.660 --> 00:05:25.770
famous people, like Tom cruise,
getting like password resets every

92
00:05:25.770 --> 00:05:31.020
10 minutes. So famous people,
at least for Google, probably

93
00:05:31.020 --> 00:05:33.330
for Facebook as well, have
the opportunity to have an

94
00:05:33.330 --> 00:05:37.350
additional level of security so
they can use a second

95
00:05:37.350 --> 00:05:40.320
factor authentication devices. What we
call it in the industry,

96
00:05:40.590 --> 00:05:42.930
but it's a little a
USB device. It goes on

97
00:05:42.930 --> 00:05:45.240
a key chain. You can
plug it into your USB

98
00:05:45.240 --> 00:05:48.990
port. And it has either
a onetime password or a

99
00:05:48.990 --> 00:05:53.370
private key on it that
can sign a cryptographic challenges

100
00:05:54.060 --> 00:05:55.770
to prove that it's you
so that if you want

101
00:05:55.770 --> 00:05:58.250
to reset your password, it
won't send you an email.

102
00:05:58.340 --> 00:06:00.860
It won't even give you
the opportunity unless you have

103
00:06:00.860 --> 00:06:03.160
that key with you. Interesting
is that what's called a

104
00:06:03.160 --> 00:06:08.350
YubiKey. YubiKey is one provider
of those. Yeah. I ordered

105
00:06:08.350 --> 00:06:12.310
one and it is literally
arriving today. Oh, awesome. Yeah.

106
00:06:12.340 --> 00:06:14.920
I use YubiKey nanos. I
keep them on my earrings

107
00:06:14.920 --> 00:06:17.860
cause they're little in gold.
And then when I go

108
00:06:17.860 --> 00:06:21.580
to conferences, people know that
I'm an identity immediately. If

109
00:06:21.580 --> 00:06:24.330
they know what that is.
So it's a good, a

110
00:06:24.370 --> 00:06:27.490
good networking tool. And then
I also keep one at

111
00:06:27.490 --> 00:06:30.370
home in a safe, because
the problem is if you

112
00:06:30.370 --> 00:06:32.440
lose the one that you're
carrying on your key chain

113
00:06:32.860 --> 00:06:35.740
or in your purse, if
you keep it in your

114
00:06:35.740 --> 00:06:38.980
computer, if the computer gets
stolen, right, you can't recover

115
00:06:38.980 --> 00:06:41.680
that account. You can't recover
that key. So it's important

116
00:06:41.680 --> 00:06:44.410
to register two or even
three keys and keep them

117
00:06:44.410 --> 00:06:47.500
in safe places or with
friends. Interesting. Yeah, that was

118
00:06:47.500 --> 00:06:49.540
my next question. What if
you lose it? Like I'm

119
00:06:49.540 --> 00:06:52.600
planning on putting mine on
my key chain, but at

120
00:06:52.600 --> 00:06:55.540
the same time we were
talking about leaving a key

121
00:06:55.540 --> 00:06:57.520
somewhere at get hub and
no one knows what it

122
00:06:57.520 --> 00:07:00.100
is. I assume that if
someone has a key chain

123
00:07:00.100 --> 00:07:01.750
with a YubiKey on it,
then everyone's gonna be like,

124
00:07:01.780 --> 00:07:05.470
Ooh, that's important. Like the
existence of a YubiKey, even

125
00:07:05.470 --> 00:07:08.590
on your earrings could maybe
have someone run up and

126
00:07:08.590 --> 00:07:10.870
grab them and rip them
out of your ears. Like

127
00:07:10.870 --> 00:07:14.260
they are advertising that they
are what they are. That's

128
00:07:14.260 --> 00:07:17.800
true. So is, it is
the only answer, just have

129
00:07:17.800 --> 00:07:20.350
as many as you as,
as you want, like have

130
00:07:20.350 --> 00:07:22.870
backups. Should I buy another
one? Yes, you should. I

131
00:07:22.870 --> 00:07:24.610
usually have at least two,
especially if you're going to

132
00:07:24.610 --> 00:07:27.190
be carrying one around, if
you only need one, occasionally

133
00:07:27.190 --> 00:07:29.290
then just keep it at
home in a safe. But

134
00:07:29.290 --> 00:07:30.670
if you're going to be
carrying one around, if it

135
00:07:30.670 --> 00:07:33.010
might get stolen or lost,
absolutely. Keep it, keep a

136
00:07:33.020 --> 00:07:36.910
backup somewhere safe. What is
inside these, these keys again,

137
00:07:36.910 --> 00:07:39.310
YubiKey is just one example,
but this is a standard

138
00:07:39.310 --> 00:07:43.180
thing. And is it typing?
Is it like a keyboard?

139
00:07:43.390 --> 00:07:45.280
Is it pretending to be
a keyboard and then typing

140
00:07:45.280 --> 00:07:48.430
in a onetime password? Okay.
That's a great question. It

141
00:07:48.430 --> 00:07:53.020
has a lot of modes.
So one is a private

142
00:07:53.020 --> 00:07:57.880
identity verification mode. That's the
highest security. So that actually

143
00:07:57.880 --> 00:08:01.870
has a cryptographic key that
is stored on the, on

144
00:08:01.870 --> 00:08:06.370
the device itself that can
sign challenges. It can work

145
00:08:06.370 --> 00:08:09.970
through a standard called a
universal second factor or you

146
00:08:09.970 --> 00:08:12.700
to ask that as part
of the Fido Alliance, a

147
00:08:12.710 --> 00:08:17.520
standard suite, and then it
can also just do a

148
00:08:17.560 --> 00:08:21.550
time based one time password.
So basically what that means

149
00:08:21.550 --> 00:08:24.400
is that when you log
in, it will act as

150
00:08:24.400 --> 00:08:27.850
a keyboard for your computer.
So it works exactly. Like

151
00:08:27.880 --> 00:08:29.530
if you have the apps
on your phone where you

152
00:08:29.530 --> 00:08:31.450
pull up a onetime password
and then you enter it

153
00:08:31.450 --> 00:08:35.260
in, it's exactly the same
technology, exactly the same standard,

154
00:08:35.290 --> 00:08:38.380
except that the YubiKey will
create longer, more secure one

155
00:08:38.380 --> 00:08:40.240
time passwords and it will
type them in for you.

156
00:08:41.450 --> 00:08:43.780
So again, we get to
this identity theme of it's

157
00:08:43.780 --> 00:08:46.540
easier and it's more secure.
Exactly. And I use things

158
00:08:46.540 --> 00:08:49.420
like offi that give me
that, and then they kind

159
00:08:49.420 --> 00:08:51.310
of collect all those things.
But then it seems like

160
00:08:51.310 --> 00:08:54.790
as we build abstraction layers
on top of obstruction layers,

161
00:08:55.110 --> 00:08:59.190
it feels a little bit
like we, we expand the,

162
00:08:59.190 --> 00:09:01.680
where like author has like
15, 20 accounts so that

163
00:09:01.680 --> 00:09:03.810
I'm all managing and then
they give you a single

164
00:09:03.810 --> 00:09:07.260
password. Or I use one
password or last pass, which

165
00:09:07.260 --> 00:09:10.620
puts hundreds of passwords. And
then we give you a

166
00:09:10.620 --> 00:09:12.960
single password to manage it.
So whenever I'm trying to

167
00:09:13.320 --> 00:09:16.890
sell two factor authentication to
family members, as I'm sure

168
00:09:16.890 --> 00:09:19.890
you do at Thanksgiving dinner,
you know, have one happy

169
00:09:19.890 --> 00:09:23.070
holidays, make sure you get
two factor off when you

170
00:09:23.070 --> 00:09:25.470
say I see you've been
listening to that. When you,

171
00:09:25.860 --> 00:09:28.350
when you do things like
one password, they always go

172
00:09:28.350 --> 00:09:30.600
wait a second. But then
that means the bad guy

173
00:09:30.600 --> 00:09:35.580
would only need one password
or my YubiKey or my

174
00:09:35.580 --> 00:09:39.870
offi password. Is, is that
just part of the ongoing

175
00:09:39.870 --> 00:09:43.520
tension of identity? It is.
Absolutely. We have, we have

176
00:09:43.520 --> 00:09:46.850
a problem with passwords in
general. We're trying to get

177
00:09:46.850 --> 00:09:48.920
away from passwords. No, one's
been able to do it

178
00:09:48.920 --> 00:09:53.030
yet though. They're really secure,
really easy, really scalable and

179
00:09:53.030 --> 00:09:57.410
deployable method of authentication. So
we're, we're stuck with passwords

180
00:09:57.410 --> 00:09:59.390
for, and we're going to
be for a long time.

181
00:09:59.870 --> 00:10:03.350
There's no good way to
keep track of them. But

182
00:10:03.350 --> 00:10:05.930
I would say yes, I
use a password manager. I

183
00:10:05.930 --> 00:10:08.570
recommend that other people use
password managers and have two

184
00:10:08.570 --> 00:10:14.360
factor authentication on your password
manager itself. Mm. Okay. And

185
00:10:14.390 --> 00:10:17.870
these, these standards though, like
YouTube, you to F and

186
00:10:17.870 --> 00:10:20.060
then other standards that are
kind of underneath it that

187
00:10:20.060 --> 00:10:23.510
are all supported by these
different keys. Like these NFC

188
00:10:23.510 --> 00:10:26.900
security keys, where you hold
the key, tap it up

189
00:10:26.900 --> 00:10:30.110
against your phone, and then
it does something. Are these

190
00:10:30.110 --> 00:10:33.800
all just different transport mechanisms
to pass that one time

191
00:10:34.040 --> 00:10:38.270
key in? Yeah, exactly. So
communicating whether you're doing it

192
00:10:38.270 --> 00:10:42.110
over Bluetooth or NFC or
USB, it's all using the

193
00:10:42.110 --> 00:10:44.540
same standards, the same technology
it's working the same way.

194
00:10:44.540 --> 00:10:46.970
That's just a difference in
how it's communicated to the

195
00:10:46.970 --> 00:10:51.860
device. Okay. So whether it's
a QR code or Bluetooth

196
00:10:51.860 --> 00:10:56.060
or whatever, it's just all
transport mechanisms. Yup. Oh, okay.

197
00:10:56.780 --> 00:10:59.930
I understand also though, that
with regards to like NFC,

198
00:10:59.930 --> 00:11:02.930
that there was concerns that
maybe the iPhone doesn't have

199
00:11:02.930 --> 00:11:05.750
the things that it needs
to support it, you know,

200
00:11:05.750 --> 00:11:09.890
support things like YubiKeys correctly.
I wonder how much support

201
00:11:09.890 --> 00:11:12.890
we're getting from different phone
manufacturers from Apple, from Samsung,

202
00:11:12.890 --> 00:11:16.310
et cetera, to support these
kinds of things versus their

203
00:11:16.310 --> 00:11:21.380
proprietary things like face ID
and touch ID. Sure. Face

204
00:11:21.380 --> 00:11:24.920
ID and touch ID are
certainly a valid method of

205
00:11:24.920 --> 00:11:27.770
authentication. And if you are
a developer, who's looking for

206
00:11:27.770 --> 00:11:30.290
a quick and easy way
to do two factor authentication.

207
00:11:31.220 --> 00:11:34.100
Those APIs are open. They're
very easy. It's just a

208
00:11:34.100 --> 00:11:36.260
couple of lines of code.
And you can add them

209
00:11:36.260 --> 00:11:39.140
into your application and require
a touch ID or a

210
00:11:39.140 --> 00:11:42.140
face ID either in lieu
of, or in addition to

211
00:11:42.140 --> 00:11:48.260
a password. So I highly
recommend that. But as far

212
00:11:48.260 --> 00:11:51.950
as NFC support, that's always
going to be a struggle

213
00:11:51.950 --> 00:11:57.400
rate. Even if Apple were
to open it up, they

214
00:11:57.400 --> 00:12:00.310
could pull it out at
any time. And so as

215
00:12:00.310 --> 00:12:02.860
a developer, it's very hard
to be reliant on a

216
00:12:02.860 --> 00:12:06.010
closed system, a proprietary system
like that because you just

217
00:12:06.010 --> 00:12:07.660
don't have control over. What's
going to happen in the

218
00:12:07.660 --> 00:12:11.520
future. Are they on our
side? Are they on the

219
00:12:11.530 --> 00:12:13.020
side of the consumer or
are they on the side

220
00:12:13.020 --> 00:12:17.640
of standards? They do not
normally come to standards, agency

221
00:12:17.640 --> 00:12:20.520
meetings. They do not come
to the IATF or the

222
00:12:20.520 --> 00:12:24.060
open ID foundation. I can
tell you that much. IATF

223
00:12:24.060 --> 00:12:26.850
sorry, is the internet engineering
task force. They do the

224
00:12:27.150 --> 00:12:31.950
OAuth standard, which is a
very common method of delegated

225
00:12:34.020 --> 00:12:40.710
delegated, usually authentication, but technically
authorization. Do these, these, these

226
00:12:40.830 --> 00:12:44.430
identity organizations, these standard organizations,
like the ones that you

227
00:12:44.430 --> 00:12:49.230
just described, are they able
to really move the needle

228
00:12:49.230 --> 00:12:53.400
on the internet itself? Or
like, do you ever find

229
00:12:53.400 --> 00:12:55.560
yourself coming up with a
standard in a committee? And

230
00:12:55.560 --> 00:13:00.330
then the standard never goes
anywhere just because whatever business

231
00:13:00.330 --> 00:13:02.640
factors, the internet didn't go
for it or whatever, like,

232
00:13:02.640 --> 00:13:04.530
are there standards that were
amazing, that would have solved

233
00:13:04.530 --> 00:13:08.340
all our problems, but they
just never happened. I struggle

234
00:13:08.340 --> 00:13:12.430
with that question a lot.
It's a great question. Oh,

235
00:13:12.430 --> 00:13:15.660
loss. Oh, the 2.0 and
open ID connect are certainly

236
00:13:15.660 --> 00:13:18.390
standards that ha that the
internet has picked up and

237
00:13:18.390 --> 00:13:22.770
taken for their own. If
we probably you and I

238
00:13:22.770 --> 00:13:25.710
use often open ID connect
every day. If you use

239
00:13:26.040 --> 00:13:30.210
login with Facebook login with
Google, anytime you do that,

240
00:13:30.240 --> 00:13:34.260
you're using open ID connect.
So that has certainly had

241
00:13:34.260 --> 00:13:36.690
a lot of uptake there
also a lot of great

242
00:13:36.690 --> 00:13:39.840
ideas and identity that have
not gotten uptake. And I

243
00:13:39.840 --> 00:13:42.330
think it's because we're a
very insular community. We're a

244
00:13:42.330 --> 00:13:45.990
very jargony community. And I
would really like to fix

245
00:13:45.990 --> 00:13:50.520
that. I'm doing a talk
at RSA this year called

246
00:13:50.550 --> 00:13:55.500
identity in 1,000 words. And
the idea is borrowed from

247
00:13:56.010 --> 00:13:59.340
Randleman robe, XKCD, you know,
him, the web comic, of

248
00:13:59.340 --> 00:14:04.170
course. So he wrote a
book called thing explainer, where

249
00:14:04.170 --> 00:14:07.530
he explains complicated objects like
the Saturn five rocket using

250
00:14:07.530 --> 00:14:10.260
only the thousand most common
words in the English language.

251
00:14:11.430 --> 00:14:14.610
So I decided that we
need that for identity. We

252
00:14:14.610 --> 00:14:18.300
need to explain what authorization
is, what authentication is in

253
00:14:18.300 --> 00:14:21.330
really basic, easy to understand
terms. So that's the talk

254
00:14:21.330 --> 00:14:24.060
that I'm going to be
getting, that'll be on RSA

255
00:14:24.060 --> 00:14:29.040
TV on April 17th. Is that
challenging though, because I've, I've

256
00:14:29.040 --> 00:14:32.670
seen you write about this
identity in 1,000 words before.

257
00:14:33.000 --> 00:14:34.800
And I feel like if
I were trying to explain

258
00:14:34.800 --> 00:14:38.940
this to nontechnical family member,
I might lose them at

259
00:14:39.000 --> 00:14:42.390
assertion and credentialing and system
of record, even though those

260
00:14:42.390 --> 00:14:46.290
are English words that are
simple, they sure sound complicated.

261
00:14:46.680 --> 00:14:48.330
Right. And that's the problem
is that they do sound

262
00:14:48.330 --> 00:14:52.580
complicated, but an assertion is
something that we've for as

263
00:14:52.580 --> 00:14:55.430
long as we've been humans,
right. I assert that there

264
00:14:55.430 --> 00:14:57.380
are cookies in the cookie
jar and that may or

265
00:14:57.380 --> 00:14:59.600
may not be true. And
you can check that assertion

266
00:14:59.600 --> 00:15:01.400
by opening up the cookie
jar and saying, are there

267
00:15:01.400 --> 00:15:04.900
cookies in it? Right? Mm,
okay. So they might, they

268
00:15:04.900 --> 00:15:07.750
might be initially challenging, but
they are still basic words

269
00:15:07.750 --> 00:15:11.770
that have concepts that everyone
understands, Right. Identity is not

270
00:15:11.770 --> 00:15:13.750
a hard field to learn.
It's not a hard field

271
00:15:13.750 --> 00:15:16.690
to explain, but it's very
difficult to pick up if

272
00:15:16.690 --> 00:15:21.340
we're only using the industry
specific jargon that all of

273
00:15:21.340 --> 00:15:25.360
us know that we can't
communicate to everyday people, everyday

274
00:15:25.360 --> 00:15:28.390
developers. Right. I feel like
sometimes I lose people at

275
00:15:28.390 --> 00:15:34.600
auth and auth All the
time, even industry professionals get,

276
00:15:34.600 --> 00:15:37.600
get lost with the difference
between authentication and authorization. Yeah.

277
00:15:37.630 --> 00:15:41.320
Yeah. I remember 12 years
ago, 10 years ago when

278
00:15:41.350 --> 00:15:44.890
open ID was happening, I,
I rushed to add Metta

279
00:15:44.890 --> 00:15:48.940
keys to my, my blog.
And then I started logging

280
00:15:48.940 --> 00:15:52.420
into stack overflow, which was
the first kind of major

281
00:15:52.420 --> 00:15:54.490
website that would let me
log in by putting in

282
00:15:54.490 --> 00:15:59.200
my, my, my website. And
then the browser did this

283
00:15:59.200 --> 00:16:02.860
dance where it would bounce
over there and then look

284
00:16:02.860 --> 00:16:04.990
at my Medikidz and then
there'd be, you know, a

285
00:16:04.990 --> 00:16:11.110
combination of client side and
server side handshakes, for lack

286
00:16:11.110 --> 00:16:12.790
of a better word. But
now when I go to

287
00:16:12.790 --> 00:16:15.010
things like stack overflow, I
see Google, I see Facebook.

288
00:16:15.010 --> 00:16:17.770
I see LinkedIn. I see,
I see basically everything except

289
00:16:17.770 --> 00:16:20.650
open ID and using stack
overflow. As an example, they've

290
00:16:20.650 --> 00:16:27.880
now buried open ID, deep
into other options did open

291
00:16:27.880 --> 00:16:30.790
ID, ties it over. Is
it just on, is it

292
00:16:30.790 --> 00:16:34.960
just done? Open ID originally
did not get a lot

293
00:16:34.960 --> 00:16:37.360
of uptake because most people
don't run their own websites.

294
00:16:37.360 --> 00:16:41.050
They don't have their own
domains. And then open ID

295
00:16:41.050 --> 00:16:44.110
connect came along and made
it very easy for people

296
00:16:44.110 --> 00:16:47.140
to use <inaudible> for things
like Google and Facebook and

297
00:16:47.140 --> 00:16:50.260
LinkedIn, like you mentioned, and
have it be standard and

298
00:16:50.260 --> 00:16:54.070
interoperable and secure. So open
ID connect to definitely one

299
00:16:54.070 --> 00:16:58.600
out over the longterm in
terms of adoption. We're still

300
00:16:58.600 --> 00:17:02.440
trying to get it though
in places like banking. So

301
00:17:02.440 --> 00:17:05.680
there's an initiative in the
EU toward open banking. If

302
00:17:05.680 --> 00:17:11.170
you use a financial aggregator
like mint.com or personal capital.com,

303
00:17:11.620 --> 00:17:14.920
you actually enter all of
your own bank credentials. You

304
00:17:14.920 --> 00:17:17.920
give them your password And
they scrape, they go off

305
00:17:17.920 --> 00:17:20.830
and then they log in
for you Screen scrape. Yes.

306
00:17:21.220 --> 00:17:22.960
And in order to screen
scrape, they have to store

307
00:17:22.960 --> 00:17:27.010
your password in clear text,
or at least encoded in

308
00:17:27.010 --> 00:17:30.110
a way that they can
decode it. Right? So it's

309
00:17:30.190 --> 00:17:32.620
not a, it's not assaulted
hash password that they're storing.

310
00:17:32.620 --> 00:17:35.710
So this is a huge
problem. We, and we're trying

311
00:17:35.710 --> 00:17:38.860
to use OAuth and open
ID connect basically to force

312
00:17:38.860 --> 00:17:41.920
banks, to have an API,
have a protected API so

313
00:17:41.920 --> 00:17:47.020
that I can say I'm
going to delegate access to

314
00:17:47.020 --> 00:17:50.370
my bank account to mint.com
so they can access this

315
00:17:50.370 --> 00:17:53.330
API on my behalf. This
is like, when you log

316
00:17:53.330 --> 00:17:55.820
into something in Facebook or
in Twitter, and it says,

317
00:17:56.310 --> 00:17:57.590
we're going to need to
be able to log in

318
00:17:57.590 --> 00:18:00.560
when you're not around to
do stuff. Is that okay?

319
00:18:00.560 --> 00:18:04.880
It's an extra bit of,
of requirements that they request

320
00:18:04.880 --> 00:18:07.760
on your behalf, but they
don't have your password. Exactly.

321
00:18:07.760 --> 00:18:10.280
So then you get that
proactive consent screen that says

322
00:18:10.310 --> 00:18:13.850
this application will have access
to your name, your address,

323
00:18:13.850 --> 00:18:18.770
your account balances, your activity.
Do you agree, do you

324
00:18:18.770 --> 00:18:23.930
consent to give this organization
access? But now if you

325
00:18:23.930 --> 00:18:26.480
could maybe talk a little
bit more about open ID

326
00:18:26.510 --> 00:18:30.230
versus open ID connect, because
I understand that they're both

327
00:18:30.230 --> 00:18:34.790
for authentication and open ID
connect, even though it has

328
00:18:34.790 --> 00:18:38.090
the same name, it's really
OAuth underneath, which is an

329
00:18:38.090 --> 00:18:41.930
authorization protocol, Right? So when
OA first came out, it

330
00:18:41.930 --> 00:18:47.150
was revolutionary. But in order
to make it be interoperable

331
00:18:47.150 --> 00:18:49.880
between companies, you had to
agree on, well, what do

332
00:18:49.880 --> 00:18:51.650
you call a name? Well,
I call it name, you

333
00:18:51.650 --> 00:18:53.960
call it surname. What do
you call an email? I

334
00:18:53.960 --> 00:18:56.420
call it address you call
it email, right? So you

335
00:18:56.420 --> 00:18:58.940
had to figure out what
everyone was calling different attributes.

336
00:18:59.570 --> 00:19:02.540
So open ID connect came
along and added not only

337
00:19:02.540 --> 00:19:07.370
the authentication piece to OAuth,
but also a basic profile

338
00:19:07.370 --> 00:19:10.400
piece to just say, here
are the attributes that almost

339
00:19:10.400 --> 00:19:13.040
everyone needs the pieces of
information about the user that

340
00:19:13.040 --> 00:19:15.470
we all need. Let's just
standardize what we're going to

341
00:19:15.470 --> 00:19:19.070
call these. And that's really
what made adoption of open

342
00:19:19.070 --> 00:19:22.970
ID connect, blow up. And
if I log in then

343
00:19:22.970 --> 00:19:25.550
to stack overflow and I
see Google or Facebook, will

344
00:19:25.550 --> 00:19:29.180
I ever again be able
to have my own, you

345
00:19:29.180 --> 00:19:31.130
know, I don't know, security
server to have to run

346
00:19:31.130 --> 00:19:33.410
it myself, or should I
just feel okay about these,

347
00:19:33.710 --> 00:19:36.410
these walled gardens and these
giant companies managing my identity?

348
00:19:36.710 --> 00:19:40.190
Cause they're the best practice.
So you mentioned standards that

349
00:19:40.190 --> 00:19:44.060
don't get wide adoption, but
that are being created. One

350
00:19:44.060 --> 00:19:47.060
of those standards in the
internet engineering task force is

351
00:19:47.150 --> 00:19:51.230
a, what we call dynamic
registration and the auth working

352
00:19:51.230 --> 00:19:55.820
group. So dynamic registration is
the concept that you have

353
00:19:56.150 --> 00:20:00.680
a signed statement that lives
somewhere on your website that

354
00:20:00.680 --> 00:20:03.800
says, here's my here's all
of my aunts and points.

355
00:20:03.800 --> 00:20:06.890
Here's my public key. Here's
my name, here's my domain.

356
00:20:06.890 --> 00:20:10.580
Here's all the domains that
I use. And then anyone

357
00:20:10.580 --> 00:20:17.300
can come to your application
and either use it to

358
00:20:17.300 --> 00:20:22.040
log in or log into
it. Hmm. I'm trying to,

359
00:20:22.550 --> 00:20:25.910
So that there's no preregistration
required. So instead of having

360
00:20:25.940 --> 00:20:29.450
a login with Google login,
with Facebook login, with LinkedIn,

361
00:20:29.450 --> 00:20:31.880
you can say, log in
with your domain and you

362
00:20:31.880 --> 00:20:36.950
can type in Hansel minutes.com.
And it says, okay, let

363
00:20:36.950 --> 00:20:41.060
me look up where your
software statement is. And then

364
00:20:41.120 --> 00:20:44.150
I can register you without
any humans having to do

365
00:20:44.150 --> 00:20:49.450
anything as an auth service
provider. And then you can

366
00:20:49.450 --> 00:20:53.250
log in with your domain.
So that seems to bring

367
00:20:53.250 --> 00:20:57.120
us back to the beginning
in 2006, when I would

368
00:20:57.120 --> 00:21:00.840
go and, and, and say
my open ID, like if

369
00:21:00.840 --> 00:21:03.300
you look in the meta-tags
of my blog, I still

370
00:21:03.300 --> 00:21:06.180
have these things. I'm actually
I'll do it right now.

371
00:21:06.210 --> 00:21:09.690
View page source. And there
it is. There's like, meta-tags

372
00:21:09.720 --> 00:21:13.440
open ID says go over
here. And then I think

373
00:21:13.440 --> 00:21:17.610
I had one of the,
the open ID providers at

374
00:21:17.610 --> 00:21:20.250
the time do that. Or
are we just returning to

375
00:21:20.250 --> 00:21:23.910
that idea? Yes. It's a
different way of doing that

376
00:21:23.910 --> 00:21:27.300
same thing. There's also some
really interesting work going on

377
00:21:27.930 --> 00:21:32.220
in the blockchain space. So
is called Evernham and a

378
00:21:32.220 --> 00:21:37.140
nonprofit called sovereign are working
on creating a public directory

379
00:21:37.230 --> 00:21:42.210
of people, of identifiers for
people or organizations or businesses,

380
00:21:42.510 --> 00:21:47.190
and then an associated public
key and identity document. So

381
00:21:47.190 --> 00:21:48.990
that's some really interesting work
that's going on that could

382
00:21:48.990 --> 00:21:55.200
also enable that sort of
decentralized open way of authentication

383
00:21:55.230 --> 00:21:58.560
through whatever mechanism you choose.
So then there would be

384
00:21:58.560 --> 00:22:02.460
a publicly available ledger that
was like a publicly available

385
00:22:03.480 --> 00:22:06.510
immutable, yellow pages or white
pages out there for people

386
00:22:06.570 --> 00:22:11.520
to look up other people.
Yes, exactly interesting. But the,

387
00:22:11.540 --> 00:22:14.190
I don't know whoever Nim
is, but it sounds like

388
00:22:14.220 --> 00:22:16.110
as with all things, if
I went to their website,

389
00:22:16.110 --> 00:22:19.980
it would probably say products.
And how do we balance

390
00:22:20.010 --> 00:22:22.770
trying to build companies around
these things versus trying to

391
00:22:22.770 --> 00:22:28.320
build a standards that will
live beyond evernham.com going out

392
00:22:28.320 --> 00:22:33.810
of business? So the sovereign
foundation is part of this

393
00:22:33.810 --> 00:22:38.010
strategy. So Evernham would be
one identity provider in the

394
00:22:38.010 --> 00:22:42.180
broader sovereign ecosystems. And the
idea is to have an

395
00:22:42.180 --> 00:22:45.480
ecosystem that anyone can join.
Anyone can create a node.

396
00:22:46.440 --> 00:22:51.090
It is a permission to
ledger. So you can kick

397
00:22:51.090 --> 00:22:54.210
people off if they're acting
maliciously, if they are attacking

398
00:22:54.210 --> 00:22:57.900
other people. But the idea
is that anyone should be

399
00:22:57.900 --> 00:23:00.960
able to join. Anyone should
be able to, to have

400
00:23:00.960 --> 00:23:05.400
a node, to act as
an identity provider and that

401
00:23:06.090 --> 00:23:10.260
it should be open and
distributed, not reliant on any

402
00:23:10.260 --> 00:23:12.570
one company or person. I
do not want to be

403
00:23:12.570 --> 00:23:15.120
reliant on anyone as much
as I like logging the

404
00:23:15.140 --> 00:23:17.460
account. I don't want to
be reliant on anyone. So

405
00:23:17.490 --> 00:23:20.550
let's get to practical. What
can we do when we're

406
00:23:20.550 --> 00:23:24.150
done with this podcast type
stuff, there's author and there's

407
00:23:24.150 --> 00:23:27.870
last pass and there's one
password and there's coming standards

408
00:23:27.870 --> 00:23:32.550
and there's YubiKeys right now.
I go to Thanksgiving dinner

409
00:23:32.550 --> 00:23:34.680
and I tell everyone to
think about using something like

410
00:23:34.680 --> 00:23:37.740
coffee and turning on two
factor auth at least on

411
00:23:37.770 --> 00:23:40.710
Gmail and Facebook. And if
they can on their bank,

412
00:23:41.190 --> 00:23:44.220
but you be keys. And
I use YubiKey in the

413
00:23:44.220 --> 00:23:48.170
generic term, Kleenex, not trying
to sell their stuff, but

414
00:23:48.950 --> 00:23:51.080
it still feels a little
techie. Like, I'm not sure

415
00:23:51.080 --> 00:23:54.260
how I could sell my
dad AUB key, or should

416
00:23:54.380 --> 00:23:59.140
do you think I should.
I think you should. I

417
00:23:59.140 --> 00:24:04.000
think that it's getting really
easy to crack passwords. And

418
00:24:04.000 --> 00:24:06.130
part of that is due
to bad password policies, which

419
00:24:06.130 --> 00:24:11.440
we should also talk about,
but YubiKey, it's not a

420
00:24:11.440 --> 00:24:13.270
hard concept, right? You can
keep it on a key

421
00:24:13.270 --> 00:24:15.040
chain. You plug it into
a USB drive. When the

422
00:24:15.040 --> 00:24:17.350
computer tells you to, it
is something that everyday people

423
00:24:17.350 --> 00:24:21.760
can do to increase their
security. And even if they

424
00:24:21.760 --> 00:24:24.910
are not people who would
be specifically targeted, even if

425
00:24:24.910 --> 00:24:27.280
they're not celebrities, even if
they don't have a lot

426
00:24:27.280 --> 00:24:31.810
of assets to steal, there
are people doing broad attacks

427
00:24:31.870 --> 00:24:37.240
of just swaths, swaths of
people at different services and

428
00:24:37.240 --> 00:24:40.230
hoping that they come up
with something useful and, and

429
00:24:40.240 --> 00:24:43.810
having your identity stolen as
everyone knows, is just a

430
00:24:43.810 --> 00:24:47.710
huge amount of work to
recover from. So if, if

431
00:24:47.710 --> 00:24:50.260
buying a YubiKey and tapping
it every time you log

432
00:24:50.260 --> 00:24:52.630
in is a solution to
that, that's, it's like flossing

433
00:24:52.630 --> 00:24:56.620
your teeth, right? It's a
pain, but, but you do

434
00:24:56.620 --> 00:24:59.200
it to avoid the worst
pain down the road, Right?

435
00:24:59.470 --> 00:25:01.450
The way I got my
kids to floss their teeth

436
00:25:01.450 --> 00:25:04.360
was, I said, if you're
not flossing, you might as

437
00:25:04.360 --> 00:25:06.760
well just not even bother
brushing. Like it's not even

438
00:25:06.760 --> 00:25:10.390
worth it. So to apply
that to a, you know,

439
00:25:10.390 --> 00:25:11.830
if you're not using two
factor auth, you might as

440
00:25:11.830 --> 00:25:14.470
well just make your password
password because ultimately you will

441
00:25:14.470 --> 00:25:20.320
be owned. You're not wrong.
So do you recommend passphrases

442
00:25:20.320 --> 00:25:23.590
or do you recommend password
managers to, to nontechnical parents?

443
00:25:24.610 --> 00:25:27.880
I recommend password managers, for
sure. I think they're a

444
00:25:27.880 --> 00:25:31.960
way better. Passphrases are also
good. So passphrases are where

445
00:25:31.960 --> 00:25:36.520
you have a, a sentence
or a line or a

446
00:25:36.520 --> 00:25:40.030
series of regular English words
that you can easily memorize

447
00:25:40.030 --> 00:25:42.280
and type in. So what
that makes for is a

448
00:25:42.280 --> 00:25:44.800
really long password. That's very
easy to remember, which is

449
00:25:44.800 --> 00:25:48.430
exactly what we want in
terms of entropy. I'm looking

450
00:25:48.430 --> 00:25:50.440
using, again, just you as
an example, I'm sure you

451
00:25:50.440 --> 00:25:52.540
can suggest some other ones.
If I go up there

452
00:25:52.540 --> 00:25:56.440
and I click store, I'm
technical, I have a podcast

453
00:25:56.470 --> 00:26:00.250
about technical stuff, and I'm
looking at eight different YubiKeys.

454
00:26:00.430 --> 00:26:03.460
I don't know which one
depends. You know what I'm

455
00:26:03.460 --> 00:26:05.680
saying? It's like, well, this
one's cheap and this one

456
00:26:05.680 --> 00:26:08.800
stays in the port, but
then Sarah said, don't keep

457
00:26:08.800 --> 00:26:10.750
it in the port, put
it on an earring. This

458
00:26:10.750 --> 00:26:14.140
one's tiny. I have no
idea how anyone would expect

459
00:26:14.140 --> 00:26:20.380
this to become a, a,
a, a widespread, everyone has

460
00:26:20.380 --> 00:26:24.430
one consumer thing. If, if
they don't solve that problem,

461
00:26:25.000 --> 00:26:26.740
You know, there are 20
different kinds of floss. They

462
00:26:26.740 --> 00:26:32.770
all work. That's true. It's
true. I do think it's

463
00:26:32.770 --> 00:26:34.600
a problem that you be
key that you be COVID,

464
00:26:34.620 --> 00:26:36.120
which is the name of
the company that produces you.

465
00:26:36.130 --> 00:26:39.700
The keys is the primary
provider. Currently. They are the

466
00:26:39.700 --> 00:26:43.060
only one who, who is
really doing this at scale.

467
00:26:44.100 --> 00:26:46.560
So if, you know, if
we start to rely on

468
00:26:46.560 --> 00:26:51.540
them and something happens, if
they decide to go proprietary,

469
00:26:51.540 --> 00:26:54.180
if part of their supply
chain gets wonky, right. And

470
00:26:54.180 --> 00:26:57.720
they can't produce as fast
as they could before, we're

471
00:26:57.720 --> 00:27:00.830
all in trouble. Interesting. So
let me ask you this

472
00:27:00.830 --> 00:27:03.320
though. If they, if that
happens theoretically, or if we've

473
00:27:03.320 --> 00:27:06.830
started looking at whoever's, you
know, if I say, I

474
00:27:06.830 --> 00:27:08.990
want one of these keys
from anyone who is not

475
00:27:08.990 --> 00:27:12.950
YubiKey, am I going to
be looking at dodgy, overseas

476
00:27:12.950 --> 00:27:15.230
tech companies that I've never
heard of? And might they

477
00:27:15.230 --> 00:27:18.890
be compromised? Yes, absolutely. You
might be looking at dodgy

478
00:27:18.890 --> 00:27:23.870
companies. They might be compromised.
There is a standards organization

479
00:27:23.870 --> 00:27:27.650
called the Fido Alliance that
certifies companies, so that, you

480
00:27:27.650 --> 00:27:32.660
know, whether they're authentication devices
are actually compliant with, with

481
00:27:32.660 --> 00:27:35.270
the standard, with the security
standard or not. So if

482
00:27:35.270 --> 00:27:37.460
you see you two F
the letter, you, the number

483
00:27:37.460 --> 00:27:40.880
two, the letter F U
two F certified on a

484
00:27:40.880 --> 00:27:44.090
device, that means that it
is compliant with the security

485
00:27:44.090 --> 00:27:46.580
standard, and you can trust
it. I see. So just

486
00:27:46.580 --> 00:27:49.310
like I can buy a,
a power adapter and it

487
00:27:49.310 --> 00:27:52.550
says UL certified and people
have over the years learned

488
00:27:52.550 --> 00:27:55.610
about that. We'll start learning
that Fido certified means something.

489
00:27:57.080 --> 00:28:02.420
Okay. Right before we started
recording, as you recall, we

490
00:28:02.420 --> 00:28:04.130
were, we were talking about
what we're going to talk

491
00:28:04.130 --> 00:28:06.920
about on this show. I
got a phone call and

492
00:28:06.920 --> 00:28:09.500
it said unknown caller, but
it said San Diego. And

493
00:28:09.500 --> 00:28:11.300
I don't, I don't know
anyone from San Diego. So

494
00:28:11.450 --> 00:28:13.760
you were very kind and
you said, okay. I took

495
00:28:13.760 --> 00:28:16.700
a moment. I took the
call and it was someone

496
00:28:16.700 --> 00:28:19.190
saying that they wanted to
give me money. It was

497
00:28:19.190 --> 00:28:20.840
my health care provider that
said that we've cut a

498
00:28:20.840 --> 00:28:25.190
check for you. And without
realizing that I was also

499
00:28:25.190 --> 00:28:29.090
on the phone with a
identity expert yourself, I said,

500
00:28:29.510 --> 00:28:31.430
how do I know that
you are, who you say

501
00:28:31.430 --> 00:28:34.430
you are? And they said
that they were going to

502
00:28:34.460 --> 00:28:40.040
email me. Did I do
the right thing? Yeah, absolutely.

503
00:28:40.820 --> 00:28:47.870
Phone fishing is very common.
Unfortunately, a lot of companies

504
00:28:47.870 --> 00:28:51.260
still use what we call
knowledge based authentication, which is

505
00:28:51.410 --> 00:28:55.460
secret questions or questions over
the phone about your account,

506
00:28:55.490 --> 00:29:00.110
about personal information, about places
you might've lived. A lot

507
00:29:00.110 --> 00:29:03.230
of authentication, including credit applications
is still done in that

508
00:29:03.230 --> 00:29:07.790
manner. I was part of
the team that rewrote the

509
00:29:07.790 --> 00:29:11.240
NIST digital identity guidelines. And
we actually outlawed that for

510
00:29:11.240 --> 00:29:14.600
federal agencies. So at least
as far as the American

511
00:29:14.600 --> 00:29:17.480
government is concerned, they are
not allowed to use knowledge

512
00:29:17.480 --> 00:29:21.800
based authentication, but banks still
do it. People who can

513
00:29:21.800 --> 00:29:24.020
open up lines of credit,
people who can issue mortgages,

514
00:29:24.020 --> 00:29:26.930
they still use knowledge based
authentication. So giving out personal

515
00:29:26.930 --> 00:29:32.060
information about yourself is still
dangerous. It's good to love

516
00:29:32.060 --> 00:29:34.040
to get to a place
where that's not true because

517
00:29:34.040 --> 00:29:36.440
personal information is very easy
to find on the internet,

518
00:29:36.470 --> 00:29:40.400
but we're not there yet.
They have not yet emailed

519
00:29:40.400 --> 00:29:43.440
me, which creeps me out.
Well, maybe it wasn't a

520
00:29:43.450 --> 00:29:46.230
sacker. I see. And this
is the other thing, you

521
00:29:46.230 --> 00:29:48.390
know, when you get a
mortgage in the U S

522
00:29:48.420 --> 00:29:51.150
they'll say, okay, we're going
to do some authentication of

523
00:29:51.150 --> 00:29:52.830
the phone. And then they
started asking you questions about

524
00:29:52.830 --> 00:29:54.900
like 30 years ago, you
used to live on what

525
00:29:54.900 --> 00:29:57.450
street and then, you know,
how do you know this?

526
00:29:57.450 --> 00:29:59.430
This is not okay. This
is not a way of

527
00:29:59.760 --> 00:30:01.740
proving. It's me. You know,
more about me than I

528
00:30:01.740 --> 00:30:04.650
do. Yeah. Yeah. And it's
even worse when you don't

529
00:30:04.650 --> 00:30:07.650
know, like when you get
these security questions, like we

530
00:30:07.650 --> 00:30:09.330
know what's your favorite food.
I'm like, I don't know

531
00:30:09.330 --> 00:30:11.280
what my favorite food is
at the time I took

532
00:30:11.280 --> 00:30:14.310
this test before. Yeah. So
I was working with the

533
00:30:14.310 --> 00:30:17.580
university of Washington when they
replaced their knowledge based authentication

534
00:30:17.580 --> 00:30:20.610
system. And they had data
going back 10 years showing

535
00:30:20.610 --> 00:30:25.170
that 60% of users get
their secret questions wrong on

536
00:30:25.170 --> 00:30:29.760
the first try. So it's
not just bad security. It's

537
00:30:29.760 --> 00:30:35.910
really bad usability. We do
not even know ourselves. Well,

538
00:30:35.910 --> 00:30:38.010
thank you so much, Sarah
Squire for talking to me

539
00:30:38.010 --> 00:30:40.590
about identity day. It was
wonderful talking to you, Scott.

540
00:30:41.190 --> 00:30:44.310
This has been another episode
of Hanselminutes and we'll see

541
00:30:44.310 --> 00:30:45.330
you again next week.

