WEBVTT FILE

1
00:00:12.180 --> 00:00:17.670
From hanselminutes.com. It's Hansel minutes.
Our weekly discussion with web

2
00:00:17.670 --> 00:00:22.380
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.380 --> 00:00:28.800
number two 63. Recorded live
Thursday, April 21st, 2011. Support for Hansel

4
00:00:28.800 --> 00:00:32.550
minutes is provided by Tellerik
rad controls, the most comprehensive

5
00:00:32.550 --> 00:00:36.390
suite of components for windows
forms and asp.net web applications.

6
00:00:36.870 --> 00:00:44.790
online@wwwdottelerik.com. In this episode, Scott
talks with Chris cells about

7
00:00:44.850 --> 00:00:51.510
writing JavaScript and HTML. Hi,
this is Scott Hanselman. This

8
00:00:51.510 --> 00:00:54.390
is another episode of Hansel
minutes. I was up late

9
00:00:54.390 --> 00:00:57.960
coding. What were you doing
this week? We've got Chris

10
00:00:57.960 --> 00:01:00.120
cells talking about what it's
like to go from being

11
00:01:00.120 --> 00:01:02.100
a C plus plus person
to being a JavaScript person.

12
00:01:02.760 --> 00:01:06.740
Hey Chris, were you up
late coding? Well, it depends

13
00:01:06.740 --> 00:01:08.600
on what you think is
late. I think I was

14
00:01:08.600 --> 00:01:11.180
up early coding. I actually
went to bed about seven

15
00:01:11.180 --> 00:01:16.610
30 this morning. Wow. So
you are either under a,

16
00:01:17.630 --> 00:01:20.870
a schedule crunch or you
are having fun or both?

17
00:01:21.860 --> 00:01:26.330
Actually. It is a combination
of both. Yes, That's fantastic.

18
00:01:26.330 --> 00:01:28.610
So what are you working
on? I haven't talked to

19
00:01:28.610 --> 00:01:31.430
you a lot lately and
I don't know what, I

20
00:01:31.430 --> 00:01:34.700
don't know what you're doing.
So I'm working on JavaScript

21
00:01:34.700 --> 00:01:38.630
and HTML tools over in
the developer division at Microsoft.

22
00:01:40.310 --> 00:01:44.000
And this is a new
job for me as of

23
00:01:44.000 --> 00:01:47.090
November of last year. So
I'm still relatively new. Okay.

24
00:01:47.450 --> 00:01:49.790
And are you a, are
you still a program manager

25
00:01:49.790 --> 00:01:51.650
where you're coming up with
features or are you writing

26
00:01:51.650 --> 00:01:56.270
code now? I am a
program manager. I do come

27
00:01:56.270 --> 00:01:59.660
up with features and I
am writing code. I get

28
00:01:59.660 --> 00:02:02.300
to do a lot of
that. Also. I've been writing

29
00:02:03.140 --> 00:02:05.780
a bunch of pros lately,
too, which has been really

30
00:02:05.780 --> 00:02:13.850
great. I find the mix
of, of writing code and

31
00:02:13.850 --> 00:02:19.730
then writing articles about writing
that code. I find that

32
00:02:19.730 --> 00:02:24.560
a very nice mix. It
makes me happy. That's cool.

33
00:02:25.700 --> 00:02:28.790
Were you a little scared
going from, I mean, you're

34
00:02:28.790 --> 00:02:31.610
a, you know, old school
programmer if I may. I

35
00:02:31.610 --> 00:02:34.410
mean that like compliment kind
of a way I haven't

36
00:02:34.440 --> 00:02:36.860
thought of you as being
too much of a, an

37
00:02:36.860 --> 00:02:38.660
HTML guy. Although I know
that we'd spend a little

38
00:02:38.660 --> 00:02:42.320
bit of time working on
asp.net MVC together and you

39
00:02:42.320 --> 00:02:44.420
know, you've got, you've built
your own website, you know,

40
00:02:44.420 --> 00:02:47.180
you're certainly a competent HTML
guy, but I don't think

41
00:02:47.180 --> 00:02:49.460
Chris sells and JavaScript to
kind of in the same

42
00:02:49.460 --> 00:02:56.840
sentence. Yeah, that's the scared.
No, I, I love new

43
00:02:56.840 --> 00:03:00.340
technologies. I love new challenges.
I love new things, new

44
00:03:00.340 --> 00:03:06.010
adventures. I I'm happy to
do new things all the

45
00:03:06.010 --> 00:03:10.450
time. I'll tell you. I
do feel like I am

46
00:03:11.440 --> 00:03:16.120
climbing quite a curve that
the last time I did

47
00:03:16.120 --> 00:03:20.410
any JavaScript was literally before
I did any.net. So it

48
00:03:20.410 --> 00:03:25.240
was 10 years ago. I
started.net, you know, and when

49
00:03:25.240 --> 00:03:28.540
it was in beta before
1.0 and have been doing

50
00:03:28.540 --> 00:03:32.350
it pretty solidly in a
variety of ways since then.

51
00:03:33.040 --> 00:03:38.710
And it is literally just
in the last six months

52
00:03:38.740 --> 00:03:43.420
that I've done any serious
JavaScript. And I have done

53
00:03:44.350 --> 00:03:49.450
a pretty decent HTML from
the server side UI composition.

54
00:03:49.510 --> 00:03:53.860
I'm a big MVC fan
rewrote, my whole website a

55
00:03:53.860 --> 00:03:56.830
couple of times. Right? So
I'm familiar with HTML. The

56
00:03:56.830 --> 00:03:59.860
thing I was only a
little bit familiar with is

57
00:03:59.890 --> 00:04:03.160
that the smallest amount of
CSS that I needed to

58
00:04:03.160 --> 00:04:07.300
get by, and I just
avoided JavaScript altogether. I don't

59
00:04:07.300 --> 00:04:12.370
think there's any real JavaScript
to my website. And I

60
00:04:12.370 --> 00:04:18.700
have been doing pretty serious
CSS three, you know, and

61
00:04:18.700 --> 00:04:24.850
we just released a CTP
of <inaudible> and I've been

62
00:04:24.850 --> 00:04:28.900
writing CSS and HTML five
to take care of those

63
00:04:28.960 --> 00:04:32.380
advanced features in our browser.
I mean, it's been pretty

64
00:04:32.380 --> 00:04:37.660
hard for, and I'll tell
ya, it's the, the thing

65
00:04:37.660 --> 00:04:41.440
that has been most surprising
to me, it's amazing how

66
00:04:41.440 --> 00:04:44.770
much you can do with
how little in JavaScript. I

67
00:04:44.770 --> 00:04:46.660
mean, when you get done,
when you make it work,

68
00:04:47.140 --> 00:04:49.930
right, the amount of JavaScript
you have to do, amazing

69
00:04:49.930 --> 00:04:55.090
things is teeny tiny amounts.
So the problem I struggle

70
00:04:55.090 --> 00:04:58.600
with still, and, you know,
I'm sure I will, for

71
00:04:58.600 --> 00:05:02.260
awhile. It's a, it's a,
it's a thing, right? It's

72
00:05:02.260 --> 00:05:04.390
a real platform. It's a
real environment that has been

73
00:05:04.390 --> 00:05:07.870
growing up for like 15
years. So I shouldn't feel

74
00:05:07.870 --> 00:05:11.740
so bad about, you know,
still feeling intermediate after six

75
00:05:11.740 --> 00:05:14.200
months. But even though it's
a tiny little bit of

76
00:05:14.200 --> 00:05:17.590
code by the time you're
done getting to what that

77
00:05:17.590 --> 00:05:21.340
tiny bit of code is,
is still banging my head

78
00:05:21.340 --> 00:05:25.380
against the wall a lot.
Is that idiomatic? I mean,

79
00:05:25.380 --> 00:05:27.360
is it a matter of,
this is a new language

80
00:05:27.360 --> 00:05:29.670
and you need to figure
out, you know, what the

81
00:05:29.670 --> 00:05:32.610
most elegant and kind of
eloquent way to say something

82
00:05:32.610 --> 00:05:35.820
is, or is it tooling?
What keeps you from from

83
00:05:35.850 --> 00:05:38.190
quickly finding that? Is it
like starting out in Ruby

84
00:05:38.190 --> 00:05:40.530
where you just have to
figure out what the right

85
00:05:40.530 --> 00:05:42.360
number of characters is to
say what you want to

86
00:05:42.360 --> 00:05:49.260
say clearly? So, so it's
interesting. I think that the,

87
00:05:49.260 --> 00:05:52.950
I mean the language itself,
I like it's very minimal,

88
00:05:53.430 --> 00:05:56.220
but I, I love what
the community has done with

89
00:05:56.220 --> 00:06:01.040
it specifically over the last
five years, kind of how

90
00:06:01.040 --> 00:06:03.770
they have just kind of
pushed on every nook and

91
00:06:03.770 --> 00:06:07.010
cranny of JavaScript to make
it do things that it

92
00:06:07.010 --> 00:06:09.320
was never meant to do.
And it's still not meant

93
00:06:09.320 --> 00:06:14.990
to do, you know, the
way you use functions to

94
00:06:14.990 --> 00:06:20.540
mimic, you know, private member
variables in, in simulated classes.

95
00:06:20.540 --> 00:06:23.240
I mean, this is, this
is all deep boudou magic,

96
00:06:23.240 --> 00:06:26.660
and it's very fun to
read that code and understand

97
00:06:27.020 --> 00:06:30.200
and to kind of build
up your own kind of

98
00:06:30.200 --> 00:06:33.710
library of patterns and techniques
and the way you do

99
00:06:33.710 --> 00:06:36.530
things. And that's, that's fun.
I'm one of the first

100
00:06:36.530 --> 00:06:40.880
things I did was I
wrote a blog post all

101
00:06:40.880 --> 00:06:46.820
about this kind of set
based declarative programming model. That

102
00:06:46.820 --> 00:06:50.750
kind of link really turned
beyond to in C plus

103
00:06:50.750 --> 00:06:54.980
plus and in finding a,
essentially a similar set of

104
00:06:54.980 --> 00:06:58.610
techniques and operators over in
the JavaScript world made me

105
00:06:58.620 --> 00:07:02.180
very happy. So it's not
that I, I can't be

106
00:07:02.180 --> 00:07:06.450
happy in the language. What
I'm finding is this, this

107
00:07:06.800 --> 00:07:15.230
core ADM of JavaScript and
HTML and CSS of, if

108
00:07:15.230 --> 00:07:18.320
you get it wrong, we're
just going to ignore that

109
00:07:18.320 --> 00:07:24.920
you did anything, right? This,
this conspiracy of silence around

110
00:07:24.950 --> 00:07:31.450
errors and failure drives me
crazy. Well, this is coming

111
00:07:31.450 --> 00:07:33.820
from a person who wrote,
literally wrote the book on,

112
00:07:34.300 --> 00:07:37.780
on WPF. And certainly as
that person, you see the

113
00:07:37.780 --> 00:07:43.480
parallels between some markup, some
styling and some code except

114
00:07:43.480 --> 00:07:46.450
WPF is on the other
side where it's extremely unforgiving

115
00:07:46.630 --> 00:07:51.070
about having that markup and
correct. Yeah. I'd like that.

116
00:07:51.730 --> 00:07:56.170
I really do. I like,
I, you know, I know

117
00:07:56.680 --> 00:08:00.160
that there, there is value
in dynamic languages and I'll

118
00:08:00.160 --> 00:08:03.880
tell you, I love just
being able to, to craft

119
00:08:05.080 --> 00:08:09.430
data as instances on the
fly with whatever I've got,

120
00:08:09.790 --> 00:08:14.320
that is a fabulous, powerful
environment to be able to

121
00:08:14.320 --> 00:08:17.590
work in. So I'm really
loving it, but when it

122
00:08:17.590 --> 00:08:23.020
comes to just, Oh, you
know, three layers, deep of

123
00:08:23.020 --> 00:08:28.960
JavaScript, libraries and controls and
events and, and asynchronous programming

124
00:08:28.960 --> 00:08:32.830
and all of this stuff.
And somewhere deep in there,

125
00:08:33.160 --> 00:08:36.850
there was an error. And
we're just not going to

126
00:08:36.850 --> 00:08:39.040
tell you about it. And
we're going to make you

127
00:08:39.040 --> 00:08:44.020
figure that out. And that
drives me crazy. But isn't

128
00:08:44.020 --> 00:08:46.450
this like the old days
where you had a debug

129
00:08:46.450 --> 00:08:49.780
console open? I mean, when
I learned my first 91

130
00:08:49.780 --> 00:08:52.990
line C program, that was
a hello world on windows,

131
00:08:53.350 --> 00:08:57.000
you know, windows three have
like a debug console and

132
00:08:57.000 --> 00:08:59.310
isn't this kind of hearkening
back to those things. Like,

133
00:08:59.310 --> 00:09:02.130
they'll tell you something went
wrong. They'll just bury it

134
00:09:02.520 --> 00:09:09.860
deep in debug lines. Yeah.
Except I don't know of,

135
00:09:09.890 --> 00:09:15.140
I mean, the libraries I've
been using have not been

136
00:09:15.140 --> 00:09:20.720
steeped in, you know, Divo
got put or exceptions, it's

137
00:09:20.720 --> 00:09:25.580
mostly just swallowing those errors
and moving on and the

138
00:09:25.580 --> 00:09:30.860
browser is the worst culprit.
Right. I mean, there just

139
00:09:30.920 --> 00:09:34.430
is no kind of idea
of, Hey, we're going to

140
00:09:34.430 --> 00:09:37.970
notice an error and tell
you about it. Do you

141
00:09:37.970 --> 00:09:41.060
think that it's is, this
is something really I see

142
00:09:41.060 --> 00:09:43.670
on all the browsers though,
like basically it does something,

143
00:09:45.110 --> 00:09:50.420
I think it's deep, philosophical,
right? I mean, I think

144
00:09:50.420 --> 00:09:55.070
fundamentally, you know, that's, the
HTML is always been very

145
00:09:55.070 --> 00:09:59.540
forgiving and JavaScript has been
a language of gluing together,

146
00:09:59.540 --> 00:10:02.690
a little bits of HTML
and the language itself and

147
00:10:02.690 --> 00:10:06.080
the usage of the language.
And again, I'm coming new

148
00:10:06.230 --> 00:10:12.110
to this world, right. But
it's been all about what

149
00:10:12.110 --> 00:10:16.040
is the, the least amount
we can give you and

150
00:10:16.040 --> 00:10:19.040
then get out of your
way. And in fact, you

151
00:10:19.040 --> 00:10:22.400
know, I've been reading that
the, the Canon of the

152
00:10:22.400 --> 00:10:25.010
books and I've been, you
know, immersing myself in the

153
00:10:25.010 --> 00:10:28.670
community and trying to understand
the philosophy. And, you know,

154
00:10:28.700 --> 00:10:37.490
I've attended ECMAScript standards meetings
with Brandon, Ike and Douglas

155
00:10:37.490 --> 00:10:44.210
Crockford. And, you know, I
have been steeped in as

156
00:10:44.210 --> 00:10:47.180
much of that as I
can possibly pram into my

157
00:10:47.180 --> 00:10:51.590
head. And I think Douglas
Crockford says that the beauty

158
00:10:51.590 --> 00:10:55.790
of JavaScript is you can
be productive without understanding what's

159
00:10:55.790 --> 00:10:58.970
going on. And in that
kind of environment, it's gotta

160
00:10:58.970 --> 00:11:03.800
be very forgiving to make
that happen. Isn't isn't that

161
00:11:03.800 --> 00:11:10.400
what they said about visual
basic. So this is interesting.

162
00:11:11.090 --> 00:11:12.890
This is another one of
those languages where you don't

163
00:11:12.890 --> 00:11:15.020
necessarily need to know what's
going on, but if you

164
00:11:15.020 --> 00:11:18.610
do, you can be like
a Ninja. Like, I mean,

165
00:11:18.620 --> 00:11:21.770
when I was a VB
program, RVB three, a and

166
00:11:21.770 --> 00:11:23.990
C were kind of where
I started and I would

167
00:11:24.080 --> 00:11:28.070
end up combining the two,
I would do visual basic

168
00:11:28.070 --> 00:11:31.790
three slash C interrupt, and
I would grab window messages

169
00:11:31.790 --> 00:11:33.770
and paint icons where they
weren't supposed to be and

170
00:11:33.770 --> 00:11:37.160
do all sorts of wacky
stuff. Do you think people

171
00:11:37.160 --> 00:11:39.830
will do the same thing?
I remember those days, I

172
00:11:39.830 --> 00:11:41.930
was mostly a visual basic
programmer. What? I think it

173
00:11:41.930 --> 00:11:45.080
was four. Oh, but it
had calm. Right. And so

174
00:11:45.080 --> 00:11:47.720
that's what I was deep
into calm. And we had

175
00:11:47.720 --> 00:11:52.010
this idea of, you know,
visual basic as the glue

176
00:11:52.010 --> 00:11:56.650
language. And plus plus is
the extensive extension language. And

177
00:11:56.650 --> 00:11:59.140
every time I'd sit down
to write even the simplest

178
00:11:59.170 --> 00:12:02.980
visual basic app, I could
never make it through the

179
00:12:02.980 --> 00:12:05.140
whole app without saying, Oh
my God, I have to

180
00:12:05.140 --> 00:12:07.120
just drop down to C
plus plus and write this

181
00:12:07.120 --> 00:12:10.150
component or that component. Or
I could just write a

182
00:12:10.150 --> 00:12:13.570
VB app that is very
much not my experience with

183
00:12:13.570 --> 00:12:19.500
JavaScript. I could write whole
real productive apps with, with

184
00:12:19.510 --> 00:12:23.380
JavaScript in the browser and,
and never need to drop

185
00:12:23.380 --> 00:12:26.820
down to C plus plus.
Hmm. Do you think one

186
00:12:26.820 --> 00:12:28.350
day you're going to be
itching to do that. You'll

187
00:12:28.350 --> 00:12:30.720
be on you'll, you'll be
on windows and there'll be

188
00:12:30.720 --> 00:12:32.910
some, you know, some calm
object that you want or

189
00:12:32.910 --> 00:12:37.290
some dotnet thing you're going
to want to call. It's

190
00:12:37.290 --> 00:12:42.540
interesting. The, the, the JavaScript
community has been working so

191
00:12:42.540 --> 00:12:46.740
hard for so long that
they have this whole, I

192
00:12:46.740 --> 00:12:50.550
mean, and of course, JavaScript
itself is the glue language

193
00:12:50.580 --> 00:12:59.940
for a very extensive visual
environment, CSS, HTML, the canvas

194
00:13:00.420 --> 00:13:06.210
SVG, right? These are, these
are how powerful core functionality.

195
00:13:06.240 --> 00:13:10.680
And then, you know, JavaScript
has become this language for,

196
00:13:10.680 --> 00:13:14.370
I mean, it started as
this little language that kind

197
00:13:14.370 --> 00:13:17.130
of worked in whatever browser
you were targeting your code

198
00:13:17.130 --> 00:13:20.880
at, and then the JavaScript
community, this amazing thing where

199
00:13:20.880 --> 00:13:25.110
they, they use this, the
features of this language to

200
00:13:25.110 --> 00:13:29.220
kind of smooth over the
cracks between the differences between

201
00:13:29.220 --> 00:13:33.840
the various browsers. And then
once they did that, then

202
00:13:33.840 --> 00:13:36.480
they said, great, now we
have a base and now

203
00:13:36.480 --> 00:13:41.130
we can go forward with
his base of, of libraries

204
00:13:41.130 --> 00:13:43.830
and techniques. And then we
can build amazing things on

205
00:13:43.830 --> 00:13:48.780
top of it, like physics
engines and Sprite engines and

206
00:13:49.380 --> 00:13:52.170
all of this fun stuff
for games, but then also

207
00:13:52.200 --> 00:13:56.100
like validation and data access,
and you know, all of

208
00:13:56.100 --> 00:13:59.760
this stuff for line of
business. And it's kind of

209
00:13:59.760 --> 00:14:05.040
like, you know, with Joe
JavaScript turns the entire world

210
00:14:05.040 --> 00:14:09.510
into like a MySpace programmer.
You remember my space? Yeah.

211
00:14:09.510 --> 00:14:13.260
I remember they died last
week. Yeah. But I mean,

212
00:14:13.260 --> 00:14:16.860
it was for a while,
there, there was this big

213
00:14:16.890 --> 00:14:20.550
market for, Hey, these little
widgets, this little bits of

214
00:14:20.550 --> 00:14:23.460
code that I can purchase
and, and paste on my

215
00:14:23.460 --> 00:14:27.390
MySpace page. And people just
built these, you know, super

216
00:14:27.390 --> 00:14:31.800
functional monstrosities in general, but
they didn't really know what

217
00:14:31.800 --> 00:14:33.720
they were doing. They could
just grab these little bits

218
00:14:33.720 --> 00:14:36.030
and pieces and paste them
in and make that work.

219
00:14:36.600 --> 00:14:40.650
And, you know, the JavaScript
has turned the world into,

220
00:14:41.070 --> 00:14:44.040
into my space programmers, which
is great because that means

221
00:14:44.040 --> 00:14:47.010
that people can get all
kinds of functionality in their

222
00:14:47.010 --> 00:14:52.940
websites and web applications very
quickly because, you know, I've

223
00:14:52.940 --> 00:14:55.730
been learning JavaScript the same
way everyone does, which is,

224
00:14:56.120 --> 00:14:59.060
Hey, how do I do
this? Well, let me, you

225
00:14:59.060 --> 00:15:01.790
know, let me go to
Bing and, and figure out

226
00:15:02.330 --> 00:15:05.180
what the last 15 years
of people have been doing

227
00:15:05.180 --> 00:15:08.060
to solve this problem. And
it's very rare that I

228
00:15:08.060 --> 00:15:13.760
can't find somebody who's done
something that the weird part

229
00:15:13.760 --> 00:15:19.100
is I look at the
code and you know, it's

230
00:15:19.490 --> 00:15:24.890
80. It's like, wow, this
is not progress. This programmer

231
00:15:24.890 --> 00:15:27.080
was not a full time
programmer, right? This is a

232
00:15:27.350 --> 00:15:29.960
programmer who is a full
time. Something else was using

233
00:15:29.960 --> 00:15:33.680
JavaScript to get their job
done. And then occasionally I

234
00:15:33.680 --> 00:15:38.000
stumbled across these ninjas, these
folks who are full time

235
00:15:38.000 --> 00:15:40.730
programmers and who do know
this stuff deep in their

236
00:15:40.730 --> 00:15:42.500
bones, and you look at
what they've come up with

237
00:15:42.530 --> 00:15:44.930
and you're just in awe
of what they can do

238
00:15:44.930 --> 00:15:49.480
with the environment. Hi, this
is Scott coming to you

239
00:15:49.510 --> 00:15:52.750
from another place in time.
Are you using agile practices

240
00:15:52.750 --> 00:15:55.060
to manage your software development?
There's lots of tools in

241
00:15:55.060 --> 00:15:57.160
the market that manage the
steps of a project, but

242
00:15:57.160 --> 00:16:00.280
most of them focus on
individual roles, get ready for

243
00:16:00.280 --> 00:16:02.290
a solution that caters for
the success of the whole

244
00:16:02.290 --> 00:16:06.160
team. Guys at Tellerik introduced
team pulse. It's an agile

245
00:16:06.160 --> 00:16:09.850
project management tool. That'll help
you gather ideas, estimate plan,

246
00:16:09.850 --> 00:16:13.990
track progress in a common
workspace. Finally, companies, regardless of

247
00:16:13.990 --> 00:16:16.030
their size can use a
lightweight and convenient tool that

248
00:16:16.040 --> 00:16:19.600
makes all the stakeholders work
as a United team. Even

249
00:16:19.600 --> 00:16:22.960
if they're in different countries
by combining intuitive user interface

250
00:16:22.960 --> 00:16:25.750
and the power server light
team poles removes the roadblocks

251
00:16:25.750 --> 00:16:28.210
that you typically face and
applying agile in an effective

252
00:16:28.210 --> 00:16:32.200
manner, no more lost data,
no disparate systems, no lack

253
00:16:32.200 --> 00:16:36.070
of critical analytics regarding the
health and philosophy project. See

254
00:16:36.070 --> 00:16:39.010
if yourself get a free
copy for five users in

255
00:16:39.010 --> 00:16:45.760
one project at tellerik.com/team pulse.
And please do thank tolerance

256
00:16:45.790 --> 00:16:50.350
for supporting Hansel minutes on
their Facebook fan page, facebook.com/t

257
00:16:50.350 --> 00:16:54.700
L E R I K
Keller. We do appreciate it.

258
00:16:54.730 --> 00:16:56.610
There wouldn't be a Hansel
minutes if there wasn't teller

259
00:16:56.670 --> 00:17:01.360
helping us does doesn't, isn't
that the same as any

260
00:17:01.360 --> 00:17:03.700
language? I mean, you're just
saying that there's a whole

261
00:17:03.700 --> 00:17:06.880
lot of sample code out
there. Is it that it's

262
00:17:06.880 --> 00:17:09.870
easier to copy paste and
incorporate because the, the, the

263
00:17:09.880 --> 00:17:14.920
pieces are kind of more
atomic they're more compartmentalize. Actually.

264
00:17:14.920 --> 00:17:19.780
It's funny. I've found that
JavaScript is exactly the opposite.

265
00:17:20.380 --> 00:17:26.830
A modularization componentization composition is
harder because it's all just

266
00:17:26.830 --> 00:17:30.790
one on the browser. It's
all just one big global

267
00:17:30.880 --> 00:17:36.100
soup, right? Global variables. You
literally can't do anything unless

268
00:17:36.100 --> 00:17:39.850
you use some level of
global variables, which is very

269
00:17:39.850 --> 00:17:42.460
foreign to me as a,
you know, I've been a

270
00:17:42.460 --> 00:17:45.970
component based program or forever,
and it's all about, you

271
00:17:45.970 --> 00:17:48.850
know, the global state that
is not for you. You

272
00:17:48.850 --> 00:17:51.270
don't to touch that. Wait
a second, though, when you,

273
00:17:51.500 --> 00:17:54.750
everyone says in best practices
in JavaScript, you're supposed to

274
00:17:55.050 --> 00:17:57.210
make sure that your objects
aren't enclosed space and that

275
00:17:57.210 --> 00:18:00.360
they are in their own
kind of scope. Are you

276
00:18:00.360 --> 00:18:02.580
saying that to do anything
significant? You have to have

277
00:18:02.580 --> 00:18:07.970
global. Okay. So it's interesting.
So on the, on the

278
00:18:07.970 --> 00:18:11.000
server side with no JS,
which I've also spent some

279
00:18:11.000 --> 00:18:16.790
time playing with, they actually
have a module system where

280
00:18:16.790 --> 00:18:20.840
it's actually a really nice
one where you're loading code

281
00:18:22.010 --> 00:18:24.620
and you get to decide
is the client of the

282
00:18:24.620 --> 00:18:28.840
code, but the namespaces where
you put your code. And

283
00:18:28.910 --> 00:18:31.190
really, I'm sorry, on the
service side, there's really not

284
00:18:31.220 --> 00:18:34.280
any global space. I mean,
it's only what you put

285
00:18:34.280 --> 00:18:36.470
into your app, right? It's
only what you build up.

286
00:18:36.770 --> 00:18:40.550
You get control over that
on the client side. It's

287
00:18:40.640 --> 00:18:43.070
the only way you can
do that is by rod

288
00:18:43.100 --> 00:18:48.350
discipline. And it doesn't matter
anyway, because anyone can reach

289
00:18:48.350 --> 00:18:51.530
into any of the global
spaces and just help themselves.

290
00:18:51.950 --> 00:18:55.640
Like, you know, if I
wanted to have my code

291
00:18:55.640 --> 00:18:59.870
run, right. Somebody who included
my elaborate. And I just

292
00:18:59.870 --> 00:19:01.520
want to go up to
all of the built in

293
00:19:01.520 --> 00:19:04.070
types and add all my
own functions, because I think

294
00:19:04.070 --> 00:19:07.190
those are cool. I can
do that in JavaScript. And

295
00:19:07.190 --> 00:19:11.000
in fact, that's how, that's
how most of these, a

296
00:19:11.000 --> 00:19:14.120
lot of these libraries work,
right? I mean, jQuery very

297
00:19:14.120 --> 00:19:20.390
popular library works by adding
operators in the global space.

298
00:19:21.260 --> 00:19:25.760
Yeah. But aren't, they special?
They're not special. It turns

299
00:19:25.760 --> 00:19:29.090
out jQuery is just like
any other library. And in

300
00:19:29.090 --> 00:19:31.670
fact, what that means then
is that some of these

301
00:19:31.670 --> 00:19:34.100
libraries step on each other,
right. If they try to

302
00:19:34.100 --> 00:19:37.520
do the same things to
the same types in slightly

303
00:19:37.520 --> 00:19:39.950
different ways, and they start
stepping on each other and

304
00:19:39.950 --> 00:19:41.570
there's not a whole lot,
you can really do about

305
00:19:41.570 --> 00:19:46.280
that except not use that
code. That seems to be

306
00:19:46.280 --> 00:19:49.760
a recurring theme in JavaScript.
At least in my experience

307
00:19:49.760 --> 00:19:54.020
is that best practices are
often based on willpower and

308
00:19:54.050 --> 00:19:58.850
awareness of certain idioms is
that, is that different or

309
00:19:58.850 --> 00:20:01.820
looser is, is JavaScript, sloppier
than other languages that it

310
00:20:01.820 --> 00:20:05.210
requires people to know what
the current best practices or

311
00:20:05.220 --> 00:20:11.480
are all languages like that.
Well, it's interesting. So if

312
00:20:11.480 --> 00:20:15.620
you're building a library for
JavaScript, you have to really

313
00:20:15.620 --> 00:20:20.900
want to do to keep
yourself isolated from the user

314
00:20:20.900 --> 00:20:24.470
edits. It's so easy to
just say, you know what,

315
00:20:24.860 --> 00:20:27.320
the Dawn's right there. I
can just reach over into

316
00:20:27.320 --> 00:20:30.280
this space and just get
this little piece of information

317
00:20:30.320 --> 00:20:32.210
I need. And I don't
have to ask anyone for

318
00:20:32.210 --> 00:20:34.580
it. Oh, and I can
make their lives a little

319
00:20:34.580 --> 00:20:36.980
easier. I can put this
here and that there, and

320
00:20:36.980 --> 00:20:39.140
it'll just make their lives
easier. And then suddenly, you

321
00:20:39.140 --> 00:20:43.970
know, you've turned it into
your world and then they're

322
00:20:43.970 --> 00:20:50.710
just living in it. But
if you're an application is

323
00:20:50.710 --> 00:20:56.770
nice not to have to
go through the ceremony that

324
00:20:56.770 --> 00:21:01.210
you have to write, you
don't have to have classes.

325
00:21:01.270 --> 00:21:04.750
You don't have to have
namespaces, you can just write

326
00:21:04.750 --> 00:21:09.670
your code and it will
do largely what you expect.

327
00:21:10.480 --> 00:21:14.620
And if you, if you
want to impose, you know,

328
00:21:14.650 --> 00:21:17.650
a little bit of discipline,
you're allowed to turn the

329
00:21:17.650 --> 00:21:20.860
dial up and down as
much as you want. And

330
00:21:20.860 --> 00:21:25.510
from an application developer standpoint,
that's a very nice dial

331
00:21:25.510 --> 00:21:28.120
to be able to turn
in a lot of languages.

332
00:21:28.270 --> 00:21:35.440
And actually.net is like this.
You are pretty much writing

333
00:21:35.470 --> 00:21:39.460
libraries, even when you're writing
applications. So you're going through

334
00:21:39.460 --> 00:21:42.320
all of the same disciplines
just to get your code

335
00:21:42.320 --> 00:21:45.400
to, to execute and plug
into the libraries and the

336
00:21:45.400 --> 00:21:48.640
frameworks you're using. You're using
all those same disciplines, whether

337
00:21:48.640 --> 00:21:52.180
you want to or not.
It's just, it's imposed on

338
00:21:52.180 --> 00:21:55.060
you by the environment. But
with JavaScript, you can be

339
00:21:55.060 --> 00:22:00.130
very sloppy and get very
far, very fast when you're

340
00:22:00.130 --> 00:22:04.410
writing apps. And that's nice.
So that's, that's very interesting

341
00:22:04.410 --> 00:22:08.160
though, because I recently did
some JavaScript. That was a,

342
00:22:08.880 --> 00:22:11.850
a little specific, it was
for the mixed keynote. And

343
00:22:11.850 --> 00:22:15.900
I wanted some JavaScript that
would add jump lists for

344
00:22:15.900 --> 00:22:18.990
the podcast in I nine.
So it was actually a

345
00:22:18.990 --> 00:22:21.540
browser specific and platform specific
thing. It would only work

346
00:22:21.540 --> 00:22:25.680
on INI and it would
only work on windows. And

347
00:22:25.680 --> 00:22:28.800
I wanted some buttons so
that when you hover over

348
00:22:28.800 --> 00:22:31.380
the task bar, you could
push play, and then you

349
00:22:31.380 --> 00:22:33.330
could actually play the podcast.
So it would be a

350
00:22:33.330 --> 00:22:38.940
podcast player without using a
plugin. And That was a

351
00:22:38.940 --> 00:22:42.420
lovely talk. It was like
20 lines of JavaScript. It

352
00:22:42.420 --> 00:22:45.270
was ridiculous. It was. So
It is, it is amazing

353
00:22:45.270 --> 00:22:48.990
how far you can get
how fast. Yeah. But then

354
00:22:49.290 --> 00:22:52.230
I showed it to a
real JavaScript program. Dave ward

355
00:22:53.280 --> 00:22:55.290
and Dave ward said, no,
no, no, no, no, no.

356
00:22:55.290 --> 00:22:58.890
This has to be a
J Cray plugin. So then

357
00:22:58.890 --> 00:23:01.560
we did a screen sharing
and my 40 lines of

358
00:23:01.560 --> 00:23:05.010
JavaScript became 90 lines of
JavaScript, you know, with a

359
00:23:05.010 --> 00:23:09.180
framework to make it a
jQuery plugin, which only which

360
00:23:09.180 --> 00:23:11.880
made it better. Like it
felt more componentized and it

361
00:23:11.880 --> 00:23:14.010
felt tinier. And I could
move it out of inline

362
00:23:14.010 --> 00:23:17.430
because apparently JavaScript programmers, don't
like their script in their

363
00:23:17.520 --> 00:23:20.460
markup that they think that's
really bad. You have to

364
00:23:20.460 --> 00:23:23.880
have your script unobtrusive. So
it made my script unobtrusive.

365
00:23:25.020 --> 00:23:27.540
Well, I mean, you have
to qualify who you're talking

366
00:23:27.540 --> 00:23:31.050
about. Right. I mean, you
can't just say a JavaScript

367
00:23:31.050 --> 00:23:36.600
programmer. Well, good. I mean,
again, define good. I mean

368
00:23:37.230 --> 00:23:42.330
the C plus plus programmers,
you know, it's hard for

369
00:23:42.330 --> 00:23:48.500
those people to not be
computer science. Right. But programmers,

370
00:23:48.500 --> 00:23:51.410
right. They can have real
lives and still be productive

371
00:23:51.830 --> 00:23:54.980
in JavaScript. And that's the
thing. Okay. Well then that,

372
00:23:54.980 --> 00:23:57.520
that means that the world
is going to be split

373
00:23:57.520 --> 00:24:03.790
between JavaScript, connoisseurs and JavaScript
core Mons. In fact, I

374
00:24:03.790 --> 00:24:06.880
would argue that's actually true.
And I don't know what

375
00:24:06.880 --> 00:24:10.480
the statistics are, but in
terms of penetration, I mean,

376
00:24:10.480 --> 00:24:17.800
that browser is everywhere. So
JavaScript is just everywhere. That's,

377
00:24:18.250 --> 00:24:24.400
that's the thing too. Hmm.
Well, so I, I was

378
00:24:24.760 --> 00:24:28.090
excited to learn how to
make a jQuery plugin, but

379
00:24:28.090 --> 00:24:32.080
also disappointed that it was
entirely convention based like someone

380
00:24:32.080 --> 00:24:37.990
wrote the prototype, no pun
intended years ago, and now

381
00:24:37.990 --> 00:24:39.370
we all have to do
it that way because that

382
00:24:39.370 --> 00:24:43.690
guy said so Sure. And
that's the way a jQuery

383
00:24:43.690 --> 00:24:46.390
plugins work. And, you know,
John Rez had guts to

384
00:24:46.390 --> 00:24:50.980
decide, right. When he built
jQuery, jQuery, plugins w looked

385
00:24:50.980 --> 00:24:55.090
like and worked like, but
of course there's nothing stopping

386
00:24:55.090 --> 00:24:59.020
those jQuery plugins to do
their thing and Oh, so

387
00:24:59.020 --> 00:25:03.190
much more. Right. Right. Exactly.
I mean, there really are

388
00:25:03.640 --> 00:25:06.490
on the client side, in
the browser, no boundaries with

389
00:25:06.490 --> 00:25:12.610
JavaScript and that causes problems
obviously. So do you see

390
00:25:12.610 --> 00:25:17.710
yourself in the future writing
JavaScript and HTML and XAML

391
00:25:17.770 --> 00:25:21.820
and SAML styles, or have
you, have you done what

392
00:25:21.820 --> 00:25:23.950
you needed to do in
XAML and now you're kind

393
00:25:23.950 --> 00:25:27.190
of exploring new space just
because you're bored. I am

394
00:25:27.220 --> 00:25:31.570
very much, I'm exploring this
new space. I still have

395
00:25:31.570 --> 00:25:36.220
these moments where I'm writing,
you know, a program to

396
00:25:36.220 --> 00:25:39.700
run my life, right. I'm
writing a program to scrape

397
00:25:39.700 --> 00:25:44.170
data from mint.com and throw
it into a, a database

398
00:25:44.170 --> 00:25:46.480
so that I can do
data analysis on it. Right.

399
00:25:46.540 --> 00:25:55.480
Or I'm writing some tool
that munches actually, I wrote

400
00:25:55.480 --> 00:25:58.090
a tool the other day
that that builds, took a,

401
00:25:59.300 --> 00:26:01.900
a visual studio project and
did a bunch of kind

402
00:26:01.900 --> 00:26:04.600
of analysis on it and
turned it into a visual

403
00:26:04.600 --> 00:26:10.090
studio template. These are the
kinds of things that I

404
00:26:10.090 --> 00:26:13.600
still fall back on C
sharp for, because I love

405
00:26:13.600 --> 00:26:18.190
C sharp. I absolutely do,
but that is happening less

406
00:26:18.190 --> 00:26:21.610
and less and more and
more I'm writing my, my

407
00:26:21.610 --> 00:26:24.370
day to day programs. My
things that I actually care

408
00:26:24.370 --> 00:26:28.870
about in an HTML and
JavaScript and CSS, and my

409
00:26:28.870 --> 00:26:32.380
goal is to be pure,
to do everything. In fact,

410
00:26:33.070 --> 00:26:35.860
I've spent a bunch of
time thinking about and trying

411
00:26:35.860 --> 00:26:42.640
to find a real JavaScript
shell. I've tried half a

412
00:26:42.640 --> 00:26:45.300
dozen times with power script
and never gotten very far,

413
00:26:45.330 --> 00:26:47.550
but I would really love
it if I was a

414
00:26:47.760 --> 00:26:51.440
JavaScript. Where do you do
most of your writing? And

415
00:26:51.440 --> 00:26:52.970
I think one of the
interesting things that came up

416
00:26:52.970 --> 00:26:56.660
during the mixed keynote was
it is unclear to the

417
00:26:56.660 --> 00:27:00.980
public, what everyone is writing
these things in. I mean,

418
00:27:00.980 --> 00:27:04.370
there were a lot of
cool <inaudible> demos. I nine,

419
00:27:04.370 --> 00:27:07.100
nine, 10 demos, but it
was unclear what they were

420
00:27:07.100 --> 00:27:09.850
writing them in. If they're
writing the note pad or

421
00:27:10.250 --> 00:27:12.500
in visual studio or in
some magic thing we don't

422
00:27:12.500 --> 00:27:15.230
know about what do you
do your work in? I,

423
00:27:15.740 --> 00:27:20.120
I, you know, no pad
is fine for reading and

424
00:27:20.120 --> 00:27:23.150
making public edits, but day
in, day out, I write

425
00:27:23.930 --> 00:27:28.850
HTML in markup CSS in
markup and JavaScript. And I

426
00:27:28.850 --> 00:27:34.180
do it all in visual
studio. Hmm. So do you

427
00:27:34.310 --> 00:27:37.580
use the J script extensions
for visual studio? The extension

428
00:27:37.580 --> 00:27:41.150
manager extensions that have been
released? Oh, I saw those

429
00:27:41.150 --> 00:27:44.780
goodbye. I haven't actually, I
haven't used them. Are they

430
00:27:44.780 --> 00:27:47.120
good? Should I use them?
The word on the street

431
00:27:47.120 --> 00:27:49.490
is that the J script
extensions were features that were

432
00:27:49.490 --> 00:27:51.050
going to go in the
next version of visual studio

433
00:27:51.800 --> 00:27:54.050
that they got able to
put into a plugin. So

434
00:27:54.050 --> 00:27:57.590
it adds like bracket matching
and smarter IntelliSense and just

435
00:27:57.590 --> 00:28:00.110
have a whole pile of
goodness. So yes. Word on

436
00:28:00.110 --> 00:28:02.810
the street is it's much,
much better. It's like getting

437
00:28:02.810 --> 00:28:04.700
a newer version of visual
studio as far as the

438
00:28:04.700 --> 00:28:07.490
JavaScript is concerned. That's cool.
I should check that out.

439
00:28:07.760 --> 00:28:09.740
Yeah. Yeah. And it's all
packaged up as an extension,

440
00:28:09.740 --> 00:28:13.010
so you should check that
out. That's the fun, the

441
00:28:13.010 --> 00:28:16.430
thing that I find is
super handy is, you know,

442
00:28:16.460 --> 00:28:19.880
the thing that makes all
dynamic languages wonderful. Right. I

443
00:28:19.880 --> 00:28:23.990
can just stop by program
wherever I want to, and

444
00:28:23.990 --> 00:28:27.920
just start exploring the environment
I find myself in, and

445
00:28:27.920 --> 00:28:29.900
then I can write my
programs based on that. It

446
00:28:29.900 --> 00:28:34.370
is amazing how much of
my program I write that

447
00:28:34.370 --> 00:28:38.210
way. Hmm. That's impressive. That's
impressive. So you think that

448
00:28:38.210 --> 00:28:41.660
that JavaScript is going to
be good for Microsoft? Wow.

449
00:28:41.990 --> 00:28:47.090
You know, that is right.
I mean, you know, you,

450
00:28:47.510 --> 00:28:50.990
even for gosh, for a
couple of years now, it

451
00:28:50.990 --> 00:28:54.830
seems like a Steve snob
ski and, and everyone on

452
00:28:54.830 --> 00:28:58.490
down has really been banging
the HTML five and CSS

453
00:28:58.490 --> 00:29:06.620
and JavaScript Thrones. And that's
kind of interesting. That's very

454
00:29:06.620 --> 00:29:10.250
interesting because you know, it's,
it's a, it's a cross

455
00:29:11.900 --> 00:29:15.650
platform. I mean, it's w
it's what Java was meant

456
00:29:15.650 --> 00:29:18.830
to be, Right? Yeah, exactly.
JavaScript is a job was

457
00:29:18.830 --> 00:29:20.210
meant to be, and if
you, if you do it

458
00:29:20.210 --> 00:29:26.180
right then theoretically, you don't
need windows. Yeah. And that's

459
00:29:26.180 --> 00:29:29.870
the interesting thing. So it's,
it's interesting to think about,

460
00:29:29.900 --> 00:29:31.730
well, gosh, I can just
write my programs and have

461
00:29:31.730 --> 00:29:33.620
it run anywhere. And of
course the ubiquity of the

462
00:29:33.620 --> 00:29:37.220
browser, it's not even just
PCs, right. It's devices, it's

463
00:29:37.220 --> 00:29:40.730
tablets, it's a toaster ovens,
right. I mean, it's, it's

464
00:29:40.750 --> 00:29:46.960
everywhere. It's crazy. It is.
It is very, truly the,

465
00:29:47.590 --> 00:29:50.440
the thing that Java was
meant to be, I never

466
00:29:50.650 --> 00:29:54.430
came close to being on
the other hand, you think

467
00:29:54.430 --> 00:29:59.440
about, well, what's the business
model for, for Microsoft? I

468
00:29:59.440 --> 00:30:02.980
mean, we absolutely are. You
can see an <inaudible> and

469
00:30:02.980 --> 00:30:04.870
it, and I don't know
if you've seen the reviews

470
00:30:04.900 --> 00:30:08.500
go by for <inaudible>. It's
been amazing. Actually. I'm very

471
00:30:08.500 --> 00:30:11.440
happy. I'm, I'm closely associated
with that team. And that

472
00:30:11.440 --> 00:30:14.620
always makes me happy to
see them successful and to

473
00:30:14.620 --> 00:30:17.680
see us successful there. But
it seems like the goal

474
00:30:17.680 --> 00:30:23.380
is to really make windows
the best platform you could

475
00:30:23.380 --> 00:30:28.780
imagine for, for running websites,
right. This idea of, you

476
00:30:28.780 --> 00:30:32.890
know, native websites and integrating
websites directly into this shell.

477
00:30:33.100 --> 00:30:36.430
So they look and feel
like applications like any other

478
00:30:36.430 --> 00:30:40.450
kind of application. This is
pretty, I mean, it makes

479
00:30:40.450 --> 00:30:42.370
me happy as a windows
user to have those kinds

480
00:30:42.370 --> 00:30:45.370
of functionalities built in and
don't have, <inaudible> be just

481
00:30:45.400 --> 00:30:49.380
a, a kick ass browser.
Makes me happy too. Yup.

482
00:30:49.400 --> 00:30:51.120
We've got to catch up
though. It seems to me

483
00:30:51.180 --> 00:30:53.160
we're a little behind that
there's a whole world of

484
00:30:53.160 --> 00:30:57.600
JavaScript people out there that
don't even care that we're

485
00:30:57.600 --> 00:31:02.550
out here. So it's, it's,
it's very interesting. Really. I

486
00:31:02.580 --> 00:31:05.610
E eight was kind of
a, Hey, we're still here.

487
00:31:05.610 --> 00:31:08.880
Don't forget about us. Kind
of stop gap and arginine,

488
00:31:09.330 --> 00:31:11.460
you know, seems to be
the first real browser we've

489
00:31:11.460 --> 00:31:13.860
done in a long time,
and we're still dealing with

490
00:31:13.860 --> 00:31:18.360
the mess we created with
six. Right. Exactly. Cool. Well,

491
00:31:18.390 --> 00:31:20.190
thanks so much for talking
to me today, Chris. It's,

492
00:31:20.190 --> 00:31:23.700
it's good to know that
that sells is doing JavaScript

493
00:31:23.730 --> 00:31:26.340
now. So we should, we
should check it out. Hey,

494
00:31:26.340 --> 00:31:29.080
it's my pleasure. Happy to
do it. Alright. Well, thanks.

495
00:31:29.130 --> 00:31:30.570
And also, thanks for staying
up till seven in the

496
00:31:30.570 --> 00:31:36.750
morning, working on it, whatever
you're doing Well, I'll be

497
00:31:36.750 --> 00:31:39.600
able to share what I've
been saying up until seven

498
00:31:39.600 --> 00:31:42.540
in the morning. Doing Cool.
I'll talk to you soon.

499
00:31:43.320 --> 00:31:46.710
Yep. This has been another
episode of Hanselminutes and we'll

500
00:31:46.710 --> 00:31:47.790
see you again next week.

