WEBVTT FILE

1
00:00:12.080 --> 00:00:17.630
From hanselminutes.com. It's Hansel minutes,
all weekly discussion with web

2
00:00:17.630 --> 00:00:22.340
developer and technologists and Scott
Hanselman. This is Lawrence Ryan announcing

3
00:00:22.360 --> 00:00:29.060
show number three 62. Recorded
live Thursday, March 7th, 2013. Support for

4
00:00:29.060 --> 00:00:32.240
Hanselman it's is provided by
teller offering the best and

5
00:00:32.240 --> 00:00:42.020
developer tools and support online@telerikdotcomandbyfranklins.net
training developers to work smarter

6
00:00:42.470 --> 00:00:45.890
and now offering gesture pack
a powerful gesture, recording and

7
00:00:45.890 --> 00:00:50.480
recognition system for Microsoft connect
for windows developers details' app

8
00:00:50.600 --> 00:00:55.100
gesture, PA k.com. In this
episode, Scott talks with Miguel

9
00:00:55.100 --> 00:01:00.170
DIA. Caza about making iOS,
Android windows, phone and windows

10
00:01:00.170 --> 00:01:06.560
apps all using C-sharp. Hi,
this is Scott Hanselman. This

11
00:01:06.560 --> 00:01:08.780
is another episode of Hansel
minutes and we've got the

12
00:01:08.780 --> 00:01:12.170
one and only Miguel DIA,
Casa. I'm doing fine. Thank

13
00:01:12.170 --> 00:01:15.620
you very much. You, you
just launched something big and

14
00:01:15.620 --> 00:01:19.400
it has a 2.0, which
means it's better than it

15
00:01:19.400 --> 00:01:23.180
is better. Yeah, it is
much better. What have you

16
00:01:23.180 --> 00:01:26.180
done that has the world
in a tizzy let's so

17
00:01:26.750 --> 00:01:29.570
we actually followed some advice
from some friends of us

18
00:01:29.570 --> 00:01:35.060
and they, and it was,
it was a cultural change

19
00:01:35.060 --> 00:01:38.150
for us because we're used
to the open source development

20
00:01:38.150 --> 00:01:41.840
mode where we deliver new
features on a weekly basis.

21
00:01:41.900 --> 00:01:47.180
So every week you would
see an improvement and well,

22
00:01:47.180 --> 00:01:50.510
that works. It's also, it's
also a bit distracting for,

23
00:01:51.200 --> 00:01:55.610
for rolling out large changes
or rolling out, rolling out

24
00:01:55.610 --> 00:02:00.440
a bunch of, of interesting
features together. So we've actually

25
00:02:00.440 --> 00:02:06.550
been working in parallel for
almost a year on, on,

26
00:02:07.160 --> 00:02:12.090
on many different things. One
of them was we introduced

27
00:02:12.290 --> 00:02:16.910
support to visual studio for
iOS, for ideas development. So

28
00:02:16.970 --> 00:02:20.180
developers now can use visuals
to do, to, to basically

29
00:02:20.180 --> 00:02:25.610
maintain a single solution for
their, for iOS, Android, windows,

30
00:02:25.610 --> 00:02:29.870
phone windows eight asp.net solutions.
So you can do everything

31
00:02:29.870 --> 00:02:34.580
from a single, from a,
your favorite IDE. And, and

32
00:02:34.580 --> 00:02:36.740
that actually took a lot
of, a lot of time

33
00:02:37.580 --> 00:02:39.380
to make sure that we
got a good iOS and

34
00:02:39.380 --> 00:02:42.830
Android experience. So that was
the first part of it.

35
00:02:43.820 --> 00:02:46.790
The second one is that
for about a year, we've

36
00:02:46.790 --> 00:02:51.440
been, I mean, since we
launched the company, we essentially

37
00:02:51.440 --> 00:02:53.660
use the number of open
source tools that were created

38
00:02:53.660 --> 00:02:58.070
originally by the community and
like many other open source

39
00:02:58.070 --> 00:03:05.680
projects. Open source projects grow
organically. Features are added, features

40
00:03:05.680 --> 00:03:10.120
are added without really much
architectural oversight and probably the

41
00:03:10.120 --> 00:03:12.610
most common, you know, when
I have a very common

42
00:03:12.610 --> 00:03:16.210
problem resolution thing that happens
in open sources, whenever there

43
00:03:16.210 --> 00:03:21.250
are two opinions or two
ways of doing something, you

44
00:03:21.340 --> 00:03:24.430
don't want to offend somebody.
So the way of resolving

45
00:03:24.430 --> 00:03:27.370
conflict is instead of making
a decision, you add a

46
00:03:27.370 --> 00:03:31.960
checkbox and you basically support
to, you know, two different

47
00:03:31.960 --> 00:03:34.690
opinions. And if there's a
third opinion, you'll change the

48
00:03:34.690 --> 00:03:38.260
checkbox the way you do
a do a combo box,

49
00:03:38.260 --> 00:03:40.330
and now you have three
opinions or four opinions and

50
00:03:40.330 --> 00:03:44.110
so on. So our previous
IDE had a lot of

51
00:03:44.110 --> 00:03:50.230
this historical baggage of trying
to not upset somebody or

52
00:03:50.230 --> 00:03:56.410
trying to support every possible
feature that people wanted. So

53
00:03:56.740 --> 00:03:59.170
we went back to the
drawing board and we figured

54
00:03:59.530 --> 00:04:02.110
if this is going to
be the ID that people

55
00:04:02.110 --> 00:04:04.630
use, when, when they're using
a Mac or the ID

56
00:04:04.630 --> 00:04:08.290
that they use, when they're
not using visual studio, they

57
00:04:08.290 --> 00:04:11.380
need to have a much
better experience than this, then

58
00:04:11.380 --> 00:04:16.500
this mess. So you're saying
that the, the design by

59
00:04:16.500 --> 00:04:19.620
committee way of doing things
in the past was kind

60
00:04:19.620 --> 00:04:24.660
of holding you guys back.
Yeah, definitely the user experience

61
00:04:24.660 --> 00:04:28.590
was not great. Then you
have to code paths and

62
00:04:28.590 --> 00:04:30.630
you have to test do
code paths. We have different

63
00:04:30.630 --> 00:04:34.890
bugs that happen depending on
different combinations of features that

64
00:04:34.890 --> 00:04:40.680
people chose. So we didn't
eliminate all the options, but

65
00:04:40.680 --> 00:04:44.430
we eliminated the most, the
most obvious ones. And we

66
00:04:44.430 --> 00:04:47.790
made it a lot simpler.
You know, when we looked

67
00:04:47.790 --> 00:04:50.520
at, when we looked at
the IDE, one of the

68
00:04:50.520 --> 00:04:52.830
things that that was there
in our ID was the

69
00:04:52.830 --> 00:04:55.860
standard toolbar that everybody has.
And there's a great talk

70
00:04:55.860 --> 00:04:59.490
from Jensen Harris, from Microsoft,
about how they rethought the

71
00:04:59.910 --> 00:05:03.270
tool per for office. Now
office has its own set

72
00:05:03.270 --> 00:05:05.760
of requirements, but when we
looked at our own IDE

73
00:05:05.790 --> 00:05:08.400
and reflecting a little bit
on, on, on Jensen stock,

74
00:05:09.570 --> 00:05:14.130
we had things like save
and close violin open file,

75
00:05:14.160 --> 00:05:16.470
which it's very rare for
people to actually use the

76
00:05:16.470 --> 00:05:21.840
toolbar, to do those things,
cut paste, cut paste, and

77
00:05:21.840 --> 00:05:25.500
copy, or another set of
icons. That at least for

78
00:05:25.500 --> 00:05:27.480
me, even after all these
years, I always have to

79
00:05:27.480 --> 00:05:30.210
hover over one of these
buttons to remember which one

80
00:05:30.210 --> 00:05:33.840
was which so it became
obvious that some of these

81
00:05:33.840 --> 00:05:36.180
things are much better suited
just to live in menus

82
00:05:36.540 --> 00:05:39.870
and just to be options
in the application or shortcuts

83
00:05:39.870 --> 00:05:42.360
that people know by heart.
So that helped us a

84
00:05:42.360 --> 00:05:45.180
lot clean up the UI,
realizing that all of those

85
00:05:45.180 --> 00:05:47.460
things were a lit of
a, a little bit of

86
00:05:47.460 --> 00:05:51.210
a tradition. And it was
a tradition based on, on

87
00:05:51.240 --> 00:05:54.860
fads of the nineties. Not
really, not really grounded on

88
00:05:54.930 --> 00:05:59.510
usability or not really grounded
on actually watching people develop

89
00:05:59.510 --> 00:06:02.960
software, use the software. So
we spent about a year

90
00:06:03.590 --> 00:06:10.040
really designing and prototyping and,
and rewriting over and over.

91
00:06:10.070 --> 00:06:12.740
We threw out a lot
of prototypes. We threw out

92
00:06:12.800 --> 00:06:16.610
a lot of code, but
the end result I think

93
00:06:16.610 --> 00:06:20.420
is very pretty it's it's
it's feels, it feels fresh.

94
00:06:20.420 --> 00:06:24.290
It's it's much faster. We
killed the, we sacrificed a

95
00:06:24.290 --> 00:06:29.780
lot of, a lot of
code that, that, that we

96
00:06:29.780 --> 00:06:31.580
had built over the years
with a lot of love,

97
00:06:31.580 --> 00:06:33.860
but it had to be,
it had to be remoted.

98
00:06:33.920 --> 00:06:36.940
It didn't make any sense.
What is the relationship then

99
00:06:37.180 --> 00:06:42.250
between mano develop in Xamarin
studio? So we have ups.

100
00:06:42.580 --> 00:06:46.600
So Xamarin studio is at
this point is, is based

101
00:06:46.600 --> 00:06:50.470
on the mana develop core.
So we take the official

102
00:06:50.470 --> 00:06:54.850
amount of develop source code,
and we add the extensions

103
00:06:54.850 --> 00:06:59.880
for doing iOS, Android, and
Mac development, plus our components

104
00:06:59.880 --> 00:07:03.460
store, which I haven't really
talked about yet, but, but

105
00:07:03.460 --> 00:07:06.040
it is essentially built on
top of the open source

106
00:07:06.040 --> 00:07:11.860
one. Now we developed all
of these enhancements in private

107
00:07:11.860 --> 00:07:15.610
for a year. We prototype
privately for a year. And

108
00:07:15.700 --> 00:07:17.800
at the time of the
launch, we merged all of

109
00:07:17.800 --> 00:07:20.980
our fixes upstream with Manav
develops. So the open source,

110
00:07:20.980 --> 00:07:24.220
one of the has everything
that we did, all of

111
00:07:24.220 --> 00:07:26.320
the new UI, all of
the new redesign is there.

112
00:07:26.350 --> 00:07:28.840
The only thing that it
doesn't have is the branding

113
00:07:29.200 --> 00:07:32.470
it's called mana develop instead
of Xamarin studio. And it

114
00:07:32.470 --> 00:07:35.170
doesn't have the, the component
store or the iOS and

115
00:07:35.170 --> 00:07:41.320
Android pieces. When, when companies
like yours kind of straddle

116
00:07:41.470 --> 00:07:45.220
the open source and paid
software kind of world, I

117
00:07:45.220 --> 00:07:48.280
could see someone reacting to
this and saying, Oh, you

118
00:07:48.280 --> 00:07:52.390
know, monitor develops dead long
live model develop. Or they

119
00:07:52.390 --> 00:07:54.550
would say, Oh, well, your,
you know, your license is

120
00:07:54.550 --> 00:07:58.360
a thousand dollars. Now, what
about poor, little me, how

121
00:07:58.360 --> 00:08:01.420
are you going to kind
of straddle the, the opensource

122
00:08:01.420 --> 00:08:04.750
love that Xamarin gives to
everything and the, you know,

123
00:08:04.780 --> 00:08:07.720
and all of that with
the, you know, you guys

124
00:08:07.720 --> 00:08:11.380
need to make some money.
Yeah. So there was a

125
00:08:11.380 --> 00:08:14.890
little bit of, of the
first one when we launched,

126
00:08:14.890 --> 00:08:18.730
because people thought that we
had completely Fort Mont developed.

127
00:08:18.730 --> 00:08:22.570
So we quickly weekly address
that question. And it really

128
00:08:22.570 --> 00:08:26.530
helped that the people in
the Linux community and the

129
00:08:26.530 --> 00:08:31.600
Debby and community actually packaged
monitor develop within 24 hours.

130
00:08:31.960 --> 00:08:34.120
So within 24 hours, we
had Debbie and, and a

131
00:08:34.120 --> 00:08:37.570
bone, two packages with the
latest and greatest. So when

132
00:08:37.570 --> 00:08:41.320
you run one of development,
Linux and Ubuntu, you would

133
00:08:41.320 --> 00:08:43.660
get the same experience that
you get on Mac and

134
00:08:43.660 --> 00:08:47.710
windows without the branding, right.
Or without the other, Adam's

135
00:08:47.980 --> 00:08:50.860
the iOS and Android one.
So it was, so at

136
00:08:50.860 --> 00:08:53.500
least that one was an
easy question to answer. We're

137
00:08:53.650 --> 00:08:57.570
contributing upstream. We all the
changes upstream. And the w

138
00:08:57.660 --> 00:08:59.670
at this point, we're continuing
all the work in the

139
00:08:59.670 --> 00:09:03.450
open now that we had
our chances of prototyping and

140
00:09:03.450 --> 00:09:07.020
designing and, and cleaning up
the ADE. The second piece

141
00:09:07.020 --> 00:09:10.530
is the second piece. It
is, it is actually very

142
00:09:10.530 --> 00:09:16.320
interesting because since we've been
working on a, to me,

143
00:09:16.320 --> 00:09:19.080
it's very interesting because I
spent a decade or more

144
00:09:19.080 --> 00:09:21.750
than a decade actually holding
mites a lot more. So

145
00:09:21.750 --> 00:09:25.290
20 years is that 20
years. Oh, you have 20

146
00:09:25.290 --> 00:09:27.330
years in opensource. So I've
been doing open source for

147
00:09:27.330 --> 00:09:31.560
20 years. And, and it
was about 20 years ago

148
00:09:31.560 --> 00:09:35.550
that I stopped using those
machines and windows and switch

149
00:09:35.550 --> 00:09:42.150
completely to Unix. And, and
I stayed with Joe Nixon with

150
00:09:42.150 --> 00:09:44.820
Linux up until about a
year and a half ago

151
00:09:45.150 --> 00:09:48.150
in those communities. And when
we launched the hammer and

152
00:09:48.150 --> 00:09:51.540
it's a company that delivers,
you know, tools for building

153
00:09:51.540 --> 00:09:55.440
iOS and Android apps on
windows and Mac. So we've

154
00:09:55.440 --> 00:09:57.990
not really been interacting with
Linux community very much. And

155
00:09:57.990 --> 00:10:01.620
it was very surprising for
me. And I guess to

156
00:10:01.620 --> 00:10:04.410
you, this is, this is
what you see every day,

157
00:10:04.410 --> 00:10:07.290
but it was very surprising
to me to see a

158
00:10:07.290 --> 00:10:12.090
completely different side of developers
on Linux. It would be

159
00:10:12.090 --> 00:10:14.940
unheard of to sell software.
It's almost a hurt off

160
00:10:15.570 --> 00:10:18.060
for people to try and
sell software. And I think

161
00:10:18.060 --> 00:10:21.420
that the moment that you
tried to sell something, somebody,

162
00:10:21.720 --> 00:10:26.070
somebody rewrites it from scratches
up and source, but in

163
00:10:26.070 --> 00:10:29.190
the proprietor world, in the
windows and Mac world, it

164
00:10:29.190 --> 00:10:32.190
was fascinating to me to
see people willing, to pay

165
00:10:32.190 --> 00:10:36.960
for software, to get features.
And, and it's been a

166
00:10:36.960 --> 00:10:39.930
little bit of a shock
after spending 12 years out

167
00:10:39.930 --> 00:10:41.910
in the wild or in
the wilderness. That is, that

168
00:10:41.910 --> 00:10:47.780
is open source. Well, a
small, small side discussion. If

169
00:10:48.080 --> 00:10:52.040
Linux people won't pay for
software, how are they paying

170
00:10:52.220 --> 00:10:54.320
the rent? Like, what is
it that they're building? If,

171
00:10:54.340 --> 00:10:57.500
if, if everyone refused to
pay for anything, they only

172
00:10:57.500 --> 00:11:02.270
pay for services. They only
pay for help. Aye. It's

173
00:11:02.600 --> 00:11:06.950
what are they doing all
day? I, I don't really,

174
00:11:07.010 --> 00:11:09.020
I don't really know. I
mean, I think that they

175
00:11:09.020 --> 00:11:12.860
do services. I think that
there's a culture of it's

176
00:11:12.860 --> 00:11:16.730
okay to pay for services
and updates, but not to

177
00:11:16.730 --> 00:11:21.800
charge for software, obviously red
hat and SUSE. They have

178
00:11:21.800 --> 00:11:26.180
made a business of selling
of selling services and support.

179
00:11:27.320 --> 00:11:29.960
But as a software programmer,
you know, we tried, we

180
00:11:29.960 --> 00:11:34.160
tried making the software would
trick to make software companies

181
00:11:34.160 --> 00:11:36.260
on pure open source work
on Linux for many years.

182
00:11:36.260 --> 00:11:40.760
And, and we failed at
my previous company with Demian.

183
00:11:41.570 --> 00:11:44.690
It was very difficult to
get people to pay for

184
00:11:44.690 --> 00:11:47.510
free software. And, and I
guess it shouldn't have really

185
00:11:47.510 --> 00:11:51.590
surprised anyone, but those were
the roaring two thousands when

186
00:11:51.590 --> 00:11:55.360
a Linux was going to
take over world. And, and

187
00:11:55.360 --> 00:11:57.460
it became very clear that
he was only a few

188
00:11:57.460 --> 00:11:59.860
people that were in a
position to actually monetize open

189
00:11:59.860 --> 00:12:02.680
source. You have to be
a big company like, like

190
00:12:02.680 --> 00:12:06.310
red hat or Novell, but
the majority of the small

191
00:12:06.310 --> 00:12:10.090
guys could really only make
money out of services, which

192
00:12:10.090 --> 00:12:14.320
is fine services and support.
But as a software developer,

193
00:12:15.670 --> 00:12:18.130
it's a little bit demoralizing
because I, when I write

194
00:12:18.130 --> 00:12:20.680
software, when I create things,
I want to shape things.

195
00:12:20.680 --> 00:12:23.950
I want to design software.
And, and that's not something

196
00:12:23.950 --> 00:12:28.980
that the Linux community likes
to pay for. So, so

197
00:12:28.990 --> 00:12:30.970
as a software developer, he
was a little bit of

198
00:12:30.970 --> 00:12:35.560
a bummer that, that your
work is not considered something

199
00:12:35.560 --> 00:12:41.920
worth paying for compared to
maintenance and consulting. So in

200
00:12:41.920 --> 00:12:43.960
the private world, you kind
of have those two options.

201
00:12:43.960 --> 00:12:46.540
If you like consulting and
support, you can do that.

202
00:12:46.540 --> 00:12:48.460
Or if you want to
sell a software, you can

203
00:12:48.460 --> 00:12:52.030
do that. And I know
this is all very basic

204
00:12:52.030 --> 00:12:55.170
to your listeners, but the
No, no. It's interesting to

205
00:12:55.170 --> 00:13:00.060
understand because, you know, I
think this may be simplistic

206
00:13:00.060 --> 00:13:02.490
way of looking at it,
but ultimately you pay for

207
00:13:02.490 --> 00:13:06.750
value. And I'm always amazed
in all things like this.

208
00:13:06.760 --> 00:13:08.490
I don't want to like
turn the whole podcast into

209
00:13:08.490 --> 00:13:12.330
a pricing discussion, but like
I was talking to a

210
00:13:12.330 --> 00:13:15.090
professional developer and he's going
to buy a new laptop.

211
00:13:15.540 --> 00:13:16.830
And I was telling him
that I thought he should

212
00:13:16.830 --> 00:13:18.450
stretch a little bit. He
should pay a little bit

213
00:13:18.450 --> 00:13:21.390
more than, you know, and
he was like, well, he

214
00:13:21.390 --> 00:13:24.240
was looking for a laptop
around seven or $800. And

215
00:13:24.240 --> 00:13:26.430
I said, you know, for
1300, you're going to get

216
00:13:26.950 --> 00:13:29.100
$500 more, but you're going
to get 10 times a

217
00:13:29.100 --> 00:13:32.400
laptop. And we went kind
of around and around about,

218
00:13:32.610 --> 00:13:35.670
about that. And I was
just thinking to myself, even

219
00:13:35.670 --> 00:13:39.480
if the laptop lasted two
years, which is, you know,

220
00:13:39.510 --> 00:13:42.900
pretty short lifetime for a
laptop, and you're looking at

221
00:13:42.900 --> 00:13:46.860
about a dollar a day,
80 cents a day, and you're

222
00:13:46.860 --> 00:13:48.150
going to have a piece.
You can just, you're going

223
00:13:48.150 --> 00:13:50.760
to have joy just every
possible second. You know what

224
00:13:50.760 --> 00:13:53.910
I'm saying? And like the
middle, I think the middle

225
00:13:53.910 --> 00:13:57.150
skew of Xamarin studio is
like a grant. And I

226
00:13:57.150 --> 00:13:59.190
could totally see people saying,
you know, I'm a poor

227
00:13:59.190 --> 00:14:02.790
student. I can't possibly pay
a thousand dollars or even

228
00:14:02.790 --> 00:14:04.980
an enterprise saying, Oh, we're
a poor enterprise. I can't

229
00:14:04.980 --> 00:14:07.350
possibly pay a thousand dollars.
But then I'm thinking, you

230
00:14:07.350 --> 00:14:10.140
know, for $3 a day,
you're going to get this

231
00:14:10.140 --> 00:14:12.600
amazing. You're going to be
sitting on the shoulders of

232
00:14:12.600 --> 00:14:14.820
giants who have been working
on this forever and you

233
00:14:14.820 --> 00:14:17.700
pay for value, but it
sounds like you've actually got

234
00:14:17.700 --> 00:14:20.760
an Indi, an indie version
of this and a starter

235
00:14:20.760 --> 00:14:22.770
version. What are those? Yeah,
we've got a couple of

236
00:14:22.770 --> 00:14:26.370
options. So first off We
also offer a student discount.

237
00:14:26.370 --> 00:14:30.540
So students get the, the,
they get it all right

238
00:14:30.540 --> 00:14:33.990
for, for almost nothing. But
we have a starter edition

239
00:14:33.990 --> 00:14:36.960
that that is free to
use. It has a few

240
00:14:36.960 --> 00:14:39.720
limitations. Like it has a
limitation on the size of

241
00:14:39.720 --> 00:14:42.000
your program. So you can
build a really large ops.

242
00:14:42.390 --> 00:14:45.360
And so, but you get
to use everything for free.

243
00:14:46.050 --> 00:14:49.020
The second one is the
Indi that removes that restriction.

244
00:14:50.010 --> 00:14:53.780
So there's no on what
you can use at that

245
00:14:53.780 --> 00:14:56.150
point or how big your
applications can be. So we

246
00:14:56.150 --> 00:14:58.400
figured that the starter was
a good way of striking

247
00:14:58.400 --> 00:15:00.260
a balance between a lot
of people that came to

248
00:15:00.260 --> 00:15:02.450
us and said, I want
to learn the platform. I

249
00:15:02.450 --> 00:15:06.560
wouldn't learn iOS and want
to learn Android and, and,

250
00:15:06.920 --> 00:15:10.640
and having a four pay
product. So we addressed that

251
00:15:10.640 --> 00:15:14.390
particular segment of the population.
There's still a lot of

252
00:15:14.390 --> 00:15:16.370
people that say it should
be free for open source,

253
00:15:16.880 --> 00:15:20.300
but that's a little bit
trickier, right? Because they say,

254
00:15:20.300 --> 00:15:22.910
well, if I open source
my projects, should I get

255
00:15:22.910 --> 00:15:26.450
a refund? You know, things
like that. So, so we

256
00:15:26.450 --> 00:15:29.660
didn't really address those scenarios.
We get a lot of

257
00:15:29.660 --> 00:15:33.050
creative suggestions as to when
we should charge and what

258
00:15:33.050 --> 00:15:36.770
we should not charge for
open source. And, and I

259
00:15:36.770 --> 00:15:38.600
don't think we've come up
with a solution if one

260
00:15:38.600 --> 00:15:41.240
day we find something that
works. We'll, we'll definitely do

261
00:15:41.240 --> 00:15:44.720
it. I mean, my heart
is still very much with

262
00:15:44.720 --> 00:15:50.360
the open source community, but,
but it just happens that

263
00:15:50.360 --> 00:15:52.910
my heart lends to live
at more towards the size

264
00:15:52.910 --> 00:15:55.700
of a, of paying my
amazing engineers through to create

265
00:15:55.700 --> 00:15:59.030
the beautiful software. So we'll
have to wait on that

266
00:15:59.030 --> 00:16:01.870
a little bit. It's funny
how people are sometimes apologetic

267
00:16:02.170 --> 00:16:06.040
about making money. You know,
it's just like, Oh gosh,

268
00:16:06.040 --> 00:16:08.440
you know, I'm really sorry.
I kinda, you know, I

269
00:16:08.440 --> 00:16:12.160
have to charge cause I
have to eat. Yeah. Yeah.

270
00:16:13.060 --> 00:16:15.380
But you know, you're right
about this thing, about the

271
00:16:15.400 --> 00:16:19.060
laptop and buying yourself a
lap. The by see, I

272
00:16:19.060 --> 00:16:21.850
mean, as a software developer,
probably one of the best

273
00:16:21.850 --> 00:16:23.830
investments, I think that there
are two big investments that

274
00:16:23.830 --> 00:16:27.010
you should make. If you're
writing software. One is the,

275
00:16:27.040 --> 00:16:29.080
well, three, one is getting
good at hardware. And the

276
00:16:29.080 --> 00:16:33.100
second one is getting a
good chair. You know, it

277
00:16:33.100 --> 00:16:35.740
will do wonders for your
back and your hands. And

278
00:16:35.740 --> 00:16:39.010
the third one is the
learn to touch type. No,

279
00:16:39.040 --> 00:16:41.530
that's, that's amazing that you
said that because I'm always

280
00:16:41.530 --> 00:16:44.410
talking about, you know, chair
bed, these are all things.

281
00:16:44.410 --> 00:16:46.630
You, you, you, you spend
a third of your life

282
00:16:46.630 --> 00:16:48.430
sitting on your chair. It
should be an awesome chair.

283
00:16:48.790 --> 00:16:50.920
You spent a third of
your life sleeping. It should

284
00:16:50.920 --> 00:16:54.130
be totally, you know, an
Epic bed. Yeah. For goodness

285
00:16:54.130 --> 00:16:58.210
sake, don't waste money on
a, on a lousy mattress.

286
00:16:58.240 --> 00:17:01.990
But then yesterday I was
teaching at this university. I

287
00:17:01.990 --> 00:17:06.280
did a guest lecture at
Oregon Institute of technology. And

288
00:17:06.820 --> 00:17:09.820
for some reason, the conversation
turned into typing and about

289
00:17:09.820 --> 00:17:12.880
the idea of being IO
bound. And it was like,

290
00:17:13.000 --> 00:17:15.160
you know, I can't imagine
how many people are completely

291
00:17:15.160 --> 00:17:18.430
IO bound that they're not,
you know, their brain has

292
00:17:18.520 --> 00:17:21.730
solved the problem, but they're
just waiting for their fingers

293
00:17:21.730 --> 00:17:27.280
to like finish buffering. Yeah,
absolutely. And I think I'm

294
00:17:27.280 --> 00:17:30.090
a good typist they do
about, I can do sustained

295
00:17:30.090 --> 00:17:33.100
about 80 words per minute.
If I'm lucky, I'll do

296
00:17:33.100 --> 00:17:38.770
a hundred, but net Friedman,
he can sustain 120. And

297
00:17:38.800 --> 00:17:41.320
when he gets lucky, I've
seen the guy do 170.

298
00:17:41.770 --> 00:17:45.940
It is ridiculous. I could
not believe my eyes and

299
00:17:45.940 --> 00:17:48.670
just spent, you know, it
really, it is an issue

300
00:17:48.670 --> 00:17:51.390
of bandwidth is the tool
that you use every day.

301
00:17:51.810 --> 00:17:54.480
And it limits what you
do when you're writing code

302
00:17:54.510 --> 00:17:58.050
of like, it's very obvious
to me when you see

303
00:17:58.050 --> 00:18:01.950
somebody writing code that a
fast typist has no problem

304
00:18:01.950 --> 00:18:05.490
documenting what he did. Right.
He adds comments explains the

305
00:18:05.490 --> 00:18:07.860
problem because to him is
just a fraction of a

306
00:18:07.860 --> 00:18:11.550
second to go and write
all of this stuff. Well,

307
00:18:11.550 --> 00:18:13.200
people that don't touch that
they tend to be the

308
00:18:13.200 --> 00:18:17.730
ones that come up with
weird reasons. Like, well, I'll

309
00:18:17.730 --> 00:18:20.640
document it when it's finished.
I'll document it. When the

310
00:18:20.640 --> 00:18:23.940
AP is complete, I'm still
gonna make some changes. I'm

311
00:18:23.940 --> 00:18:28.110
not there I'm undocumented. So
it does, it's not only

312
00:18:28.110 --> 00:18:30.120
a bandwidth issue. It really
changes the way that you

313
00:18:30.120 --> 00:18:33.690
develop software and the things
that you can do. And

314
00:18:33.690 --> 00:18:36.450
in my opinion, if you're
not documenting what you do,

315
00:18:36.720 --> 00:18:42.390
you're wasting, you know, you're
wasting your time. People don't

316
00:18:42.390 --> 00:18:44.580
have a way of finding
or understanding what you did.

317
00:18:45.020 --> 00:18:49.220
Yeah. Yeah. I actually, I
wanted to come back to

318
00:18:49.220 --> 00:18:50.720
the product. So this is
always so fun. We should

319
00:18:50.720 --> 00:18:54.350
have like three podcasts here,
but I wanted to understand

320
00:18:54.560 --> 00:18:57.440
how you pulled this off.
And I'm looking at the

321
00:18:57.440 --> 00:19:00.800
way that Xamarin studio is
kind of looking at the

322
00:19:00.800 --> 00:19:03.950
screenshots and stuff. And it
looks to me like, I,

323
00:19:04.250 --> 00:19:05.870
I need a Mac and
I don't need a Mac.

324
00:19:05.900 --> 00:19:08.000
Like I don't need a
Mac to write the code,

325
00:19:08.180 --> 00:19:10.820
but to run it, it
looks like you kind of

326
00:19:11.360 --> 00:19:15.760
attached to a remote running
process. And, and they're not

327
00:19:15.770 --> 00:19:19.100
gonna VNC into a, an
iOS simulator on some Mac

328
00:19:19.120 --> 00:19:21.590
so that I could have
a farm of max that

329
00:19:21.590 --> 00:19:24.830
might people could all kind
of attach to. Right. So

330
00:19:24.830 --> 00:19:28.700
the, so the issue with
the, yeah, so this is

331
00:19:28.700 --> 00:19:32.930
a visual studio at U
S product. The Apple makes

332
00:19:32.930 --> 00:19:35.300
it very clear that if
you want to develop iOS

333
00:19:35.360 --> 00:19:38.480
applications, you need to use
a Mac. It is part

334
00:19:38.480 --> 00:19:42.740
of their agreement. So we
just happened to, to follow

335
00:19:42.740 --> 00:19:47.690
the rules that Apple has
set. So one developer, one

336
00:19:47.690 --> 00:19:51.260
Mac, the second piece is
that there are a number

337
00:19:51.260 --> 00:19:53.300
of things that need to,
you need the Mac to

338
00:19:53.300 --> 00:19:58.100
do a code, sign your
application, run the simulator, run

339
00:19:58.100 --> 00:20:02.240
the ex-co designer. So, so
you still need a Mac

340
00:20:02.240 --> 00:20:06.470
to do some of those
operations because we just don't

341
00:20:06.470 --> 00:20:09.950
have today a designer. And,
and I don't think we'll

342
00:20:09.950 --> 00:20:12.440
ever have our own simulator.
I don't think we're going

343
00:20:12.440 --> 00:20:14.870
to simulate iOS ourselves. So
you want to use the

344
00:20:14.870 --> 00:20:18.600
iOS simulator, which makes it
a lot simpler to, to

345
00:20:18.650 --> 00:20:21.680
build and test your application
quickly. When I was building

346
00:20:21.680 --> 00:20:23.990
my own Twitter client, the
one with the chicken noises,

347
00:20:25.130 --> 00:20:27.980
it is probably the only
Twitter client with chicken noises.

348
00:20:29.450 --> 00:20:31.310
I did most of the
work on the simulator. I,

349
00:20:31.650 --> 00:20:34.160
I barely had the user
device. You only use the

350
00:20:34.160 --> 00:20:37.370
device when you to try
test the camera and, and

351
00:20:37.850 --> 00:20:40.310
there's geolocation. But other than
that, you don't really need

352
00:20:40.310 --> 00:20:43.310
to deploy to the device.
And it's so much faster

353
00:20:43.310 --> 00:20:47.770
to just target the simulator.
You know, you a big

354
00:20:47.800 --> 00:20:52.690
fat core duo. Whatever's the
latest mega her get her

355
00:20:52.690 --> 00:20:55.540
thing on your desk versus
the, this a 10 little

356
00:20:55.540 --> 00:20:57.640
device where you have to
upload the software and run

357
00:20:57.640 --> 00:21:01.180
it there. So, so the
development experience is such just

358
00:21:01.180 --> 00:21:03.430
so much better to, to
have it running or your

359
00:21:03.430 --> 00:21:07.110
Mac then then deployed to
device in my opinion. So

360
00:21:07.170 --> 00:21:09.510
what is the experience I'm
sitting in visual studio, I'm

361
00:21:09.510 --> 00:21:13.710
writing C sharp code. I
hit <inaudible> and then how

362
00:21:13.710 --> 00:21:17.670
does it show up on
an iPhone? So it depends

363
00:21:17.670 --> 00:21:22.860
on the configuration that you
have. So just like in

364
00:21:22.860 --> 00:21:25.110
visual studio where you have
the bug and release, you

365
00:21:25.110 --> 00:21:28.590
can have a debug and
release to simulator and debug

366
00:21:28.590 --> 00:21:31.770
and release to device. So
if you choose a debug

367
00:21:31.770 --> 00:21:34.380
or release on device, when
you hit a five, it

368
00:21:34.740 --> 00:21:37.350
compiles the application, deploys it
on your iPhone and your

369
00:21:37.350 --> 00:21:39.840
iPhone launches the app. And
if you have break points,

370
00:21:39.860 --> 00:21:42.690
it will break into visual
studio. And you'll single step

371
00:21:42.690 --> 00:21:46.080
from there. If you're using
the simulator, there are two

372
00:21:46.080 --> 00:21:50.040
scenarios. One is you have
your machines side-by-side so you

373
00:21:50.040 --> 00:21:53.250
have your Mac and your
visual studio machines. Side-by-side two

374
00:21:53.250 --> 00:21:56.220
monitors. So the simulator will
pop up on the other

375
00:21:56.220 --> 00:22:00.330
monitor. The other scenario is
you're using virtualization. So you're

376
00:22:00.330 --> 00:22:04.800
running windows in a VM.
And, and when, when you

377
00:22:04.800 --> 00:22:07.860
start the application, we, we
send the simulator to the

378
00:22:07.860 --> 00:22:10.680
foreground and we hit it.
We hit a break point.

379
00:22:10.710 --> 00:22:15.690
We sent visual studio and,
and your VMware configuration to

380
00:22:15.690 --> 00:22:20.400
the foreground. So it, I,
I personally would go with

381
00:22:20.400 --> 00:22:23.670
that path, a single machine
and Mac and virtualized windows.

382
00:22:23.700 --> 00:22:26.940
That's probably the best, but
I understand that some people

383
00:22:26.940 --> 00:22:32.400
might have some beefed up
Dell computers with, I don't

384
00:22:32.400 --> 00:22:34.950
know how many 32 CPS,
and they might want to,

385
00:22:35.340 --> 00:22:38.220
to take advantage of that.
So, so it's just my

386
00:22:38.220 --> 00:22:40.500
personal choice. I do everything
on a laptop, so I

387
00:22:40.500 --> 00:22:43.410
would use virtualization, but some
of our guys use a

388
00:22:43.710 --> 00:22:46.950
lift up machines and just
to displace. So I've got

389
00:22:46.950 --> 00:22:49.140
choices though. I mean, I
could do this with lots

390
00:22:49.140 --> 00:22:50.790
of VMs or I could
have, I can have a

391
00:22:50.790 --> 00:22:54.870
Mac somewhere else. Yeah, exactly.
Huh. So it's as if

392
00:22:54.870 --> 00:22:57.510
it's a, like, I think
about it in the context

393
00:22:57.510 --> 00:23:01.130
of web development where I've
got different targeted browsers, and

394
00:23:01.130 --> 00:23:02.610
I'm going to just, I'm
going to launch a process,

395
00:23:02.610 --> 00:23:04.590
I'm going to inject my
code into it. And then

396
00:23:04.590 --> 00:23:06.780
I'm going to see it
as it relates on that,

397
00:23:06.900 --> 00:23:08.970
on that simulator. And can
I look at it on

398
00:23:08.970 --> 00:23:11.220
a, on an iPhone five
and an iPhone four and

399
00:23:11.220 --> 00:23:13.470
all those different things. Those
are all settings. I change

400
00:23:13.470 --> 00:23:16.740
in the simulator and it
just works. Yeah, that's right.

401
00:23:16.740 --> 00:23:18.240
So that's the first piece.
You can definitely do it

402
00:23:18.240 --> 00:23:20.250
in a simulator or the
other option is you have

403
00:23:20.250 --> 00:23:23.220
a, you have a little
farm of your devices with

404
00:23:23.220 --> 00:23:28.350
different operating systems, probably more
important for Android because the

405
00:23:28.440 --> 00:23:31.200
Android is still, the majority
of Android devices are running

406
00:23:31.230 --> 00:23:35.520
very old versions of Android
and Apple. They're really good

407
00:23:35.520 --> 00:23:39.030
at updates. And they're amazing
at updates. I think that

408
00:23:39.270 --> 00:23:41.910
most days developers at this
point are just targeting iOS

409
00:23:41.910 --> 00:23:46.080
five and higher. And some
people are just saying, <inaudible>

410
00:23:46.100 --> 00:23:49.130
it's, they've, they've, they've got
a good thing going there.

411
00:23:51.670 --> 00:23:54.820
And do I have to
buy different products for iOS

412
00:23:54.820 --> 00:23:57.970
and Android? Or do I
just buy one thing? Yes.

413
00:23:58.000 --> 00:24:00.370
Do you need to buy
our iOS? Our iOS and

414
00:24:00.370 --> 00:24:04.660
Android products are separate. You
buy them separately, or if

415
00:24:04.660 --> 00:24:06.310
you choose to buy them
both, I think we have

416
00:24:06.310 --> 00:24:08.230
a discount. I don't know
what the discount is, but

417
00:24:08.680 --> 00:24:11.080
you get a bundle discount,
But I guess what I'm

418
00:24:11.080 --> 00:24:13.270
saying is, is Ameron studio
I could use in one

419
00:24:13.270 --> 00:24:16.810
place and then I just
have to add on, or

420
00:24:16.810 --> 00:24:20.020
am I using two different
eddies? Correct? The, the IDE

421
00:24:20.740 --> 00:24:24.160
the IVs, either visual studio,
Xamarin studio. And you add

422
00:24:25.120 --> 00:24:27.250
to either one of them,
the iOS or an Android

423
00:24:27.250 --> 00:24:30.100
features. So when you purchase,
all we do is we

424
00:24:30.100 --> 00:24:33.250
enable the iOS and Android
features on your IDs, but

425
00:24:33.250 --> 00:24:36.850
the idea is the same.
Okay. Okay. And we, we,

426
00:24:36.850 --> 00:24:40.000
I had talked to you
kind of privately about portable

427
00:24:40.000 --> 00:24:42.550
libraries, this idea that you
could share lots and lots

428
00:24:42.550 --> 00:24:45.670
of code. And I know
that recently, I think there's

429
00:24:45.670 --> 00:24:48.820
a prerelease of HTTP client
so that you could make

430
00:24:49.030 --> 00:24:53.470
calls from portable libraries. Now,
does that work in, in

431
00:24:53.470 --> 00:24:56.770
Xamarin? Yeah, so we actually
have HDB. We wrote our

432
00:24:56.770 --> 00:25:00.940
own HDB client. So, so
both our iOS and Android

433
00:25:01.180 --> 00:25:04.570
versions do have that. So
we don't need the PCL

434
00:25:04.570 --> 00:25:08.230
version. We already have it,
but there's a lot of,

435
00:25:08.260 --> 00:25:10.960
there's a tremendous amount of
value in the portable class

436
00:25:10.960 --> 00:25:15.310
libraries. So we've been working
with some of, of your

437
00:25:15.310 --> 00:25:21.700
team members at Microsoft. They've
been absolutely amazing at answering

438
00:25:21.700 --> 00:25:24.760
every small little question that
we've had about how PCL

439
00:25:24.760 --> 00:25:29.410
actually works. And I'm happy
to report that, that just

440
00:25:29.410 --> 00:25:31.450
this week, we're doing the
integration work here in the

441
00:25:31.450 --> 00:25:34.690
Boston office to get portable
class libraries into all of

442
00:25:34.690 --> 00:25:37.840
our products. It's been a
long, it's been a long

443
00:25:37.840 --> 00:25:41.140
road because I started not
really knowing very much about

444
00:25:41.140 --> 00:25:45.070
PCL, but really thank you
to the guys at Microsoft.

445
00:25:46.210 --> 00:25:50.140
We're going to have full
support for PCLs and you'll

446
00:25:50.140 --> 00:25:52.570
be able to show the
same PCL on iOS, Android,

447
00:25:52.780 --> 00:25:56.980
desktop Mac, and all of
the visual studio products that

448
00:25:56.980 --> 00:26:00.910
you guys support. What, And
those guys do if they're

449
00:26:00.910 --> 00:26:03.940
listening or what could the
community do to, to support

450
00:26:04.540 --> 00:26:07.450
portable libraries more? Cause, I
mean, I think portable library

451
00:26:07.450 --> 00:26:10.300
is just a killer feature.
Just the idea that I

452
00:26:10.300 --> 00:26:14.140
could. I mean, just now
I'm kind of visualizing like

453
00:26:14.140 --> 00:26:17.020
my little startup, my theoretical
startup, and I've got everything

454
00:26:17.020 --> 00:26:19.960
loaded up in visual studio
and I've gotten my windows,

455
00:26:19.960 --> 00:26:24.580
phone windows, eight, Android iOS,
and I'm sharing 70, 80%

456
00:26:24.580 --> 00:26:28.210
of my code and a
PCL that seems like, perfect.

457
00:26:28.960 --> 00:26:32.200
What could they do to
improve it? Yeah, there's one

458
00:26:32.200 --> 00:26:35.020
particular profile one, or I
don't remember which one, which

459
00:26:35.020 --> 00:26:38.890
number is these profiles are
numbered based on the, on

460
00:26:38.890 --> 00:26:42.250
the target platforms that you
want to aim for. And

461
00:26:42.880 --> 00:26:45.390
I remember the number, but
there's one that is, that

462
00:26:45.420 --> 00:26:49.050
will give you the most
coverage across all platforms. So

463
00:26:49.050 --> 00:26:50.910
what you need to do
is build portable class libraries

464
00:26:50.920 --> 00:26:56.100
that target that particular profile
from where we stand, we

465
00:26:56.100 --> 00:26:58.830
pride ourselves in having a
super set of all of

466
00:26:58.830 --> 00:27:04.050
these things. So, so monitor
and monitor really won't be

467
00:27:04.050 --> 00:27:07.050
the reasons why you have
to downgrade in your PCL

468
00:27:07.050 --> 00:27:12.810
support. So it's a matter
of just making that one,

469
00:27:12.810 --> 00:27:14.220
I'll get back to you
on which one is a

470
00:27:14.220 --> 00:27:17.850
preferred profile. I had a
discussion with, with the team

471
00:27:17.850 --> 00:27:21.360
in the, in the BCR
runtime. And, and it can

472
00:27:21.360 --> 00:27:23.190
remember which one was the
one that we said, this

473
00:27:23.190 --> 00:27:25.790
is a good one. Yeah.
I think it would be.

474
00:27:26.060 --> 00:27:28.790
I just think we as
a community should keep putting

475
00:27:28.790 --> 00:27:31.850
pressure on them because that's,
that's what we want. You

476
00:27:31.850 --> 00:27:32.990
know what I mean? We
want to be able to

477
00:27:32.990 --> 00:27:35.210
share as much as cold
as possible. Like I had

478
00:27:35.210 --> 00:27:39.110
the guys from, was it
stick, draw a stick, man.

479
00:27:40.500 --> 00:27:42.770
They're sharing just a ridiculous
amount of code. I mean,

480
00:27:42.770 --> 00:27:45.770
it totally blew me away.
Yeah. It was interesting. And

481
00:27:45.770 --> 00:27:50.090
they also, they're also using
XMA for their game, which

482
00:27:50.090 --> 00:27:52.670
I thought was very interesting.
I have to have to

483
00:27:52.670 --> 00:27:56.390
say for all these years,
XMA is a word that

484
00:27:56.390 --> 00:27:58.880
wasn't my periphery, but I
never really understood what it

485
00:27:58.880 --> 00:28:02.750
was. And I knew that
was associated with games and

486
00:28:02.870 --> 00:28:06.050
it's some kind of gaming
thing, but that was it.

487
00:28:06.110 --> 00:28:09.500
And, and it wasn't until
I saw the Kitson guys

488
00:28:09.770 --> 00:28:11.710
talk about, draw a stigma
that I actually understood what

489
00:28:11.720 --> 00:28:14.150
extend they was. So the
girl that was really interesting.

490
00:28:14.150 --> 00:28:16.250
So we should do something
to help those guys be

491
00:28:16.490 --> 00:28:19.790
monitored. Yeah. Motto game, I
think is what makes it

492
00:28:19.790 --> 00:28:23.690
happen. That's the amazing thing
underneath there. Yeah. And that's

493
00:28:23.690 --> 00:28:25.940
funny because I've been helping
the Monarch game guys without

494
00:28:25.940 --> 00:28:29.600
really knowing what mono game
did. So, so they can

495
00:28:29.610 --> 00:28:31.760
say, can you help us
with this and release notes

496
00:28:31.760 --> 00:28:34.220
and promotions? Like, yeah, sure.
I just don't know what

497
00:28:34.220 --> 00:28:37.730
it does yet, but now
I do. Now I do.

498
00:28:37.850 --> 00:28:40.010
I do. So what is
the store? You said that

499
00:28:40.010 --> 00:28:41.600
you had a story, you
hadn't talked much about it.

500
00:28:42.980 --> 00:28:46.490
All right. So, so, so
the one thing that that

501
00:28:46.490 --> 00:28:50.690
happens is that when mobile
developers get started, they give

502
00:28:50.780 --> 00:28:54.080
you a ride, your hello
world application, you're first bought

503
00:28:54.080 --> 00:28:58.910
the navigation and you're kind
of proud of it. And

504
00:28:58.910 --> 00:29:01.070
when it comes time to
spice up your application and

505
00:29:01.070 --> 00:29:03.590
you compare your mobile app
with what the professionals are

506
00:29:03.590 --> 00:29:08.000
doing, it, it feels a
little bit lacking. It feels

507
00:29:08.000 --> 00:29:11.420
a little bit lacking. So
this seems like a very

508
00:29:11.420 --> 00:29:15.050
natural fit for dot net's,
a strong component system and

509
00:29:15.050 --> 00:29:21.170
strong component idioms to do
deliver third party components. And

510
00:29:21.200 --> 00:29:23.450
it is in a way
there's two things that we're

511
00:29:23.450 --> 00:29:27.110
doing with our components. One
of them are components in

512
00:29:27.110 --> 00:29:31.400
the sense of, of being
libraries that you can reuse

513
00:29:31.430 --> 00:29:33.980
very much like nugget. And
I'll explain the difference with

514
00:29:33.980 --> 00:29:37.520
nugget in a second, but
the second piece are themes.

515
00:29:38.750 --> 00:29:41.610
So what happens is that
when, when you build application,

516
00:29:41.650 --> 00:29:44.560
you're very proud of your
application. You show it to

517
00:29:44.560 --> 00:29:48.850
your friends and they're not
that impressed. Your buttons are

518
00:29:48.850 --> 00:29:53.020
white. The, the style is
okay, but the bar for

519
00:29:54.880 --> 00:29:57.700
the user interface bar is
very high. Now people expect

520
00:29:58.260 --> 00:30:00.850
a lot of quality, a
lot of, a lot of

521
00:30:01.900 --> 00:30:04.540
attention to detail and applications.
And that takes a lot

522
00:30:04.540 --> 00:30:08.200
of time. Somebody that is
just building software or there's

523
00:30:08.200 --> 00:30:11.500
an expert, a software developer
and a craftsman is not

524
00:30:11.500 --> 00:30:15.310
necessarily a great artist. So
the, so the distance that

525
00:30:15.310 --> 00:30:18.340
people have to travel from
getting started with iOS and

526
00:30:18.340 --> 00:30:21.460
Android, building the replication and
then making it a great

527
00:30:21.460 --> 00:30:24.310
application as opposed to, yeah,
I got an iOS app

528
00:30:24.760 --> 00:30:28.060
it's as long as it's
like a website just started

529
00:30:28.060 --> 00:30:30.730
with a, with a simple
website and then to make

530
00:30:30.730 --> 00:30:32.800
it a great website, you
have to spend a ton

531
00:30:32.800 --> 00:30:35.740
of time on, on styling
it and making sure that

532
00:30:35.740 --> 00:30:39.850
it looks great and feels
great. So while we wanted

533
00:30:39.850 --> 00:30:42.130
to do was to make
it very easy for people

534
00:30:42.130 --> 00:30:45.970
to style their applications. So
we work with, we work

535
00:30:45.970 --> 00:30:49.300
with a design company called
app design fault. They're great

536
00:30:49.300 --> 00:30:51.610
designers. And what we did
is that we turned her

537
00:30:51.610 --> 00:30:57.700
designs into, into essentially a
method goal. So in your

538
00:30:57.700 --> 00:31:00.580
secret code, you just invoke
one method and it styles

539
00:31:00.580 --> 00:31:04.810
your entire application with a
particular theme. So, so you

540
00:31:04.810 --> 00:31:06.640
can give it a leathery
theme or you can give

541
00:31:06.640 --> 00:31:11.680
it a flat theme. So
the application goes from is

542
00:31:11.680 --> 00:31:16.690
very boring, very flat, very
unprofessional look to do a

543
00:31:16.690 --> 00:31:21.070
high quality app with a
single call. So we really

544
00:31:21.070 --> 00:31:23.080
liked that. I mean, I
really am very proud of

545
00:31:23.080 --> 00:31:25.480
the work that we did
with themes because it's not

546
00:31:25.480 --> 00:31:30.070
very technologically advanced. It's not,
it's not compilers, it's not

547
00:31:30.070 --> 00:31:34.180
a jet engine, but it
makes a big difference and

548
00:31:34.240 --> 00:31:37.570
turning your, your app into
something that looks very polished.

549
00:31:37.960 --> 00:31:39.880
And I would say that
it's even better than, than

550
00:31:39.880 --> 00:31:41.680
doing it on the web.
Because with the web, you

551
00:31:41.680 --> 00:31:45.580
have to mass, you have
to change styles and redo

552
00:31:45.580 --> 00:31:48.610
your templates and your CSS
and go and patch things

553
00:31:48.610 --> 00:31:51.580
left. And right, this is
a iOS has a good

554
00:31:51.580 --> 00:31:54.010
foundation and I don't have
a good foundation for theming

555
00:31:54.970 --> 00:31:57.940
and, and we can theme
the app with a single

556
00:31:57.940 --> 00:32:00.630
call. So I think we're
the first ones that productized

557
00:32:00.630 --> 00:32:04.690
the theming and this way
for iOS. And I'm very

558
00:32:04.690 --> 00:32:07.570
excited about, I mean, I
made my crappy little demos

559
00:32:07.570 --> 00:32:11.320
look gorgeous. I mean, it
seems, I even look professional

560
00:32:11.320 --> 00:32:14.740
when I, when I think
my abs this way, and

561
00:32:14.740 --> 00:32:18.360
it's just one call away.
And with what, with respect

562
00:32:18.360 --> 00:32:21.300
to the two other people
who have tried theming, things

563
00:32:21.300 --> 00:32:24.630
like this, like, like jQuery
mobile, like they push that

564
00:32:24.630 --> 00:32:26.760
theme thing a lot, but
it's mostly just colors with

565
00:32:26.760 --> 00:32:28.860
your stuff. It really is
like a whole person. It's

566
00:32:28.860 --> 00:32:30.960
almost like a personality might
be even a better word

567
00:32:30.960 --> 00:32:34.500
than a theme. Yeah. And,
and it's also, and we

568
00:32:34.500 --> 00:32:38.010
understand that some people, when
I have a, for example,

569
00:32:38.010 --> 00:32:40.760
one thing for the, but
they one settings to be

570
00:32:40.910 --> 00:32:44.840
a different theme. So, so
we provide you enough tools

571
00:32:44.840 --> 00:32:46.550
that you can do that.
If you just use the

572
00:32:46.550 --> 00:32:49.490
default, you'll get everything styled,
but you can certainly have

573
00:32:49.490 --> 00:32:54.410
different parts of your application
style differently. So one thing

574
00:32:54.410 --> 00:32:57.230
that people tend to do
is settings just lighter colors

575
00:32:57.230 --> 00:32:59.450
while the application is dark,
right? So your app is

576
00:32:59.450 --> 00:33:02.450
entirely dark. And when you
go to settings, it's all

577
00:33:02.450 --> 00:33:05.360
very clear, right? So, so
we, so we do provide

578
00:33:05.360 --> 00:33:07.760
that. So we're very, very
happy with this. It looks

579
00:33:07.760 --> 00:33:11.140
very professional, very cool. Even
my software, It looks good.

580
00:33:11.470 --> 00:33:15.820
People can check this out@xamarin.com
and I would really encourage

581
00:33:15.820 --> 00:33:19.120
people. This is just me
talking to click on tour

582
00:33:19.180 --> 00:33:21.250
and then how it works.
I think that of all

583
00:33:21.250 --> 00:33:24.370
the pages on your site,
that is the best one,

584
00:33:25.570 --> 00:33:28.120
it's a great page. I
would put that up front

585
00:33:28.120 --> 00:33:31.870
and center. It shows before
and after it shows objective

586
00:33:31.870 --> 00:33:35.110
C versus C sharp. I
mean, it, it even I'd

587
00:33:35.110 --> 00:33:39.070
arguably makes the argument. It
makes the argument basically that

588
00:33:39.070 --> 00:33:41.440
C sharp is just better
than objective C for, for

589
00:33:41.440 --> 00:33:44.320
being expressive. Maybe it's just
the demo, the examples that

590
00:33:44.320 --> 00:33:49.690
you picked, but man, it
sure is attractive to see

591
00:33:49.690 --> 00:33:52.720
it side by side like
that. Yeah, actually that is

592
00:33:52.720 --> 00:33:56.710
one of my babies. I
really enjoy. I really enjoy

593
00:33:56.740 --> 00:34:00.730
what you can do with
C sharp in this particular

594
00:34:00.730 --> 00:34:05.200
page that you're talking about.
We turned some fairly nasty,

595
00:34:05.260 --> 00:34:12.370
fairly nasty APS and very
simple uses using default parameters,

596
00:34:13.990 --> 00:34:19.780
named parameters C sharp constructors,
which turned a fairly ugly

597
00:34:19.780 --> 00:34:24.100
low level C property fetching
and do clean C-sharp property.

598
00:34:24.110 --> 00:34:27.460
So that's one of the
things that we're very proud

599
00:34:27.460 --> 00:34:30.760
of. We, we turned this
a low level API into

600
00:34:30.760 --> 00:34:37.330
a clean nice seizure API
and, and you know, as

601
00:34:37.330 --> 00:34:39.640
much as I love C
sharp, you know, the extra

602
00:34:39.710 --> 00:34:44.200
guys that really are not,
they're really on a, they're

603
00:34:44.200 --> 00:34:46.990
kind of on a, on
a warpath to show that

604
00:34:47.020 --> 00:34:49.420
even if we can make
the code smaller with C

605
00:34:49.420 --> 00:34:52.270
sharp than the original objective
C, they can, they can

606
00:34:52.270 --> 00:34:55.090
kill another 50% of the,
of your app so they

607
00:34:55.090 --> 00:34:58.720
can make it 50% smaller.
So I'm really enjoying to

608
00:34:58.720 --> 00:35:02.020
see what the extra guys
are doing here would mobile

609
00:35:02.020 --> 00:35:05.710
apps. They're very motivated and,
and they're really big. And

610
00:35:05.710 --> 00:35:07.810
just showing that a fraction
of the code in F

611
00:35:07.810 --> 00:35:10.780
sharp actually looks nicer. So
we're actually working with them

612
00:35:10.780 --> 00:35:13.150
to make sure that that
F sharp makes it into

613
00:35:13.180 --> 00:35:16.000
all of these products. Very
cool. Well, I am actually

614
00:35:16.000 --> 00:35:19.360
in the process of using
the Xamarin universal installer right

615
00:35:19.360 --> 00:35:22.600
now, and it is installing
Android at this moment. So

616
00:35:22.600 --> 00:35:25.330
thanks so much for, for
chatting with me today. Well,

617
00:35:25.330 --> 00:35:27.460
thank you, Scott. The, with
a pleasure. All right. This

618
00:35:27.460 --> 00:35:29.980
has been another episode of
Hanselminutes and we'll see you

619
00:35:29.980 --> 00:35:34.840
again next week. <inaudible>.

