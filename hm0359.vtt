WEBVTT FILE

1
00:00:12.110 --> 00:00:16.610
From Hanselman it's dot com.
It's Hansel minutes, our weekly

2
00:00:16.610 --> 00:00:20.600
discussion with web developer and
technologist Scott Hanselman. This is

3
00:00:20.600 --> 00:00:27.500
Lawrence Ryan announcing show number three
59. Recorded live Thursday, January 31st, 2013.

4
00:00:27.860 --> 00:00:31.160
Support for Hanselman it's just
provided by Tellerik offering the

5
00:00:31.160 --> 00:00:40.160
best and developer tools and
support online@telerikdotcomandbyfranklins.net training developers to

6
00:00:40.160 --> 00:00:43.700
work smarter and now offering
gesture pack a powerful gesture,

7
00:00:43.700 --> 00:00:47.720
recording and recognition system for
Microsoft connect for windows developers

8
00:00:48.260 --> 00:00:54.290
details@gesturepak.com. In this episode, Scott
talks to Phillip Kelly and

9
00:00:54.290 --> 00:00:57.350
Martin Woodward developers on the
project. That's brought get support

10
00:00:57.350 --> 00:01:02.540
dividual studio. Hi, this is
Scott Hanselman. This is another

11
00:01:02.540 --> 00:01:04.490
episode of Hansel minutes, and
I'm on the phone with

12
00:01:04.520 --> 00:01:08.570
Phillip Kelly and Martin Woodward.
And you guys were involved

13
00:01:08.570 --> 00:01:12.140
in getting get into visual
studio. And I actually did

14
00:01:12.140 --> 00:01:15.620
a write up on my
blog last week. That's pretty,

15
00:01:15.680 --> 00:01:18.890
that's pretty slick. I did
not see that coming myself,

16
00:01:18.890 --> 00:01:23.120
Martin. It was just a
long time in planning. Yeah,

17
00:01:23.120 --> 00:01:25.310
it's been been going awhile.
I know we spoke a

18
00:01:25.310 --> 00:01:29.540
long time ago about version
control and at the time

19
00:01:29.540 --> 00:01:32.510
I was telling you that
I really want version control

20
00:01:32.510 --> 00:01:36.860
to be transparent. And pretty
quickly we came to the

21
00:01:36.860 --> 00:01:39.770
conclusion that the only way
you could do transparent version

22
00:01:39.770 --> 00:01:44.510
control is going to be
fewer distributed version control workflow

23
00:01:44.990 --> 00:01:48.500
because you get a repository
on your client machine. So

24
00:01:48.800 --> 00:01:51.770
you can sneakily be doing
version control behind somebody's back

25
00:01:51.770 --> 00:01:53.810
and they don't kind of
know it. And then you

26
00:01:53.810 --> 00:01:55.940
can just sort of save
them when they need you.

27
00:01:56.000 --> 00:01:59.840
You know, so, yeah, so
that was probably this time

28
00:01:59.840 --> 00:02:02.330
when we really started looking
at it hard. And that's

29
00:02:02.330 --> 00:02:04.370
why I kind of went
dark for awhile there and

30
00:02:05.030 --> 00:02:07.160
just dug into this cause
I didn't want to, they

31
00:02:07.160 --> 00:02:08.900
want to promise anything. And
so I knew we could

32
00:02:08.900 --> 00:02:10.970
deliver it and have to
go figure out, you know,

33
00:02:10.970 --> 00:02:14.180
exactly how we were going
to go build this, how,

34
00:02:14.180 --> 00:02:16.820
what we should base it
on top of. And then

35
00:02:16.820 --> 00:02:18.740
when we came to the
conclusion that that gate was

36
00:02:18.740 --> 00:02:21.140
the way we had to
go figure out, you know,

37
00:02:21.200 --> 00:02:23.210
can we, can we go
do this? Can we go

38
00:02:23.210 --> 00:02:26.990
work with the open source
community and improve the support

39
00:02:26.990 --> 00:02:29.120
on windows so that we
could, we could include this

40
00:02:29.120 --> 00:02:32.900
library that we're using and
ship it inside. Now I

41
00:02:32.900 --> 00:02:37.880
know that we supported material.
Some, some part of Microsoft

42
00:02:37.880 --> 00:02:42.710
gave the mercurial folks money
and historically mercurial has been

43
00:02:42.710 --> 00:02:45.560
a little bit friendlier to
use from the command line

44
00:02:45.560 --> 00:02:48.620
on windows, but was it
just decided at some point

45
00:02:48.620 --> 00:02:51.710
that kind of get is
winning? Just like when, just

46
00:02:51.710 --> 00:02:52.850
like, I don't know. I
don't know if you remember,

47
00:02:52.850 --> 00:02:55.940
but back in the day
when everyone was using CVS

48
00:02:56.450 --> 00:02:59.290
and then SVN kind of
came along and said, look,

49
00:02:59.410 --> 00:03:02.410
we're better. We're more Refined.
And then the CVS guys

50
00:03:02.410 --> 00:03:04.870
just eventually had to realize
that it was over is

51
00:03:04.870 --> 00:03:07.090
the same thing happening to
mercurial. Like it's always going

52
00:03:07.090 --> 00:03:09.410
to be a niche, but
it didn't win. It's that

53
00:03:09.410 --> 00:03:13.170
at a max of Yeah,
the material command line is

54
00:03:13.830 --> 00:03:17.970
certainly easier to use, you
know, well, I find it

55
00:03:18.000 --> 00:03:21.270
more easy to use it.
It's more Virgin control, you

56
00:03:21.270 --> 00:03:24.570
know, gets more kind of,
it's a workflow tool for

57
00:03:24.570 --> 00:03:27.960
handling files in a, in
a directed, a cyclic graph,

58
00:03:27.960 --> 00:03:30.750
which is how, you know,
DVCS tool store history. And

59
00:03:30.750 --> 00:03:32.880
you can do Virgin control
with it if you pick

60
00:03:32.880 --> 00:03:37.110
the right workflow. But whereas
mercurial is, you know, it

61
00:03:37.320 --> 00:03:40.830
definitely built ground up as
a version control tool, but

62
00:03:40.860 --> 00:03:43.860
when we were actually looking
at it, the material architecture,

63
00:03:44.370 --> 00:03:48.660
you know, it's also Python
based and stuff. And when

64
00:03:48.660 --> 00:03:51.960
we were looking around the
market, we were, you know,

65
00:03:51.960 --> 00:03:55.440
get, get has one in
terms of adoption is definitely,

66
00:03:55.440 --> 00:03:58.380
you know, the adoption curve
of get is et cetera,

67
00:03:58.380 --> 00:04:01.380
to not quicker than the
adoption curve of any other

68
00:04:01.950 --> 00:04:07.060
distributed source control tool. And
more interestingly, every have a

69
00:04:07.080 --> 00:04:10.800
distributive, very mutual tool that
isn't get is, you know,

70
00:04:10.800 --> 00:04:14.760
kind of building it, interoperability
into it via, you know,

71
00:04:14.760 --> 00:04:18.570
fast input, fast export type
of ways of putting the

72
00:04:18.570 --> 00:04:23.550
repository over or, or at
the network layer as well.

73
00:04:23.550 --> 00:04:28.080
They're also introducing compatibility with
get, so that was interesting

74
00:04:28.080 --> 00:04:31.590
to us. Another data point
was get is being used

75
00:04:31.590 --> 00:04:36.390
as a deployment protocol, more
and more, you know, developers,

76
00:04:36.390 --> 00:04:38.430
FTP. I think you mentioned
it in your blog post

77
00:04:38.430 --> 00:04:43.620
actually. Yeah, exactly. You know,
I, as your website, she

78
00:04:43.620 --> 00:04:46.020
can push up a, get
repo to get it to

79
00:04:46.020 --> 00:04:48.660
deploy. You know, you can
do the same with Barbara

80
00:04:48.660 --> 00:04:51.810
and Heroku and Facebook and
things like that. So that

81
00:04:51.810 --> 00:04:54.750
was fascinating. So now we're
coming to inclusion in any

82
00:04:54.750 --> 00:04:56.880
DVCS too, but we were
able to bring to the

83
00:04:56.880 --> 00:05:02.250
market not only needed get
interrupt, but it needed, I

84
00:05:02.250 --> 00:05:05.760
needed to speak, get on
the network layer. And, you

85
00:05:05.760 --> 00:05:09.260
know, Phillip can talk more
about like how get transports

86
00:05:09.420 --> 00:05:12.690
over network layer. But basically
it just sends the, get

87
00:05:12.690 --> 00:05:16.320
repository over the network. A
bunch of PAC files go

88
00:05:16.320 --> 00:05:18.360
with the network and it
is very much the raw

89
00:05:18.690 --> 00:05:21.810
get repositories that get sent
around. So now we're dealing

90
00:05:21.810 --> 00:05:25.050
with the repository and we're
dealing with, you know, get

91
00:05:25.050 --> 00:05:27.810
compatibility. We might as well
just go build, get, you

92
00:05:27.810 --> 00:05:31.140
know, and, and go integrate
getting. And the only, the

93
00:05:31.140 --> 00:05:34.080
only argument that people would
give you against doing that

94
00:05:34.080 --> 00:05:38.190
is that they say, you
know, to get support on

95
00:05:38.400 --> 00:05:42.240
hasn't traditionally had as good
support on windows. So, you

96
00:05:42.240 --> 00:05:44.700
know, we're Microsoft, we, we
can fix that. So let's

97
00:05:44.700 --> 00:05:46.650
go, let's go fix that.
And let's make it better

98
00:05:46.650 --> 00:05:49.620
for windows developers and for
visual studio developers rather than

99
00:05:49.620 --> 00:05:52.760
a problem from try and
compete. Well, surely some Viet

100
00:05:52.760 --> 00:05:55.860
vice president somewhere must have
said, that's not going to

101
00:05:55.860 --> 00:05:58.670
happen. Like that's a bad,
like they might just be

102
00:05:58.700 --> 00:06:02.570
just because right. They would
just say, well, we don't

103
00:06:02.570 --> 00:06:04.550
want to support, like, you
know what I mean? Like

104
00:06:04.550 --> 00:06:07.040
there's always this Microsoft, we'll
just do it ourselves kind

105
00:06:07.040 --> 00:06:08.870
of thing. Or at least
in the last, you know,

106
00:06:08.870 --> 00:06:11.300
20 years ago there was
is, is that, is that

107
00:06:11.300 --> 00:06:13.550
over? Are you guys really,
I mean, do you feel

108
00:06:13.550 --> 00:06:15.200
like, I guess you have
a boss, your bosses, Brian,

109
00:06:15.200 --> 00:06:17.450
Harry, right? He's the guy
in charge of version control.

110
00:06:17.900 --> 00:06:20.530
Yeah. I think if it
hadn't been Brian, Harry is

111
00:06:20.530 --> 00:06:23.380
the guy in charge of
version control for Microsoft and

112
00:06:23.380 --> 00:06:26.110
his group kind of owns
all the IP around version

113
00:06:26.110 --> 00:06:29.500
control. If this idea had
come out of a different

114
00:06:29.500 --> 00:06:33.040
group, then maybe there could
have been politics at play.

115
00:06:33.400 --> 00:06:35.620
But I think because it
was, cause it was, you

116
00:06:35.620 --> 00:06:38.950
know, the people were all
source control nerds over at

117
00:06:38.950 --> 00:06:42.400
the TFS team. So because
it was the source control

118
00:06:42.400 --> 00:06:44.950
nerds coming up with the
idea, I think the kind

119
00:06:44.950 --> 00:06:48.910
of, you know, trusted us
and it's been one of

120
00:06:48.910 --> 00:06:52.000
those strange ones where we
kept expecting pushback. And then

121
00:06:52.210 --> 00:06:54.940
every time we would go
to some meeting and show

122
00:06:54.940 --> 00:06:56.950
some people what we were
thinking of doing, thinking they

123
00:06:56.960 --> 00:06:59.170
would tell us that we're
crazy. They would just go,

124
00:06:59.200 --> 00:07:05.800
wow, that's awesome. That's cool.
Go, go for it. Oh,

125
00:07:05.960 --> 00:07:10.900
okay. Interesting. When I, when
I first heard about this,

126
00:07:11.980 --> 00:07:15.250
I thought, okay, I guess
TFS goes away now. And

127
00:07:15.250 --> 00:07:18.850
we just thought of, except
that that get is quote

128
00:07:18.850 --> 00:07:21.850
unquote one, but then I
started thinking about it and

129
00:07:21.850 --> 00:07:25.120
realized, and actually it was,
I think it was Brian Keller

130
00:07:25.570 --> 00:07:28.120
that explained this to me,
that T TFS is not

131
00:07:28.120 --> 00:07:31.630
just version control. It's actually
a whole pile of, you

132
00:07:31.630 --> 00:07:36.990
know, ALM application, lifestyle management
stuff, and bug fixes and

133
00:07:36.990 --> 00:07:39.800
a workflow and agile tools
and all this things and,

134
00:07:39.800 --> 00:07:42.400
and source control is one
aspect of it. And your

135
00:07:42.400 --> 00:07:44.860
guys' his goal was to
take the good stuff about

136
00:07:44.860 --> 00:07:49.720
TFS and then make version
control more pluggable and get

137
00:07:49.720 --> 00:07:52.930
was the one that you,
you know, the alternative. So

138
00:07:53.920 --> 00:07:56.860
yeah. Is that right? It
was more so I think

139
00:07:56.860 --> 00:08:01.240
one of the problems we've
got is people associate associate

140
00:08:01.240 --> 00:08:05.230
TFS, the word TFS with
CF VC. We, you know,

141
00:08:05.230 --> 00:08:07.900
we think of it as
the version control component inside

142
00:08:07.900 --> 00:08:11.740
of TFS. So what people
think of TFS is just

143
00:08:11.740 --> 00:08:14.770
the version control component, because
as a developer, that's the

144
00:08:14.770 --> 00:08:17.200
thing that's most visible to
you, especially if you're, you

145
00:08:17.200 --> 00:08:18.790
know, if, if there's a
bit of friction there in

146
00:08:18.790 --> 00:08:21.370
terms of doing version control,
That's what I mean. If

147
00:08:21.370 --> 00:08:24.190
I hear TFS, I hear
a centralized big, slow version

148
00:08:24.190 --> 00:08:28.540
control. Exactly. Yeah. Well, I'll
go for centralized Virgin, which

149
00:08:28.540 --> 00:08:32.200
I'll how about that? So,
yeah, and there's always going

150
00:08:32.200 --> 00:08:34.390
to be the need for
centralized version TRO in the

151
00:08:34.390 --> 00:08:38.020
next decade, centralized version control
isn't going away. You know,

152
00:08:38.020 --> 00:08:40.930
there were repository types where
it's well suited for. There

153
00:08:40.930 --> 00:08:43.570
are customer workflows that it's
well suited for. So, you

154
00:08:43.570 --> 00:08:49.750
know, that's, that's there. And
we introduced in 2012 local

155
00:08:49.750 --> 00:08:52.990
workspaces, which is, you know,
we've always had the traditional

156
00:08:53.020 --> 00:08:57.240
checkin checkout kind of workflows
that works for some people

157
00:08:57.240 --> 00:09:01.680
and keeps friction for others.
So we introduced local workspaces

158
00:09:01.680 --> 00:09:05.100
in 2012, which is, you
know, allows you to, you

159
00:09:05.100 --> 00:09:06.900
don't have to check the
files out first. It's an

160
00:09:06.900 --> 00:09:09.090
added commit model. So you
don't have to check the

161
00:09:09.090 --> 00:09:11.130
files, you 13, just add
them and see if you're

162
00:09:11.130 --> 00:09:13.830
editing files outside of visual
studio. If he edits same

163
00:09:13.840 --> 00:09:16.980
in notepad or whatever, or,
you know, sublime tax, it

164
00:09:16.980 --> 00:09:19.170
just works. And then you
just commit them in. And

165
00:09:19.200 --> 00:09:21.720
that's good. So that's great.
So now that's kind of

166
00:09:21.720 --> 00:09:24.330
like, you know, COVID right.
The source safe model and

167
00:09:24.330 --> 00:09:26.790
the SVN model, you've now
gone, you know, workflows you've

168
00:09:26.790 --> 00:09:29.850
got available to you with
TFS. So then we had

169
00:09:29.850 --> 00:09:31.680
a thing and it said,
well, what's the, what's the

170
00:09:31.680 --> 00:09:35.100
next, you know, what's next?
And obviously distributed version control

171
00:09:35.100 --> 00:09:39.890
workflows over the next exciting
thing. But the, the, the

172
00:09:40.040 --> 00:09:43.800
thing about DVCS is it's
a completely different way of

173
00:09:43.800 --> 00:09:47.370
thinking about version control, decentralized
version control is, you know,

174
00:09:48.200 --> 00:09:50.750
it's almost like the switch
from, you know, for a

175
00:09:50.760 --> 00:09:54.810
version control nerdy. It's almost
like the switch from object

176
00:09:54.810 --> 00:09:58.140
orientated programming, you know, back
from functional programming, you have

177
00:09:58.140 --> 00:10:00.360
to think about it very,
very differently in your brain.

178
00:10:01.950 --> 00:10:05.610
And we did some experimentation
where we tried to, you

179
00:10:05.610 --> 00:10:09.270
know, rather than have a
separate repository type gait repository

180
00:10:09.270 --> 00:10:11.850
type, we tried some experiments
where we, where we kind

181
00:10:11.850 --> 00:10:14.670
of bridged it, you know,
and kind of made, kinda

182
00:10:14.670 --> 00:10:17.550
made TFS look like a
DVCS or trying to make

183
00:10:17.550 --> 00:10:21.960
a DVCS looked like CFS
at the network layer. Well,

184
00:10:21.970 --> 00:10:24.550
the problem with that is
it, it just becomes a

185
00:10:24.600 --> 00:10:29.880
leaky abstraction. There are concepts
which are completely different in

186
00:10:29.880 --> 00:10:32.520
distributed version control. You know,
the way you do branching,

187
00:10:32.910 --> 00:10:35.730
the way you store history
is not linear in the

188
00:10:35.730 --> 00:10:39.870
DVCS. So that's completely different
to, to centralized version 12.

189
00:10:40.170 --> 00:10:42.600
And then in centralized version
control, you have always control

190
00:10:42.600 --> 00:10:47.640
around past space security and
blah, blah, blah. And that

191
00:10:47.640 --> 00:10:51.630
doesn't map well into DVCS
tools either. So yeah, rather

192
00:10:51.630 --> 00:10:55.560
than force people to have
to force people down one

193
00:10:55.590 --> 00:10:58.590
workflow, which we believe to
be the blessed workflow, we

194
00:10:58.590 --> 00:11:00.930
wanted to give people the
choices of workflow, and more

195
00:11:00.930 --> 00:11:05.340
importantly, allow people to use
different workflows, but use the

196
00:11:05.340 --> 00:11:08.040
same set of work items
and the same set of

197
00:11:08.490 --> 00:11:13.140
tasks and defects and test
cases and build automation and

198
00:11:13.140 --> 00:11:17.310
agile planning use those same
tools, the same data, but

199
00:11:17.310 --> 00:11:20.220
be able to link them
to both TFS check-ins and

200
00:11:20.400 --> 00:11:23.210
get commands. The point that
you made at the beginning

201
00:11:23.210 --> 00:11:28.850
where mercurial and other DVCS
is, are unapologetically source control

202
00:11:28.850 --> 00:11:34.160
systems. Well get, is this,
like I said, directly, basic

203
00:11:34.160 --> 00:11:36.560
darker, basic the graph or
this kind of like this,

204
00:11:36.560 --> 00:11:39.920
this file system on top
of a file system that

205
00:11:39.920 --> 00:11:43.070
you can use as source
control, if you want to,

206
00:11:44.870 --> 00:11:47.510
it could cause some people
to say, Oh, well this,

207
00:11:49.010 --> 00:11:51.980
this isn't, this is so
complex get is so complicated

208
00:11:51.980 --> 00:11:55.720
that I couldn't go Make
a gooey on top of

209
00:11:55.720 --> 00:11:58.630
it. You know what I
mean? So you could make

210
00:11:58.640 --> 00:12:02.740
a gooey or UI on
top of a version control

211
00:12:02.740 --> 00:12:06.160
system and that's been done
for years, but some people

212
00:12:06.160 --> 00:12:08.410
could argue that to really
have the full power of

213
00:12:08.410 --> 00:12:12.370
get, you need the command
line. Do you understand what

214
00:12:12.370 --> 00:12:16.890
I'm saying? Yeah. And so
you really need the command

215
00:12:16.890 --> 00:12:19.200
line if you really want
to do, you know, do

216
00:12:19.200 --> 00:12:22.170
the craziness that you can
do and do whatever you

217
00:12:22.200 --> 00:12:24.420
do have the ultimate power,
but that's always been the

218
00:12:24.420 --> 00:12:27.390
case with version control. The
command line to version 12

219
00:12:27.390 --> 00:12:30.060
has always been more powerful
than the giveaways they give

220
00:12:30.060 --> 00:12:33.060
is just give you a
nice user friendly way of

221
00:12:33.060 --> 00:12:37.470
doing the, you know, 90%
operations, you know, commit, commit,

222
00:12:37.560 --> 00:12:41.220
push in a rebase, whatever.
But when you actually come

223
00:12:41.220 --> 00:12:45.090
to do something, well, we
haven't got UI for this

224
00:12:45.090 --> 00:12:48.270
yet, but I quite like
to, I quite like to

225
00:12:48.270 --> 00:12:50.760
do some rebasing or do
some squashing of my local

226
00:12:50.760 --> 00:12:53.940
commits before I push them
up to the repository. Cause

227
00:12:53.940 --> 00:12:57.840
I like my, well again,
sorry, I'm going to be

228
00:12:57.840 --> 00:13:00.330
pulling this more when we,
especially when we commit to

229
00:13:00.630 --> 00:13:03.630
say an open source project,
like lip kit, too, we

230
00:13:03.630 --> 00:13:06.240
really craft our commits and
really take a lot of

231
00:13:06.240 --> 00:13:10.470
time over the craftsmanship of
archivists, almost like a mathematical

232
00:13:10.470 --> 00:13:13.050
proof of the problem. We
want to push them up

233
00:13:13.050 --> 00:13:15.690
in a logical way so
that when somebody reads the

234
00:13:15.690 --> 00:13:19.320
commitments in order, they can
see the conclusion we came

235
00:13:19.320 --> 00:13:21.240
to and why the code
is structured in the way

236
00:13:21.240 --> 00:13:23.610
it is rather than just
giving them the snapshot, which

237
00:13:23.610 --> 00:13:26.580
is the answer. And if
you want to have that

238
00:13:26.610 --> 00:13:29.070
very, very fine level of
control, then yeah, you can

239
00:13:29.070 --> 00:13:31.650
drop to the command line,
which is why we had

240
00:13:31.650 --> 00:13:35.550
to make it essential that,
that, you know, the get

241
00:13:35.550 --> 00:13:39.030
implementation inside visual studio, it
wasn't like a prior to

242
00:13:39.030 --> 00:13:43.890
get wasn't anything particularly amazing,
you know, it's just get,

243
00:13:44.460 --> 00:13:47.490
and we just provide a
nice, friendly, useful way of

244
00:13:47.490 --> 00:13:50.850
using it inside visual studio
or nice friendly merge tools,

245
00:13:50.850 --> 00:13:55.200
nice, easy ways of branching
and switching branches. And if

246
00:13:55.200 --> 00:13:57.120
you make changes on the
command line, it just magically

247
00:13:57.150 --> 00:13:59.910
XL inside BS instantly. Well,
and that gives me a

248
00:13:59.910 --> 00:14:03.210
great segue over to Phillip
and his work, because you

249
00:14:03.210 --> 00:14:06.780
said it's not proprietary. Get,
it's not like Microsoft get,

250
00:14:07.590 --> 00:14:10.950
which would be evil. It's
a, it's built on top

251
00:14:10.950 --> 00:14:14.160
of something called lib get
to, which is a, an

252
00:14:14.160 --> 00:14:17.010
open source library. It's actually
a GPL library with a

253
00:14:17.040 --> 00:14:21.900
linking exception that is written
in C it's written in

254
00:14:21.900 --> 00:14:27.330
C it's completely portable. So
using the same library on

255
00:14:27.330 --> 00:14:31.800
Linux, on windows. And in
fact, this is the library

256
00:14:31.800 --> 00:14:35.040
that GitHub is using in
their clients for windows and

257
00:14:35.040 --> 00:14:39.210
for Mac as well. So
where we're sharing code and

258
00:14:39.210 --> 00:14:44.130
we're progressing together on adding
features and completeness into the

259
00:14:44.640 --> 00:14:49.050
library, okay, so this is
portable C works anywhere. And

260
00:14:49.080 --> 00:14:51.770
this is the thing that
most, most right now are

261
00:14:51.770 --> 00:14:53.750
using To talk to get
me. You don't edit the

262
00:14:53.750 --> 00:14:55.910
files yourself. You talk to
that API and then it

263
00:14:55.910 --> 00:14:58.120
handles things, You know, I
would say it's up and

264
00:14:58.120 --> 00:15:01.450
coming actually, you know, get
dot ECC or, or get

265
00:15:01.450 --> 00:15:04.150
on on Lennox is a,
is a separate code base.

266
00:15:04.420 --> 00:15:07.300
And many of the contributors
though to that get project

267
00:15:07.300 --> 00:15:10.420
have agreed to relicense their
work into the lib, get

268
00:15:10.420 --> 00:15:13.690
to process a project, including
Lena store volts. You know,

269
00:15:13.690 --> 00:15:17.290
his work there is, is
free for us to use

270
00:15:17.290 --> 00:15:20.530
an Olympia to project Libya
to is, is adding. What

271
00:15:20.670 --> 00:15:23.950
it adds to get is
the ability to host it

272
00:15:23.950 --> 00:15:27.220
as a library inside of
a, a larger program like

273
00:15:27.250 --> 00:15:30.910
visual studio, get the actual
command line just comes up

274
00:15:30.910 --> 00:15:33.550
and does its work. And
then, and then it goes

275
00:15:33.550 --> 00:15:37.510
away the process terminates. So
that's what some of the

276
00:15:37.510 --> 00:15:39.670
advantages of live get to
that we get. And so

277
00:15:39.670 --> 00:15:42.490
live get to it's a,
it's a native good implementation.

278
00:15:42.490 --> 00:15:45.040
It's not a Microsoft thing.
And then there's a thing

279
00:15:45.040 --> 00:15:48.820
called lib, get to sharp
who's is that who owns

280
00:15:48.820 --> 00:15:51.400
it? That's a set of
bindings. That's a set of

281
00:15:51.400 --> 00:15:54.190
bindings. I guess it's a,
it's also something that we

282
00:15:54.190 --> 00:15:58.270
contribute to that that GitHub
contributes to. And it's something

283
00:15:58.270 --> 00:16:01.210
that I guess just also
some independent developers from around

284
00:16:01.210 --> 00:16:04.300
the world contribute to, and
it's it's bindings for live

285
00:16:04.300 --> 00:16:06.370
good too. That allow you
to use the power of

286
00:16:06.370 --> 00:16:10.030
LiveChat two from C-sharp, which
is, you know, the language

287
00:16:10.030 --> 00:16:13.300
that we know and love
to work in at Microsoft,

288
00:16:14.230 --> 00:16:16.330
the simple, you know, manage
language, right? So we don't

289
00:16:16.330 --> 00:16:19.720
have to take care of
all the problems of freeing

290
00:16:19.720 --> 00:16:21.970
memory and everything. We get
garbage collection and it's, it's

291
00:16:21.970 --> 00:16:24.790
fast developing. So it's great
that we have live, get

292
00:16:24.790 --> 00:16:28.510
to sharp bindings for Lipka
to, to use You're writing

293
00:16:28.510 --> 00:16:32.290
code, Phillip yourself in both
CNC sharp, cause you're, you're

294
00:16:32.290 --> 00:16:34.870
writing code in visual studio
two to make the UI

295
00:16:34.870 --> 00:16:37.030
and make things work. But
then you're also contributing and

296
00:16:37.030 --> 00:16:40.120
see and lip get to
Right. We've got three layers

297
00:16:40.120 --> 00:16:43.420
to it, right? You have
our, our proprietary get provider

298
00:16:43.420 --> 00:16:46.210
and V6 tools that we
just released. And then they

299
00:16:46.510 --> 00:16:49.180
include live good to sharp,
which is really just a

300
00:16:49.180 --> 00:16:51.610
wrapper around lip. Good too.
There's not a whole lot

301
00:16:51.610 --> 00:16:55.330
of logic and business logic
unlimited to sharp little get

302
00:16:55.330 --> 00:16:57.520
to is the, is the
meat of the problem. It's,

303
00:16:57.520 --> 00:16:59.800
you know, it's, it's the
C library that does all

304
00:16:59.800 --> 00:17:04.390
the work. Okay. The, and
the visits, the visits, VSI

305
00:17:04.390 --> 00:17:06.760
X, this is a visual
studio extension. This is the

306
00:17:06.760 --> 00:17:09.610
thing that people will install
and it will keep itself

307
00:17:09.640 --> 00:17:11.680
updated. It use, it comes
out of the visual studio

308
00:17:11.680 --> 00:17:15.220
gallery. And this is what
gives you a in solution

309
00:17:15.220 --> 00:17:18.550
Explorer, all of the, kind
of the context and the,

310
00:17:18.550 --> 00:17:20.290
this is a new item
and this is a dirty

311
00:17:20.290 --> 00:17:22.030
item and this item needs
to be committed and all

312
00:17:22.030 --> 00:17:24.910
that kind of stuff. And
then puts get inside of,

313
00:17:25.300 --> 00:17:28.000
of team Explorer, which is
where I'm used to seeing

314
00:17:28.060 --> 00:17:33.250
TFS. Is that right? That's
right. Team Explorer is your

315
00:17:33.250 --> 00:17:37.060
hub for using a team
foundation server it's, it's got,

316
00:17:37.340 --> 00:17:40.150
you know, your work items,
page, your pending changes, page,

317
00:17:40.150 --> 00:17:44.710
your builds page settings. And,
and so once you've installed

318
00:17:44.710 --> 00:17:48.580
the, the get tools V6
on top of visual studio

319
00:17:48.580 --> 00:17:54.090
with update installed, Depending changes
page replaced by the get

320
00:17:54.240 --> 00:17:57.240
changes page, when you're using
a solution, that's part of

321
00:17:57.240 --> 00:18:01.890
a good repository. If you're
using a solution as part

322
00:18:01.890 --> 00:18:05.520
of a TFS version control
workspace, then you'll, you'll have

323
00:18:05.520 --> 00:18:08.760
the same experience that you
have with visual studio without

324
00:18:08.760 --> 00:18:11.340
the good tools, you'll have
the regular TFS pending changes

325
00:18:11.340 --> 00:18:14.100
page there. And I don't
know if this is probably

326
00:18:14.100 --> 00:18:15.780
not your space, but just
out of curiosity, if I

327
00:18:15.780 --> 00:18:19.440
install this update to the
visual studio, 2012 dot two,

328
00:18:19.980 --> 00:18:22.410
right now it's a preview,
will it, will it tell

329
00:18:22.410 --> 00:18:25.190
me later to update to
the final version? Yeah. So

330
00:18:25.190 --> 00:18:29.480
this is Martin update to
CTP. Those just update itself.

331
00:18:29.730 --> 00:18:32.840
It, it just works. It
is a CTP though. So,

332
00:18:32.900 --> 00:18:35.960
you know, while it will
update and you can update

333
00:18:35.960 --> 00:18:39.470
to the RTM version, it
is a CTP. So it'll

334
00:18:39.470 --> 00:18:41.570
be where you are using
the latest and greatest bleeding

335
00:18:41.570 --> 00:18:43.730
edge bits. Okay, Cool. Cause
I know that we're in

336
00:18:43.730 --> 00:18:45.680
sewing, pre-release stuff here and
I don't want to take

337
00:18:45.680 --> 00:18:47.420
the chance that I'm going
to mess up my machine.

338
00:18:48.020 --> 00:18:49.970
No, you shouldn't have to
repave your machine or anything,

339
00:18:50.120 --> 00:18:52.130
but there might be bugs
in there that we didn't

340
00:18:52.130 --> 00:18:55.910
know about. Okay. And then
when I install the, the

341
00:18:55.910 --> 00:18:59.060
good stuff, it's not going
to go and install a

342
00:18:59.060 --> 00:19:00.530
bunch of stuff in the
GAC and mess up my

343
00:19:00.530 --> 00:19:03.470
machine. It's just a physics
that I can uninstalled just

344
00:19:03.470 --> 00:19:06.680
by going into tools and
extensions and just right. Clicking

345
00:19:06.680 --> 00:19:08.750
and saying on install, it's
not going to, it's not

346
00:19:08.750 --> 00:19:13.760
scary or dangerous. It's just
basically a zip archive. And

347
00:19:13.760 --> 00:19:16.190
it contains the right code.
It gets put in the

348
00:19:16.190 --> 00:19:18.890
right place and it contains
it also contains live, get

349
00:19:18.890 --> 00:19:21.170
to lip, get to sharp.
And it also contains the

350
00:19:21.170 --> 00:19:22.940
source code for lip kits.
So if you wanted to

351
00:19:23.180 --> 00:19:25.100
go look at the source
code about looking at straight

352
00:19:25.100 --> 00:19:28.250
on, get help, it's got
everything in there. Okay, cool.

353
00:19:28.820 --> 00:19:31.220
Now, one of the things
that I have noticed myself,

354
00:19:32.090 --> 00:19:34.500
and this is to Philip,
when I'm doing work in,

355
00:19:34.500 --> 00:19:36.980
in get and visual studio,
I usually go out to

356
00:19:36.980 --> 00:19:40.250
the PowerShell and I use
a tool called posh, get

357
00:19:40.790 --> 00:19:45.740
a PowerShell, get extensions by
Keith Dalby and friends. And

358
00:19:46.100 --> 00:19:48.170
I will go and I'll
do updates and I'll switch

359
00:19:48.170 --> 00:19:53.450
branches over in my, in
my command line. And then

360
00:19:53.450 --> 00:19:57.080
I'll find that visual studio
will freak out and get

361
00:19:57.080 --> 00:19:59.870
confused. And I have to
go and reload my project

362
00:19:59.870 --> 00:20:03.320
and sometimes windows that are
open, get confused. So kind

363
00:20:03.320 --> 00:20:07.310
of switching things out from
underneath visual studio tends to

364
00:20:07.310 --> 00:20:10.070
confuse stuff. And I'm curious
now that you're going to

365
00:20:10.070 --> 00:20:13.940
be switching branches in multiple
places, either from within VMs

366
00:20:13.960 --> 00:20:16.430
or at the command line,
do we do anything to

367
00:20:16.430 --> 00:20:19.580
make that suck less? We
do have some, some magic

368
00:20:19.580 --> 00:20:22.670
that we apply when you
change branches from inside visual

369
00:20:22.670 --> 00:20:25.190
studio, we're not going to
be able to apply it

370
00:20:25.190 --> 00:20:27.290
when you're changing it from
outside of visual studio. But

371
00:20:27.290 --> 00:20:29.990
when you're changing it within
visual studio using our branch

372
00:20:29.990 --> 00:20:34.700
picker to change branches, save
all your window positions. And

373
00:20:34.700 --> 00:20:41.120
we automatically reload the, if
the solution changed the whole

374
00:20:41.120 --> 00:20:44.600
solution, all the items which
got changed, which were different

375
00:20:44.600 --> 00:20:46.850
between the branch that you
were on and the branch

376
00:20:46.850 --> 00:20:50.020
that then switched to. So
you shouldn't notice anything and

377
00:20:50.860 --> 00:20:53.380
it should appear as if
nothing really happened. Your files,

378
00:20:53.380 --> 00:20:57.910
you know, reloaded automatically. If
you had some dirty boppers

379
00:20:57.910 --> 00:20:59.590
in the editor, then I
think we probably asked you

380
00:20:59.590 --> 00:21:02.920
to save those before we
changed the branch. And of

381
00:21:02.920 --> 00:21:05.110
course, if you know, if
there's a conflict, you know,

382
00:21:05.110 --> 00:21:07.450
if the file that you
have an edit on is

383
00:21:07.450 --> 00:21:10.450
different in the branch, do
you want to change to,

384
00:21:10.450 --> 00:21:12.400
you'll get a message saying,
Hey, you can't change the

385
00:21:12.400 --> 00:21:14.950
branches because this file is
different over there. You would

386
00:21:14.950 --> 00:21:17.590
lose changes by doing so.
You need to make a

387
00:21:17.590 --> 00:21:20.230
stash if you want to,
if you want to save

388
00:21:20.230 --> 00:21:27.370
them. And so, you know,
when the historically Microsoft kind

389
00:21:27.370 --> 00:21:29.770
of tends to move a
little slowly, but I understand

390
00:21:29.770 --> 00:21:33.160
that you guys are doing
things a little differently now,

391
00:21:33.970 --> 00:21:36.220
are you going to be
releasing stuff more often? I

392
00:21:36.220 --> 00:21:39.040
mean, if there's bugs or
weird things, I know there's

393
00:21:39.040 --> 00:21:44.710
some commented on Twitter that
return line feed handling confusing.

394
00:21:45.160 --> 00:21:47.050
Are we going to wait
nine months for a fix

395
00:21:47.050 --> 00:21:48.790
on that, stuff like that?
Or is this going to

396
00:21:48.790 --> 00:21:51.910
update itself often? It'll be
far less than nine months.

397
00:21:51.940 --> 00:21:53.920
Scott. It's going to be
a, I think we're trying

398
00:21:53.920 --> 00:21:56.620
to release just every few
weeks. So I can't, I'm

399
00:21:56.620 --> 00:21:58.570
not sure exactly when our
second release is going to

400
00:21:58.570 --> 00:22:02.050
be. Our first one obviously
was yesterday. And, but I

401
00:22:02.050 --> 00:22:03.880
know it's going to be
within the next couple of

402
00:22:03.880 --> 00:22:07.630
months. And probably sooner than
that, I'm hoping that we

403
00:22:07.630 --> 00:22:09.430
can get updated bits out
there. Cause I know we

404
00:22:09.430 --> 00:22:13.150
have bugs. We've, we've found
it fixed three or four

405
00:22:13.150 --> 00:22:15.970
already. And the reports are
coming, coming in of, of

406
00:22:15.970 --> 00:22:19.180
things that just aren't quite
right or people are asking

407
00:22:19.180 --> 00:22:21.670
for new features and stuff
like that. And we're really

408
00:22:21.670 --> 00:22:24.550
excited to get back to
work of, you know, getting

409
00:22:24.550 --> 00:22:26.350
these things fixed for people.
And we want to get

410
00:22:26.350 --> 00:22:28.030
those fixes out to people
as soon as we can.

411
00:22:28.930 --> 00:22:33.220
I think I had heard
that you guys are doing

412
00:22:33.220 --> 00:22:37.420
sprints. You're doing scrum internally.
We do. Yeah. We work

413
00:22:37.420 --> 00:22:41.470
in three week sprints. And
so we update our cloud

414
00:22:41.470 --> 00:22:45.700
service every three weeks. We,
I guess don't really have

415
00:22:45.700 --> 00:22:48.550
to. That's how it locked
cadence. The cloud service gets

416
00:22:48.550 --> 00:22:52.870
updated on TFS that visual
studio.com. We're not really locked

417
00:22:52.870 --> 00:22:55.150
to that for the, for
the provider. We could, you

418
00:22:55.150 --> 00:22:57.340
know, we could release it
whenever we want to. So

419
00:22:57.610 --> 00:23:00.070
it'll just show up on
the V6 extension gallery. So

420
00:23:00.340 --> 00:23:02.800
we're working out internally what
that schedule is going to

421
00:23:02.800 --> 00:23:05.080
be, how frequently we're going
to do it, but it's

422
00:23:05.080 --> 00:23:08.890
going to be much, much
more frequent than, than updates

423
00:23:08.890 --> 00:23:12.690
have gone out for before.
Yeah. The plan is roughly

424
00:23:12.690 --> 00:23:16.290
every sprint boundary will push
a new version, but occasionally

425
00:23:16.290 --> 00:23:18.480
we, you know, if we
spot a really nasty book

426
00:23:18.510 --> 00:23:19.770
or a book that a
lot of people don't even

427
00:23:19.780 --> 00:23:22.110
see, then we might want
to push one out sooner.

428
00:23:22.140 --> 00:23:25.560
Or if we want to
take a, you know, if

429
00:23:25.560 --> 00:23:28.350
it's been a big change
to the upstream library that

430
00:23:28.350 --> 00:23:32.190
we want to, we want
to sync up with, I

431
00:23:32.190 --> 00:23:35.610
know one of the guys
and he's currently working on

432
00:23:35.610 --> 00:23:38.070
SSA support, for example, I've
been looking at too. I

433
00:23:38.070 --> 00:23:40.320
mean, and that's pretty cool.
So that'd be a great

434
00:23:40.320 --> 00:23:41.640
thing that we want to
pull in with that. So

435
00:23:41.670 --> 00:23:45.470
a large piece of, of
intellectual property, the lawyers, it

436
00:23:45.470 --> 00:23:47.780
that we want to pull
in. So when we take

437
00:23:48.230 --> 00:23:51.830
a big contributions, you know,
but we new contributions into

438
00:23:51.830 --> 00:23:54.860
the upstream library. We need
to go, you know, go

439
00:23:54.860 --> 00:23:57.650
do some lawyery stuff and
just double check all the

440
00:23:57.650 --> 00:23:59.540
IP stuff there before we
can ship it. So that

441
00:23:59.540 --> 00:24:02.570
might sometimes delay, you know,
a release just to make

442
00:24:02.570 --> 00:24:05.920
sure we got over all
the paperwork done. Actually speaking

443
00:24:05.920 --> 00:24:11.830
of lawyery stuff, Philip is
working on live, get to,

444
00:24:11.830 --> 00:24:15.340
which is committing open source
source code and doing poll

445
00:24:15.340 --> 00:24:22.240
requests to a, an external,
not Microsoft managed GPL, licensed

446
00:24:22.240 --> 00:24:27.070
product. And then also committing
code to a Microsoft product

447
00:24:27.070 --> 00:24:30.580
inside the company. Is that
becoming more common or is

448
00:24:30.580 --> 00:24:32.770
that, is that weird? Does
that put Phillip in some

449
00:24:32.770 --> 00:24:35.530
kind of weird legal world
where he does or doesn't

450
00:24:35.530 --> 00:24:40.630
work for Microsoft? Nope. Phillips
a full time engineer working

451
00:24:40.630 --> 00:24:45.280
for Microsoft corporation. We to
do that, we had to

452
00:24:45.280 --> 00:24:50.080
do a bunch of work
in terms of making sure,

453
00:24:50.680 --> 00:24:52.940
you know, from an IP
point of view that the,

454
00:24:52.960 --> 00:24:56.440
everybody was happy with that.
And so yeah, we did,

455
00:24:56.800 --> 00:24:57.890
we've done a bunch of
where they were doing a

456
00:24:57.890 --> 00:25:01.180
bunch of words and also
make sure that the, the

457
00:25:01.180 --> 00:25:06.370
source code for they'd get
to stays in live, get

458
00:25:06.370 --> 00:25:09.820
to, and that people don't,
you know, source Kodak and

459
00:25:09.820 --> 00:25:12.100
accidentally think, Oh yeah, cool.
This is, this is a

460
00:25:12.100 --> 00:25:14.500
bit random Microsoft COVID I
can just copy paste it

461
00:25:14.500 --> 00:25:17.140
into, you know, the windows
code base or something like

462
00:25:17.140 --> 00:25:20.410
that way. We, we, we
keep, we deliberately keep the

463
00:25:20.410 --> 00:25:23.470
limit to code in the
Libya to project upon GitHub.

464
00:25:23.650 --> 00:25:26.650
And when we, we check
in bind, rebuild of loop,

465
00:25:26.650 --> 00:25:30.250
get to into the main
visual studio code base so

466
00:25:30.250 --> 00:25:32.320
that, so that people don't
get confused. Hmm. So it's

467
00:25:32.320 --> 00:25:35.620
just, it's not like revolutionary
anymore. You know what I

468
00:25:35.620 --> 00:25:38.470
mean? I guess like maybe,
maybe I'll just when people

469
00:25:38.470 --> 00:25:41.650
come on the show and
start talking about working on

470
00:25:41.650 --> 00:25:45.160
open source code at Microsoft,
I'll just stop, stop making

471
00:25:45.160 --> 00:25:47.680
a big deal out of
it. Because I don't know.

472
00:25:47.680 --> 00:25:49.270
I mean, we do it
a lot in the Azure

473
00:25:49.300 --> 00:25:51.490
and web team, but when
I hear about other teams

474
00:25:51.490 --> 00:25:53.230
doing it and like, gosh,
you know, how do you,

475
00:25:53.500 --> 00:25:54.880
how are you pulling this
off? Cause I know that

476
00:25:54.880 --> 00:25:57.580
there's, I have literally had
conversations with groups of people

477
00:25:57.580 --> 00:26:00.160
at Microsoft where they'll call
me and they'll say, my

478
00:26:00.160 --> 00:26:03.280
boss doesn't want us to
use jQuery. And I'm like,

479
00:26:03.310 --> 00:26:06.520
we ship it like it's
supported and relaxed. Like, no,

480
00:26:06.520 --> 00:26:08.380
no it's open source. I'm
like, ah, you're missing the

481
00:26:08.380 --> 00:26:14.260
point. I mean, obviously different
groups have different different exposures

482
00:26:14.260 --> 00:26:17.890
to this develop a division.
You know, our customers are

483
00:26:17.890 --> 00:26:21.460
developers. So we're generally a
bit more cool with this

484
00:26:21.460 --> 00:26:22.840
kind of thing. You know,
a lot of the work

485
00:26:22.870 --> 00:26:24.610
you guys have done as
has paved the way for

486
00:26:24.610 --> 00:26:27.010
some of the things we
did, we did push boundaries

487
00:26:27.010 --> 00:26:30.340
here. You know, this was,
there's a mixture of licenses

488
00:26:30.340 --> 00:26:32.740
in the, in the code
base is GPL V2 code

489
00:26:32.740 --> 00:26:37.090
or this linking exception is,
you know, a LGPL code.

490
00:26:37.120 --> 00:26:41.920
There's a BSD code, MIT
code. There's all sorts of

491
00:26:41.920 --> 00:26:46.230
stuff in there code that
people fought. Was it licensed

492
00:26:47.630 --> 00:26:49.500
correctly and sent over. And
then when we did some

493
00:26:49.500 --> 00:26:51.630
digging, turned out, we've got
to go ask the guy.

494
00:26:51.630 --> 00:26:53.850
So we had to go
chase down the guys and

495
00:26:53.850 --> 00:26:55.710
make sure that they were,
they were cool with it

496
00:26:55.710 --> 00:26:58.380
being in lib get to,
and it's been, you know,

497
00:26:58.440 --> 00:27:01.260
it's been a nontrivial piece
of work, but it's, it's

498
00:27:01.260 --> 00:27:05.610
been worked, but everybody's been
incredibly supportive of and have

499
00:27:05.610 --> 00:27:09.030
realized the importance of not
just to Microsoft, but also

500
00:27:09.030 --> 00:27:12.660
to the wider development community.
And so everyone has been

501
00:27:12.690 --> 00:27:14.820
amazingly supportive of it. It's
been, it's been a pleasure

502
00:27:14.820 --> 00:27:19.230
to work on. Have you
had any negativity? Has anyone

503
00:27:19.260 --> 00:27:22.430
said anything negative about this
other than it's about time?

504
00:27:25.280 --> 00:27:29.120
You know, people have said
things. Yeah. There's like, it's

505
00:27:29.120 --> 00:27:31.430
the control thing really? Do
you think, sell it any,

506
00:27:32.030 --> 00:27:35.960
getting people's head around. I
remember having, I had a

507
00:27:35.960 --> 00:27:38.870
conversation with somebody this morning
and he was like, so

508
00:27:38.870 --> 00:27:42.320
how do we, how do
we, how do we like

509
00:27:42.650 --> 00:27:45.500
get the, get a roadmap
agreed for this open source

510
00:27:45.500 --> 00:27:47.870
library? How do we, you
know, do we sit who's

511
00:27:47.870 --> 00:27:49.920
the manager, we sit down
with an, a meeting and

512
00:27:49.940 --> 00:27:53.300
get on the backlog and,
and things like that. And

513
00:27:53.300 --> 00:27:55.460
you have to kind of
explain how open source communities

514
00:27:55.460 --> 00:27:58.460
work with people. That's what
do you think that, but

515
00:27:59.000 --> 00:28:01.610
is that sort of what
you saw as well? Well,

516
00:28:01.640 --> 00:28:05.390
I think that some people
might perceive some people who

517
00:28:05.390 --> 00:28:08.000
are not using visual studio
might perceive that this is

518
00:28:08.780 --> 00:28:10.940
that we Microsoft think that
this is the thing that

519
00:28:10.940 --> 00:28:13.280
will bring them back. Right?
Let's say that someone's just

520
00:28:13.280 --> 00:28:17.300
gotten mad and they've raised
quitted visual studio. And then

521
00:28:17.300 --> 00:28:19.040
we come out with this
and we feel very happy

522
00:28:19.040 --> 00:28:21.320
and we're kind of self-congratulatory
and we'd like, Hey, this

523
00:28:21.320 --> 00:28:23.720
is great. And they're like,
Oh, it's Julia tomorrow to

524
00:28:23.720 --> 00:28:25.940
use in VIM or whatever.
And they've moved off into

525
00:28:25.940 --> 00:28:29.150
their own world. And my
answer is like, well, that's

526
00:28:29.150 --> 00:28:31.100
great. You use the editor
that makes you happy, but

527
00:28:31.400 --> 00:28:33.410
don't, don't hate on the
fact that there's a whole

528
00:28:33.410 --> 00:28:37.310
bunch of people using visual
studio that would appreciate this.

529
00:28:38.390 --> 00:28:42.620
You know, I don't really,
luckily, you know, I know

530
00:28:42.620 --> 00:28:44.720
you get more comments on
your, on your blog than

531
00:28:44.720 --> 00:28:46.580
I do on mine. So
I don't have to have

532
00:28:46.580 --> 00:28:48.170
to deal with those kinds
of comments. Often people are

533
00:28:48.170 --> 00:28:51.590
just generally been very supportive.
In fact, everybody, I reached

534
00:28:51.590 --> 00:28:53.540
out. So, you know, when
we were going through and

535
00:28:53.540 --> 00:28:56.270
going through the library and
talking with lip, get to

536
00:28:56.270 --> 00:28:59.570
guys and talking to the
hook, guys, everybody's just been

537
00:28:59.570 --> 00:29:04.070
incredibly supportive, the open source
communities, the people who work

538
00:29:04.070 --> 00:29:06.650
in open source communities rather
than the people that, you

539
00:29:06.650 --> 00:29:08.510
know, just use them and
talk about them. The people

540
00:29:08.510 --> 00:29:14.390
that work in them every
day, they value, contribution over

541
00:29:14.390 --> 00:29:16.670
anything else. Cause there's so
many people who just sit

542
00:29:16.670 --> 00:29:18.830
and talk and Oh, you
should do this. Oh, you

543
00:29:18.830 --> 00:29:22.280
should do that. And then
go away again. If you

544
00:29:22.280 --> 00:29:25.250
come with a big gift
of code, then you're a

545
00:29:25.250 --> 00:29:27.980
good guy. If you couldn't
with high quality code regularly,

546
00:29:28.310 --> 00:29:31.130
then they start to trust
you. And, and you know,

547
00:29:31.130 --> 00:29:33.950
so we just bring high
quality COVID hopefully, and that's

548
00:29:33.950 --> 00:29:36.500
what folks can do for
sure. Yeah. I think that's

549
00:29:36.500 --> 00:29:41.000
really, you nailed it. Like
that's, that's deep. The idea

550
00:29:41.030 --> 00:29:43.990
that that's fine, you know,
talk is cheap. Show me

551
00:29:43.990 --> 00:29:49.210
the code, right. I mean,
you know, there's the armchair

552
00:29:49.210 --> 00:29:53.170
quarterback aspect of things where
it's like, yeah, you know,

553
00:29:53.170 --> 00:29:55.180
I'm a user, I do
this, I do that. But

554
00:29:55.810 --> 00:29:59.680
most open source projects just
want help. And if you're

555
00:29:59.680 --> 00:30:02.350
doing something that moves the
ball forward, then they'll be

556
00:30:02.350 --> 00:30:05.670
cool with you. Yep. You
can come with great ideas,

557
00:30:05.970 --> 00:30:08.370
you know, go implement it.
It's open you, you go

558
00:30:08.370 --> 00:30:12.240
right there and we'll, we'll
definitely commit it. And the

559
00:30:12.240 --> 00:30:15.150
guys are great. And that's
how we cause you know,

560
00:30:15.180 --> 00:30:17.070
one of the things we
were, we need to be

561
00:30:17.070 --> 00:30:19.290
able to support this library,
wants it. It's going to

562
00:30:19.290 --> 00:30:22.560
get, you know, get support
is, will be baked into

563
00:30:22.560 --> 00:30:25.530
the next major version of
visual studio and every single

564
00:30:25.530 --> 00:30:28.200
version, including express. And that
means we've got to support

565
00:30:28.200 --> 00:30:30.060
it for the next 10
years. So we've got to

566
00:30:30.060 --> 00:30:31.890
have a good degree of
confidence that we're going to

567
00:30:31.890 --> 00:30:34.680
be able to fix the
code we need to fix

568
00:30:34.710 --> 00:30:37.530
in this upstream, live, get
to library and keep it,

569
00:30:37.560 --> 00:30:40.950
you know, that people aren't
gonna, you know, suddenly stop

570
00:30:40.950 --> 00:30:44.070
taking our code. And so
we needed to build up

571
00:30:44.130 --> 00:30:46.740
some trust in the community,
but also the community build

572
00:30:46.740 --> 00:30:50.140
up trust in us. So
that's why fill it especially

573
00:30:50.160 --> 00:30:53.490
has been contributing out to
the Libya to, for quite

574
00:30:53.490 --> 00:30:56.190
a while and you know,
building that trust relationship there.

575
00:30:56.190 --> 00:30:58.020
And then we were kind
of testing the waters to

576
00:30:58.020 --> 00:31:01.020
see how they were reacting
to our co coming in.

577
00:31:01.020 --> 00:31:03.570
And they were just in
again. Cause you know, hopefully

578
00:31:04.320 --> 00:31:05.970
I looked at some of
the Phillips code and his

579
00:31:05.970 --> 00:31:07.530
code, I down on the
sound, it looked good to

580
00:31:07.530 --> 00:31:10.920
me, so, wow. This is
good stuff. And they seem

581
00:31:10.920 --> 00:31:12.870
to think he was quite
good too. And you know,

582
00:31:12.870 --> 00:31:15.240
they make committer. And then
we got a few of

583
00:31:15.240 --> 00:31:17.220
the people that are committed
and they've just been incredibly

584
00:31:17.220 --> 00:31:19.800
welcoming of us. They're really
good guy. Hmm. It's just

585
00:31:19.800 --> 00:31:21.660
like you said, Martin, if
you move the ball forward,

586
00:31:21.660 --> 00:31:26.190
you know, that's all it
takes, But it's also, you

587
00:31:26.190 --> 00:31:30.150
can't rest on your laurels.
You know, I found that

588
00:31:30.150 --> 00:31:34.080
yesterday, COVID, you know, we
ship Oh congrats card and

589
00:31:34.080 --> 00:31:37.050
shipping guys. Right. And let's
look at this, I we'll

590
00:31:37.060 --> 00:31:39.720
take a break for about
one day and then dive

591
00:31:39.720 --> 00:31:42.810
right back in. Right. Exactly.
I was like, yeah, I

592
00:31:42.810 --> 00:31:46.350
always feel bad because like,
I'm like always bug, bug

593
00:31:46.350 --> 00:31:48.900
announcer guy, you know, like,
I'll always, like I called

594
00:31:49.230 --> 00:31:51.930
your guys as I called
Jamie. And I was like,

595
00:31:52.410 --> 00:31:55.320
Hey, congratulations, you should feel
really great. And here's 12

596
00:31:55.320 --> 00:31:57.540
bugs and things that I
don't like. And I was

597
00:31:57.540 --> 00:31:59.520
like, and I'm always feeling
guilty. I'm like, Oh, what

598
00:31:59.520 --> 00:32:01.170
am I doing? Am I
doing it so mean? I

599
00:32:01.170 --> 00:32:03.600
should, you know, who am
I? I didn't do anything.

600
00:32:03.600 --> 00:32:05.520
You know, I didn't write
any of this stuff, but

601
00:32:05.520 --> 00:32:07.140
here's, you know, here's a
bulleted list of things. I

602
00:32:07.140 --> 00:32:11.160
don't like anyway, that's the
point of the preview. That's

603
00:32:11.160 --> 00:32:13.230
why we released it. So
we're, we're, we're grateful for

604
00:32:13.230 --> 00:32:15.540
those bugs and we're going
to take them and hopefully

605
00:32:15.540 --> 00:32:17.430
fix as many as we
can for the next release.

606
00:32:18.720 --> 00:32:20.610
Keep doing that same thing
as we add teachers. Cause

607
00:32:21.270 --> 00:32:22.920
we'll make even more bugs
as we, as we get

608
00:32:22.920 --> 00:32:26.460
rebates in there and we
get support and all those

609
00:32:26.460 --> 00:32:28.590
things that Martin was talking
about that are coming. Yeah.

610
00:32:28.620 --> 00:32:30.270
Well, one thing I will
tell you guys that I'm

611
00:32:30.270 --> 00:32:33.900
really impressed with is that
I was afraid that I

612
00:32:33.900 --> 00:32:37.650
would have to buy into
the entire way of thinking

613
00:32:37.650 --> 00:32:40.280
of this get provider. Like
I would like In the

614
00:32:40.280 --> 00:32:42.770
sense of, I had to
pick the command line or

615
00:32:42.770 --> 00:32:46.100
get hub for windows or
visual studios get support. And

616
00:32:46.100 --> 00:32:47.720
I can say that in
a couple of days that

617
00:32:47.720 --> 00:32:49.460
I've been using it, I've
been able to switch around

618
00:32:49.460 --> 00:32:53.480
just fine. And I'm still
keeping my PowerShell window open

619
00:32:53.840 --> 00:32:55.700
and doing some stuff at
the command line, but then

620
00:32:55.700 --> 00:32:58.040
I'm doing some stuff in
VMs and then occasionally I'll

621
00:32:58.040 --> 00:33:00.650
just push sync and get
up for windows. And so

622
00:33:00.650 --> 00:33:03.980
far I haven't had any
trouble. The only, the only

623
00:33:03.980 --> 00:33:05.870
confusion I've had of any
kind, which is more of

624
00:33:05.870 --> 00:33:09.560
a gift confusion is understanding
how the line numb line

625
00:33:09.560 --> 00:33:12.620
endings work just in a,
in a, in a larger

626
00:33:12.620 --> 00:33:15.170
sense. We know we have
more work to do with

627
00:33:15.170 --> 00:33:21.380
line endings. Yeah. Yeah. And
I think that's less about

628
00:33:21.410 --> 00:33:24.530
like your, your product and
it's released and more about

629
00:33:24.860 --> 00:33:27.560
people on windows. Just need
to better understand get hub,

630
00:33:28.010 --> 00:33:29.990
get line endings because I
know that all my pull

631
00:33:29.990 --> 00:33:32.750
requests and get hub have
all the line and things

632
00:33:32.750 --> 00:33:34.820
messed up and all the
white space messed up and

633
00:33:35.150 --> 00:33:37.400
kind of getting that right
will be a community level

634
00:33:37.400 --> 00:33:41.770
thing that everyone will be
able to work on. Some

635
00:33:41.770 --> 00:33:47.380
stuff. There was some issues
with, with COLS. So line

636
00:33:47.380 --> 00:33:51.460
ending conversion in lip, get
to early on and you

637
00:33:51.460 --> 00:33:55.540
know, the, we fix, we
help fix those recently. So

638
00:33:55.780 --> 00:33:58.440
depending on which tool you're
using in which version of

639
00:33:58.450 --> 00:34:00.100
lip get to it was
using, it might have had

640
00:34:00.100 --> 00:34:02.500
some issues there, but I
think they're all more or

641
00:34:02.500 --> 00:34:11.380
less, more sort of nimble
Sharp. That could be another

642
00:34:11.380 --> 00:34:13.450
thing you might need to
update. Well, if I go

643
00:34:13.450 --> 00:34:15.640
into, get help for windows
right now and go tools

644
00:34:15.670 --> 00:34:20.260
settings, when I'm sitting on
a repo, it actually says

645
00:34:20.320 --> 00:34:24.070
this repositories line endings, aren't
normalized. It's saying that about

646
00:34:24.070 --> 00:34:27.880
the repository, not about files.
And then it says the

647
00:34:27.880 --> 00:34:30.100
best solution is to add
the recommended file, which is

648
00:34:30.100 --> 00:34:32.620
going to be a get
attributes file and make a

649
00:34:32.620 --> 00:34:36.970
onetime commit to fix line
endings. Yes. So they've built

650
00:34:36.970 --> 00:34:39.670
that in then they've got
code that will literally spin

651
00:34:39.670 --> 00:34:42.580
through cleanup line endings, make
them consistent, do a onetime

652
00:34:42.580 --> 00:34:45.400
commit and then you're all
set to go. It might

653
00:34:45.400 --> 00:34:47.500
be something we could, we
could do to, I was

654
00:34:47.500 --> 00:34:50.650
just having this conversation with
Phil just last night actually.

655
00:34:50.980 --> 00:34:55.750
And the we, so we
do when you create, if

656
00:34:55.750 --> 00:34:59.590
you go to file new
project and create a, you

657
00:34:59.590 --> 00:35:04.720
know, a new console application
in solution Explorer and, and

658
00:35:04.720 --> 00:35:06.160
you say you want it
to be added to source

659
00:35:06.160 --> 00:35:08.350
control and you pick get,
then we all, currently we

660
00:35:08.350 --> 00:35:12.490
automatically add a, a gap
attributes file for you for

661
00:35:12.490 --> 00:35:17.230
line endings. And we also
either get ignore file for

662
00:35:17.230 --> 00:35:19.900
you. You know, it's got
all the, the common stuff

663
00:35:19.900 --> 00:35:22.630
and we actually work with
a number open source project

664
00:35:22.630 --> 00:35:24.910
that get hub have, which
is to, to build a

665
00:35:24.910 --> 00:35:27.580
common set of get ignore
files that people there's a

666
00:35:27.580 --> 00:35:29.890
new visual studio on that.
Well, that's great. And the

667
00:35:29.890 --> 00:35:32.740
point here is not reinventing
the wheel, right? Exactly. You

668
00:35:32.740 --> 00:35:35.800
don't want this get provided
a fight with, with, get

669
00:35:35.800 --> 00:35:38.580
up for windows. They should
all use same settings for,

670
00:35:39.000 --> 00:35:41.160
for line endings that are
appropriate, the same settings for

671
00:35:41.160 --> 00:35:44.040
kid attributes and same settings
for, for good ignore. It's

672
00:35:44.040 --> 00:35:47.690
all just love here in
the open source world. You

673
00:35:47.690 --> 00:35:50.000
have to get attributes file,
maybe wrong in this release.

674
00:35:50.000 --> 00:35:51.530
I'm not sure the default
one that we have in

675
00:35:51.530 --> 00:35:53.750
there. There's some, some suggestion
that we didn't quite get

676
00:35:53.750 --> 00:35:55.790
the right setting in there.
So I think we're going

677
00:35:55.790 --> 00:35:57.830
to be, I know we
have an email thread internally

678
00:35:57.830 --> 00:36:00.350
looking at that right now.
Cool. Well, this is very

679
00:36:00.350 --> 00:36:02.180
cool guys. This is very
exciting. So people can go

680
00:36:02.180 --> 00:36:04.670
up and they can, they
can Google with bang or

681
00:36:04.670 --> 00:36:06.830
whatever and find, find the,
find this. They need to

682
00:36:06.830 --> 00:36:10.670
make sure that they have
the update to installed. I've

683
00:36:10.670 --> 00:36:12.260
got the stories up on
my blog. They can see

684
00:36:12.260 --> 00:36:14.960
Brian Harry's blog and they
can also be rest assured

685
00:36:14.960 --> 00:36:17.240
that this is going to
be built into visual studio

686
00:36:17.820 --> 00:36:21.230
in future versions. And, and
then of course, TFS itself

687
00:36:21.260 --> 00:36:25.580
will, you know, both TFS
and then TF versioning system

688
00:36:25.580 --> 00:36:27.950
will, you know, continues to
live. And now you have

689
00:36:27.950 --> 00:36:30.620
choices. You can go centralize,
you can go distributed. So

690
00:36:30.620 --> 00:36:33.020
all it's all up to
you. Yep. Thanks for having

691
00:36:33.020 --> 00:36:36.470
a phone call. Okay. Thanks
Scott. Very cool. This has

692
00:36:36.470 --> 00:36:38.810
been another episode of Hansel
minutes and we'll see you

693
00:36:38.810 --> 00:36:39.740
again next week.

