WEBVTT FILE

1
00:00:00.570 --> 00:00:03.720
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.720 --> 00:00:06.690
they make the show possible.
Today's show is sponsored by

3
00:00:06.690 --> 00:00:10.890
developer express, become a UI
superhero with dev express controls

4
00:00:10.890 --> 00:00:15.420
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.780 --> 00:00:19.860
by leveraging your existing knowledge,
you can build next generation

6
00:00:19.890 --> 00:00:24.000
touch enabled solutions for tomorrow,
you can download your free

7
00:00:24.000 --> 00:00:49.130
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com
From hanselminutes.com. It's Hansel minutes,

8
00:00:49.550 --> 00:00:53.660
a weekly discussion with web
developer and technologist Scott Hanselman.

9
00:00:54.110 --> 00:00:58.970
This is Lawrence Ryan announcing Sure.
Number 502. In this episode,

10
00:00:58.970 --> 00:01:03.920
Scott talks with Julia Sweetland
about a program designed to

11
00:01:03.920 --> 00:01:07.730
provide keyboard control, mouse control
and speech to people with

12
00:01:07.730 --> 00:01:14.990
ms. Motor and speech limitations.
Hi, this is Scott Hanselman.

13
00:01:14.990 --> 00:01:17.510
This is another episode of
Hansel minutes today. I'm talking

14
00:01:17.510 --> 00:01:20.810
with Julia Sweetland. He is
the author of optics, and

15
00:01:20.810 --> 00:01:24.290
this blew up the internet
a couple of weeks ago

16
00:01:24.290 --> 00:01:27.500
and is a really, really
exciting example of what the

17
00:01:27.500 --> 00:01:30.110
power of open source can
do. How are you, sir?

18
00:01:30.440 --> 00:01:32.420
I'm very well. Scott, how
are you? I'm brilliant. And

19
00:01:32.420 --> 00:01:34.880
I'm very excited to talk
to you. You kind of

20
00:01:34.880 --> 00:01:37.580
released under the world Opta
key, but it's clear you've

21
00:01:37.580 --> 00:01:40.280
been working on this for
what? Near a year? No,

22
00:01:40.280 --> 00:01:43.700
no. You're much longer. Nearly
four years, I think. Really?

23
00:01:43.850 --> 00:01:46.250
Wow. How did you kind
of was, was it happening

24
00:01:46.250 --> 00:01:48.650
in public because it seemed
like when you released it,

25
00:01:48.650 --> 00:01:50.360
it got on hacker news,
it got on Reddit. It

26
00:01:50.360 --> 00:01:53.420
made quite the splash. Yeah,
that was, that was the

27
00:01:53.420 --> 00:01:56.510
very last thing I did.
So it started, like I

28
00:01:56.510 --> 00:01:59.690
say, about four years ago
and it was originally not

29
00:01:59.690 --> 00:02:02.930
on get hub, not on
anything on the internet, it

30
00:02:02.930 --> 00:02:06.950
was buried on my computer
and backed up to Dropbox,

31
00:02:06.950 --> 00:02:10.880
which is a terrible idea.
And then when I felt

32
00:02:10.880 --> 00:02:13.400
it was sort of ready
and going from prototype ones,

33
00:02:13.400 --> 00:02:16.790
prototypes and feeling a little
bit more rounded. And so

34
00:02:17.720 --> 00:02:21.110
it finally got itself onto
get hub and then another

35
00:02:21.110 --> 00:02:24.500
year or so passed. And
eventually I got the courage

36
00:02:24.500 --> 00:02:26.210
to put it out there
and I posted something on

37
00:02:26.210 --> 00:02:29.710
Reddit. Fantastic. So, so what
is it, what is optica

38
00:02:29.710 --> 00:02:33.350
key and what problem does
it solve? So optically is

39
00:02:33.350 --> 00:02:36.710
a piece of dotnet software
that I've written. It is

40
00:02:36.710 --> 00:02:39.860
designed to allow people to
control their computer fully and

41
00:02:39.860 --> 00:02:44.840
to speak using only your
eyes. So it's really designed

42
00:02:45.000 --> 00:02:48.920
to solve the problem where
people have motor and or

43
00:02:48.920 --> 00:02:52.910
speech limitations. And my target
audience is people with motor

44
00:02:52.910 --> 00:02:56.510
neuron disease or ALS, do
you have this problem? Or

45
00:02:56.510 --> 00:02:59.890
why did you solve this
problem? No, no, I'm, I

46
00:02:59.890 --> 00:03:02.140
don't have this, but I
had an aunt who died

47
00:03:02.140 --> 00:03:04.540
from motor neuron disease a
little bit over four years

48
00:03:04.540 --> 00:03:08.410
ago now. And it's sort
of taught me a few

49
00:03:08.410 --> 00:03:12.250
things. It's my first experience
with the disease. And it's

50
00:03:12.250 --> 00:03:14.890
sort of presented apart from
everything else that was going

51
00:03:14.890 --> 00:03:18.850
on. It presented a very
difficult technical challenge that I

52
00:03:18.850 --> 00:03:21.700
thought I had a chance
of doing better than what,

53
00:03:21.760 --> 00:03:23.350
you know, the solutions that
I could see out there.

54
00:03:23.910 --> 00:03:27.810
It seems like such a
insurmountable technical challenge. I mean,

55
00:03:27.810 --> 00:03:30.570
when you look out into
the software landscape there's products

56
00:03:30.570 --> 00:03:33.390
that cost many, many thousands
of dollars. And when I,

57
00:03:33.410 --> 00:03:36.150
when I hear about assistive
technologies, particularly ones that are

58
00:03:36.150 --> 00:03:39.660
doing things like realtime eye-tracking
I think, wow, there's probably

59
00:03:39.660 --> 00:03:42.870
a whole team of PhDs
working on this. Why do

60
00:03:42.880 --> 00:03:48.060
you think you had the
skills to do that? Honestly,

61
00:03:48.060 --> 00:03:51.060
probably. Cause I didn't know
the scale of the problem

62
00:03:51.060 --> 00:03:55.350
when I started or I
was too stupid to appreciate

63
00:03:55.350 --> 00:03:58.740
how much time it was
going to take me. But

64
00:03:58.740 --> 00:04:01.590
I, I knew at the
beginning that an open source

65
00:04:01.590 --> 00:04:03.660
or a free solution was
a very important thing to

66
00:04:03.660 --> 00:04:06.480
attempt. And I, I sort
of saw the end goal

67
00:04:06.690 --> 00:04:09.600
before I really understood the
scale of the problem and

68
00:04:10.200 --> 00:04:12.600
yeah, I sort of got
something between my teeth early

69
00:04:12.600 --> 00:04:14.760
on and went with it.
I think that's great. I

70
00:04:14.760 --> 00:04:16.680
mean, I hope you didn't
think I was too cheeky

71
00:04:16.680 --> 00:04:19.440
by asking that question, but
I think that so often

72
00:04:19.440 --> 00:04:21.630
we look at a problem.
We go, all right, that's

73
00:04:21.630 --> 00:04:25.680
a solvable yet. Finite interesting
problem. I can spend a

74
00:04:25.680 --> 00:04:29.190
little time on the weekends
working on, and this was

75
00:04:29.190 --> 00:04:30.630
quite a bit larger than
you thought it would be.

76
00:04:31.230 --> 00:04:33.300
Yeah, it got out of
control, but there was also

77
00:04:33.300 --> 00:04:35.820
large periods of time where
I'd either got frustrated and

78
00:04:35.820 --> 00:04:38.700
put the problem down again,
or, you know, some something

79
00:04:38.700 --> 00:04:41.040
else that had come along
and got in the way.

80
00:04:41.140 --> 00:04:44.280
And it wasn't a solid
four years of working on

81
00:04:44.280 --> 00:04:46.890
this and it also, it
broke down into other problems

82
00:04:46.890 --> 00:04:49.800
that I had to solve.
So there's big hardware problems

83
00:04:49.800 --> 00:04:51.990
to, to surmount it before
you even get onto the

84
00:04:51.990 --> 00:04:54.810
software problems. I think one
of the other things that's

85
00:04:54.810 --> 00:04:57.000
interesting about a problem like
this is that it's, it

86
00:04:57.000 --> 00:05:01.440
is somewhat well layered in
the, in the sense that

87
00:05:01.800 --> 00:05:05.880
there are individual kind of
finite modules talking to the

88
00:05:05.970 --> 00:05:08.520
eye tracking hardware and doing
that in a nice, layered

89
00:05:08.520 --> 00:05:12.570
way. That's a problem having
a nice assistive onscreen keyboard.

90
00:05:12.570 --> 00:05:17.940
That's a problem, you know,
there it's very late. Yeah,

91
00:05:17.970 --> 00:05:21.150
absolutely. Yeah. I can't really
break it down into any,

92
00:05:21.510 --> 00:05:25.290
any sets that there have
been thousands of tiny problems

93
00:05:25.290 --> 00:05:27.870
to solve. And then every
time I solve a handful

94
00:05:27.870 --> 00:05:29.460
of them, it's been a
problem with putting them back

95
00:05:29.460 --> 00:05:33.120
together into a way that
makes the solution scalable as

96
00:05:33.120 --> 00:05:35.250
I then try and solve
the next batch of problems.

97
00:05:35.640 --> 00:05:38.040
I mean, it's, it's not
a foreign problem to a

98
00:05:38.040 --> 00:05:40.830
software developer that tends to
be what we do, but

99
00:05:41.130 --> 00:05:43.110
it was just the scale
of doing that rinse and

100
00:05:43.110 --> 00:05:46.410
repeat and, and also the
difficulty of not knowing necessarily

101
00:05:46.410 --> 00:05:48.840
where I was going with
these things. So if I'd

102
00:05:48.840 --> 00:05:51.270
have started this project knowing,
right, this is the end

103
00:05:51.270 --> 00:05:52.680
result, and this is what
it's going to look like,

104
00:05:52.680 --> 00:05:53.910
and this is how the
solution is going to be

105
00:05:53.910 --> 00:05:57.320
laid out. It would have
been much easier, but yeah,

106
00:05:57.440 --> 00:05:59.810
sadly real life isn't like
that, especially when you don't

107
00:05:59.810 --> 00:06:04.000
understand what you're solving most
of the time. So it's

108
00:06:04.000 --> 00:06:07.420
an assistive onscreen keyboard. It
runs on windows. It's written

109
00:06:07.420 --> 00:06:11.380
in.net. Is this a WPF
application? It is. Yeah. Which

110
00:06:11.380 --> 00:06:14.710
is something I'm very comfortable
working with. I liked WPF

111
00:06:14.710 --> 00:06:18.010
tremendously, but unfortunately one of
the big requests that people

112
00:06:18.010 --> 00:06:20.680
have had since I launched
it is can you make

113
00:06:20.680 --> 00:06:22.600
it cross platform? Can I
run it on Linux? Can

114
00:06:22.600 --> 00:06:26.410
I run it on Mac?
And unfortunately, WPF doesn't play

115
00:06:26.410 --> 00:06:29.620
very nicely in those arenas.
So if I had to

116
00:06:29.620 --> 00:06:31.600
do it all over again,
maybe I would have chosen

117
00:06:31.600 --> 00:06:33.880
differently, but I'm, I'm happy
with how it turned out.

118
00:06:34.630 --> 00:06:38.020
Is there a core engine
that isn't UI specific that

119
00:06:38.020 --> 00:06:41.020
you could, you know, with
the advent of.net core being

120
00:06:41.020 --> 00:06:45.580
cross-platform couldn't you write a
cocoa based front end and

121
00:06:45.580 --> 00:06:48.160
have that call into the.net
core and you know, share

122
00:06:48.160 --> 00:06:50.800
some code. Yeah, no, absolutely.
I mean, one thing that

123
00:06:50.800 --> 00:06:52.240
I do want to do
at some point is take

124
00:06:52.240 --> 00:06:55.330
the project as it is,
because it is one project.

125
00:06:55.360 --> 00:06:57.400
If you look at it
on get hub and split

126
00:06:57.400 --> 00:07:00.100
it out and say, well,
actually these components make up

127
00:07:00.100 --> 00:07:02.530
the idea of input to
this system and these components

128
00:07:02.530 --> 00:07:05.050
make up a completely different
project and they handle the

129
00:07:05.050 --> 00:07:07.660
concept of output. And it's
just that middle bit of

130
00:07:07.660 --> 00:07:10.180
how to, to show the
UI and how to do

131
00:07:10.180 --> 00:07:14.050
window manipulation. And there's a
ton of wind 32 API

132
00:07:14.050 --> 00:07:16.750
calls and things like that.
That really need a, I

133
00:07:16.750 --> 00:07:18.070
need to take a good,
hard look at them and

134
00:07:18.070 --> 00:07:20.860
go, well, these don't need
to be in this technology

135
00:07:20.860 --> 00:07:23.290
anymore. Let's, let's do it
in something cross platform. But

136
00:07:23.680 --> 00:07:27.280
the one thing that I
really don't have is time,

137
00:07:27.610 --> 00:07:30.960
and that is a huge
problem to solve. So that

138
00:07:30.970 --> 00:07:33.130
sounds to me like a
bit of a call for

139
00:07:33.130 --> 00:07:35.740
participation from maybe someone who
might be listening, who could

140
00:07:35.740 --> 00:07:38.620
help out. Yeah, no, absolutely.
I mean, that's, that's one

141
00:07:38.620 --> 00:07:41.500
of the most exciting things
about launching this project. It's

142
00:07:41.500 --> 00:07:44.560
been the response of people
out there that I didn't

143
00:07:44.560 --> 00:07:46.930
know existed coming forward and
saying, this is great, right?

144
00:07:46.930 --> 00:07:48.610
Here's what I can do.
Where do you need me?

145
00:07:49.240 --> 00:07:51.820
And I, I didn't expect
that at all. And you

146
00:07:51.820 --> 00:07:53.860
know, two days ago I
got a pull request on

147
00:07:53.860 --> 00:07:56.440
the repository from someone who
had solved the problem of

148
00:07:56.740 --> 00:08:00.070
also completing words with misspelled
characters in it. And it's

149
00:08:00.070 --> 00:08:01.840
something I put up as
an issue on the repo

150
00:08:01.840 --> 00:08:04.090
to, to go back to
at some point, but I

151
00:08:04.090 --> 00:08:06.130
had no idea someone was
even working on it. It's

152
00:08:06.130 --> 00:08:10.000
just, it's fantastic. Getting these
sort of contributions. Yeah. It

153
00:08:10.000 --> 00:08:12.550
is challenging though, to manage
the influx though. And it's

154
00:08:12.550 --> 00:08:15.400
also interesting to point out
the, the kind of the

155
00:08:15.400 --> 00:08:19.150
ratios, if you can imagine
you've got 2000 or so

156
00:08:19.150 --> 00:08:21.810
stars, which are, you know,
people expressing their interest or

157
00:08:21.810 --> 00:08:26.620
our enthusiasm about the project,
you've got 25 issues open

158
00:08:26.890 --> 00:08:29.020
and you've got two open
pull requests and maybe a

159
00:08:29.020 --> 00:08:30.970
total of 30 or so.
So it's a bit of

160
00:08:30.970 --> 00:08:33.640
a long tail, isn't it?
Right. 2000 people expressed extreme

161
00:08:33.640 --> 00:08:36.940
interest, maybe thousands downloaded, but
then a lot of people

162
00:08:36.940 --> 00:08:40.420
complain, which are your issues
and then much, much fewer

163
00:08:40.420 --> 00:08:44.140
actually contribute code. That's true.
Yeah. But what I've been

164
00:08:44.140 --> 00:08:46.690
very lucky with is that
the people who are contributing

165
00:08:46.690 --> 00:08:51.640
to the projects are fantastic.
Like you, you don't get

166
00:08:51.640 --> 00:08:54.730
to work with great people
in, in the workplace where

167
00:08:54.730 --> 00:08:56.700
everyone paid to be there
and do a good job.

168
00:08:56.730 --> 00:08:59.820
So I, I didn't expect
the quality of people where

169
00:08:59.820 --> 00:09:02.100
no one's being paid to
do this. But then again,

170
00:09:02.100 --> 00:09:06.210
you know, maybe I'm thinking
about it backwards because what

171
00:09:06.210 --> 00:09:08.040
I'm attracting are people who
want to be doing this

172
00:09:08.040 --> 00:09:10.320
in their free time. And
that's where you're going to

173
00:09:10.320 --> 00:09:13.460
get quality. Isn't it Slowly
I've found in the open

174
00:09:13.460 --> 00:09:18.020
source space when it comes
to really utilitarian software, whether

175
00:09:18.020 --> 00:09:20.690
it be utilities that everyone
likes or in this case,

176
00:09:20.690 --> 00:09:25.730
assistive technologies, which are by
their nature, absolutely utilitarian people

177
00:09:26.060 --> 00:09:29.330
are much more excited about
helping with these things because

178
00:09:29.360 --> 00:09:31.790
it is probably affecting either
their life or the life

179
00:09:31.790 --> 00:09:35.000
of someone that's close to
them. That's true. Yeah. And

180
00:09:35.000 --> 00:09:37.340
it does seem to be
working. I've like I said,

181
00:09:37.340 --> 00:09:40.310
I'm attracting excellent people and
I'm thoroughly enjoying working with

182
00:09:40.310 --> 00:09:42.260
them at the moment, but
you're still doing this on

183
00:09:42.260 --> 00:09:46.130
your own. I am, yes.
It's a, it's something I

184
00:09:46.130 --> 00:09:48.230
pick up on the bus
on the way to work.

185
00:09:48.230 --> 00:09:50.570
So I've got myself, a
little tablet that I hack

186
00:09:50.570 --> 00:09:52.880
away on for about 45
minutes. And then when I

187
00:09:52.880 --> 00:09:55.460
get home and I've had
dinner and I put my

188
00:09:55.460 --> 00:09:58.820
son to bed, it gets
another hour, maybe two, if

189
00:09:58.820 --> 00:10:02.480
my wife's feeling charitable. Yeah,
it is. It is a

190
00:10:02.480 --> 00:10:04.550
challenge when it's not your
full time job. So I

191
00:10:04.550 --> 00:10:06.830
would be so bold as
to call out to the

192
00:10:06.830 --> 00:10:09.470
audience that not only I
think is Julius looking for

193
00:10:09.470 --> 00:10:12.290
help, but you know, Hey,
if you are a, if

194
00:10:12.290 --> 00:10:14.900
you're Oprah, if Oprah is
listening and you want to

195
00:10:14.900 --> 00:10:17.570
sponsor Julia's to work on
this full time, I'm sure

196
00:10:17.570 --> 00:10:20.300
he would not turn down
a million dollars. No, my

197
00:10:20.300 --> 00:10:23.420
arms are open. That'd be
fantastic. So let's talk a

198
00:10:23.420 --> 00:10:26.090
little bit about the technology
here. I've got a number

199
00:10:26.090 --> 00:10:30.470
of webcams. They're high quality
HD webcams. Can they track

200
00:10:30.470 --> 00:10:34.400
my eyes? Well, it's not
impossible. There are solutions that

201
00:10:34.400 --> 00:10:38.000
are out there, but they
it's not how the industry

202
00:10:38.000 --> 00:10:40.430
solves the problem. And I
think that's very telling of

203
00:10:40.460 --> 00:10:43.850
where the best solution is.
So the way the industry

204
00:10:43.880 --> 00:10:46.520
generally solves this is to
have a dedicated camera that

205
00:10:46.520 --> 00:10:49.160
sits below your screen is
very much akin to a

206
00:10:49.160 --> 00:10:51.740
webcam, but it's specialized in
it. It will only pick

207
00:10:51.740 --> 00:10:56.210
up infrared light. So that's
coupled in the same device

208
00:10:56.210 --> 00:10:59.840
with infrared light sources and
there are multiple ways to

209
00:10:59.840 --> 00:11:03.200
solve this problem. But typically
you produce two or three

210
00:11:03.440 --> 00:11:05.840
light sources and they produce
what are called glints on

211
00:11:05.840 --> 00:11:09.110
your eyeball. So they don't
move. So as your head

212
00:11:09.110 --> 00:11:11.420
moves and your eyes swivels
to look at different parts

213
00:11:11.420 --> 00:11:14.120
of the screen, those glints
are always in the same

214
00:11:14.120 --> 00:11:16.880
spot on your eye and
the camera picks those up

215
00:11:17.300 --> 00:11:20.360
and it picks up your
pupil at the same point.

216
00:11:20.360 --> 00:11:23.780
So it will detect exactly
where your pupil is and

217
00:11:23.780 --> 00:11:26.840
the relative position of your
pupil to these glimpse. And

218
00:11:26.840 --> 00:11:30.170
once you calibrate those movements
to where the user should

219
00:11:30.170 --> 00:11:32.780
be looking on the screen,
you can then start working

220
00:11:32.780 --> 00:11:34.790
out, right? If they move
their eyes to the top

221
00:11:34.790 --> 00:11:37.310
left, this is where on
the screen. That is. And

222
00:11:37.310 --> 00:11:40.310
then the final piece of
the puzzle comes with tracking

223
00:11:40.310 --> 00:11:42.890
their head. So I track
has have what's called a

224
00:11:42.890 --> 00:11:45.920
track box, which is a,
it's a shape that extends

225
00:11:45.920 --> 00:11:48.560
from some way in front
of them to some way

226
00:11:48.560 --> 00:11:51.110
further in front of them.
And as long as your

227
00:11:51.110 --> 00:11:54.100
head's in that, it will
track your head and compensate

228
00:11:54.100 --> 00:11:56.230
for where it thinks your
eyes should be looking now.

229
00:11:57.120 --> 00:12:00.870
Ah, interesting. So this makes
me think of motion tracking.

230
00:12:00.870 --> 00:12:04.110
When someone puts an actual
dot or a blot of

231
00:12:04.140 --> 00:12:07.530
color on someone's face. When
you think about, you know,

232
00:12:07.530 --> 00:12:09.900
like the Lord of the
rings, Gollum person, he, you

233
00:12:09.900 --> 00:12:12.870
know, he's always filmed with
these dots. Those are put

234
00:12:12.870 --> 00:12:16.830
on his face by a
professional. These glints are sent

235
00:12:17.190 --> 00:12:19.980
out by the camera and
then picked up again by

236
00:12:19.980 --> 00:12:22.290
the camera on the way
back in. Yeah. Yeah. That's

237
00:12:22.290 --> 00:12:24.810
right. I suppose it's a
very similar concept. It's just,

238
00:12:24.810 --> 00:12:27.690
they're passively projected onto you
rather than being stuck onto

239
00:12:27.690 --> 00:12:29.730
your face And you don't
see them and you don't

240
00:12:29.730 --> 00:12:31.500
have to think about them.
It's not like a laser

241
00:12:32.250 --> 00:12:34.660
light, like the dot from
a laser pointer. No, no,

242
00:12:34.680 --> 00:12:36.660
it's not quite like that.
You can see the lights

243
00:12:36.660 --> 00:12:38.880
from the infrared stick glows
a sort of soft red

244
00:12:39.000 --> 00:12:41.910
in most of these things,
but no infrared is generally

245
00:12:41.910 --> 00:12:44.520
invisible to our eyes. So
yeah, you can't see, you

246
00:12:44.520 --> 00:12:46.740
can't see it, but they
can see you. So Then

247
00:12:46.740 --> 00:12:49.170
I assume you do some
calibration, like you said, similar

248
00:12:49.170 --> 00:12:53.280
to a pen calibration. Well,
this is all actually handled

249
00:12:53.280 --> 00:12:56.040
by whichever tracker you've chosen
to pair up ticky with.

250
00:12:56.040 --> 00:12:58.020
So I want to draw
the line of where my

251
00:12:58.020 --> 00:13:00.690
software starts and not try
and claim credit for other

252
00:13:00.690 --> 00:13:03.210
people, but that's a good
point. If you, if you

253
00:13:03.210 --> 00:13:05.730
plug in the tracker, they'll
typically have their own piece

254
00:13:05.730 --> 00:13:09.480
of software and together they
will run a calibration routine,

255
00:13:09.480 --> 00:13:11.460
which shows a bunch of
dots on the screen that

256
00:13:11.460 --> 00:13:13.740
move around. And what they
do is they record your

257
00:13:13.740 --> 00:13:16.530
eye moving, following those dots
around. So let's say nine

258
00:13:16.530 --> 00:13:20.490
points in the corners, somewhere
in the middle and it

259
00:13:20.490 --> 00:13:22.290
will, then it will have
a picture of how your

260
00:13:22.290 --> 00:13:25.470
eye moves and how to
translate that. So once it's

261
00:13:25.470 --> 00:13:28.410
got that, it just starts
out putting a series of

262
00:13:28.410 --> 00:13:30.840
X and Y coordinates, which
makes my job a lot

263
00:13:30.840 --> 00:13:33.120
easier because actually what I
do is I just consume

264
00:13:33.120 --> 00:13:35.760
those. So I rely on
the tracker and the tracker

265
00:13:35.760 --> 00:13:38.700
software to do the heavy
lifting for me. And my

266
00:13:38.700 --> 00:13:41.370
job then becomes well. How
do you use that information

267
00:13:41.370 --> 00:13:45.360
in interesting ways? How do
you present a user experience

268
00:13:45.750 --> 00:13:48.810
that allows people to do
things that we would typically

269
00:13:48.840 --> 00:13:51.360
use the mouse and keyboard
for? Ah, interesting. Okay. So

270
00:13:51.360 --> 00:13:55.950
you're getting a stream of
XYZ from the SDK that

271
00:13:55.950 --> 00:13:59.340
sits on the top of
one of the many cameras

272
00:13:59.340 --> 00:14:04.260
that you, you support and
that's their public sdk.net SDK.

273
00:14:04.260 --> 00:14:07.230
And you just consume that.
Yeah, yeah. That's that's broadly

274
00:14:07.410 --> 00:14:10.860
and some trackers have got
a, a.net SDK that you

275
00:14:10.860 --> 00:14:14.550
can call straight into some,
have they stream over sockets.

276
00:14:14.550 --> 00:14:16.140
So you have to open
up a socket and listen

277
00:14:16.140 --> 00:14:18.240
to these things and use
a bit of rejects or

278
00:14:18.240 --> 00:14:20.820
something to break them down
again, into their constituent pieces

279
00:14:20.820 --> 00:14:23.580
of data, or, you know,
every tracker has solved this

280
00:14:23.580 --> 00:14:27.030
problem in a different way,
which is interesting, but also

281
00:14:27.030 --> 00:14:32.310
frustrating and time consuming This
episode of Hansel minutes is

282
00:14:32.310 --> 00:14:35.700
brought to you by brain
tree code for easy online

283
00:14:35.700 --> 00:14:38.340
payments. If you're building a
mobile app and you're searching

284
00:14:38.340 --> 00:14:41.790
for a simple payment solution,
check out brain tree, the

285
00:14:41.790 --> 00:14:45.840
brain tree v.zero SDK makes
it easy to offer multiple

286
00:14:45.870 --> 00:14:49.860
mobile payment types. So you
can start accepting PayPal, Apple

287
00:14:49.860 --> 00:14:53.510
pay Bitcoin, Venmo, credit cards,
and more all with a

288
00:14:53.510 --> 00:14:57.320
single integration, one small snippet
of code. And you're set

289
00:14:57.320 --> 00:14:59.870
up in less than 10
minutes. If you don't have

290
00:14:59.870 --> 00:15:02.030
time, you can give them
a call. They'll even handle

291
00:15:02.030 --> 00:15:04.610
the integration for you and
walk you through it. The

292
00:15:04.610 --> 00:15:10.370
SDK supports seven languages, dotnet
node, Java, Perl, PHP, Python,

293
00:15:10.370 --> 00:15:15.020
and Ruby elegant code clear
documentation to learn more. And

294
00:15:15.020 --> 00:15:19.820
for your first $50,000 in
transactions fee free, go to

295
00:15:19.820 --> 00:15:30.710
brain tree payments.com/hanselman that's Braintree
payments.com/hanselman. So thinking about the

296
00:15:30.710 --> 00:15:33.650
fact that you're doing it
in WPF, there's kind of

297
00:15:33.680 --> 00:15:35.930
two ways you could have
either grabbed it as an

298
00:15:35.930 --> 00:15:38.780
event or you created events,
or you could do it

299
00:15:38.780 --> 00:15:43.030
kind of more pull based
like using reactive extensions, Which

300
00:15:43.030 --> 00:15:45.790
is the road that I
went down. So when I

301
00:15:45.790 --> 00:15:50.860
started this project RX wasn't
wasn't released. So that was

302
00:15:50.860 --> 00:15:53.200
a huge problem that I
had to solve anyway. And

303
00:15:53.200 --> 00:15:55.000
actually, I'm just going to
caveat what I said with

304
00:15:55.030 --> 00:15:57.070
that might not be true
at all, or it may

305
00:15:57.070 --> 00:15:59.410
have been released, but I
was definitely not aware of

306
00:15:59.410 --> 00:16:01.240
it at that point. So
you became aware of it

307
00:16:01.240 --> 00:16:03.640
during the middle of the
project. Yeah, I did. At

308
00:16:03.640 --> 00:16:07.510
some point I knew RX
was out there and can

309
00:16:07.510 --> 00:16:10.150
I, can I plug someone?
Of course. And I actually

310
00:16:10.150 --> 00:16:12.130
went on a, on a
very good course by Lee

311
00:16:12.130 --> 00:16:15.520
Campbell. He did a course
in London. He works for

312
00:16:15.520 --> 00:16:17.380
a company called adaptive and
it was a two day

313
00:16:17.380 --> 00:16:19.960
professional course and we all
sat down in a classroom

314
00:16:19.960 --> 00:16:21.550
and he taught us all
sorts of cool things with

315
00:16:21.550 --> 00:16:24.460
RX. So that, that solidified
what I try to be

316
00:16:24.460 --> 00:16:27.910
teaching myself at that point.
Yeah, absolutely. That's Lee, Ryan Campbell

317
00:16:27.910 --> 00:16:33.580
on Twitter, and he's got
a great blog@leecampbelldotblogspot.com. And he's

318
00:16:33.580 --> 00:16:37.690
been doing reactive extensions since
2010 as I recall. Yep.

319
00:16:37.720 --> 00:16:39.970
He's the guy, he's the
one who, when you start

320
00:16:39.970 --> 00:16:42.520
searching for things, he's either
already answered the question on

321
00:16:42.520 --> 00:16:44.980
stack overflow or you end
up on his intro to

322
00:16:44.980 --> 00:16:47.950
RX blog. That's brilliant. Isn't
that wonderful. How a community

323
00:16:47.950 --> 00:16:51.370
member didn't even realize they
were helping you solve this

324
00:16:51.370 --> 00:16:54.100
problem while you were learning
from them. Yeah. And he's

325
00:16:54.100 --> 00:16:56.620
a very nice guy as
well. Yeah, That's great. So

326
00:16:56.620 --> 00:17:00.340
you have this stream of
XYZ and you then bring

327
00:17:00.340 --> 00:17:03.610
that into your system. You've
got a UI that looks

328
00:17:03.610 --> 00:17:06.190
a lot like the keyboard
that you get with windows,

329
00:17:06.190 --> 00:17:08.710
but it's your own imagination
of that keyboard. You've added

330
00:17:08.710 --> 00:17:12.670
a lot of different things
to it and special icons

331
00:17:12.670 --> 00:17:17.950
and different glyphs to mean
different things. That's right. Yeah.

332
00:17:17.950 --> 00:17:22.030
So I've been through maybe
three different iterations of this

333
00:17:22.030 --> 00:17:25.300
and, and how to solve
the problem of generating speech

334
00:17:25.300 --> 00:17:27.640
in a natural and quick
way. And I've kind of

335
00:17:27.640 --> 00:17:32.050
settled on a standard keyboard
and it's not optimal. I've

336
00:17:32.050 --> 00:17:33.910
had some feedback from people
saying, well, why are you

337
00:17:33.910 --> 00:17:36.790
using a QWERTY layout? You
know, there are much better

338
00:17:36.790 --> 00:17:38.680
ways of doing this. You
could, you could be putting

339
00:17:38.680 --> 00:17:41.260
the letters around in a
circle, has some sort of

340
00:17:41.260 --> 00:17:44.620
radial dial. You could be
using any number of alternate

341
00:17:45.610 --> 00:17:48.340
layouts, which put the most
frequently used letters, more towards

342
00:17:48.340 --> 00:17:52.200
the sensor. These are all
perfectly legitimate pieces of feedback,

343
00:17:52.230 --> 00:17:55.470
but what I'm going for
the whole time is stick

344
00:17:55.470 --> 00:17:58.530
with what people know if
it was me. And this

345
00:17:58.530 --> 00:18:00.720
has always been my test
cases, I've been designing this,

346
00:18:01.020 --> 00:18:02.610
what would I want to
use? And I know a

347
00:18:02.610 --> 00:18:05.010
QWERTY keyboard pretty well. So
that's what I wanted to

348
00:18:05.010 --> 00:18:07.790
use. Yeah. Interesting. That does
bring up the, the question

349
00:18:07.790 --> 00:18:11.240
though, if you wanted to
use it because you had

350
00:18:11.240 --> 00:18:14.210
become disabled at a point
in your life where you

351
00:18:14.210 --> 00:18:17.000
already knew the keyboard versus
someone who might have always

352
00:18:17.000 --> 00:18:23.030
been disabled. Yeah. And the
idea though, some something that

353
00:18:23.030 --> 00:18:25.520
I put into the design
is that the keyboard itself

354
00:18:25.550 --> 00:18:28.040
is just a thing. So
there's something in there called

355
00:18:28.040 --> 00:18:30.890
the keyboard host and he
makes a decision about what's

356
00:18:30.890 --> 00:18:34.400
keyboard to spit out. So
it's based on what keyboard

357
00:18:34.400 --> 00:18:37.370
have you requested. So is
it the letters? Is it,

358
00:18:37.550 --> 00:18:39.230
you know, is it numbers
you want to see? Is

359
00:18:39.230 --> 00:18:43.960
it accented letters or characters,
whatever it is. So there's

360
00:18:43.970 --> 00:18:47.120
that context. There's what, what
language are you currently configured

361
00:18:47.120 --> 00:18:49.700
to use? And then the
last piece of the puzzle

362
00:18:49.700 --> 00:18:53.240
is there's a concept of
keyboard sets. And that allowed

363
00:18:53.240 --> 00:18:55.160
you to say, well, I
want a standard set of

364
00:18:55.160 --> 00:18:58.160
keyboards, or I want a
simplified set of keyboards. Or,

365
00:18:58.370 --> 00:18:59.480
and that's when I was
going to go down a

366
00:18:59.480 --> 00:19:01.970
path of say, well, I
want to radio keyboard, or

367
00:19:01.970 --> 00:19:06.300
I want something else. And
then this keyboard host will,

368
00:19:06.300 --> 00:19:08.330
will make a decision and
spit out the relevant one.

369
00:19:08.690 --> 00:19:11.060
And it's, it's how we're
starting to add support for

370
00:19:11.060 --> 00:19:14.420
French and German. And some
of the more complex non

371
00:19:14.420 --> 00:19:17.420
Latin character-based languages, they've all
got their own layouts and

372
00:19:17.420 --> 00:19:19.970
their own special characters. And
so, you know, it's an

373
00:19:19.970 --> 00:19:23.540
opensource project. If you prefer
a different layout, make it,

374
00:19:23.720 --> 00:19:27.200
it's very easy to plug
in. There's some really great

375
00:19:27.200 --> 00:19:30.590
YouTube videos and some wonderful
animated gifts where you are

376
00:19:30.590 --> 00:19:32.570
holding your hands in the
air and you're showing us

377
00:19:32.570 --> 00:19:36.800
how this works. And I'm
there. As you look at

378
00:19:36.800 --> 00:19:42.200
the different keys, there's a
pie chart that fills over

379
00:19:42.200 --> 00:19:45.260
time. And you, I can
understand where you look at

380
00:19:45.260 --> 00:19:47.150
a key and you wait
for a second for the

381
00:19:47.150 --> 00:19:49.280
pie chart to fill. And
then that might be a,

382
00:19:49.650 --> 00:19:52.100
a level of confidence. You
have that you're looking at

383
00:19:52.100 --> 00:19:55.820
that I, that, that button,
but as you are typing

384
00:19:55.820 --> 00:19:58.940
a full sentence, I see
you looking from key to

385
00:19:58.940 --> 00:20:01.970
key quite quickly. And sometimes
the pie chart only fills

386
00:20:01.970 --> 00:20:07.400
halfway what's going on there.
So the initial selection, if

387
00:20:07.400 --> 00:20:09.080
you were just doing letter
by letter, like you say,

388
00:20:09.080 --> 00:20:12.410
it's filling a pie chart
and it's not just look

389
00:20:12.410 --> 00:20:14.000
at this key for X
number of seconds and it

390
00:20:14.000 --> 00:20:16.700
will select, there's a few
other things going on there

391
00:20:16.700 --> 00:20:19.910
actually. So when you, when
you first push your attention

392
00:20:19.910 --> 00:20:22.490
to a letter, so let's
say the letter H and

393
00:20:22.490 --> 00:20:24.740
you want to type hello.
There's what I call the

394
00:20:24.740 --> 00:20:27.230
lock on period at the
beginning. So that's a period

395
00:20:27.230 --> 00:20:29.570
of time before the key
will react to you. So

396
00:20:29.570 --> 00:20:31.430
that, that allows you to
sort of glance around the

397
00:20:31.430 --> 00:20:34.430
keyboard without every key, suddenly
starting a big animation and

398
00:20:34.430 --> 00:20:37.400
distracting you. So once you've
cleared that period, which is

399
00:20:37.400 --> 00:20:41.210
only something like 50 milliseconds,
so it's, it's generally imperceptible

400
00:20:41.570 --> 00:20:44.270
it then starts registering your
progress. And when that hits

401
00:20:44.270 --> 00:20:47.440
a hundred, it will make
the selection, but say, you

402
00:20:47.440 --> 00:20:49.900
look away during that period
of time. So you're halfway

403
00:20:49.900 --> 00:20:52.390
through selecting the letter H
and something catches your eye,

404
00:20:52.390 --> 00:20:54.940
or you realize you want
to look around and make

405
00:20:54.940 --> 00:20:57.070
sure this is what you
want to be typing. So

406
00:20:57.070 --> 00:20:59.770
there's then a decay period
on each selection. So it

407
00:20:59.770 --> 00:21:01.810
will stick around for a
period of time. And this

408
00:21:01.810 --> 00:21:04.690
is all configurable as well.
And this is built in

409
00:21:04.690 --> 00:21:07.270
because as you, as I
was playing with it over

410
00:21:07.270 --> 00:21:10.150
the generations of this code,
you realize that things just

411
00:21:10.150 --> 00:21:12.280
feel a bit clunky and
I feel a bit, you

412
00:21:12.280 --> 00:21:14.440
know, not quite right, or
they're too difficult to use.

413
00:21:14.710 --> 00:21:16.750
So anyway, that's, what's going
on with a single key

414
00:21:16.750 --> 00:21:19.450
selection, and it's a slow
process. So you don't want

415
00:21:19.450 --> 00:21:22.030
to go H E L
L O. So as you

416
00:21:22.030 --> 00:21:24.940
identified, I do a complete
selection on the age and

417
00:21:24.940 --> 00:21:27.340
then glance E L and
in finished on a complete

418
00:21:27.340 --> 00:21:30.010
selection on the O and
in between what I do

419
00:21:30.010 --> 00:21:32.710
is that I, I capture
everything that I look at.

420
00:21:33.220 --> 00:21:35.740
And then I make a
decision about which keys that

421
00:21:35.740 --> 00:21:39.760
I've touched are going to
be significant. And it broadly

422
00:21:39.760 --> 00:21:43.660
speaking will take the, take
the right letters, but it

423
00:21:43.660 --> 00:21:45.610
might end up with some
extra letters that shouldn't be

424
00:21:45.610 --> 00:21:47.350
there. And it might end
up with some letters that

425
00:21:47.350 --> 00:21:49.870
I've completely missed, because I
didn't give them enough attention

426
00:21:49.870 --> 00:21:52.480
as I was glancing around.
And then I use an

427
00:21:52.480 --> 00:21:56.200
algorithm to match against a
dictionary of known words. So

428
00:21:56.200 --> 00:22:00.450
is this Almost like a
swipe keyboard except for your

429
00:22:00.450 --> 00:22:03.960
eyes? Yeah, exactly. And it's,
it was one of the

430
00:22:03.960 --> 00:22:06.720
first things I thought when
I started designing how this

431
00:22:06.720 --> 00:22:09.570
might work, because I had
a swipe keyboard or a

432
00:22:09.570 --> 00:22:12.510
Swift key keyboard, whichever one
I was using. And I

433
00:22:12.510 --> 00:22:15.180
thought, well, this is excellent.
This is very, very quick.

434
00:22:15.780 --> 00:22:18.240
But I knew at that
point already that your eyes

435
00:22:18.390 --> 00:22:20.820
don't move like that Germany,
they jump in what are

436
00:22:20.820 --> 00:22:25.170
called saccades and fixations. So
as you look around, if

437
00:22:25.170 --> 00:22:27.240
you look at your keyboard
now, and look, H E

438
00:22:27.270 --> 00:22:31.020
L O you barely brushed
the keys in between. So

439
00:22:31.020 --> 00:22:32.430
as you go from the
H to the E, you

440
00:22:32.430 --> 00:22:36.240
will not really look at
the G the FDR, your

441
00:22:36.240 --> 00:22:39.000
eye move so fast as
it makes that movement. So

442
00:22:39.000 --> 00:22:42.750
you actually end up with
really nice H E L

443
00:22:42.750 --> 00:22:45.840
O sort of hits and
it's much cleaner. Whereas when

444
00:22:45.840 --> 00:22:48.150
you're swiping with your finger,
you've got constant pressure and

445
00:22:48.150 --> 00:22:51.600
everything you touch is potentially
important. So those sort of

446
00:22:51.600 --> 00:22:54.990
keyboards have to make decisions
in different ways. So Almost

447
00:22:54.990 --> 00:22:58.410
the edges, not the edges,
the vertexes as you move

448
00:22:58.410 --> 00:23:00.510
from edge to you, you
move edges around. So you,

449
00:23:00.640 --> 00:23:03.540
you go H over to
E and then you immediately

450
00:23:04.020 --> 00:23:05.730
hit you. Don't hit, hit,
you don't sit on E

451
00:23:05.730 --> 00:23:08.100
and hold there. You immediately
do 180 degrees. And you

452
00:23:08.100 --> 00:23:10.530
head back over to, to
L I assume you can

453
00:23:10.530 --> 00:23:13.290
detect that someone is bumped
up against a point and

454
00:23:13.290 --> 00:23:15.270
then come back down, or
how, how quickly can you

455
00:23:15.270 --> 00:23:17.220
do that? Is it the
glance at each and then

456
00:23:17.220 --> 00:23:19.260
come right back down? Or
is it look at E

457
00:23:19.260 --> 00:23:21.840
and hold, hold, hold, and
then come back down. Well,

458
00:23:21.880 --> 00:23:25.410
it's adaptive. So it depends
on how quickly you look

459
00:23:25.410 --> 00:23:27.120
at each key. And then
it makes a decision. It

460
00:23:27.120 --> 00:23:28.950
says, well, what was the
average time of looking at

461
00:23:28.950 --> 00:23:31.200
a key? And so what
do we decide is a

462
00:23:31.200 --> 00:23:34.440
threshold for this was a
conscious look, and this was

463
00:23:34.440 --> 00:23:38.670
something you just brushed up
against by accident, but you've

464
00:23:38.670 --> 00:23:41.510
actually already solved most of
the problem of how the

465
00:23:41.550 --> 00:23:44.610
onscreen keyboards do it with,
with touch. Because like you

466
00:23:44.610 --> 00:23:46.520
say, you do what you
do a one 80 as

467
00:23:46.520 --> 00:23:49.040
you changed direction. And I
believe that's how a lot

468
00:23:49.040 --> 00:23:52.010
of those swipe style keyboards
work, they look for velocity

469
00:23:52.010 --> 00:23:54.890
changes. So when you see
that sort of strong acceleration

470
00:23:54.890 --> 00:23:57.560
or a dink in your
path, something must have happened.

471
00:23:57.560 --> 00:23:59.420
You must've made a decision
that you'd hit what you

472
00:23:59.420 --> 00:24:03.940
wanted. Interesting. And how fast
can you go? Are you

473
00:24:03.940 --> 00:24:07.390
going full speed when you
are doing those gifts and

474
00:24:07.390 --> 00:24:11.380
foot YouTubes, or are you
going halftime? No. So I

475
00:24:11.380 --> 00:24:13.000
knew that I had to
get to a point of

476
00:24:13.000 --> 00:24:15.070
releasing the software. Otherwise I
was never going to get

477
00:24:15.090 --> 00:24:19.960
out there. So this was
at about quarter to midnight

478
00:24:20.020 --> 00:24:24.880
on a work night. So
I was tired. I really

479
00:24:25.480 --> 00:24:28.030
didn't face, I didn't want
to face recording this 10

480
00:24:28.030 --> 00:24:30.970
times. So I said, it's
a very, very modest settings

481
00:24:31.750 --> 00:24:33.340
because I didn't want to
screw it up and do

482
00:24:33.340 --> 00:24:36.910
it 10 times. And the,
I wanted people to understand

483
00:24:36.910 --> 00:24:38.230
what they were looking at
as well. So if I

484
00:24:38.230 --> 00:24:40.870
went too quickly, it would
just be a blur of

485
00:24:40.930 --> 00:24:43.030
all that that looked cool,
but what, what was going

486
00:24:43.030 --> 00:24:46.270
on? So I put it
somewhere in the middle. I've

487
00:24:46.270 --> 00:24:48.730
actually got a user in
Germany who can use the

488
00:24:48.730 --> 00:24:51.640
system about three times faster
than I can, so you

489
00:24:51.640 --> 00:24:53.650
can ramp it all the
way up. Wow. So you

490
00:24:53.650 --> 00:24:56.350
really can move fast if
you need to. Yup, absolutely.

491
00:24:56.800 --> 00:24:59.620
So This is not just
about typing. It's also about

492
00:24:59.620 --> 00:25:02.260
clicking. You've got a great
video where you show someone

493
00:25:02.260 --> 00:25:05.230
using Gmail, which I don't
think is the most accessible

494
00:25:05.230 --> 00:25:09.040
of, of web based emails,
but there's a bit of

495
00:25:09.040 --> 00:25:12.760
zooming and a bit of
a careful clicking. Is it

496
00:25:12.760 --> 00:25:14.860
a little more difficult to
use a mouse than it

497
00:25:14.860 --> 00:25:18.010
is to click around on
a version? Yes, I think

498
00:25:18.010 --> 00:25:21.850
so. I mean, your its
tolerance for making mistakes is

499
00:25:21.850 --> 00:25:24.460
lower because if you hold
in a, in a position

500
00:25:24.460 --> 00:25:27.700
for long enough, it will
execute your action. So you

501
00:25:27.700 --> 00:25:30.940
have to be more precise,
but then the algorithm around

502
00:25:30.940 --> 00:25:33.400
how it decides where you
make your selection for mouse

503
00:25:33.400 --> 00:25:37.810
clicks is tailored differently from
the algorithm around keyboard selections.

504
00:25:38.200 --> 00:25:40.090
So it's a little bit
more tolerant. So it does

505
00:25:40.090 --> 00:25:44.200
stuff involving circles. So it
will work out when you

506
00:25:44.200 --> 00:25:46.810
have locked on to an
area where all of your

507
00:25:46.810 --> 00:25:48.700
points of interest, all of
the places that I think

508
00:25:48.700 --> 00:25:51.790
you're looking for within a
circle of a certain size,

509
00:25:52.180 --> 00:25:54.280
and then it will begin
the selection and its tolerance

510
00:25:54.280 --> 00:25:57.370
will increase. So what you'll
see is, as you see

511
00:25:57.370 --> 00:25:59.200
the mouse moving around on
a screen, the big sort

512
00:25:59.200 --> 00:26:02.170
of cursor animation I do,
you'll see it, it locks

513
00:26:02.170 --> 00:26:06.160
into a position and starts
ticking on a selection. And

514
00:26:06.280 --> 00:26:09.400
the user can actually start
straying a little bit with

515
00:26:09.400 --> 00:26:11.470
their eyes at that point.
So they can relax. Because

516
00:26:11.470 --> 00:26:12.880
up until that point, there's
probably quite a bit of

517
00:26:12.880 --> 00:26:16.930
focus on them to hit
exactly where they want, that

518
00:26:17.050 --> 00:26:19.780
sort of tolerance opens up
and says, well, you've locked

519
00:26:19.780 --> 00:26:21.580
on somewhere. So I'm just
going to let you relax,

520
00:26:21.580 --> 00:26:23.680
complete the selection. But if
you, if you didn't mean

521
00:26:23.680 --> 00:26:25.420
it to be there, you
don't have to look too

522
00:26:25.420 --> 00:26:28.180
far and we can break
this and try again. So

523
00:26:28.180 --> 00:26:30.670
when people About people with
ALS, they usually come to

524
00:26:30.670 --> 00:26:34.060
Stephen Hawking and he has
a unique voice because it

525
00:26:34.060 --> 00:26:36.910
is the text to speech,
voice. I think, you know,

526
00:26:36.910 --> 00:26:40.270
IBM used 20 or 30
years ago. And while there

527
00:26:40.270 --> 00:26:43.120
are ways to make his
voice sound like his actual,

528
00:26:44.130 --> 00:26:46.680
including the fact that he's
English and they've got him

529
00:26:46.680 --> 00:26:50.460
sounding like an American people
associate that voice with him.

530
00:26:50.700 --> 00:26:54.690
So he doesn't want to
change it. But I understand

531
00:26:54.690 --> 00:26:57.600
that there's a thing called
voice banking. So if someone's

532
00:26:57.600 --> 00:27:00.210
about to lose their voice
or might have an eventuality

533
00:27:00.210 --> 00:27:03.270
to lose their voice, they
can record themselves. How does

534
00:27:03.270 --> 00:27:08.000
that, So voice banking is,
it's what you say. It's

535
00:27:08.090 --> 00:27:11.930
a process whereby you record
yourself speaking a number of

536
00:27:11.960 --> 00:27:16.430
preset phrases and words in
one particular example, which is

537
00:27:16.430 --> 00:27:18.770
a company. Again, I'd like
to plug called model talker

538
00:27:18.890 --> 00:27:23.270
is model talker.org. They currently
provide a free service. So

539
00:27:23.270 --> 00:27:26.210
you record yourself reading 10
phrases, send it in. They'll

540
00:27:26.210 --> 00:27:28.310
tell you everything's good with
your setup. And then you

541
00:27:28.310 --> 00:27:32.240
record 1600 phrases, which takes
hours and hours. But then

542
00:27:32.240 --> 00:27:34.190
what they do is they
take that and they will

543
00:27:34.190 --> 00:27:37.430
synthesize your voice and give
you back something that's compatible

544
00:27:37.430 --> 00:27:40.190
with windows. I think it's
called SAPI five text to

545
00:27:40.190 --> 00:27:43.790
speech. And then that becomes
available for windows to use

546
00:27:43.790 --> 00:27:47.600
or programs like optica. Oh,
wow. So that is not

547
00:27:47.600 --> 00:27:49.610
only a free service, but
what they're creating is very

548
00:27:49.610 --> 00:27:52.760
standard thing. And it plugs
into that drop down. It

549
00:27:52.760 --> 00:27:56.360
lets you pick the different
voices windows. Exactly. So you

550
00:27:56.360 --> 00:27:58.610
can use your own voice
with something like windows, narrator,

551
00:27:58.670 --> 00:28:00.470
which would probably be weird.
Cause you'd be talking back

552
00:28:00.470 --> 00:28:02.540
to yourself the whole time.
But if you want to

553
00:28:02.540 --> 00:28:06.050
use it with communication software,
something that I've heard from

554
00:28:06.050 --> 00:28:08.360
a number of people with
motor neuron disease is that

555
00:28:08.360 --> 00:28:12.170
your voice is very much
akin to your identity and

556
00:28:12.170 --> 00:28:15.050
losing your voice is, is
a bigger deal than you

557
00:28:15.050 --> 00:28:17.840
or I might think it
is. So it's, it's very

558
00:28:17.840 --> 00:28:22.550
important and services like this
are just fantastic. So kind

559
00:28:22.550 --> 00:28:25.310
of Closing, I'm curious, you
built this and you built

560
00:28:25.310 --> 00:28:27.650
this and you worked for
for years and you worked

561
00:28:27.650 --> 00:28:30.950
on the train. At what
point did you sit down

562
00:28:30.950 --> 00:28:34.310
with someone with motor neuron
or ALS and showed it

563
00:28:34.310 --> 00:28:36.320
to them at that first
time where they saw it

564
00:28:36.320 --> 00:28:39.260
and tried it? I fought,
he late in the process.

565
00:28:39.650 --> 00:28:42.400
If I was at work,
I'd be sacking myself for

566
00:28:42.400 --> 00:28:47.150
a, for not engaging the
end users. I probably only

567
00:28:47.150 --> 00:28:49.730
put it in front of
someone who was a prospective

568
00:28:49.730 --> 00:28:53.060
user about six months ago.
And that was at a

569
00:28:53.060 --> 00:28:55.970
local hospital where I was
put in touch with a

570
00:28:55.970 --> 00:28:58.580
guy who's an ex software
developer. So he knows what

571
00:28:58.580 --> 00:29:00.530
he's looking at. He was
excited to play with this

572
00:29:00.530 --> 00:29:04.400
technology and he's just been
fantastic. So he's given me

573
00:29:04.400 --> 00:29:07.100
great feedback on things he
likes about his current setup,

574
00:29:07.340 --> 00:29:10.370
that he likes better than
my solution things he doesn't

575
00:29:10.370 --> 00:29:13.100
like and things he likes,
you know, he'd like to

576
00:29:13.100 --> 00:29:15.800
see and, and I've taken
these things away and tried

577
00:29:15.800 --> 00:29:18.920
to build him his system.
So up until that 0.3

578
00:29:18.920 --> 00:29:21.200
and a half years, it's
been my system. And now

579
00:29:21.200 --> 00:29:24.050
it's now it's sort of
my system and Steve system.

580
00:29:24.470 --> 00:29:26.780
And it, from the other
feedback I'm getting from the

581
00:29:26.780 --> 00:29:30.020
wider community, people who know
what they're looking at, he's

582
00:29:30.020 --> 00:29:32.600
really helped me along here.
Do you have a sense

583
00:29:32.600 --> 00:29:34.340
now how many people are
using this? I mean, did

584
00:29:34.340 --> 00:29:37.370
you succeed? Is this something
where you're getting an email

585
00:29:37.370 --> 00:29:38.990
every once in a while
that says, this is it

586
00:29:38.990 --> 00:29:43.990
you've changed everything. Yeah. I
wouldn't say I've succeeded because

587
00:29:43.990 --> 00:29:49.990
it's not finished, but yeah,
I'm absolutely bowled over by

588
00:29:49.990 --> 00:29:53.530
the response. I'm receiving emails
from people I go on

589
00:29:53.530 --> 00:29:55.660
yesterday where someone just saying,
thank you, thank you. Thank

590
00:29:55.660 --> 00:29:59.710
you. My mother hadn't spoken
in months. We've built her

591
00:29:59.710 --> 00:30:02.500
this system. And you know,
the first thing she did

592
00:30:02.500 --> 00:30:04.990
was right. I'm really enjoying
using this and she kept

593
00:30:04.990 --> 00:30:06.970
hitting the speak button over
and over again. So she

594
00:30:06.970 --> 00:30:11.590
could hear herself talking. That
sort of feedback is you

595
00:30:11.590 --> 00:30:15.730
don't get that in a
day. Yeah, that's fantastic. Let's,

596
00:30:15.850 --> 00:30:18.160
let's also take a moment
to, to thank some of

597
00:30:18.160 --> 00:30:21.760
the open source projects that
you're using. So you've got

598
00:30:21.760 --> 00:30:26.200
RX and the reactive extensions
underneath there. You've got my

599
00:30:26.200 --> 00:30:32.380
apps, the Metro WPF library.
You're using Octa kit. You

600
00:30:32.380 --> 00:30:36.970
got prism log for net.
The common service locator. You've

601
00:30:36.970 --> 00:30:43.390
also got something called mouse
keyboard activity monitor. You're sitting,

602
00:30:43.390 --> 00:30:45.490
you're sitting out, you're standing
on the shoulders of giants.

603
00:30:45.790 --> 00:30:49.600
No, absolutely. I couldn't have
done this without years and

604
00:30:49.600 --> 00:30:53.710
years and years of other
people's hard work. Yeah. It's

605
00:30:53.710 --> 00:31:01.180
fantastic stuff. So people can
check this out@optikey.org <inaudible> dot

606
00:31:01.180 --> 00:31:04.390
org, and they can interact
with you, I assume, on

607
00:31:04.390 --> 00:31:07.960
Twitter or in the issues
area. And I also, as

608
00:31:07.960 --> 00:31:09.580
a, as a person who
looks at a lot of

609
00:31:09.580 --> 00:31:11.050
open source, I have to
give you a lot of

610
00:31:11.050 --> 00:31:15.100
credit for a really extraordinary
Wiki and bit of documentation.

611
00:31:15.100 --> 00:31:17.140
So often people throw these
things up on to get

612
00:31:17.140 --> 00:31:20.710
hub and say here's some
code, but I would aim

613
00:31:20.710 --> 00:31:23.800
to say that you've probably
got is as nice a

614
00:31:23.800 --> 00:31:26.050
Wiki and as nice a
group of documentation as any

615
00:31:26.050 --> 00:31:28.510
open source project I've ever
seen. Thank you very much.

616
00:31:28.510 --> 00:31:31.030
It's probably taken me as
long as the actual software

617
00:31:31.030 --> 00:31:34.600
today. Well, it absolutely shows
and I hope that people

618
00:31:34.600 --> 00:31:36.940
who are listening, perhaps if
you know someone who has

619
00:31:36.940 --> 00:31:40.330
ALS or motor neuron, that
you spread the word and

620
00:31:40.690 --> 00:31:43.240
also spread the word that
Julius is not alone in

621
00:31:43.240 --> 00:31:46.660
this. He's got people helping
out, but largely this is

622
00:31:46.660 --> 00:31:48.490
a one man deal. And
I'm sure that he would

623
00:31:48.490 --> 00:31:51.190
appreciate the help the sponsorship
in any way at all

624
00:31:51.190 --> 00:31:54.070
that, that you can thanks
a lot for chatting with

625
00:31:54.070 --> 00:31:57.580
me today. Thank you, Scott.
This has been another episode

626
00:31:57.580 --> 00:31:59.860
of Hanselminutes and we'll see
you again next week.

