WEBVTT FILE

1
00:00:12.050 --> 00:00:16.640
From handsome and it's dot
com is Hansel minutes, a

2
00:00:16.640 --> 00:00:20.960
weekly discussion with web developer
and technologists. Scott Hanselman hosted

3
00:00:20.960 --> 00:00:25.700
by Carl Franklin. This is Lawrence Ryan
announcing show number one 34.

4
00:00:25.820 --> 00:00:31.730
Recorded live Wednesday, October 8th, 2008. Support
for Hanselman it's just provided

5
00:00:31.730 --> 00:00:35.510
by Tellerik rad controls and
the most comprehensive suite of

6
00:00:35.510 --> 00:00:46.850
components for windows forms and
asp.net web applications online@wwwdottelerikdotcomandby.net developers

7
00:00:46.850 --> 00:00:51.230
journal, the world's leading that
net developer magazine online at

8
00:00:51.260 --> 00:00:56.210
www dot <inaudible> dot com.
In this episode, Scott talks

9
00:00:56.210 --> 00:01:00.050
with Jeff Atwood, Jeff Dallas,
and Jared Dickson from stack

10
00:01:00.050 --> 00:01:05.150
overflow.com. This is Scott Hanselman,
and this is another episode

11
00:01:05.150 --> 00:01:07.040
of Hansel minutes, and I
have the pleasure to sit

12
00:01:07.040 --> 00:01:11.210
down today with Jeff Atwood,
just and Jared Dickson from

13
00:01:11.330 --> 00:01:16.280
the, the currently Epic and
rising stack overflow.com. Thanks guys

14
00:01:16.280 --> 00:01:18.290
for taking the time to
chat with me today. You're

15
00:01:18.290 --> 00:01:22.440
welcome. Our pleasure. So how's
it going, stack overflow. It's

16
00:01:23.360 --> 00:01:25.100
gotten this big and wonderful
as you thought it was.

17
00:01:25.760 --> 00:01:28.490
I think we're still recovering
from the idea that it's

18
00:01:28.490 --> 00:01:32.420
actually working. Like it hasn't
fallen over because we did

19
00:01:32.960 --> 00:01:35.870
get slashed, dotted, all those
Slashdot. Isn't quite the monster

20
00:01:35.870 --> 00:01:39.380
they used to be. Isn't
that funny? I got slashed

21
00:01:39.380 --> 00:01:42.710
out twice last month and
both times didn't notice it.

22
00:01:43.490 --> 00:01:45.380
Not only because I don't
read slash dot, but because

23
00:01:45.380 --> 00:01:47.090
it didn't really change the
traffic on my site very

24
00:01:47.090 --> 00:01:49.640
much. Right? Yeah. It's not
quite the monitor it used

25
00:01:49.640 --> 00:01:51.770
to be, but there was
a lot of traffic on

26
00:01:51.770 --> 00:01:53.930
that first day. In fact,
that first day is still

27
00:01:53.930 --> 00:01:56.900
a peak we haven't gotten
back to. So it's sort

28
00:01:56.900 --> 00:01:59.840
of like really mountain. Well,
because there's just so much

29
00:01:59.870 --> 00:02:03.470
publicity around the first day,
but we're slowly inching up,

30
00:02:03.470 --> 00:02:05.840
but it's just, there was
a lot of traffic. So

31
00:02:05.840 --> 00:02:07.910
if we were going to
fall over, we would have

32
00:02:07.910 --> 00:02:10.040
definitely fallen over on the
first day. And I think

33
00:02:10.310 --> 00:02:15.020
I'm just impressed that we
didn't, frankly. That's awesome. So,

34
00:02:15.200 --> 00:02:17.450
so let's, let's back up
and for those who haven't

35
00:02:17.450 --> 00:02:21.440
gone to stack overflow.com, what's
the, what's the concept? So

36
00:02:21.440 --> 00:02:24.860
the concept of stack overflow,
it's something that me and

37
00:02:24.860 --> 00:02:27.290
Joel, Spolsky sort of a
joint venture that we put

38
00:02:27.290 --> 00:02:30.260
together and it's based on
really a couple of things.

39
00:02:30.860 --> 00:02:34.550
One of the largest reasons
we went after this was

40
00:02:34.550 --> 00:02:37.430
we felt like there's this
site whose name rhymes with

41
00:02:38.030 --> 00:02:41.450
expert sex change that we
think is kind of a

42
00:02:41.450 --> 00:02:43.370
little bit evil in the
way that they approach the

43
00:02:43.370 --> 00:02:46.670
world in that they're letting
people ask and answer these

44
00:02:46.670 --> 00:02:49.460
questions, but they have this
sort of flying the way

45
00:02:49.460 --> 00:02:51.470
that they present the information
and they feel like they're

46
00:02:51.470 --> 00:02:53.480
trying to trick you every
time you go there. And

47
00:02:54.110 --> 00:02:57.020
it just feels very much
like used car salesman, you

48
00:02:57.020 --> 00:03:00.190
Google for stuff, you find
them as the answer and

49
00:03:00.190 --> 00:03:02.710
You can see part of
the answer in the Google

50
00:03:02.740 --> 00:03:05.320
index, then you click and
then they lie and they

51
00:03:05.320 --> 00:03:07.890
say pass, Right. Well, you
can actually scroll down. That's

52
00:03:07.890 --> 00:03:10.440
the trick of that site
is if you scroll all

53
00:03:10.440 --> 00:03:13.080
the way down, then the
information is in fact there.

54
00:03:13.410 --> 00:03:16.230
And there are some, although
we're also finding that that

55
00:03:16.230 --> 00:03:18.450
particular site tends to be
a little bit more, it

56
00:03:18.450 --> 00:03:21.510
focused, there are some programming
questions there and you will

57
00:03:21.510 --> 00:03:23.430
get hits. Like I do
get organic hits on them.

58
00:03:23.820 --> 00:03:25.290
And it's the sort of
thing. Whenever you see those

59
00:03:25.740 --> 00:03:28.650
links in the result, you
sort of grown to yourself,

60
00:03:28.680 --> 00:03:30.540
you're like, Oh great. Right.
You know, there might be

61
00:03:30.540 --> 00:03:33.600
something there, but clicking on
it just as an exercise

62
00:03:33.600 --> 00:03:35.760
in futility, most of the
time it makes you sort

63
00:03:35.760 --> 00:03:38.070
of hate yourself when you
go there. And we kind

64
00:03:38.070 --> 00:03:41.160
of wanted a site like
that for programmers, where when

65
00:03:41.160 --> 00:03:42.990
you go there, you didn't
hate yourself and maybe you

66
00:03:42.990 --> 00:03:47.760
actually even enjoyed going there.
And the other thing driving

67
00:03:47.760 --> 00:03:49.170
it is I feel like
there's a lot of really

68
00:03:49.170 --> 00:03:53.670
talented programmers who don't blog
and they don't really have

69
00:03:53.670 --> 00:03:56.640
an online presence, like say,
Scott, you and I do,

70
00:03:57.210 --> 00:03:59.250
you know, where we talk
about we're, we're noisy, right?

71
00:03:59.250 --> 00:04:01.860
We're afraid, noisy. A lot
of programmers are very quiet

72
00:04:02.310 --> 00:04:05.460
and yet they have, you
know, really great information and

73
00:04:05.460 --> 00:04:07.380
we want to sort of
unlock that and make it

74
00:04:07.380 --> 00:04:10.380
really easy for them to
come in and participate and

75
00:04:11.100 --> 00:04:14.820
ask and answer questions in
an extremely low friction way.

76
00:04:15.240 --> 00:04:17.040
And by that, I mean,
you don't even have to

77
00:04:17.250 --> 00:04:19.410
log in. So it's a
little bit like Wikipedia in

78
00:04:19.410 --> 00:04:23.610
that regard. You're trying to
create the developer's third place.

79
00:04:24.060 --> 00:04:27.000
Maybe, maybe, you know, about
the theory, the third place,

80
00:04:27.000 --> 00:04:30.480
right work. And then either
church or bar, this is

81
00:04:30.480 --> 00:04:32.670
the third place. Well, I
sort of got tired of

82
00:04:32.670 --> 00:04:34.950
telling people to blog too.
It was like, okay, you

83
00:04:34.950 --> 00:04:37.800
should just start a blog.
And you realize eventually that,

84
00:04:38.100 --> 00:04:39.840
although that has worked really
well for you and I,

85
00:04:39.850 --> 00:04:43.290
and a bunch of other
people, it's really not just

86
00:04:43.590 --> 00:04:45.750
something everybody's going to pick
up. It's not really something

87
00:04:45.750 --> 00:04:47.850
that's in everybody's DNA to
actually go out and start

88
00:04:47.850 --> 00:04:50.490
a blog and keep writing
every week or every day.

89
00:04:51.420 --> 00:04:55.080
But there's other ways they
can participate and stack overflow

90
00:04:55.080 --> 00:04:57.330
is, is kinda like that.
I really do view stack

91
00:04:57.330 --> 00:05:02.040
overflow as my coding horror
2.0, it's like coding horror,

92
00:05:02.040 --> 00:05:05.190
where instead of being a
commoner on my post, you

93
00:05:05.190 --> 00:05:07.260
can own it. Right. You
can go in and ask

94
00:05:07.260 --> 00:05:09.570
a question that you own.
It's like your little blog

95
00:05:09.600 --> 00:05:12.840
posts and it can be
maintained, you know, has aspects

96
00:05:12.840 --> 00:05:15.990
of Wikipedia has aspects of,
you know, voting systems like

97
00:05:15.990 --> 00:05:17.490
Digg and Reddit where you
can vote things up and

98
00:05:17.490 --> 00:05:21.420
down. And you know, we're
trying to synthesize all these

99
00:05:21.420 --> 00:05:24.060
things together and it's sort
of the end result of

100
00:05:24.060 --> 00:05:27.060
my experience online of sort
of a place I would

101
00:05:27.060 --> 00:05:29.280
like to participate in. Right
where I'm just a peer.

102
00:05:29.280 --> 00:05:31.230
I'm not like the guy
who owns it, you're on

103
00:05:31.230 --> 00:05:36.040
my blog. It's like something
we collaboratively build together. It's

104
00:05:36.060 --> 00:05:38.910
like a, it's like a
community garden. Yeah. I mean,

105
00:05:38.910 --> 00:05:42.690
I've noticed that there's a,
not a lot of chuff

106
00:05:42.720 --> 00:05:44.970
around the side. I mean,
people are tending to their

107
00:05:44.970 --> 00:05:49.110
questions and I like that
there are a thousand different

108
00:05:49.110 --> 00:05:52.560
ways to find the same
information. And it's all where

109
00:05:52.560 --> 00:05:54.480
you think it would be.
You click on your name,

110
00:05:54.480 --> 00:05:56.460
it goes to your profile.
You go down. It says,

111
00:05:56.490 --> 00:05:59.300
Oh, here's all the questions
that you've ever asked. You

112
00:05:59.300 --> 00:06:01.130
go to see what you've
ever voted on. I mean,

113
00:06:01.130 --> 00:06:07.040
you're tracking everything, right? You
throw nothing away and throw

114
00:06:07.040 --> 00:06:08.890
nothing away because it's all
valuable, Right? This is a

115
00:06:08.890 --> 00:06:11.260
programmer site. I mean, we
built it like, you know,

116
00:06:11.290 --> 00:06:14.350
programmers love data, right? Programmers
love nothing more than going

117
00:06:14.350 --> 00:06:16.540
to like task manager. And
I have this sort of

118
00:06:16.540 --> 00:06:18.880
running joke of what our
programmers do when they encounter

119
00:06:18.880 --> 00:06:21.850
a new program, they go
to the options dialogue and

120
00:06:21.850 --> 00:06:23.590
they see what's available. That's
like the first thing I

121
00:06:23.590 --> 00:06:24.640
do, it's like, Oh, I
want to go to the

122
00:06:24.640 --> 00:06:27.100
options dialog. That's how I
judge a program. Like when

123
00:06:27.100 --> 00:06:29.320
I installed Chrome, I was
just blown away by the

124
00:06:29.320 --> 00:06:32.020
fact that my browser had
like a task manager. I

125
00:06:32.020 --> 00:06:34.270
was so sold. You know,
the minute I saw that

126
00:06:34.270 --> 00:06:36.190
was like, Oh my God,
a task manager, they totally

127
00:06:36.190 --> 00:06:40.210
get it. Right. And Nick
overflow is a cipher program.

128
00:06:40.210 --> 00:06:42.130
So we have lots and
lots of metrics and like

129
00:06:42.130 --> 00:06:43.930
ways you can drill down
into the data because that's

130
00:06:43.930 --> 00:06:46.330
fun for programmers, right? I
mean, we love that crap.

131
00:06:46.450 --> 00:06:49.480
That's what we do. So
it's very much for a

132
00:06:49.480 --> 00:06:52.390
specific audience. One way we
want to avoid sort of

133
00:06:52.390 --> 00:06:55.000
the Yahoo answers problem. And
we did a lot of

134
00:06:55.000 --> 00:06:57.310
research on related Q and
a sites before we started

135
00:06:57.310 --> 00:07:00.970
this. And one pitfall we
sound found with sites like

136
00:07:00.970 --> 00:07:04.030
this is the more broad
you go in the audience,

137
00:07:04.060 --> 00:07:06.910
the worse it gets. So
we're trying to stay very

138
00:07:06.910 --> 00:07:09.610
laser focused to software developers.
We're trying not trying to

139
00:07:09.610 --> 00:07:12.310
meet everyone's needs in the
world. Like all the, it

140
00:07:12.310 --> 00:07:15.700
people, you know, internal wikis,
things like that. We're just

141
00:07:15.700 --> 00:07:19.150
trying to meet the average
programmers needs with the site

142
00:07:19.300 --> 00:07:22.840
and stay focused on that
audience. Don't you think it's

143
00:07:22.840 --> 00:07:25.300
getting a little sloppy on
the homepage though, because you've

144
00:07:25.300 --> 00:07:28.270
got Ruby guys next to
Pearl guys next to mainframe

145
00:07:28.270 --> 00:07:30.940
programmers. And I'm not, I
don't, I don't want to

146
00:07:30.940 --> 00:07:32.710
answer those questions. I don't
want to read those questions.

147
00:07:32.710 --> 00:07:35.440
I want to, I want
a homepage. That's customized. We

148
00:07:35.440 --> 00:07:38.140
are working on customization and
I think that's becoming an

149
00:07:38.140 --> 00:07:40.210
increasing issue now at the
sites, you know, getting more

150
00:07:40.210 --> 00:07:43.180
and more people attracted to
it. But honestly, part of

151
00:07:43.180 --> 00:07:45.190
it, I think it's a
little bit of an attraction.

152
00:07:46.270 --> 00:07:47.770
One of the things I
liked about my blog coding

153
00:07:47.770 --> 00:07:50.920
horror is that it tends
to attract people, that program

154
00:07:50.920 --> 00:07:53.890
and a variety of different
things. It's not necessarily like

155
00:07:53.890 --> 00:07:56.770
a Microsoft centric side of
like I'm in Microsoft developer,

156
00:07:57.040 --> 00:08:00.100
here's my Microsoft tools, but
it attracted people from really

157
00:08:00.100 --> 00:08:04.000
all walks of life in
programming. And I loved that

158
00:08:04.000 --> 00:08:05.920
aspect of it. And there's
a little bit of that

159
00:08:05.920 --> 00:08:08.110
we're really shooting for in
stack overflow. We're, we're, we're

160
00:08:08.110 --> 00:08:11.860
trying to avoid sort of
being the ghetto of like,

161
00:08:11.890 --> 00:08:13.810
Oh, this is the SQL
server ghetto, or this is

162
00:08:13.810 --> 00:08:16.600
the, you know, C sharp
ghetto where we just do

163
00:08:16.600 --> 00:08:18.530
C sharp. And if you
post a VB question, we're

164
00:08:18.530 --> 00:08:20.680
going to make fun of
you or it's not, you

165
00:08:20.680 --> 00:08:22.750
know, the correct language. So
I think part of it

166
00:08:22.750 --> 00:08:25.960
is really rubbing shoulders with
programmers from other walks of

167
00:08:25.960 --> 00:08:29.830
life, you know, not totally
because obviously I can't answer

168
00:08:29.890 --> 00:08:32.890
Pearl questions. I don't really
know how about, here's a

169
00:08:32.890 --> 00:08:37.240
thought, You know, I could
see you getting, getting the

170
00:08:37.240 --> 00:08:40.030
ghetto ization of stack overflow.
If you simply let me

171
00:08:40.030 --> 00:08:42.190
as a user come on
and say, I only want

172
00:08:42.190 --> 00:08:46.120
to see asp.net stuff. Right.
And then, but if you

173
00:08:46.120 --> 00:08:50.020
had an option, if you
had a, a, a, a

174
00:08:50.020 --> 00:08:53.140
slider bar that let me
select how much leakage I

175
00:08:53.140 --> 00:08:56.310
wanted leakage is probably not
the best user interface word,

176
00:08:56.310 --> 00:08:58.800
but you know what I'm
saying? I want, I want

177
00:08:58.920 --> 00:09:01.920
only asp.net, but I'll have
10% leakage. So let other

178
00:09:01.920 --> 00:09:05.930
stuff randomly leak into my
own page. Right. That would

179
00:09:05.930 --> 00:09:08.630
be cool. Right? No, definitely
customization is, is sort of

180
00:09:08.630 --> 00:09:11.840
the great undiscovered country for
us. And we're getting deeply

181
00:09:11.840 --> 00:09:14.840
into it now because we
realized that. And particularly with

182
00:09:14.840 --> 00:09:16.940
regards to answering questions, like
it's fun for me to

183
00:09:16.940 --> 00:09:19.820
browse these questions and read
them sometimes. And it's surprising

184
00:09:19.820 --> 00:09:22.010
how people would just come
up with really interesting topics

185
00:09:22.010 --> 00:09:24.860
across a variety of different
languages that are intriguing. Like,

186
00:09:24.860 --> 00:09:26.600
it's kind of just fun
to read what people are

187
00:09:26.600 --> 00:09:29.540
posting on some level, but
in terms of actually answering

188
00:09:29.540 --> 00:09:31.460
stuff, like I said, I
don't know Pearl. So if

189
00:09:31.460 --> 00:09:33.110
you have a Pearl question,
I mean, I may read

190
00:09:33.110 --> 00:09:34.370
it. It might be fun,
but I'm not going to

191
00:09:34.370 --> 00:09:37.370
be able to answer it.
So in terms of showing

192
00:09:37.370 --> 00:09:40.040
unanswered questions, that's the first
area we're going to get

193
00:09:40.040 --> 00:09:43.280
into really hardcore customization, where
we're going to try to

194
00:09:43.280 --> 00:09:46.220
show you only things that
you have a track record

195
00:09:46.520 --> 00:09:50.090
of participating in, right? Like
if you've posted 50 answers

196
00:09:50.090 --> 00:09:52.730
to asp.net questions, then, well,
that's what we're going to

197
00:09:52.730 --> 00:09:54.350
show you. We're going to
show you things, dealing with

198
00:09:54.380 --> 00:09:58.070
asp.net in terms of unanswered.
And then that's gonna start

199
00:09:58.070 --> 00:10:00.980
bleeding over into other areas
of the site from the

200
00:10:00.980 --> 00:10:03.530
unanswered page. In fact, that's
something that Jeff is working

201
00:10:03.530 --> 00:10:05.570
on at the moment. It's
gonna be really interesting to

202
00:10:05.570 --> 00:10:07.910
see what the longevity is,
whether, I mean, cause you

203
00:10:07.910 --> 00:10:12.440
know, with, with, with games
like, like this and games

204
00:10:12.440 --> 00:10:16.760
like Guild Wars, there's the
initial excitement, the frantic leveling

205
00:10:16.760 --> 00:10:20.960
up and then the plateauing
and then the depression, how

206
00:10:20.960 --> 00:10:23.450
to push this past that,
you know, I mean I'm

207
00:10:23.450 --> 00:10:27.170
a level seven, I've got
all the gold right badges,

208
00:10:27.620 --> 00:10:29.450
right. Then, then how do
you keep them interested in

209
00:10:29.450 --> 00:10:31.940
the way you keep them
interested is it has to

210
00:10:31.970 --> 00:10:33.650
leak into their life. And
there I am with leakage

211
00:10:33.650 --> 00:10:35.520
again, it has to leak
into the live was there,

212
00:10:35.520 --> 00:10:37.580
they're on Google and they
start searching for it. And

213
00:10:37.580 --> 00:10:41.090
when you start showing up
as some large percentage of

214
00:10:41.090 --> 00:10:44.060
answers, then it gets interesting
and then stack overflow really

215
00:10:45.170 --> 00:10:47.420
gets, it, gets it sneaks
into their lives from other

216
00:10:47.420 --> 00:10:50.960
directions. Well, one thing that
I've found in participating in

217
00:10:50.960 --> 00:10:53.990
sort of online forums was
that those were very much

218
00:10:53.990 --> 00:10:55.880
a game. Anyway. I mean
there was no levels, there

219
00:10:55.880 --> 00:10:58.550
was no score, but I
realized that at some level

220
00:10:58.760 --> 00:11:01.640
almost everything you do online
is kind of like a

221
00:11:01.640 --> 00:11:04.040
game. I mean, maybe this
is just a larger metaphor

222
00:11:04.040 --> 00:11:06.680
for life, but there's some
aspect of it where you're

223
00:11:06.680 --> 00:11:09.830
playing this game. Right. And
we're just making that a

224
00:11:09.830 --> 00:11:13.550
little more explicit and to
be clear, everything that's in

225
00:11:13.550 --> 00:11:15.800
stack overflow, that's, you know,
game like in terms of

226
00:11:15.800 --> 00:11:18.530
reputation, scores, and badges and
things like that are really

227
00:11:18.530 --> 00:11:22.270
there to drive good behavior,
right? They're not in there

228
00:11:22.270 --> 00:11:24.050
in an arbitrary way where
we say, okay, we're just

229
00:11:24.050 --> 00:11:25.940
gonna give you points and
you're gonna earn points. You

230
00:11:25.940 --> 00:11:29.270
get points. Here's an example.
So how do you actually

231
00:11:29.270 --> 00:11:32.630
get reputation? It's very much
like Google's page rank system

232
00:11:32.930 --> 00:11:36.710
in that you don't get
reputation yourself. Other people give

233
00:11:36.710 --> 00:11:38.720
it to you. That's the
only way to get reputation

234
00:11:38.720 --> 00:11:41.750
our system with, with very,
very minor exceptions. So for

235
00:11:41.750 --> 00:11:43.820
you to get reputation, other
people have to like your

236
00:11:43.820 --> 00:11:47.510
stuff. It has to be
validated by other people, right?

237
00:11:47.510 --> 00:11:51.560
Whereas in a traditional, you
know, multiplayer game, like world

238
00:11:51.560 --> 00:11:54.430
of Warcraft, you can get
like a, you can level

239
00:11:54.430 --> 00:11:57.370
up by just killing, you
know, random things on the

240
00:11:57.370 --> 00:12:00.430
site, right? You could just
sit there and kill rats

241
00:12:00.670 --> 00:12:02.410
for days and days and
days. And there's a point

242
00:12:02.410 --> 00:12:05.770
of diminishing return, but eventually
you will level up on

243
00:12:05.770 --> 00:12:09.070
our site. You know, you
can't really kill like whore,

244
00:12:09.070 --> 00:12:11.860
frats or whatever other people
have to like what you're

245
00:12:11.860 --> 00:12:14.710
doing and click up on
it to actually give you

246
00:12:14.720 --> 00:12:17.860
reputation. So it's sort of
very much a positive feedback

247
00:12:17.860 --> 00:12:20.650
loop driven by, you know,
the community, the other people

248
00:12:20.650 --> 00:12:23.020
liking what you're posting and
finding it helpful and interesting

249
00:12:23.020 --> 00:12:25.930
and useful. So we hope
it is gambling, but I

250
00:12:25.930 --> 00:12:29.050
do want to be clear
that, you know, the reputation

251
00:12:29.050 --> 00:12:31.180
comes from other people. And
ultimately we're trying to do

252
00:12:31.180 --> 00:12:33.580
is, is, you know, go
stand shoulder to shoulder with

253
00:12:33.580 --> 00:12:36.970
your peers and post cool
and interesting things that they

254
00:12:36.970 --> 00:12:40.570
react positively to. Cool. Let's
take the conversation into a

255
00:12:40.570 --> 00:12:42.940
more technical direction and see
if we can hear from

256
00:12:42.940 --> 00:12:46.000
Jeff and Jared. So how
long did it take you

257
00:12:46.000 --> 00:12:47.890
to build this and what
did you build it in?

258
00:12:47.890 --> 00:12:51.040
Maybe one of the guys
could share the, the laundry

259
00:12:51.040 --> 00:12:53.320
list of technology. In fact,
I think Jared should take

260
00:12:53.320 --> 00:12:56.230
that because Jared did so
much really great work initially

261
00:12:56.230 --> 00:12:59.210
getting the project up and
running. So Jared, do you

262
00:12:59.210 --> 00:13:01.120
want to talk about just
starting out and how we

263
00:13:01.120 --> 00:13:05.040
did it? Sure. Actually, whenever
you came to me, you

264
00:13:05.040 --> 00:13:08.820
said, Hey, why don't we
try this new MVC Espina

265
00:13:08.820 --> 00:13:11.760
NVC framework? You know, it
was like the first preview

266
00:13:11.760 --> 00:13:14.370
was out and you know,
I'd been working on doing

267
00:13:14.370 --> 00:13:17.400
a lot with Ruby on
rails just personally. And I

268
00:13:17.400 --> 00:13:20.670
really wanted to, you know,
use an MVC framework. So

269
00:13:20.820 --> 00:13:25.620
we started out going with
that direction. And after using

270
00:13:25.620 --> 00:13:29.730
web forms for six, seven
years, I've really wanted to

271
00:13:29.730 --> 00:13:32.310
change. And it's like a
breath of fresh air working

272
00:13:32.310 --> 00:13:38.310
with the ASP net MVC
framework. And so we sort

273
00:13:38.310 --> 00:13:40.920
of just on the front
end with that and the,

274
00:13:41.510 --> 00:13:45.210
the back end we use
SQL server 2005. And that

275
00:13:45.210 --> 00:13:47.280
was, that was nice to
use. I've been using Oracle

276
00:13:47.280 --> 00:13:50.100
for so long. So I
guess it took us about

277
00:13:51.240 --> 00:13:55.320
three, four months to code
most of the sites. So,

278
00:13:55.680 --> 00:14:00.390
and, you know, working with
the different preview releases, that's

279
00:14:00.390 --> 00:14:04.710
been a real good challenge.
And how did you conceive

280
00:14:04.710 --> 00:14:06.300
me when you can see
this? Was this all? I

281
00:14:06.300 --> 00:14:09.570
mean, how did the design
process go? Was it Jeff?

282
00:14:09.570 --> 00:14:12.630
Did you visualize this in
your, in your head and

283
00:14:12.630 --> 00:14:14.460
then draw it on a
napkin? And then you've got

284
00:14:14.460 --> 00:14:16.860
a designer is one of
his, one of you three

285
00:14:16.930 --> 00:14:20.640
a designer. No. So yeah,
design was one of the

286
00:14:20.640 --> 00:14:24.630
big challenges. So Joel and
I sort of had ideas,

287
00:14:24.840 --> 00:14:28.440
you know, Joel, I think
had his.net discussion group, his

288
00:14:28.440 --> 00:14:31.830
Joel and software discussion boards,
which occasionally I'll get organic

289
00:14:31.830 --> 00:14:33.900
kids to those as well
when I'm searching for something

290
00:14:33.900 --> 00:14:36.120
on Google. So I was
aware of those. I wasn't

291
00:14:36.120 --> 00:14:39.630
really participating in them, but
they're extremely bare bones like

292
00:14:39.990 --> 00:14:42.150
by design and Joel has
a whole post about that.

293
00:14:42.150 --> 00:14:44.640
But Joel and I had
some really clear thoughts about

294
00:14:44.970 --> 00:14:47.130
like how you build a
community and sort of the

295
00:14:47.130 --> 00:14:50.010
ways you combine these features
together to make it interesting

296
00:14:50.010 --> 00:14:52.400
and useful. So I think
that was a lot of

297
00:14:52.400 --> 00:14:53.870
the initial design was Joel
and I just were going

298
00:14:53.870 --> 00:14:56.180
back and forth. And then
Jared and I did a

299
00:14:56.180 --> 00:14:58.310
ton of research. We spent
a week just going to

300
00:14:58.310 --> 00:15:00.650
like every Q and a
site on the internet. Like

301
00:15:00.800 --> 00:15:07.690
almost literally, Jared, you wanna
talk About that phase? Yeah.

302
00:15:07.690 --> 00:15:10.120
Whenever we, we would send
each other links, you know,

303
00:15:10.180 --> 00:15:12.940
some of the hilarious questions,
you know, Jeff had mentioned

304
00:15:12.940 --> 00:15:16.360
earlier of, you know, if
you had to keep a

305
00:15:16.360 --> 00:15:19.960
laser like focus on, you
know, software developers, because like

306
00:15:19.960 --> 00:15:22.990
for instance, Yahoo answers, like
people were asking crazy questions,

307
00:15:22.990 --> 00:15:27.790
like how is the Babby
formed? You know, It's really

308
00:15:27.790 --> 00:15:31.060
amazing. Yeah. Who answered that?
It's just disturbing how weird

309
00:15:31.060 --> 00:15:34.270
it gets so rapidly. And
because the topics are so

310
00:15:34.270 --> 00:15:36.610
broad, you can ask literally
anything. And when you can

311
00:15:36.610 --> 00:15:40.210
ask anything, it's just sort
of craziness and sues. And

312
00:15:40.210 --> 00:15:42.370
the example I like to
use is YouTube, where if

313
00:15:42.370 --> 00:15:44.500
you have a really popular
YouTube video, the comments are

314
00:15:44.500 --> 00:15:47.320
gonna be just crap, right.
But here's the thing. If

315
00:15:47.320 --> 00:15:50.260
you find a YouTube video
that's really narrow, you'll actually

316
00:15:50.260 --> 00:15:53.140
find some really useful comments
there. It's surprising there's this,

317
00:15:53.170 --> 00:15:56.080
there's like two P two
classes of usage around YouTube.

318
00:15:56.290 --> 00:15:57.970
One is sort of the
generic, you know, look at

319
00:15:57.970 --> 00:16:01.120
a woman, scantily clad woman
dancing video. And there's like

320
00:16:01.120 --> 00:16:04.780
these super narrow videos. So
it only maybe 10,000 people

321
00:16:04.780 --> 00:16:07.330
in the, in the world
to care about. And those

322
00:16:07.330 --> 00:16:10.360
have really good comments. And
our thought was, Hey, let's

323
00:16:10.360 --> 00:16:15.430
have a world of increased,
incredibly narrow technical problems that

324
00:16:15.430 --> 00:16:18.910
only a hundred thousand, 2000
people in the world would

325
00:16:18.910 --> 00:16:21.100
care about. And that's sort
of how you get the

326
00:16:21.100 --> 00:16:23.980
signal to noise ratio up
is because the signal is

327
00:16:23.980 --> 00:16:26.710
so narrow. That was sort
of the thing we found

328
00:16:26.710 --> 00:16:28.690
there. And it's amazing how
many of these sites there

329
00:16:28.690 --> 00:16:32.350
are, there's like answer bag
with the answers, Jared and

330
00:16:32.350 --> 00:16:34.060
I were finding all these
sites. We had no idea.

331
00:16:34.270 --> 00:16:36.850
I've never heard of these
sites. That's amazing. I've never

332
00:16:36.850 --> 00:16:39.280
heard of these sites of
these just really boutique type

333
00:16:39.280 --> 00:16:42.280
things. No, I think they
positioned themselves as, you know,

334
00:16:42.490 --> 00:16:46.720
the world's interface for asking
questions and you know, a

335
00:16:46.720 --> 00:16:48.910
lot of them have a
pretty large community and we

336
00:16:48.910 --> 00:16:50.800
agree. We were surprised we
had never heard of many

337
00:16:50.800 --> 00:16:52.210
of these sites, but we
were trying to just get

338
00:16:52.210 --> 00:16:54.310
ideas about, you know, how
do you run a Q

339
00:16:54.310 --> 00:16:57.190
and a site and how
are people currently doing it?

340
00:16:57.190 --> 00:17:00.400
And some of the things
that running into. So, you

341
00:17:00.400 --> 00:17:02.050
know, that that was a
good research phase. And that

342
00:17:02.050 --> 00:17:05.170
lasted, I would say a
week to two weeks. And

343
00:17:05.350 --> 00:17:06.790
you know, the rest of
it was just taking our

344
00:17:06.790 --> 00:17:09.150
collective experience. Certainly we've been
to like the MSC and

345
00:17:09.160 --> 00:17:12.220
forums and other sort of
programming Hangouts so that there

346
00:17:12.220 --> 00:17:17.470
are sure one of the
things that's really just strikes

347
00:17:17.470 --> 00:17:19.240
me. And maybe it's just
me about the site was

348
00:17:19.240 --> 00:17:22.300
that somebody made a conscious
decision to use all text

349
00:17:22.300 --> 00:17:25.840
for everything so that I
hover over virtually any element

350
00:17:25.840 --> 00:17:28.000
on the screen. And I
get a little tool tip,

351
00:17:28.900 --> 00:17:34.720
right. That just seems really
obvious, but also really clever

352
00:17:34.720 --> 00:17:38.800
because it gives you extra
information. Anytime you pause and

353
00:17:38.800 --> 00:17:40.990
go, Oh, that's what that
is. Because the tool tips

354
00:17:40.990 --> 00:17:45.880
pops up. Some dogma that
came from on high that

355
00:17:45.880 --> 00:17:47.590
really came out of the
feedback. So one thing I

356
00:17:47.590 --> 00:17:50.520
did early on was I
emailed everybody. I can think

357
00:17:50.520 --> 00:17:54.630
of that. I sort of
respected in terms of they

358
00:17:54.630 --> 00:17:57.120
had built sites like this,
right. Or they had done

359
00:17:57.120 --> 00:17:59.970
things on the internet that
were really impressive, that they

360
00:17:59.970 --> 00:18:02.610
had sort of created a
site doing something that I

361
00:18:02.610 --> 00:18:04.650
liked. And I said, you
know, please take a look

362
00:18:04.650 --> 00:18:07.140
at this. And I said,
email me directly. And I

363
00:18:07.140 --> 00:18:10.730
took those feedback extremely seriously
because these are people that

364
00:18:10.740 --> 00:18:12.570
would have a track record
of building things on the

365
00:18:12.570 --> 00:18:14.820
internet, which I really drawn.
I mean, I have my

366
00:18:14.820 --> 00:18:16.860
blog and stuff, but I
haven't really built a site

367
00:18:17.340 --> 00:18:18.780
and put it out there.
And one of the key

368
00:18:18.780 --> 00:18:21.330
pieces of feedback I got
back was, you know, use

369
00:18:21.350 --> 00:18:24.330
tons of tool tip text.
And I really took that

370
00:18:24.330 --> 00:18:26.340
to heart. And I tried
to do it in tons

371
00:18:26.340 --> 00:18:29.610
of places throughout the site.
So really a lot of

372
00:18:29.610 --> 00:18:31.980
what we do is really
driven by, by feedback, not

373
00:18:31.980 --> 00:18:35.340
everything, but certainly we, we
try to sort of fold

374
00:18:35.340 --> 00:18:38.250
in all the good ideas
that we're getting from people.

375
00:18:38.250 --> 00:18:39.690
And also that we see
on other sites on the

376
00:18:39.690 --> 00:18:43.460
internet. Hi, this is Scott
Hanselman with a word from

377
00:18:43.460 --> 00:18:46.130
our sponsor. Do you know
how to build web 2.0

378
00:18:46.130 --> 00:18:49.880
Ajax applications with web 1.0
components? You really can't. If

379
00:18:49.880 --> 00:18:52.280
you want to do the
next generation web applications you'll

380
00:18:52.280 --> 00:18:54.860
need next generation components. Just
like the ones that our

381
00:18:54.860 --> 00:18:57.830
friends at Telerik have got
their rad controls for ESPN

382
00:18:57.830 --> 00:19:00.650
at Ajax. It's a huge
pack of web controls built

383
00:19:00.650 --> 00:19:05.210
on top of asp.net. Ajax.
That'll add previously impossible performance

384
00:19:05.210 --> 00:19:08.990
interactivity to your next project.
The new controls mirror, the

385
00:19:08.990 --> 00:19:13.400
Ajax API from asp.net. So
development is really straightforward. The

386
00:19:13.400 --> 00:19:15.650
client scripts are shared. So
loading time is not a

387
00:19:15.650 --> 00:19:18.050
problem. If you just set
a couple of properties and

388
00:19:18.050 --> 00:19:20.300
you'll be able to automatically
bind a web services for

389
00:19:20.300 --> 00:19:24.190
a really efficient operation, the
new rad editor from ESPN

390
00:19:24.230 --> 00:19:27.770
Ajax, Telerik loads up to
four times faster than before.

391
00:19:27.980 --> 00:19:30.410
And the new rad grid
handles thousands of records and

392
00:19:30.410 --> 00:19:33.260
just milliseconds, but as always,
it's best to try for

393
00:19:33.260 --> 00:19:37.220
yourself. So you can visit
<inaudible> dot com slash ASP,

394
00:19:37.220 --> 00:19:40.880
net Ajax, and download a
trial. Thanks a lot. Now

395
00:19:40.880 --> 00:19:43.760
I'm looking at the homepage
here and I'm seeing recent

396
00:19:43.760 --> 00:19:49.160
questions, recent tags, recent badges.
And then within each question

397
00:19:49.160 --> 00:19:52.400
you've got, how long ago
it happened, who did it

398
00:19:53.060 --> 00:19:56.960
then statistics on that particular
individual? What is the shape

399
00:19:56.990 --> 00:20:00.020
of the data look like
on the homepage? How many

400
00:20:00.020 --> 00:20:04.100
queries are are happening here?
Are there dozen little queries

401
00:20:04.100 --> 00:20:06.710
or one Epic query with
a lot of, you know,

402
00:20:06.710 --> 00:20:09.980
what's the shape of this
data? We're doing a lot

403
00:20:09.980 --> 00:20:14.840
of queries we're using linked
to SQL as our underlying

404
00:20:14.900 --> 00:20:18.630
sort of Dow, I guess
you'd say I'm not, I,

405
00:20:18.630 --> 00:20:21.500
I tend to lean heavily
towards the database as model

406
00:20:21.500 --> 00:20:23.900
camp. I know this is
heresy to a lot of

407
00:20:23.900 --> 00:20:27.170
people, but Oh yeah. As,
as, as well as not

408
00:20:27.170 --> 00:20:30.880
learning C Yeah, yeah, exactly.
Not learning C but LinkedIn

409
00:20:30.880 --> 00:20:33.140
SQL is nice in that
regard because it's very lightweight.

410
00:20:33.200 --> 00:20:37.100
It's essentially almost like having
raw SQL in your application.

411
00:20:37.100 --> 00:20:39.500
And a lot of places
we do still have raw

412
00:20:39.540 --> 00:20:41.390
sequel in our app. Cause
I'm a little bit old

413
00:20:41.390 --> 00:20:43.400
school about that, but I
love link. I want to

414
00:20:43.400 --> 00:20:46.070
be clear link. You're saying
that you break the fourth

415
00:20:46.070 --> 00:20:48.010
wall and you just go
right down and you pull

416
00:20:48.010 --> 00:20:52.740
out ado.net in some spots.
Well, we use the link

417
00:20:52.740 --> 00:20:56.280
context. So DB dot execute
command, which is the link,

418
00:20:56.520 --> 00:21:00.120
you know, the accepted link
way. Yeah. But underneath it's

419
00:21:00.120 --> 00:21:02.220
still going to go and
it's going right to the

420
00:21:02.220 --> 00:21:04.560
database. Yeah, Yeah. In some
places we are, but in

421
00:21:04.560 --> 00:21:07.050
general, we're going through links.
So there's very little difference.

422
00:21:07.290 --> 00:21:11.520
So the homepage, for example,
we're doing some group inquiries,

423
00:21:11.550 --> 00:21:14.880
but we also found that
the way MVC works, it

424
00:21:14.880 --> 00:21:16.410
can be a little bit
of a challenge to figure

425
00:21:16.410 --> 00:21:19.320
out sort of where the
data access is occurring because

426
00:21:19.710 --> 00:21:22.500
you'll build a model, you
know, model view controller, and

427
00:21:22.500 --> 00:21:25.200
your model will have some
property that makes it go

428
00:21:25.200 --> 00:21:27.420
get more data. And it
can be kind of subtle

429
00:21:27.420 --> 00:21:30.900
sometimes about when you have
a view accessing one of

430
00:21:30.900 --> 00:21:34.020
these properties on the model
and then that triggers a

431
00:21:34.020 --> 00:21:36.690
whole bunch of queries. So
then effectively your view is

432
00:21:36.690 --> 00:21:38.880
querying the database. If you
really think about what's happening,

433
00:21:39.330 --> 00:21:42.300
which you know, depending on
how, again, how dogmatic you

434
00:21:42.300 --> 00:21:44.490
want to be about MVC,
you're not really supposed to

435
00:21:44.490 --> 00:21:46.170
do that. The views are
supposed to be really dumb

436
00:21:46.620 --> 00:21:49.050
and just dump data on
the page in a specific

437
00:21:49.050 --> 00:21:51.450
format. Yeah. But it can
be subtle to figure out,

438
00:21:51.450 --> 00:21:54.930
okay, if I access this
property, bam, 50 queries occur.

439
00:21:55.140 --> 00:21:59.520
Right. And Jeff, did you
want to talk about some

440
00:21:59.520 --> 00:22:01.980
of the optimization we did
around? Cause I think caching

441
00:22:01.980 --> 00:22:05.670
was our biggest challenge, honestly,
with NBC, because I think

442
00:22:05.670 --> 00:22:08.430
what we ran into was
you have controllers. We kind

443
00:22:08.430 --> 00:22:10.980
of wanted sub controllers because
we wanted a way to

444
00:22:10.980 --> 00:22:12.900
sort of break up the
data so that we could

445
00:22:12.900 --> 00:22:15.210
actually cash sort of sub
elements of the page, but

446
00:22:15.210 --> 00:22:17.130
not the whole page. So
Jeff, did you want to

447
00:22:17.280 --> 00:22:19.920
talk about that at all?
Sure. Yeah. I guess I'm

448
00:22:19.920 --> 00:22:23.190
a little, a little embarrassed
about our implementation of it

449
00:22:23.250 --> 00:22:26.550
as well. We are using
it. Don't feel embarrassed because

450
00:22:26.550 --> 00:22:28.320
this is not, you're not,
it's not like you're on

451
00:22:28.320 --> 00:22:31.230
stage trying to be a
purist and justify your design

452
00:22:31.920 --> 00:22:35.880
because ultimately you guys need
to remember that success is

453
00:22:35.880 --> 00:22:39.480
ultimately the best metric. Very
good. Right. And you guys

454
00:22:39.540 --> 00:22:44.190
are doing a good job,
right. And you balanced pragmatism

455
00:22:44.190 --> 00:22:48.630
with purity. So it may
not be academically. Correct. But

456
00:22:48.810 --> 00:22:51.870
let's talk about it in
a Frank way that without

457
00:22:51.870 --> 00:22:55.710
feeling that you're being judged
and then after you open

458
00:22:55.710 --> 00:22:58.440
your soul to me tonight,
then I'll judge it until

459
00:22:58.440 --> 00:23:03.000
then We're using some of
the MVC contribs to get

460
00:23:03.960 --> 00:23:07.140
basically our views call back
into our controllers in order

461
00:23:07.140 --> 00:23:14.250
to leverage cashing, I'll call
back into it via, via

462
00:23:14.250 --> 00:23:18.180
what, like they literally, you
typically you pass from your

463
00:23:18.180 --> 00:23:20.580
controller to your view, you
pass a view model, Right?

464
00:23:20.790 --> 00:23:23.940
There's a method called render
action that allows, and I

465
00:23:23.940 --> 00:23:28.140
think it's gone in the
latest, latest version, five of

466
00:23:28.140 --> 00:23:31.680
the MVC framework. So actually
had to find it in

467
00:23:31.680 --> 00:23:36.120
the contribs where I'm using
render action to call back

468
00:23:36.120 --> 00:23:41.460
into the home controller, to
basically have the view populate

469
00:23:41.460 --> 00:23:45.710
all its data. And by
doing that, I then able

470
00:23:45.710 --> 00:23:49.160
to use the values that
come back from the HTML

471
00:23:49.160 --> 00:23:53.300
to cash that, and we're
able to, you know, cash

472
00:23:53.300 --> 00:23:56.780
regions of the page instead
of just the entire page.

473
00:23:57.050 --> 00:24:00.280
Cause we, that ability Done
as an, a, an action

474
00:24:00.280 --> 00:24:08.080
filter on the, on the
control We are using the

475
00:24:09.490 --> 00:24:12.220
let's see here. Yeah. We
are using the, the action

476
00:24:12.220 --> 00:24:17.200
filters for, for the caching
type to occur, but we

477
00:24:17.200 --> 00:24:19.840
didn't want to cache like
the entire homepage for X

478
00:24:19.840 --> 00:24:24.880
number of seconds. We needed
the ability to cash. Let's

479
00:24:24.880 --> 00:24:26.590
say, if you're looking at
the recent tags on the

480
00:24:26.590 --> 00:24:28.960
homepage, we wanted the recent
tags section of the page

481
00:24:29.290 --> 00:24:32.290
to be cashed for five
minutes or for an X

482
00:24:32.290 --> 00:24:33.940
interval. But we've been one
of the rest of the

483
00:24:33.940 --> 00:24:37.930
page to be able to
refresh over one minute interval

484
00:24:37.960 --> 00:24:42.340
intervals. So we have a
global view that shows just

485
00:24:42.340 --> 00:24:45.220
the default page. And then
that view calls back into

486
00:24:45.220 --> 00:24:48.580
the controllers to get the
information that's cash on different

487
00:24:48.580 --> 00:24:52.030
intervals. That makes Right. Okay.
So then the, the home

488
00:24:52.030 --> 00:24:54.640
controller has a recent tags
thing that has an attribute

489
00:24:54.640 --> 00:24:58.240
on it that describes, you
know, attribute output cash Perrin

490
00:24:58.360 --> 00:25:02.770
five minutes. Right. So you're
cashing them at the render

491
00:25:02.770 --> 00:25:05.680
action level. Right. Okay. Are
you running all of this

492
00:25:05.680 --> 00:25:08.500
on how many boxes do
you have In this case?

493
00:25:08.500 --> 00:25:12.460
We just have one server
that's, that's acting as both

494
00:25:12.460 --> 00:25:16.780
our database and web server
and it's, we run pretty

495
00:25:16.780 --> 00:25:21.730
hot. Usually we're running about
40 to 50% CPU it's

496
00:25:21.790 --> 00:25:23.890
at times. And that's kind
of during our really heavy

497
00:25:23.890 --> 00:25:27.880
loads. So what kind of
box is this? It's a

498
00:25:27.880 --> 00:25:32.560
quad core. I believe Xeon.
Is that right? Jeff? Yeah,

499
00:25:32.590 --> 00:25:36.430
actually it's eight core eight
courses, dual, dual quad. So

500
00:25:36.430 --> 00:25:39.070
we have, we have four
gigabytes of memory and then

501
00:25:39.280 --> 00:25:47.020
eight real CPS in there
through through physics, right? Yeah.

502
00:25:47.830 --> 00:25:51.160
You're winning 40. So you're
winning 40% on average on

503
00:25:51.160 --> 00:25:54.460
hunting. And when you're running
hot on all eight cores,

504
00:25:54.490 --> 00:25:57.550
right. Well in 40% of
the cumulative. So that would

505
00:25:57.550 --> 00:26:00.700
mean we're doing 46. And
what's your memory pressure like

506
00:26:00.700 --> 00:26:03.310
with only four gigs? It
varies. I mean, we've improved

507
00:26:03.310 --> 00:26:05.650
our querying. The one thing
we found, I know it's

508
00:26:05.650 --> 00:26:07.690
sort of a running joke
in computer science, but like

509
00:26:07.990 --> 00:26:10.810
all your performance is in
the database. I mean, it's

510
00:26:10.810 --> 00:26:14.410
just ridiculous how much everything
you do is determined by

511
00:26:14.410 --> 00:26:17.380
how fast you get data
out of the database. And

512
00:26:17.380 --> 00:26:19.600
that's why also the caching
turned out to be obviously

513
00:26:19.600 --> 00:26:21.910
super critical for us. I
think there were a couple

514
00:26:22.450 --> 00:26:23.620
is I want to talk
about just a couple of

515
00:26:23.620 --> 00:26:26.950
issues that we had during
development. And one was the

516
00:26:26.950 --> 00:26:30.910
current version of MVC is
not very cash friendly because

517
00:26:30.910 --> 00:26:33.280
it doesn't really let you
break up controllers into sub

518
00:26:33.280 --> 00:26:36.820
controllers because really, as Jeff
was describing, you have a

519
00:26:36.820 --> 00:26:39.700
page that's really a bunch
of sub items, even though

520
00:26:39.700 --> 00:26:42.580
it's one controller action and
you want to cache different

521
00:26:42.580 --> 00:26:45.630
parts of controller differently. So
you really want to compose

522
00:26:45.630 --> 00:26:48.810
your controllers into sub controllers.
And then each sub controller

523
00:26:48.810 --> 00:26:51.210
would have a view associated
with it that would have

524
00:26:51.210 --> 00:26:53.310
its own, you know, caching
rules and stuff. So that

525
00:26:53.310 --> 00:26:54.720
was a little bit of
a challenge. Cause for a

526
00:26:54.720 --> 00:26:57.630
site of our scale, we
have to cash like crazy.

527
00:26:57.750 --> 00:27:01.260
Otherwise we just fall over,
right? We can't do hundreds

528
00:27:01.260 --> 00:27:04.020
of queries for every user.
Like every second that they

529
00:27:04.020 --> 00:27:07.170
hit the page, that's just
like web design one Oh

530
00:27:07.170 --> 00:27:10.920
one. And then beyond that,
beyond the caching issue with,

531
00:27:11.080 --> 00:27:14.880
with NBC, I was really
actually very disappointed in the

532
00:27:14.880 --> 00:27:17.730
way SQL server works out
of the box, SQL server

533
00:27:17.730 --> 00:27:22.560
2005. We had huge issues
around deadlocks with what I

534
00:27:22.560 --> 00:27:25.530
feel like is not an
unusual query load for a

535
00:27:25.530 --> 00:27:30.570
website EEG 98% reads. And
2% writes is that we

536
00:27:30.570 --> 00:27:35.640
were regularly blocking and dead
locking like multiple times per

537
00:27:35.640 --> 00:27:38.220
hour. And it turns out,
and I had a blog

538
00:27:38.220 --> 00:27:40.440
post about this, but like
I said, I'm still kind

539
00:27:40.440 --> 00:27:42.960
of disappointed that they out
of the box made this

540
00:27:42.960 --> 00:27:46.020
decision that we had to
switch to this, this read

541
00:27:46.020 --> 00:27:50.670
committed view or this transaction
level, which gives you, it's

542
00:27:50.670 --> 00:27:53.400
not like no lock, no
lock has read uncommitted. I

543
00:27:53.400 --> 00:27:55.260
know you know about that.
Cause you've blogged about that

544
00:27:55.260 --> 00:27:58.080
before, but this is one
level up from that. And

545
00:27:58.080 --> 00:28:00.510
once we switched to that,
it's been totally smooth sailing.

546
00:28:00.810 --> 00:28:03.330
But until we did that,
like pulling our hair out

547
00:28:03.410 --> 00:28:07.580
A little bit of backlash
against that post, this is

548
00:28:07.580 --> 00:28:12.800
a tough question since we're
such wonderful friends, but there

549
00:28:12.800 --> 00:28:15.260
were some people who said
that, that post show that

550
00:28:15.260 --> 00:28:18.110
you really didn't understand the
issue around dead logging. Do

551
00:28:18.110 --> 00:28:20.510
you disagree? Well, I, I
think there's a lot of

552
00:28:20.510 --> 00:28:23.360
people that don't actually read
the entirety of what it,

553
00:28:23.360 --> 00:28:25.850
right. Like they read like
a couple of paragraphs and

554
00:28:25.850 --> 00:28:27.830
assume that, Oh, he doesn't
know he's talking about, but

555
00:28:27.830 --> 00:28:31.190
they don't sort of read
the, the end because I

556
00:28:31.190 --> 00:28:33.560
think reading that post, if
you actually read everything I

557
00:28:33.560 --> 00:28:36.140
wrote and get to the
end of it, I'm just

558
00:28:36.140 --> 00:28:38.720
painting the entire picture of,
you know, here's the problem,

559
00:28:38.720 --> 00:28:41.960
right? Here's one thing you
could do. Right. And then

560
00:28:41.960 --> 00:28:44.690
here's, you know, actually what
you should do. Right. And,

561
00:28:44.690 --> 00:28:47.420
and the, the, what you
could do with no lock.

562
00:28:47.420 --> 00:28:50.630
Right. We talked about that
because, and honestly I've talked

563
00:28:50.630 --> 00:28:52.670
to people that have worked
with DBEs that just tell

564
00:28:52.670 --> 00:28:54.650
people it's like, yeah, use
no lock on everything. It's

565
00:28:54.650 --> 00:28:56.870
like, it's like, take two
aspirin and call me in

566
00:28:56.870 --> 00:28:59.030
the morning. There are DBEs
out there who do this.

567
00:29:00.080 --> 00:29:02.270
And I think just cause
they've learned that in you

568
00:29:02.270 --> 00:29:04.040
don't, you have locking problems
and for a lot of

569
00:29:04.040 --> 00:29:08.030
queries, it does it really
matter. Right? Like sampling, pulling

570
00:29:08.180 --> 00:29:10.640
back a user profile. Does
it really matter if the

571
00:29:10.640 --> 00:29:12.560
profile is a little bit
out of date at the

572
00:29:12.560 --> 00:29:14.540
time that I get it?
I'm not sure that it

573
00:29:14.540 --> 00:29:17.150
does. Right. Yeah. And you're
saying, I'm hearing you say

574
00:29:17.150 --> 00:29:19.910
that you wish SQL server
had more of a realistic

575
00:29:19.910 --> 00:29:23.750
awareness of, of how, how
the world typically works and

576
00:29:23.750 --> 00:29:26.570
had typical defaults is what
you're saying. It turns out

577
00:29:26.570 --> 00:29:30.920
that this, this Reed committed
transaction level. And I think

578
00:29:30.920 --> 00:29:33.260
it's the default in like
Oracle and stuff. And people

579
00:29:33.500 --> 00:29:35.540
had left comments on a
blog like, wow, that's not

580
00:29:35.540 --> 00:29:38.120
the default. They were really
shocked that this was not

581
00:29:38.120 --> 00:29:40.370
the default. And I think
we were too, because I

582
00:29:40.370 --> 00:29:44.170
do not view our query
load as unusual, certainly not

583
00:29:44.170 --> 00:29:46.870
for a website. So out
of the box, SQL server

584
00:29:46.870 --> 00:29:50.440
is just really ill configured
to build a website. I

585
00:29:50.440 --> 00:29:52.240
mean, that's really the bottom
line. That was the point

586
00:29:52.240 --> 00:29:54.160
of that post saying, Hey,
look out of the box,

587
00:29:54.310 --> 00:29:56.770
SQL server needs to be
adjusted to work with sort

588
00:29:56.770 --> 00:29:59.530
of typical website loads. And
once you do that, it's

589
00:29:59.530 --> 00:30:01.740
great. I mean, we haven't
had any problems since It'd

590
00:30:01.740 --> 00:30:03.660
be nice. If there was
a profile option, like you

591
00:30:03.660 --> 00:30:05.670
could tell SQL server, here's
how I intend to use

592
00:30:05.670 --> 00:30:09.450
you set yourself up appropriately.
Well, right. And I have

593
00:30:09.450 --> 00:30:11.610
sort of a heretical view
on this anyway, that I

594
00:30:11.610 --> 00:30:13.500
think the database should be
figuring out a lot of

595
00:30:13.500 --> 00:30:17.550
stuff like you should index
this column. Like I think

596
00:30:17.550 --> 00:30:24.300
the database doing a lot
of stuff automatically. Yeah. Yeah.

597
00:30:24.300 --> 00:30:26.550
I mean it does, it
does learn a lot. I

598
00:30:26.550 --> 00:30:30.360
mean, SQL server and SQL
server 2008 got really, really

599
00:30:30.360 --> 00:30:34.500
smart on query plans, which,
which interestingly I've said a

600
00:30:34.500 --> 00:30:37.380
few heretical things that have
gotten me in trouble. Like

601
00:30:37.380 --> 00:30:39.810
I believe that the day
of the stored procedure is

602
00:30:39.810 --> 00:30:46.650
probably over years and years
and years. Yeah. Okay. You're

603
00:30:46.650 --> 00:30:49.860
you're, you're a progressive heretic.
I am totally you're ahead

604
00:30:49.860 --> 00:30:52.050
of your time. Oh, you
know what? Jeff Dallas was

605
00:30:52.050 --> 00:30:56.040
telling me that Rob Connery
added and Atwood method to

606
00:30:56.040 --> 00:31:01.860
subsonic that actually extracts raw
SQL, supposedly that was mentioned

607
00:31:01.860 --> 00:31:04.140
on one of the Hanselman,
his podcasts. He and I

608
00:31:04.140 --> 00:31:06.240
talked about that last week,
but I just wanna mention

609
00:31:06.240 --> 00:31:08.670
that, that I do have
an affinity. I kinda like

610
00:31:08.670 --> 00:31:10.830
to see, I will say
that I know Rob Connery

611
00:31:10.860 --> 00:31:12.720
kind of hates it, but
I love it. Like I

612
00:31:12.720 --> 00:31:15.780
think it's like that to
me is database assembly language

613
00:31:15.870 --> 00:31:19.290
because the database is so,
so important to your performance.

614
00:31:19.290 --> 00:31:21.330
I mean, it's like the
thing that determines your performance.

615
00:31:21.690 --> 00:31:24.030
So if you don't have
like a real lock on

616
00:31:24.030 --> 00:31:27.240
how you build SQL and
like the performance characteristics of

617
00:31:27.240 --> 00:31:29.130
the SQL you're building, I
mean, you're just really dead

618
00:31:29.130 --> 00:31:30.600
in the water. You're going
to build an app. That's

619
00:31:30.600 --> 00:31:32.910
going to be incredibly slow.
So I view it as

620
00:31:33.270 --> 00:31:37.290
incredibly mission critical to deeply
understand the actual SQL that

621
00:31:37.290 --> 00:31:39.870
you're emitting. And I don't
really like the sort of

622
00:31:40.110 --> 00:31:42.360
link does this very well
to be clear link. Doesn't

623
00:31:42.570 --> 00:31:45.090
outstanding job at this, but
I still, I want to

624
00:31:45.090 --> 00:31:48.840
see exactly what SQL is
being generated and understand exactly

625
00:31:48.840 --> 00:31:51.510
why it's performing the way
it's performing. Because when you

626
00:31:51.510 --> 00:31:55.830
look at stack overflow 98%
database job, Well it's fast.

627
00:31:55.860 --> 00:31:59.850
I mean, it's, it is,
it is exquisitely fast. I

628
00:31:59.850 --> 00:32:01.620
thought it was pretty cool
when OB Fernandez came on

629
00:32:01.620 --> 00:32:03.390
and asked if it was
written in rails. That was

630
00:32:03.390 --> 00:32:05.550
pretty awesome. Yeah, that was,
that was a, that was

631
00:32:05.550 --> 00:32:07.200
a great question. Let me,
let me, let me push

632
00:32:07.200 --> 00:32:09.480
back on one thing though,
because I'm hearing that you're

633
00:32:09.690 --> 00:32:12.600
a pragmatist and you're, you're
a pure pragmatist, you know,

634
00:32:12.630 --> 00:32:14.130
make it work, do it
right. Get out of my

635
00:32:14.130 --> 00:32:18.360
way. Let's go, go, go.
But I'm shocked that this,

636
00:32:18.360 --> 00:32:20.220
that you have your SQL
server running on the same

637
00:32:20.220 --> 00:32:22.260
machine as your web server.
Well, let's give this a

638
00:32:22.260 --> 00:32:25.050
really obvious upgrade path, right?
I mean, this is one

639
00:32:25.050 --> 00:32:28.080
way of looking at this
is that To go live

640
00:32:28.080 --> 00:32:30.930
with a SQL server on,
it's not behind a firewall,

641
00:32:30.930 --> 00:32:32.640
it's not in its own,
you know, it needs to

642
00:32:32.640 --> 00:32:34.590
be out of the DMZ
and behind the second firewall.

643
00:32:34.710 --> 00:32:36.420
I mean, I worked in
finance for years, so maybe

644
00:32:36.420 --> 00:32:39.500
I'm just paranoid, but that's
just the surface area for,

645
00:32:39.500 --> 00:32:44.500
for attack, just doubled, You
know, the windows firewall and

646
00:32:44.500 --> 00:32:45.820
stuff. And there's really no
way to get to it

647
00:32:45.820 --> 00:32:48.760
unless you can remote desktop
in like we do. Now.

648
00:32:48.760 --> 00:32:50.680
You've just said that you
remote desktop into your production

649
00:32:50.680 --> 00:32:54.190
machines, which adds a new
attack vector. So that means

650
00:32:54.190 --> 00:32:56.320
that now I know you
have ports open for RDP.

651
00:32:56.380 --> 00:32:57.550
Well, what are you gonna
do? I mean, people are

652
00:32:57.550 --> 00:33:00.460
gonna attack you with whatever
is available. Our passwords are

653
00:33:00.460 --> 00:33:04.930
pretty good. Well, so that's
not the point, right? That's

654
00:33:04.930 --> 00:33:06.790
like saying the lock on
my door is pretty good,

655
00:33:06.790 --> 00:33:08.590
but you know, the most
secure house is one without

656
00:33:08.590 --> 00:33:12.310
doors. Right. And even more
secure if I can't find

657
00:33:12.310 --> 00:33:15.490
the house, right. Well, like
I said, we have an

658
00:33:15.490 --> 00:33:18.100
obvious upgrade path, which is
to move the database, to,

659
00:33:18.410 --> 00:33:21.160
to buy another server from
crystal tech. That's our host

660
00:33:21.730 --> 00:33:24.190
and, you know, shift the
database over that would immediately

661
00:33:24.190 --> 00:33:26.590
cut our load in half
on that. Do you think

662
00:33:26.590 --> 00:33:29.590
that that's really that simple
it's half that, that half

663
00:33:29.590 --> 00:33:33.280
of your CPU is being
used by the SQL server

664
00:33:33.280 --> 00:33:34.840
and the other half is
being used by the web

665
00:33:34.840 --> 00:33:37.090
server? Yeah, it's pretty much
an even split. I mean,

666
00:33:37.090 --> 00:33:41.140
we, we, we watch task
manager pretty closely and assuming

667
00:33:41.140 --> 00:33:42.880
the processes have been up
for the same length of

668
00:33:42.880 --> 00:33:46.240
time, which isn't always true
because the, the worker process

669
00:33:46.240 --> 00:33:48.940
tends to get shut down
for various reasons. But when

670
00:33:48.940 --> 00:33:50.560
they're up for the same
amount of times, it's, it's

671
00:33:50.560 --> 00:33:54.010
actually shocking how even the
CPDs actually is between the

672
00:33:54.010 --> 00:33:58.120
two at the moment. Hmm.
How far can you take

673
00:33:58.120 --> 00:34:00.970
this? I mean, if you've
done a capacity planning, any

674
00:34:00.970 --> 00:34:05.020
formal capacity planning, We don't
really do any planning. We

675
00:34:05.020 --> 00:34:07.060
just kind of do stuff
and then just see what

676
00:34:07.060 --> 00:34:10.480
happens. Yeah. I'm so I'm
such a stodgy old dude,

677
00:34:10.870 --> 00:34:12.340
because it's like, you know,
when you go to a

678
00:34:12.340 --> 00:34:15.550
bank, you, you know, how,
how many people are signing

679
00:34:15.550 --> 00:34:17.920
up for online accounts and
how often is it, you

680
00:34:17.920 --> 00:34:20.440
know, what's the trend line
look like? What's the trend

681
00:34:20.440 --> 00:34:23.230
line, look, look going backwards.
How will it be exponential

682
00:34:23.230 --> 00:34:26.410
geometric, you know, in 10
years or five years or

683
00:34:26.410 --> 00:34:29.140
even six months, what's the
capacity like, so you're just

684
00:34:29.140 --> 00:34:32.740
gonna buy hardware when it
starts to get to 60%

685
00:34:32.740 --> 00:34:35.290
and then you'll just figure
it out from then. We've

686
00:34:35.290 --> 00:34:37.000
been keeping a really close
eye on the database. In

687
00:34:37.000 --> 00:34:40.300
other words, watching for queries
that start to become painful,

688
00:34:40.420 --> 00:34:42.880
using the profiler. We love
the profiler, by the way,

689
00:34:43.750 --> 00:34:45.850
it's like my new best
friend Filling the database in

690
00:34:45.850 --> 00:34:49.150
production. I attach the database
all the time and just

691
00:34:49.480 --> 00:34:51.070
look at the queries and
just see what's going through

692
00:34:51.070 --> 00:34:55.210
and what's slow. And are
you concerned about database fragmentation?

693
00:34:55.300 --> 00:34:56.890
Do you do anything like
that? Have you, have you,

694
00:34:56.890 --> 00:35:00.850
have you figured out if
you're, if your tables break

695
00:35:00.850 --> 00:35:03.790
on a page boundary or
do you think about that

696
00:35:03.790 --> 00:35:06.160
kind of stuff? Not currently.
I mean, most of the

697
00:35:06.160 --> 00:35:10.090
thinking I do is around
this query takes 200 milliseconds

698
00:35:10.090 --> 00:35:11.920
than it needs to take
50. So then I just

699
00:35:11.920 --> 00:35:15.040
break it apart, you know,
the query analyzer and try

700
00:35:15.040 --> 00:35:17.680
to figure out how to
make it better. What are

701
00:35:17.680 --> 00:35:21.980
some of your biggest tables,
millions, what's your greatest? You

702
00:35:21.980 --> 00:35:23.250
want to talk a little
bit about, cause you're at

703
00:35:23.300 --> 00:35:25.120
a lot of research initially
looking at how we could

704
00:35:25.120 --> 00:35:28.090
pedia stores data. And Jared
came up with really the

705
00:35:28.090 --> 00:35:30.220
initial design. It's been pretty
solid. There's been some tweaks,

706
00:35:30.220 --> 00:35:37.290
but Jared did want to
Our largest table, you know,

707
00:35:37.320 --> 00:35:40.770
every revision That goes in
just says, it's stuck. Overflow

708
00:35:41.280 --> 00:35:43.260
does have elements of the
Wiki that you can edit

709
00:35:43.260 --> 00:35:49.110
any question or, you know,
revise its tags that I'd

710
00:35:49.110 --> 00:35:50.580
say we have w I
mean, it's not in the

711
00:35:50.580 --> 00:35:54.510
millions of records. Definitely not
yet, but I think we

712
00:35:54.510 --> 00:35:58.790
have like three, 400,000 records
right now and our, our

713
00:35:58.830 --> 00:36:01.400
revision stable. Do you know
the state of the fragmentation

714
00:36:01.400 --> 00:36:04.850
of the SQL server database?
No. I mean, describe imitation.

715
00:36:04.850 --> 00:36:06.380
I'm talking about like, what's
going on in the internal

716
00:36:06.380 --> 00:36:09.260
data structures Right now. We
have not looked at that

717
00:36:09.260 --> 00:36:12.890
yet. Huh? How many tables
are there? Well, the top

718
00:36:12.890 --> 00:36:14.480
of my head, I'm not
at my computer. I guess

719
00:36:14.480 --> 00:36:16.940
we have maybe like 15,
16 tables. I mean, it's

720
00:36:16.940 --> 00:36:18.350
not a, it's not a
large scheme of by any

721
00:36:18.350 --> 00:36:21.950
means. Huh? So a lot.
So a lot of the

722
00:36:21.960 --> 00:36:25.220
stuff and there's little tiny
database updates that happen when

723
00:36:25.220 --> 00:36:28.070
you, when you vote something
up or you get a

724
00:36:28.070 --> 00:36:31.100
badge or whatever, or this
was all just, you know,

725
00:36:31.830 --> 00:36:34.520
you know, interlocked, increment type
stuff, you just plus one,

726
00:36:34.610 --> 00:36:38.720
all these different little values.
Okay. For instance, with voting,

727
00:36:38.840 --> 00:36:40.910
like we actually do still
a record of every vote

728
00:36:40.910 --> 00:36:42.980
that happens, you know, who
it happens to when it

729
00:36:42.980 --> 00:36:46.190
happened so that we can
recreate like for any, any

730
00:36:46.190 --> 00:36:49.340
given user their reputation, we
can actually have a path

731
00:36:49.340 --> 00:36:52.700
of everything that happened to
get that user, that score.

732
00:36:53.720 --> 00:36:57.170
So we, in certain cases
we do have just straight

733
00:36:57.170 --> 00:37:01.400
increments, but most of the
increments are all sort of

734
00:37:01.400 --> 00:37:05.000
like a de-normalized field. We
can always get back and

735
00:37:05.000 --> 00:37:09.650
calculate how that value happened.
But Get back. Are you

736
00:37:09.650 --> 00:37:13.790
saying that you calculate and
store Vote? Like if somebody's

737
00:37:14.280 --> 00:37:18.440
voted somebody's posts, we would
store a record and the

738
00:37:18.650 --> 00:37:23.390
vote table, like this person
applauded a given user's posts

739
00:37:23.940 --> 00:37:26.840
and then we would increment
their score on the, or

740
00:37:26.840 --> 00:37:30.620
their, excuse me, their reputation
on like their user account

741
00:37:31.100 --> 00:37:32.720
on that, on that record.
Just so we have sort

742
00:37:32.720 --> 00:37:34.370
of a, you know, we
don't have to calculate that

743
00:37:34.850 --> 00:37:38.690
reputation score every single time,
you know, a user. Okay.

744
00:37:38.720 --> 00:37:42.260
So you calculate it and
score you calculate and storage,

745
00:37:42.950 --> 00:37:44.660
but you're saying that if
you delete, if you decided

746
00:37:44.660 --> 00:37:48.200
to zero out the reputation
column, you could get it

747
00:37:48.200 --> 00:37:54.620
all back. Okay. Okay. And
do you think that you

748
00:37:54.620 --> 00:37:55.730
have, do you have any
sense of how big this

749
00:37:55.730 --> 00:37:58.250
will get before and what
will break first? Will it

750
00:37:58.250 --> 00:38:01.130
be, will it be SQL
server? Will it be the

751
00:38:01.130 --> 00:38:03.320
memory on the SQL server?
Will it be your cash?

752
00:38:03.860 --> 00:38:06.440
Does your cash try to
cash everything? Or if you

753
00:38:06.440 --> 00:38:10.400
had 10 times more content
and 10 times more traffic,

754
00:38:10.760 --> 00:38:14.150
would your cash have to
be tuned to cashless? Yes.

755
00:38:14.150 --> 00:38:17.990
We definitely need more memory
like of servers running, you

756
00:38:17.990 --> 00:38:23.600
know, pretty much what's it
running at right now. It's

757
00:38:23.600 --> 00:38:26.930
not actually that overloaded at
the moment, but I think

758
00:38:26.930 --> 00:38:29.270
it's going to follow a
very traditional scaling vector. I

759
00:38:29.270 --> 00:38:32.390
think moving the database to
its own server, due to

760
00:38:32.390 --> 00:38:34.910
the vagaries of how our
host works. It's actually cheaper

761
00:38:34.910 --> 00:38:37.240
to buy a second server
Than it is to upgrade

762
00:38:37.240 --> 00:38:40.240
memory in the first one.
So that effectively doubles our

763
00:38:40.240 --> 00:38:42.520
memory space, right? Because then
the database is on its

764
00:38:42.520 --> 00:38:45.400
own server with four gigabytes
of memory. The web server

765
00:38:45.400 --> 00:38:48.400
has four gigabytes of memory.
And I gotta tell you,

766
00:38:48.400 --> 00:38:53.350
Scott, where we are abusing
HTTP, the cash, the asp.net,

767
00:38:53.410 --> 00:38:56.020
HTP cash, we're using the
heck out of that thing,

768
00:38:56.020 --> 00:38:59.010
man. Why are you using
Colonel caching? Are you just

769
00:38:59.010 --> 00:39:06.330
using system, not web.cash. We're
using really a mixture where

770
00:39:06.330 --> 00:39:08.760
we can, we're using sort
of the attribute level output

771
00:39:08.760 --> 00:39:10.980
caching, but the trick there
is every one of our

772
00:39:10.980 --> 00:39:13.920
pages has the user at
the top. So doing a

773
00:39:13.920 --> 00:39:17.370
whole page cache only really
works well for us. If

774
00:39:17.370 --> 00:39:20.160
you're anonymous, in which case
you're not logged in, meaning

775
00:39:20.160 --> 00:39:23.700
the pages identical for you
and every other anonymous user.

776
00:39:24.720 --> 00:39:26.640
Yeah. So when you say
HTTP caching, you're talking about

777
00:39:26.640 --> 00:39:30.060
like IE tags and plants
at caching. Well, a little

778
00:39:30.060 --> 00:39:32.340
bit, but we're also stuffing
stuff into the cash. Like

779
00:39:32.390 --> 00:39:34.950
I'm confused, there's basically three
levels of caching, right? There's

780
00:39:35.340 --> 00:39:37.830
there's user mode caching, which
is like using the cash

781
00:39:37.830 --> 00:39:40.620
and asp.net there's kernel mode
caching, which would be like

782
00:39:40.620 --> 00:39:42.870
using HDP dot SIS to
see if you can turn

783
00:39:42.870 --> 00:39:47.280
a website page around without
even hitting IIS. Right. And

784
00:39:47.280 --> 00:39:51.780
then there's whatever cashing the
client does. Right. So, which

785
00:39:51.780 --> 00:39:54.300
are, which are you using?
And in what way, We

786
00:39:54.300 --> 00:39:58.080
are exploiting some caching in
terms of just having correct,

787
00:39:58.110 --> 00:40:01.170
you know, HTTP headers and
things like that and, and

788
00:40:01.170 --> 00:40:05.910
compression and things like that.
But HTTP the builtin asp.net

789
00:40:06.120 --> 00:40:08.550
cash is like our new
best friend. And one of

790
00:40:08.550 --> 00:40:10.680
my favorite new techniques, it's
not even really new or

791
00:40:10.680 --> 00:40:13.320
very clever is we're taking
a lot of our HTML

792
00:40:13.320 --> 00:40:16.230
fragments that we're rendering and
then we're zipping them and

793
00:40:16.230 --> 00:40:18.120
then putting them in the
cash because we have so

794
00:40:18.120 --> 00:40:23.910
much CPU time, not the
zip is computationally expensive operation

795
00:40:23.910 --> 00:40:28.080
anymore, but that sort of
increases by 10, the size

796
00:40:28.080 --> 00:40:30.780
of your cash because you're
not putting HTML and you're

797
00:40:30.780 --> 00:40:35.120
putting Jesus, you know, binary
blob, You're using like systems

798
00:40:35.120 --> 00:40:37.650
that iota compression. And you're
just taking how much like

799
00:40:37.680 --> 00:40:39.660
30 K and zipping it.
Yup. Yep. We do that

800
00:40:39.660 --> 00:40:41.970
because you know, depending how
many tabs do you have

801
00:40:41.970 --> 00:40:44.850
on a page there's sort
of this combination Loreal explosion

802
00:40:44.850 --> 00:40:47.190
of the cash, right? Even
for an anonymous user, right

803
00:40:47.430 --> 00:40:50.100
there say three or four
tabs per page that the

804
00:40:50.100 --> 00:40:52.110
user could go to. But
that means we don't, we

805
00:40:52.110 --> 00:40:54.030
don't, we don't start one
copy of the page. We

806
00:40:54.030 --> 00:40:57.570
store four copies, right? Depending
on which tab you're on

807
00:40:57.600 --> 00:41:01.230
for the question, for example.
So this way each one

808
00:41:01.230 --> 00:41:03.960
of those tabs is like
one 10th, the size, it

809
00:41:03.960 --> 00:41:05.550
would normally be in the
cash so we can fit

810
00:41:05.550 --> 00:41:08.190
a lot more of the
men without putting pressure on

811
00:41:08.190 --> 00:41:10.890
memory. And we have so
much CPU it's like comical.

812
00:41:11.580 --> 00:41:15.330
So Did you, did you
take system.web.cash and wrap it

813
00:41:15.360 --> 00:41:17.610
and make a zip cash
that zips and unzips as

814
00:41:17.610 --> 00:41:19.290
you go in and out
of it? Or did you

815
00:41:19.290 --> 00:41:20.990
do the zipping on the
outside? It did the zipping

816
00:41:20.990 --> 00:41:22.200
on the outside, but that
would, I got to tell

817
00:41:22.200 --> 00:41:25.530
you that would be an
awesome addition to the core.net

818
00:41:25.530 --> 00:41:28.860
stuff. It's just, just zip,
everything that goes in when

819
00:41:28.860 --> 00:41:31.080
not, I mean, Open source,
any of your stuff. I

820
00:41:31.080 --> 00:41:33.200
mean, send me that and
I'll make a Jesus cash

821
00:41:33.490 --> 00:41:36.740
that would make a good
blog entry. Yeah. That is

822
00:41:36.740 --> 00:41:40.280
interesting. Yeah. I'm familiar with
the common rhetoric's, especially, it

823
00:41:40.280 --> 00:41:42.440
gets really interesting when you,
if you did your stuff

824
00:41:42.440 --> 00:41:45.920
in mult, in multiple languages,
like one of the biggest

825
00:41:45.980 --> 00:41:49.490
and worst in most lame
bugs and dust blog to

826
00:41:49.490 --> 00:41:52.340
this day remains that sometimes
on some pages where I

827
00:41:52.340 --> 00:41:56.240
do output caching, but I
forget to add in user

828
00:41:56.240 --> 00:41:58.970
language as a common Metorik
like if a German guy

829
00:41:59.000 --> 00:42:01.070
is the first guy to
hit that page, then it

830
00:42:01.070 --> 00:42:03.350
gets cashed in German for
everybody, no matter what language

831
00:42:03.350 --> 00:42:06.580
they speak, right. How many
languages are there like hundreds

832
00:42:07.990 --> 00:42:10.660
in the world? Well, I
mean that your site supports

833
00:42:10.660 --> 00:42:13.720
that your site would actually
be localized in probably 26,

834
00:42:13.900 --> 00:42:17.770
26. So every page is
times 26, right? Yeah, exactly.

835
00:42:18.550 --> 00:42:20.680
Yeah. It gets scary really
quickly. That's why the zipping

836
00:42:20.680 --> 00:42:23.260
is so awesome because you
can fit literally 10 times

837
00:42:23.260 --> 00:42:27.160
as much crap and memory.
Hmm. Yeah. You know, my

838
00:42:27.160 --> 00:42:31.180
initial reaction to that is
one of like a disdain

839
00:42:31.180 --> 00:42:34.180
and almost a little bit
of nausea because it just

840
00:42:34.180 --> 00:42:36.880
doesn't feel right. Means we're
doing it right. That's good.

841
00:42:36.910 --> 00:42:39.520
That's what I liked. It's
really clever though. I don't

842
00:42:39.520 --> 00:42:41.980
know. I mean, I'm going
to be really interested to

843
00:42:41.980 --> 00:42:44.770
hear from the listeners, what
they think about that. I

844
00:42:44.770 --> 00:42:48.460
think that, you know, you
can get into like micro

845
00:42:48.460 --> 00:42:51.670
perf and decide how much
CPU that's going to take,

846
00:42:51.970 --> 00:42:55.980
but ultimately CPU is going
to get faster than, than

847
00:42:55.990 --> 00:42:57.460
the amount of memory that
you could buy. Like you

848
00:42:57.460 --> 00:42:59.680
can't buy 10 times more
memory without getting into big

849
00:42:59.680 --> 00:43:01.780
money. Right? No, it's so
true. And we have just

850
00:43:01.780 --> 00:43:04.600
stupid amounts of CPU. It's
like even on day one.

851
00:43:04.980 --> 00:43:07.780
That's pretty cool. That's pretty
cool. Now is this, this

852
00:43:07.780 --> 00:43:10.690
is seven and 60. Yeah.
Oh, that's true. And our,

853
00:43:10.700 --> 00:43:12.760
our stack, I gotta say,
I love our stack. I

854
00:43:12.760 --> 00:43:14.950
mean, I know I'm a
Microsoft developer, so it's sort

855
00:43:14.950 --> 00:43:17.290
of incestuous for me to
even say it, but our

856
00:43:17.290 --> 00:43:20.410
stack is really kicking ass
because we're 64 bit, top

857
00:43:20.410 --> 00:43:24.250
to bottom 64 bit operating
system, 64 bit.net framework, a

858
00:43:24.250 --> 00:43:27.670
64 bit SQL server and
the performance really, as long

859
00:43:27.670 --> 00:43:29.860
as you don't make queries
that suck, this is where

860
00:43:29.860 --> 00:43:32.560
it gets. It's just amazing
how quickly you can construct

861
00:43:32.560 --> 00:43:35.500
a query. It just sucks.
It just joins the wrong

862
00:43:35.500 --> 00:43:38.230
things. And it takes three
to 400 milliseconds to come

863
00:43:38.230 --> 00:43:40.900
back. As long as you're
careful in your query construction,

864
00:43:41.320 --> 00:43:44.710
it's amazing how fast things
are performing. Like, and we

865
00:43:44.710 --> 00:43:47.050
haven't really had to do
that much tuning. Mostly it's

866
00:43:47.050 --> 00:43:49.540
just been tweaking and paying
attention to, you know, the

867
00:43:49.540 --> 00:43:52.450
things that are starting to
get slow around the edges

868
00:43:52.660 --> 00:43:55.030
were places where we had
done stupid things, right, where

869
00:43:55.030 --> 00:43:57.820
we didn't have the right
index where our query was

870
00:43:57.820 --> 00:44:01.000
really poorly constructed and things
like that. So largely we've

871
00:44:01.000 --> 00:44:03.730
just been removing those barriers
that we put in the

872
00:44:03.730 --> 00:44:08.110
system to unlock the performance
that was already there. And

873
00:44:08.110 --> 00:44:10.210
it's really gratifying to me
that a lot of people

874
00:44:10.210 --> 00:44:11.830
from the community come in
and say, Oh wow, Don,

875
00:44:11.830 --> 00:44:14.260
that really can be fast,
which you and I have

876
00:44:14.260 --> 00:44:16.360
known for years. I mean,
dot net is really, really

877
00:44:16.360 --> 00:44:18.790
fast. Just the question of,
you know, how you use

878
00:44:18.790 --> 00:44:20.950
it. And stack overflow is
a way to show that

879
00:44:20.950 --> 00:44:22.630
off as well. And that's
why I'm excited to speak

880
00:44:22.630 --> 00:44:25.390
with Phil at PDC about
NBC and talk about how

881
00:44:25.390 --> 00:44:27.820
much we like NBC and
how much we, we really

882
00:44:27.820 --> 00:44:30.160
love our staff. We're not
religious about it, but we're

883
00:44:30.160 --> 00:44:33.810
proud of it. Right. Are
you going to start blogging?

884
00:44:33.900 --> 00:44:37.170
Like how tos and like
you've got this, you know,

885
00:44:37.170 --> 00:44:39.780
one of the things that,
that, that I, that I

886
00:44:39.780 --> 00:44:42.300
like about my blog, especially
a couple of years ago

887
00:44:42.300 --> 00:44:44.790
when I was actively actively
developing was all of the

888
00:44:44.790 --> 00:44:48.870
war stories. You've got a
huge pump pool of war

889
00:44:48.870 --> 00:44:52.140
stories and code samples, just
sitting in your heads now

890
00:44:52.140 --> 00:44:54.330
as a collective, are you
going to start getting those

891
00:44:54.330 --> 00:44:56.870
best practices out into the
world? Well, some of our

892
00:44:56.870 --> 00:45:00.470
stuff isn't actually best practices.
Some of our stuff, Some

893
00:45:00.470 --> 00:45:02.060
of your stuff is probably
horrific. It should never see

894
00:45:02.060 --> 00:45:05.180
the light of day, but
still Right. Yeah, no, we've

895
00:45:05.180 --> 00:45:07.220
learned a lot, particularly around
security. I've done a couple

896
00:45:07.220 --> 00:45:09.680
of security related entries. I'll
tell you build a program

897
00:45:09.680 --> 00:45:12.560
or a website and you
will learn more about security

898
00:45:12.770 --> 00:45:15.110
than you ever wanted to
know. Like within the first

899
00:45:15.110 --> 00:45:18.170
month, I know that was
true for us. There were

900
00:45:18.170 --> 00:45:20.630
a lot of exploits that
we didn't fully understand. And

901
00:45:21.140 --> 00:45:23.030
now I think we, I
dunno, we fully understand that

902
00:45:23.030 --> 00:45:25.940
we definitely have a better
understanding of them. And before

903
00:45:25.940 --> 00:45:28.010
we get too much deeper,
I want to Jeff Dallas

904
00:45:28.010 --> 00:45:29.690
to talk a little bit
about, we've been using cruise

905
00:45:29.690 --> 00:45:32.750
control.net. And one of the
things that has made this

906
00:45:32.750 --> 00:45:35.060
really a pleasure to work
on is that we have,

907
00:45:35.210 --> 00:45:38.090
you know, continuous integration, like
we can do builds all

908
00:45:38.090 --> 00:45:41.150
the time. Right. And we
deploy new versions of the

909
00:45:41.150 --> 00:45:44.840
site literally every day to
the web server sometimes multiple

910
00:45:44.840 --> 00:45:47.630
times. So it's very much
rapid development, the sense that,

911
00:45:48.290 --> 00:45:50.420
you know, we roll things
out sort of, as soon

912
00:45:50.420 --> 00:45:52.760
as we develop them and
then we get feedback immediately.

913
00:45:52.760 --> 00:45:53.930
So, Jeff, do you want
to talk a little bit

914
00:45:53.930 --> 00:45:56.510
about setting up cruise control
on your experience with that?

915
00:45:57.610 --> 00:46:00.740
Sure. Yeah. Well just said
a lot there already, but

916
00:46:00.740 --> 00:46:04.160
pretty much we have every,
every check and build process

917
00:46:04.160 --> 00:46:08.030
where one of us checks
in and we all get

918
00:46:08.030 --> 00:46:10.730
an email or we'll do
a board build performs, and

919
00:46:10.730 --> 00:46:13.580
then the unit tests are
run against that build. And

920
00:46:13.580 --> 00:46:15.890
we all get an email,
whether that was successful or

921
00:46:15.890 --> 00:46:19.070
not. And we kind of
get to watch each other's

922
00:46:19.070 --> 00:46:21.260
work as it's checked in
and, and watch the site

923
00:46:21.260 --> 00:46:25.400
kind of evolve and basically
check ourselves, you know, whether,

924
00:46:25.480 --> 00:46:29.090
whether we're putting in a
good work, I know Jeff's

925
00:46:29.090 --> 00:46:31.820
watching us pretty closely. Well,
so we're all watching each

926
00:46:31.820 --> 00:46:36.770
other. I would say That
cruise control and continuous integration

927
00:46:36.770 --> 00:46:40.850
are really Jeff's opportunity to
oppress you. Yeah, pretty much

928
00:46:41.900 --> 00:46:43.820
If you, cause if you
need to be rescued, we

929
00:46:43.820 --> 00:46:45.470
can, we can put together
a team and get you

930
00:46:45.470 --> 00:46:48.140
out of there. Yeah. So
another thing, Scott that'll scare

931
00:46:48.140 --> 00:46:50.180
you and make you sad
and depressed about our project

932
00:46:50.180 --> 00:46:53.600
and probably justifiably. So our
development website is on the

933
00:46:53.600 --> 00:46:58.940
same servers, production. You like
that. I thought that you

934
00:46:58.940 --> 00:47:01.460
were supposed to be the
embodiment of best practices. You

935
00:47:01.460 --> 00:47:04.340
are. We're the embodiment of
what does he just don't

936
00:47:04.340 --> 00:47:07.010
do what we do, right?
Yeah. That's what I'm trying

937
00:47:07.010 --> 00:47:09.410
to tell people. It's just
economics. I mean, we don't

938
00:47:09.410 --> 00:47:11.150
really want to buy a
lot of servers until we

939
00:47:11.150 --> 00:47:13.520
really, really need them. I
agree. I don't really like

940
00:47:13.520 --> 00:47:17.920
having our development website on
the same server, but I

941
00:47:17.930 --> 00:47:19.610
guess I'm cheap at the
moment because we're kind of

942
00:47:19.610 --> 00:47:22.820
in startup mode, eventually we
will have more than one

943
00:47:22.820 --> 00:47:25.370
server and we will do
this the right way. I

944
00:47:25.400 --> 00:47:29.980
do see that. Wow. I,
I don't even know what

945
00:47:29.980 --> 00:47:32.860
to Say. I am. I'm
stupid for having heard this

946
00:47:32.860 --> 00:47:37.690
information. When you worked with
Jeff, you realize that he's

947
00:47:37.930 --> 00:47:39.970
a, at times a little
bit of a Renegade, but

948
00:47:39.970 --> 00:47:41.710
that kind of makes them
a little bit more, at

949
00:47:41.710 --> 00:47:45.820
least is that Jeff, does
that really gonna work? You

950
00:47:45.820 --> 00:47:48.400
think, and then you get
in there like, wow, okay.

951
00:47:48.400 --> 00:47:51.280
Yeah. Actually a lot of
homework done here. It actually

952
00:47:51.280 --> 00:47:53.740
works. People learn from this.
I mean, you guys pulled

953
00:47:53.740 --> 00:47:56.260
this off in just months,
right? I mean, their projects

954
00:47:56.260 --> 00:48:00.220
are failing left and right.
You're either, you've either discovered

955
00:48:00.220 --> 00:48:04.750
a new, crazy, fast and
loose caffeine powered way to

956
00:48:04.750 --> 00:48:08.980
do software or you're headed
for a huge brick wall.

957
00:48:10.300 --> 00:48:12.160
The way I look at
this is there's so many

958
00:48:12.160 --> 00:48:14.350
projects out there that you
have basically, and not to

959
00:48:14.350 --> 00:48:16.540
say anything negative about PHP
developers. I don't know how

960
00:48:16.540 --> 00:48:19.630
many I would be offending
this particular audience, but there's

961
00:48:19.630 --> 00:48:22.000
so many programmers that are
just literally just throwing crap

962
00:48:22.030 --> 00:48:24.640
out there on the web
and just seeing what sticks.

963
00:48:24.790 --> 00:48:27.040
I mean, if you look
at like friends and you

964
00:48:27.040 --> 00:48:30.730
look at all these really
classic websites, I mean, these

965
00:48:30.730 --> 00:48:34.000
are not really well architected.
They just kind of grew

966
00:48:34.000 --> 00:48:38.140
into what they were, right.
It doesn't actually take, you

967
00:48:38.140 --> 00:48:42.010
know, a really good architecture
to, to succeed. It takes,

968
00:48:42.010 --> 00:48:43.990
you know, an idea that
you just execute on over

969
00:48:43.990 --> 00:48:46.810
time and you keep building
it up. I think that's

970
00:48:46.810 --> 00:48:50.470
the more important factor than
getting everything right. Is just

971
00:48:50.680 --> 00:48:53.440
having it be right enough
for today and then having

972
00:48:53.440 --> 00:48:58.450
a commitment to improving it
every day. Wow. Well, I

973
00:48:58.450 --> 00:49:00.520
think that's probably a good
place to stop because that

974
00:49:00.520 --> 00:49:01.840
gives a lot of people,
a lot of things to

975
00:49:01.840 --> 00:49:05.080
think about. Thanks guys very
much for sitting down with

976
00:49:05.080 --> 00:49:10.660
me today and folks can
check it out@stackoverflow.com and you're

977
00:49:10.660 --> 00:49:12.970
going to continue blogging. I
hope maybe a little more

978
00:49:12.970 --> 00:49:17.110
often than you have been
jeff@covid.com. Yes. I'm coming back.

979
00:49:19.150 --> 00:49:22.660
Fantastic. Alright. This has been
another episode of Hansel minutes

980
00:49:22.720 --> 00:49:23.860
and I'll see you again
next week.

