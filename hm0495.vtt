WEBVTT FILE

1
00:00:00.600 --> 00:00:03.720
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.720 --> 00:00:07.050
they make the show possible.
Today's show is sponsored by

3
00:00:07.050 --> 00:00:11.310
Tellerik create compelling app experiences
across any screen with the

4
00:00:11.310 --> 00:00:16.170
Tellerik platform Telerx end to
end platform. Uniquely combines industry

5
00:00:16.170 --> 00:00:19.860
leading UI tools with cloud
services to simplify the entire

6
00:00:19.860 --> 00:00:24.360
app development cycle Tellerik offers
everything.net developers need to build

7
00:00:24.360 --> 00:00:33.780
quality apps faster. Try it
free at tellerik.com/platform that's tellerik.com/platform.

8
00:00:47.840 --> 00:00:52.730
Hansel minutes.com it's Hansel minutes,
all weekly discussion with web

9
00:00:52.730 --> 00:00:57.980
developer and technologist Scott Hanselman.
This is Lawrence Show number

10
00:00:57.980 --> 00:01:02.060
four 99. In this episode,
Scott talks with Monica and

11
00:01:02.060 --> 00:01:06.170
Koleski from Google about web
components and the Palomo project.

12
00:01:09.830 --> 00:01:11.930
Hi, this is Scott Hanselman.
This is another episode of

13
00:01:11.930 --> 00:01:16.220
Hansel minutes today. I'm talking
with Monica, <inaudible> from Google

14
00:01:16.280 --> 00:01:18.980
and she works on Google
Chrome and polymer. How are

15
00:01:18.980 --> 00:01:21.470
you? Not too bad. Hi,
thank you so much for

16
00:01:21.470 --> 00:01:23.960
having me. This is my
first ever podcast is really,

17
00:01:24.170 --> 00:01:27.830
yeah, I've done some amazing
stuff on the internet, some

18
00:01:27.830 --> 00:01:29.930
of the, which we're going
to discuss today, but I

19
00:01:29.930 --> 00:01:33.320
think the most important, the
most influential thing that I've

20
00:01:33.320 --> 00:01:36.920
seen that you have worked
on was a DNS server

21
00:01:36.980 --> 00:01:41.180
that does what It resolves
everything to cats. So I

22
00:01:41.180 --> 00:01:43.550
thought that the thing that
everybody wants in their life

23
00:01:43.580 --> 00:01:46.640
is to look at cat
images, which is true. But

24
00:01:46.640 --> 00:01:48.650
instead of going to search
for your images, I thought

25
00:01:48.650 --> 00:01:50.420
that you should just open
your browser and try to

26
00:01:50.420 --> 00:01:53.360
go to anything useful like
Google or your email. And

27
00:01:53.360 --> 00:01:55.520
instead of getting anything useful,
you would get a cat.

28
00:01:56.690 --> 00:02:01.310
And that's what that does
Just images or any HDP

29
00:02:01.310 --> 00:02:04.700
requests. It's images, it's images
from anger. So there's this

30
00:02:04.700 --> 00:02:08.390
static go server that just
gets cademy just from Reddit

31
00:02:08.420 --> 00:02:10.820
and like stores in there
for you. And it has

32
00:02:10.820 --> 00:02:12.410
to be a static IP.
So that's what it does.

33
00:02:12.410 --> 00:02:14.210
And it just gives you
a random chat image from

34
00:02:14.600 --> 00:02:17.300
anger. That's so cool. I
wonder if you could use

35
00:02:17.300 --> 00:02:20.390
that for like layout, like
there's different, there's different tools

36
00:02:20.390 --> 00:02:23.450
that lets you find like
when you need images and

37
00:02:23.450 --> 00:02:25.910
you don't have the images.
Yes. I thought my next

38
00:02:25.910 --> 00:02:27.980
troll one, if I, so
the greatest one is that

39
00:02:27.980 --> 00:02:29.990
if you have like open
wifi and you let people

40
00:02:29.990 --> 00:02:32.540
connect to it, you can
like mess up your router

41
00:02:32.540 --> 00:02:34.220
and they will get cats
too. So you can just

42
00:02:34.220 --> 00:02:37.040
stroll your neighbors and then
you can get really creepy.

43
00:02:37.040 --> 00:02:39.620
Like you can randomly flip
images on a webpage, but

44
00:02:39.620 --> 00:02:43.070
randomly so that sometimes you
get everything backwards, but sometimes

45
00:02:43.070 --> 00:02:45.800
their website looks normal. That's
so evil. I think that

46
00:02:45.800 --> 00:02:47.660
the fun thing about messing
with like DNS and the

47
00:02:47.660 --> 00:02:49.430
web like that is that
everyone's going to think they

48
00:02:49.430 --> 00:02:52.820
have a virus or a
bad plugin or an extension,

49
00:02:52.820 --> 00:02:56.210
and it's all done downstream,
upstream Instead. You've just said,

50
00:02:56.210 --> 00:03:00.760
Monica is amazing. Wifi have
fun. So The thing that

51
00:03:00.760 --> 00:03:02.500
I wanted to talk to
you about that I want

52
00:03:02.500 --> 00:03:07.930
to better understand is what
web components are, what polymer

53
00:03:07.930 --> 00:03:11.530
is and what it means
to the average Jane and

54
00:03:11.530 --> 00:03:13.960
Joe out there who are
listening and doing web development.

55
00:03:14.580 --> 00:03:17.940
Cool. So let's start with
web components. So we providing

56
00:03:17.940 --> 00:03:20.820
HTML for a long time
and we have like dibs

57
00:03:20.820 --> 00:03:23.250
and AEs and inputs and
buttons and that's about it,

58
00:03:23.280 --> 00:03:26.190
right? And the platform hasn't
really changed. Sometimes we get

59
00:03:26.190 --> 00:03:28.740
new input types, like input
type equals date and break

60
00:03:28.740 --> 00:03:30.770
cited, but it's still just
input, right? We haven't gotten

61
00:03:30.780 --> 00:03:34.530
new texts. So what component
is basically your own custom

62
00:03:34.530 --> 00:03:37.830
element you get to create,
I don't know, Monica's cat

63
00:03:37.890 --> 00:03:40.320
box of cats and it's
a tag. It's an HTML

64
00:03:40.320 --> 00:03:43.050
tag. And it's as if
the browser always knew what

65
00:03:43.050 --> 00:03:46.170
that was. So you're saying
literally I would say open

66
00:03:46.170 --> 00:03:49.740
brace or open bracket, Monica
is crazy box of cats

67
00:03:50.250 --> 00:03:52.350
closed and that is a
tag. Just like tackle it.

68
00:03:52.770 --> 00:03:55.380
Yeah. That is an element
like table is an element

69
00:03:55.410 --> 00:03:58.470
is just your thing. And
you've developed it and your

70
00:03:58.470 --> 00:04:00.270
browser knows what it is.
It knows what it means,

71
00:04:01.060 --> 00:04:03.660
and this is coming natively.
So it's very slowly progressing

72
00:04:03.660 --> 00:04:05.580
because it's actually really hard
to implement this in all

73
00:04:05.580 --> 00:04:08.370
the browsers, but this is
what a web component is.

74
00:04:09.030 --> 00:04:11.370
And it's really nice because
much like HTML works with

75
00:04:11.370 --> 00:04:13.620
everything on the web, because
it's just an extension of

76
00:04:13.620 --> 00:04:15.660
HTML. It's going to work
with anything on the web.

77
00:04:15.660 --> 00:04:17.940
So it's going to go
work with whatever crazy framework

78
00:04:17.940 --> 00:04:21.060
you're using react or Ember
or bootstrap where it doesn't

79
00:04:21.060 --> 00:04:25.740
matter. It's just HTML. When
people learned HTML like 15,

80
00:04:25.740 --> 00:04:27.630
20 years ago, one of
the first things that we

81
00:04:27.630 --> 00:04:30.780
teach when we were teaching
HTML like three, is that

82
00:04:30.780 --> 00:04:33.060
we would make a tag
and then we'd make up

83
00:04:33.060 --> 00:04:36.810
a tag, you know, open
bracket Scott. And we would

84
00:04:36.810 --> 00:04:42.090
simply notice that it was
ignored. Right, Right. So there's

85
00:04:42.090 --> 00:04:45.180
magic. Now that's being built
in the browsers where you

86
00:04:45.180 --> 00:04:47.520
would have an associated like
HTML file. So if you

87
00:04:47.520 --> 00:04:49.770
want to open bracket squat,
it wouldn't have to be

88
00:04:49.770 --> 00:04:53.070
like a squat dash something
because we're allowing one words

89
00:04:53.070 --> 00:04:55.170
to belong to the browser
in case the browser wants

90
00:04:55.170 --> 00:04:58.530
to extend it. So you
would have, let's say Scott

91
00:04:58.740 --> 00:05:02.670
dash element God, Right? Yeah.
Like dates. Like if I

92
00:05:02.670 --> 00:05:04.740
was to make my own
calendar Exactly. Squad slash date,

93
00:05:04.800 --> 00:05:08.040
and then you would have
a corresponding HTML import that

94
00:05:08.040 --> 00:05:10.140
would be squad dash day
dot HTML. And that's what

95
00:05:10.140 --> 00:05:12.800
he would define what squad
dash date means. So it

96
00:05:12.810 --> 00:05:15.480
would have markup, it would
have some its own HTML.

97
00:05:15.480 --> 00:05:17.940
What it looks like would
have some styles. It had,

98
00:05:18.000 --> 00:05:19.980
it could have like a
ton of JavaScript about what

99
00:05:19.980 --> 00:05:21.840
it actually does, but at
the end of the day,

100
00:05:21.900 --> 00:05:23.820
all of that gets built
up in this nice little

101
00:05:23.820 --> 00:05:27.240
box called Scott dash date.
Okay. So how is that

102
00:05:27.240 --> 00:05:31.770
different from me saying div
class Scott dash date? Good

103
00:05:31.770 --> 00:05:35.130
question. So I really like
HTML and I really like

104
00:05:35.130 --> 00:05:37.800
CSS and there's this thing
that drives me insane where

105
00:05:38.130 --> 00:05:41.400
CSS is not encapsulated in
any way. Everything's global. All

106
00:05:41.400 --> 00:05:45.260
the styles are global. So
if I, you know, important

107
00:05:45.260 --> 00:05:46.920
to libraries, this is the,
the example that I usually

108
00:05:46.920 --> 00:05:50.280
do. You're styling your application
and you have a button

109
00:05:50.370 --> 00:05:52.110
and you're not really great
at CSS. Are you going

110
00:05:52.110 --> 00:05:54.840
to import these two random
libraries that are going to

111
00:05:54.840 --> 00:05:56.670
style this button and make
it really pretty? Cause you

112
00:05:56.670 --> 00:05:57.920
want it to, one of
them is going to be

113
00:05:57.920 --> 00:05:59.300
glowing and one of them
is going to be, I

114
00:05:59.300 --> 00:06:03.560
don't know, shiny, but if
those libraries are designed poorly,

115
00:06:03.590 --> 00:06:05.630
they might ask you to
add the same class to

116
00:06:05.630 --> 00:06:08.480
these two different buttons. And
there's no NCSS to tell

117
00:06:08.480 --> 00:06:10.940
it, listen, I just want
this particular CSS important to

118
00:06:10.940 --> 00:06:13.220
apply to this particular button
is going to apply to

119
00:06:13.220 --> 00:06:16.550
anything in your application. And
the thing about web components

120
00:06:16.580 --> 00:06:19.790
is that everything's encapsulated to
that element. So it doesn't

121
00:06:19.790 --> 00:06:23.330
matter what CSS classes, your
web component uses. They just

122
00:06:23.330 --> 00:06:25.790
live inside of that. Instead
of that element, you can

123
00:06:25.790 --> 00:06:27.380
think of it as a
castle. This is the analogy

124
00:06:27.380 --> 00:06:29.660
that I usually use. It's
a castle and everything lives

125
00:06:29.660 --> 00:06:31.040
inside of it. So it's
not going to go out

126
00:06:31.040 --> 00:06:32.900
and it's not like your
other styles are not going

127
00:06:32.900 --> 00:06:35.180
to like leak in. So
it was a scoping thing.

128
00:06:35.830 --> 00:06:38.420
So now we need drop
it's exactly how you've never

129
00:06:38.420 --> 00:06:40.490
been able to like interact
with input by just like

130
00:06:40.490 --> 00:06:44.990
making random classes, like side
effecting input type equals date

131
00:06:45.000 --> 00:06:46.850
to be pretty. It's always
ugly, no matter what you

132
00:06:46.850 --> 00:06:50.810
do. So squad dash date,
whatever it uses, it just

133
00:06:50.810 --> 00:06:54.500
stays inside Scottish date. It
doesn't come out the end

134
00:06:54.500 --> 00:06:57.430
alone component. Cause I, I
see I'm always in PR

135
00:06:57.460 --> 00:06:59.350
I think we're all we
know the web well enough

136
00:06:59.350 --> 00:07:02.560
that we're always impressed when
things can change a page

137
00:07:02.560 --> 00:07:05.680
or inject themselves into the
page without messing up the

138
00:07:05.680 --> 00:07:08.500
page. Like one of the
most interesting things that I've

139
00:07:08.500 --> 00:07:13.810
ever seen it was bookmarklets
like delicious or Pinterest that

140
00:07:13.870 --> 00:07:17.920
almost add their own interaction
model and inject dibs into

141
00:07:17.920 --> 00:07:20.410
a page with their own
style and their own everything.

142
00:07:20.410 --> 00:07:22.570
And they're so smart about
scoping that they don't mess

143
00:07:22.570 --> 00:07:25.150
up the page for anybody.
Yeah. But that's just, that's

144
00:07:25.150 --> 00:07:27.910
sort of magical because they
use like super obscure class

145
00:07:27.910 --> 00:07:31.030
names that they're hoping they're
never going to hit, but

146
00:07:31.030 --> 00:07:34.270
I made a really dumb
bookmarklet ones that basically translated

147
00:07:34.360 --> 00:07:36.740
English words to emoji and
the way I would do

148
00:07:36.740 --> 00:07:38.380
it, I was just like
parse every single word in

149
00:07:38.380 --> 00:07:40.210
the page. And if I
knew what that was called

150
00:07:40.210 --> 00:07:42.010
an emoji, I would just
replace it. But it just

151
00:07:42.010 --> 00:07:44.650
basically wrapped my span in
a tag called emoji and

152
00:07:44.650 --> 00:07:46.750
I knew how to style
it. So eventually I hit

153
00:07:46.750 --> 00:07:48.820
a page where if you
use my bookmarklet, it would

154
00:07:48.820 --> 00:07:51.910
just like break everything and
it was a disaster. Okay.

155
00:07:51.910 --> 00:07:54.850
That makes sense. And the
other super nice thing about

156
00:07:54.850 --> 00:07:57.190
what components does that because
they're HTML, they work with

157
00:07:57.190 --> 00:07:59.410
everything. So sometimes you're going
to run into problems. Like,

158
00:07:59.620 --> 00:08:01.900
I don't know, you can't
use Ember and react together,

159
00:08:01.900 --> 00:08:03.670
right? They're not things that
you can drop in a

160
00:08:03.670 --> 00:08:06.700
page and they're going to
commute. Even though they have

161
00:08:06.700 --> 00:08:09.730
an idea about their own
customer components, you can just

162
00:08:09.730 --> 00:08:12.190
use them together. But because
what components are part of

163
00:08:12.190 --> 00:08:14.350
the platform, there are thing
that the browser cares about.

164
00:08:14.650 --> 00:08:16.450
They can be used with
any framework. So they're super

165
00:08:16.450 --> 00:08:21.220
reusable and super friendly. Why
do some people think that

166
00:08:21.220 --> 00:08:27.250
web components is like controversial
Because changing the Dom is

167
00:08:27.250 --> 00:08:30.100
hard and scary, I think
is one of the things.

168
00:08:30.130 --> 00:08:32.770
And because they would allow
you to you, you have

169
00:08:32.770 --> 00:08:35.500
to trust that this component
that you're using has been

170
00:08:35.500 --> 00:08:37.870
developed well. But I think
this is the same problem

171
00:08:37.870 --> 00:08:39.700
that you have with any
library. Like the moment you

172
00:08:39.700 --> 00:08:42.400
commit to using somebody else's
code, you have to trust

173
00:08:42.400 --> 00:08:45.850
that their code was written
in a good way. So

174
00:08:45.880 --> 00:08:48.070
sometimes you can use maybe
what components are a slope

175
00:08:48.070 --> 00:08:51.790
that are going to like
slow down your rendering. But

176
00:08:51.790 --> 00:08:54.190
it's, I think that's like,
I think that's going to

177
00:08:54.520 --> 00:08:57.510
start being fixed as they
become more popular because they're

178
00:08:57.510 --> 00:08:59.220
so new that right now
we don't have any web

179
00:08:59.220 --> 00:09:03.780
components. We have polymer web
components because say node polymer

180
00:09:03.780 --> 00:09:05.970
helps you. Right. But components.
But because what components right

181
00:09:05.970 --> 00:09:08.730
now only work natively in
Chrome. Basically. They're not very

182
00:09:08.730 --> 00:09:11.550
popular. Nobody wants to write
just actresses, just work in

183
00:09:11.550 --> 00:09:14.360
Chrome. So, so let's talk
about that. You said they

184
00:09:14.360 --> 00:09:17.570
work natively in Chrome. I
think that people who are

185
00:09:17.570 --> 00:09:21.260
listening may have heard the
word polyfill before, help me

186
00:09:21.260 --> 00:09:25.490
understand the difference between when
someone says, Hey, this would

187
00:09:25.490 --> 00:09:28.400
be cool. If the web
did this, then they write

188
00:09:28.400 --> 00:09:31.310
a JavaScript library that kind
of like fakes it or

189
00:09:31.310 --> 00:09:35.540
99% makes it work. And
then it becomes quote native.

190
00:09:35.960 --> 00:09:38.840
Yeah. So poly fill is
actually really funny. It comes

191
00:09:38.840 --> 00:09:41.300
from the brand of this
English thing. You know, when

192
00:09:41.300 --> 00:09:43.130
you have a hole in
the wall and then you

193
00:09:43.130 --> 00:09:45.620
have this like white specky
thing and you put it

194
00:09:45.620 --> 00:09:47.140
in your hole and then
you paint over it and

195
00:09:47.810 --> 00:09:50.450
Spackle on the West coast
of the U S It's

196
00:09:50.450 --> 00:09:53.510
called poly. The brand is
called polyfill in the UK.

197
00:09:54.230 --> 00:09:55.910
So this is exactly what
it is. You have a

198
00:09:55.910 --> 00:09:59.420
whole on the web platform,
for example, the shadow Dom,

199
00:09:59.420 --> 00:10:01.940
the shadow Dom doesn't exist,
let's say in internet Explorer,

200
00:10:01.970 --> 00:10:05.390
10, and you really want
to use features from the

201
00:10:05.390 --> 00:10:07.910
shadow dump. So there's a
JavaScript library. That's going to

202
00:10:07.910 --> 00:10:10.190
run before your page loads.
It's going to be the

203
00:10:10.190 --> 00:10:12.590
first thing that your browser
hits and the first, and

204
00:10:12.600 --> 00:10:14.360
the only thing that this
JavaScript library is going to

205
00:10:14.360 --> 00:10:17.450
do is basically fill this
gap that you want to

206
00:10:17.450 --> 00:10:19.930
use. So it's going to
fill it with spackle and

207
00:10:19.940 --> 00:10:21.530
you're going to paint over
it. And now when your

208
00:10:21.530 --> 00:10:24.350
page is ready to load,
your code is like, Oh,

209
00:10:24.350 --> 00:10:26.090
look, that hole is fixed.
I know exactly what that

210
00:10:26.090 --> 00:10:28.370
code is supposed to do.
So you now have this

211
00:10:28.370 --> 00:10:32.690
magical functionality that isn't natively
available in your browser. Okay.

212
00:10:32.720 --> 00:10:37.040
So I've got a browser
that understands, you know, geolocation

213
00:10:37.070 --> 00:10:39.500
natively. It goes to your
location. But if I have

214
00:10:39.500 --> 00:10:42.830
that one, it doesn't use
geolocation. Maybe I can fake

215
00:10:42.830 --> 00:10:46.010
it exactly with a poly
cell with a polyfill. Okay.

216
00:10:46.250 --> 00:10:49.730
So then you're saying that
web components is something that

217
00:10:49.730 --> 00:10:52.850
we, you know, we, the
people, or some people want

218
00:10:52.850 --> 00:10:57.020
to be native. It isn't
yes. Are there polyfills to

219
00:10:57.020 --> 00:11:01.430
fake it? So welcome. So
we have finally agreed all

220
00:11:01.430 --> 00:11:03.910
of us as browser vendors,
that web components are a

221
00:11:03.920 --> 00:11:07.370
thing we like, and what
components has about four different

222
00:11:08.180 --> 00:11:10.580
polyfills under it. There's this
thing called the shadow Dom,

223
00:11:11.540 --> 00:11:15.560
which lets you basically encapsulate
all of this custom HTML

224
00:11:15.560 --> 00:11:19.790
into like one new brand
new tag, whereas HTML imports,

225
00:11:21.020 --> 00:11:23.600
there's the actual custom elements.
So how do we do

226
00:11:23.600 --> 00:11:25.370
we actually tell the browser,
this is the custom element

227
00:11:25.370 --> 00:11:27.020
and there's a fourth one
that I can think about

228
00:11:27.020 --> 00:11:30.230
right now Because like, is
it because you can't remember

229
00:11:30.230 --> 00:11:32.990
it or, cause it's weird
because I can't remember templates

230
00:11:33.410 --> 00:11:36.110
Templates. Thank you. So yeah.
So templates are how you

231
00:11:36.110 --> 00:11:38.780
would read, thank you so
much or how you would

232
00:11:38.780 --> 00:11:42.350
reuse these enough. You would
have used the same, basically

233
00:11:43.280 --> 00:11:47.660
a blueprint for every element.
And those all seem like

234
00:11:47.660 --> 00:11:49.910
things that are like individually,
like totally useful things we

235
00:11:49.910 --> 00:11:51.320
would want. Like I know
people have been talking about

236
00:11:51.320 --> 00:11:54.700
the shadow Dom for like
five years and everyone's always

237
00:11:54.700 --> 00:11:56.770
wanting to imports and they
do all sorts of fake

238
00:11:56.770 --> 00:12:00.190
things with CSS and JavaScript
to make imports work. And

239
00:12:00.190 --> 00:12:04.200
everyone loves templates, Right? So
you could have HTML imports

240
00:12:04.200 --> 00:12:06.090
without having the shadow dump.
So this is why we

241
00:12:06.090 --> 00:12:08.130
keep them separate. And each
of them we poly fill

242
00:12:08.130 --> 00:12:13.110
individually and different browsers have
implemented different things. So I

243
00:12:13.110 --> 00:12:16.350
think Firefox is actually catchy.
I think Firefox is starting

244
00:12:16.350 --> 00:12:19.290
to have the shadowed on
possibly behind a flag. And

245
00:12:19.290 --> 00:12:22.260
I know what components are
coming to like edge and

246
00:12:22.260 --> 00:12:24.690
Safari. So everybody's like working
slowly on each of these

247
00:12:24.690 --> 00:12:29.490
four areas. Polymer makes something
called web components dot JS,

248
00:12:29.520 --> 00:12:32.100
which is a polyfill that
it can drop in your

249
00:12:32.100 --> 00:12:36.300
application to suddenly get what
components working, but not the

250
00:12:36.300 --> 00:12:39.510
shadow dump. So polymers 0.5
back in the days used

251
00:12:39.510 --> 00:12:42.090
to actually try to poly
fill the shadow Dom. So

252
00:12:42.210 --> 00:12:45.240
makeup, basically this like super
fancy and encapsulate a dumb,

253
00:12:45.300 --> 00:12:47.700
but it's actually really hard
to do it from outside

254
00:12:47.700 --> 00:12:50.580
of the browser. So we
stopped doing that. Okay. So

255
00:12:50.580 --> 00:12:52.470
let me see if I
can paraphrase. So I understand

256
00:12:52.470 --> 00:12:55.110
what's going on. No, this
is good. This is not

257
00:12:55.110 --> 00:12:57.870
sorry at all. You're educating
the people and myself included.

258
00:12:58.230 --> 00:13:02.010
So web components is the
name for a collection of

259
00:13:02.070 --> 00:13:06.030
specifications that are separate individual
and useful on their own.

260
00:13:06.660 --> 00:13:10.050
Those are custom elements, which
we like Scott or the

261
00:13:10.050 --> 00:13:13.500
cat element or whatever, or
Scott dash to date. Then

262
00:13:13.500 --> 00:13:16.260
there's HTML imports, there's templates.
And then there's a shadow.

263
00:13:16.260 --> 00:13:20.280
Dom Chrome supports these all
natively right now. Cause it's

264
00:13:20.280 --> 00:13:23.610
almost like that's where Chrome
gets to play in practice

265
00:13:23.610 --> 00:13:26.400
and get this stuff working.
And then it provides pressure

266
00:13:26.400 --> 00:13:28.710
on other vendors and then
the web gets better for

267
00:13:28.710 --> 00:13:33.390
everybody. Then I can get
polyfills that are JavaScript libraries

268
00:13:33.420 --> 00:13:36.630
to make it like these
things are working on other

269
00:13:36.630 --> 00:13:39.690
browsers that don't support natively.
And there's more than one

270
00:13:39.690 --> 00:13:41.520
example. Like I know, I
know Mozilla has got one

271
00:13:41.520 --> 00:13:45.420
called X tag is data
that's there polyfill for web.

272
00:13:45.870 --> 00:13:50.550
Yeah. So it's much like
having different rendering engines. It's

273
00:13:50.550 --> 00:13:52.800
good to have different polyfills
because they might do different

274
00:13:52.800 --> 00:13:55.320
things. And because it's just
Java script, everybody can write

275
00:13:55.410 --> 00:13:59.420
their own polyfill for things.
Okay. So yeah. Tag is,

276
00:13:59.420 --> 00:14:04.080
is one of them Polymer,
a polyfill for web components,

277
00:14:04.410 --> 00:14:07.080
Paula polymers a little bit
more than that. So polymer

278
00:14:07.080 --> 00:14:10.890
is a library that helps
you write web components. So

279
00:14:11.130 --> 00:14:13.350
it comes with a polyfill
and it comes with a

280
00:14:13.350 --> 00:14:16.770
lot of sugaring around actually
writing these custom elements because

281
00:14:17.610 --> 00:14:20.310
writing custom elements right now,
it's a lot of you

282
00:14:20.310 --> 00:14:23.040
having to do things manually.
So it's exactly how you

283
00:14:23.040 --> 00:14:26.580
would create in JavaScript and
HTML element manually. So you

284
00:14:26.580 --> 00:14:30.570
do document, create, create elements,
span, and you would start

285
00:14:30.570 --> 00:14:32.640
adding attributes to it by
hand. And it's really annoying.

286
00:14:33.120 --> 00:14:34.470
And you would have to
do the same thing with

287
00:14:34.720 --> 00:14:38.160
Scott dash date. So polymer
wraps it all around and

288
00:14:38.160 --> 00:14:44.130
like this sugary delicious goodness,
it's butterflies and unicorns. And

289
00:14:44.130 --> 00:14:46.650
you get to, you know,
read your markup in HTML

290
00:14:46.650 --> 00:14:48.270
and you read to get
your, read your styles for

291
00:14:48.270 --> 00:14:50.610
your custom element in CSS.
And there was like JavaScript

292
00:14:50.850 --> 00:14:53.690
that tells you what that
element actually does. And then

293
00:14:53.690 --> 00:14:55.670
Palmer wraps it up and
talks to the browser and

294
00:14:55.670 --> 00:14:57.440
tells the browser, listen, I
have a custom element for

295
00:14:57.440 --> 00:14:59.390
you. This is what it
is and does all the

296
00:14:59.390 --> 00:15:03.010
grunt work for you. Okay,
cool. So I'm looking at

297
00:15:03.010 --> 00:15:06.070
the polymer page and there's
a really great example, which

298
00:15:06.070 --> 00:15:09.580
is like extremely clear. I
want to have a Google

299
00:15:09.580 --> 00:15:12.670
map in the past. I
would make a div, I

300
00:15:12.670 --> 00:15:14.890
give it a certain ID
or a certain class I'd

301
00:15:14.890 --> 00:15:18.010
include a bunch of crap.
I'd have to include CSS

302
00:15:18.010 --> 00:15:20.440
and JavaScript and all that
kind of stuff. Now I

303
00:15:20.440 --> 00:15:23.440
say here's the polyfill which
in this case is web

304
00:15:23.440 --> 00:15:28.600
components. And then I import
the element, which is Google

305
00:15:28.600 --> 00:15:31.960
map dot HTML. And I
say Google dash map. And

306
00:15:32.290 --> 00:15:35.320
now that Google dash map,
that kind of reminds me

307
00:15:35.320 --> 00:15:40.600
about data hyphen star, which
was like an attribute you

308
00:15:40.600 --> 00:15:44.290
would put on HTML five
stuff, right? Data hyphen is

309
00:15:44.320 --> 00:15:46.600
like a prefix and then
anyone else can put anything

310
00:15:46.600 --> 00:15:49.750
they want to at the
end. Right. But you're, you

311
00:15:49.750 --> 00:15:53.650
can only prefix like a
div, right? So, right. So

312
00:15:53.710 --> 00:15:54.970
at the end of the
day, you're still just like,

313
00:15:55.000 --> 00:15:57.790
copy pasting this giant block
of code into your main

314
00:15:57.790 --> 00:16:01.480
document and everybody can inspect
it. Everybody can style it

315
00:16:01.480 --> 00:16:05.470
by accident. Like if your
thing that has the data

316
00:16:05.470 --> 00:16:09.040
dash map would have a
class, I dunno, called map.

317
00:16:09.190 --> 00:16:11.350
And somebody else also uses
a class called map. Well,

318
00:16:11.350 --> 00:16:15.130
that elements hosts. But if
you, if you include Google

319
00:16:15.130 --> 00:16:17.020
dash map, it doesn't matter
what it does. You just

320
00:16:17.020 --> 00:16:19.180
now have Google dash map
just like you would have

321
00:16:19.390 --> 00:16:23.560
a div. Okay. So then
I can have Google dash

322
00:16:23.560 --> 00:16:25.840
map or Microsoft dash map
and all that kind of

323
00:16:25.840 --> 00:16:28.270
stuff. And they live together
and they don't hurt each

324
00:16:28.270 --> 00:16:32.860
other. Yeah. Cats and dogs
living together. It's perfect. So,

325
00:16:33.340 --> 00:16:36.190
but what about this thing
that we complained about for

326
00:16:36.190 --> 00:16:40.240
years called vendor prefixes? What's
the difference between having a,

327
00:16:40.330 --> 00:16:43.630
a web component that has
a prefix and vendor prefixes

328
00:16:43.630 --> 00:16:48.940
cause vendor prefixes, we agreed
were bad. Right? So this

329
00:16:48.940 --> 00:16:52.240
isn't, so it's the Google
is not a prefix year.

330
00:16:52.240 --> 00:16:54.250
It's just, we're trying to
explain it. It's actually using

331
00:16:54.370 --> 00:16:56.650
the Google maps API, right?
It could be called anything

332
00:16:56.650 --> 00:17:00.940
you want is just an
element. For example, polyman makes

333
00:17:00.940 --> 00:17:03.280
elements. The things that I
work on are called paper

334
00:17:03.280 --> 00:17:06.640
dash and they're just like
material design implementations of really

335
00:17:06.640 --> 00:17:10.120
common UI elements, like a
paper button, which is the

336
00:17:10.120 --> 00:17:13.390
material design look of a
button. Okay. So it's just

337
00:17:13.390 --> 00:17:16.060
a scoping exercise. Yeah. But
like, if you, if you

338
00:17:16.060 --> 00:17:19.360
use a Google dash map
in IE or Google dash

339
00:17:19.360 --> 00:17:21.190
mapping Chrome, it's going to
look and it's going to

340
00:17:21.190 --> 00:17:24.070
behave exactly the same. It's
not a different element. It's

341
00:17:24.070 --> 00:17:26.920
not implemented differently for a
browser, much like how div

342
00:17:26.950 --> 00:17:29.110
works exactly the same and
naive and exactly the same

343
00:17:29.110 --> 00:17:32.740
in Chrome. Okay. That makes
sense. So vendor prefixes were

344
00:17:32.740 --> 00:17:36.760
bad because it was something
that didn't work everywhere. And

345
00:17:36.790 --> 00:17:39.850
it was a way of
saying our browser is special

346
00:17:39.850 --> 00:17:44.410
and here's a thing we
made up well, web components

347
00:17:44.530 --> 00:17:46.960
and saying like a prefix,
it's just like a namespace

348
00:17:46.960 --> 00:17:50.460
in Java or you're just
kind of setting aside some

349
00:17:50.460 --> 00:17:55.080
scoping area and then Google
dash school dash that yeah,

350
00:17:55.760 --> 00:17:59.720
Exactly. You could call it
anything prefixes where I'm Chrome

351
00:17:59.720 --> 00:18:01.490
and I've come up with
border blocks, but I'm really

352
00:18:01.490 --> 00:18:03.920
nervous about calling it border
box because nobody else has

353
00:18:03.920 --> 00:18:06.410
border blocks. I'm clinical it,
you know, WebKit dashboard or

354
00:18:06.410 --> 00:18:09.080
bugs. Cause we use WebKit
and then Mozilla comes around

355
00:18:09.770 --> 00:18:13.700
and mistakes remained. This is
the future that we live

356
00:18:13.700 --> 00:18:18.080
in where boxes are. Okay.
So is this like, I

357
00:18:18.080 --> 00:18:20.360
know how, remember how everything
was like web 2.0 blah,

358
00:18:20.360 --> 00:18:22.670
blah, blah. Like it does
kind of feel like web

359
00:18:22.670 --> 00:18:26.120
components is the next step
for the web. God, I

360
00:18:26.120 --> 00:18:28.910
hope so. They're my favorite
thing ever. Does it really

361
00:18:28.910 --> 00:18:31.580
just make life better? Really?
Do you get to stop

362
00:18:31.580 --> 00:18:34.310
like writing this diff soup
that you always have to

363
00:18:34.310 --> 00:18:35.930
write where you're like, I'm
going to make this really

364
00:18:35.930 --> 00:18:40.220
fancy animated image carousel and
I have 17 nested. It

365
00:18:40.220 --> 00:18:43.780
was an images and it's
great. Yeah. And I would

366
00:18:43.790 --> 00:18:45.530
just have to, like, you
can put that away in

367
00:18:45.530 --> 00:18:47.480
a closet and be like,
listen, somebody has done this.

368
00:18:47.660 --> 00:18:49.940
Look at my nice little
markup in my main index

369
00:18:49.940 --> 00:18:52.640
dot HTML. I'm just saying
image carousel. And that's it.

370
00:18:53.120 --> 00:18:56.630
What about Styling? Cause I
think about like when I

371
00:18:56.630 --> 00:19:00.710
bring in like YouTube and
beds that ends up bringing

372
00:19:00.710 --> 00:19:03.740
in an eye frame, which
is kind of an I

373
00:19:03.740 --> 00:19:07.010
frame is kind of a
poor man's scoping exercise, you

374
00:19:07.010 --> 00:19:09.320
know? But inevitably we want
to reach into that and

375
00:19:09.320 --> 00:19:11.240
style that. So we want
to change stuff. Could I

376
00:19:11.600 --> 00:19:14.750
change a web component from
there? Yes. So this is

377
00:19:14.750 --> 00:19:17.120
also a separate working on.
So here's the thing. Input,

378
00:19:17.120 --> 00:19:20.240
typical state surprise. It's actually
a custom element. It's using

379
00:19:20.240 --> 00:19:23.360
the shadow Dom behind closed
doors. But nobody's been telling

380
00:19:23.360 --> 00:19:25.400
you because the web platform
keeps secrets away from you

381
00:19:25.400 --> 00:19:30.650
as a developer, but it's
actually, I know. So input

382
00:19:30.800 --> 00:19:32.390
equals date. Whenever you click
on it, do you get

383
00:19:32.390 --> 00:19:34.730
this like giant drop down
that has the date. Right.

384
00:19:35.510 --> 00:19:37.190
But you've never seen it
in markup. Like you only

385
00:19:37.190 --> 00:19:39.770
see input typicals. It, it
lives somewhere and that's, that's

386
00:19:39.770 --> 00:19:41.600
the shadow Dom. So the
shadow norm is not exposed

387
00:19:41.600 --> 00:19:44.300
to you in your, in
your markup and you can't

388
00:19:44.300 --> 00:19:46.340
actually get to it and
style it. Like you've, it's

389
00:19:46.340 --> 00:19:48.200
very hard to actually style
that drop down. There's these

390
00:19:48.200 --> 00:19:52.670
like magical web kids, selectors
pseudo selector. So you're saying

391
00:19:52.700 --> 00:19:55.280
that the little drop down
the calendar that I never,

392
00:19:55.340 --> 00:19:57.230
I can't see your touch,
but I know it exists.

393
00:19:57.380 --> 00:20:00.020
Yeah. I just, in my
mind, I just put that

394
00:20:00.020 --> 00:20:02.930
in the, it was done
natively category. It is, but

395
00:20:02.930 --> 00:20:04.340
it's in the shadow down,
but it is in the

396
00:20:04.340 --> 00:20:07.200
shadows. Yeah. We've always had
shadow dogs for these are

397
00:20:07.230 --> 00:20:09.560
things like that. It's just,
we haven't had them as

398
00:20:09.560 --> 00:20:13.040
developers, which I think is
unfair. Yeah. So you can't

399
00:20:13.040 --> 00:20:14.900
style it, right? Because it's
in the shadow, Dom it's

400
00:20:14.900 --> 00:20:16.790
in a castle. So when
you think of a web

401
00:20:16.790 --> 00:20:18.740
component as a castle, you
can't just go into that

402
00:20:18.740 --> 00:20:23.180
castle willingly. So the spec
that we're working on is

403
00:20:23.180 --> 00:20:26.330
custom properties. And this is
basically you as an element

404
00:20:26.420 --> 00:20:29.390
designer, have the ability to
say, listen, element user. I

405
00:20:29.390 --> 00:20:30.770
know you're going to want
to style this thing. So

406
00:20:30.770 --> 00:20:32.480
you're going to probably want
to style the background of

407
00:20:32.480 --> 00:20:34.760
it and like the font
style and the colors. So

408
00:20:34.760 --> 00:20:38.570
I'm going to expose these
CSS properties to you. And

409
00:20:38.570 --> 00:20:40.100
they're going to be prefixed
with a dash dash so

410
00:20:40.100 --> 00:20:42.200
that the browser knows they're
like special properties that should

411
00:20:42.200 --> 00:20:45.440
look into the shadow, but
they're just normal CSS properties.

412
00:20:45.440 --> 00:20:47.290
And you would use them
this as you would, us

413
00:20:47.290 --> 00:20:51.370
as properties. So ideally in
a perfect world input type

414
00:20:51.370 --> 00:20:55.210
equals date would have the
CSS property called dropdown background

415
00:20:55.270 --> 00:20:59.110
and drop down button color
and drop down button style.

416
00:20:59.350 --> 00:21:02.140
And you could make it
actually match your application instead

417
00:21:02.140 --> 00:21:06.810
of the thing we have
now. Okay. So that's interesting.

418
00:21:07.770 --> 00:21:11.910
That means that the web
component makes a conscious decision

419
00:21:12.150 --> 00:21:15.030
to expose these things. Cause
you don't want to give

420
00:21:15.030 --> 00:21:17.970
the user too much power,
right? Like the good benefit

421
00:21:17.970 --> 00:21:21.690
of what components is that
they're encapsulated so random, you

422
00:21:21.690 --> 00:21:24.570
know, CSS libraries where I'm
just like stumble over it

423
00:21:24.570 --> 00:21:28.620
and be like, I'm going
to make everything blue. So

424
00:21:28.710 --> 00:21:30.750
you, as an element designer
are going to be like,

425
00:21:30.750 --> 00:21:31.890
these are the things that
I know you're going to

426
00:21:31.890 --> 00:21:34.170
want and I'm going to
give them to you so

427
00:21:34.170 --> 00:21:35.790
that you can style them.
If you want them, you

428
00:21:35.790 --> 00:21:37.320
don't have to stop and
you can use a default

429
00:21:37.320 --> 00:21:39.240
style style. But if you
want to, here are the

430
00:21:39.240 --> 00:21:42.120
properties that you care about.
You know, what's so crazy

431
00:21:42.120 --> 00:21:45.510
about this is it feels
like HTML and the web

432
00:21:45.540 --> 00:21:49.380
is actually becoming a proper
application platform with a maturity.

433
00:21:49.560 --> 00:21:52.830
Right. And everything is basically
HTML is just better. We

434
00:21:52.830 --> 00:21:56.520
have finally like made HTML
useful, Even, even more like

435
00:21:56.520 --> 00:22:00.450
web components. I'm thinking about
the past where, you know,

436
00:22:00.450 --> 00:22:03.180
you've got fields in C
plus plus, or, you know,

437
00:22:03.180 --> 00:22:06.810
and then you've got public
properties. Custom properties are really

438
00:22:07.020 --> 00:22:12.390
public properties that are, have
a backing. Yeah, exactly. That's

439
00:22:12.390 --> 00:22:16.800
crazy. Okay. So then dash
dash is the convention That's

440
00:22:16.800 --> 00:22:20.220
just basically tells the browser.
I'm not typing chunk. This

441
00:22:20.220 --> 00:22:22.500
is the thing you care
about. I see. Okay. So

442
00:22:22.500 --> 00:22:26.070
then Scott dash date is
totally scoped. It's its own

443
00:22:26.070 --> 00:22:28.770
castle, but I kind of
punch a hole in a

444
00:22:28.770 --> 00:22:31.230
couple of spots and I'll
say, Yeah, I call them

445
00:22:31.230 --> 00:22:35.640
bridges. You make little bridges
to get into. So, you

446
00:22:35.640 --> 00:22:39.240
know, dash dash accent color
or dash dash main color.

447
00:22:39.240 --> 00:22:42.360
And now only those things
can. Yes. And because that's

448
00:22:42.360 --> 00:22:44.520
a little bit annoying, so
it can get like, imagine

449
00:22:44.520 --> 00:22:46.350
you have made a button
and you were like, listen,

450
00:22:46.350 --> 00:22:48.600
I've given you a city
and I've given you background

451
00:22:48.600 --> 00:22:50.310
color, but then you use
it comes in. It's like,

452
00:22:50.340 --> 00:22:51.750
Oh, I really want Pat
it. And you're like, cool.

453
00:22:51.750 --> 00:22:53.490
Here has to have patting.
And there was like, Oh,

454
00:22:53.670 --> 00:22:55.920
padding is great. Capacity is
great. I really want, I

455
00:22:55.920 --> 00:22:59.580
don't know, text shadow. So
we are also working on

456
00:22:59.580 --> 00:23:02.850
creating the spec called mixes.
So basically you've exposed this

457
00:23:02.860 --> 00:23:05.880
like specific properties that you
think are super useful, but

458
00:23:05.910 --> 00:23:07.620
because you don't have, you
know, a future vision, you're

459
00:23:07.620 --> 00:23:11.010
not a mind reader. You
can also expose these like

460
00:23:11.190 --> 00:23:13.470
hooks where you can put
a bag of properties. So

461
00:23:13.680 --> 00:23:15.450
let's say in the button
here, all the things that

462
00:23:15.450 --> 00:23:17.490
I've thought about in case
there's anything I haven't thought

463
00:23:17.490 --> 00:23:21.600
about, here's your hook called
apply. Like it's called the

464
00:23:21.600 --> 00:23:24.330
say, I dunno, paper button.
And you can define an

465
00:23:24.330 --> 00:23:27.000
entire block of CSS properties
in there, like normal CSS.

466
00:23:27.000 --> 00:23:29.430
And it's just going to
get teleported in there. So

467
00:23:29.430 --> 00:23:32.400
now you can sell things
with like the explicit custom

468
00:23:32.400 --> 00:23:36.090
properties that somebody defined for
you and also a giant

469
00:23:36.090 --> 00:23:38.190
bag of properties in case
there's something we haven't thought

470
00:23:38.190 --> 00:23:39.900
about because we wanted this
to be like super easy

471
00:23:39.900 --> 00:23:41.880
to use. We don't want
to make it hard for

472
00:23:41.880 --> 00:23:46.970
you. So does that mean
though? I might pick a

473
00:23:47.000 --> 00:23:49.760
web component from some vendor
or some open source, my

474
00:23:49.760 --> 00:23:52.100
favorite open source person. And
then I find that they

475
00:23:52.100 --> 00:23:55.220
did not expose something. And
then I shake my fist

476
00:23:55.220 --> 00:23:58.600
because they didn't let me
do that. Yes. So hopefully

477
00:23:58.600 --> 00:24:01.090
they've done it correctly if
they haven't. And this is

478
00:24:01.090 --> 00:24:02.890
a thing that happens, like
it's happened to us. We

479
00:24:02.890 --> 00:24:05.560
haven't thought of everything. Thankfully
everything's open source. You can

480
00:24:05.560 --> 00:24:08.920
just open an issue and
because your favorite person actually

481
00:24:08.920 --> 00:24:10.330
checks the issues, they're going
to fix it for you

482
00:24:10.330 --> 00:24:12.670
really quick. But you said
I can open an issue,

483
00:24:12.670 --> 00:24:16.150
but I think about things
like override, which is both

484
00:24:16.150 --> 00:24:20.230
super powerful, but also totally
evil. Oh, so yeah. So

485
00:24:20.230 --> 00:24:21.730
it makes it, so it
makes sense are basically kind

486
00:24:21.730 --> 00:24:23.980
of like override. So they,
if you, if you've created

487
00:24:23.980 --> 00:24:26.310
a mix in hook there,
you as a user, it

488
00:24:26.310 --> 00:24:28.660
could be like, I know
you've given me these styles.

489
00:24:28.660 --> 00:24:31.120
I'm just going to stumble
over them. But unless the,

490
00:24:31.840 --> 00:24:34.540
unless the, is the element
designer made that for you,

491
00:24:34.540 --> 00:24:36.160
you're not going to be
able to just stomp over

492
00:24:36.160 --> 00:24:37.810
anything. Cause it's a castle,
right. If you don't have

493
00:24:37.810 --> 00:24:39.580
a bridge to get into
that castle, you can't get

494
00:24:39.580 --> 00:24:43.030
into the castle. Okay, cool.
That makes sense. All right.

495
00:24:43.030 --> 00:24:47.560
So I understand web components
and I understand what the

496
00:24:47.560 --> 00:24:50.590
collection of things that are
moving the web forward are

497
00:24:50.590 --> 00:24:52.840
that roll up into this
thing that we call web

498
00:24:52.840 --> 00:24:59.350
components then. So then polymer
includes a polyfill that gets

499
00:24:59.350 --> 00:25:02.980
me started. But then what
is polymer itself? It's much

500
00:25:02.980 --> 00:25:05.380
more than web components. Yeah.
So polymers the library that

501
00:25:05.380 --> 00:25:08.440
makes this super easy to
use. So if you want

502
00:25:08.440 --> 00:25:11.650
to write your own web
components, they're much easier than

503
00:25:11.650 --> 00:25:13.810
like what native code lets
you do right now. So

504
00:25:14.170 --> 00:25:16.120
you get to, you know,
write your markup, write your

505
00:25:16.120 --> 00:25:18.940
styles in normally HTML, like
you would normally do it

506
00:25:19.510 --> 00:25:21.310
and you don't have to
worry about how to actually

507
00:25:21.310 --> 00:25:23.410
register this element. How to
tell the browser, this is

508
00:25:23.410 --> 00:25:25.270
a custom element. We do
all of that for you.

509
00:25:25.690 --> 00:25:27.760
And on top of that,
we also try to create

510
00:25:27.850 --> 00:25:30.970
a giant library of ready
to use elements that you

511
00:25:30.970 --> 00:25:33.220
can just like pick up
and drop in your application

512
00:25:33.220 --> 00:25:35.950
and not actually worry about
how they're implemented and what

513
00:25:35.950 --> 00:25:38.380
they do. They're just like,
it looked like material design

514
00:25:38.770 --> 00:25:41.290
elements, and you can just
use them anywhere you want.

515
00:25:41.770 --> 00:25:45.910
Okay. And you, since you're
you were you to work

516
00:25:45.910 --> 00:25:49.150
for Google, presumably is it
true that Google is like

517
00:25:49.150 --> 00:25:51.220
a consumer of these things
as Google and to start

518
00:25:51.220 --> 00:25:54.430
building stuff with polymers, It's
actually a super exciting. So

519
00:25:54.460 --> 00:25:57.160
there's like this giant adoption
of polymer inside of Google.

520
00:25:57.160 --> 00:25:59.110
So there a couple of
hundred internal apps that use

521
00:25:59.110 --> 00:26:01.630
it, but there's really big
apps that we're super excited

522
00:26:01.630 --> 00:26:05.860
about. So YouTube gaming recently
released and that's written Olin

523
00:26:05.950 --> 00:26:10.510
polymer and Google play music
and Google patents. I believe

524
00:26:10.510 --> 00:26:13.960
patent search. All of these
are written in polymer and

525
00:26:13.960 --> 00:26:15.820
yeah. And they're like out
there and a lot of

526
00:26:15.820 --> 00:26:18.070
people use them and they're
using code that I write,

527
00:26:18.100 --> 00:26:21.790
which is really exciting, Pretty
slick. So is there a

528
00:26:21.790 --> 00:26:24.520
reason that the person who's
maybe listening to the show

529
00:26:24.820 --> 00:26:28.240
shouldn't use polymer? Like maybe
they just have to go

530
00:26:28.240 --> 00:26:30.520
to work and I don't
know, use a horrible browser.

531
00:26:30.520 --> 00:26:34.540
That's like dead or We,
so we support everything. So

532
00:26:34.540 --> 00:26:36.280
are you 10 and up
in Safari seven and up.

533
00:26:36.730 --> 00:26:39.490
So if you're using six,
I'm very sorry for you

534
00:26:39.490 --> 00:26:45.090
also stop using Isaacs, but
please, and maybe not. And

535
00:26:45.090 --> 00:26:48.180
I would like to kill
nine to five, but if

536
00:26:48.180 --> 00:26:51.180
you're using any of these
like pasture releases, browser is

537
00:26:51.180 --> 00:26:54.830
we support them. So your
things work. Okay. So any

538
00:26:54.830 --> 00:26:59.960
reasonably evergreen browser, is it
good? Exactly. And we try

539
00:26:59.960 --> 00:27:01.220
to stay up to date
with all the things. So

540
00:27:01.220 --> 00:27:05.210
whenever anything changes any of
the new browsers, we would

541
00:27:05.210 --> 00:27:08.030
try to catch up with
that. And if I go

542
00:27:08.030 --> 00:27:12.860
to web components.org, I can
see like this chart that

543
00:27:12.860 --> 00:27:15.530
says, you know, here's, you
know, green for the ones,

544
00:27:15.530 --> 00:27:18.740
just basically the can I
use for web components. It

545
00:27:18.740 --> 00:27:20.750
looks like under for IE
and edge, a bunch of

546
00:27:20.750 --> 00:27:25.520
stuff is under consideration is
web components, something that is

547
00:27:25.610 --> 00:27:27.920
just a Google thing, or
do you all like hang

548
00:27:27.920 --> 00:27:30.110
out with the edge people
and tell them that they

549
00:27:30.110 --> 00:27:32.120
should do it too? Or
how does that work? So

550
00:27:32.120 --> 00:27:34.130
it's definitely web components is
not a Google thing. What

551
00:27:34.130 --> 00:27:37.250
components is a web platform
spec thing. And there's the

552
00:27:37.260 --> 00:27:41.630
thing called face-to-faces where all
the browser vendors get together

553
00:27:41.630 --> 00:27:43.580
and they talk about it.
And they're like, listen, where

554
00:27:43.730 --> 00:27:45.290
we would like to talk
about the shadow. We think

555
00:27:45.290 --> 00:27:47.540
the shadow should be implement
implemented. And then all the

556
00:27:47.540 --> 00:27:50.990
browsers talk about their concerns,
what they think they should

557
00:27:50.990 --> 00:27:54.050
happen. And then we all
agree on a thing that's

558
00:27:54.050 --> 00:27:57.080
going to happen. Edge is
actually super excited about everything,

559
00:27:57.080 --> 00:27:58.940
which is one of my
favorite things ever. I'm super

560
00:27:58.940 --> 00:28:05.180
excited for it to become
a thing because I think

561
00:28:05.180 --> 00:28:07.790
it's great. I think that
well, cause I wasn't gonna

562
00:28:07.970 --> 00:28:10.400
get shuttled down anytime soon,
but it just actually implemented.

563
00:28:10.400 --> 00:28:13.100
There's somebody who's working right
now on it. And there's

564
00:28:13.100 --> 00:28:15.410
somebody as Safari who was
working on the shadow spec.

565
00:28:15.440 --> 00:28:17.840
So these are things that,
you know, the future is

566
00:28:17.840 --> 00:28:20.990
coming. The future is here.
It's no longer under consideration.

567
00:28:21.710 --> 00:28:23.570
No, I was worried that
Safari was going to become

568
00:28:23.570 --> 00:28:25.790
the new IAE. A Safari
was going to be, I

569
00:28:25.790 --> 00:28:27.440
have rants about this and
I'm going to be super

570
00:28:27.440 --> 00:28:29.450
nice about it. But no
up until recently, so far,

571
00:28:29.450 --> 00:28:32.660
he was not very on
board with any of the

572
00:28:32.660 --> 00:28:36.170
new future respects, but now
they're finally they've woken up.

573
00:28:36.230 --> 00:28:39.200
I think it's people got
angry with them, so. Okay.

574
00:28:39.240 --> 00:28:41.510
That's cool. So they're listening.
So then we won't maybe

575
00:28:41.510 --> 00:28:43.690
have a new IEP. Everyone
will be evergreen to get

576
00:28:43.700 --> 00:28:45.500
them. Yeah. So in like
a few, the future that

577
00:28:45.500 --> 00:28:47.720
I dream about and like
a year or two is

578
00:28:47.720 --> 00:28:50.300
that you no longer need
to poly fill these things

579
00:28:50.300 --> 00:28:52.640
and that's going to make
everything faster because poly feeling

580
00:28:52.640 --> 00:28:54.410
is not accurate. Both of
those, the little slope, right?

581
00:28:54.410 --> 00:28:55.430
Do you have to do
a little bit of work

582
00:28:55.430 --> 00:28:59.000
before you pay trenders? So
in the future, everybody's going

583
00:28:59.000 --> 00:29:01.130
to speak web components. So
now we can focus on,

584
00:29:01.460 --> 00:29:04.070
you know, we can focus
on polymer writing libraries, it

585
00:29:04.070 --> 00:29:06.920
help you write easy web
components versus doing a lot

586
00:29:06.920 --> 00:29:09.110
of work. So that's a
far he understands. What about

587
00:29:09.110 --> 00:29:13.850
proponent is Now? If I
go to elements dot polymer,

588
00:29:13.850 --> 00:29:18.890
dash project.org, there's this kind
of cool. What's the word

589
00:29:18.890 --> 00:29:22.310
here? This is catalog, but
it's done like a, a

590
00:29:22.340 --> 00:29:26.510
table of, of elements. So
it's where we, so we

591
00:29:26.510 --> 00:29:29.180
have this thing where we
thought about the elements being

592
00:29:29.180 --> 00:29:33.380
like chemical, like the table
of elements in chemistry. Yeah.

593
00:29:33.380 --> 00:29:36.170
So we have lines like
product lines of elements. So

594
00:29:36.440 --> 00:29:38.690
I run, I run I'm
Canadian. I'm sorry. I pronounced

595
00:29:38.690 --> 00:29:41.350
Ivan really funny. Everybody makes
fun of iron when you

596
00:29:41.350 --> 00:29:46.330
say so they're like our
core elements are, think that

597
00:29:46.390 --> 00:29:48.400
like the building blocks of
things, they're not pretty, but

598
00:29:48.400 --> 00:29:51.940
they're like, they're, they're the
functionality of things. Cause that's

599
00:29:51.940 --> 00:29:53.740
kind of what iron is.
And then on top of

600
00:29:53.740 --> 00:29:56.710
it, it's paper. So paper
is material design. It's shiny.

601
00:29:56.710 --> 00:29:59.620
It's pretty, it's, you know,
glowing, all the good things.

602
00:30:00.790 --> 00:30:02.410
And then we have something
called the gold elements and

603
00:30:02.410 --> 00:30:05.980
the gold elements are, you
know, shiny e-commerce things. So

604
00:30:05.980 --> 00:30:08.230
they're like credit card validators
and things that you can

605
00:30:08.230 --> 00:30:11.440
make a checkout form so
that it's super easy to

606
00:30:11.440 --> 00:30:14.010
make checkout forms on your
website. This is where I

607
00:30:14.010 --> 00:30:17.310
think things get really interesting
because we, we, we, I

608
00:30:17.310 --> 00:30:20.340
mean, I've built large banking
systems. I've built e-commerce systems.

609
00:30:20.340 --> 00:30:22.260
And the idea that I'm
doing this all with input

610
00:30:22.260 --> 00:30:27.540
type equals text. Yeah. So
we've created things like there

611
00:30:27.540 --> 00:30:30.180
is a gold CC input.
So it's basically, it looks

612
00:30:30.180 --> 00:30:32.250
like a shiny text field.
And when you stop, you

613
00:30:32.250 --> 00:30:34.980
start typing your credit card,
it will validate. It will

614
00:30:34.980 --> 00:30:36.840
be like, yep, this is
a valid MasterCard. This is

615
00:30:36.840 --> 00:30:39.180
not a valid MasterCard. This
is jibberish. You have tip

616
00:30:39.240 --> 00:30:41.850
type in gibberish. And we
have this for like zip

617
00:30:41.850 --> 00:30:46.200
codes and CVC validators that
because CVC has different rules

618
00:30:46.230 --> 00:30:47.940
based on, you know, it's
in a MasterCard, it's an

619
00:30:47.940 --> 00:30:51.900
Emacs and things like that.
So you're absolutely convinced like

620
00:30:52.200 --> 00:30:54.530
this is the future. This
is the way like, if

621
00:30:54.600 --> 00:30:56.190
you were, if you worked,
if you didn't work at

622
00:30:56.190 --> 00:30:58.860
Google, let's say you worked
at like random insurance company

623
00:30:59.700 --> 00:31:01.620
and you're in the middle
of building like the next

624
00:31:01.620 --> 00:31:05.220
great text boxes over data
system. Yes. I think this

625
00:31:05.220 --> 00:31:07.620
is a future because I
think it's been 20 years

626
00:31:07.620 --> 00:31:10.680
that we've been using input
type equals search and it's

627
00:31:10.680 --> 00:31:12.750
clearly not working out and
we have to do better.

628
00:31:12.810 --> 00:31:15.120
And I think this is,
I want to believe in

629
00:31:15.120 --> 00:31:16.650
the web platform. I think
the web platform is going

630
00:31:16.650 --> 00:31:18.240
to win. And I think
this is part of it

631
00:31:18.240 --> 00:31:22.080
winning Very, very cool. Well,
I really appreciate you chatting

632
00:31:22.080 --> 00:31:25.260
with me today. Thanks so
much. This was awesome. Awesome.

633
00:31:25.290 --> 00:31:26.910
So I'm going to put
links to everything in the

634
00:31:26.910 --> 00:31:31.830
show notes too. Monica is
a speaker deck account, which

635
00:31:31.830 --> 00:31:34.650
by the way, I'm totally
jealous of all of your

636
00:31:34.650 --> 00:31:38.970
decks look way better than
mine. So I, I kind

637
00:31:38.970 --> 00:31:42.150
of slightly hate you because
your slides are awesome. I

638
00:31:42.150 --> 00:31:44.100
can teach you all of
these things. This is learnable.

639
00:31:44.490 --> 00:31:46.260
Okay. Well maybe that's another
show where you teach me

640
00:31:46.260 --> 00:31:48.060
how to make decent slides
because I need to step

641
00:31:48.060 --> 00:31:51.780
up. My slides look like
they're from the nineties and

642
00:31:51.780 --> 00:31:54.000
I'll put links to polymer
project and to our speaker

643
00:31:54.000 --> 00:31:58.260
deck and, and Twitter, as
well as web components. This

644
00:31:58.260 --> 00:32:00.780
has been another episode of
Hanselminutes and we'll see you

645
00:32:00.780 --> 00:32:09.900
again next week. <inaudible>.

