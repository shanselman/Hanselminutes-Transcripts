WEBVTT FILE

1
00:00:12.060 --> 00:00:16.950
From Hanselman it's dot com.
It's Hansel minutes, a weekly

2
00:00:16.950 --> 00:00:21.150
discussion with web developer and
technologists. Scott Hanselman hosted by

3
00:00:21.150 --> 00:00:26.070
Carl Franklin. This is Lawrence Ryan announcing
show number one 71 recorded

4
00:00:26.070 --> 00:00:30.300
live Friday, June 19, 2009.
Support for Hanselman it's just

5
00:00:30.300 --> 00:00:33.870
provided by teller Akari. He
controls the most comprehensive suite

6
00:00:33.870 --> 00:00:42.000
of components for windows forms
and asp.net web applications online@wwwdottelerik.com.

7
00:00:42.690 --> 00:00:49.230
In this episode, Scott talks
professionalism with Robert C. Martin. Hi, this

8
00:00:49.230 --> 00:00:51.110
is Scott Hanselman, And this
is another episode of Hansel

9
00:00:51.110 --> 00:00:54.590
minutes. I'm sitting today with
Robert C. Martin founder of object mentor,

10
00:00:54.590 --> 00:00:57.140
also known as uncle Bob
Martin, uncle Bob Martin on

11
00:00:57.140 --> 00:01:00.440
Twitter. In fact, yes, that
you now have the dubious

12
00:01:00.440 --> 00:01:02.480
distinction of being the only
guest who's been on the

13
00:01:02.480 --> 00:01:07.310
show three times, which is
very exciting for you. Feel

14
00:01:07.310 --> 00:01:12.020
good about that. And we're
here in Norway and you

15
00:01:12.020 --> 00:01:14.840
gave a talk at the,
a, the keynote that's right.

16
00:01:15.350 --> 00:01:17.450
You booted me out. I
did the keynote last year.

17
00:01:17.450 --> 00:01:19.580
And then when they heard
that you were coming, they

18
00:01:19.580 --> 00:01:21.500
gave me a very small
closet that I could speak

19
00:01:21.500 --> 00:01:23.840
to a small group of
people in. So thank you

20
00:01:23.840 --> 00:01:26.420
for that. No problem. And
what was your keynote about?

21
00:01:27.110 --> 00:01:30.210
Well, it was entitled. Are
you a professional? It was

22
00:01:31.160 --> 00:01:34.220
a discussion or a rather
me standing on stage yelling

23
00:01:34.220 --> 00:01:36.080
at everybody telling them what
they needed to do to

24
00:01:36.080 --> 00:01:39.810
be professionals. There was a
certain revival kind of vibe.

25
00:01:40.370 --> 00:01:42.050
I mean, you had a
big crowd and a big

26
00:01:42.050 --> 00:01:45.140
stage. We're actually here in
a very large indoor soccer

27
00:01:45.140 --> 00:01:48.290
stadium. And you had people
pretty, pretty pumped up well

28
00:01:48.290 --> 00:01:50.840
for Norwegians. Yes. As well
as everybody, or at least

29
00:01:50.840 --> 00:01:52.880
two people clapping at the
end, there were very muted

30
00:01:52.880 --> 00:01:56.420
people. And where were they
professionals? I mean, is the,

31
00:01:56.420 --> 00:01:59.660
just that we're really not.
This is a very amateurish

32
00:02:00.170 --> 00:02:03.590
industry that we are in
to some extent our industry

33
00:02:03.590 --> 00:02:09.080
is very young and, and
probably has not yet earned

34
00:02:09.080 --> 00:02:14.090
the right to call itself
a profession. We don't have

35
00:02:14.090 --> 00:02:16.820
the kind of trappings that
our profession have. We don't

36
00:02:16.820 --> 00:02:19.820
have the kind of disciplines
that a profession has. So

37
00:02:20.090 --> 00:02:25.130
for example, if, if you
were to follow doctors around,

38
00:02:25.130 --> 00:02:28.280
you would notice that they
have certain rituals that they

39
00:02:28.280 --> 00:02:31.340
perform that have been ingrained
in their, in their practice

40
00:02:31.340 --> 00:02:36.170
for decades. The ritual of
washing hands before surgery is

41
00:02:36.170 --> 00:02:38.570
not simply, you know, a
doctor going in and getting

42
00:02:38.570 --> 00:02:40.700
a bar of soap and
washing his hands. There's a

43
00:02:40.700 --> 00:02:43.490
deep structure to what he
does. He takes the brush

44
00:02:43.490 --> 00:02:46.130
and he brushes upside up
the side of his finger

45
00:02:46.130 --> 00:02:48.680
10 times, and then down
the side of the same

46
00:02:48.680 --> 00:02:51.500
finger, 10 times across the
nail 10 times and so

47
00:02:51.500 --> 00:02:56.390
on. And it's a ritual
that other doctors watch while

48
00:02:56.390 --> 00:03:01.390
you do it. Pilots have
a ritual of checklists and

49
00:03:01.390 --> 00:03:04.270
checking each other out, and
they will fly very frequently

50
00:03:04.270 --> 00:03:08.170
with other pilots where the
role of the fly along

51
00:03:08.170 --> 00:03:10.720
pilot is to check the
check the pilot out on

52
00:03:10.720 --> 00:03:13.900
his way. He works checklists
and the way he works,

53
00:03:13.900 --> 00:03:18.070
his controls. So there's a
set of rituals and disciplines

54
00:03:18.070 --> 00:03:23.410
and accepted behaviors that other
professions have. And we don't

55
00:03:23.410 --> 00:03:26.410
seem to have that level
yet, although we're getting them,

56
00:03:27.580 --> 00:03:31.810
especially with the advent of
extreme programming and agile development,

57
00:03:32.320 --> 00:03:37.060
we have begun to adopt
some fairly stringent disciplines, things

58
00:03:37.060 --> 00:03:40.420
like test driven development. And
although it's not universally accepted

59
00:03:40.780 --> 00:03:43.450
where it is accepted, it
has become a discipline. And

60
00:03:43.450 --> 00:03:46.690
the Mark of a professional
test driven developers know each

61
00:03:46.690 --> 00:03:50.560
other, and they watch how
each other does the testing.

62
00:03:50.560 --> 00:03:52.420
And we question it and
say, Oh, you do it

63
00:03:52.420 --> 00:03:55.350
that way. Well, I do
it this way. And there's

64
00:03:55.350 --> 00:03:59.990
this bond, The kind of
the secret handshake of, of

65
00:04:00.020 --> 00:04:02.940
test driven developers or pair
programmers or any of the

66
00:04:02.940 --> 00:04:07.470
other disciplines that have become
a common amongst agile developers.

67
00:04:08.220 --> 00:04:12.840
So the, the keynote was
really about, okay, what are

68
00:04:12.840 --> 00:04:16.110
these disciplines? And what is
it going to take to,

69
00:04:16.280 --> 00:04:20.400
to really name ourselves as
professionals to call ourselves professionals.

70
00:04:20.850 --> 00:04:22.410
And I went through a
whole set of them. And

71
00:04:22.410 --> 00:04:27.000
the first one I I
chose was the, from the

72
00:04:27.100 --> 00:04:30.870
doctor's oath, the Hippocratic oath,
which was first do no

73
00:04:30.870 --> 00:04:34.530
harm. I said, you can't
be a professional. If in

74
00:04:34.530 --> 00:04:38.460
your daily practice, you're doing
harm. And I, I talked

75
00:04:38.460 --> 00:04:40.770
about the two kinds of
harm. You can do harm

76
00:04:40.770 --> 00:04:43.650
to the function of a
program harm to the structure

77
00:04:43.650 --> 00:04:46.560
of a program. And I
just talked for a very

78
00:04:46.560 --> 00:04:50.130
long time about, you need
to be able to know

79
00:04:50.730 --> 00:04:52.740
that you are doing no
harm to the function of

80
00:04:52.740 --> 00:04:54.840
a program, and the way
you do that is to

81
00:04:54.840 --> 00:04:57.840
have tests. And you also
need to know that you

82
00:04:57.840 --> 00:05:00.540
are not doing any harm
to the structure of a

83
00:05:00.540 --> 00:05:03.180
program. And the way you
do that is to constantly

84
00:05:03.180 --> 00:05:05.520
change that structure so that
you know, that it's always

85
00:05:05.520 --> 00:05:12.300
flexible. You are constantly mercilessly
refactoring systems, not necessarily because

86
00:05:12.300 --> 00:05:14.850
they need to be refactored,
but because they need to

87
00:05:14.850 --> 00:05:20.820
remain flexible. So it's rather
like I'm moving the gears

88
00:05:20.820 --> 00:05:24.870
on a bicycle or, or,
or driving your car for

89
00:05:24.870 --> 00:05:28.140
no other reason than to
keep it well, lubricated. And

90
00:05:28.140 --> 00:05:30.030
in order to make those
kinds of changes, you need

91
00:05:30.030 --> 00:05:32.130
tests. It all boils down
to tests. In the end,

92
00:05:32.880 --> 00:05:38.610
I talked about the need
for continuous learning. That software

93
00:05:38.610 --> 00:05:42.720
developers are, are like doctors
and lawyers, and that there's

94
00:05:42.720 --> 00:05:45.330
no end to the learning
they need to do. You

95
00:05:45.330 --> 00:05:47.880
cannot learn Java, come out
of school, learn Java and

96
00:05:47.880 --> 00:05:49.470
think that you're a programmer.
And that's all you need

97
00:05:49.470 --> 00:05:53.310
to know. The industry moves
faster than you can keep

98
00:05:53.310 --> 00:05:55.860
up. There are new languages
all the time and new,

99
00:05:56.520 --> 00:06:00.880
new all the time. You
must continually learn, but Pilots

100
00:06:00.880 --> 00:06:04.090
and doctors have required classes
and number of hours and

101
00:06:04.480 --> 00:06:07.330
a well while programmers are
putting, I think we mentioned

102
00:06:07.330 --> 00:06:09.400
this in our last podcast
while programmers are putting, you

103
00:06:09.400 --> 00:06:13.690
know, a Robert C. Martin comma, Microsoft
certified professional, Colorado server, high

104
00:06:13.690 --> 00:06:18.070
trainer comma certified job, da
just in order to maintain

105
00:06:18.580 --> 00:06:22.270
comma MD at the end
of your name, you need

106
00:06:22.270 --> 00:06:25.900
to have continuous learning. You
need to, and flight people

107
00:06:25.900 --> 00:06:28.780
are measured in number of
hours. I had proposed on

108
00:06:28.780 --> 00:06:30.820
my blog a number of
years ago, we've part putting

109
00:06:30.820 --> 00:06:33.130
the number of failed projects
that we've been on at

110
00:06:33.130 --> 00:06:36.490
the end of our, our
names. One of the things

111
00:06:36.490 --> 00:06:39.130
I thought was significant is
that you segwayed very smoothly.

112
00:06:39.130 --> 00:06:43.090
You transitioned from the word
ritual into the word discipline.

113
00:06:44.020 --> 00:06:46.390
And initially, as you were
saying, ritual, ritual ritual, I

114
00:06:46.390 --> 00:06:48.370
was thinking, well, I think
of rituals as being leaned

115
00:06:48.370 --> 00:06:50.500
on like, you know, crossing
yourself as you went to

116
00:06:50.500 --> 00:06:52.780
a church or, you know,
brushing your teeth in the

117
00:06:52.780 --> 00:06:54.910
morning. I mean, they, they
have purpose, but at the

118
00:06:54.910 --> 00:06:57.880
same time, it becomes kind
of an automatic thing. Well,

119
00:06:58.000 --> 00:07:02.560
discipline is as more as
a more formalized intentional thing.

120
00:07:02.590 --> 00:07:05.380
I wonder if there's a
difference between the, the, you

121
00:07:05.380 --> 00:07:09.850
know, the unconscious ritual versus
the intention behind a discipline.

122
00:07:10.480 --> 00:07:13.930
I think there's a, a
difference. A ritual is something

123
00:07:13.930 --> 00:07:18.130
that has, that is somewhat
arbitrary, whereas a discipline has

124
00:07:18.130 --> 00:07:21.550
intent. So going back to
the doctor, brushing his fingers

125
00:07:21.550 --> 00:07:23.680
10 times, why is it
the number 10? Why not

126
00:07:23.680 --> 00:07:27.670
eight or nine and 11?
That's an arbitrary decision, but

127
00:07:27.670 --> 00:07:30.640
it becomes a ritual. It
becomes ingrained. It's something we

128
00:07:30.640 --> 00:07:34.600
do just because we do
it. Test-driven developers. Why do

129
00:07:34.600 --> 00:07:37.870
we, why do we write
our tests first? Why don't

130
00:07:37.870 --> 00:07:40.840
we write our tests just
after? Well, there's a, there's

131
00:07:41.140 --> 00:07:44.740
a reason behind that. There's
a discipline behind it, but

132
00:07:44.740 --> 00:07:48.460
it also becomes just a
ritual, something arbitrary. Why do

133
00:07:48.460 --> 00:07:50.800
we like our methods to
be four or five lines

134
00:07:50.800 --> 00:07:53.260
long? Well, there's a reason
behind that, but you know,

135
00:07:53.260 --> 00:07:54.670
why is it four or
five and not eight or

136
00:07:54.670 --> 00:07:58.900
nine? That's a ritual behind
that. So there are rituals

137
00:07:58.900 --> 00:08:02.200
that are arbitrary in the
identify us they're decisions we've

138
00:08:02.200 --> 00:08:04.450
made, and we don't care
to challenge again. So in

139
00:08:04.450 --> 00:08:07.030
the last hundred years and
using the doctor metaphor and

140
00:08:07.030 --> 00:08:08.830
taking this as far as
we can, it was the

141
00:08:08.830 --> 00:08:12.580
creation of antibiotics, but also
the simple washing of hands,

142
00:08:12.580 --> 00:08:15.070
the idea that if we're
going to do surgery, why

143
00:08:15.070 --> 00:08:17.770
don't we just make sure
the room's clean? You know,

144
00:08:17.950 --> 00:08:20.530
that was kind of like
if there was one thing

145
00:08:20.620 --> 00:08:22.870
in the last several hundred
years that we've got right

146
00:08:22.930 --> 00:08:27.220
around medicine, it's like, let's
be tidy, but was it,

147
00:08:27.220 --> 00:08:30.670
is it testing is, is
test driven development and keeping

148
00:08:30.820 --> 00:08:33.820
tests such that we can
feel confident in our systems

149
00:08:34.240 --> 00:08:37.390
was the, is that the
invention of penicillin? Is that

150
00:08:37.390 --> 00:08:40.330
the invention of the germ
is that washing your hands?

151
00:08:40.330 --> 00:08:43.030
Have we not been washing
our hands for 50 years

152
00:08:43.030 --> 00:08:45.700
of coding? And that's a
really interesting analogy. You can

153
00:08:45.700 --> 00:08:49.600
use that in the next.
Thank you. So yeah, the,

154
00:08:49.600 --> 00:08:53.800
the, it may be that
testing or test driven development

155
00:08:55.050 --> 00:08:59.520
is the antibiotic is the,
is the miracle cure. And

156
00:08:59.520 --> 00:09:02.070
obviously it's not the miracle
cure either of them, but

157
00:09:02.430 --> 00:09:07.670
maybe that is the revolution.
It's certainly significant. And I

158
00:09:07.710 --> 00:09:11.400
have been quoted a number
of times saying that if

159
00:09:11.400 --> 00:09:15.030
you're not doing test driven
development, it's very difficult to

160
00:09:15.030 --> 00:09:18.270
call yourself a professional. And
Jim Copeland called me on

161
00:09:18.270 --> 00:09:20.280
the carpet for this one.
He didn't like that. I

162
00:09:20.280 --> 00:09:23.550
said that in fact, he's
his position right now is

163
00:09:23.550 --> 00:09:29.070
that test driven development is
destroying architectures because people are

164
00:09:29.070 --> 00:09:31.800
writing tests to the abandoned
of any other kind of

165
00:09:31.800 --> 00:09:35.580
thought and tearing their architectures
apart in the mad rush

166
00:09:35.580 --> 00:09:38.280
to get tests to pass.
And he's got an interesting

167
00:09:38.280 --> 00:09:40.980
point. That's an, that is
an interesting way to abuse

168
00:09:40.980 --> 00:09:44.910
the ritual and lose the
intent behind the discipline. So

169
00:09:44.910 --> 00:09:48.330
he and I had a,
a lovely debate at MIT

170
00:09:48.330 --> 00:09:52.710
about six months ago, where
we explored that issue in

171
00:09:52.710 --> 00:09:56.130
some detail. And of course,
Copeland is a brilliant felon.

172
00:09:56.130 --> 00:09:57.900
I love him to death.
And two of us are

173
00:09:57.900 --> 00:10:00.930
good friends and always will
be. And although I don't

174
00:10:00.930 --> 00:10:03.630
think we settled the issue
between us. There was a

175
00:10:03.630 --> 00:10:07.790
mutual understanding. I don't, I
don't see how, I mean

176
00:10:07.790 --> 00:10:09.620
playing devil's advocate playing his
role. I mean, I don't

177
00:10:09.620 --> 00:10:12.500
see how that's a defensible
position though. Oh, that, that

178
00:10:12.500 --> 00:10:15.320
testing, I mean, I guess
testing is re, is rooted

179
00:10:15.320 --> 00:10:19.970
in pragmatism and architecture while
it likes to think of

180
00:10:19.970 --> 00:10:22.550
itself and being rooted in
pragmatism is really rooted in

181
00:10:22.550 --> 00:10:25.910
another sense of the aesthetic.
There is the engineering of

182
00:10:25.910 --> 00:10:28.340
the building, and then there's
the making the arches pretty

183
00:10:28.340 --> 00:10:31.340
and making the whole thing
feel good and finding the

184
00:10:31.340 --> 00:10:33.740
balance between like, Hey, wouldn't
it be great if all

185
00:10:33.740 --> 00:10:36.140
these walls were curvy? Well,
you know, that wouldn't be

186
00:10:36.140 --> 00:10:39.380
structurally sound. No, but wouldn't
it be great? You know,

187
00:10:39.410 --> 00:10:42.560
one could say that that
means the basic engineering practices

188
00:10:42.560 --> 00:10:45.140
and the building of buildings
as destroying the aesthetic of

189
00:10:45.170 --> 00:10:49.490
buildings themselves, but you still
need them to stay up

190
00:10:49.970 --> 00:10:53.030
and not collapse under their
own weight. Yeah. I think

191
00:10:53.030 --> 00:10:54.950
complaints point, and I don't
want to put words in

192
00:10:54.950 --> 00:10:58.850
his mouth is almost the
exact opposite of that. His

193
00:10:58.850 --> 00:11:01.190
point would be that if
you're not thinking through the

194
00:11:01.190 --> 00:11:05.240
architecture, if, if what you
are doing instead is ignoring

195
00:11:05.240 --> 00:11:08.330
architecture and throwing tests together
and getting them to pass

196
00:11:08.750 --> 00:11:10.700
you are destroying the thing
that will allow the building

197
00:11:10.700 --> 00:11:15.230
to stay up because it's
the, the concentration on the

198
00:11:15.230 --> 00:11:19.820
structure of the system and
in solid design decisions that

199
00:11:19.820 --> 00:11:24.110
helped the, the, the system
maintain its structural integrity. And

200
00:11:24.110 --> 00:11:27.950
he's right about that. You
cannot simply just throw a

201
00:11:27.950 --> 00:11:30.410
whole bunch of tests together
and make them pass for,

202
00:11:30.770 --> 00:11:33.650
for day, decade after decade
after decade and assume that

203
00:11:33.650 --> 00:11:35.510
your system is going to
survive. We don't want to

204
00:11:35.510 --> 00:11:40.370
evolve ourselves into hell. So
a good test driven developer

205
00:11:40.370 --> 00:11:44.990
is always conscious of making
architectural decisions, always thinking of

206
00:11:44.990 --> 00:11:49.950
the big picture. Ron Jeffries
likes to paraphrase a, a

207
00:11:49.970 --> 00:11:56.880
saying, which was act, but
think globally, Both in, yeah.

208
00:11:56.990 --> 00:11:59.110
In, in life, but also
in your code, in your

209
00:11:59.170 --> 00:12:02.430
code, you know, or an
INI also known as the

210
00:12:02.430 --> 00:12:04.800
NDA, Rihanna is walking around
yesterday, wearing a tee shirt

211
00:12:05.340 --> 00:12:10.350
that proudly declared himself as
a non-coding architect. Oh, I

212
00:12:10.350 --> 00:12:12.210
didn't see the short of
giving him a lot of

213
00:12:12.540 --> 00:12:14.280
asks about that. Wow. And
that's why I'm bringing it

214
00:12:14.280 --> 00:12:16.650
up today so we can
capture that on a, on

215
00:12:16.650 --> 00:12:18.360
tape. But I thought that
was quite a funny thing.

216
00:12:18.360 --> 00:12:20.550
I think, of course, everyone
knows that there are a

217
00:12:20.550 --> 00:12:22.290
few people on the planet
who can code like this

218
00:12:22.290 --> 00:12:23.730
gentlemen. So I think that
that was a bit of

219
00:12:23.790 --> 00:12:27.240
a, of a push to,
to those non-coding architects out

220
00:12:27.240 --> 00:12:29.520
there. It also had a
picture of a Pegasus. I'm

221
00:12:29.520 --> 00:12:31.560
not sure if there was
a mythical, I saw the

222
00:12:31.560 --> 00:12:33.650
Pegasus. I just didn't read
the other part. So underneath,

223
00:12:33.670 --> 00:12:36.600
I'm not sure if the
message, This creature does exist.

224
00:12:36.870 --> 00:12:41.460
Non-coding architects there, they exist
like flying horses too. The

225
00:12:41.550 --> 00:12:44.370
gentleman that you were having
the argument with, who we

226
00:12:44.370 --> 00:12:46.030
do not want to put
words in his mouth, but

227
00:12:46.890 --> 00:12:50.940
sometimes when I find myself
onsite at large enterprises, as

228
00:12:50.940 --> 00:12:55.560
a, as a former enterprise
architect myself, I really want

229
00:12:55.560 --> 00:12:58.300
to just stop talking about
Vizio and UML and, and,

230
00:12:58.300 --> 00:13:01.560
and tear the whiteboards down
and just start writing some

231
00:13:01.560 --> 00:13:06.090
code. And I I'm, I'm
wondering if either maybe just

232
00:13:06.090 --> 00:13:10.260
I'm a lousy architect or
there aren't enough architects that

233
00:13:10.260 --> 00:13:13.950
really can code. It seems
like one is, you know,

234
00:13:13.960 --> 00:13:15.390
how they would say that
one is promoted to the

235
00:13:15.780 --> 00:13:18.090
level that is appropriate to
their own. Yes, yes. The

236
00:13:18.090 --> 00:13:21.630
Peter principle, right. That, that
does that apply to architects.

237
00:13:21.660 --> 00:13:23.760
Sure. As well. Unfortunately I
think it does in a

238
00:13:23.760 --> 00:13:27.180
lot of cases, people have,
who used to be programmers

239
00:13:27.600 --> 00:13:32.340
have graduated to become architects
and they start drawing diagrams

240
00:13:32.340 --> 00:13:36.600
and designing API APIs and
handing them to programmers and,

241
00:13:36.600 --> 00:13:39.990
and have a divorce themselves
from the necessity of making

242
00:13:39.990 --> 00:13:42.990
things work. So then someone
might argue that in test

243
00:13:42.990 --> 00:13:45.000
driven development, we're getting into
a certain kind of wag,

244
00:13:45.030 --> 00:13:48.180
the dog situation here, where
someone thinks that they're in

245
00:13:48.180 --> 00:13:50.910
charge, but all these developers
are down there writing tests

246
00:13:51.750 --> 00:13:54.750
and they're pushing back against
my, my master plan. More

247
00:13:54.750 --> 00:13:58.080
likely they're just ignoring it
all together, Which they probably

248
00:13:58.080 --> 00:14:01.050
doing, regardless of whether they're
writing tests. Yes. I don't

249
00:14:01.050 --> 00:14:03.000
think it's the tests that
have anything to do with

250
00:14:03.000 --> 00:14:06.740
that good architects, in my
opinion, are architects that, that

251
00:14:06.740 --> 00:14:08.760
do think about the high
level. They do go to

252
00:14:08.760 --> 00:14:11.760
whiteboards. They do draw UML
on the, on the whiteboards.

253
00:14:11.760 --> 00:14:15.180
They're thinking about large scale
structure. And then they're the

254
00:14:15.180 --> 00:14:17.490
first ones to write the
code that makes sure that

255
00:14:17.490 --> 00:14:20.910
that actually works. And then
they pair program with others

256
00:14:20.910 --> 00:14:24.090
to show them how these
structures fit together. And they

257
00:14:24.090 --> 00:14:26.850
live in the trenches with
the developers for at least

258
00:14:26.850 --> 00:14:29.640
a certain amount of time.
And then perhaps they go

259
00:14:29.640 --> 00:14:32.370
back and they design another
high level structure. And then

260
00:14:32.370 --> 00:14:35.070
dive right back down into
the trenches. An architect that

261
00:14:35.070 --> 00:14:39.780
loses coding skill becomes irrelevant.
Hi, this is Scott Hanselman

262
00:14:39.780 --> 00:14:41.820
with a word from our
sponsor. Do you know how

263
00:14:41.820 --> 00:14:45.540
to build web 2.0 Ajax
applications with web 1.0 components?

264
00:14:45.960 --> 00:14:47.370
You really can't. If you
want to do the next

265
00:14:47.370 --> 00:14:51.260
generation web applications you'll need
next generation components. Just like

266
00:14:51.260 --> 00:14:53.060
the ones that our friends
at Telerik have got their

267
00:14:53.060 --> 00:14:56.450
rad controls for ESPN at
Ajax. It's a huge pack

268
00:14:56.450 --> 00:15:00.140
of web controls built on
top of asp.net Ajax. That'll

269
00:15:00.140 --> 00:15:04.250
add previously impossible performance interactivity
to your next project. The

270
00:15:04.250 --> 00:15:08.570
new controls mirror, the Ajax
API from asp.net. So development

271
00:15:08.570 --> 00:15:12.080
is really straightforward. The client
scripture shared. So loading time

272
00:15:12.080 --> 00:15:14.240
is not a problem. If
you just set a couple

273
00:15:14.240 --> 00:15:16.280
of properties and you'll be
able to automatically bind to

274
00:15:16.280 --> 00:15:20.030
web services for a really
efficient operation, the new rad

275
00:15:20.030 --> 00:15:23.690
editor from ESPN Ajax, Telerik
loads up to four times

276
00:15:23.690 --> 00:15:26.780
faster than before. And the
new rad grid handles thousands

277
00:15:26.780 --> 00:15:29.690
of records and just milliseconds,
but as always, it's best

278
00:15:29.690 --> 00:15:32.690
to try for yourself. So
you can visit <inaudible> dot

279
00:15:32.690 --> 00:15:36.170
com slash ASP, net Ajax,
and download a trial. Thanks

280
00:15:36.170 --> 00:15:39.920
a lot. Yeah, it's interesting.
I've always tried to learn

281
00:15:39.920 --> 00:15:42.110
how to be a better
manager. And for some reason,

282
00:15:42.110 --> 00:15:45.770
I always, I'm definitely a
manager by walking around management

283
00:15:45.770 --> 00:15:49.040
by walking around is, you
know, I just love it

284
00:15:49.040 --> 00:15:51.200
when I'm working for a
company where the president of

285
00:15:51.200 --> 00:15:53.420
the company comes down from
the corner office and he

286
00:15:53.420 --> 00:15:56.660
says, Hey, what's, what's cool.
I had a president like

287
00:15:56.660 --> 00:15:58.460
that at my last company
that he would just literally

288
00:15:58.490 --> 00:16:00.710
pop into your office and
say, all right, well, show

289
00:16:00.710 --> 00:16:02.780
me what you got today.
And one day we might

290
00:16:02.780 --> 00:16:04.820
show him a continuous integration
system. And one day we

291
00:16:04.820 --> 00:16:08.570
might show him, you know,
just some garbage collection thing

292
00:16:08.570 --> 00:16:11.060
that we thought was particularly
neat. And he appreciated that.

293
00:16:11.570 --> 00:16:15.290
And when I work at
companies where it's clear that

294
00:16:15.400 --> 00:16:19.250
the people in charge have
absolutely no idea how the

295
00:16:19.640 --> 00:16:24.260
entity that they run truly
works. I ask myself, is

296
00:16:24.260 --> 00:16:26.450
it necessary for the architect?
You understand the work of

297
00:16:26.450 --> 00:16:30.050
the plumber and the electrician,
or, you know, can one

298
00:16:30.050 --> 00:16:32.090
be successful with it? You
know, at what level of

299
00:16:32.090 --> 00:16:34.700
abstraction in the entire stack,
do you, do you stop?

300
00:16:35.990 --> 00:16:38.240
You can't know the whole,
the whole thing, right? Like

301
00:16:38.240 --> 00:16:40.790
you look at like windows
seven and you've got Stevenson

302
00:16:40.790 --> 00:16:43.310
Oskie who used to be
an MFC programmer. He was

303
00:16:43.310 --> 00:16:46.580
a C plus plus programmer
who basically designed and wrote

304
00:16:47.120 --> 00:16:50.570
the foundation classes. Now he's
a senior VP designing all

305
00:16:50.570 --> 00:16:53.060
of windows seven. Is it
possible for him to know

306
00:16:53.060 --> 00:16:56.380
the entire thing? No, No.
It's not impossible for him

307
00:16:56.390 --> 00:16:58.330
to know and not appropriate
from kinda the whole thing.

308
00:16:58.420 --> 00:17:01.210
On the other hand, even
though he is designing the

309
00:17:01.210 --> 00:17:04.120
whole thing, I think it
would be appropriate, appropriate for

310
00:17:04.120 --> 00:17:06.040
him to be able to
dive down into detail for

311
00:17:06.040 --> 00:17:09.040
a day or two and
make sure that at the

312
00:17:09.040 --> 00:17:12.760
bottom level, these decisions that
he's making at the top

313
00:17:12.760 --> 00:17:17.170
level make sense. And he
should, to some extent live

314
00:17:17.170 --> 00:17:19.120
in the bed that he's
making for everybody else. That

315
00:17:19.120 --> 00:17:20.680
doesn't mean he has to
be down there, you know,

316
00:17:20.680 --> 00:17:22.840
months at a time. Right.
But he should be able

317
00:17:22.840 --> 00:17:24.640
to look at that code
down there, right. A little

318
00:17:24.640 --> 00:17:27.550
bit of it and see
the pain that he's creating

319
00:17:27.880 --> 00:17:30.700
for everybody else. You know?
And that's, that's, that's good

320
00:17:30.700 --> 00:17:32.560
that you're saying that because
that's, in fact, what I

321
00:17:32.560 --> 00:17:35.680
see as an internal developer,
as an internal person is

322
00:17:35.680 --> 00:17:38.740
watching the mailing lists on
the public mailing list. You'll

323
00:17:38.740 --> 00:17:41.230
get a note from Sanocki
one day, not as coming

324
00:17:41.230 --> 00:17:44.920
down from, you know, corporate
VP world, but he'll say,

325
00:17:45.310 --> 00:17:46.780
yeah, I went to Fry's
and I paid it in

326
00:17:46.780 --> 00:17:48.580
her box and I put
together my own PC today

327
00:17:48.580 --> 00:17:50.850
and I install seven. And
here's the two things that

328
00:17:50.850 --> 00:17:53.910
didn't work. Here's the stack
dump. Here's what I think,

329
00:17:54.180 --> 00:17:57.750
you know, and he's coming
in as Joe user, the

330
00:17:57.750 --> 00:18:01.440
enthusiast who assembled a PC,
and then you'll see the

331
00:18:01.440 --> 00:18:03.840
responses from people that are
like, Oh, should we respond

332
00:18:03.840 --> 00:18:07.680
to the senior vice president?
But he's a geek just

333
00:18:07.680 --> 00:18:10.110
like us. So then I'm
thinking, well, this is, this

334
00:18:10.110 --> 00:18:12.890
is how it's supposed to
be. I think it is

335
00:18:12.890 --> 00:18:15.890
how it's supposed to be.
As long as you are

336
00:18:15.890 --> 00:18:18.680
responsible for technical matters, you
better be able to handle

337
00:18:18.680 --> 00:18:21.350
it. It at the bottom
most level, as well as

338
00:18:21.350 --> 00:18:26.090
the top. So going back
to the, the professionalism argument,

339
00:18:26.090 --> 00:18:27.890
I'm trying to figure out
in the front, in the

340
00:18:27.890 --> 00:18:29.840
stack from the top, whether
it be the architect or

341
00:18:29.840 --> 00:18:31.340
the vice president of the
business person, all the way

342
00:18:31.340 --> 00:18:33.680
down to the apprentice, we
talked a little bit about

343
00:18:33.680 --> 00:18:36.620
the notion of coming up
with a formalized journeyman program

344
00:18:36.620 --> 00:18:40.580
and an apprenticeship for programmers.
How do we bake professionalism

345
00:18:40.580 --> 00:18:45.560
in to the entire stack?
Well, I, I think the,

346
00:18:45.560 --> 00:18:47.480
the choice of the word
apprentice there is a very

347
00:18:47.480 --> 00:18:50.840
good one. Cause I think
professionalism is, is baked into

348
00:18:50.840 --> 00:18:54.470
the stack. By example, a
young person coming out of

349
00:18:54.470 --> 00:18:58.010
school should not be thrown
in a room, should not

350
00:18:58.010 --> 00:19:00.230
have meat thrown in and,
and expect code to come

351
00:19:00.230 --> 00:19:03.830
out. And they should be
coupled with someone slightly more

352
00:19:03.830 --> 00:19:06.560
senior taught the ropes. There
should be a lot of

353
00:19:06.560 --> 00:19:09.500
pair programming, a lot of
code reviewing a mentoring and

354
00:19:09.500 --> 00:19:12.650
coaching. And then at every
level thereafter, there should be

355
00:19:12.650 --> 00:19:18.410
a, a mentoring association. Everybody
should know who their mentor

356
00:19:18.410 --> 00:19:21.890
is at every level, going
up up the chain so

357
00:19:21.890 --> 00:19:25.340
that you are inducted into
the halls of professionalism by

358
00:19:25.340 --> 00:19:28.340
people who know it better
than you do. I don't

359
00:19:28.340 --> 00:19:30.320
think you can take classes
on this. I don't think

360
00:19:30.320 --> 00:19:33.170
you can absorb it from
books. Some of the things

361
00:19:33.170 --> 00:19:35.930
certainly are you could get
from books, but the real

362
00:19:35.930 --> 00:19:40.910
heart of discipline is in
working with someone else and

363
00:19:40.940 --> 00:19:45.830
it absorbing their sweat into
your skin. Like the residents

364
00:19:45.830 --> 00:19:47.960
program, that one has to
go through to become a

365
00:19:47.960 --> 00:19:50.210
doctor. I think so. Yeah.
I mean, think that those

366
00:19:50.210 --> 00:19:55.570
guys they're coupled together with
their residents and they can

367
00:19:55.570 --> 00:19:57.950
go through hell too. So
I'm trying, so this is,

368
00:19:57.950 --> 00:19:59.750
might be a backwards way
of thinking about it, but

369
00:19:59.750 --> 00:20:01.400
it's also got me a
little sad. I'm trying to

370
00:20:01.400 --> 00:20:09.290
think of a less professional
vocation than ours. I mean,

371
00:20:09.320 --> 00:20:12.500
even a construction worker, you
gave him his tool belt

372
00:20:12.500 --> 00:20:14.870
and his very first roofing
hammer, and then you assign

373
00:20:14.870 --> 00:20:16.670
them a mentor and then
he goes, and he figures

374
00:20:16.670 --> 00:20:19.790
it out. Even the guy
at McDonald's that works, the

375
00:20:19.790 --> 00:20:23.480
fryer later is assigned a
mentor and works his way

376
00:20:23.480 --> 00:20:26.240
up to burgers and then
possibly the drive through window.

377
00:20:26.390 --> 00:20:31.020
Yep. But Nope, the least
professional profession that there is

378
00:20:31.160 --> 00:20:33.230
Coming out of school. You're
expected to know everything and

379
00:20:33.230 --> 00:20:35.750
be able to do everything.
I don't know if we're

380
00:20:35.750 --> 00:20:40.160
the least we're very young
and the, the companies that

381
00:20:40.160 --> 00:20:43.040
are trying to make use
of software really haven't figured

382
00:20:43.040 --> 00:20:45.410
out how the heck they're
going to do that. And

383
00:20:45.530 --> 00:20:49.000
we, as, as programmers, most
of us came out of

384
00:20:49.000 --> 00:20:50.890
school or came out of
wherever. We thought we owned

385
00:20:50.890 --> 00:20:54.550
the world and really haven't
understood that we needed to

386
00:20:54.550 --> 00:20:57.670
have this level of discipline
until perhaps the last five

387
00:20:57.670 --> 00:21:01.680
years. Why the last five
years, what was special about

388
00:21:02.070 --> 00:21:03.960
the late night? Was it
the bubble that caused this

389
00:21:03.960 --> 00:21:07.380
to happen? I think the
bubble might've been a stimulus

390
00:21:07.380 --> 00:21:11.940
of it, but I think
I'm more, probably more important

391
00:21:11.940 --> 00:21:14.130
than that as you've got
a bunch of, of people

392
00:21:14.130 --> 00:21:18.780
like me who have been
programmers for damn near 40

393
00:21:18.780 --> 00:21:23.430
years. And we're looking at,
at the situations we've created

394
00:21:23.430 --> 00:21:25.860
and, and realize that, wait
a minute, you just can't

395
00:21:26.460 --> 00:21:31.260
do this anymore. We can't
be the way we were

396
00:21:31.260 --> 00:21:37.230
because we've got to keep
on leading the software profession

397
00:21:37.230 --> 00:21:40.530
into the next several decades.
Did you get tired? We

398
00:21:40.530 --> 00:21:43.260
have been doing this for
17 years and I'm tired.

399
00:21:43.260 --> 00:21:44.550
I'm ready to be done.
I want to be an

400
00:21:44.550 --> 00:21:48.480
architect. I'll have to. No,
no, no, no. I want

401
00:21:48.480 --> 00:21:50.340
them to find me with
my nose stuck between the

402
00:21:50.340 --> 00:21:53.790
keys of the keyboard. I
just, I want to code

403
00:21:54.390 --> 00:21:57.270
and everything else I do
is ancillary so that I

404
00:21:57.270 --> 00:21:59.310
can go back to my
laptop and write code. So

405
00:21:59.310 --> 00:22:01.410
as long as your hands
still work, you're gonna, you're

406
00:22:01.410 --> 00:22:07.740
going to code. I don't
know. I think in the

407
00:22:07.740 --> 00:22:09.330
context of history you been
doing this, you said 40

408
00:22:09.330 --> 00:22:12.030
years or so, and you've
probably got another 40 in

409
00:22:12.030 --> 00:22:14.970
you. What do you think
it's going to look like?

410
00:22:15.570 --> 00:22:17.400
Is it so are we
going to still be dicking

411
00:22:17.400 --> 00:22:21.300
around with text editors in
40 years? Yeah. I think

412
00:22:21.300 --> 00:22:23.880
we will be dicking around
with text editors for another

413
00:22:23.880 --> 00:22:28.530
40 years. I don't think
it will be some radically

414
00:22:28.530 --> 00:22:31.350
different thing. I think the
text editor editors will be

415
00:22:31.350 --> 00:22:33.240
much, much better. Yeah. We're
not gonna be able to

416
00:22:33.240 --> 00:22:35.790
just speak didn't bill Gates.
Promise me a computer. I

417
00:22:35.790 --> 00:22:38.220
could talk to Not your
speaking is the, this is

418
00:22:38.220 --> 00:22:41.490
the way we want to
do that. I think we

419
00:22:41.490 --> 00:22:45.630
want to still maintain the
precision of single key strokes

420
00:22:45.630 --> 00:22:49.770
and particular characters. So I
don't know if speaking is,

421
00:22:49.770 --> 00:22:52.830
is the interface, The one
to many interface isn't working

422
00:22:52.830 --> 00:22:56.340
for me, maybe that one
token in my head or

423
00:22:56.340 --> 00:22:59.610
one, you know, series of
tokens. One thought when idiom

424
00:22:59.940 --> 00:23:03.390
is, you know, 40 or
50 keeps my hands hurt.

425
00:23:04.200 --> 00:23:06.080
You know, I've been doing
this awhile. My hands hurt.

426
00:23:06.640 --> 00:23:11.850
See the, the YouTube, the
YouTube on how to build

427
00:23:11.850 --> 00:23:15.000
Conway's game of life in
APL. No, this was an

428
00:23:15.000 --> 00:23:18.150
astounding YouTube. It's, it's, it's
wonderful to watch because this

429
00:23:18.150 --> 00:23:21.330
guy is describing it. And
all you see on the

430
00:23:21.330 --> 00:23:25.830
YouTube is the screen and
he is speaking while he's

431
00:23:25.830 --> 00:23:30.540
typing, but he's typing much
slower than he's speaking. The,

432
00:23:30.900 --> 00:23:33.450
and you know, APL is
this language that has a

433
00:23:33.450 --> 00:23:36.690
zillion characters to it. It's
like Chinese, a whole new

434
00:23:36.990 --> 00:23:39.150
layout of the keyboard is
necessary in order to do

435
00:23:39.150 --> 00:23:42.120
it. But here he is,
he's typing while he's speaking.

436
00:23:42.120 --> 00:23:46.490
And every keystroke, there are
several words for really any

437
00:23:46.490 --> 00:23:50.240
winds up implementing the entire
game. Conway's game of life

438
00:23:51.200 --> 00:23:56.690
in a few dozen keystrokes.
Now APL is an old

439
00:23:56.690 --> 00:23:59.780
language, but I think there's
something to this idea of

440
00:23:59.780 --> 00:24:03.290
an extremely dense language where
every keystroke has a lot

441
00:24:03.290 --> 00:24:08.960
of meaning to it. And
you, your, your programming effort

442
00:24:08.960 --> 00:24:11.300
goes into the thought of
how to assemble a very

443
00:24:11.300 --> 00:24:15.320
few tokens rather than to
assemble massive amounts of tenets

444
00:24:15.320 --> 00:24:18.310
that we do now. Very
interesting. Yeah. That's why regular

445
00:24:18.310 --> 00:24:20.470
expressions are so powerful. Yeah.
They are. You think a

446
00:24:20.470 --> 00:24:23.620
long time about every single
character, You know, if regular

447
00:24:23.620 --> 00:24:26.620
expressions are the Katakana and
what is the Kanji look

448
00:24:26.620 --> 00:24:30.040
like? Right. I mean, the,
the, the example of Chinese

449
00:24:30.040 --> 00:24:33.310
is excellent. The idea that
one glyphs can describe an

450
00:24:33.310 --> 00:24:37.810
entire sentence. Yes. Yeah. And
Chinese is the existence proof

451
00:24:38.140 --> 00:24:41.920
that it's possible to have
languages where you have very

452
00:24:41.920 --> 00:24:45.490
meaningful glyphs. Right? Well, we
know people who speak English

453
00:24:45.490 --> 00:24:49.120
or who use am Latin
based languages or transliterations are

454
00:24:49.120 --> 00:24:52.900
used to using, you know,
two, three and four characters

455
00:24:52.900 --> 00:24:57.190
to make one sound. People
who use celebrates like Katakana,

456
00:24:57.220 --> 00:25:00.700
like Ethiopian I'm Herrick, like
Hebrew, like Arabic can make

457
00:25:00.700 --> 00:25:04.420
one glyphs and get, you
know, the equivalent of two

458
00:25:04.420 --> 00:25:07.000
sounds, a continent and a
vowel, or you might as

459
00:25:07.000 --> 00:25:10.570
well just say, look, that
picture means rock. Or I

460
00:25:10.570 --> 00:25:16.120
guess it was at, in,
in Chinese, a woman, there's

461
00:25:16.120 --> 00:25:17.860
a symbol for woman. And
then you've put it three

462
00:25:17.860 --> 00:25:21.950
times. It means gossip. I
read that. And that was,

463
00:25:21.950 --> 00:25:23.890
I think it was in
bill Bryson's book called the

464
00:25:23.890 --> 00:25:26.260
mother tongue. I did not
know that. I think I

465
00:25:26.260 --> 00:25:27.440
may have got it wrong,
but it was, it was

466
00:25:27.470 --> 00:25:29.230
a really great book by
a guy named bill Bryson

467
00:25:29.230 --> 00:25:32.110
who wrote the, a, a
brief history of everything. And

468
00:25:32.110 --> 00:25:34.540
he's got this great book
called the mother tongue. And

469
00:25:34.540 --> 00:25:36.310
it was like, you know,
one woman, that's a woman.

470
00:25:36.310 --> 00:25:39.560
Two is a conversation and
three has gossip. And the

471
00:25:39.670 --> 00:25:43.960
life of three men means
grunts. Yeah. Basically, that's, that's

472
00:25:43.960 --> 00:25:48.370
very interesting. Think of the
languages that are becoming popular

473
00:25:48.370 --> 00:25:54.340
right now, languages like Ruby
and Haskell and closure. And

474
00:25:55.600 --> 00:25:58.840
these languages are much denser
than the languages that we've

475
00:25:58.840 --> 00:26:01.750
been used to a denser
than Java or C sharp

476
00:26:01.750 --> 00:26:05.680
or VB or, or, or
languages that were in the

477
00:26:05.680 --> 00:26:09.160
mainstream Languages. You just listed
off the last ones, C

478
00:26:09.160 --> 00:26:11.560
sharp Java and C plus
plus are all essentially the

479
00:26:11.560 --> 00:26:14.620
same language, no matter what
anyone says, it's all the

480
00:26:14.620 --> 00:26:19.690
same language Pascal. And it's
just all the same C

481
00:26:19.780 --> 00:26:24.940
so and well, Ruby isn't
radically different. It's definitely more

482
00:26:24.940 --> 00:26:30.160
than one step withdrawn. Yes.
And then heading in the,

483
00:26:30.220 --> 00:26:33.130
in the APL direction. You're
right. I wonder, I'll have

484
00:26:33.130 --> 00:26:35.800
to get Andrew's Hillsburg on
the show and say, have

485
00:26:35.800 --> 00:26:40.240
you thought about for each
being one cliff and why

486
00:26:40.240 --> 00:26:43.060
you're there? It's just make
the whole looping construct. Just

487
00:26:43.140 --> 00:26:45.690
one cliff cliff. And then
how about some significant white

488
00:26:45.690 --> 00:26:50.580
space, if you don't mind.
That's really interesting idea. Yeah.

489
00:26:50.580 --> 00:26:55.320
So being able to express
ourselves doesn't really change professionalism.

490
00:26:55.320 --> 00:26:57.060
I'm trying to think. You
got me thinking about how

491
00:26:57.060 --> 00:26:59.730
to, how one could express
themselves in so many fewer

492
00:26:59.730 --> 00:27:02.250
type. Cause right now we're
in the process of making

493
00:27:02.280 --> 00:27:06.380
tooling like ReSharper and code
rush, where I can push

494
00:27:06.570 --> 00:27:11.460
the letter C hit space
and we generate all this

495
00:27:11.460 --> 00:27:14.370
stuff. But once it's been
generated there, it's just texts.

496
00:27:14.850 --> 00:27:19.850
The, the really interesting thing
about ReSharper and the, the

497
00:27:19.860 --> 00:27:25.260
whole menagerie of refactoring browsers
is that they take this

498
00:27:25.260 --> 00:27:29.490
glyphs concept. And instead of
making the glyphs elements of

499
00:27:29.490 --> 00:27:33.090
the program, they make the
glyphs transformations of the program,

500
00:27:33.420 --> 00:27:35.820
but usually only one way.
And then they struggle to

501
00:27:35.820 --> 00:27:39.120
go on the way back.
So if you want to

502
00:27:39.120 --> 00:27:43.260
rename a variable that's keystrokes.
So those things require that

503
00:27:43.260 --> 00:27:46.800
they understand too much. For
example, ReSharper is basically reinvented

504
00:27:46.890 --> 00:27:51.090
an entire C-sharp compiler and
tokenize or all it's something

505
00:27:51.090 --> 00:27:53.610
that isn't, that isn't the
real one. Yes, that's right.

506
00:27:53.610 --> 00:27:56.730
So things are great. And
then we introduced link, which

507
00:27:56.730 --> 00:27:58.770
is a language within a
language, and then it gets

508
00:27:58.860 --> 00:28:02.250
infused, right? So you get
this transformation when you type

509
00:28:02.250 --> 00:28:04.650
in C you hit space
and you hit class curly

510
00:28:04.650 --> 00:28:07.860
brace, curly brace, but maybe
I want to change that

511
00:28:07.860 --> 00:28:12.270
into an interface. I can't
change the glyphs, the essence

512
00:28:12.270 --> 00:28:14.040
of the thing that is
a class into an interface

513
00:28:14.070 --> 00:28:18.690
as easily, because now it's
expanded. And to bring it

514
00:28:18.690 --> 00:28:21.840
back to it's to its,
you know, to its essence,

515
00:28:21.840 --> 00:28:28.430
its Glip form is really
possible. Well, I want to

516
00:28:28.430 --> 00:28:32.780
explore, Oh, this is random.
Well, you never know what

517
00:28:32.780 --> 00:28:35.540
a highly unprofessional a podcast
that we've put on today,

518
00:28:35.750 --> 00:28:39.140
Bob. Well, thanks for sitting
down with me here in

519
00:28:39.140 --> 00:28:43.400
Norway. This has been another
episode of Hansel minutes, content

520
00:28:43.400 --> 00:28:46.460
free or provided to you
by Scott Hansman uncle Bob

521
00:28:46.460 --> 00:28:49.010
Martin. And we will see
you again Next week.

