WEBVTT FILE

1
00:00:12.020 --> 00:00:17.600
From Hansel minutes.com. It's Hanselman.
It's a weekly discussion with

2
00:00:17.600 --> 00:00:21.680
web developer and technologist and
Scott Hanselman hosted by Carl Franklin.

3
00:00:22.550 --> 00:00:26.360
This is Lawrence Ryan announcing show
number one 49. Recorded live

4
00:00:26.360 --> 00:00:32.030
Tuesday, February 10th, 2009. Support for Hansel
minutes is provided by tolerant

5
00:00:32.090 --> 00:00:35.840
Rav controls. The most comprehensive
suite of components for windows

6
00:00:35.840 --> 00:00:46.340
forms and asp.net web application.
online@wwwdottenerikdotcomandby.net developers journal the world's

7
00:00:46.370 --> 00:00:52.130
leading.net developer magazine online at
www dot <inaudible> dot com.

8
00:00:53.300 --> 00:00:56.510
In this episode, Scott talks
to Doug cook house Seville

9
00:00:56.570 --> 00:01:02.480
and Lee Brenner about their
new Twitter client blue. Hi,

10
00:01:02.480 --> 00:01:04.340
this is Scott Hanselman and
this is another episode of

11
00:01:04.340 --> 00:01:07.520
Hansel minutes. Today. We're sitting
down with the guys from

12
00:01:07.520 --> 00:01:12.980
1323 is a development design
firm. I've got Doug cook.

13
00:01:13.520 --> 00:01:16.190
How Seville and leap renter.
Can you guys tell me

14
00:01:16.610 --> 00:01:22.760
who does what? A lot
of people, we have a

15
00:01:22.760 --> 00:01:56.060
small team here. Okay. Okay.
Okay. So I wanted to

16
00:01:56.060 --> 00:01:59.330
talk to you guys because
you've got some experiences you

17
00:01:59.330 --> 00:02:04.700
call them demos samples, experiences
up@thirteentwentythree.com. The word 13, the

18
00:02:04.700 --> 00:02:07.730
number 20 three.com. And one
of them really kind of

19
00:02:07.730 --> 00:02:09.980
took a Twitter by storm
a couple weeks ago. It

20
00:02:09.980 --> 00:02:12.500
used to be called chirp
and you've had a little

21
00:02:12.500 --> 00:02:16.850
name conflict, and you've renamed
it blue. And it's a

22
00:02:16.850 --> 00:02:20.420
WPF Twitter client. And there's
been some clients before. There's

23
00:02:20.420 --> 00:02:24.050
a w I T T
Y. That's an open source

24
00:02:24.050 --> 00:02:27.680
to VP of client, but
this is the first exceedingly

25
00:02:28.130 --> 00:02:30.800
pretty one. I mean, it's,
it's, it's pretty amazing. It's

26
00:02:30.800 --> 00:02:33.470
got a really cool color
scheme. Some it's got a

27
00:02:33.470 --> 00:02:37.310
real interesting aesthetic. It's not
the, the standard developer kind

28
00:02:37.310 --> 00:02:42.470
of 1970s, orange shag carpet,
avocado colored refrigerator style. It's,

29
00:02:42.980 --> 00:02:47.000
it's pretty amazing. Why did
you make a Twitter client?

30
00:02:49.340 --> 00:03:00.070
We do these labs. Ain't
got to go in and

31
00:03:00.070 --> 00:03:02.230
That's, those were labs you
see on the site, I

32
00:03:02.230 --> 00:03:04.570
started just like, you know,
getting on Twitter cause a

33
00:03:04.570 --> 00:03:06.550
buddy was like, Hey, check
this out Twitter. And I'm

34
00:03:06.550 --> 00:03:09.460
like, yeah, that's, that's kinda
not great. You know, I'm

35
00:03:09.460 --> 00:03:12.130
not interested in that. And
then, you know, some started

36
00:03:12.130 --> 00:03:14.380
seeing some people post some
things and like, I was

37
00:03:14.380 --> 00:03:16.390
kind of interesting. So I
create an account and very

38
00:03:16.390 --> 00:03:18.400
modest, but then I was
like, okay, let's check out

39
00:03:18.400 --> 00:03:21.010
a desktop client. And then
I was noticing a lot

40
00:03:21.010 --> 00:03:23.230
of them were terrible. I
mean, not only just from

41
00:03:23.230 --> 00:03:25.390
a visual standpoint, but from
an interaction standpoint. And I'm

42
00:03:25.390 --> 00:03:27.520
like, where's the EST button,
where's this? Oh my God,

43
00:03:27.520 --> 00:03:29.680
there's too many buttons on
this one. You know? So

44
00:03:29.680 --> 00:03:31.180
it was like, you know,
just kind of like trying

45
00:03:31.180 --> 00:03:33.550
to come up with something
that was in between, but

46
00:03:33.550 --> 00:03:36.310
also I did not mind
having on my desktop and

47
00:03:36.310 --> 00:03:40.330
wasn't green, so, you know,
just kind of played around

48
00:03:40.330 --> 00:03:42.490
with it. And then, you
know, that's how that started.

49
00:03:44.390 --> 00:03:46.890
And this is just an
experiment and you guys put

50
00:03:46.890 --> 00:03:49.200
it out there. Did you
think it was gonna take

51
00:03:49.200 --> 00:03:50.790
off because it's going to
be? Yeah, I think the

52
00:03:50.790 --> 00:03:52.920
main thing to understand about
the labs is they're primarily

53
00:03:52.920 --> 00:03:57.060
designed experiments. So most of
them are, tend to be

54
00:03:57.070 --> 00:04:00.780
our excursions in the, you
know, in the technology. And

55
00:04:00.780 --> 00:04:03.510
then also just kind of
practicing within internally within a

56
00:04:03.510 --> 00:04:07.020
core team, kind of honing
out our own process. So,

57
00:04:07.500 --> 00:04:09.450
you know, a lot of
times we'll launch these, not

58
00:04:09.450 --> 00:04:13.590
expecting them to be full
floods, you know, applications, they're

59
00:04:13.600 --> 00:04:16.410
more sort of excursions in,
you know, how can we

60
00:04:16.410 --> 00:04:19.920
create a nice experience around
a set of, you know,

61
00:04:19.920 --> 00:04:23.190
a small set of services.
So Twitter seem to be

62
00:04:23.190 --> 00:04:25.230
kind of a nice model
system because it's not very

63
00:04:25.230 --> 00:04:27.600
complex. I'm going to seem
like there would be a

64
00:04:27.600 --> 00:04:29.670
lot we could maybe do
to raise the bar there.

65
00:04:30.460 --> 00:04:32.430
So, you know, when we
first launched, we were actually

66
00:04:32.430 --> 00:04:36.930
a little surprised that people
kind of got into it

67
00:04:36.930 --> 00:04:39.960
and we're pretty excited about
it because we really had

68
00:04:39.960 --> 00:04:43.620
left out kind of some
core functionality, but this was

69
00:04:43.620 --> 00:04:46.110
mainly just because the focus
was just to kinda get

70
00:04:46.110 --> 00:04:48.420
a simple client out there.
And you know, it's a

71
00:04:48.420 --> 00:04:50.700
little bit of a calling
card for the company. Yeah.

72
00:04:50.970 --> 00:04:54.960
It seems like a desktop
versions of popular web applications

73
00:04:55.020 --> 00:04:58.050
seem to be the last
great thing. I mean, we've

74
00:04:58.050 --> 00:05:00.870
got word and Excel and
outlook and about on a

75
00:05:00.870 --> 00:05:03.840
browser really all that's left
to right. Are really great.

76
00:05:03.840 --> 00:05:06.180
Front ends to things like
Twitter. I noticed you guys

77
00:05:06.180 --> 00:05:09.540
also wrote an application that
front ends Netflix. Yeah, definitely.

78
00:05:09.540 --> 00:05:12.060
So we have another application
is called drama. That's based

79
00:05:12.060 --> 00:05:15.630
on a open API as
well in the past. We've

80
00:05:15.630 --> 00:05:19.560
also done things, as you
mentioned for flicker photo browsing.

81
00:05:20.140 --> 00:05:22.470
And then also one time
we had a denounced sort

82
00:05:22.470 --> 00:05:24.870
of a podcast reader. All
of these are kind of

83
00:05:24.870 --> 00:05:28.080
based on the premise that,
you know, the web is

84
00:05:28.080 --> 00:05:30.720
a great conduit for information,
but not always the best

85
00:05:30.750 --> 00:05:35.820
experience in terms of, in
terms of accessing that content

86
00:05:35.820 --> 00:05:41.100
or experiencing that content. Yeah.
Now folks won't be able

87
00:05:41.100 --> 00:05:42.810
to see this, of course,
cause we're on a podcast,

88
00:05:42.810 --> 00:05:44.370
but I'll try to explain
it the best I can.

89
00:05:44.880 --> 00:05:48.090
Blue kind of when you
start it up from a

90
00:05:48.090 --> 00:05:50.670
design perspective, it kinda kind
of smacks you in the

91
00:05:50.670 --> 00:05:55.080
face. It unfolds out of,
out of a thin line

92
00:05:55.140 --> 00:05:59.570
with a transparent window and
then kind of rolls down

93
00:05:59.570 --> 00:06:02.150
with a bit of an
arrow then goes from kind

94
00:06:02.150 --> 00:06:05.720
of transparent to slightly translucent.
And then it has a

95
00:06:05.720 --> 00:06:08.870
very kind of irregular region.
It's got a really dramatic

96
00:06:10.640 --> 00:06:14.690
representation of the Twitter. What
is it, a Twitter pigeon

97
00:06:14.690 --> 00:06:18.230
or Twitter Bluebird, it's kind
of your, your, your view

98
00:06:18.230 --> 00:06:21.680
of what this bird would
look like. How in the

99
00:06:21.680 --> 00:06:23.900
world did you do that
startup? I mean, it, it,

100
00:06:24.210 --> 00:06:25.910
it doesn't just pop a
window up and say, Hey,

101
00:06:25.910 --> 00:06:29.960
log in. It, it kind
of unfurls itself in a

102
00:06:29.960 --> 00:06:32.480
very dramatic way. And I'm
trying to figure out, is

103
00:06:32.480 --> 00:06:35.480
this a transparent movie or
what? I mean, even if

104
00:06:35.480 --> 00:06:37.940
you try blue and don't
like it and end up

105
00:06:37.940 --> 00:06:40.640
using a different Twitter client,
it's worth installing just to

106
00:06:40.640 --> 00:06:44.300
see the startup and shutdown
animations. And I cannot get

107
00:06:44.300 --> 00:06:46.780
my head around how you
did this in WPF, Hey,

108
00:06:46.780 --> 00:06:49.660
before we get into the
actual, like the, you know,

109
00:06:49.660 --> 00:06:52.660
how we built it, but,
but to address the more

110
00:06:52.660 --> 00:06:55.630
concept behind it is the
need, the desire to try

111
00:06:55.630 --> 00:06:57.430
to do something different. That's
the point of the lab

112
00:06:57.460 --> 00:06:59.620
because it's there for us.
And, you know, we floated

113
00:06:59.620 --> 00:07:04.150
on the website and, you
know, Lou was an experiment

114
00:07:04.150 --> 00:07:05.890
to see how far we
can push it. It's like

115
00:07:06.100 --> 00:07:08.590
I did, when I, when
I was talking to these

116
00:07:08.590 --> 00:07:09.910
guys, I was like, why
don't we just have to

117
00:07:09.910 --> 00:07:12.100
have a window open like
that every window that I've

118
00:07:12.100 --> 00:07:14.020
ever had on my desktop
does that, why can't it

119
00:07:14.050 --> 00:07:16.540
anime on, but then here's
the other trick? Why can't

120
00:07:16.540 --> 00:07:19.930
I have an animate off
as well? You know? So

121
00:07:20.440 --> 00:07:22.840
we, we kind of pushed
it a little over the

122
00:07:22.840 --> 00:07:26.740
top, but fun. No one
does it, I guess, Wait,

123
00:07:26.740 --> 00:07:28.390
I mean, it's, it's over
the top in the sense

124
00:07:28.390 --> 00:07:31.480
that it's, it it's well,
I mean, I wouldn't say

125
00:07:31.480 --> 00:07:32.950
it's over the top. I
mean, I guess if every

126
00:07:32.950 --> 00:07:35.120
single window did that, it's
over the top. When, when

127
00:07:35.120 --> 00:07:38.560
we moved from windows 90,
was it 98 to XP

128
00:07:38.560 --> 00:07:40.240
and they started to have
that little animation when you

129
00:07:40.240 --> 00:07:42.370
minimized and then on the
Mac, they've got the genie

130
00:07:42.370 --> 00:07:44.530
animation. A lot of people
thought, Oh, this is a

131
00:07:44.530 --> 00:07:47.230
waste of power, but it
does. It does let you

132
00:07:47.230 --> 00:07:50.980
know that something's happening. It
does express an interaction and

133
00:07:50.980 --> 00:07:53.080
it's a, it's a punctuation
on an interaction. So I

134
00:07:53.080 --> 00:07:57.700
don't think it's necessarily just
eye candy. One of the,

135
00:07:57.760 --> 00:07:59.590
one of the key tenants
that we were trying to

136
00:07:59.590 --> 00:08:03.220
shoot for with blue was
to have no rough edges

137
00:08:03.220 --> 00:08:06.460
in any experience. And what
I mean by that is

138
00:08:06.700 --> 00:08:09.940
we didn't want the user
to have some hard transition

139
00:08:09.940 --> 00:08:13.390
at any point, whether that
be in the UI or

140
00:08:13.390 --> 00:08:16.570
even in the Twitter data
that's coming in from the

141
00:08:16.570 --> 00:08:20.830
service. So every everything's smoothly
blend from, from one moment

142
00:08:20.830 --> 00:08:24.250
to another, if that means,
you know, switching timelines, you'll

143
00:08:24.250 --> 00:08:27.400
see that the timeline smoothly,
you know, slide in and

144
00:08:27.400 --> 00:08:29.890
out, or if you're Twitter
comes in or a new

145
00:08:29.890 --> 00:08:32.200
tweet comes in all of
the other tweets sort of

146
00:08:32.200 --> 00:08:35.500
nicely moved down and natural
motion to make room for

147
00:08:35.500 --> 00:08:38.590
the new one. And the
same in that same tenant

148
00:08:38.590 --> 00:08:40.480
goes forward to start up
and the shutdown, we didn't

149
00:08:40.480 --> 00:08:43.420
want it to be a,
a heart, a heart stop.

150
00:08:43.430 --> 00:08:45.100
We wanted things to come
in and out so that

151
00:08:45.100 --> 00:08:48.370
everything was very contextual so
that the user always knew

152
00:08:49.540 --> 00:08:52.570
sort of inherently knew what
was going on without, you

153
00:08:52.570 --> 00:08:56.660
know, based on visual feedback
of the animations are, Are

154
00:08:56.730 --> 00:08:59.820
little subtle. I mean, they
almost, they're almost subconscious. For

155
00:08:59.820 --> 00:09:02.490
example, one of the things
I like about your reply

156
00:09:02.610 --> 00:09:05.460
animation is when you click
on somebody's name, like right

157
00:09:05.460 --> 00:09:07.800
here, I'm looking at a
tweet from Tim O'Reilly. I

158
00:09:07.800 --> 00:09:09.960
hover over it and I
see the buttons fade in

159
00:09:09.960 --> 00:09:13.710
and I see replying retreat.
I click reply, Tim O'Reilly

160
00:09:13.710 --> 00:09:17.310
flips over. And then my
face shows up with a

161
00:09:17.310 --> 00:09:19.950
little, little bubble as if
I'm a comic book character.

162
00:09:19.950 --> 00:09:22.950
And there's a, a nice,
transparent, a number in the

163
00:09:22.950 --> 00:09:25.950
background, kind of as a
watermark indicating how many characters

164
00:09:25.950 --> 00:09:28.530
I have less, but what's
significant to me here is

165
00:09:28.530 --> 00:09:31.170
that when I hit reply,
it, doesn't just flip over

166
00:09:31.410 --> 00:09:34.530
my, my window, my new
reply window kind of, kind

167
00:09:34.530 --> 00:09:37.080
of swells for a moment.
It just kind of gets

168
00:09:37.080 --> 00:09:39.270
a little wider and then
gets smaller. It's almost like

169
00:09:39.630 --> 00:09:41.670
what you'd see in classic,
you know, kind of sixties

170
00:09:41.670 --> 00:09:46.290
animation like bugs bunny type
animation. I mean, somebody cared

171
00:09:46.290 --> 00:09:49.050
about this, not to like
a quote silence of the

172
00:09:49.050 --> 00:09:50.820
lambs too much here, but
you know, if somebody loved

173
00:09:50.820 --> 00:09:55.140
this, somebody cared about this.
There's idle animations. When the,

174
00:09:55.620 --> 00:09:58.110
when the little blooper just
decides it's time to, you

175
00:09:58.110 --> 00:10:00.410
know, flap its wings. Yeah.
We, we really didn't want

176
00:10:00.410 --> 00:10:04.280
to leave any stone unturned
in the experience. You know,

177
00:10:04.280 --> 00:10:08.000
there's every, every moment that
you're in the app, we

178
00:10:08.000 --> 00:10:10.010
wanted it to just kind
of surprise you a little

179
00:10:10.010 --> 00:10:12.710
bit. And, and the dude
that, you know, you have

180
00:10:12.710 --> 00:10:15.200
to, you really have to
think about what you're appealing

181
00:10:15.200 --> 00:10:18.800
to in a, in a
human level. You know, humans

182
00:10:18.800 --> 00:10:22.040
respond to things emotionally, ultimately,
so that you can make

183
00:10:22.040 --> 00:10:27.930
the application behave naturally with
natural physical motion with, with

184
00:10:28.400 --> 00:10:31.070
small random moments. It just
makes it that much more

185
00:10:31.070 --> 00:10:34.310
interesting to interact with. And
it's almost, it's almost like

186
00:10:34.310 --> 00:10:38.120
a gentle, it's like a
gentle presence rather than this

187
00:10:38.120 --> 00:10:47.290
hard, you know, computer generated
application. I think another thing

188
00:10:47.300 --> 00:10:49.040
to point out is it's
kind of interesting is it's

189
00:10:49.050 --> 00:10:51.680
an attempt to kind of
get away from traditionally UI

190
00:10:52.070 --> 00:10:55.220
paradigms. Like when the, when
things are loading in the

191
00:10:55.220 --> 00:10:59.600
application, you know, we run
kind of a, a stream

192
00:10:59.600 --> 00:11:02.180
around the edge and then
it flashes instead of just

193
00:11:02.180 --> 00:11:04.160
putting up a hard sort
of, you know, a lot

194
00:11:04.160 --> 00:11:06.650
of people kind of put
it like a rotating wheel

195
00:11:06.650 --> 00:11:09.380
when things are happening. I
think there's a lot of

196
00:11:09.380 --> 00:11:12.260
opportunity to, you know, try
to do things that are

197
00:11:12.260 --> 00:11:15.980
a little more, you know,
a little more organic within

198
00:11:16.220 --> 00:11:19.010
terms of the overall experience
that matched with kind of

199
00:11:19.010 --> 00:11:23.420
the application. It was important
for it to, to surface

200
00:11:23.420 --> 00:11:27.020
the ideas of content rather
than a UI. We really

201
00:11:27.300 --> 00:11:29.420
only wanted to surface a
user interface if it was

202
00:11:29.420 --> 00:11:31.850
absolutely necessary for the most
part, the user should be

203
00:11:32.150 --> 00:11:36.440
interacting with content. So rather
than surfacing a progress bar

204
00:11:36.440 --> 00:11:39.140
to indicate a working state,
we just, we just build

205
00:11:39.140 --> 00:11:42.190
that into the natural, into
the UI itself so that

206
00:11:42.190 --> 00:11:44.390
it, it's not, you know,
it's, again, it's like the

207
00:11:44.390 --> 00:11:47.210
smooth experience with these or
has, and it's all sort

208
00:11:47.210 --> 00:11:51.440
of a natural and inherent
in the UI itself. Yeah.

209
00:11:52.430 --> 00:11:54.250
Well, I want to some
of the technical stuff, I

210
00:11:54.250 --> 00:11:56.890
mean, we can definitely talk
about how, how pretty it

211
00:11:56.890 --> 00:11:58.300
is and I can gush
about it, but I want

212
00:11:58.300 --> 00:12:01.750
to understand how this was
done, how the work was

213
00:12:01.750 --> 00:12:04.600
partitioned, who did, who did
what, and if that's a

214
00:12:04.600 --> 00:12:07.330
T, if you feel that
that's a typical developer designer

215
00:12:07.330 --> 00:12:10.420
workflow, or if it's, are
you all designers, because Microsoft

216
00:12:10.420 --> 00:12:13.420
has this idea of what
they call the diviner, I'm

217
00:12:13.420 --> 00:12:15.850
not a huge fan of
the name, but developer and

218
00:12:15.850 --> 00:12:18.490
designer one. And I don't
really believe that those people

219
00:12:18.520 --> 00:12:22.480
exist. So I'm interested in
your opinion about that and

220
00:12:22.480 --> 00:12:24.760
how you guys break work
up on an application like

221
00:12:24.760 --> 00:12:26.230
this that clearly has a
lot of work going on

222
00:12:26.230 --> 00:12:29.880
in the background, but a
is pretty as well. W

223
00:12:29.940 --> 00:12:34.290
I, I think w we're
a small team and we're

224
00:12:34.290 --> 00:12:36.540
all very, I think we're
all pretty skilled at what

225
00:12:36.540 --> 00:12:39.060
we do. So I don't
think that we, we fall

226
00:12:39.060 --> 00:12:43.170
into the traditional roles just
because, just because we are,

227
00:12:43.170 --> 00:12:46.350
so we are so specialized
and that at what we

228
00:12:46.350 --> 00:12:50.490
do, but I think for
our typical workflow, there's still

229
00:12:50.490 --> 00:12:53.280
a big, there's still a
big focus of the rapport

230
00:12:53.280 --> 00:12:56.280
between the designer and the
developer, because we, we sort

231
00:12:56.280 --> 00:13:03.480
of overlap hats where, whereas
the designer definitely provides a

232
00:13:03.480 --> 00:13:05.370
lot of the initial design
and a lot of the

233
00:13:05.370 --> 00:13:08.880
initial assets, and then hand
them off to me to

234
00:13:08.880 --> 00:13:11.340
do the development at the
same time. I'm, you know,

235
00:13:11.340 --> 00:13:14.490
I'm making suggestions to the,
to the, to that design

236
00:13:14.970 --> 00:13:18.270
adding in my own, you
know, adding in my own

237
00:13:18.270 --> 00:13:22.050
touch with, with, you know,
code based animation and, you

238
00:13:22.050 --> 00:13:25.550
know, the custom layout engine
to add physics and, and

239
00:13:25.920 --> 00:13:27.780
direct manipulation and things like
that. So it's a very,

240
00:13:27.780 --> 00:13:33.810
it's a very fluid process
and everyone ends up contributing

241
00:13:33.810 --> 00:13:36.060
to the process. So it's
kind of hard to say

242
00:13:36.060 --> 00:13:39.300
that, you know, everything is
sectioned off in a nice

243
00:13:39.300 --> 00:13:42.360
silos. And I, and it's
hard to also admit that,

244
00:13:42.360 --> 00:13:47.130
yeah, we're we have diviners
because it actually doesn't, doesn't

245
00:13:47.130 --> 00:13:51.090
work out that way for
us personally. Yeah. I want

246
00:13:51.090 --> 00:13:53.040
to understand if your workflow
works in the, kind of

247
00:13:53.040 --> 00:13:56.490
the way Microsoft thinks it's
supposed to work, like, you

248
00:13:56.490 --> 00:13:58.920
know, an XAML file gets
handed to someone and it's

249
00:13:58.920 --> 00:14:00.930
got all kinds of pretty
designed time code and everything.

250
00:14:01.740 --> 00:14:03.780
I mean, I think there's,
there's much to be made

251
00:14:03.780 --> 00:14:06.960
of like, you know, how
Microsoft positions, its new design

252
00:14:06.960 --> 00:14:10.530
tools and the expression suite
and decide, you know, design

253
00:14:10.530 --> 00:14:12.390
time versus run time. And
then the idea that you

254
00:14:12.390 --> 00:14:15.600
can have designers working in
blend and you know, at

255
00:14:15.600 --> 00:14:17.700
the same time, if I
had developers pulling things up

256
00:14:17.700 --> 00:14:21.310
in visual studio and well,
while I think that there,

257
00:14:21.310 --> 00:14:25.800
there definitely are some synergies,
you know, we'll rely on,

258
00:14:25.880 --> 00:14:28.860
on blend in some cases
to, to generate, you know,

259
00:14:28.920 --> 00:14:32.460
complex analytic gradients and what
have you. But by and

260
00:14:32.460 --> 00:14:34.440
large, it just seems like
at the end of the

261
00:14:34.440 --> 00:14:38.100
day, a lot of the
integration still falls on the

262
00:14:38.100 --> 00:14:41.880
developer. So a big part
of, I think our process

263
00:14:41.880 --> 00:14:46.140
anyways, not only having multiple
people looking at the, looking

264
00:14:46.140 --> 00:14:47.970
at the code and looking
at the build, but then

265
00:14:47.970 --> 00:14:50.910
also having developers that can
kind of understand the aesthetic

266
00:14:50.910 --> 00:14:55.360
that, that you're aiming at.
Hmm. Do you guys have

267
00:14:55.360 --> 00:14:58.510
the designer makes SAML or
does he make a Photoshop

268
00:14:58.780 --> 00:15:01.420
thing or does he write
the thing in flash first?

269
00:15:01.420 --> 00:15:04.390
I mean, how do you
get a concept across? Well,

270
00:15:04.420 --> 00:15:08.470
I'll say I, I was
floating designs for the guys

271
00:15:08.530 --> 00:15:10.450
when we were just kind
of developing it, just kind

272
00:15:10.450 --> 00:15:11.890
of brainstorming it and they're
like, Oh yeah, this is

273
00:15:11.890 --> 00:15:14.230
cool. This is cool. The
bird cool and everything. But

274
00:15:14.230 --> 00:15:15.670
I think it really kind
of took off from a

275
00:15:15.670 --> 00:15:19.090
concept standpoint and got complete
buy-in is when I actually

276
00:15:19.090 --> 00:15:21.850
kind of animated it in
seeing it the way that

277
00:15:21.850 --> 00:15:24.880
you see it, like in,
in Yeshua application, I kind

278
00:15:24.880 --> 00:15:28.480
of said, no, this is
how it really should behave

279
00:15:28.480 --> 00:15:30.760
and open up and everything.
And, and then it's like,

280
00:15:30.790 --> 00:15:32.440
once I floated that movie
out to the guys, it

281
00:15:32.440 --> 00:15:35.800
was like, let's do it.
So this one had been

282
00:15:35.800 --> 00:15:39.520
started static. It was, it
had to move. And then

283
00:15:39.520 --> 00:15:41.470
that's when everyone got excited
and that's when we started

284
00:15:41.470 --> 00:15:44.650
to, you know, get, you
know, Lee start firing up

285
00:15:44.650 --> 00:15:46.870
the coast And where did,
what did you show them?

286
00:15:46.870 --> 00:15:51.610
You showed them something in,
in expression or what Just

287
00:15:51.610 --> 00:15:54.160
quick time movie. It wasn't,
it was a little unrefined,

288
00:15:54.190 --> 00:15:58.480
but it shows the direction.
So that was, that was

289
00:15:58.480 --> 00:16:02.170
important. And then there was
a chirp, I don't mean

290
00:16:02.170 --> 00:16:03.580
to be pedantic, but you
made them a quick time

291
00:16:03.580 --> 00:16:05.740
movie, but what did you
do your design work in?

292
00:16:06.670 --> 00:16:10.880
Well, just the typical Adobe
tools, nothing too special just

293
00:16:10.880 --> 00:16:16.090
to, you know, Photoshop, illustrator
after effects. And then how

294
00:16:16.090 --> 00:16:20.260
did you do the animation
part? You know, all those

295
00:16:20.260 --> 00:16:23.640
tools combined. We'd like to
say those opening animations, we

296
00:16:23.650 --> 00:16:25.840
know we're just going to
Chrome or, you know, some

297
00:16:26.200 --> 00:16:31.390
amazing direct X based, you
know, defamation, but you know,

298
00:16:31.480 --> 00:16:34.090
that's just, that's just not
the case. I think the

299
00:16:34.100 --> 00:16:35.800
story is still a little
bit the same. And I

300
00:16:35.800 --> 00:16:38.530
think that as flash, as
in the past, which is

301
00:16:38.530 --> 00:16:41.500
it's sort of a, by
any means necessary. So in

302
00:16:41.500 --> 00:16:44.020
many cases, you know, we
don't have a problem relying

303
00:16:44.020 --> 00:16:47.260
on, you know, image sequences
or movies or, you know,

304
00:16:47.290 --> 00:16:50.830
other types of assets. I
know there's big push to

305
00:16:50.830 --> 00:16:53.560
get everything in SAML. And
I think a lot of

306
00:16:53.560 --> 00:16:56.740
those that make sense, certainly
in terms of if you're

307
00:16:56.740 --> 00:17:00.850
going to be resizing a
lot of content, but you

308
00:17:00.850 --> 00:17:03.190
know, in the case of
this application where we're kind

309
00:17:03.190 --> 00:17:06.610
of just shooting after kind
of a small footprint, small

310
00:17:06.610 --> 00:17:10.060
gadget like application, we went
ahead and can some of

311
00:17:10.060 --> 00:17:12.760
those sequences, You know, I
went a bunch, I went

312
00:17:12.760 --> 00:17:15.130
and did a bunch of,
of work recently with a

313
00:17:15.130 --> 00:17:17.260
buddy of mine on an
application for a large company.

314
00:17:17.590 --> 00:17:19.180
And I blogged a little
bit about it. And one

315
00:17:19.180 --> 00:17:21.130
of the things that people
kind of read me, the

316
00:17:21.130 --> 00:17:23.170
riot act about was that
I used a lot of

317
00:17:23.170 --> 00:17:27.610
transparent PNGs as resources. And
I found that the combination

318
00:17:27.610 --> 00:17:31.900
of XAML and declarative animations
and those transparent PNGs gave

319
00:17:31.900 --> 00:17:34.450
me a lot more flexibility
that I would have been

320
00:17:34.450 --> 00:17:36.790
very difficult to do. And
when forms are, are you

321
00:17:36.790 --> 00:17:40.900
guys sending, as I did
with transparent PNGs and stuff,

322
00:17:41.710 --> 00:17:45.670
That's definitely the case. You
know, we're not, we're not

323
00:17:45.670 --> 00:17:48.790
curious. We, we, we use
what we need to use

324
00:17:48.790 --> 00:17:50.520
to get the job done,
to get the best fidelity

325
00:17:50.520 --> 00:17:54.000
that we want. So yeah,
we have no problem using

326
00:17:54.540 --> 00:17:58.500
ping sequences or XAML it's
whatever it happens to work

327
00:17:58.500 --> 00:18:00.900
best for the fidelity we
need. And actually might be

328
00:18:00.900 --> 00:18:05.340
helpful to point out that
we, we sort of have

329
00:18:05.340 --> 00:18:08.460
built up our own internal
library to support, you know,

330
00:18:08.730 --> 00:18:11.280
to support some of the,
the fidelity that we have

331
00:18:11.550 --> 00:18:15.690
in blue. So if, if
we do want to use

332
00:18:15.690 --> 00:18:18.420
a ping sequence, you know,
we have a pretty robust,

333
00:18:18.570 --> 00:18:21.930
robust class that's in the
library that will allow us

334
00:18:21.930 --> 00:18:24.570
to really quickly and easily
add in as many things

335
00:18:24.570 --> 00:18:29.640
sequences and, you know, control
timing and frame rate, and

336
00:18:30.000 --> 00:18:33.510
whether it's reversed report and
weeping, things like that. You

337
00:18:33.510 --> 00:18:35.400
know, we have, we have
a layout engine in there

338
00:18:35.400 --> 00:18:39.000
that can handle really fluid,
you know, adding items to,

339
00:18:39.300 --> 00:18:43.920
to a layout really fluidly
where everything animates incorrectly, you

340
00:18:43.920 --> 00:18:47.190
can dynamically adjust the orientation,
or even the way out

341
00:18:47.190 --> 00:18:50.010
FEMA from say, stack panel
to grid, to, you know,

342
00:18:50.520 --> 00:18:53.910
fan view. And then on
top of that is completely

343
00:18:53.910 --> 00:18:57.480
virtualized. And that actually affords
us a lot of it

344
00:18:57.480 --> 00:19:00.120
affords us a lot of
efficiencies because then we can

345
00:19:00.120 --> 00:19:03.030
actually take that library and
just drop it into like,

346
00:19:03.030 --> 00:19:05.760
say drama. And then you,
you have drama really quickly

347
00:19:05.760 --> 00:19:08.970
because you can, you can
basically just hook your data

348
00:19:08.970 --> 00:19:11.760
source up to this way
out engine or hook your

349
00:19:11.760 --> 00:19:13.530
new pings up into a
new entrance of the image

350
00:19:13.530 --> 00:19:17.480
sequence. And you know, you're
good to go. So how

351
00:19:17.480 --> 00:19:21.650
far off of the classic,
let's say classic, the standard

352
00:19:21.650 --> 00:19:23.480
WPF way of doing things,
do you think you guys

353
00:19:23.480 --> 00:19:25.820
are, I mean, how many
things, how many different libraries

354
00:19:25.820 --> 00:19:28.280
did you have to write?
Because you felt that a

355
00:19:28.310 --> 00:19:33.050
WPF was missing something and
didn't do something versus you

356
00:19:33.050 --> 00:19:35.570
just wanted to write libraries
to support a certain style.

357
00:19:36.050 --> 00:19:39.530
The, the framework is, is
beautiful. The WTF framework is

358
00:19:39.530 --> 00:19:42.860
just excellent because it, at
the same time, it gives

359
00:19:42.860 --> 00:19:46.400
you such a great base
amount of functionality, but it's

360
00:19:46.460 --> 00:19:49.040
so easy to build on
top of it to get,

361
00:19:49.820 --> 00:19:51.740
to get to that next
level. If you, if you

362
00:19:51.740 --> 00:19:54.980
require a higher degree of
control and fidelity over what

363
00:19:54.980 --> 00:19:58.160
it is that you want.
So for us, we, you

364
00:19:58.160 --> 00:20:01.100
know, we, when we code
a class in the library,

365
00:20:01.100 --> 00:20:03.980
we definitely want it to
follow the, the model laid

366
00:20:03.980 --> 00:20:07.460
out by the framework. So,
you know, our, our layout

367
00:20:07.460 --> 00:20:12.010
panel, you know, follows the
virtualization method, can plug it

368
00:20:12.650 --> 00:20:16.070
to a list box as
an items panel source, either

369
00:20:16.460 --> 00:20:20.900
a panel should take place
and, and, you know, you

370
00:20:20.900 --> 00:20:23.840
can define its item source
and then circle collection. You're

371
00:20:23.840 --> 00:20:27.830
good to go. One thing
that's kind of interesting is

372
00:20:27.840 --> 00:20:31.130
we wrote this, you know,
way before it went seven

373
00:20:31.220 --> 00:20:34.700
way before there was any
concept that, you know, the

374
00:20:34.760 --> 00:20:38.720
touch drivers there it's provided
in the <inaudible>, we kind

375
00:20:38.720 --> 00:20:41.750
of have to go in
and enroll that in ourselves.

376
00:20:43.190 --> 00:20:44.690
You know, we kind of
had to split away from

377
00:20:44.690 --> 00:20:49.210
the standard listbox control with,
with that goes the classes

378
00:20:49.210 --> 00:20:52.180
from the selector, because we
needed to be able to

379
00:20:52.480 --> 00:20:56.500
support direct manipulation and physics
and sort of, you know,

380
00:20:56.530 --> 00:20:59.590
overshooting the window, things like
that. So we kind of

381
00:20:59.590 --> 00:21:01.360
had to roll that our
own because we just didn't

382
00:21:01.360 --> 00:21:03.790
have anything else to go
off of. But you know,

383
00:21:04.250 --> 00:21:07.210
that, that shows you how
powerful the framework is. Because

384
00:21:07.980 --> 00:21:09.610
if you, if you take
the time to dig in

385
00:21:09.610 --> 00:21:12.250
there and understand what's going
on, you can actually achieve

386
00:21:12.250 --> 00:21:15.570
some really nice results. Did
you get stuck in any

387
00:21:15.570 --> 00:21:17.340
places where it was just
like, it looks like WPF,

388
00:21:17.340 --> 00:21:22.680
just flat not going to
do this, You know, actually

389
00:21:22.680 --> 00:21:25.830
no, everything that I've been
able to dream up, I've

390
00:21:25.890 --> 00:21:31.140
been able to accomplish with
the framework. Yeah, I'll go

391
00:21:31.140 --> 00:21:33.150
ahead. I was just going
to say, I think, I

392
00:21:33.150 --> 00:21:35.470
mean, I think we, we,
the way we go in

393
00:21:35.500 --> 00:21:37.500
every project is a scene
that it can probably be

394
00:21:37.500 --> 00:21:41.310
done and then we'll kind
of work backwards, but, you

395
00:21:41.310 --> 00:21:42.960
know, for sure in terms
of, you know, how we

396
00:21:42.960 --> 00:21:45.750
use the framework, I don't
think it's that, you know,

397
00:21:45.930 --> 00:21:48.270
I don't think it's that
off the grid different than,

398
00:21:48.350 --> 00:21:51.360
than, than most people. I
think if anything, we're just

399
00:21:51.360 --> 00:21:54.510
leveraging the framework. I mean,
Microsoft always had this idea

400
00:21:54.510 --> 00:21:57.840
of liquid controls and it's
very easy to extend, you

401
00:21:57.840 --> 00:22:01.500
know, common behaviors and create
new controls or user controls.

402
00:22:03.000 --> 00:22:07.140
And certainly in terms of
bitmap effects and some of

403
00:22:07.140 --> 00:22:09.180
the new sort of motion
blurs, what have you. We

404
00:22:09.180 --> 00:22:12.000
definitely rely on those, but
you know, when, when we

405
00:22:12.000 --> 00:22:13.770
come to a place where
we want to do something

406
00:22:13.800 --> 00:22:16.710
a little more adventurous, you
know, say adjust the Chrome

407
00:22:16.710 --> 00:22:20.550
with the application, then I
think, you know, we're left

408
00:22:20.550 --> 00:22:25.710
to rely on other forms
of magic. Can I want

409
00:22:25.710 --> 00:22:27.840
to get back to the
technical details of that splash

410
00:22:27.840 --> 00:22:29.970
screen that I asked about
earlier, but before I get

411
00:22:29.970 --> 00:22:33.150
into that, I want to
ask another technical question. You

412
00:22:33.150 --> 00:22:35.070
know, you pick up this
list box with your mouse

413
00:22:35.070 --> 00:22:36.960
and you can, you can
throw it. You can, you

414
00:22:36.960 --> 00:22:39.360
can pick it up, you
can scroll up and down.

415
00:22:39.400 --> 00:22:40.890
I can grab it and
then I can toss it.

416
00:22:40.890 --> 00:22:43.110
And it'll, it'll float for
a little while before it

417
00:22:43.110 --> 00:22:45.300
kind of slows down. One
of the things that I

418
00:22:45.300 --> 00:22:48.150
thought was really subtle and
I, that I appreciated was,

419
00:22:48.300 --> 00:22:50.370
and I appreciate it because
I know that someone put

420
00:22:50.370 --> 00:22:52.500
work into it as opposed
to appreciating it, because it

421
00:22:52.500 --> 00:22:54.990
happened automatically is that if
you get all the way

422
00:22:55.710 --> 00:22:57.360
to the top of your
list of tweets and you

423
00:22:57.360 --> 00:23:00.390
pick it up and you
start dragging down, the, the

424
00:23:00.400 --> 00:23:02.760
list pulls down a little
bit, a couple of 'em,

425
00:23:02.790 --> 00:23:04.410
but it pulls down slower.
It's kind of trying to

426
00:23:04.410 --> 00:23:07.110
imply, sorry, dude. That's as
far as you can go,

427
00:23:07.440 --> 00:23:10.950
but if you keep yanking
on it, the application itself

428
00:23:10.950 --> 00:23:14.370
starts to pull down as
if it's like, really, man,

429
00:23:14.370 --> 00:23:16.830
you can't go any farther.
I'm I'm pulling as far

430
00:23:16.830 --> 00:23:18.420
as I can. And then
you let go and then

431
00:23:18.420 --> 00:23:22.380
it bounces back. You know,
somebody cared about that. How

432
00:23:22.380 --> 00:23:24.090
in the world did you
pull that off? Explain to

433
00:23:24.090 --> 00:23:27.900
me the technical background about
that particular thing, please. So

434
00:23:27.900 --> 00:23:31.860
that's, we, you know, we
kind of, we, we kind

435
00:23:31.860 --> 00:23:34.710
of went up windows seven
in that arena. I think,

436
00:23:36.000 --> 00:23:38.700
you know, it's because we
don't have to work on

437
00:23:38.700 --> 00:23:41.040
the no list to come
out with touch, to show

438
00:23:41.040 --> 00:23:42.690
that off, we can sort
of come in through the

439
00:23:42.690 --> 00:23:46.460
back door and get it
done quicker, but it's just

440
00:23:47.390 --> 00:23:51.110
it's functionality. That's built into
the, the layout engine that

441
00:23:51.530 --> 00:23:56.450
sits in our library. You
know, there's a, there's sort

442
00:23:56.450 --> 00:24:00.620
of a standard model that
the panel rendering engine uses,

443
00:24:00.620 --> 00:24:02.450
which is, you know, a
range override and a measure

444
00:24:02.450 --> 00:24:05.600
override. And you sort of
use this animation here to

445
00:24:05.900 --> 00:24:10.850
dynamically go between States. So
originally, Can you explain to

446
00:24:10.850 --> 00:24:12.880
our listeners, they may not
necessarily know what a twin,

447
00:24:13.870 --> 00:24:16.960
But what between the, between
the space of, let's say,

448
00:24:17.020 --> 00:24:21.310
like, for instance, let's say
you, you have a stack

449
00:24:21.310 --> 00:24:24.010
panel where things are stacked
horizontally and you go to

450
00:24:24.190 --> 00:24:29.200
a grid view, standard expectation
is that if you change

451
00:24:29.200 --> 00:24:30.910
the view, that all of
a sudden everything has sort

452
00:24:30.910 --> 00:24:34.960
of magically snaps into the
new place, right. Elements in

453
00:24:34.960 --> 00:24:38.200
the list, just magically change
the location. The idea is

454
00:24:38.200 --> 00:24:39.940
that it's very jarring for
the user. You want to

455
00:24:39.940 --> 00:24:42.280
provide some context. So it
would be nice if they

456
00:24:42.280 --> 00:24:46.060
animated from a horizontal layout
to a grid layout. So

457
00:24:46.060 --> 00:24:48.910
that, that would be handling
that tween of going from

458
00:24:48.910 --> 00:24:50.830
one way or another would
be, cause what I'm referring

459
00:24:50.830 --> 00:24:53.170
to when I say between,
Right? So in between is

460
00:24:53.170 --> 00:24:54.340
what that's for. And that's
one of the things that

461
00:24:54.640 --> 00:24:57.310
animators used to do. Like
if you go to Disney

462
00:24:57.310 --> 00:24:59.620
and you've got an animator
who is a, someone who

463
00:24:59.620 --> 00:25:02.890
animates by hand, you've got
your professional animator who draws

464
00:25:02.890 --> 00:25:05.230
the key frame where maybe
Mickey has Mickey mouse has

465
00:25:05.230 --> 00:25:07.390
his arm down. And then
the next key frame, he

466
00:25:07.390 --> 00:25:09.640
has his mouth. He has
his hand up rather, right.

467
00:25:09.880 --> 00:25:11.350
He has his hand down
his hand up, he writes

468
00:25:11.350 --> 00:25:12.880
those, he draws those two
key frames and then he

469
00:25:12.880 --> 00:25:17.440
passes it off to some,
some intern, some guy has

470
00:25:17.500 --> 00:25:19.960
hidden in the basement and
that guy writes all of

471
00:25:19.960 --> 00:25:22.780
the tweens. He says, get
Mickey's hand and move from

472
00:25:22.780 --> 00:25:25.930
here to there, work it
out. So you're basically saying

473
00:25:25.930 --> 00:25:29.440
you've written a library that
figures tweens out within WPF

474
00:25:29.440 --> 00:25:33.250
or uses the existing animation
library to do that. Yeah,

475
00:25:33.280 --> 00:25:35.920
well, in this case, the,
the intern that's sitting in

476
00:25:35.920 --> 00:25:39.010
the basement would just be
math. It's, you know, it's,

477
00:25:40.120 --> 00:25:42.460
it's, it's based on the
same math that the classic

478
00:25:42.580 --> 00:25:47.510
Robert pinner equations, you know,
from flash use that you,

479
00:25:47.510 --> 00:25:49.900
you basically just say, this
is where my item is

480
00:25:49.900 --> 00:25:52.300
right now. And this is
where it should be X

481
00:25:52.300 --> 00:25:54.400
amount of time from now
and apply some sort of

482
00:25:54.400 --> 00:25:58.540
mathematical equation to get them
there. And that's really what

483
00:25:58.540 --> 00:26:02.500
it all boils down to
anything from changing the orientation

484
00:26:02.500 --> 00:26:06.460
of the items to dragging
the items beyond their extent,

485
00:26:06.580 --> 00:26:10.330
and then slowly moving the
window itself. Huh. But you

486
00:26:10.330 --> 00:26:12.940
were, I was dragging the
list box inside the window

487
00:26:13.330 --> 00:26:16.540
and though the entire application,
the outer window kind of

488
00:26:17.050 --> 00:26:19.630
figured that out and decided
to move along too. We

489
00:26:19.630 --> 00:26:21.640
throwing events up to that
window for him to listen

490
00:26:21.640 --> 00:26:24.130
to him. No, no, that's
actually all built into the,

491
00:26:24.550 --> 00:26:28.060
the way out animal itself.
You can, you can The

492
00:26:28.060 --> 00:26:30.460
layout panel. So this was
a bubbled event. The layout

493
00:26:30.460 --> 00:26:33.070
panel knew that it was
being pulled too far. Yeah.

494
00:26:33.100 --> 00:26:37.120
Internally for direct manipulation. The
layout engine, you know, the

495
00:26:37.120 --> 00:26:40.870
panel itself is with receiving
those events. So it's sort

496
00:26:40.870 --> 00:26:44.040
of like the master controller.
And if it knows that

497
00:26:44.040 --> 00:26:46.740
it needs to move the
window, you know, it's easy

498
00:26:46.740 --> 00:26:49.500
enough. And, and WPF to
walk the visual tree here

499
00:26:49.530 --> 00:26:51.720
to walk the logical tree,
get a reference to the

500
00:26:51.720 --> 00:26:55.440
window and, you know, offset
it based on, based on

501
00:26:55.440 --> 00:26:59.070
some sort of mathematical equation.
And yeah, we, we definitely

502
00:26:59.130 --> 00:27:01.350
want, like, we really think
long and hard about these

503
00:27:01.350 --> 00:27:03.540
things. So we thought it
would be cool if, you

504
00:27:03.540 --> 00:27:06.630
know, initially the list sort
of starts resisting you, but

505
00:27:06.630 --> 00:27:09.690
then eventually the window stuff
that's resisting at the same

506
00:27:09.690 --> 00:27:12.180
time, we thought that would
be really nice. So we

507
00:27:12.180 --> 00:27:15.620
wrote, Yeah, it's a pretty,
it's a pretty slick, it's

508
00:27:15.620 --> 00:27:17.660
just, it's just one more
layer that layer of Polish

509
00:27:17.660 --> 00:27:20.600
I think is pretty cool.
Now how help me understand

510
00:27:20.600 --> 00:27:21.890
what we talked about at
the very beginning of the

511
00:27:21.890 --> 00:27:23.960
show, when I was asking
you about this, this opening

512
00:27:23.960 --> 00:27:27.490
animation, I mean, is it
just a movie or what's,

513
00:27:27.490 --> 00:27:30.950
what's going on there? It's
a, it's a series of

514
00:27:30.950 --> 00:27:37.100
the, the same sequences laid
over each other. So yeah,

515
00:27:37.160 --> 00:27:39.440
You're saying that it's, it's
a bunch of PNG, a

516
00:27:39.440 --> 00:27:41.780
bunch of PNGs, or you
guys call them pings that

517
00:27:41.780 --> 00:27:44.150
are just laid over. So
it's a poor man's movie.

518
00:27:44.660 --> 00:27:47.000
Okay. Like how alluded to
he, you know, he built

519
00:27:47.000 --> 00:27:50.960
out this, this reference animation
for us to show what

520
00:27:50.970 --> 00:27:55.040
his ideal was for this
startup and shutdown. So I

521
00:27:55.040 --> 00:27:58.700
said, okay, yeah, let's do
this. Ideally, you know, take

522
00:27:58.700 --> 00:28:01.940
me out a sequence of
the window itself and then

523
00:28:01.940 --> 00:28:04.790
bake me out a sequence
of the blue bird, you

524
00:28:04.790 --> 00:28:06.890
know, coming in with the
particle effects. And then I,

525
00:28:07.000 --> 00:28:10.760
I will use, you know,
our library to load up

526
00:28:10.760 --> 00:28:15.350
these sequences and then control
them. Our image sequence class

527
00:28:15.350 --> 00:28:18.020
happens to, you know, it
counts its frames and fires

528
00:28:18.020 --> 00:28:20.150
events on those frames so
that you can sort of

529
00:28:20.150 --> 00:28:25.940
time things correctly so that
you can overlay animations based

530
00:28:25.940 --> 00:28:28.880
on events. So I knew
that at a certain frame

531
00:28:28.880 --> 00:28:32.570
of the window growing, I
could fire off the, the

532
00:28:32.570 --> 00:28:36.620
bird animation. And then when
the Verde animation completes, I

533
00:28:36.620 --> 00:28:37.970
know that I can fade
in the rest of the

534
00:28:37.970 --> 00:28:40.790
UI elements. So yeah, that's,
that's, that's the way that

535
00:28:40.790 --> 00:28:43.880
we achieve all of the
nice, smooth transitions from one

536
00:28:43.880 --> 00:28:48.320
state to the next. So
this is because you can't

537
00:28:48.320 --> 00:28:51.740
do transparent movies because you
keep saying image sequence and

538
00:28:51.740 --> 00:28:53.870
I keep thinking moving, and
I'm thinking, is there a

539
00:28:53.870 --> 00:28:57.260
transparent Avi or transparent QuickTime
or some kind of transparent

540
00:28:57.260 --> 00:29:00.110
thing? And this thing is
this animation is about three

541
00:29:00.110 --> 00:29:03.050
seconds long. What does that?
50 or 60 PNGs? Yeah,

542
00:29:03.050 --> 00:29:06.280
it's a pretty, it's a
pretty large theme sequence. And

543
00:29:06.290 --> 00:29:12.410
we've definitely been deemed for
our, our memory. And we've,

544
00:29:12.410 --> 00:29:15.380
we've been working with some
guys from Microsoft to, you

545
00:29:15.380 --> 00:29:18.060
know, sort of streamline that.
And one of the guys

546
00:29:18.470 --> 00:29:22.190
went in and made a,
made an avionics for me

547
00:29:22.250 --> 00:29:27.380
and then used that to
sort of clerk the unwanted

548
00:29:27.380 --> 00:29:35.620
portions to make me, which
is great. Great test. That

549
00:29:35.660 --> 00:29:41.230
was back when the.net framework
though, just for a take

550
00:29:41.230 --> 00:29:46.210
a really long time. So
we've, we've kind of just

551
00:29:46.990 --> 00:29:51.390
had said, you can actually
print by, you know, the

552
00:29:51.390 --> 00:29:54.970
garbage collecting sequence after we
get done with it or

553
00:29:56.160 --> 00:30:00.090
we need it. Correct. Cause
my memory usage right now

554
00:30:00.090 --> 00:30:02.820
on this particular thing is
160 megs. Yeah. And you're

555
00:30:02.820 --> 00:30:05.490
saying that, that, that, that
ping sequence, I don't know

556
00:30:05.490 --> 00:30:07.260
if I can get used
to saying ping, you know,

557
00:30:07.260 --> 00:30:11.250
the whole gift Jeff controversy
of the early nineties. Yeah.

558
00:30:11.280 --> 00:30:13.470
I don't respect people who
say, Jeff, I just want

559
00:30:13.470 --> 00:30:15.000
to let you that the
missioners know that if they

560
00:30:15.000 --> 00:30:19.140
say Jeff and I don't
want their business Sort of

561
00:30:19.140 --> 00:30:21.060
like, you know, the whole
quick thing where you either

562
00:30:21.330 --> 00:30:27.030
get somewhere to get somewhere.
So you were saying that

563
00:30:27.030 --> 00:30:29.700
some chunk of that is,
is that, is that sequence

564
00:30:29.700 --> 00:30:31.350
of images that may not
have been let go of.

565
00:30:31.410 --> 00:30:34.080
Right, right. Yeah. Like, yeah,
like Doug said, you know,

566
00:30:34.110 --> 00:30:36.930
we released this to the
lab. We weren't really concerned

567
00:30:36.930 --> 00:30:39.630
about memory footprint or anything
like that. But once we

568
00:30:39.630 --> 00:30:41.910
found out that people actually
wanting to use this product

569
00:30:42.300 --> 00:30:45.240
as a product and not
just the lab, People actually

570
00:30:45.240 --> 00:30:48.510
wanted to use the Twitter
client. Right. Well, you know,

571
00:30:48.570 --> 00:30:51.060
it was a lab. We
didn't, we weren't expecting people

572
00:30:51.060 --> 00:30:52.770
to just want to adopt
it and use it on

573
00:30:52.770 --> 00:30:54.930
a regular basis. But now
that we see that it's

574
00:30:54.930 --> 00:30:57.630
viable, we're definitely going back
and trying to address some

575
00:30:57.630 --> 00:31:00.240
of these issues. So in
the building I'm working on

576
00:31:00.240 --> 00:31:05.250
now, it wants the one
set sequence gets garbage, collected

577
00:31:05.330 --> 00:31:07.590
it reclaims or frees up
a whole lot of memory.

578
00:31:08.430 --> 00:31:10.890
It seems to vary based
on computer and based on

579
00:31:10.890 --> 00:31:15.870
hardware and video drivers. I
know how's machine blue runs

580
00:31:15.870 --> 00:31:20.430
it at 30 megs at
a 30 minutes, very consistently

581
00:31:20.880 --> 00:31:23.400
on my machine when it
starts up, it's in, it's

582
00:31:23.400 --> 00:31:26.880
about 120 minutes, but then
once the garbage collection kicks

583
00:31:26.880 --> 00:31:31.710
in, it drops down to
about 70 or 80. We

584
00:31:31.710 --> 00:31:33.480
have a couple other guys
who are using it. And

585
00:31:33.480 --> 00:31:36.630
it seems to, you know,
seem to vary anywhere between

586
00:31:36.630 --> 00:31:39.000
80 megs to 60 megs.
I think it has something

587
00:31:39.000 --> 00:31:41.400
to do with video cards
because I'm running at a

588
00:31:41.400 --> 00:31:45.360
220 make working set right
now. Interesting. Now, one of

589
00:31:45.360 --> 00:31:47.010
the things that people first
noticed when they look at

590
00:31:47.010 --> 00:31:49.020
it, not only is that
it pretty, but it doesn't

591
00:31:49.020 --> 00:31:52.170
resize. How much of a
problem is that going to

592
00:31:52.170 --> 00:31:54.450
be with the way that
you've laid things out using?

593
00:31:54.750 --> 00:31:57.570
I mean, I'm using a
lot of these PNGs and

594
00:31:57.570 --> 00:31:59.910
when I did my application,
people said, well, you know,

595
00:31:59.910 --> 00:32:01.920
this isn't going to scale.
It won't look good at

596
00:32:01.920 --> 00:32:04.950
high, you know, large fonts,
you know, the more rasters

597
00:32:04.950 --> 00:32:07.230
that you use and the
fewer vectors, the more you're

598
00:32:07.230 --> 00:32:09.600
going to paint yourself in
the corner. Is there a

599
00:32:09.810 --> 00:32:11.700
problem with that with the
resizing or is that not

600
00:32:11.700 --> 00:32:17.310
really Well? We, so we,
in a future rev, we're

601
00:32:17.310 --> 00:32:21.570
definitely going to add in
vertical resizing and that it's

602
00:32:21.570 --> 00:32:25.290
not an issue with the
restroom images. You can, you

603
00:32:25.290 --> 00:32:27.150
know, you can do it
a nine grade or you,

604
00:32:27.160 --> 00:32:29.010
you know, you can chop
her images up so that

605
00:32:29.400 --> 00:32:33.510
you can make them scalable.
So we are going to

606
00:32:33.510 --> 00:32:37.260
make the vertically side of
the, we making it horizontally

607
00:32:37.260 --> 00:32:41.120
and vertically sizable we'll introduce.
And yet again, since we,

608
00:32:41.120 --> 00:32:44.570
you know, we were going
for very specific look, we,

609
00:32:44.570 --> 00:32:46.460
you know, we didn't, we
had never really planned to

610
00:32:46.460 --> 00:32:48.650
make the app sizable, but
again, since people want to

611
00:32:48.650 --> 00:32:51.440
use it already, like if
this were, we definitely want

612
00:32:51.440 --> 00:32:54.630
to afford some of that
functionality in there. Yeah. I

613
00:32:54.640 --> 00:32:56.500
mean, I'm looking at it
next sitting and looking at

614
00:32:56.740 --> 00:32:59.530
my running instance of blue
next to my running instance

615
00:32:59.530 --> 00:33:02.140
of tweet deck. And I'm
wishing I could make multiple

616
00:33:02.140 --> 00:33:04.930
columns and blue. And I
think you could dethrone tweet

617
00:33:04.930 --> 00:33:07.150
deck as the power user
or the power of Twitter

618
00:33:07.150 --> 00:33:10.720
users, a client of choice.
If you look to them

619
00:33:10.720 --> 00:33:14.170
for your inspiration. Yeah. I
mean, tweak the Kansas place,

620
00:33:15.100 --> 00:33:17.920
but in the experience that
we were trying to convey

621
00:33:18.490 --> 00:33:21.070
or our Twitter experience, or
at least my own, I'm

622
00:33:21.070 --> 00:33:22.990
not gonna speak for the
guys. Twitter to me is

623
00:33:22.990 --> 00:33:25.330
more like an ambient stream
of my friends. Just kind

624
00:33:25.330 --> 00:33:28.600
of saying, Hey, check this
out. So, you know, I

625
00:33:28.600 --> 00:33:33.040
don't need to have like,
just, just a console, just

626
00:33:33.040 --> 00:33:34.810
like I need to keep
track of all my tweets

627
00:33:34.870 --> 00:33:36.910
at all times. And here's
this it's like, no, no,

628
00:33:36.910 --> 00:33:40.180
no, no. Cause that's more
stress I see. So blue

629
00:33:40.180 --> 00:33:43.840
is not for the uptight
inner retentive tweeter like myself.

630
00:33:44.890 --> 00:33:47.650
Well, I mean, it definitely
has an audience in the

631
00:33:47.650 --> 00:33:50.560
sense that, you know, it's
just an ambient experience. It

632
00:33:50.560 --> 00:33:52.810
was on your desktop and
it just, it does its

633
00:33:52.810 --> 00:33:55.240
thing, you know, it grabs
tweet. And then if you

634
00:33:55.240 --> 00:33:56.920
happen to look at it,
the bird might, you know,

635
00:33:56.920 --> 00:34:00.130
the Bluebird might fly between
for you. So give me

636
00:34:00.130 --> 00:34:02.920
some, do you have any
stories or anything crazy that

637
00:34:02.920 --> 00:34:05.230
you had to deal with?
Any, any debugging issues? I

638
00:34:05.230 --> 00:34:06.790
mean, you said that you're
working on the working set

639
00:34:06.790 --> 00:34:09.160
right now, but if you
have you run into anything

640
00:34:09.580 --> 00:34:12.040
that, that really kind of
kicked your ass for a

641
00:34:12.040 --> 00:34:14.380
couple of a couple hours
or a couple of days,

642
00:34:14.380 --> 00:34:15.880
and then figured it out
and kind of had that

643
00:34:16.210 --> 00:34:18.880
slap the forehead moment when
you were working with the

644
00:34:18.880 --> 00:34:22.600
dotnet and deputy, I think
right now that the, the

645
00:34:22.600 --> 00:34:25.030
definitely the thing that's been
most surprising is that the

646
00:34:25.030 --> 00:34:28.420
huge variation in the working
set based on just using

647
00:34:28.450 --> 00:34:31.510
team sequences, that's the thing
that's right now it's proving

648
00:34:31.730 --> 00:34:34.900
to be the hardest to
get a handle around just

649
00:34:34.900 --> 00:34:39.970
because hardware configurations seem to
affect that. So greatly the

650
00:34:39.970 --> 00:34:42.760
Twitter, the Twitter client itself
is really, you know, it's

651
00:34:42.760 --> 00:34:47.740
relatively simple model. So I
didn't really encounter too many

652
00:34:47.740 --> 00:34:52.450
issues there other than just
standard, you know, stupid smack

653
00:34:52.450 --> 00:34:54.550
yourself and forehead mistakes like
for getting a semi colon

654
00:34:54.550 --> 00:34:56.830
every now and then, or
forgetting to you are all

655
00:34:56.830 --> 00:35:00.370
in code. My, my URL
before I send it off

656
00:35:00.370 --> 00:35:04.270
to the tiny URL service
will actually create an idiot

657
00:35:04.270 --> 00:35:07.770
of myself and actually contacted
the guys at tiny girls

658
00:35:07.770 --> 00:35:10.000
saying, look, I'm for some
reason, this isn't parsing, right.

659
00:35:10.720 --> 00:35:13.300
He emailed me back saying,
you need to URL, URL,

660
00:35:13.300 --> 00:35:16.000
encoder your stuff before you
send it to us. And

661
00:35:16.000 --> 00:35:19.540
I just was like, Oh
man, such an idiot. You've

662
00:35:19.540 --> 00:35:22.420
burned your bridges with those
guys. They'll never, they'll never

663
00:35:22.420 --> 00:35:24.310
respect you again. I hate
it when I do stuff

664
00:35:24.310 --> 00:35:26.440
like that. Yeah. But other
than that, you know, there

665
00:35:26.440 --> 00:35:30.460
were, there weren't really too
many, too many hurdles. The

666
00:35:30.460 --> 00:35:34.120
hurdles came and, you know,
writing the libraries really, and

667
00:35:34.120 --> 00:35:36.400
just trying to get them
to figure out how virtualization

668
00:35:36.400 --> 00:35:39.560
is supposed to work and
things like that, where the,

669
00:35:39.560 --> 00:35:42.690
where the real, real tough
nut to crack. I think,

670
00:35:42.690 --> 00:35:45.690
I think one other thing,
which is probably not completely

671
00:35:45.690 --> 00:35:49.530
related, but certainly something we've
run into with our clients.

672
00:35:49.530 --> 00:35:51.060
And there's a reason when
you go to the site,

673
00:35:51.480 --> 00:35:54.060
you know, it says the
Vista Twitter client, even though

674
00:35:54.090 --> 00:35:56.940
if you had three to
five SP one and XD,

675
00:35:57.610 --> 00:36:01.890
you should be able to
run blue. But the main

676
00:36:01.890 --> 00:36:06.510
problem being that the install
times and some installation experience

677
00:36:06.510 --> 00:36:11.430
around installing three to five
<inaudible> and say XP where

678
00:36:11.430 --> 00:36:14.070
the installer seems to just
kind of hang at 40%

679
00:36:14.610 --> 00:36:17.340
and then whatnot. I think
that's awesome. Kind of a

680
00:36:17.340 --> 00:36:21.540
major sort of hurdle, not
so much on this project,

681
00:36:21.540 --> 00:36:24.080
but certainly on other projects.
Now you guys know that

682
00:36:24.080 --> 00:36:26.750
the three, five SP one
framework is rolling out on

683
00:36:26.750 --> 00:36:30.080
windows update. Now, so soon
everyone who's got update, we'll

684
00:36:30.080 --> 00:36:33.620
start to see windows three-five
SP one, just show up

685
00:36:33.620 --> 00:36:35.930
on their machine. So that
should make your installation experience

686
00:36:35.930 --> 00:36:38.690
a lot better. Yeah, definitely.
I was kind of hoping

687
00:36:38.690 --> 00:36:42.740
you'd have some horde story
about how WPF just kicked

688
00:36:42.740 --> 00:36:44.870
your ass or something. It
didn't work. Yeah. Well, once

689
00:36:44.870 --> 00:36:48.200
you've spent a few years
with the framework, you realize

690
00:36:48.200 --> 00:36:52.130
it's really, it's pretty well
designed. It's, it's really nicely

691
00:36:52.130 --> 00:36:56.540
flexible and you know, it's
like any tool, you gotta

692
00:36:56.540 --> 00:36:59.180
have a hand that touches
the tool to use it,

693
00:36:59.240 --> 00:37:01.880
the thing for it, but
you spent some time with

694
00:37:01.880 --> 00:37:03.650
it and you realize it's
actually WTF is really pretty

695
00:37:03.650 --> 00:37:09.860
nice. It's so incredibly easy
to do really high familiar

696
00:37:09.860 --> 00:37:12.980
animations and plugging into stuff
that, you know, from your

697
00:37:12.980 --> 00:37:15.530
flash Ks and plug in
the stuff from here three

698
00:37:15.530 --> 00:37:18.080
days. So, Well see now
you've, you you've ruined my

699
00:37:18.080 --> 00:37:19.970
plan for the talk. I
try to make the show,

700
00:37:19.970 --> 00:37:23.660
not a, a Microsoft love
Fest. I don't want it

701
00:37:23.660 --> 00:37:25.460
to be like this big
sycophant thing where we all

702
00:37:25.460 --> 00:37:27.740
sit around talking about how
awesome stuff is. So I

703
00:37:27.740 --> 00:37:29.360
was hoping you were going
to have some kind of

704
00:37:29.780 --> 00:37:32.000
a, you know, horrific thing
where you wasted a week

705
00:37:32.000 --> 00:37:34.130
because you were fighting. We
we've deemed it on, you

706
00:37:34.130 --> 00:37:36.950
know, sort of the whole
<inaudible> thing. And I think

707
00:37:36.950 --> 00:37:39.740
the high working set, you
know, I don't personally think

708
00:37:39.740 --> 00:37:41.720
that I'm doing anything if
it was really crazy in

709
00:37:41.720 --> 00:37:43.880
my code to cause it
to jump up to 200

710
00:37:43.880 --> 00:37:46.220
megs. And when you can
see the front of, or

711
00:37:46.220 --> 00:37:47.810
made it on one machine
and then 30 mics on

712
00:37:47.810 --> 00:37:51.950
another, you know, that's a
little frustrating, but the, you

713
00:37:51.950 --> 00:37:53.960
know, these are largely things
that seem to be really

714
00:37:54.110 --> 00:37:56.720
inside the guts of the
framework itself. Yeah. I think

715
00:37:56.720 --> 00:37:58.220
it has something to do.
I mean, I'm guessing here,

716
00:37:58.220 --> 00:37:59.750
I think it probably has
something to do with texture

717
00:37:59.750 --> 00:38:02.420
memory and what kind of
video card you have and

718
00:38:02.420 --> 00:38:05.990
whether or not the, the,
the renderer can get these

719
00:38:05.990 --> 00:38:08.360
things out into the video
card and out of, out

720
00:38:08.360 --> 00:38:09.500
of memory. But you know,
the thing to do would

721
00:38:09.500 --> 00:38:12.050
be to just go on
a task manager, right? Click

722
00:38:12.050 --> 00:38:15.800
on blue dot exe and
say, create, dump, and go,

723
00:38:15.800 --> 00:38:17.690
looking around a memory and
see what's there. You know,

724
00:38:17.870 --> 00:38:20.630
there's lots of dotnet memory
visualizers. That'll let you just

725
00:38:20.630 --> 00:38:22.880
take a snapshot of exactly
what's on the heap and

726
00:38:22.880 --> 00:38:24.620
poke around and you'll see
what they are. It would

727
00:38:24.620 --> 00:38:27.730
take no time. We should
do a show on that.

728
00:38:27.780 --> 00:38:30.740
We should just take apart
this thing. Runtime. If you

729
00:38:30.740 --> 00:38:32.180
gave me the symbols, I
might do it right now.

730
00:38:35.260 --> 00:38:37.690
Cool. Well, I appreciate you
taking the time to chat

731
00:38:37.690 --> 00:38:39.640
with me today. I think
that, that Blue's got a

732
00:38:39.640 --> 00:38:41.950
lot of potential and I
think that, you know, even

733
00:38:41.950 --> 00:38:44.590
be really interesting to see
if you could port it

734
00:38:44.590 --> 00:38:46.420
to Silverlight and how much
trouble you would have to

735
00:38:46.420 --> 00:38:50.890
see how different WPF is
versus a versus Silverlight. And,

736
00:38:51.670 --> 00:38:53.380
you know, most people say,
if you want to learn

737
00:38:53.380 --> 00:38:57.340
Jamel and WPF, they say,
learn Silverlight first and then

738
00:38:57.340 --> 00:39:01.390
go up to the WPF.
Cause you have more, you

739
00:39:01.390 --> 00:39:02.920
know, have more power. You
have a super set of

740
00:39:02.920 --> 00:39:05.650
XAML. I'd be interesting to
see what would happen if

741
00:39:05.920 --> 00:39:10.900
someone tried to port downward
port from a big application

742
00:39:10.900 --> 00:39:14.610
like this into something on
the web. Yeah. We don't

743
00:39:14.610 --> 00:39:18.240
have any immediately immediate plans
to do that. But I

744
00:39:18.240 --> 00:39:20.670
think right now we're definitely
focused on actually just adding

745
00:39:20.670 --> 00:39:23.790
more features to the Boulevard
and blue, you know, such

746
00:39:23.790 --> 00:39:26.460
as replies view and making
it resizable things like that

747
00:39:26.460 --> 00:39:29.610
search functionality, but you know,
that, that might be an

748
00:39:29.610 --> 00:39:34.380
interesting, interesting experience for experiment.
Have you guys thought about

749
00:39:34.380 --> 00:39:36.000
how you're going to update
it? Because I assume you're

750
00:39:36.000 --> 00:39:38.850
going to, if it becomes
a popular thing and most

751
00:39:38.850 --> 00:39:40.650
Twitter clients update, you know,
a couple of times a

752
00:39:40.650 --> 00:39:43.170
month, are you going to
have people run the setup

753
00:39:43.170 --> 00:39:44.880
program again, you're going to
switch it to click once.

754
00:39:44.940 --> 00:39:47.490
No, it's, it's actually deployed
as quick once right now.

755
00:39:47.730 --> 00:39:51.450
So a tiny startup blue,
there's an update. It should

756
00:39:51.450 --> 00:39:54.000
pull it down for you.
As a matter of fact,

757
00:39:54.000 --> 00:39:56.490
you know, we just, we
just released the update that

758
00:39:56.490 --> 00:39:59.550
had the tiny URL integration,
and we've got another update

759
00:39:59.550 --> 00:40:02.610
that we're gonna push out
fairly soon, maybe the end

760
00:40:02.610 --> 00:40:05.040
of the week. That will
be mainly our bug tweet,

761
00:40:05.100 --> 00:40:08.610
but sixes and you know,
maybe in a smaller memory

762
00:40:08.610 --> 00:40:12.030
footprint, but yeah. Any, any
updates to blue should come

763
00:40:12.030 --> 00:40:15.360
down to you automatically? No,
I didn't notice it at

764
00:40:15.360 --> 00:40:18.600
all. You're doing custom custom
progress and you're bringing the

765
00:40:18.600 --> 00:40:22.860
updates down in the back.
Yeah, exactly. Yeah. Visual studio.

766
00:40:22.860 --> 00:40:24.750
You can, you can go
in there and specify, you

767
00:40:24.750 --> 00:40:26.700
know, how you want your
quick ones updates to happen.

768
00:40:26.700 --> 00:40:28.830
So Cool. That's great. I
like, I liked it. I

769
00:40:29.010 --> 00:40:31.080
really surprised I did it.
Doesn't smell like click once

770
00:40:31.080 --> 00:40:35.580
application. I mean, that is
a compliment. I mean, I

771
00:40:35.580 --> 00:40:37.890
have a little tiny application.
That's not nearly sophisticated called

772
00:40:37.890 --> 00:40:41.730
baby smash that, that I've,
I've gone back and forth

773
00:40:41.730 --> 00:40:42.960
about how I want it
to behave as a click

774
00:40:42.960 --> 00:40:45.750
once client. And this is
interesting. Are you guys planning

775
00:40:45.750 --> 00:40:47.430
on starting a blog and
starting to spread some of

776
00:40:47.430 --> 00:40:49.230
this information? Are you gonna
keep all this good stuff

777
00:40:49.230 --> 00:40:51.480
secret? That's a good question.
We have a couple of

778
00:40:51.480 --> 00:40:57.360
Twitter feeds right now, specifically
to the application, but yeah,

779
00:40:57.360 --> 00:40:59.260
I mean, I think in
the future, I think we're,

780
00:40:59.260 --> 00:41:03.090
we're always tending to do
some sort of internal exploration

781
00:41:03.090 --> 00:41:07.380
around touch or whether it
be WPS clients or whatnot.

782
00:41:07.530 --> 00:41:09.870
And I think, you know,
maybe in the future, I

783
00:41:09.870 --> 00:41:11.700
think it would be fun
to kind of show we

784
00:41:11.700 --> 00:41:13.980
have thought about just kind
of showing the process over

785
00:41:13.980 --> 00:41:16.800
time. Like a lot of
people see the end result,

786
00:41:16.800 --> 00:41:19.890
but they don't necessarily see,
you know, all the iterations

787
00:41:20.400 --> 00:41:23.130
and all the work that
goes in it from proof

788
00:41:23.130 --> 00:41:26.070
of concept all the way
through to, you know, something

789
00:41:26.070 --> 00:41:28.890
where you can actually click
and download the application. And

790
00:41:28.890 --> 00:41:31.200
I think we have thought
about, you know, showing more

791
00:41:31.200 --> 00:41:36.020
of that process online in
some form. Yeah. I think

792
00:41:36.040 --> 00:41:38.240
there's been some talk of
maybe as cooking up some

793
00:41:38.240 --> 00:41:43.420
code to show off. I
think that when, when people

794
00:41:43.420 --> 00:41:47.500
suffer and they build libraries
and they, you know, at

795
00:41:47.500 --> 00:41:49.660
some point you decide whether
that's intellectual property, you want

796
00:41:49.660 --> 00:41:51.220
to be bad and that's
a thing that keeps your

797
00:41:51.220 --> 00:41:53.800
business going, or whether you
want to spread the love

798
00:41:53.860 --> 00:41:56.770
and, and, and not make
that library a part of

799
00:41:56.770 --> 00:41:59.140
your kind of internal IP.
And I think you can

800
00:41:59.140 --> 00:42:01.060
find a balance. Yeah. I'd
love to show some of

801
00:42:01.060 --> 00:42:03.640
the stuff that you're doing
next. So this is, this

802
00:42:03.640 --> 00:42:05.170
is, this has been cool.
I appreciate you taking the

803
00:42:05.170 --> 00:42:10.870
time. Alright. This has been
another episode of Hansel minutes

804
00:42:11.350 --> 00:42:12.670
and I'll see you again
next week.

