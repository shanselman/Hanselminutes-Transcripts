WEBVTT FILE

1
00:00:00.900 --> 00:00:04.020
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:04.020 --> 00:00:07.320
they make the show possible.
Today's show is sponsored by

3
00:00:07.320 --> 00:00:11.610
Tellerik create compelling app experiences
across any screen with the

4
00:00:11.610 --> 00:00:16.470
Tellerik platform Telerx end to
end platform. Uniquely combines industry

5
00:00:16.470 --> 00:00:20.160
leading UI tools with cloud
services to simplify the entire

6
00:00:20.160 --> 00:00:24.630
app development cycle Tellerik offers
everything.net developers need to build

7
00:00:24.630 --> 00:00:34.050
quality apps faster. Try it
free at tellerik.com/platform that's tellerik.com/platform

8
00:00:47.610 --> 00:00:53.310
from hanselminutes.com it's Hansel minutes
while weekly discussion with web

9
00:00:53.310 --> 00:00:58.380
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

10
00:00:58.380 --> 00:01:02.760
number four 53. In this
episode, Scott talks with award-winning

11
00:01:02.760 --> 00:01:06.570
animator, Rachel neighbors about the
current state of web animation.

12
00:01:10.440 --> 00:01:12.330
Hi, this is Scott Hanselman.
This is another episode of

13
00:01:12.330 --> 00:01:15.390
Hansel minutes, and I'm talking
with animations expert, Rachel Nabors.

14
00:01:15.390 --> 00:01:17.730
Hi. Hi Scott. How are
you today? I am very

15
00:01:17.730 --> 00:01:19.080
well. And so happy to
be talking to you in

16
00:01:19.080 --> 00:01:23.000
our home of Portland, Oregon,
Portland, the dream of the

17
00:01:23.000 --> 00:01:25.040
nineties is alive and well
here. It's true where young

18
00:01:25.040 --> 00:01:27.890
people go to retire. I
don't feel like I've retired

19
00:01:27.890 --> 00:01:29.750
yet, but maybe one day.
Well, you're doing some amazing

20
00:01:29.750 --> 00:01:32.150
stuff. You've got kind of
an animation think tank going

21
00:01:32.150 --> 00:01:34.670
on here in Portland. It's
true. I actually moved to

22
00:01:34.670 --> 00:01:39.170
Portland to start my company
tin magpie, which basically when

23
00:01:39.170 --> 00:01:40.850
I started it, I said,
I want to do something

24
00:01:40.850 --> 00:01:44.000
that involves animation all the
time. Cause I'm kind of

25
00:01:44.000 --> 00:01:47.260
a web animations wank. And
once I fell in love

26
00:01:47.300 --> 00:01:49.520
started seeing the specs that
were coming out in the

27
00:01:49.520 --> 00:01:52.280
night lease. I just couldn't
keep away from it. I

28
00:01:52.280 --> 00:01:55.190
started back in comics way
back in the day and

29
00:01:55.190 --> 00:01:57.110
ended up in web comics,
which ended up in web

30
00:01:57.110 --> 00:01:59.780
design, which ended up in
front end development. And now

31
00:01:59.780 --> 00:02:02.990
I'm here with animation. I've
been here, there and everywhere,

32
00:02:03.350 --> 00:02:05.030
and I've learned so much
over the years. It's time

33
00:02:05.030 --> 00:02:07.430
to start sharing When you've
been doing animation for like,

34
00:02:07.520 --> 00:02:09.470
you know, 15 years. I
mean, I've done a couple

35
00:02:09.470 --> 00:02:11.960
of code pens and I've
played around with animation, but

36
00:02:11.990 --> 00:02:14.480
you've got a decade and
a half of experience in

37
00:02:14.480 --> 00:02:17.390
this space. Well, it's true.
I started out actually in

38
00:02:17.570 --> 00:02:22.400
comics, making cartoons and I
had a very popular weekly

39
00:02:22.400 --> 00:02:25.130
cartoon amongst teenage girls right
up until I quit the

40
00:02:25.130 --> 00:02:28.190
industry in 2007, 2008, I
won an award. And the

41
00:02:28.190 --> 00:02:30.110
first thing I did was
like, I'm changing industries. I'm

42
00:02:30.110 --> 00:02:33.050
going to web development. See
you guys later. Bye. I

43
00:02:33.050 --> 00:02:36.170
feel like such a bad
person for doing that. Sometimes

44
00:02:36.170 --> 00:02:37.460
award winning, you know, as
soon as I get my

45
00:02:37.460 --> 00:02:39.500
Oscar, I'll be like, I'm
done acting. I made my

46
00:02:39.500 --> 00:02:45.260
point, Oh my God, Scott,
you better never stop acting.

47
00:02:45.440 --> 00:02:47.990
I want, I want to
be like Whoopi Goldberg, like

48
00:02:47.990 --> 00:02:49.400
just get one of each,
what is it called? The

49
00:02:49.400 --> 00:02:52.580
EGOT, Emmy, Grammy, Oscar, Tony,
and then just quit the

50
00:02:52.580 --> 00:02:55.610
industry and just say, I
win. Yeah, screw you guys.

51
00:02:55.730 --> 00:02:57.820
Go do what I want.
So you're doing, you're doing

52
00:02:57.840 --> 00:03:00.640
animation. And you just mentioned
nightlys when you say nightlys,

53
00:03:00.640 --> 00:03:02.950
you're talking about nightly bills
of browsers as we put

54
00:03:02.950 --> 00:03:05.700
new features in. Yes. And
even do you know, just

55
00:03:05.700 --> 00:03:07.740
some of the things like
with CSS, animations that are

56
00:03:07.740 --> 00:03:12.810
hidden behind vendor prefixes back
in the day, CSS animations

57
00:03:12.840 --> 00:03:17.520
are sometimes only available behind
a nightly builds or now

58
00:03:18.750 --> 00:03:21.240
on a few browsers, you
can use them every day

59
00:03:21.600 --> 00:03:26.760
using a vendor prefix, specifically
iOS Safari store requires WebKit.

60
00:03:28.200 --> 00:03:32.070
So these things are not,
not all of them quite

61
00:03:32.070 --> 00:03:35.250
so esoteric, but when it
comes to one animation tool

62
00:03:35.250 --> 00:03:38.730
in particular, the web animations
API, it's still very much,

63
00:03:38.760 --> 00:03:41.130
most of its best features
are coming out in nightly

64
00:03:41.130 --> 00:03:45.720
builds of Firefox and Chrome.
It's there are some pieces

65
00:03:45.720 --> 00:03:48.180
that you can use in
production, but it's still very

66
00:03:48.180 --> 00:03:51.060
much How many different, like
if I think about the

67
00:03:51.060 --> 00:03:54.210
web as platform, how many
different animation APIs are there?

68
00:03:54.210 --> 00:03:56.790
Cause when you say web
animations API, I'm not sure

69
00:03:56.790 --> 00:03:59.330
I understand that as it
relates to CSS animation, The

70
00:03:59.340 --> 00:04:02.700
one API to rule them
all. So have you heard

71
00:04:02.700 --> 00:04:07.500
of smile? SMI? I have
heard of it. So smile

72
00:04:07.500 --> 00:04:13.500
is a language for manipulating
SVG, right? Right. And CSS

73
00:04:13.530 --> 00:04:17.970
is a declarative language for
manipulating Dom elements, right? And

74
00:04:17.970 --> 00:04:21.570
sometimes SVG cause SVG is
done elements true. Now the

75
00:04:21.570 --> 00:04:25.980
web animations API actually as
an API for manipulating the

76
00:04:25.980 --> 00:04:30.390
rendering engine that performs both
of those animations. So CSS

77
00:04:30.390 --> 00:04:34.560
animations built on the web
animations, API CSS transitions built

78
00:04:34.560 --> 00:04:38.010
on the web animations API.
That's true now. Well, it's

79
00:04:38.010 --> 00:04:42.360
going to be true very
soon. It, this, the API

80
00:04:42.360 --> 00:04:45.840
is still being implemented in
like for instance, I believe

81
00:04:45.870 --> 00:04:48.240
that's true in Chrome and
it's starting to be true

82
00:04:48.240 --> 00:04:51.870
in Firefox. You know, don't,
don't paraphrase me here. People

83
00:04:51.870 --> 00:04:55.800
go out, do your own
research. But when it comes

84
00:04:55.800 --> 00:04:58.950
to things like internet Explorer
and Safari, they have no

85
00:04:58.950 --> 00:05:04.020
support for the, the API.
So transitions, smile, animations, all

86
00:05:04.020 --> 00:05:07.290
of those have their own
separate little modules running their,

87
00:05:07.290 --> 00:05:10.290
their animations. They're not United
under this one API yet.

88
00:05:10.530 --> 00:05:13.620
So is the idea to,
like you just said unite

89
00:05:13.650 --> 00:05:15.540
all of these APIs, and
this is the middle layer.

90
00:05:15.540 --> 00:05:17.820
You said that CSS animations
would be built on top

91
00:05:17.820 --> 00:05:20.400
of this. So it's almost
like as open GL is

92
00:05:20.400 --> 00:05:22.680
kind of like the most,
you know, it's low level

93
00:05:22.680 --> 00:05:25.200
and you build 3d engines
on top of that. But

94
00:05:25.200 --> 00:05:27.810
if, you know, open GL,
you feel comfortable with all

95
00:05:27.810 --> 00:05:30.630
these other different engines. If
I understand the web animations

96
00:05:30.630 --> 00:05:33.930
API I'll feel comfortable, animating
pretty much anything on the

97
00:05:33.930 --> 00:05:37.470
web. Ideally that's how it
will work out. And this

98
00:05:37.470 --> 00:05:39.660
is happening right now as
we speak It is, it

99
00:05:39.660 --> 00:05:42.960
is one, one API to
rule them all. What's really

100
00:05:42.960 --> 00:05:45.450
great about it is it
allows for a lot more.

101
00:05:45.570 --> 00:05:47.460
Now I know we don't
like to talk about flash.

102
00:05:47.490 --> 00:05:49.890
That's still a dirty word,
but flash had a lot

103
00:05:49.890 --> 00:05:52.620
of really cool things going
for, especially in action script

104
00:05:53.100 --> 00:05:55.500
and some of the libraries
like green sock that were

105
00:05:55.770 --> 00:06:00.140
created around it, like tween,
light, et cetera. There were

106
00:06:00.140 --> 00:06:04.310
things like nested timelines so
that you could have multiple

107
00:06:04.310 --> 00:06:08.870
animations running on a, like
dependent on each other's timelines.

108
00:06:09.380 --> 00:06:11.990
Right now that's really hard
to deal with declarative CSS

109
00:06:12.020 --> 00:06:14.870
because everything runs on the
browser's timeline. And there's only

110
00:06:14.870 --> 00:06:17.510
one timeline. This means that
something's a little slow to

111
00:06:17.510 --> 00:06:20.330
load or render. It's completely
out of whack with the

112
00:06:20.330 --> 00:06:24.950
rest of page. So I
did a really cool demonstration

113
00:06:24.950 --> 00:06:29.000
of sinking timelines using the
web animation APIs polyfill and

114
00:06:29.000 --> 00:06:32.900
my latest smashing magazine article,
which is called the state

115
00:06:32.900 --> 00:06:35.060
of the animation, which is
based on a talk that

116
00:06:35.060 --> 00:06:37.510
I gave about animation. And
I'm sure people can find

117
00:06:37.510 --> 00:06:41.740
this online at your site.
Yes. Rachel nabors.com. That's RAC,

118
00:06:41.740 --> 00:06:44.170
H E L N a
B O R S like

119
00:06:44.170 --> 00:06:46.600
Jim neighbors. And I'll put
links to all of this

120
00:06:46.600 --> 00:06:49.270
so that folks are following
along can find those, All

121
00:06:49.270 --> 00:06:52.240
my talks, slides, articles, everything
are at that site. Awesome.

122
00:06:52.450 --> 00:06:54.280
So you said it's a
polyfill for that. So this

123
00:06:54.280 --> 00:06:56.140
means that I can start
thinking about the web animations

124
00:06:56.140 --> 00:07:01.510
API now. Absolutely. The polyfill
was unfortunately, the polyfill is

125
00:07:01.510 --> 00:07:03.460
not nearly as performant as
you would like it to

126
00:07:03.460 --> 00:07:05.890
be in browsers that don't
support the web animation API.

127
00:07:06.340 --> 00:07:07.900
But the point is that
it allows you to start

128
00:07:07.900 --> 00:07:10.960
working with the syntax today
and start figuring out how

129
00:07:10.960 --> 00:07:15.310
say if you're a, if
you're say an animation library

130
00:07:15.310 --> 00:07:18.580
developer, you might use as
polyfill, I mean, you might

131
00:07:18.580 --> 00:07:21.790
use this API to help
increase the speed of your

132
00:07:21.790 --> 00:07:26.560
operations and offer a future
forward compatibility. Maybe you could

133
00:07:26.560 --> 00:07:28.960
put a few things into
context for me because we

134
00:07:28.960 --> 00:07:31.000
understand HTML and the Dom.
I think people who are

135
00:07:31.000 --> 00:07:34.000
listening are that I've gotten
that far. And we understand

136
00:07:34.180 --> 00:07:37.720
when you put, you know,
declarative transforms and animations and

137
00:07:37.720 --> 00:07:40.960
things in CSS where that
lives, and we understand that

138
00:07:41.020 --> 00:07:43.300
JavaScript has API APIs that
allow you to manipulate the

139
00:07:43.300 --> 00:07:45.940
Dom. But when you say
this web animations, API, this

140
00:07:45.940 --> 00:07:48.460
is something that's in the
Dom that I manipulate with

141
00:07:48.460 --> 00:07:50.980
JavaScript or it's in CS,
where does this thing live?

142
00:07:51.010 --> 00:07:53.380
Put it in context of
the other three technologies. So

143
00:07:53.410 --> 00:07:57.010
your browser has a rendering
engine that paints things on

144
00:07:57.010 --> 00:08:02.950
the screen and the web
animations API, actually it kind

145
00:08:02.950 --> 00:08:07.510
of lays bare. The CSS
CSS is rendering engine. Well

146
00:08:07.540 --> 00:08:10.990
the same rendering engine that
SVG animations and CSS uses

147
00:08:12.160 --> 00:08:15.280
it opens it up for
you to manipulate with Java

148
00:08:15.280 --> 00:08:18.910
script. So you can tell
it, you know, I want

149
00:08:18.910 --> 00:08:22.150
to rewind the clock on
all these animations. I want

150
00:08:22.150 --> 00:08:25.150
to, I want to create
a new animation object here.

151
00:08:25.150 --> 00:08:27.400
I want to clone this
one. At this point, there's

152
00:08:27.400 --> 00:08:29.680
all kinds of crazy things
that you can do really

153
00:08:29.680 --> 00:08:32.620
exciting that used to only
be able to do with

154
00:08:32.620 --> 00:08:37.600
something like flash or with
really complex JavaScript libraries. So

155
00:08:37.600 --> 00:08:40.360
they should hopefully take a
lot of the should hopefully

156
00:08:40.360 --> 00:08:44.500
slim down Java script libraries,
animate things and increase performance

157
00:08:44.500 --> 00:08:46.420
across the board. Okay. So
it sounds like these are

158
00:08:46.420 --> 00:08:51.130
fundamental animation concepts, not web
concepts, but like, you know,

159
00:08:51.460 --> 00:08:54.370
atoms at the root of
what this is, how animation

160
00:08:54.370 --> 00:08:57.090
is done. And the web
just didn't have any technologies

161
00:08:57.090 --> 00:08:58.920
to allow you to do
that. And people were making

162
00:08:58.920 --> 00:09:01.380
polyfills because like, Hey, you
know, we really need multiple

163
00:09:01.380 --> 00:09:04.530
timelines. That's how we, we,
those who are in animation

164
00:09:04.710 --> 00:09:08.310
yourself do things, but the
web wasn't coming along for

165
00:09:08.310 --> 00:09:12.350
the ride. No, when we
weren't, we, we kind of

166
00:09:12.500 --> 00:09:15.530
let go of flash a
little prematurely. It was going

167
00:09:15.530 --> 00:09:18.050
to happen. Eventually I did
a lot of research for

168
00:09:18.050 --> 00:09:20.690
that, that article and talk
on the state of the

169
00:09:20.690 --> 00:09:23.360
animation. I spoke with a
lot of people, a lot

170
00:09:23.360 --> 00:09:26.390
of interaction developers who worked
at flash law library developers.

171
00:09:26.390 --> 00:09:29.750
Who've made these, these great
JavaScript libraries for animating things

172
00:09:29.750 --> 00:09:33.470
without flash or with half
the web animations API. And

173
00:09:33.920 --> 00:09:37.670
it, it sounds like flash,
unfortunately was each acted, a

174
00:09:37.670 --> 00:09:40.850
little prematurely, the web wasn't
quite ready to start thinking

175
00:09:40.850 --> 00:09:44.270
about animation. And for a
while, you can definitely see

176
00:09:44.270 --> 00:09:46.640
that web design and development
step back to a more

177
00:09:47.390 --> 00:09:51.800
state-based copy based scenario. And
that's been great. It's been

178
00:09:51.800 --> 00:09:57.560
great for typography typography based
specs for layout specs, but

179
00:09:57.710 --> 00:10:01.520
it means that animation was
sidelined. And in many cases

180
00:10:01.520 --> 00:10:08.300
stigmatized because our community has
this rather clique-ish tendency to

181
00:10:08.330 --> 00:10:13.490
ostracize and make fun of
things deemed unworthy. And as

182
00:10:13.490 --> 00:10:18.860
soon as flash became unworthy,
all the wonderful interaction rockstars

183
00:10:18.890 --> 00:10:21.440
were just kind of, you
know, they're one of their

184
00:10:21.440 --> 00:10:23.840
big tools is being made
fun of at, you know,

185
00:10:23.840 --> 00:10:26.990
the butt of a joke
at every conference ever. It

186
00:10:26.990 --> 00:10:31.640
doesn't really help bring unity
or sharing. So flash went

187
00:10:31.640 --> 00:10:35.330
through In exile. It was,
it was, it was disbanded.

188
00:10:35.330 --> 00:10:37.850
It was cast out, became
the butt of the jokes

189
00:10:37.850 --> 00:10:40.580
at conferences. And that was,
that was hard on the

190
00:10:40.580 --> 00:10:44.840
flash development community. I started
running into people who just

191
00:10:44.840 --> 00:10:49.040
quit web entirely and like
had their midlife crisis and

192
00:10:49.040 --> 00:10:53.120
stopped doing action script and
opened up a motorcycle, a

193
00:10:53.120 --> 00:10:59.150
motorcycle repair shop, true story.
And so unfortunately, because of

194
00:10:59.180 --> 00:11:03.650
flash becoming a dirty word,
the web community has lost

195
00:11:03.710 --> 00:11:08.360
a lot of veteran knowledge
about animation and performance and

196
00:11:08.360 --> 00:11:11.630
the way you code and
write user interfaces and things

197
00:11:11.630 --> 00:11:14.870
for that. And that we
really could benefit from right

198
00:11:14.870 --> 00:11:18.260
now. Okay. These were experts
in animation as a, as

199
00:11:18.260 --> 00:11:21.290
a practice, not flash experts,
Some of them were flashed

200
00:11:21.290 --> 00:11:23.480
experts, but quite few of
them were also experts in

201
00:11:23.480 --> 00:11:27.290
animation and animating things for
the web. The technicalities of

202
00:11:27.290 --> 00:11:31.190
that, both from an aesthetic
perspective, but also from a

203
00:11:31.190 --> 00:11:34.940
very hardcore like performance perspective.
We lost a lot of

204
00:11:34.940 --> 00:11:38.390
niche knowledge by alienating these
people from our community. And

205
00:11:38.390 --> 00:11:40.940
it was very dangerous to
do that. And we probably,

206
00:11:41.840 --> 00:11:44.330
I hope we've learned a
lesson from that and will

207
00:11:44.330 --> 00:11:47.600
not do that to other,
such subsets in the future.

208
00:11:48.200 --> 00:11:51.080
It seems like when we
objected those people, we didn't

209
00:11:51.080 --> 00:11:53.800
have a waiting API ready
for them yet. Like there

210
00:11:53.800 --> 00:11:56.770
wasn't an obvious place for
them to transfer all of

211
00:11:56.770 --> 00:12:00.100
their knowledge. There was no
CSS three yet there was

212
00:12:00.100 --> 00:12:05.670
no CSS animations yet. It's
true. It happened very prematurely.

213
00:12:05.670 --> 00:12:09.090
In fact, the, the iOS
Safari team railroaded their own

214
00:12:09.560 --> 00:12:13.530
and their own syntax for
CSS, animations and transitions specifically.

215
00:12:13.530 --> 00:12:17.880
So people could make websites
for the, for iPhones and

216
00:12:18.030 --> 00:12:20.790
iPads that looked as good
as native apps and the

217
00:12:20.790 --> 00:12:24.870
standards community. Still a little
sore about that. Yeah. So

218
00:12:24.870 --> 00:12:27.870
speaking of the standards community
and what coming you were

219
00:12:27.870 --> 00:12:32.310
at Chrome dev summit. Absolutely.
You're seeing, you're seeing what's

220
00:12:32.310 --> 00:12:34.200
coming and you're seeing the
nightlys or more than the

221
00:12:34.200 --> 00:12:36.780
nineties. It's very exciting. I've
been to a lot of

222
00:12:36.780 --> 00:12:40.650
conferences this year and conferences
are wonderful and I absolutely

223
00:12:40.680 --> 00:12:42.720
love going to them. And
I love hearing what people

224
00:12:42.720 --> 00:12:44.340
are up to, but I
got to say the contents,

225
00:12:44.340 --> 00:12:48.030
usually I'm about six months
behind because this is something,

226
00:12:48.030 --> 00:12:50.790
a project that's been finished
or something somebody started like

227
00:12:50.790 --> 00:12:55.560
months ago. So it's not
exactly the bleeding edgiest of

228
00:12:55.840 --> 00:12:58.620
stuff that person could could
learn about. So it was

229
00:12:58.620 --> 00:13:01.650
really exciting to go to
Chrome dev summit, which is

230
00:13:01.680 --> 00:13:04.950
where Google opens up a
mountain view, a part of

231
00:13:04.950 --> 00:13:07.560
it's mountain view campus invites
all of the people who

232
00:13:07.560 --> 00:13:10.230
love Chrome and build things
for the web to come

233
00:13:10.230 --> 00:13:14.220
listen to the Chrome developers,
talk about what's in, what's

234
00:13:14.220 --> 00:13:17.460
in the hopper. And you
know, the Koolaid is delicious

235
00:13:17.490 --> 00:13:19.200
and I drank quite a
bit of it and it

236
00:13:19.200 --> 00:13:25.710
was tasty. And I think
before it Chrome takes animation

237
00:13:25.740 --> 00:13:30.480
very seriously, which is difficult
because right now the people

238
00:13:30.480 --> 00:13:35.100
who are building browsers, they
all have different interests now

239
00:13:35.100 --> 00:13:37.140
for people like you and
I who building for the

240
00:13:37.140 --> 00:13:39.600
web, and I'm assuming your
listeners, we build things for

241
00:13:39.600 --> 00:13:42.660
the web and you know,
Oh, so and so doesn't,

242
00:13:42.690 --> 00:13:47.070
you know, Safari doesn't have
this API yet Fari, hurry

243
00:13:47.070 --> 00:13:50.160
it up. And it's frustrating,
but you have to remember

244
00:13:50.490 --> 00:13:54.060
where these companies make their
money. Google makes money from

245
00:13:54.060 --> 00:13:56.790
the internet. The more people
who use the internet as

246
00:13:56.790 --> 00:13:59.280
their preferred destination for content,
when they open up their

247
00:13:59.280 --> 00:14:02.340
computers, the more money Google
is going to make. So

248
00:14:02.340 --> 00:14:05.040
it can pour money and
resources onto its Chrome dev

249
00:14:05.040 --> 00:14:07.830
team. And the Chrome dev
summit is sort of like

250
00:14:07.830 --> 00:14:11.790
a showcase of where your
advertising dollars are being Spent.

251
00:14:11.880 --> 00:14:14.190
Here's why more eyeballs will
be on the internet because

252
00:14:14.190 --> 00:14:18.270
of what we're building. And
they are as interested and

253
00:14:18.810 --> 00:14:22.290
excited about animation as I
am. And that makes me

254
00:14:22.290 --> 00:14:27.210
happy because unfortunately like you've
got mozzarella development going on,

255
00:14:27.210 --> 00:14:30.210
right? It's largely driven by
contributions from the open source

256
00:14:30.210 --> 00:14:34.710
community and the web animations
API that I'm so excited

257
00:14:34.710 --> 00:14:37.290
about that has paid developers
working on implementing it in

258
00:14:37.290 --> 00:14:42.240
Chrome. Nightlys well, it relies
quite a bit in mozzarella

259
00:14:42.300 --> 00:14:45.210
on the kindness of C
plus plus developers who are

260
00:14:45.210 --> 00:14:48.900
volunteering their time. And let's
put it this way, C

261
00:14:48.900 --> 00:14:53.420
plus plus developers who have
time volunteer, typically aren't aware

262
00:14:53.420 --> 00:14:57.500
of or interested in animating
the things they, I think

263
00:14:57.500 --> 00:14:59.870
I may have mentioned this
earlier, but the people who

264
00:14:59.870 --> 00:15:02.660
need animation the most are
often the ones who are

265
00:15:02.660 --> 00:15:05.060
the least likely to be
able to implement it on

266
00:15:05.060 --> 00:15:09.860
a code base. So it's
exciting to see what Chrome

267
00:15:09.860 --> 00:15:12.440
is working on. I wish
that some of the things

268
00:15:12.440 --> 00:15:16.010
that they prioritize would be
prioritized in the same way

269
00:15:16.010 --> 00:15:21.050
by other manufacturers of browsers,
such as internet Explorer and

270
00:15:21.050 --> 00:15:26.870
Safari. But you have to
remember that the apples people

271
00:15:26.870 --> 00:15:31.070
behind Safari and Microsoft behind
internet Explorer and their major

272
00:15:31.070 --> 00:15:33.830
revenue doesn't come from making
the web, the number one

273
00:15:34.580 --> 00:15:37.700
destination. In fact, in Apple's
case, you could say that

274
00:15:37.730 --> 00:15:42.590
with their eagerness to have,
have apps, be your number

275
00:15:42.590 --> 00:15:44.690
one source of content, because
it directly makes some money

276
00:15:45.110 --> 00:15:47.810
that having a really nice
browser for people to use

277
00:15:47.830 --> 00:15:51.130
is kind of antithetical to
their, their base. Right? Other

278
00:15:51.130 --> 00:15:53.890
than add to homescreen, there's
little reason for them to

279
00:15:53.920 --> 00:15:55.540
make it easier for us
to make web apps on

280
00:15:55.900 --> 00:15:59.560
Was for exactly What kind
of people did you meet

281
00:15:59.560 --> 00:16:01.600
at the Chrome dev 17,
that, that blew your mind?

282
00:16:02.140 --> 00:16:05.110
Well, I got to meet
my one of the best.

283
00:16:05.500 --> 00:16:07.660
I love a lot of
the people who work over,

284
00:16:08.200 --> 00:16:11.890
over at Google with Chrome,
but I was excited to

285
00:16:11.890 --> 00:16:16.270
meet specifically someone new Roma,
Shaw, the UX lead on

286
00:16:16.810 --> 00:16:21.940
the polymer projects, materials, design,
polymer, polymer. Yeah. Polymer is

287
00:16:21.940 --> 00:16:25.060
kind of, it's a set
of things that Google has

288
00:16:25.060 --> 00:16:26.530
released for people. And I
don't want to go on

289
00:16:26.530 --> 00:16:28.210
about too much because it's
hard for me to phrase

290
00:16:28.210 --> 00:16:31.720
it, but it's there a
bunch of polyfills including the

291
00:16:31.720 --> 00:16:35.530
web animations API is polyfills
sprung forth from this project.

292
00:16:35.950 --> 00:16:39.490
And there are polyfills for
shadow Dom and web components.

293
00:16:39.490 --> 00:16:42.580
And those are all going
to live@webcomponents.org. So there'll be

294
00:16:42.610 --> 00:16:45.640
less conflation of the two
projects in the future. Okay.

295
00:16:45.850 --> 00:16:48.250
Materials design is sort of
like the theme for polyamory

296
00:16:48.250 --> 00:16:53.290
project. You can think of
polymer. Project is to Palmer

297
00:16:53.290 --> 00:16:57.640
project is to building web
apps. What Palmer project is

298
00:16:57.640 --> 00:17:00.280
to building web apps, what
Twitter bootstrap is to building

299
00:17:00.280 --> 00:17:03.250
websites and materials design as
sort of the theme that

300
00:17:03.250 --> 00:17:05.680
Palmer project comes with. Once
again, do your own research.

301
00:17:05.710 --> 00:17:08.350
I'm probably getting it totally
pigeoned here, but this is

302
00:17:08.350 --> 00:17:11.080
how I understood it. After
the Chrome dev summit, it's

303
00:17:11.080 --> 00:17:14.320
all very exciting, but the
materials design is really exciting

304
00:17:14.320 --> 00:17:17.320
because this is the first
time. And at least in

305
00:17:17.320 --> 00:17:21.190
recent record that a large
company has come forward and

306
00:17:21.220 --> 00:17:24.880
made animation, not just, you
know, a part of something

307
00:17:24.880 --> 00:17:28.930
it's building, but a feature
materials, design documentation has an

308
00:17:28.930 --> 00:17:33.310
entire section on meaningful transitions.
And the, the, the interface

309
00:17:33.310 --> 00:17:36.670
is completely animated. And I
got to speak to the

310
00:17:36.670 --> 00:17:40.570
UX lead Roma, the woman
who could speak most to

311
00:17:40.570 --> 00:17:43.660
why it was animated. And
that was, that was really

312
00:17:43.660 --> 00:17:47.200
exciting. It was, it was
exciting to talk with her

313
00:17:47.200 --> 00:17:50.310
because she talked about, she
answered all of my questions

314
00:17:50.310 --> 00:17:53.670
that I asked online. And
she, she said, when asked,

315
00:17:53.670 --> 00:17:57.300
like, what advice should give
people to, to building a

316
00:17:57.600 --> 00:18:02.190
team using animation in an
interface, her response was that

317
00:18:02.190 --> 00:18:05.790
you should exercise deliberateness. They
should be very deliberate about

318
00:18:05.790 --> 00:18:09.720
using animation. And that if
you don't understand why you

319
00:18:09.720 --> 00:18:13.110
should animate something or you
know how you should animate

320
00:18:13.110 --> 00:18:17.040
something, you shouldn't be animating
it, period. So anytime I'm

321
00:18:17.040 --> 00:18:21.000
doing an interview like this,
if we're taking online questions

322
00:18:21.000 --> 00:18:24.240
from people like with Twitter,
I will inevitably get somebody

323
00:18:24.240 --> 00:18:28.080
out there. Who's like, can
you recommend some CSS animation

324
00:18:28.080 --> 00:18:30.870
library? So I can add
some razzle dazzle to my

325
00:18:30.870 --> 00:18:34.760
web pages. I think Roma
would be like, no. So

326
00:18:34.760 --> 00:18:37.850
razzle-dazzle is not the goal.
Razzle dazzle is not the

327
00:18:37.850 --> 00:18:42.040
goal, which brings me to
a thought. I had a

328
00:18:43.040 --> 00:18:45.740
lately we've taught, we're talking
more and more about animation,

329
00:18:45.800 --> 00:18:49.730
which is wonderful. I'm excited
about it. I train people

330
00:18:49.970 --> 00:18:53.300
and companies, teams, how to
use animation for the betterment

331
00:18:53.300 --> 00:18:56.450
of the users. But I
want to make sure that

332
00:18:56.450 --> 00:19:01.160
your listeners have a small
word of warning. Okay. A

333
00:19:01.160 --> 00:19:03.830
lot of rhetoric has been
going around about making things

334
00:19:03.830 --> 00:19:07.100
delightful with animation. And while
it's true, that animation can

335
00:19:07.100 --> 00:19:09.920
be delightful. It can be
delightful in the same way

336
00:19:09.920 --> 00:19:13.580
that a font can be
whimsical or delightful. Ori color

337
00:19:13.580 --> 00:19:18.890
layout can be pleasing. That's,
shouldn't be your first reason

338
00:19:18.890 --> 00:19:22.160
for doing an animation. I
wrote an article for a

339
00:19:22.160 --> 00:19:25.400
list of part where I
outlined six principles of UI

340
00:19:25.760 --> 00:19:31.610
animation. And these are very
important. Like they talk about

341
00:19:31.610 --> 00:19:34.700
like using animation to show
people their location on a

342
00:19:34.700 --> 00:19:39.800
page, progress through a linear
sequence. They're, they're wonderful. You

343
00:19:39.800 --> 00:19:41.270
need to check them out.
I illustrated them all with

344
00:19:41.270 --> 00:19:43.760
animations. Cause you shouldn't write
an article about animation without

345
00:19:43.760 --> 00:19:47.540
animation in it. We appreciate
that. And the fun thing

346
00:19:47.540 --> 00:19:51.360
is that I like to
tell people if you're gonna

347
00:19:51.410 --> 00:19:53.510
animate something, you need to
make sure that it meets

348
00:19:53.510 --> 00:19:56.900
at least two of those
principles. And the third one

349
00:19:56.900 --> 00:20:01.700
can be delight. If something
should first be useful before

350
00:20:01.700 --> 00:20:04.730
it is beautiful. It's a
shaker saying, you know, like

351
00:20:04.730 --> 00:20:09.710
if you make something, how's
it go. If you make

352
00:20:09.710 --> 00:20:12.410
something, it must first be
useful. But if it is

353
00:20:12.410 --> 00:20:15.320
useful, it be why not?
Should it also be beautiful?

354
00:20:16.250 --> 00:20:18.980
So something can be beautiful
if it is useful, but

355
00:20:18.980 --> 00:20:21.380
it shouldn't just exist for
beauty in and of itself.

356
00:20:22.160 --> 00:20:25.040
All things take time. They
take time for you to

357
00:20:25.040 --> 00:20:27.890
build them. They take time
and energy for them to

358
00:20:27.890 --> 00:20:32.180
run. They should have purpose
behind that. I understand that

359
00:20:32.270 --> 00:20:35.090
delightful things may give people
a small little, Oh, how

360
00:20:35.090 --> 00:20:38.240
lovely. But that shouldn't be
the only reason they're there.

361
00:20:38.660 --> 00:20:41.090
And also kind of like
those load screens before you're

362
00:20:41.090 --> 00:20:43.430
playing a video game, they
get old a lot faster.

363
00:20:43.760 --> 00:20:45.950
If a feature only exists
because it's delightful. There's a

364
00:20:45.950 --> 00:20:47.980
good chance. People are going
to want to skip intro

365
00:20:48.040 --> 00:20:50.460
really fast. Absolutely. I've had
a number of times where

366
00:20:50.460 --> 00:20:52.260
it's like the first time
you see that animation, it's

367
00:20:52.260 --> 00:20:54.720
like, Oh neat. And it's
like, Oh, there's that fricking

368
00:20:54.720 --> 00:20:57.510
animation again. It's in my
way. It's that animation is

369
00:20:57.510 --> 00:21:00.900
standing between me and my
task. Exactly. And this is

370
00:21:00.900 --> 00:21:04.830
one of the reasons why
in traditional animation, there's this

371
00:21:04.830 --> 00:21:08.700
wonderful, wonderful saying when it
comes to timing things, because

372
00:21:08.700 --> 00:21:11.130
you've got these animators who
are drawing frame by frame

373
00:21:11.490 --> 00:21:14.070
a person doing something and
they're in this whole other

374
00:21:14.070 --> 00:21:18.780
time-space they're like in time
dilation. And when they have

375
00:21:18.780 --> 00:21:20.850
to figure out how long
should this animation run for

376
00:21:20.850 --> 00:21:23.670
when they finished, you know,
drawing the woman moving from

377
00:21:23.670 --> 00:21:25.740
point a to point B,
how long should this last?

378
00:21:26.850 --> 00:21:28.590
How long do you think
it should last, you have

379
00:21:28.590 --> 00:21:31.380
that time. And then you
have it again. That's how

380
00:21:31.380 --> 00:21:33.750
long it should last. So
if you've got something in

381
00:21:33.750 --> 00:21:36.210
your prototype that looks good
to you at one second

382
00:21:36.510 --> 00:21:40.380
should be running it point
25 seconds. And that is,

383
00:21:40.710 --> 00:21:43.020
that makes it so that
the untrained eye, the person

384
00:21:43.020 --> 00:21:46.590
hasn't been looking at it
for, you know, like days

385
00:21:46.970 --> 00:21:49.650
doesn't actually see it. It
doesn't come out and say,

386
00:21:49.650 --> 00:21:53.370
hello, hi, I'm animating, aren't
you happy? I'm animating front

387
00:21:53.370 --> 00:21:55.950
of you. Look at me
taking you from state a

388
00:21:55.950 --> 00:21:58.650
to state B. It should
get out of their way.

389
00:21:58.680 --> 00:22:02.520
And that usually means a
very quick animation. It seems

390
00:22:02.520 --> 00:22:05.820
like often when I'm on
a smaller device or constrained

391
00:22:05.820 --> 00:22:09.030
device, I can tell that
they wanted an animation to

392
00:22:09.030 --> 00:22:11.100
go a certain way, but
maybe it'll stutter. And it

393
00:22:11.100 --> 00:22:13.340
pulls me right out of
the illusion. They think there's

394
00:22:13.350 --> 00:22:15.030
no way to know if
there's a frame, like how

395
00:22:15.030 --> 00:22:17.010
many frames per second, it's
running. I just know it's

396
00:22:17.010 --> 00:22:20.220
wrong. It doesn't feel right
as a user. Another interesting

397
00:22:20.220 --> 00:22:23.820
thing. So the human eye,
when it comes to a

398
00:22:23.840 --> 00:22:26.520
computer screen, when you're looking
at a film it's about

399
00:22:26.520 --> 00:22:30.330
25 frames per second or
FPS 24, I think is

400
00:22:30.330 --> 00:22:33.630
what? Regular film. Film. Not
digital. Yeah. I like film

401
00:22:33.630 --> 00:22:38.070
at a, at a, at
a beautiful old theater. Like

402
00:22:38.070 --> 00:22:42.330
we have here in Portland.
Yes, I ha. Oh, wonderful.

403
00:22:42.870 --> 00:22:46.920
So, but the on your
computer screen, it's about 60

404
00:22:46.920 --> 00:22:50.610
frames per second to make
people happy. And what's more

405
00:22:50.610 --> 00:22:53.730
though is if you can't
consistently stay at 50 frames

406
00:22:53.730 --> 00:22:56.040
per second, if you've got
big dips going down to

407
00:22:56.040 --> 00:23:00.330
30 frames per second, that
momentary dip, that jank will

408
00:23:00.330 --> 00:23:02.580
totally pop people out of
the illusion. Well, that's called

409
00:23:02.580 --> 00:23:05.790
Jenkins we're term janky. Yes.
That's what we're talking about.

410
00:23:05.790 --> 00:23:09.360
When we say something's janky,
there's jitter stutter on the

411
00:23:09.360 --> 00:23:15.390
screen. So interestingly enough, though,
people's eyes are likely more

412
00:23:15.390 --> 00:23:18.240
likely to pick out a
difference in frames per second,

413
00:23:19.200 --> 00:23:22.080
than they are to notice
a lower frame per second.

414
00:23:22.110 --> 00:23:25.680
For instance, you could give
someone an animation, if you

415
00:23:25.680 --> 00:23:28.290
could somehow sense. I'll talk
about this in a moment.

416
00:23:28.560 --> 00:23:31.950
If you'd somehow sense that
the device couldn't perform at

417
00:23:31.950 --> 00:23:35.850
60 frames per second regularly,
maybe it's an underpowered device.

418
00:23:35.850 --> 00:23:37.860
Maybe it's got a lot
of background processes going on.

419
00:23:38.340 --> 00:23:40.350
If you could scale that
back, throttle it back to

420
00:23:40.350 --> 00:23:44.580
35 frames per second, people
would be a lot more

421
00:23:44.580 --> 00:23:47.090
accepting eyes and minds would
be more accepting of that

422
00:23:47.120 --> 00:23:50.450
than they would be of
60 frames per second, interspersed

423
00:23:50.450 --> 00:23:53.120
with janky moments where it
goes to 35 frames per

424
00:23:53.120 --> 00:23:55.480
second. I see. So consistently
slow. If I can be,

425
00:23:55.510 --> 00:23:59.380
like I say, 24.97 consistently,
that's much better than being

426
00:23:59.380 --> 00:24:03.160
60 and then five and
then 15. Exactly. And it's

427
00:24:03.160 --> 00:24:05.560
interesting because I did hear
a little bit about some

428
00:24:05.560 --> 00:24:08.290
things that the Chrome developers
are working on that might

429
00:24:08.290 --> 00:24:11.530
help us do that in
the future. The frame timing

430
00:24:11.530 --> 00:24:14.170
API, I believe Paul Lewis spoke
about it for a little

431
00:24:14.170 --> 00:24:17.350
bit and it it's, it's
an API that's in the

432
00:24:17.350 --> 00:24:19.600
works, but that means it
could be like, who knows.

433
00:24:19.630 --> 00:24:21.670
It might be implemented tomorrow
kind of like a wheel

434
00:24:21.670 --> 00:24:26.200
change in CSS, but it's
a frame timing API that

435
00:24:26.200 --> 00:24:29.530
basically can measure how many
frames per second, that certain

436
00:24:29.530 --> 00:24:33.970
period of time resulted in.
So you could like imagine

437
00:24:34.000 --> 00:24:37.600
having a spinner on a
page using the frame timing

438
00:24:37.600 --> 00:24:40.600
API to check how many
frames per second, that spinner

439
00:24:40.600 --> 00:24:43.660
is running it. And then
using that logic say, well,

440
00:24:43.660 --> 00:24:46.570
this person's a frames per
second were really low. So

441
00:24:46.570 --> 00:24:48.790
we're going to throttle it
back to a 35 frames

442
00:24:48.790 --> 00:24:51.700
per second animation, or, you
know, Oh, this is great.

443
00:24:51.700 --> 00:24:54.520
We'll give them the full
experience or maybe, Oh, this

444
00:24:54.520 --> 00:24:57.520
is terrible. We're just going
to not animate anything on

445
00:24:57.520 --> 00:25:01.480
this page. That is wonderful.
I've heard people who've been

446
00:25:01.480 --> 00:25:05.290
developing mobile sites for Android
for Asia's complained that while

447
00:25:05.290 --> 00:25:08.170
the browser might say it
can handle the CSS, animations,

448
00:25:08.500 --> 00:25:12.070
the browser can't render them
for anything. So you're basically

449
00:25:12.070 --> 00:25:15.760
saying to that point of
intentionality that I intend this

450
00:25:15.760 --> 00:25:18.490
animation to behave this way,
regardless of what the browse

451
00:25:18.500 --> 00:25:21.460
respects say, if the reality
is I can't get my

452
00:25:21.460 --> 00:25:23.710
30 or my 60 frames
a second, then I'm going

453
00:25:23.710 --> 00:25:26.560
to use an entirely different
interaction model. Yeah. Or, you

454
00:25:26.560 --> 00:25:31.300
know, just kind of gracefully
grade, the interactions you had

455
00:25:31.300 --> 00:25:34.660
planned, like maybe they don't
need that parallax. And the

456
00:25:34.660 --> 00:25:37.630
neat thing is, imagine that
you could also, like, I

457
00:25:37.630 --> 00:25:40.330
want to hopefully build a
little library for this. If

458
00:25:40.330 --> 00:25:43.000
this, as a tin magpie
project, release it into the

459
00:25:43.000 --> 00:25:46.570
wild. If no one else
does once the, once the

460
00:25:46.570 --> 00:25:48.400
frame timing API gets out
there, it would be nice

461
00:25:48.400 --> 00:25:50.710
to tie that into something
like the battery life API.

462
00:25:50.710 --> 00:25:53.260
So if somebody only has
20% of their juice left,

463
00:25:53.590 --> 00:25:57.820
you're not, you know, providing
unnecessary repaints in their browser.

464
00:25:58.150 --> 00:26:00.600
That would be so nice.
It just seems like we,

465
00:26:00.600 --> 00:26:02.680
we, we, we spend all
this time now in our

466
00:26:02.680 --> 00:26:04.720
brow and our devices, whether
it be an Android or

467
00:26:04.720 --> 00:26:07.810
the new iOS eight, where
it says, this is using

468
00:26:07.810 --> 00:26:09.550
this much battery, and this
is using that switch battery.

469
00:26:09.550 --> 00:26:11.020
But I would be more
likely to go to a

470
00:26:11.020 --> 00:26:13.990
mobile website that used less
battery life. Like, I don't

471
00:26:13.990 --> 00:26:17.920
know if cnn.com isn't destroying
my battery life. Like they

472
00:26:17.920 --> 00:26:20.050
might be using, they might
be using jQuery and not

473
00:26:20.050 --> 00:26:22.480
CSS animations. They may be
on the CPU and not

474
00:26:22.480 --> 00:26:24.910
the GPU. I'd like to
know those kinds of things.

475
00:26:25.270 --> 00:26:28.870
And if this animation could,
could stop because I'm a,

476
00:26:29.020 --> 00:26:31.450
you know, 2% battery and
I'm trying to get home,

477
00:26:31.930 --> 00:26:34.540
then that'd be, that'd be
amazing. It would be. And

478
00:26:34.570 --> 00:26:37.840
you know, just crazy wonderful
things are happening. I also

479
00:26:37.840 --> 00:26:43.560
heard about project Ganesh, which
I it's cool because there

480
00:26:43.560 --> 00:26:45.600
are some people who used
to work for game companies

481
00:26:45.630 --> 00:26:48.300
who I know this because
we used to go there

482
00:26:48.300 --> 00:26:50.400
game night, back in Raleigh,
before we moved to Portland,

483
00:26:50.400 --> 00:26:53.610
but to work for Google,
Google on the rendering engine

484
00:26:53.610 --> 00:26:56.550
now, and we're looking at
like back in the days

485
00:26:56.550 --> 00:27:01.500
when people were first building
browsers, we thought about just

486
00:27:01.560 --> 00:27:05.970
putting text on pages, right?
Nothing animates, unless they're scrolling.

487
00:27:06.180 --> 00:27:08.730
Right? But now browsers are
having to think more like

488
00:27:08.730 --> 00:27:11.850
game engines because now things
are more likely to animate,

489
00:27:12.600 --> 00:27:14.400
not even when people are
scrolling, but just when they're

490
00:27:14.400 --> 00:27:18.780
sitting still. So clever browser
vendors are looking at ways

491
00:27:18.780 --> 00:27:20.670
that they can start offloading
more of that work to

492
00:27:20.670 --> 00:27:26.160
the GPU, a very clever
animation library developers, especially at

493
00:27:26.160 --> 00:27:30.300
certain inhouse, interactive agencies have
been using loopholes in a

494
00:27:30.300 --> 00:27:32.430
web GL to go through
the GPU for a lot

495
00:27:32.430 --> 00:27:34.740
of page. Rendering is pretty
fantastic. What people get up

496
00:27:34.740 --> 00:27:37.320
to, to solve their own
problems. But at the Chrome

497
00:27:37.320 --> 00:27:40.230
dev summit, it was exciting
because we heard about project

498
00:27:40.230 --> 00:27:42.780
Ganesh. And how is it
like the Hindu God, goodness.

499
00:27:43.020 --> 00:27:46.800
Yes. It's named for that
Hindu God, because I believe

500
00:27:46.800 --> 00:27:50.460
the original team was in
India. Okay. And so basically

501
00:27:50.460 --> 00:27:55.260
they're talking about doing a
hardware accelerated rasterization, which is

502
00:27:55.560 --> 00:28:00.630
a slightly more niche part
of hardware accelerated rendering. So

503
00:28:00.660 --> 00:28:04.560
anyway, it's, it's incredible because
they were promising in, in

504
00:28:05.010 --> 00:28:07.920
like 60 frames per second
should not be a problem

505
00:28:08.280 --> 00:28:11.790
like in another year or
so on mobile devices for

506
00:28:11.790 --> 00:28:15.870
the Chrome team. That is
incredibly exciting from an animation

507
00:28:15.870 --> 00:28:18.120
perspective, because a lot of
the complaints you hear about,

508
00:28:18.120 --> 00:28:21.690
I don't want to use
animation because of performance. It's

509
00:28:21.690 --> 00:28:23.310
not going to be a
problem. The more we use

510
00:28:23.310 --> 00:28:28.380
animation, more browser vendors optimize
for a less state-based and

511
00:28:28.410 --> 00:28:31.160
more interactive web. So it
seems like animation is coming

512
00:28:31.160 --> 00:28:33.110
back in Vogue. We should
bring all of these flash

513
00:28:33.110 --> 00:28:36.920
people back who've gone and
started their motorcycle repair shops

514
00:28:36.920 --> 00:28:38.630
and saying, we need you
back here. We need your

515
00:28:38.630 --> 00:28:42.050
principles of animation to return.
I think you'd definitely be

516
00:28:42.050 --> 00:28:45.500
good to mind some of
those minds for what they

517
00:28:45.500 --> 00:28:49.880
know. And they, they will
probably show up in weird

518
00:28:49.880 --> 00:28:53.960
and unexpected ways going forward.
So people may be maybe

519
00:28:53.960 --> 00:28:56.420
listening and saying, well, I
work on forms. I just

520
00:28:56.420 --> 00:28:59.840
have buttons on my application.
You know, why would I

521
00:28:59.840 --> 00:29:01.850
bring someone in to train
me and teach me about

522
00:29:01.850 --> 00:29:04.280
these kinds of things? I
don't need an intro. Where

523
00:29:04.280 --> 00:29:07.070
else would I use animation?
I actually hear that a

524
00:29:07.070 --> 00:29:09.050
lot. Like, I'll be at
a conference and someone's like,

525
00:29:09.050 --> 00:29:10.940
I loved your talk. And
it was so cool to

526
00:29:10.940 --> 00:29:14.720
see what you did, but
man, I mean, all I

527
00:29:14.720 --> 00:29:16.550
do is, you know, I
have this app and there

528
00:29:16.550 --> 00:29:19.280
are some buttons, people push.
I want to say, Hey,

529
00:29:19.550 --> 00:29:22.100
have you ever used the
Evernote app for native device?

530
00:29:22.250 --> 00:29:24.800
Yeah, it's a great app.
It's great. Actually. It's great.

531
00:29:25.700 --> 00:29:28.370
It is. The Evernote team
does a great job at

532
00:29:28.370 --> 00:29:32.960
integrating animation with their, with,
with their designs. For instance,

533
00:29:32.960 --> 00:29:36.230
there are three major States
in the Evernote app. There's,

534
00:29:36.230 --> 00:29:38.660
you're either reading something, looking
for something or you're writing

535
00:29:38.660 --> 00:29:43.060
something right? Evernote, every time
you switch between those tasks,

536
00:29:43.300 --> 00:29:45.730
it animates you to the
new task. You want to

537
00:29:45.730 --> 00:29:48.400
write something, the background fades
out and a piece of

538
00:29:48.400 --> 00:29:50.800
paper pulls up in front
of you. It doesn't just

539
00:29:50.800 --> 00:29:52.960
jump cuts you to a
page where you start typing

540
00:29:52.960 --> 00:29:55.060
out input. A lot of
apps do that. A lot

541
00:29:55.060 --> 00:29:58.750
of websites do that. So
here's something very simple. It's

542
00:29:58.750 --> 00:30:01.990
forms E this is a,
an input form and it

543
00:30:01.990 --> 00:30:05.320
has been animated into place.
I mean, it's interesting because

544
00:30:05.320 --> 00:30:08.050
I think a lot when
the iPad first came out,

545
00:30:08.050 --> 00:30:09.940
when iOS first came out,
you heard a lot of

546
00:30:10.210 --> 00:30:13.030
young and old people say,
you know, I love it.

547
00:30:13.030 --> 00:30:15.040
It's so intuitive. I love
it much more than I

548
00:30:15.040 --> 00:30:18.910
love my computer. We have
so much research about how

549
00:30:18.940 --> 00:30:23.410
animation cuts down on mental
processing time and keeps people

550
00:30:23.410 --> 00:30:26.020
in their task flow by
offloading that sort of busy

551
00:30:26.020 --> 00:30:29.440
work that in between busywork
to their, to their brains,

552
00:30:29.440 --> 00:30:34.450
GPU the visual cortex that
when you're animating it thoughtfully,

553
00:30:34.690 --> 00:30:38.590
deliberately, you're thinking about it.
You've got this wonderful quick

554
00:30:38.620 --> 00:30:40.600
get out of your way
animation to take people from

555
00:30:40.600 --> 00:30:44.230
one state into another. That's
what makes it feel more

556
00:30:44.230 --> 00:30:47.380
useful and usable to them?
It wasn't that iOS was

557
00:30:47.770 --> 00:30:49.750
well, I mean, I'm sure
it's designed and everything was

558
00:30:49.750 --> 00:30:53.650
great, but perhaps the real
reason that we saw young

559
00:30:53.650 --> 00:30:56.710
and old users cleaning and
love it so much was

560
00:30:56.710 --> 00:30:59.800
because of that deliberate use
of animation that not only

561
00:30:59.800 --> 00:31:03.540
the operating system used, but
also the app developers, Right?

562
00:31:03.540 --> 00:31:06.960
Everything from going back to
your folders and mail, it

563
00:31:06.960 --> 00:31:10.470
makes me think about even
like windows 95 or Mac

564
00:31:10.890 --> 00:31:13.470
system seven, really the only
animation I can think of

565
00:31:13.470 --> 00:31:16.800
was minimizing stuff, right? And
there was really no animation

566
00:31:17.010 --> 00:31:20.730
anywhere else, other than minimizing
stuff, but in a, an

567
00:31:20.730 --> 00:31:24.360
iPad or an Android tablet,
everything is animated. There's a

568
00:31:24.360 --> 00:31:27.300
transition everywhere. You never get
a as you call a

569
00:31:27.310 --> 00:31:30.530
jump cut. Exactly. And the
fascinating thing is there are

570
00:31:30.540 --> 00:31:33.570
all these papers from like
MIT and such from back

571
00:31:33.570 --> 00:31:35.520
in like the early and
mid nineties, where there was

572
00:31:35.520 --> 00:31:38.940
an arms race between operating
systems to try to get,

573
00:31:39.900 --> 00:31:42.630
to try to best each
other, having the perfect animated

574
00:31:42.630 --> 00:31:45.960
interface so that those edge
markets of the young and

575
00:31:45.960 --> 00:31:49.080
old would find it more
pleasant and useful to use

576
00:31:49.080 --> 00:31:51.510
the webs. I mean, T
to use the operating system,

577
00:31:51.540 --> 00:31:53.520
I think we're facing that
in web design right now,

578
00:31:53.820 --> 00:31:57.900
because now finally, we can
animate things using HTML, CSS,

579
00:31:57.900 --> 00:32:01.530
and JavaScript in ways that
previously were only possible using

580
00:32:01.530 --> 00:32:04.530
native code For flash. It
seems like we're at the

581
00:32:04.530 --> 00:32:07.050
beginning, you think probably of
a, of a Renaissance in

582
00:32:07.110 --> 00:32:10.290
web animation. Well, I would
say we're in a Renaissance

583
00:32:10.320 --> 00:32:12.990
of web design and we're
going to see a big

584
00:32:12.990 --> 00:32:15.870
change in how people make
websites, probably similar to the

585
00:32:15.870 --> 00:32:19.970
kind we saw with responsive
web design and responsible web

586
00:32:20.250 --> 00:32:24.060
<inaudible> and the web going
forward from this point, onward

587
00:32:24.060 --> 00:32:26.280
is not going to look
the way it did Five

588
00:32:26.280 --> 00:32:37.050
years ago. Very cool. So
people can look@yourtalksandyourresourcesandhireyouandyourtrainingatrachelnaborsdotcomatrachelnabors.com. That's R

589
00:32:37.050 --> 00:32:39.620
I C H E L
N a B O S.

590
00:32:40.070 --> 00:32:43.160
You can also see my
company tin magpie that's tin

591
00:32:43.160 --> 00:32:47.520
like the metal and magpie,
like theBird@tinmagpie.com. Very cool. Well,

592
00:32:47.530 --> 00:32:49.510
thanks so much for sharing
all of your information and

593
00:32:49.510 --> 00:32:51.760
knowledge about animation today. It's
been great talking with you,

594
00:32:51.760 --> 00:32:54.580
Scott. Thanks for having me.
This has been another episode

595
00:32:54.580 --> 00:32:56.650
of Hanselminutes and we'll see
you again next week.

