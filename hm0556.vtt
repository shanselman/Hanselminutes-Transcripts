WEBVTT FILE

1
00:00:00.330 --> 00:00:03.510
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.510 --> 00:00:06.450
they make the show possible.
Today's show is sponsored by

3
00:00:06.450 --> 00:00:10.650
developer express, become a UI
superhero with dev express controls

4
00:00:10.650 --> 00:00:15.150
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.540 --> 00:00:19.650
by leveraging your existing knowledge,
you can build next generation

6
00:00:19.650 --> 00:00:23.730
touch enabled solutions for tomorrow,
you can download your free

7
00:00:23.850 --> 00:00:48.320
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com
From hanselminutes.com. It's Hansel minutes,

8
00:00:48.650 --> 00:00:52.820
Our weekly discussion with web
developer and technologist Scott Hanselman.

9
00:00:53.240 --> 00:00:58.430
This is Lawrence Ryan announcing show
number 556. In this episode,

10
00:00:58.430 --> 00:01:07.850
Scott Hall, Amir Rajon about being
a polyglot programmer. Hi, this

11
00:01:07.850 --> 00:01:10.400
is Scott Hanselman. This is
another episode of Hansel minutes

12
00:01:10.730 --> 00:01:13.610
today. I'm talking with Amir
Rajon. He was actually on

13
00:01:13.610 --> 00:01:17.720
the show with his number
one iPhone iOS app in

14
00:01:17.720 --> 00:01:20.150
the app store. How is
that app doing? It's doing

15
00:01:20.150 --> 00:01:22.400
well. It's got a really
long tail. This is one

16
00:01:22.400 --> 00:01:25.220
of those weird things where
it's at first. I thought

17
00:01:25.220 --> 00:01:28.010
it was a one and
done, but it's being able

18
00:01:28.010 --> 00:01:32.390
to it's sustaining it's it's
spot. So it's still like

19
00:01:32.390 --> 00:01:34.550
in the top 10 in
the RPG section. It's not

20
00:01:34.550 --> 00:01:37.010
number one anymore, but it's
it's up there. And I

21
00:01:37.010 --> 00:01:41.480
recently deployed to Android and
it hit the number seven

22
00:01:41.480 --> 00:01:44.480
spot overall on Android, but
it's come down since then.

23
00:01:44.900 --> 00:01:46.850
So I have to kind
of see, you know, how

24
00:01:46.850 --> 00:01:50.420
it's gonna, how it's going
to Wade through on Android.

25
00:01:50.840 --> 00:01:52.880
I was just too, too,
too, too soon to tell,

26
00:01:52.880 --> 00:01:55.220
right. That at this point,
that show was kind of

27
00:01:55.220 --> 00:01:58.370
widely circulated and very well
thought of because you were

28
00:01:58.370 --> 00:02:00.860
super transparent about it. And
you're just like, yeah, you

29
00:02:00.860 --> 00:02:02.120
know, this is what it's
like to have a number

30
00:02:02.120 --> 00:02:04.070
one app in the app
store. And I know you

31
00:02:04.070 --> 00:02:06.590
had a partner and you
had some help and there

32
00:02:06.590 --> 00:02:08.780
were some, you know, the
pie gets chopped up, but

33
00:02:08.810 --> 00:02:11.780
did it make you like
a multibillionaire like flappy bird

34
00:02:11.780 --> 00:02:15.980
guy? I can do. I
consider myself a game developer

35
00:02:15.980 --> 00:02:18.590
now that's like, actually my
profession. So when people ask

36
00:02:18.590 --> 00:02:19.850
me, what do I do
for a living and say,

37
00:02:19.850 --> 00:02:22.220
Hey, I'm a game dev
and it doesn't try to

38
00:02:22.220 --> 00:02:25.490
shut down the conversation. Like
I'm a software engineer, right?

39
00:02:25.820 --> 00:02:27.590
The moment you sit here,
suffer engineer. It's like, Oh

40
00:02:27.590 --> 00:02:31.310
God, let's talk about something
else. So I, I actually

41
00:02:31.310 --> 00:02:34.010
say I'm a game dev
I do, I guess, part

42
00:02:34.010 --> 00:02:36.260
time. And then the other
time I do independent consulting

43
00:02:36.260 --> 00:02:39.530
here and there. So when
I have an interesting idea,

44
00:02:39.530 --> 00:02:41.780
I'll, I'll go away and
do some game development. If

45
00:02:41.780 --> 00:02:44.870
not, then I'll keep my
skills sharp and, you know,

46
00:02:44.870 --> 00:02:47.270
go out into the world
and help out, help out

47
00:02:47.270 --> 00:02:48.800
as much as I can.
I actually have a book

48
00:02:48.800 --> 00:02:52.310
now to call surviving the
app store where I basically

49
00:02:52.310 --> 00:02:54.350
take all the wisdom I've
gotten over this three year

50
00:02:54.350 --> 00:02:56.810
period and kind of put
it out there for indie

51
00:02:56.990 --> 00:03:00.520
game developers. That's very, people
should definitely check That out

52
00:03:00.550 --> 00:03:03.940
as well as the podcast.
It really demystified things, especially

53
00:03:03.940 --> 00:03:06.130
from the financial perspective, I
just kind of assumed that

54
00:03:06.130 --> 00:03:08.410
it was like, you know,
50 grand a day and

55
00:03:08.410 --> 00:03:10.120
it just keeps rolling in
and then you just hang

56
00:03:10.120 --> 00:03:12.460
out on a beach and
it's not quite as glamorous

57
00:03:12.460 --> 00:03:15.070
as that, but it is
pretty exciting when millions of

58
00:03:15.070 --> 00:03:18.270
people download it. Yeah, it's
fun. I'm at 2.5 million

59
00:03:18.270 --> 00:03:21.780
downloads at this 0.2 point
5 million. That's amazing. Yep. Half

60
00:03:21.780 --> 00:03:24.930
of those are free, but
2.5 million. So what language

61
00:03:24.930 --> 00:03:26.940
did you write that in?
And that was actually written

62
00:03:26.940 --> 00:03:30.170
in Ruby, which is kind
of weird. I actually started

63
00:03:31.310 --> 00:03:33.710
as a household. Does that
work? So I actually started

64
00:03:33.710 --> 00:03:36.660
in objective C and you
know, I came from C-sharp.

65
00:03:37.110 --> 00:03:39.330
I quit my job decided
to build a video game,

66
00:03:39.570 --> 00:03:44.220
started in objective C. It
was interesting. I learned some

67
00:03:44.220 --> 00:03:46.710
things about objective C, but
then I went to Ruby

68
00:03:46.710 --> 00:03:49.320
and Ruby motion and I
built my game in Ruby

69
00:03:49.320 --> 00:03:52.020
motion. So the games were
built in Ruby. All my

70
00:03:52.020 --> 00:03:55.170
other games were built in
Ruby. Also, I'm starting to

71
00:03:55.170 --> 00:03:57.900
look at Coco's to DX,
which is a C a

72
00:03:57.900 --> 00:04:01.740
C C plus plus a
game framework. And I'm starting

73
00:04:01.740 --> 00:04:05.460
to write actual, like a
Ruby bridge, so C bridge

74
00:04:05.490 --> 00:04:07.710
to Ruby. So I can
continue doing things in Ruby,

75
00:04:09.450 --> 00:04:12.080
but, you know, it's, it's
so weird. Like just, just

76
00:04:12.090 --> 00:04:14.370
how I just to kind
of get into this idea

77
00:04:14.370 --> 00:04:18.540
of, you know, getting through
all these languages. I actually

78
00:04:18.540 --> 00:04:21.750
started doing Ruby as a
build automation tool for C

79
00:04:21.750 --> 00:04:24.960
sharp. So we use something
called albacore. This was back

80
00:04:24.960 --> 00:04:29.310
in 2010, and albacore was
made by the guy that

81
00:04:29.310 --> 00:04:34.050
did a backbone, marionette, his
name, his name is Derek

82
00:04:34.050 --> 00:04:37.440
Bailey, that's it? So Derek
Bailey actually built albacore to

83
00:04:37.470 --> 00:04:42.810
build.net solutions. So my initial,
initial introduction to Ruby wasn't

84
00:04:42.810 --> 00:04:44.730
actually the rails at all.
It was just being a

85
00:04:45.120 --> 00:04:50.880
rubious building objects and constructs
around the concepts of build

86
00:04:51.390 --> 00:04:55.710
and, and building.net solutions. And
so I really liked Ruby

87
00:04:55.710 --> 00:04:57.570
from that standpoint. And then
that's when I decided it

88
00:04:57.570 --> 00:04:59.520
was like, well, you know,
I've done enough of the

89
00:04:59.520 --> 00:05:01.800
corporate stuff. Let me go
out and do some, do

90
00:05:01.800 --> 00:05:05.730
some independent self study and
exploration of, of all these

91
00:05:05.730 --> 00:05:10.290
different, wonderful things out there.
So when I thought of

92
00:05:10.320 --> 00:05:13.560
iPhone development, I just assumed
it was Swift or objective

93
00:05:13.560 --> 00:05:16.650
C, but when you poke
around anywhere, whether it be

94
00:05:16.650 --> 00:05:20.010
Mac or windows or Android
or iPhone, there's always the

95
00:05:20.010 --> 00:05:24.120
main stream thing, the mainstream
language, but then there are

96
00:05:24.120 --> 00:05:28.860
really way more alternate languages
for platforms you wouldn't have

97
00:05:28.860 --> 00:05:31.860
expected. I never would have
said, Oh yeah, Ruby, a

98
00:05:31.880 --> 00:05:34.320
iPhone development, a hundred percent,
you know, but if you

99
00:05:34.320 --> 00:05:37.230
go to Ruby motion.com, you
know, there you are on

100
00:05:37.230 --> 00:05:40.950
the homepage under success stories,
you know, like I'm shocked.

101
00:05:40.950 --> 00:05:43.020
There's a whole universe out
there of people doing Ruby

102
00:05:43.020 --> 00:05:46.290
on iPhone. So does this
mean that pretty much any

103
00:05:46.290 --> 00:05:50.040
language is available on pretty
much any platform? Like people

104
00:05:50.040 --> 00:05:52.470
love their language and they
just do whatever it takes

105
00:05:52.470 --> 00:05:55.410
to make it happen on
that platform. I feel like

106
00:05:55.410 --> 00:05:58.370
it's starting to get that
way. And you know, just,

107
00:05:58.430 --> 00:06:00.680
just even with unity, that's
something that, you know, I

108
00:06:00.750 --> 00:06:02.690
love to look at too.
There's a lot of C-sharp

109
00:06:02.690 --> 00:06:06.290
immunity. Of course that's the
default language, but there's another

110
00:06:06.290 --> 00:06:10.400
thing called Arcadia, which is
a closure wrapper on unity.

111
00:06:10.820 --> 00:06:14.060
So, you know, people are
doing, taking the languages that

112
00:06:14.060 --> 00:06:17.660
they enjoy working with and
bringing it to the platforms

113
00:06:17.660 --> 00:06:20.000
that they want to work
in. And it's really cool

114
00:06:20.000 --> 00:06:23.780
to see that. I think,
I think that wouldn't be

115
00:06:23.780 --> 00:06:26.120
the case. I would, I
would even say like 10

116
00:06:26.120 --> 00:06:28.850
years ago where that would
just be very difficult. You

117
00:06:28.850 --> 00:06:31.130
just have the language and
the platform you want to

118
00:06:31.130 --> 00:06:33.680
work in. You have to
use language X, Y, Z,

119
00:06:33.680 --> 00:06:36.980
and there was no real
option outside of that. So

120
00:06:36.980 --> 00:06:39.320
it's, it's cool. It's really
neat to see that there's

121
00:06:39.320 --> 00:06:43.400
another language called Kotlin, which
is being used on Android.

122
00:06:43.580 --> 00:06:46.070
I haven't personally taken a
look at it, but you

123
00:06:46.070 --> 00:06:50.300
have these, all these small
little examples of people bringing

124
00:06:50.300 --> 00:06:52.580
in languages that they care
about. And they like working

125
00:06:52.580 --> 00:06:54.350
in to the platforms that
they want to work in.

126
00:06:55.030 --> 00:06:58.630
Yeah. I'll although I would
have to, I mean, acting

127
00:06:58.630 --> 00:07:00.760
as kind of the advocate
for the people who are

128
00:07:00.760 --> 00:07:03.280
listening right now, cause I'm
kind of their, their voice,

129
00:07:03.730 --> 00:07:08.800
you know, they are hearing
Caitlyn Closure, groovy. It might

130
00:07:08.800 --> 00:07:12.190
sound pretty foreign as they're
driving to their, their text

131
00:07:12.190 --> 00:07:15.700
boxes over data job that
they're doing right now in

132
00:07:15.700 --> 00:07:17.470
whatever language they've been doing
for the last five or

133
00:07:17.470 --> 00:07:20.770
10 years, it, they might
be thinking, you know, I'm

134
00:07:20.770 --> 00:07:24.290
not really that person, I'm
not the computer science, fancy

135
00:07:24.340 --> 00:07:26.920
learn a multiple language type
thing. You know, they read

136
00:07:26.920 --> 00:07:29.140
all these blog posts about
be a polyglot. I'm using

137
00:07:29.140 --> 00:07:34.540
five languages every day and
it sounds exhausting. It can

138
00:07:34.540 --> 00:07:36.550
be. And it, and for
me, I guess just being

139
00:07:36.550 --> 00:07:39.760
an independent consultant, that's, that's
kind of the burden I

140
00:07:39.760 --> 00:07:43.390
have to take upon myself.
I, I have to just

141
00:07:43.390 --> 00:07:47.170
being a lone developer quote,
unquote, beat the averages. There's

142
00:07:47.170 --> 00:07:50.590
a, there's an essay on
hackers and painters. And it's

143
00:07:50.590 --> 00:07:54.460
about beating the averages. He
specifically talks about lists as

144
00:07:54.820 --> 00:07:57.880
as 11 years. I think
Brad Abrams talks about Louis

145
00:07:57.880 --> 00:08:01.330
bezel language and how he
built the Yahoo checkout to,

146
00:08:02.080 --> 00:08:04.930
or he built a checkout
system that competed with Yahoo's

147
00:08:04.960 --> 00:08:08.410
checkout system and list while
everyone else was doing things

148
00:08:08.410 --> 00:08:11.860
in C and how quickly
he was able to create

149
00:08:12.130 --> 00:08:14.560
great, this kind of stuff
was, it was amazing. They,

150
00:08:14.560 --> 00:08:16.570
they actually, there were points
where people were saying you

151
00:08:16.570 --> 00:08:18.340
are stealing our code, or
you've got some kind of

152
00:08:18.730 --> 00:08:21.550
insider mole that is telling
you what our features are,

153
00:08:21.550 --> 00:08:24.700
because there's no way that
you could have built XYZ

154
00:08:24.700 --> 00:08:28.960
that quickly. So from a
personal standpoint, I have to

155
00:08:28.960 --> 00:08:31.510
beat the averages. I have
to look for best of

156
00:08:31.510 --> 00:08:34.360
breed and think about ideas
and, you know, different ways,

157
00:08:34.360 --> 00:08:37.330
just, just so I can
bring that expertise to, you

158
00:08:37.330 --> 00:08:39.430
know, a company that might
be trying to integrate two

159
00:08:39.430 --> 00:08:43.630
languages together or try to
adopt, they do an acquisition.

160
00:08:43.630 --> 00:08:45.970
And they're like, okay, well,
we've got this code base

161
00:08:45.970 --> 00:08:48.430
in language X, and we
have this other code base

162
00:08:48.470 --> 00:08:50.860
language Z and two teams
that don't know how to

163
00:08:50.860 --> 00:08:54.460
communicate. And you know, across
that language gap, how do

164
00:08:54.460 --> 00:08:56.640
we, what do we do?
How do we make this

165
00:08:57.240 --> 00:09:01.890
merger successful? So for me,
it's, it's a personal, personal

166
00:09:01.890 --> 00:09:04.520
effort that I have to
put You did. I want

167
00:09:04.520 --> 00:09:06.830
to slow down one second
though. You did say you

168
00:09:06.830 --> 00:09:09.170
kind of threw out hackers
and painters. Are you referring

169
00:09:09.170 --> 00:09:11.900
to Paul Graham's book? Paul
Graham's book. Sorry. Yeah, not

170
00:09:11.900 --> 00:09:15.440
Brad Abrams. Paul Graham That's okay.
Yeah. So hackers and painters,

171
00:09:15.470 --> 00:09:17.540
big ideas in the computer
age is a series of

172
00:09:17.540 --> 00:09:21.560
essays by Paul Graham. And it's
available on Kindle for just

173
00:09:21.560 --> 00:09:23.990
a couple of bucks. Yep.
And there's a specific essay

174
00:09:23.990 --> 00:09:29.570
in there called beating the
average. Yep. So I see,

175
00:09:29.600 --> 00:09:31.520
I see. Do you think
that it's the world's getting

176
00:09:31.520 --> 00:09:35.660
split into the polyglot and
the non polyglot? Cause you

177
00:09:35.660 --> 00:09:39.280
know, when I, when I
travel, I meet people, there

178
00:09:39.320 --> 00:09:41.090
was this joke. I say,
where was I? I was

179
00:09:41.090 --> 00:09:43.400
in Paris and they were
talking about how, you know,

180
00:09:43.400 --> 00:09:47.030
if you're, you can be
bilingual or trilingual or you

181
00:09:47.030 --> 00:09:49.580
can be American, right. That's
like, that's kind of the

182
00:09:49.580 --> 00:09:51.890
way of thinking. It is
the world splitting like that,

183
00:09:51.890 --> 00:09:55.640
where there's people who speak
Java Python, Scala, node C-sharp,

184
00:09:56.090 --> 00:10:02.330
and then there's sharp developers.
I think the, the amount

185
00:10:02.330 --> 00:10:04.640
of language that you need
to know to consider herself

186
00:10:04.640 --> 00:10:07.850
a polyglot, I think that
bar has dropped personally for

187
00:10:07.850 --> 00:10:11.510
me. So it's not about
knowing all the inner workings

188
00:10:11.510 --> 00:10:15.920
of, of let's say Ruby,
Ruby, and the even class

189
00:10:15.920 --> 00:10:18.800
and how to, how to
get method missing, to do

190
00:10:18.800 --> 00:10:21.470
exactly what you want. Right.
That's, that's a lot of

191
00:10:21.470 --> 00:10:24.290
depth there for a specific
language. So for me, it's

192
00:10:24.290 --> 00:10:26.720
kind of like you can
use the language well enough

193
00:10:27.230 --> 00:10:32.270
to perform an non-trivial task.
So can you, my definition

194
00:10:32.270 --> 00:10:35.060
for, well, enough might be,
can you expose a rest

195
00:10:35.060 --> 00:10:38.000
API that saves to a
data store of some type

196
00:10:38.930 --> 00:10:42.340
and can you do that
automatically in that language and

197
00:10:42.440 --> 00:10:45.800
speak to speak to, you
know, whatever approach that might

198
00:10:45.800 --> 00:10:49.130
be. So I think that's
a component of it being

199
00:10:49.130 --> 00:10:52.010
able to, there's a lot
of information online now, too.

200
00:10:52.250 --> 00:10:55.580
So I think that really
helps generally speaking in knowing

201
00:10:55.580 --> 00:11:00.140
a language quote unquote, well
enough. So that helps lower

202
00:11:00.140 --> 00:11:02.810
that lower, that barrier to
entry and lower that bar.

203
00:11:04.190 --> 00:11:08.480
Yeah. What is well enough
though? Right. Like, you know,

204
00:11:08.480 --> 00:11:13.070
I took four or five
years of Spanish in high

205
00:11:13.070 --> 00:11:17.360
school and I can order
Chipotle like a beast. But

206
00:11:17.390 --> 00:11:20.450
if we start talking about
like, like, what is it

207
00:11:20.450 --> 00:11:23.180
like, you know, past present
participle or whatever, you know,

208
00:11:23.180 --> 00:11:25.520
like I would have possibly
in the future maybe have

209
00:11:25.520 --> 00:11:28.670
done this tense, then it's
like, Whoa, Whoa, Whoa. You

210
00:11:28.670 --> 00:11:30.230
know, and I feel the
same way when I start

211
00:11:30.230 --> 00:11:35.960
using JavaScript. Right. And it's
subjective from that standpoint for

212
00:11:35.960 --> 00:11:38.150
me, as far as when
I try to pick up

213
00:11:38.150 --> 00:11:40.700
a new language, first thing
I'll do is read the

214
00:11:40.700 --> 00:11:44.990
language spec right here. What's
the language specification, what are

215
00:11:44.990 --> 00:11:47.180
they trying to convey from
the language? What's the high

216
00:11:47.180 --> 00:11:50.840
level ideas of the language
itself. And then after that,

217
00:11:50.840 --> 00:11:53.950
I've got a suite of
sample that had built out.

218
00:11:54.580 --> 00:11:56.680
One of them is like
a word finder. Basically I

219
00:11:56.680 --> 00:12:00.100
build a website, you put
in some random characters, like

220
00:12:00.100 --> 00:12:03.010
a red jacks or some
question marks saying that it

221
00:12:03.010 --> 00:12:06.070
contains starts with an a,
has five characters ends with

222
00:12:06.070 --> 00:12:08.260
the Z gives me all
the words that are available

223
00:12:08.260 --> 00:12:11.590
in that, in that, in
that vicinity primarily just so

224
00:12:11.590 --> 00:12:14.440
I can beat my wife
at words with friends. So

225
00:12:14.470 --> 00:12:16.870
that's, that's kind of one
of my sample apps that

226
00:12:16.870 --> 00:12:18.850
I build out in a
specific language. And I say,

227
00:12:18.850 --> 00:12:21.310
okay, well, can I build
the sample up as far

228
00:12:21.310 --> 00:12:24.010
as well enough? I think
I've kind of gone to

229
00:12:24.010 --> 00:12:28.750
parts where if you have,
I'd say 160 hours of

230
00:12:28.930 --> 00:12:31.990
development with that language, so
a good month of full

231
00:12:31.990 --> 00:12:35.800
time development in that language,
you're, you're at a nontrivial

232
00:12:35.800 --> 00:12:37.840
point of understanding and being
able to speak to that

233
00:12:37.840 --> 00:12:42.540
language. That seems quite surprisingly
short. Yeah. And, and it

234
00:12:42.540 --> 00:12:44.730
goes back to that bar,
right? I'm not saying that

235
00:12:44.730 --> 00:12:48.420
you have to be exceptional
and just know the inner

236
00:12:48.420 --> 00:12:51.480
workings of a specific language
it's it's about, you can

237
00:12:51.480 --> 00:12:54.900
speak to it at a
nontrivial level and do something,

238
00:12:55.620 --> 00:12:58.650
do something with it, write
it more than just print

239
00:12:58.650 --> 00:13:04.080
out. Hello world. I sometimes
split up what I, I

240
00:13:04.080 --> 00:13:05.820
think about it in context
of what I need to

241
00:13:05.820 --> 00:13:08.940
know, what I should know,
what would be nice to

242
00:13:08.940 --> 00:13:11.070
know, and then what starts
to get trivia, you know,

243
00:13:11.070 --> 00:13:12.720
if I kind of draw
and I have to just

244
00:13:12.720 --> 00:13:14.670
draw a line, I have
to decide, I am not

245
00:13:14.670 --> 00:13:19.260
going to be esoteric Swift
language person. Right. Right. And

246
00:13:19.260 --> 00:13:22.020
that's fair. And even, even
with my own, when I

247
00:13:22.020 --> 00:13:26.370
decided to pick a language
to learn it's there's components

248
00:13:26.370 --> 00:13:29.100
to it, there's, it's not
just about the, the study,

249
00:13:29.110 --> 00:13:32.850
the language. I still consider
myself extremely proficient in quote,

250
00:13:32.850 --> 00:13:35.940
unquote, expert level at C
sharp Ruby and JavaScript. Those

251
00:13:35.940 --> 00:13:40.860
are my three most marketable
languages. I have proficiency. I

252
00:13:40.860 --> 00:13:44.340
would say I'm, you know,
intermediate proficient intermediately proficient in

253
00:13:44.340 --> 00:13:48.840
like F sharp enclosure. But
those fall at a they're

254
00:13:48.840 --> 00:13:51.660
at a different level than,
than with C sharp. But

255
00:13:51.660 --> 00:13:54.780
I can speak to people,
you know, in, in each

256
00:13:55.000 --> 00:13:57.960
one of those languages and
paradigms. And you just have

257
00:13:57.960 --> 00:14:01.530
to, sometimes you gotta pick
and as you learn more

258
00:14:01.530 --> 00:14:04.890
languages, you get better at
kind of figuring out, wait,

259
00:14:04.890 --> 00:14:07.110
what other languages I learned?
So an example would be,

260
00:14:07.110 --> 00:14:11.220
I know Ruby really well.
I can learn Python, but

261
00:14:11.310 --> 00:14:13.980
I could probably gain more
from learning a different language

262
00:14:13.980 --> 00:14:16.440
just because Ruby and Python
were kind of close to

263
00:14:16.440 --> 00:14:22.140
each other. There are there
differences, but I will sharpen

264
00:14:22.140 --> 00:14:26.100
Java. Exactly, exactly. So, you
know, you just get better

265
00:14:26.100 --> 00:14:28.770
at better at doing stuff.
Now, like specifically with Java

266
00:14:28.770 --> 00:14:32.130
script, that has been a
bittersweet. I have a, I

267
00:14:32.130 --> 00:14:34.950
have a love, hate relationship
with JavaScript and, you know,

268
00:14:34.950 --> 00:14:39.720
it's, it's that tricky area.
Where do I, so just

269
00:14:39.720 --> 00:14:43.020
to touch on some of
aspects of organizing language, do

270
00:14:43.020 --> 00:14:47.280
I see JavaScript as a
class oriented language or do

271
00:14:47.280 --> 00:14:50.340
I see it as a
functional language? So I try

272
00:14:50.340 --> 00:14:54.140
to emphasize using the word
class oriented because saying object

273
00:14:54.140 --> 00:14:57.460
oriented seems too general to
me. And especially with the

274
00:14:57.470 --> 00:15:00.830
experience that I have now.
So a Java, so a

275
00:15:00.830 --> 00:15:04.340
class, I see a class
as a, me as a

276
00:15:04.340 --> 00:15:07.910
factory method for generating an
object. It's a specific type

277
00:15:07.910 --> 00:15:10.850
of method. It's a specific
type of technique for generating

278
00:15:10.850 --> 00:15:14.030
an object. But at the
end of the day, generally

279
00:15:14.030 --> 00:15:17.150
speaking a class is a
means to generate an object.

280
00:15:17.540 --> 00:15:19.400
So you can generate an
object through a function. You

281
00:15:19.400 --> 00:15:24.170
can generate an object arbitrarily
through maybe some form of

282
00:15:24.170 --> 00:15:27.950
reflection. There's so many different
ways to generate an object,

283
00:15:28.010 --> 00:15:29.900
a class being one of
them. So when I look

284
00:15:29.900 --> 00:15:36.080
at JavaScript is JavaScript right
now, JavaScript, IES, or <inaudible>

285
00:15:37.010 --> 00:15:41.150
old school JavaScript. Now, what
is that? It's a complete

286
00:15:41.150 --> 00:15:44.110
mess, but what can it
be? Is it a classroom

287
00:15:44.120 --> 00:15:46.640
to language or is it
a functional language? And then

288
00:15:46.640 --> 00:15:49.220
that's when you, that's, when
you get kind of in

289
00:15:49.220 --> 00:15:53.900
both philosophical aspects of how
you perceive languages. And for

290
00:15:53.900 --> 00:15:57.530
me, Java script fell more
into a functional language. That's

291
00:15:57.530 --> 00:16:01.130
why I try to do
more closure script or pure

292
00:16:01.130 --> 00:16:05.620
script or Elm, as opposed
to maybe, you know, ECMO

293
00:16:05.640 --> 00:16:09.770
2016 or 2016 or TypeScript.
But that's, it, it gets,

294
00:16:10.080 --> 00:16:14.510
you start delving into the
depths of what, where you

295
00:16:14.510 --> 00:16:17.920
want to see the language
go. Well, let's, let's talk

296
00:16:17.920 --> 00:16:21.220
a little bit about the,
the mindset and the thinking

297
00:16:21.220 --> 00:16:23.380
about people who do well
as polyglots and people who

298
00:16:23.380 --> 00:16:27.340
don't do you think that
people use the base language

299
00:16:27.340 --> 00:16:32.200
that they start from and
then look for parallels. And

300
00:16:32.200 --> 00:16:36.370
they say, Oh, well this,
this structure, this language construct

301
00:16:36.400 --> 00:16:39.790
in language Fu is like,
is like, C-sharp. Cause I

302
00:16:39.790 --> 00:16:42.820
speak that. Or if they
started with JavaScript or they

303
00:16:42.820 --> 00:16:45.520
learned a particular language first,
they would set themselves up

304
00:16:45.520 --> 00:16:47.500
for success more than if
they learn to know The

305
00:16:47.500 --> 00:16:50.650
language. Yes. And that's exactly
how I approached it. So

306
00:16:50.650 --> 00:16:53.980
with C sharp being my
first language, I went to

307
00:16:53.980 --> 00:16:57.010
Ruby and I try to
write, it's a, it's a

308
00:16:57.010 --> 00:16:59.320
part of growing with the
language, but I try to

309
00:16:59.320 --> 00:17:02.740
write C sharp and Ruby.
So I was like, Oh,

310
00:17:02.740 --> 00:17:05.290
I'm going to create a
IOC container for Ruby. And

311
00:17:05.440 --> 00:17:09.040
only after a while that
I realized, well, dependency, injection

312
00:17:09.040 --> 00:17:11.140
is a thing in Ruby,
and you can do that,

313
00:17:11.140 --> 00:17:13.840
but you don't need an
IOC container and Ruby. So

314
00:17:13.840 --> 00:17:16.690
that was one of those
things where you, you, you

315
00:17:16.690 --> 00:17:19.300
get some growing pains and
then you, your mind starts

316
00:17:19.630 --> 00:17:23.560
bending and opening up to
different, different approaches to language.

317
00:17:23.860 --> 00:17:27.040
And that it's, it's good
and bad. You bring the

318
00:17:27.040 --> 00:17:30.160
baggage, but also you bring
the perspective. So then when

319
00:17:30.160 --> 00:17:32.320
you go back to your
language, you can, you can

320
00:17:32.320 --> 00:17:35.080
speak to you. You can
speak in different ways or

321
00:17:35.080 --> 00:17:38.500
in different contexts. I like
to compare it to let's

322
00:17:38.500 --> 00:17:41.020
say. And so in Urdu,
that's another language that I

323
00:17:41.020 --> 00:17:45.880
speak. Jimmy clear Hulu is
a language, language, not a

324
00:17:45.880 --> 00:17:50.100
programming language. Yes. There was
a language language. And inter

325
00:17:50.100 --> 00:17:54.450
interestingly enough, it's like Hindi,
except it uses the Arabic

326
00:17:54.480 --> 00:17:57.960
alphabet as opposed to the
Hindi alphabet set. So when

327
00:17:57.960 --> 00:18:01.380
someone says they can speak
in Hindi, I can understand

328
00:18:01.380 --> 00:18:03.240
them for the most part,
unless they, you, unless they're

329
00:18:03.240 --> 00:18:09.300
doing extremely, you know, thesis
level doctoral level esoteric can

330
00:18:09.300 --> 00:18:11.850
be, I can, I can
converse with them. But when,

331
00:18:11.930 --> 00:18:16.260
when talking about family members,
there are very specific ways

332
00:18:16.260 --> 00:18:18.570
that you introduce a family
member. So it's not like,

333
00:18:18.600 --> 00:18:20.550
Oh, this is my uncle.
This is my aunt. You

334
00:18:20.550 --> 00:18:22.950
would, you would introduce them
as, Oh, this is my

335
00:18:22.950 --> 00:18:30.990
father's youngest brother or, or
my wife's brother. Brother-in-law's sister.

336
00:18:31.020 --> 00:18:35.940
There's, there's very specific words
for, for denoting one person

337
00:18:35.940 --> 00:18:40.420
another. So when you get,
so just from me, understanding,

338
00:18:40.680 --> 00:18:46.050
understanding, I have, I have,
I guess, almost a, a

339
00:18:46.080 --> 00:18:50.670
underlying appreciation for the relationships,
different family members have as

340
00:18:50.670 --> 00:18:53.310
opposed to just being an
aunt or uncle. And I

341
00:18:53.310 --> 00:18:55.950
think that that holds true
for language is also when

342
00:18:55.950 --> 00:19:00.240
you start looking at different
languages, some suddenly it means

343
00:19:00.240 --> 00:19:02.790
something to say, Oh, this
is a Singleton method. Or

344
00:19:03.090 --> 00:19:05.370
this is a class method
or an instance method, as

345
00:19:05.370 --> 00:19:09.330
opposed to just a static
method or, or, or object

346
00:19:09.560 --> 00:19:12.750
methadone in class. So those,
those things you bring back

347
00:19:12.750 --> 00:19:17.330
and you're able to explore
a bit more, The, the

348
00:19:17.330 --> 00:19:20.180
does the PR is the
parallel, really a good parallel

349
00:19:20.180 --> 00:19:24.650
between speaking a, a speaking,
a language, a human language

350
00:19:24.980 --> 00:19:28.730
and learning, and in quote,
unquote speaking, a programming language.

351
00:19:28.760 --> 00:19:31.940
Cause like, I feel like
I speak like a child

352
00:19:31.940 --> 00:19:34.130
in Spanish. So then if
I learned Python, I feel

353
00:19:34.130 --> 00:19:36.220
like I will be speaking
like a child for, for

354
00:19:36.230 --> 00:19:40.830
a while, until it clicks.
There is parallel primarily if,

355
00:19:40.830 --> 00:19:45.170
if not, if not at
the syntactical level, like speaking,

356
00:19:45.200 --> 00:19:48.890
forming sentences, once you start
getting into the aspect of

357
00:19:49.280 --> 00:19:52.100
why does this language exist,
or why do people code

358
00:19:52.100 --> 00:19:54.590
in this language? You start
getting into the deeper aspects

359
00:19:54.590 --> 00:19:57.620
of the philosophy of the
language itself. So, you know,

360
00:19:57.620 --> 00:20:01.550
like with ortho, there is
a heavy emphasis on, on

361
00:20:01.610 --> 00:20:05.090
maybe familial bonds. Or I
think Mandarin has a very

362
00:20:05.090 --> 00:20:08.570
specific means of saying some
things in the future. So

363
00:20:08.570 --> 00:20:10.730
you can't, you can't just
say, Oh, I'll eventually do

364
00:20:10.730 --> 00:20:12.650
this. You have to be
very specific or you can

365
00:20:12.650 --> 00:20:16.160
be more specific about when
you plan to do this.

366
00:20:16.490 --> 00:20:20.900
And I think that makes,
makes them people that know

367
00:20:20.900 --> 00:20:24.560
Mandarin probably better savers because
they are better planners because

368
00:20:24.560 --> 00:20:27.380
they know they have to
be more specific about those

369
00:20:27.380 --> 00:20:31.010
things. So when, when I
look at a language, it,

370
00:20:31.250 --> 00:20:34.220
yeah, there's some, some syntactical
aspects of it. And those

371
00:20:34.220 --> 00:20:37.610
things grow with grow with
time, as you learn, as

372
00:20:37.610 --> 00:20:39.620
you use the language more.
So, yeah. You'll start off

373
00:20:39.620 --> 00:20:43.160
with very simple sentences. You
may expand on that, but

374
00:20:43.310 --> 00:20:46.610
focusing in on why that
language exists or what's the

375
00:20:46.610 --> 00:20:50.590
philosophy idiomatic about this language?
I think that really helps.

376
00:20:51.640 --> 00:20:54.490
There's a, there's a great
talk by rich Hickey called

377
00:20:54.490 --> 00:20:58.510
simple, made easy it's about
closure and he talks about

378
00:20:58.510 --> 00:21:01.180
closure a little bit and
there, but he speaks to

379
00:21:01.210 --> 00:21:04.540
why closure? Why is it,
why did you build the

380
00:21:04.540 --> 00:21:08.380
language? What systematic about it?
You have Matsumoto who did

381
00:21:08.380 --> 00:21:11.830
a Ruby. He cares about,
you know, developer happiness. That

382
00:21:11.830 --> 00:21:13.840
was one of the reasons
why I developed that language.

383
00:21:14.080 --> 00:21:17.320
And how is that conveyed
through the language itself? So

384
00:21:17.320 --> 00:21:20.710
there's a community component to,
to these kinds of systems

385
00:21:20.710 --> 00:21:24.240
and these languages that exist.
What do you say to

386
00:21:24.240 --> 00:21:27.360
people who have a fear
that to learn these new

387
00:21:27.360 --> 00:21:30.000
languages? Because just like I'm
ashamed to use my, my

388
00:21:30.030 --> 00:21:32.460
Spanish in public because I
will sound like, I don't

389
00:21:32.460 --> 00:21:34.770
know what I'm doing. It
can be a little overwhelming

390
00:21:34.770 --> 00:21:37.290
to see this amazing rich
community of people speaking a

391
00:21:37.290 --> 00:21:40.320
language and then, or learning
a programming language. And then,

392
00:21:40.320 --> 00:21:43.080
you know, you're going to
ask a dumb question. I

393
00:21:43.080 --> 00:21:47.370
think we, we underestimate ourselves
as a developer, as developers.

394
00:21:47.400 --> 00:21:51.750
And I it's, I think
a aspect of empowerment saying

395
00:21:51.750 --> 00:21:54.690
that, you know, it's okay,
you'll learn the language. It's

396
00:21:54.690 --> 00:21:59.850
a different paradigm. There's, don't
feel defeated and just work

397
00:21:59.850 --> 00:22:02.910
with it. You're a professional.
You're really smart. Especially if

398
00:22:02.910 --> 00:22:07.440
you're a developer, chances are,
you're smarter than a regular

399
00:22:07.440 --> 00:22:10.020
human being. At least I'd
like to think so. So,

400
00:22:10.020 --> 00:22:12.540
you know, don't, don't sell
yourself self sort from that

401
00:22:12.540 --> 00:22:15.570
standpoint and just be open
to it. Like an example

402
00:22:16.210 --> 00:22:19.410
that I've, I've really struggled
with personally is trying to

403
00:22:19.410 --> 00:22:23.310
convey, you know, someone picking
up, picking up F sharp,

404
00:22:23.310 --> 00:22:25.350
if they know C sharp.
And again, just, just for

405
00:22:25.350 --> 00:22:30.300
the audience that maybe listening
to this, I know a

406
00:22:30.300 --> 00:22:32.880
lot of people emphasize the
F sharp aspect of it

407
00:22:32.880 --> 00:22:35.070
saying, Oh, it's a functional
language. That's why you want

408
00:22:35.070 --> 00:22:38.100
to learn it. Maybe a
different, a different premise would

409
00:22:38.100 --> 00:22:41.130
be well, think of F
sharp as providing more of

410
00:22:41.130 --> 00:22:45.000
a spectrum to, to options
that you may not find

411
00:22:45.000 --> 00:22:47.190
in C sharp. So in
C sharp, you have value

412
00:22:47.190 --> 00:22:49.890
types and you have reference
types. You can create a

413
00:22:49.890 --> 00:22:52.170
class, you can create a
value type and you can

414
00:22:52.170 --> 00:22:56.040
create an extension method, but
that's kind of your, your

415
00:22:56.040 --> 00:22:58.530
spectrum. And I've sharp. You
have a bit of an

416
00:22:58.530 --> 00:23:00.900
evolution. You can, you can
create a value type. You

417
00:23:00.900 --> 00:23:03.390
can create a tool. You
can create a discriminated union,

418
00:23:03.390 --> 00:23:05.400
which is a little bit
more complex. You can create,

419
00:23:05.700 --> 00:23:08.640
you can create a record
type, which is another step

420
00:23:08.640 --> 00:23:11.760
in that spectrum. And you
can create a class, which

421
00:23:11.760 --> 00:23:15.240
is the final, final step.
It's like bringing the Canon

422
00:23:15.240 --> 00:23:19.050
to a, to a gunfight
maybe. But that evolutionary aspect

423
00:23:19.050 --> 00:23:21.390
is intrinsic in the language.
And it's going to be

424
00:23:21.390 --> 00:23:24.930
intrinsic in yourself, learning a
specific language, same thing with

425
00:23:24.930 --> 00:23:27.540
Ruby. You start with the
bare class that has one

426
00:23:27.540 --> 00:23:30.000
method, Oh, just a line
in there, you know, puts

427
00:23:30.000 --> 00:23:32.970
a little world. Then you
create a function and it's

428
00:23:32.970 --> 00:23:34.980
a bear method. It hangs
off a Colonel. You don't

429
00:23:35.010 --> 00:23:36.900
see, you don't have to
know that while using it.

430
00:23:37.230 --> 00:23:39.210
You can just create a
bare method and then you

431
00:23:39.210 --> 00:23:41.580
create a module and then
you create a class. So

432
00:23:41.580 --> 00:23:46.730
that evolution exists. And you'll
find, you'll find those evidence.

433
00:23:46.760 --> 00:23:49.160
You'll find that kind of
evidence or those aspects of

434
00:23:49.160 --> 00:23:53.090
language where it will let
you start small and then

435
00:23:53.090 --> 00:23:57.250
grow with it. Where do
you think people should start?

436
00:23:57.250 --> 00:24:01.180
Is there an ideal first
language It's dependent on what

437
00:24:01.180 --> 00:24:03.460
language you already know? So
for C sharp, if you

438
00:24:03.460 --> 00:24:06.910
know, C sharp learn statically
type functional language F sharp

439
00:24:06.910 --> 00:24:10.030
is familiar from the perspective
you can use the BCL,

440
00:24:10.330 --> 00:24:13.150
that's a great language to
get into. Then you might

441
00:24:13.150 --> 00:24:15.910
want to try maybe objective
C just to kind of

442
00:24:15.910 --> 00:24:19.930
see what a message based
language looks like. It's still

443
00:24:19.930 --> 00:24:22.510
kind of statically typed, but
you know, it gives you

444
00:24:22.510 --> 00:24:26.580
an option to kind of
explore message passing and how

445
00:24:26.620 --> 00:24:29.920
that works. If you're a
Ruby developer, I wouldn't recommend

446
00:24:29.920 --> 00:24:34.150
C sharp, maybe JavaScript just
to see a weekly type

447
00:24:34.150 --> 00:24:37.870
language that has some functional
components. If you know, JavaScript

448
00:24:38.230 --> 00:24:41.920
suddenly, you know, TypeScript, he
has 2016 pure script at

449
00:24:41.920 --> 00:24:45.760
those all become options. So
there's, there's that progression that

450
00:24:45.760 --> 00:24:49.300
familiarity that you have to,
you have to be a

451
00:24:49.300 --> 00:24:53.860
part of, to, to really,
really work towards. So yeah,

452
00:24:53.890 --> 00:24:56.290
if you're a C sharp
developer, Ruby probably wouldn't be

453
00:24:56.290 --> 00:24:58.180
the best language to learn
right off the bat because

454
00:24:58.210 --> 00:25:01.600
there's so many differences there.
And it's, it's a matter

455
00:25:01.600 --> 00:25:04.570
of finding that progression. I'll
I have an actual, a

456
00:25:04.570 --> 00:25:08.890
link or just that kind
of has pads to learning

457
00:25:08.890 --> 00:25:11.140
a new language and I'll,
and I'll put, I'll give

458
00:25:11.140 --> 00:25:12.700
that to you. So you
can share that in your,

459
00:25:12.700 --> 00:25:15.580
in your show notes, but
yeah, it really depends on

460
00:25:15.580 --> 00:25:18.820
what language you're coming from.
How much is the language

461
00:25:18.820 --> 00:25:21.220
and how much is the
environment? Cause sometimes I find

462
00:25:21.220 --> 00:25:24.370
I'll spend more time with
the, how to bring in

463
00:25:24.370 --> 00:25:26.710
new libraries and how to
figure out how PI, you

464
00:25:26.710 --> 00:25:29.890
know, where Python puts all
its stuff. Yeah. I think,

465
00:25:30.190 --> 00:25:33.460
I think there's a lot
of online, online information. I

466
00:25:33.460 --> 00:25:36.580
think that's seriously helped it.
The Lennox subsystem on windows

467
00:25:36.580 --> 00:25:39.310
10, I think that's gonna
help leaps and bounds on

468
00:25:39.310 --> 00:25:42.520
people picking up a new
language. It's it is a

469
00:25:42.520 --> 00:25:46.000
component though, when I first
started learning Ruby, that was

470
00:25:46.000 --> 00:25:47.830
the first time I've ever
been out of visual studio.

471
00:25:47.830 --> 00:25:51.340
So I went whole hog
and went them against my

472
00:25:51.340 --> 00:25:53.800
better judgment, but I did
it and I am the

473
00:25:53.800 --> 00:25:57.430
editor, the editor, the editor,
and then even the editor

474
00:25:57.430 --> 00:26:00.640
was great. I now use
Emacs, which is again, a

475
00:26:00.640 --> 00:26:03.340
whole nother story, but I
still use VIN bindings. So

476
00:26:03.340 --> 00:26:07.780
the motion keys and the
ability to manipulate languages through

477
00:26:07.780 --> 00:26:12.820
that consistent set of bindings
made it a lot easier.

478
00:26:13.420 --> 00:26:17.230
But yeah, there's, it's their
pain points and you just

479
00:26:17.230 --> 00:26:19.930
kinda have to work through
them and you might want

480
00:26:19.930 --> 00:26:23.050
to pick an editor that's
that has quote unquote batteries

481
00:26:23.050 --> 00:26:28.480
included like sublime add electron
based cider, like vs code.

482
00:26:28.810 --> 00:26:31.720
Those things will help, but
there's a growing pain there

483
00:26:31.780 --> 00:26:33.700
and you just kind of
have to work with it.

484
00:26:33.980 --> 00:26:37.120
As you, as you go
through, You say batteries included,

485
00:26:37.120 --> 00:26:40.000
you're saying fine, you know,
decide how much handholding you

486
00:26:40.000 --> 00:26:44.100
want your editor. Yeah. Do
you want it to hide

487
00:26:44.100 --> 00:26:46.290
things from you or do
you want to learn those

488
00:26:46.290 --> 00:26:48.000
things and then choose to
have them hidden from you

489
00:26:48.360 --> 00:26:53.100
and, and know that no,
that eventually, eventually you'll, depending

490
00:26:53.100 --> 00:26:55.260
on what I guess, depending
on how you think you

491
00:26:55.260 --> 00:26:57.960
may want to dig into
how the editor works or

492
00:26:58.200 --> 00:27:01.320
really fine tune it, that's
kind of my progression to,

493
00:27:01.350 --> 00:27:04.230
you know, why I use
a ridiculous header, like Emacs,

494
00:27:05.070 --> 00:27:06.660
because that's kind of how
my brain works. I like

495
00:27:06.660 --> 00:27:08.820
to tinker. And that was
the one editor that let

496
00:27:08.820 --> 00:27:11.490
me tinker out a very,
very, all the way down,

497
00:27:11.490 --> 00:27:14.880
right. At the, at the
lowest level, I can change,

498
00:27:14.940 --> 00:27:17.580
you know, key bindings and
make them do ridiculous things.

499
00:27:17.580 --> 00:27:22.560
And, and actually co-manager from
that standpoint, but it's, it's

500
00:27:22.560 --> 00:27:25.410
one of those things that
will help it. So one

501
00:27:25.410 --> 00:27:28.500
thing learn editor that you
can maybe take with you.

502
00:27:28.890 --> 00:27:31.200
I think, I think that
can make things a lot

503
00:27:31.200 --> 00:27:34.830
easier. And then of course
the Linux subsystem OSX, or

504
00:27:34.830 --> 00:27:38.340
just using a virtual machine
virtualization, virtualized environments, all those

505
00:27:38.340 --> 00:27:41.330
things really help. You're going
to put together a list

506
00:27:41.390 --> 00:27:43.490
of, you said you have
a, just, that has some

507
00:27:43.490 --> 00:27:47.030
of your thoughts. Yes. Yeah.
I have adjusted basically evolution

508
00:27:47.030 --> 00:27:50.180
of like, if I know
language X, what would be

509
00:27:50.180 --> 00:27:53.330
a, what language I learned
that I'll have a high

510
00:27:53.330 --> 00:27:57.710
success of, of actually being
able to be proficient. So

511
00:27:57.710 --> 00:27:59.630
almost a language tree in
the sense of, I know

512
00:27:59.630 --> 00:28:02.090
Spanish, I should go and
learn French now as opposed

513
00:28:02.090 --> 00:28:07.730
to I know Spanish should.
Yeah, exactly, exactly Interesting. That

514
00:28:07.760 --> 00:28:10.280
that's actually, it would be
an extremely useful thing because

515
00:28:10.280 --> 00:28:13.190
I think that there are
people who decide to go

516
00:28:13.190 --> 00:28:17.120
from, you know, English to
finish and they are completely

517
00:28:17.120 --> 00:28:20.240
different languages, but if they
took a couple of stepping

518
00:28:20.240 --> 00:28:22.790
stones, they might find their
way to those languages a

519
00:28:22.790 --> 00:28:27.500
little more easily. Yeah. And
from my perspective, it's, there's

520
00:28:27.500 --> 00:28:29.330
an aspect of learning a
language for the sake of

521
00:28:29.330 --> 00:28:33.560
learning language. But I do,
I do understand, I do

522
00:28:33.560 --> 00:28:36.320
empathize with the aspect of,
you know, I'm not using

523
00:28:36.320 --> 00:28:40.310
this on my day job.
What benefit do I, does

524
00:28:40.310 --> 00:28:43.160
it really bring to me?
And it's a component you

525
00:28:43.160 --> 00:28:46.490
have to think about that.
Is it really worth learning

526
00:28:47.510 --> 00:28:51.500
Swift if you're primarily doing
backend, you know, dot net

527
00:28:51.500 --> 00:28:55.820
development, or is it worth
learning a Ruby, if all

528
00:28:55.820 --> 00:28:57.980
you're doing is mobile and
might not be worth it.

529
00:28:58.700 --> 00:29:01.910
So there's there's aspects that
have to be away from

530
00:29:01.910 --> 00:29:05.090
that perspective. But generally speaking,
I think learning a new

531
00:29:05.090 --> 00:29:09.890
language, especially in a different
paradigm emphasis on that makes

532
00:29:09.890 --> 00:29:12.530
you a better developer. It
really does. It lets you

533
00:29:12.530 --> 00:29:16.370
think differently. It lets you
kind of maybe even bring

534
00:29:16.370 --> 00:29:19.340
back some good things from
that language or the ecosystem,

535
00:29:19.340 --> 00:29:23.510
just the tooling or the
philosophies that they, that they

536
00:29:23.510 --> 00:29:27.350
have with, with a large
SWAT of things, project structure,

537
00:29:27.590 --> 00:29:30.560
dependency management, et cetera, et
cetera. So I think it

538
00:29:30.560 --> 00:29:34.190
just makes you a better
developer. And have you, You

539
00:29:34.190 --> 00:29:36.020
found that as you got
to the point where you

540
00:29:36.020 --> 00:29:38.480
are competent in multiple languages,
that you're more likely to

541
00:29:38.480 --> 00:29:41.860
just dive in to the
next language. It much easier.

542
00:29:41.860 --> 00:29:44.650
It becomes Really, really easy
to jump into the net

543
00:29:44.680 --> 00:29:47.260
next language. The other, the
downside is that you start

544
00:29:47.260 --> 00:29:50.620
hating every language too. So
you'll, you'll start looking at

545
00:29:50.620 --> 00:29:52.690
a language like, man, I
wish it had a, you

546
00:29:52.690 --> 00:29:55.540
know, C sharps type inference
or F sharps I type

547
00:29:55.540 --> 00:29:58.570
in ferns or man, I
wish, I wish it was,

548
00:29:58.780 --> 00:30:02.350
wasn't so painful to create,
you know, this poco object

549
00:30:02.350 --> 00:30:05.200
or plain old CLR object
or plain old object or,

550
00:30:05.650 --> 00:30:08.950
Oh, why can't reflection work
a little bit better or

551
00:30:09.400 --> 00:30:11.500
a reflection is too good.
You know, all those different

552
00:30:11.500 --> 00:30:14.530
variations come into play then.
And so you started hating

553
00:30:14.530 --> 00:30:16.630
languages, all of them, you
just start hating all of

554
00:30:16.630 --> 00:30:20.190
them and you have multiple
personality disorder. You have multiple

555
00:30:20.190 --> 00:30:25.050
personality disorder. Yeah, yeah. You,
yeah. Multiple personality disorder, what

556
00:30:25.050 --> 00:30:29.580
languages there'll be situations where
I'll be doing some, some

557
00:30:29.580 --> 00:30:34.260
C-sharp code and I'll use
dynamic. And I don't think

558
00:30:34.260 --> 00:30:35.760
about it now. And it's
like, Oh, I'm just gonna,

559
00:30:35.760 --> 00:30:37.980
you know, use the dynamic
keyword here. I'm use an

560
00:30:37.980 --> 00:30:40.890
expando object or something because
I don't want to go

561
00:30:40.890 --> 00:30:42.630
with, I don't want to
deal with making a type.

562
00:30:43.050 --> 00:30:46.020
And I don't think too
much about what kind of

563
00:30:46.080 --> 00:30:49.020
other implications that could have
on the code base where

564
00:30:49.020 --> 00:30:52.200
people reading the code base.
So it gets kind of

565
00:30:52.200 --> 00:30:57.030
weird. Yeah. Well, I, I
appreciate this. I, I hope

566
00:30:57.030 --> 00:30:59.430
that people who are listening
maybe who only know one

567
00:30:59.430 --> 00:31:02.340
language will go and give
it a try and pick

568
00:31:02.340 --> 00:31:08.870
something that is, you know,
possible, you know, if they

569
00:31:08.910 --> 00:31:10.860
picked something that as, you
know, if you know, C

570
00:31:10.860 --> 00:31:12.630
sharp, maybe learn a little
Java or learn a little

571
00:31:12.630 --> 00:31:15.780
Swift, something that is a,
a friendly curly brace language

572
00:31:15.780 --> 00:31:17.700
and then move your way
to another one. Yeah. And

573
00:31:17.910 --> 00:31:19.950
I have a, I have
a, just a quasi funny

574
00:31:19.950 --> 00:31:23.430
story or interesting story with
regards to real languages or

575
00:31:23.430 --> 00:31:26.760
learning real languages. And I,
I find it interesting. I

576
00:31:26.760 --> 00:31:30.000
don't think it's in any
way related maybe, but during

577
00:31:30.000 --> 00:31:34.260
the colonization of, of India
with, with a British coming

578
00:31:34.260 --> 00:31:37.230
in, they were, they would
come down and, you know,

579
00:31:37.230 --> 00:31:41.260
they'll have Indian servants that
would, would cater to what

580
00:31:41.280 --> 00:31:44.640
they needed during the colonization
period. And they didn't know

581
00:31:44.640 --> 00:31:48.180
Hindi at all. So there
was the interesting thing that

582
00:31:48.180 --> 00:31:51.480
came out was that you
would have linguists that would

583
00:31:51.870 --> 00:31:56.280
train British people to speak
an, an English sentence and

584
00:31:56.280 --> 00:31:59.700
then quote, unquote, magically have
someone that doesn't speak English,

585
00:31:59.710 --> 00:32:02.820
do something for them. So
an example was when you

586
00:32:02.820 --> 00:32:06.900
say there was a Brown
Crow, literally, meaning there was

587
00:32:06.900 --> 00:32:10.080
a Brown Crow, like a
bird, someone would close the

588
00:32:10.080 --> 00:32:11.940
door or the servant would
close the door for you

589
00:32:11.940 --> 00:32:15.630
because there was a Brown
Crow is almost a cognate

590
00:32:15.630 --> 00:32:20.100
for the <inaudible>, which means
close the door. And there

591
00:32:20.100 --> 00:32:23.730
was a cold day means
there was a cold day.

592
00:32:23.760 --> 00:32:26.730
Right. But it also means
open the door and in

593
00:32:26.730 --> 00:32:31.170
Hindi. So there were like
these really interesting cognates almost,

594
00:32:31.170 --> 00:32:33.570
or transitions between languages that
you see and you kind

595
00:32:33.570 --> 00:32:35.690
of, you, you kind of
get a feel for, for

596
00:32:35.700 --> 00:32:39.800
those kinds of same cold
corollaries between between one language,

597
00:32:39.800 --> 00:32:42.350
to another One programming language
to another. So I figured

598
00:32:42.350 --> 00:32:44.300
that was just a nice
story to tell. Was it

599
00:32:44.300 --> 00:32:47.630
just those kinds of things
happen a lot? They are

600
00:32:47.630 --> 00:32:51.620
confusing. I think though that
you've, you've, you've, you've made

601
00:32:51.620 --> 00:32:53.270
me feel like I'll be
able to go out there

602
00:32:53.270 --> 00:32:56.300
and be more bold and
try new languages and maybe

603
00:32:56.300 --> 00:33:02.720
not be afraid to say
like <inaudible> whatever. Right. Just

604
00:33:02.720 --> 00:33:04.340
go for it and just
go for it. I think

605
00:33:04.340 --> 00:33:07.940
that's, that's the other aspect
of it, you know, explore.

606
00:33:08.240 --> 00:33:11.750
There's plenty of information out
there. And generally speaking, the

607
00:33:11.750 --> 00:33:15.890
communities are very helpful. Yeah.
Well, I appreciate you chatting

608
00:33:15.890 --> 00:33:19.250
with me today. Yeah, definitely
versus been another episode of

609
00:33:19.250 --> 00:33:28.930
Hanselminutes and we'll see you
again. Sweet. <inaudible>.

