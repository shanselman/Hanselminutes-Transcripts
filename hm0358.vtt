WEBVTT FILE

1
00:00:12.120 --> 00:00:17.070
From Hansel minutes.com. It's Hansel
minutes. Oh, weekly discussion with

2
00:00:17.070 --> 00:00:21.720
web developer and technologist Scott
Hanselman. This is Lawrence Ryan announcing

3
00:00:21.720 --> 00:00:28.440
show number three 58. Recorded
live Thursday, February 7th, 2013. Support for

4
00:00:28.440 --> 00:00:32.100
Hanselman it's provided by Tellerik
offering the best in developer

5
00:00:32.100 --> 00:00:41.280
tools and support online@telprikdotcomandbyfranklins.net training
developers to work smarter and

6
00:00:41.280 --> 00:00:44.970
now offering gesture pack a
powerful gesture, recording and recognition

7
00:00:44.970 --> 00:00:49.530
system for Microsoft connect for
windows developers details. Add gesture,

8
00:00:49.530 --> 00:00:54.390
ptak.com. In this episode, Scott
talks to three 43 studios

9
00:00:54.390 --> 00:00:57.570
engineer, Katie McAffrey about how
they use the cloud to

10
00:00:57.570 --> 00:01:03.300
run services for halo for
hi, this is Scott Hanselman.

11
00:01:03.300 --> 00:01:06.300
This is another episode of
Hansel minutes and it's halo

12
00:01:06.300 --> 00:01:08.940
week that just made that
up, but it would be

13
00:01:08.940 --> 00:01:11.160
cool if it was halo
week, but I do have

14
00:01:11.160 --> 00:01:14.550
on the phone, Katy McCaffrey
from Microsoft, who also works

15
00:01:14.550 --> 00:01:17.850
for the internal studio three
43 industries. How are you,

16
00:01:17.850 --> 00:01:20.790
Katie? I'm good. How are
you? I'm very cool. Very

17
00:01:20.790 --> 00:01:23.820
cool. I met you at
the, at the nerd dinner

18
00:01:23.820 --> 00:01:25.440
that we had a couple
of weeks ago at the

19
00:01:25.440 --> 00:01:28.890
mall, which is very exciting.
Yeah, that was cool. And

20
00:01:29.190 --> 00:01:31.920
in Europe there with my
buddy hoop and you guys

21
00:01:31.920 --> 00:01:35.550
work on the backend of
halo, is that right? Yep.

22
00:01:35.690 --> 00:01:38.300
Yup. We work on all
the services, the power, all

23
00:01:38.300 --> 00:01:42.740
the experiences and the halo
game. Okay. So I'm looking

24
00:01:42.740 --> 00:01:45.740
at, I've got halo reach,
I've got halo three halo,

25
00:01:45.740 --> 00:01:49.670
four, I've got a halo,
a anniversary edition. I just

26
00:01:49.670 --> 00:01:54.020
got all of those have
backend services. Yeah. They all

27
00:01:54.020 --> 00:01:58.790
have backend services. And in
addition, we use halo, we

28
00:01:58.790 --> 00:02:02.270
power halo way point and
all the mobile experiences, the

29
00:02:02.300 --> 00:02:07.370
Xbox client, things like that.
Okay. So, I mean, I'm,

30
00:02:07.520 --> 00:02:09.140
I'm kind of ignorant to
this. I know that when

31
00:02:09.140 --> 00:02:12.950
I do multiplayer, it's keeping
track of my profile and

32
00:02:12.950 --> 00:02:17.420
my really, really low rank
and my horrible, horrible scores.

33
00:02:18.920 --> 00:02:21.290
And I assume that it's
also sending real time information

34
00:02:21.290 --> 00:02:23.030
about where I am and
what direction I'm looking and

35
00:02:23.030 --> 00:02:25.520
stuff like that. But what
are the services that halo

36
00:02:25.520 --> 00:02:29.030
needs to, to operate? Sure.
So we have a bunch

37
00:02:29.030 --> 00:02:32.420
of different services that we're
currently, that are evolving over

38
00:02:32.420 --> 00:02:35.450
time. We have the staff
service, which records all of

39
00:02:35.450 --> 00:02:39.170
your staff status, like your
headshots, your kills, you know,

40
00:02:39.170 --> 00:02:41.630
like who killed who with
what weapon that all gets

41
00:02:41.630 --> 00:02:43.280
sent up to us. And
we keep track of that

42
00:02:43.280 --> 00:02:47.510
and make it available on
our way point clients. And

43
00:02:47.510 --> 00:02:50.330
also some of that data
is available in game. We

44
00:02:50.330 --> 00:02:54.110
have a presence service. So
when you were playing halo

45
00:02:54.110 --> 00:02:58.220
online, you are telling us
periodically what you're doing. And

46
00:02:58.220 --> 00:03:01.990
we make this information available
on some of our, we

47
00:03:01.990 --> 00:03:04.180
went clients, but mostly in
game, you see this in

48
00:03:04.180 --> 00:03:07.300
the, in the active roster
on halo. This is actually

49
00:03:07.300 --> 00:03:12.550
a different service than most
X-Box live titles use. It's

50
00:03:12.550 --> 00:03:15.310
a little more robust. We
update more frequently and send

51
00:03:15.310 --> 00:03:19.840
more data. We also have
a title file service. So

52
00:03:19.840 --> 00:03:22.210
this is where you get
all your hopper files. So

53
00:03:22.210 --> 00:03:24.610
your different playlists, which tells
you what maps and modes

54
00:03:24.610 --> 00:03:27.490
you can play in halo
four. This is how we

55
00:03:27.490 --> 00:03:31.200
deliver like some of the
Spartan ops playlists Slow, slow

56
00:03:31.200 --> 00:03:33.210
down. Cause you're, you're, you're
you work in halo all

57
00:03:33.210 --> 00:03:35.220
the time. And I play
it like twice a year.

58
00:03:35.580 --> 00:03:38.520
So title files, that's like
when I go in and

59
00:03:38.520 --> 00:03:40.800
I say, I want to
play a death match, or

60
00:03:40.800 --> 00:03:44.310
I want to play whatever
with the skulls and those

61
00:03:44.310 --> 00:03:48.030
graphics that come down. Yeah.
So it's, it's basically just

62
00:03:48.030 --> 00:03:50.580
a list of different maps
and modes that you can

63
00:03:50.580 --> 00:03:54.660
play and match-make into. So
we update those weekly right

64
00:03:54.660 --> 00:03:59.280
now. And so like, we
didn't originally launch with SWAT,

65
00:03:59.280 --> 00:04:01.830
I believe, which is just
a game type in the

66
00:04:01.830 --> 00:04:03.690
halo universe. And so a
couple of weeks later, we

67
00:04:03.690 --> 00:04:06.720
then made a SWAT playlist
cause people wanted to play

68
00:04:06.720 --> 00:04:09.870
SWAT as well. So it's
just it's. And, and so

69
00:04:09.870 --> 00:04:12.810
when we release new map
packs, we'll also release new

70
00:04:13.290 --> 00:04:15.960
playlists because that will make
the, the new maps that

71
00:04:15.960 --> 00:04:17.910
just came out available for
people who want to play

72
00:04:17.910 --> 00:04:21.590
on them. And these things
like stats and presence, there's,

73
00:04:21.590 --> 00:04:25.860
there's, there's like the real
time multiplayer aspect of services,

74
00:04:25.860 --> 00:04:29.370
but then stats, like how
many times you shot someone

75
00:04:29.370 --> 00:04:32.040
with a shotgun, are those
things being calculated on the

76
00:04:32.040 --> 00:04:35.820
server, on the client? So
some of it's, it's a,

77
00:04:35.820 --> 00:04:39.180
it's a mix we get,
we get some aggregates on

78
00:04:39.450 --> 00:04:41.430
from the client for what
you did in the game,

79
00:04:41.430 --> 00:04:44.580
but your lifetime of like
kills and deaths and all

80
00:04:44.580 --> 00:04:47.580
of that as being aggregated
on the server, it's also

81
00:04:47.640 --> 00:04:49.530
kind of interesting to point
out that our stat service

82
00:04:49.530 --> 00:04:53.280
is not real time. So
you play a game and

83
00:04:53.280 --> 00:04:54.870
then we get your stats
and we may be able

84
00:04:54.870 --> 00:04:57.450
to process it right away.
But we also have the

85
00:04:57.450 --> 00:05:01.050
ability to wait if we're
having a lot of load

86
00:05:02.220 --> 00:05:05.370
presence on the other hand
is completely real time. So

87
00:05:05.370 --> 00:05:07.950
everything you're seeing there is,
is up to date and

88
00:05:07.950 --> 00:05:10.230
happening right now. That's really
interesting. Cause I was, I

89
00:05:10.230 --> 00:05:12.900
was talking to the stack
overflow guys before and you

90
00:05:12.900 --> 00:05:16.020
know how stack overflow has
achievements. Some of the achievements

91
00:05:16.050 --> 00:05:20.190
are super complicated, you know,
it's just like, I don't

92
00:05:20.190 --> 00:05:22.800
know if you know, God
down voted on a Tuesday

93
00:05:23.040 --> 00:05:25.500
by a guy from Russia.
And it's like, Whoa, how

94
00:05:25.500 --> 00:05:27.690
did they do that? You
know? And they said that

95
00:05:27.690 --> 00:05:30.060
they've got these triggers where
of, you know, something gets

96
00:05:30.060 --> 00:05:32.190
set up and then they'll
fire off a trigger and

97
00:05:32.190 --> 00:05:34.470
that's kind of realtime, but
then they've got batches that'll

98
00:05:34.470 --> 00:05:37.050
run. Some might be every
hour and some might be

99
00:05:37.050 --> 00:05:41.340
once a week, depending on
the complexity of the calculation

100
00:05:41.340 --> 00:05:46.500
of the achievement is as
your assistant system similar It's,

101
00:05:46.500 --> 00:05:49.500
it's, it's not like we're
running batch jobs on SQL

102
00:05:49.500 --> 00:05:52.470
is sort of the analogy
you're making there. It's we

103
00:05:52.470 --> 00:05:55.500
use the way we do
in step service is we

104
00:05:55.500 --> 00:06:00.680
use service, Azure service bus
queues that we get them

105
00:06:00.680 --> 00:06:03.080
from the game, we get
your data and then we

106
00:06:03.080 --> 00:06:05.600
send back. As soon as
we've stored it durably, we

107
00:06:05.600 --> 00:06:07.820
send back a, okay, we
got your data game tour

108
00:06:07.950 --> 00:06:10.430
or response to the game.
And then the players can

109
00:06:10.430 --> 00:06:12.050
keep playing without having to
wait for us to do

110
00:06:12.050 --> 00:06:14.720
a more complex operation. Once
we do start processing your

111
00:06:14.720 --> 00:06:17.270
stats though, we process and
update everything at once. So

112
00:06:17.270 --> 00:06:20.500
it's, it's just a transaction.
Okay. So you're using, so

113
00:06:20.500 --> 00:06:22.900
the interesting part there is
you're using Azure and you're

114
00:06:22.900 --> 00:06:24.760
using Azure service, but so
you're kind of using it

115
00:06:24.760 --> 00:06:26.320
in a, in a queuing
sense. You throw it into

116
00:06:26.320 --> 00:06:29.020
the queue fire and forget.
So it doesn't slow down

117
00:06:29.020 --> 00:06:31.780
the game. Exactly. And then
the server gets around to

118
00:06:31.780 --> 00:06:34.300
it and if the queue
gets full, then you know,

119
00:06:34.300 --> 00:06:35.830
you'll, you'll get to it
when you get to it.

120
00:06:36.310 --> 00:06:41.470
Exactly. Exactly. Okay. That's cool.
So stats, presence, title files.

121
00:06:42.500 --> 00:06:44.920
Yeah. We have a couple
more. We have a user

122
00:06:44.920 --> 00:06:48.340
generated content service. This is
whenever you take a screenshot

123
00:06:48.340 --> 00:06:51.430
or you make a map
in the world editor called

124
00:06:51.430 --> 00:06:54.700
forge, you can upload these
things to our service and

125
00:06:54.700 --> 00:06:57.790
then they're available via Waypoint
or other players can download

126
00:06:57.790 --> 00:07:00.610
them as well. So we
have a service for that.

127
00:07:01.500 --> 00:07:03.760
And then we also have
a cheat and banning service,

128
00:07:03.760 --> 00:07:08.230
which if you are doing
bad things in the game

129
00:07:08.230 --> 00:07:12.340
from, you know, quitting or
griefing other players or being

130
00:07:12.340 --> 00:07:15.280
obnoxious on your microphone, we
detect all of these things.

131
00:07:15.280 --> 00:07:19.060
And then we can actually
automatically ban you in real

132
00:07:19.060 --> 00:07:23.330
time. We'll send my real
time and, and keep the,

133
00:07:23.330 --> 00:07:26.170
the sort of the integrity
of the halo matchmaking experience.

134
00:07:26.200 --> 00:07:28.510
Good for most players. Wow.
You can really tell if

135
00:07:28.510 --> 00:07:31.690
I'm being mean. Yeah. So
we, we do, we look

136
00:07:31.690 --> 00:07:33.700
at a whole bunch of
different things. Like, you know,

137
00:07:33.700 --> 00:07:37.300
our players muting, you are
a lot of people disconnecting

138
00:07:37.300 --> 00:07:39.520
from games. When you're the
host a lot, we have

139
00:07:39.520 --> 00:07:42.430
a lot of different metrics
that we use to run

140
00:07:42.490 --> 00:07:45.490
and determine what we should
ban people. And we have

141
00:07:45.490 --> 00:07:47.770
a bunch of flexibility in
our system from we can

142
00:07:47.770 --> 00:07:50.050
venue for a day. If
we think like, maybe you

143
00:07:50.470 --> 00:07:53.380
don't really aren't being really
mean, or like doing it

144
00:07:53.380 --> 00:07:56.350
inadvertently, or if you keep
doing it, we can ban

145
00:07:56.350 --> 00:07:58.630
you for longer. And this
was a system that was

146
00:07:58.630 --> 00:08:02.380
also in halo reach and
I believe three as well.

147
00:08:02.950 --> 00:08:05.470
Wow. Okay. So you're not
like listening to my conversation

148
00:08:05.470 --> 00:08:08.320
and like, Oh, he said
a naughty word. You're looking

149
00:08:08.320 --> 00:08:11.680
at how people react to
me. Yep. Yeah. We're using

150
00:08:11.680 --> 00:08:13.780
a lot of the user
generated data that's sent up

151
00:08:13.780 --> 00:08:15.670
to us. That's cool. That
sounds like a lot of

152
00:08:15.670 --> 00:08:20.110
compute work. Yeah. So <inaudible>
is really interesting. It's kind

153
00:08:20.110 --> 00:08:22.570
of, it's one of the,
the services that I wrote

154
00:08:22.570 --> 00:08:24.850
and I really enjoyed cause
we, it used to be

155
00:08:24.850 --> 00:08:28.120
done on a, on a
nightly batch basis, sort of

156
00:08:28.390 --> 00:08:31.360
like the stack overflow achievements.
We went and used a

157
00:08:31.360 --> 00:08:35.590
complex event processing system to
do that. So we can

158
00:08:35.590 --> 00:08:38.110
do it in more real
time. And so things are

159
00:08:38.110 --> 00:08:42.310
happening. You get the F
generally when the system's up

160
00:08:42.310 --> 00:08:45.280
and running, you'll get the
feedback and get banned, you

161
00:08:45.280 --> 00:08:47.770
know, within 10 to 15
minutes of us detecting that

162
00:08:47.770 --> 00:08:50.710
you've done. So a number
of undesirable things, whereas in

163
00:08:50.710 --> 00:08:53.860
previous games you would get
banned, you know, the next

164
00:08:53.860 --> 00:08:57.240
day. Wow. Okay. And then
you wrote That. So I

165
00:08:57.240 --> 00:08:59.970
show up and I let's
say that I, I joined

166
00:08:59.970 --> 00:09:01.620
games and I started being
a jerk and then people

167
00:09:01.620 --> 00:09:04.080
started leaving and I'm the
only guy left. And this

168
00:09:04.080 --> 00:09:08.340
happens a couple times. This
is, these are basically stats.

169
00:09:08.340 --> 00:09:11.100
These are events that are
throwing into a big pile,

170
00:09:11.100 --> 00:09:15.480
but they're not correlated events.
They're just that gosh, when

171
00:09:15.480 --> 00:09:18.600
Scott shows up, people run
away and they're sitting in

172
00:09:18.600 --> 00:09:22.160
a queue somewhere. Yeah. So
without getting too much into

173
00:09:22.160 --> 00:09:24.080
the depth of the system,
it's, it's basically like an

174
00:09:24.080 --> 00:09:26.660
event driven architecture where we
look at all the events

175
00:09:26.660 --> 00:09:29.450
that are coming up from
the players over a period

176
00:09:29.450 --> 00:09:32.300
of time. And then, then
we're processing and aggregating a

177
00:09:32.300 --> 00:09:35.030
bunch of different events based
on rules that we've decided

178
00:09:35.030 --> 00:09:37.970
that these, that our community
management team of society, this

179
00:09:37.970 --> 00:09:41.300
is if these things are
happening, this player is probably

180
00:09:41.300 --> 00:09:44.120
not playing the way is
not, is not being a

181
00:09:44.120 --> 00:09:47.600
good halo player right there.
They're probably doing something wrong.

182
00:09:47.750 --> 00:09:49.940
Sure. I don't, I'm not,
I'm less interested in the,

183
00:09:50.600 --> 00:09:51.920
in the, like the details.
Like I don't want to

184
00:09:51.920 --> 00:09:54.920
give the griefers like data,
but, but I'm interested in

185
00:09:54.920 --> 00:09:56.570
like, so you wrote the,
in this runs in Azure

186
00:09:56.570 --> 00:09:59.150
and you wrote this in
C sharp. Yep. It runs

187
00:09:59.150 --> 00:10:02.630
in Azure. We use a
combination of this couple's with

188
00:10:02.630 --> 00:10:05.270
our stat service that gets
all the events from the

189
00:10:05.270 --> 00:10:11.720
game. And we also used
stream insight in Azure. When

190
00:10:11.720 --> 00:10:14.360
you, when you write something
like this, that is big,

191
00:10:14.390 --> 00:10:18.530
big scale, giant scale, how
do you keep w when

192
00:10:18.530 --> 00:10:21.440
you're working this, how do
you keep from asking for

193
00:10:21.440 --> 00:10:24.140
too much data? Like you're
asking questions of a backend

194
00:10:24.140 --> 00:10:26.990
system that could explode, you
know, it could get like

195
00:10:26.990 --> 00:10:30.230
combinant torics or order, you
know, and plus one type

196
00:10:30.230 --> 00:10:32.180
questions where it's like, Oh
man, I didn't realize that

197
00:10:32.180 --> 00:10:34.310
I just brought the entire
system to its knees because

198
00:10:34.310 --> 00:10:36.320
I asked a question that
I thought was reasonable, but

199
00:10:36.320 --> 00:10:39.410
it turned out to be
a terabyte of data. So

200
00:10:39.410 --> 00:10:41.120
the, so there's two, actually
we have a, we have

201
00:10:41.120 --> 00:10:44.120
a BI system as well
that I mentioned that's running

202
00:10:44.120 --> 00:10:48.110
Hadoop. And then also in
Azure. And that's interesting because

203
00:10:48.110 --> 00:10:50.480
that's sort of, we have
our data in a different

204
00:10:50.480 --> 00:10:52.550
store. So that's sort of
how we prevent, like taking

205
00:10:52.550 --> 00:10:54.770
down the staff service when
we're running a really long

206
00:10:54.950 --> 00:10:58.040
pulling, a long query that
pulls a lot of data

207
00:10:59.630 --> 00:11:02.600
for cheating and Bannon. The
interesting thing with complex event

208
00:11:02.600 --> 00:11:06.560
processing is it's more it's
the model is sort of

209
00:11:06.560 --> 00:11:08.180
like a normal thing is
you have all the data

210
00:11:08.180 --> 00:11:09.950
and then you run queries
over it with complex event

211
00:11:09.950 --> 00:11:12.170
processing, you define the query
and then you run a

212
00:11:12.170 --> 00:11:17.060
bunch of data through the
query. And so, and the

213
00:11:17.060 --> 00:11:19.850
temp, the data needs to
be temporal in nature, but

214
00:11:19.850 --> 00:11:21.380
you're not going to have
this problem where you're trying

215
00:11:21.380 --> 00:11:23.000
to pull a bunch of
data and then like, you

216
00:11:23.000 --> 00:11:25.750
know, hitting your servers really
hard. We're just consuming a

217
00:11:25.760 --> 00:11:28.880
feed of data from the
game and then, you know,

218
00:11:28.970 --> 00:11:31.850
creating higher level events on
top of it and then

219
00:11:31.850 --> 00:11:33.920
acting on them. I see.
So it's like a seed

220
00:11:33.920 --> 00:11:36.140
that you're pouring this kind
of fire hose of data

221
00:11:36.140 --> 00:11:38.330
through. And you're, you're kind
of seeing if the cheaters

222
00:11:38.360 --> 00:11:41.420
fall out of that, as
opposed to throwing a bunch

223
00:11:41.420 --> 00:11:43.880
of data in a pile
and then shoving your hands

224
00:11:43.880 --> 00:11:46.280
through it and looking for
this, this cheater in the

225
00:11:46.280 --> 00:11:49.610
haystack. Yes. Yeah. So it's,
it's sort of a different

226
00:11:49.610 --> 00:11:54.070
way of processing large amounts
of data. No, that's cool.

227
00:11:54.160 --> 00:11:58.960
Okay. So stats, presence, title
files, urinary content, cheating and

228
00:11:58.960 --> 00:12:03.370
banning. That sounds super interesting.
When, when I log in,

229
00:12:03.370 --> 00:12:06.580
I'm talking to Xbox live,
that's not part of halo.

230
00:12:07.050 --> 00:12:10.890
Exactly. So Xbox live provides
a set of standard services,

231
00:12:10.920 --> 00:12:14.700
like the allows the game
to find our servers as

232
00:12:14.700 --> 00:12:17.790
well. And talk to our,
our services. It also provides

233
00:12:17.790 --> 00:12:20.250
things like when they're a
matchmaking that is running is

234
00:12:20.250 --> 00:12:24.000
actually running through Xbox live
achievements, run through Xbox live,

235
00:12:24.000 --> 00:12:27.690
things like that. And do
you, how do you deploy

236
00:12:27.720 --> 00:12:30.180
this stuff? Like, do you
have like staging where like

237
00:12:30.180 --> 00:12:33.630
people who are working on
this are playing, you know,

238
00:12:33.630 --> 00:12:36.450
either a version of halo
or they've pointed, they've pointed

239
00:12:36.450 --> 00:12:38.730
that version of halo at
the staging server, and then

240
00:12:38.730 --> 00:12:42.000
you can simulate a bunch
of bad guys being bad

241
00:12:42.390 --> 00:12:44.460
without being on the live
network. And then you roll

242
00:12:44.460 --> 00:12:48.630
it over into production later.
Yeah. So we use the

243
00:12:48.630 --> 00:12:51.390
Azure portal to do a
lot of our deployments and

244
00:12:51.390 --> 00:12:55.290
we also use this cool
tool called Sarah Brata. They

245
00:12:55.290 --> 00:12:57.780
have this thing called the
cloud storage studio and Azure

246
00:12:57.780 --> 00:13:00.360
management studio. That'll it looks
like the portal, but it

247
00:13:00.360 --> 00:13:02.700
has a lot of nice
UI features on top of

248
00:13:02.700 --> 00:13:07.650
it that makes deploying builds,
editing, config, doing a VIP

249
00:13:07.660 --> 00:13:11.610
swap type of thing in
Azure. Really simple right now.

250
00:13:11.610 --> 00:13:14.160
Yeah. We deployed a staging
and then do a VIP

251
00:13:14.160 --> 00:13:19.770
swap to change out our
builds in production. Oh. So

252
00:13:19.770 --> 00:13:23.070
in Azure, you, for every
sort of subscription ID, you

253
00:13:23.070 --> 00:13:26.460
have the production deployment, which
is what is hit available

254
00:13:26.460 --> 00:13:29.160
via your, your nice friendly
DNS name. And then you

255
00:13:29.160 --> 00:13:31.650
have a staging deployment, which
is only accessible via a

256
00:13:31.650 --> 00:13:37.190
goo ID. And like isn't
what the Azure load balancer

257
00:13:37.220 --> 00:13:40.890
sending work to. And so
what we do is we

258
00:13:40.890 --> 00:13:43.800
spin up actually two full
deployments at once in staging.

259
00:13:43.800 --> 00:13:46.020
And then a BIP swap
is when you tell Azure

260
00:13:46.350 --> 00:13:49.890
to change, what's in staging
with what's in production. So

261
00:13:49.890 --> 00:13:52.890
it just does an atomic
swap Is VIP is VIP

262
00:13:52.890 --> 00:13:56.680
like VIP, like virtual IP.
Yeah. Okay. So you, you

263
00:13:56.790 --> 00:13:59.190
don't really like when I'm,
when I'm used to doing

264
00:13:59.550 --> 00:14:03.750
staging to production roles in
the, in the pre-cloud days,

265
00:14:04.050 --> 00:14:06.090
there were a bunch of
machines that I could point

266
00:14:06.090 --> 00:14:08.040
at and say, look, those
are staging. And then these

267
00:14:08.040 --> 00:14:10.590
are over here, our production,
and they were very different

268
00:14:10.590 --> 00:14:12.510
and we wouldn't typically swap.
It would usually be a

269
00:14:12.510 --> 00:14:17.040
roll forward thing. And you
don't usually get into swapping

270
00:14:17.070 --> 00:14:20.250
comfortably between two systems and
calling them both production until

271
00:14:20.250 --> 00:14:22.950
you're a very mature organization.
But it sounds like with

272
00:14:22.950 --> 00:14:25.740
the cloud, you don't, you
don't really care, right. I

273
00:14:25.740 --> 00:14:28.740
mean, they literally production and
staging can be the same

274
00:14:28.740 --> 00:14:30.300
thing cause you are going
to just swap back and

275
00:14:30.300 --> 00:14:33.900
forth. Exactly. It's, it's, it's
a very different deployment model

276
00:14:33.900 --> 00:14:36.300
and it's, it's also very
interesting when you think about

277
00:14:36.300 --> 00:14:39.450
designing your services on top
of this, because you have

278
00:14:39.450 --> 00:14:42.900
to basically be super fault
tolerant because we're taking down

279
00:14:42.900 --> 00:14:44.910
the production service and there
may be data in it.

280
00:14:44.970 --> 00:14:47.130
And we want that data
to replay, right. We don't

281
00:14:47.130 --> 00:14:49.710
want to lose any data,
but at the same time,

282
00:14:49.710 --> 00:14:51.620
we don't want to have
to like expert. We don't

283
00:14:51.680 --> 00:14:54.920
expertly like time when we
do our, our deployments, we

284
00:14:54.920 --> 00:14:56.540
can do them at any
time and it just sort

285
00:14:56.540 --> 00:14:59.360
of works. And so there's
a lot of things from,

286
00:14:59.360 --> 00:15:01.790
you know, like item potency
to being super fault tolerant

287
00:15:01.790 --> 00:15:06.100
that are, are helpful in
doing that When, when we

288
00:15:06.100 --> 00:15:08.980
would have people on like
a shopping cart and in

289
00:15:08.980 --> 00:15:10.630
the apps that I worked
on, we would start to

290
00:15:10.630 --> 00:15:13.180
kind of slowly drain them
off. So we would slowly

291
00:15:13.180 --> 00:15:15.550
bring one production site down
and slowly bring the other

292
00:15:15.550 --> 00:15:18.430
one back up. Is that,
is that similar kind of

293
00:15:18.430 --> 00:15:20.770
thing or do you, are
you literally swapping the entire

294
00:15:20.770 --> 00:15:23.020
thing out from underneath them
and they, and the cues

295
00:15:23.290 --> 00:15:28.120
keep it from feeling like
something's happened? Yeah, Exactly. We

296
00:15:28.120 --> 00:15:30.370
just, we just swap them
in and out. We don't

297
00:15:30.370 --> 00:15:33.650
really do any drain off
right now. And then w

298
00:15:33.650 --> 00:15:35.530
will you do that like
on a random Tuesday afternoon?

299
00:15:35.530 --> 00:15:37.240
Or do you wait until
like the middle of the

300
00:15:37.240 --> 00:15:40.420
night? Because someone's always playing
halo somewhere. Exactly. Yeah. So

301
00:15:40.420 --> 00:15:43.030
we do deployments. We try
to do like really impactful

302
00:15:43.030 --> 00:15:46.780
ones at night, just not,
we don't. So we don't

303
00:15:46.780 --> 00:15:48.430
get up at like 2:00 AM
and do deployments. We do

304
00:15:48.430 --> 00:15:52.060
them generally during the day
when we're here and then

305
00:15:52.060 --> 00:15:56.290
launch week was its own
thing, special thing, because I

306
00:15:56.290 --> 00:15:59.920
guess it's notable in game
services, you have this very

307
00:16:00.280 --> 00:16:03.850
different load pattern where on,
you know, launch night or

308
00:16:03.850 --> 00:16:05.710
launch week in the first
couple of weeks, you see

309
00:16:05.710 --> 00:16:08.620
your highest number of concurrent
users and then it sort

310
00:16:08.620 --> 00:16:12.160
of tapers off and, and,
and becomes more stable. Whereas

311
00:16:12.160 --> 00:16:14.590
most services you sort of
have like this gradual ramp

312
00:16:14.590 --> 00:16:18.580
up to your peak number
of users. So to sort

313
00:16:18.580 --> 00:16:21.130
of help with this on
launch week, we had at

314
00:16:21.130 --> 00:16:23.710
least five people in the
office around the clock. We

315
00:16:23.710 --> 00:16:26.020
were working like eight to
nine hour shifts and then,

316
00:16:26.020 --> 00:16:29.080
you know, addressing issues and
monitoring when they came up.

317
00:16:29.080 --> 00:16:31.750
And so that week we
were just like fixing things

318
00:16:31.750 --> 00:16:34.210
and switching and things like,
you know, at least once

319
00:16:34.210 --> 00:16:38.410
or twice a day, Does
it feel like helpless in

320
00:16:38.410 --> 00:16:42.700
that you're using this cloud
service that you didn't make,

321
00:16:42.880 --> 00:16:44.410
like you made what sits
on top of it, but

322
00:16:44.410 --> 00:16:47.320
you didn't make Azure. So
like, from, from the perspective

323
00:16:47.320 --> 00:16:50.830
of, of you guys, the
halo team that, you know,

324
00:16:50.830 --> 00:16:52.750
there's this company out there
called Azure. I mean, we

325
00:16:52.750 --> 00:16:55.720
happen to be Microsoft, but
you know, it's still, it's

326
00:16:55.720 --> 00:16:57.580
the thing. You didn't make
sure you can't control it.

327
00:16:58.000 --> 00:17:00.490
I always thought about that.
Like Netflix uses Amazon and

328
00:17:00.490 --> 00:17:03.910
like, if Amazon's down or
something happens, the Netflix guys

329
00:17:03.910 --> 00:17:05.140
are like, what do they
do? Just call a one

330
00:17:05.140 --> 00:17:07.180
800 number or what do
you, how do you freak

331
00:17:07.180 --> 00:17:09.700
out when you can't like
go and reboot the server

332
00:17:09.700 --> 00:17:13.210
yourself? So there's right. So
there is the Azure support

333
00:17:13.210 --> 00:17:16.900
team as well. And then
because of our scale and

334
00:17:16.900 --> 00:17:19.600
size, we had, you know,
some help from the Azure

335
00:17:19.600 --> 00:17:22.810
team and people that we
could call directly if that

336
00:17:22.810 --> 00:17:25.030
happened. I mean, but in
any system there's sort of

337
00:17:25.030 --> 00:17:28.150
like, right, you don't really
even own your machines, they're

338
00:17:28.150 --> 00:17:31.480
in a data center somewhere
and you have people who

339
00:17:31.480 --> 00:17:33.700
could go and like, you
know, kick out a power

340
00:17:33.700 --> 00:17:35.680
cord or, and, and like,
obviously this doesn't happen all

341
00:17:35.680 --> 00:17:37.510
the time, but there, there
are issues there as well.

342
00:17:37.510 --> 00:17:39.250
Whereas like a drive will
just fail and like, I

343
00:17:39.250 --> 00:17:43.030
can't control that either. So
as it's just a different

344
00:17:43.030 --> 00:17:46.330
set of problems and, and
it helps that we basically

345
00:17:46.330 --> 00:17:49.530
rebuilt the service stack from
the ground up, be on

346
00:17:49.530 --> 00:17:52.080
top of Azure. So we
sort of address those issues

347
00:17:52.080 --> 00:17:54.150
like, right. We know from
the beginning that they're going

348
00:17:54.150 --> 00:17:56.580
to pull, they can pull
any VM out from undressed

349
00:17:56.580 --> 00:17:59.280
and restarted. So we went
and built the system with

350
00:17:59.280 --> 00:18:02.960
that in mind. That's really
interesting. So there are people

351
00:18:02.960 --> 00:18:06.080
who might move an existing
system over, and I think

352
00:18:06.080 --> 00:18:09.860
there's a lot of discussion
around migration and moving this

353
00:18:09.860 --> 00:18:12.770
website or that website, but,
and then there's also concerns

354
00:18:12.770 --> 00:18:15.140
about vendor portability. People are
out there, there are those

355
00:18:15.140 --> 00:18:17.270
who are always paranoid about
that. So then they'll build

356
00:18:17.270 --> 00:18:20.540
their system based entirely on
VMs. But I'm hearing you

357
00:18:20.540 --> 00:18:23.330
say that you looked at
the things that Azure offers

358
00:18:23.330 --> 00:18:26.420
like compute and storage and
service bus, particularly service bus,

359
00:18:26.870 --> 00:18:30.950
and built it to sit
on Azure and to use

360
00:18:30.950 --> 00:18:33.530
the Azure stuff. And it
doesn't, it doesn't have an

361
00:18:33.530 --> 00:18:37.550
identity that is not attached
to cloud services. Exactly. Right.

362
00:18:37.550 --> 00:18:40.160
So the, this is the
first, I guess it's interesting

363
00:18:40.160 --> 00:18:41.840
to point out. This is
the first game that is

364
00:18:41.840 --> 00:18:44.120
built entirely or halo game.
And isn't built entirely on

365
00:18:44.120 --> 00:18:46.700
top of Azure, our backends
before used to be in

366
00:18:46.700 --> 00:18:49.700
physical data centers. And so
we took a that our

367
00:18:49.700 --> 00:18:51.860
team took on the challenge
of rebuilding importing it to

368
00:18:51.860 --> 00:18:54.980
Azure, because for a number
of reasons with the load

369
00:18:54.980 --> 00:18:56.570
pattern, it makes a lot
of sense because you can

370
00:18:56.570 --> 00:18:58.610
start turning things off as
you don't need them. You

371
00:18:58.610 --> 00:19:00.500
don't have to buy all
this really expensive hardware that

372
00:19:00.500 --> 00:19:04.010
then goes out of warranty.
Right. We get the nice

373
00:19:04.010 --> 00:19:10.220
elastic scale. And so that
was really worthwhile to us

374
00:19:10.220 --> 00:19:12.500
as a service. And we
wanted to do that. And

375
00:19:12.530 --> 00:19:14.330
it makes a lot of
sense for, you know, future

376
00:19:14.330 --> 00:19:19.100
experiences and, and maintainability of
the service. And so we,

377
00:19:19.100 --> 00:19:21.530
we did, we just rebuilt
everything on top of Azure

378
00:19:21.530 --> 00:19:24.440
and we rearchitected and looked
at every service, even though

379
00:19:24.440 --> 00:19:26.450
a lot of them are
the same as we have

380
00:19:26.450 --> 00:19:28.310
the same names and have
the same functionality of what

381
00:19:28.310 --> 00:19:32.240
was in previous halo games.
But we, we went and

382
00:19:32.240 --> 00:19:36.410
built it for Azure specifically.
Did w were there discussions

383
00:19:36.410 --> 00:19:38.780
where you had to say,
well, do we know if,

384
00:19:39.140 --> 00:19:41.330
if Azure is big enough
for halo? Like, are you,

385
00:19:41.390 --> 00:19:42.800
I don't know if you're
the biggest client, but I'm

386
00:19:42.800 --> 00:19:45.020
just saying like, there must
have been a, whenever you're

387
00:19:45.020 --> 00:19:46.910
evaluating a cloud service, you're
like, is this going to

388
00:19:46.910 --> 00:19:49.070
be big enough? Because we
don't know how popular halo

389
00:19:49.070 --> 00:19:51.140
four could have been. It
could have been bigger than

390
00:19:51.140 --> 00:19:54.500
Azure maybe. Right. So we
definitely had a lot of

391
00:19:54.500 --> 00:19:57.590
conversations and worked with the
Azure team to make sure

392
00:19:57.920 --> 00:19:59.690
I'm right. That we could
get the number of cores

393
00:19:59.690 --> 00:20:03.290
that we needed, that they
were scaling out. And so

394
00:20:03.290 --> 00:20:05.870
that was great. Great. I
mean, I think in, we

395
00:20:05.870 --> 00:20:09.620
talked with Clemens from service
bus and, you know, during

396
00:20:09.620 --> 00:20:13.700
one of our perf tests,
we actually took production service,

397
00:20:13.700 --> 00:20:16.490
bus queues down. And so,
but they worked with us

398
00:20:16.490 --> 00:20:18.290
to make sure to fix
the problem and make sure

399
00:20:18.290 --> 00:20:20.900
that they were ready for
a launch. That's pretty cool.

400
00:20:21.290 --> 00:20:24.710
I had this conversation with
a guy from Netflix. He

401
00:20:24.710 --> 00:20:29.240
was explaining how they were
his cloud service provider was

402
00:20:29.240 --> 00:20:33.110
going from spinning rust, hard
drives over to SSDs. And

403
00:20:33.200 --> 00:20:36.650
this guy in the audience
calls out well, you know,

404
00:20:36.650 --> 00:20:39.170
SSDs fail. And what about,
what about this and that?

405
00:20:39.170 --> 00:20:41.810
And performance and trim and
better dah, dah, dah. And

406
00:20:41.810 --> 00:20:44.720
the guy from Netflix was
like, well, that's not my

407
00:20:44.720 --> 00:20:48.310
problem. Like I'm renting them.
Exactly. And I was like,

408
00:20:48.310 --> 00:20:50.620
wow. It just totally blew
my mind. Like, Oh my

409
00:20:50.620 --> 00:20:53.740
goodness, he's so enlightened. I'm
renting them like, yeah, drives,

410
00:20:53.740 --> 00:20:57.070
fail. But it's not my
problem. Like for, for someone

411
00:20:57.070 --> 00:21:00.190
like Netflix, where popular movie
comes out or something like

412
00:21:00.190 --> 00:21:02.770
halo, halo four comes out,
I'm going to rent a

413
00:21:02.770 --> 00:21:04.960
bunch of hard drives. And
when I'm done and the

414
00:21:05.170 --> 00:21:08.500
game becomes less popular and
halo four plus one comes

415
00:21:08.500 --> 00:21:11.920
out, you know, then I'll
just rent some more. So

416
00:21:11.920 --> 00:21:14.740
like all those machines you
had in data centers, like

417
00:21:14.740 --> 00:21:18.510
before you don't need those
data centers. Exactly. Well, so

418
00:21:18.510 --> 00:21:20.880
we still do support, like
all of the old games

419
00:21:20.880 --> 00:21:24.270
we haven't migrated to Azure,
so we still own some

420
00:21:24.270 --> 00:21:27.570
physical machines and some data
centers, but it's really nice

421
00:21:27.570 --> 00:21:29.670
for entertainment when you sort
of look at the way

422
00:21:29.670 --> 00:21:33.930
that those, the, the users
sort of like flock to

423
00:21:33.960 --> 00:21:36.030
one hot thing of the
moment and then it drops

424
00:21:36.030 --> 00:21:38.100
off, but you can still
support the long tail of

425
00:21:38.100 --> 00:21:41.280
the, the entertainment experience in
the product, because you don't

426
00:21:41.280 --> 00:21:44.310
have to maintain all these
really expensive machines. You just

427
00:21:44.310 --> 00:21:47.310
keep up the number of
cores you need running. And

428
00:21:47.310 --> 00:21:49.440
it is really nice. I
kind of really enjoy, like,

429
00:21:49.440 --> 00:21:50.910
not getting woken up in
the middle of the night

430
00:21:50.910 --> 00:21:53.700
because you know, the SQL
drive failed. Right. Azure just

431
00:21:53.700 --> 00:21:56.190
deals with it and spins
up a new instance of,

432
00:21:56.560 --> 00:21:58.440
of a node that went
down for me. And I

433
00:21:58.440 --> 00:22:01.470
don't even get notified. Yeah.
Yeah, exactly. And also, I

434
00:22:01.470 --> 00:22:04.110
think as a user of
games, I always hate when

435
00:22:04.110 --> 00:22:06.660
a game that I'm, I
really dig, I get a

436
00:22:06.660 --> 00:22:09.060
notification that like, Oh yeah,
the backend service for this

437
00:22:09.060 --> 00:22:11.610
game is going away now
because we can't afford it.

438
00:22:12.300 --> 00:22:13.920
You know, it's like, if,
if you're on like halo

439
00:22:13.920 --> 00:22:17.850
15 and I'm still playing
halo for, yeah. You could

440
00:22:17.850 --> 00:22:19.350
go and run it on
a machine and it's going

441
00:22:19.350 --> 00:22:20.820
to cost you guys five
bucks a month and it

442
00:22:20.820 --> 00:22:22.680
doesn't really matter. Right. You
could keep it running forever

443
00:22:22.680 --> 00:22:25.980
as far as you're concerned.
Exactly. So, and that's one

444
00:22:25.980 --> 00:22:27.780
of the other nice things
about this, right. Is like

445
00:22:27.870 --> 00:22:30.210
we want our users to
have a really great experience

446
00:22:30.210 --> 00:22:31.530
and we want them to
play what they love. And

447
00:22:31.530 --> 00:22:33.720
so this makes it really
easy to do that. And

448
00:22:33.720 --> 00:22:35.280
it makes it really easy
to keep around all this

449
00:22:35.280 --> 00:22:38.310
data and whatnot. Like I
don't care. It's just out

450
00:22:38.310 --> 00:22:40.440
there and it's durable. And
Azure takes care of a

451
00:22:40.440 --> 00:22:44.070
lot of the operating systems
and the software upgrades for

452
00:22:44.070 --> 00:22:47.040
me, There is one framework
that you're using that I

453
00:22:47.040 --> 00:22:50.130
have had not been familiar
with. That's called Orleans, like

454
00:22:50.130 --> 00:22:54.870
new Orleans, what is Orleans?
So Orleans is a Microsoft

455
00:22:55.230 --> 00:23:00.630
research pro project. And it's
basically a framework for building

456
00:23:00.630 --> 00:23:03.420
large, reliable, distributed systems. And
it's based on the actor

457
00:23:03.420 --> 00:23:07.440
model. And so we partnered
with them really early on

458
00:23:07.770 --> 00:23:09.600
and thought this was a
really cool thing and would

459
00:23:09.600 --> 00:23:13.860
help us build and write
the code much easier. And

460
00:23:13.860 --> 00:23:16.200
so we've been working tightly
with that group as well.

461
00:23:16.770 --> 00:23:18.870
And I'm looking at this
here, they have this thing

462
00:23:18.870 --> 00:23:23.340
called grains. What is a
grain? A grain is sort

463
00:23:23.340 --> 00:23:28.260
of a logical unit use
to process data and all

464
00:23:28.260 --> 00:23:31.860
of the, anything that goes
any of the calls that

465
00:23:31.860 --> 00:23:34.980
are in a grain runs
single threaded plea. So everything

466
00:23:35.010 --> 00:23:40.410
is asynchronous and nonblocking, but
it, it, it abstracts away

467
00:23:40.410 --> 00:23:42.900
the idea of me having
to worry about threading within

468
00:23:42.900 --> 00:23:46.400
a single grain. So I
can write code synchronously basically

469
00:23:46.400 --> 00:23:49.330
in a grain. So writing
code that is synchronously of

470
00:23:49.330 --> 00:23:51.970
course, is easier. Cause you
want to write code that

471
00:23:51.970 --> 00:23:55.180
focuses on business, right. And
if you're writing code and

472
00:23:55.180 --> 00:23:57.610
you're sitting on a thread
and you need data and

473
00:23:57.730 --> 00:24:00.670
from all sorts of different
locations, you can get your

474
00:24:00.670 --> 00:24:04.270
business code kind of tangled
up with the business of

475
00:24:04.270 --> 00:24:08.020
threading. Yeah. So this simplifies
a lot of the threading

476
00:24:08.020 --> 00:24:12.190
problems. It also is nice
because it scales out and

477
00:24:12.190 --> 00:24:15.130
does a lot of the
addressing address addressing for us.

478
00:24:15.130 --> 00:24:17.440
So when I say, you
know, like go post stats

479
00:24:17.440 --> 00:24:20.800
too, for Scott, it just
goes, I like do the

480
00:24:20.800 --> 00:24:23.590
lookup to find where and
Orleans does look up for

481
00:24:23.590 --> 00:24:25.960
me, like where to go
send this, what machine to

482
00:24:25.960 --> 00:24:28.330
go send this message to,
Wow. I'm looking up here

483
00:24:28.330 --> 00:24:30.850
and there's no downloads. There's
nothing it's from the extreme

484
00:24:30.850 --> 00:24:34.270
computing group, which is an
awesome name if you're going

485
00:24:34.270 --> 00:24:37.180
to work for a group.
Yeah. So unfortunately this isn't

486
00:24:37.180 --> 00:24:41.380
available publicly on Microsoft or
for people outside of Microsoft

487
00:24:41.380 --> 00:24:43.840
to use, but I'm working
with them as like, we

488
00:24:43.840 --> 00:24:45.760
worked very closely with that
team and they're really awesome.

489
00:24:45.760 --> 00:24:49.330
And it's been, I thought
it was a great experience

490
00:24:49.330 --> 00:24:51.310
working with it and made
our lives a lot easier

491
00:24:51.790 --> 00:24:54.910
built on building on top
of their framework. Hopefully that'll

492
00:24:55.120 --> 00:24:56.800
be, that'll come out or
I'll hear more about that.

493
00:24:56.800 --> 00:25:00.130
That sounds actually pretty sweet.
Yeah. It's very cool. Yeah.

494
00:25:00.130 --> 00:25:03.640
That's cool. And, and service
bus, I wrote a couple

495
00:25:03.640 --> 00:25:06.490
of basic service relays and
some different stuff, but I

496
00:25:06.490 --> 00:25:08.350
haven't dug too much into
service. And I do know

497
00:25:08.350 --> 00:25:11.080
that, like you said, Clemons
of asters from that team

498
00:25:11.080 --> 00:25:13.330
is always telling me to
get on service bus. And

499
00:25:13.360 --> 00:25:16.930
there's actually a video where
you're up there with hoop

500
00:25:16.960 --> 00:25:21.700
and one of your teammates,
Angus talking about service special

501
00:25:21.700 --> 00:25:23.500
on channel nine. And I'll
put a link to that

502
00:25:23.500 --> 00:25:26.260
in the, in the show
notes, how has service bus

503
00:25:26.260 --> 00:25:32.860
different from just using like
MSMQ? So I'm not super

504
00:25:32.860 --> 00:25:36.370
familiar with, MSMQ like looking
into that, but we chose

505
00:25:36.370 --> 00:25:39.340
to use that because a,
it gives us the ability

506
00:25:39.340 --> 00:25:42.730
to scale out really easily
because we wanted to be

507
00:25:42.730 --> 00:25:44.290
the main goal. There is
we want it to be

508
00:25:44.290 --> 00:25:46.780
able to have the server
go down just in case

509
00:25:46.780 --> 00:25:50.530
it did for whatever reason
for, I think, three, two

510
00:25:50.530 --> 00:25:53.620
to three days, and we
don't lose any data. So

511
00:25:53.620 --> 00:25:56.260
we use service best to
build in the reliability of

512
00:25:56.260 --> 00:25:59.350
the stat system and the
scale, because when, on lunch

513
00:25:59.350 --> 00:26:02.350
night, you know, we get
a ton of users coming

514
00:26:02.350 --> 00:26:06.220
in plane, and perhaps we
had issues with stats or

515
00:26:06.760 --> 00:26:09.580
right. We just like couldn't
process as many games as

516
00:26:09.580 --> 00:26:11.500
quickly as they were coming
in service bus gave us

517
00:26:11.500 --> 00:26:16.750
the ability to sort of
queue that data, store it

518
00:26:16.750 --> 00:26:18.940
durably, and then process it
as we had time. So

519
00:26:18.940 --> 00:26:22.180
we didn't just slam our
server And service bus is,

520
00:26:22.240 --> 00:26:24.460
is a, is a service
on Azure. That is that

521
00:26:24.460 --> 00:26:27.310
you're abstracting away. What's underneath
it. Like you don't have

522
00:26:27.310 --> 00:26:30.490
to think about if there's
VMs underneath the service bus,

523
00:26:30.490 --> 00:26:33.430
right. If you want more
service pluses, you just dial

524
00:26:33.430 --> 00:26:36.850
it up. Right. So you
just basically say, I want

525
00:26:36.850 --> 00:26:39.910
this many cues and that
gives you a set amount

526
00:26:39.910 --> 00:26:44.220
of data that you can
use. And, and then you

527
00:26:44.220 --> 00:26:45.960
throw things into the queue
and then you can pull

528
00:26:45.960 --> 00:26:49.680
them out. And once they're
in, they're stored durably, right.

529
00:26:49.680 --> 00:26:51.270
And so you don't have
to worry about anything going

530
00:26:51.270 --> 00:26:54.870
down or getting lost, and
it's pretty simple, right. You

531
00:26:54.870 --> 00:26:56.520
just push things on and
pull them off and, and

532
00:26:56.520 --> 00:26:58.710
it's there for you. So
it's a really nice solution

533
00:26:58.710 --> 00:27:01.910
for building out the scale
out And does this thing

534
00:27:01.910 --> 00:27:05.930
automatically scale, like you're looking
at your, your database, you're

535
00:27:05.930 --> 00:27:08.210
looking at your message center.
You're looking at the receiver

536
00:27:08.210 --> 00:27:10.940
of the messages. These things
are kind of ebbing and

537
00:27:10.940 --> 00:27:15.680
flowing as, as traffic comes
and goes, Right? So it's

538
00:27:15.680 --> 00:27:19.370
not elastic in the sense
that like, right. They don't

539
00:27:19.370 --> 00:27:24.080
automatically spin up queues as
the traffic like wanes and

540
00:27:24.080 --> 00:27:26.540
fluxes. Right. We just, we
have a set number that

541
00:27:26.540 --> 00:27:28.880
we use and it's, it's
also the same way for

542
00:27:28.880 --> 00:27:33.140
all of our, for all
of our compute and storage

543
00:27:33.140 --> 00:27:37.160
instances. Those are, we basically
planned for amount of load.

544
00:27:37.160 --> 00:27:41.060
And then as we go
through, when we do deployments,

545
00:27:41.060 --> 00:27:43.820
we'll actually take down the
number of cores we're using

546
00:27:44.150 --> 00:27:46.940
and make that decision. We
don't have anything built in

547
00:27:46.940 --> 00:27:49.280
right now to do that
elastically and just determine that

548
00:27:49.280 --> 00:27:52.820
for us. And do you
use cues, service, bus cues,

549
00:27:52.820 --> 00:27:57.050
and a service bus is
a relay. What do you

550
00:27:57.050 --> 00:28:00.500
mean by that? There's there's
service bus relay service and

551
00:28:00.500 --> 00:28:03.590
then service queue. I believe
we just use service bus

552
00:28:03.590 --> 00:28:07.400
cues right now. Okay, cool.
And what do you do

553
00:28:07.400 --> 00:28:09.590
for, for logging? Like if
you have to go in

554
00:28:09.640 --> 00:28:12.430
and debug all of this
what's what's your life? I

555
00:28:12.430 --> 00:28:14.720
hope you don't have like
text files. No, no, no.

556
00:28:14.750 --> 00:28:17.600
So we have a, an,
an ETW event tracing for

557
00:28:17.600 --> 00:28:25.760
windows logging system in place.
Yep. So it's, it's basically

558
00:28:25.760 --> 00:28:30.500
the, it's a new product
of.net four or five. It's

559
00:28:30.500 --> 00:28:33.050
sort of a model for
sending events and, and, and

560
00:28:33.140 --> 00:28:35.840
tracking stuff like that. And
it, because right now, when

561
00:28:35.840 --> 00:28:38.330
you go to Azure, you
can write to the wad

562
00:28:38.330 --> 00:28:41.420
logs, which is the diagnostic
table, but the number of

563
00:28:41.420 --> 00:28:44.630
logs that we actually wanted
to write didn't scale, right?

564
00:28:44.720 --> 00:28:47.690
So ETW was this framework
that we basically built on

565
00:28:47.690 --> 00:28:50.780
top of that allows us
to, you know, should have

566
00:28:50.780 --> 00:28:52.700
shipped the logs out and
not have to store as

567
00:28:52.700 --> 00:28:55.940
much. You don't store all
the strings, right. You sort

568
00:28:55.940 --> 00:28:59.030
of store the format once
and then apply when you're

569
00:28:59.030 --> 00:29:00.850
looking at the logs that
applies it for you. You

570
00:29:00.860 --> 00:29:03.080
just store all the parameters
that are all the variables

571
00:29:03.080 --> 00:29:05.390
that you're popping in and
out. And so, and then

572
00:29:05.390 --> 00:29:11.000
we also use MDs, which
is an internal Microsoft tool

573
00:29:11.000 --> 00:29:15.470
right now to view the
logs and whatnot, ETW for

574
00:29:15.470 --> 00:29:18.290
folks who are wondering means
event tracing for windows. And

575
00:29:18.290 --> 00:29:20.450
it's a, it's a kernel
mode logging feature like you,

576
00:29:20.480 --> 00:29:23.270
like you said, but this
is something that was added

577
00:29:23.270 --> 00:29:28.700
in, in windows server, 2008.
And it's, it's basically integrated

578
00:29:28.700 --> 00:29:30.530
into the kernels such that
you could turn it on

579
00:29:30.530 --> 00:29:33.560
and off as you're going.
And it's very, very low

580
00:29:33.560 --> 00:29:36.500
overhead. Yeah. Yeah. It's pretty
nice because if you have

581
00:29:36.500 --> 00:29:38.540
a user mode application, but
you want to get some

582
00:29:38.540 --> 00:29:43.330
really low level debugging things
like even device drivers, you

583
00:29:43.330 --> 00:29:44.470
can go all the way
down to the bottom. If

584
00:29:44.470 --> 00:29:46.750
you want to. It's it
started actually in windows server

585
00:29:46.750 --> 00:29:50.890
two windows, windows 2000, but
it got really, really interesting

586
00:29:50.890 --> 00:29:55.030
in 2008 server when I
S and, and different websites.

587
00:29:55.030 --> 00:29:58.930
So I started using it.
Interesting. Okay. And so then

588
00:29:58.930 --> 00:30:01.900
you view that in a
large firm, a larger application,

589
00:30:01.940 --> 00:30:05.100
a larger viewer, a log
viewer, Right. That sort of

590
00:30:05.100 --> 00:30:07.510
aggregates all the logs from
all our different machines and,

591
00:30:07.530 --> 00:30:10.110
and our services. So we
can run queries on top

592
00:30:10.110 --> 00:30:11.880
of them and look at
what we think is interesting.

593
00:30:12.360 --> 00:30:14.460
So I heard that you
said that you used a

594
00:30:14.490 --> 00:30:19.110
management, the management portal, as
well as a third party

595
00:30:19.110 --> 00:30:21.300
management portal, but do you
ever do any scripting? Like

596
00:30:21.300 --> 00:30:23.640
I kind of imagined a
large system, like this would

597
00:30:23.640 --> 00:30:28.020
include PowerShell scripts to fire
up and turn down things.

598
00:30:28.860 --> 00:30:31.350
So we have some tools
right now. It's one of

599
00:30:31.350 --> 00:30:34.200
the things that we're working
on currently is building out

600
00:30:34.200 --> 00:30:36.060
stuff. So a lot of
the things that we do

601
00:30:36.060 --> 00:30:39.480
manually through the portal and
whatnot are, are done via

602
00:30:39.480 --> 00:30:42.780
just, you know, one click
deployment type is the scenario

603
00:30:42.780 --> 00:30:44.970
that we want to get
to. We're just not there

604
00:30:44.970 --> 00:30:48.660
yet. Cause we just didn't
have time. And when you,

605
00:30:49.320 --> 00:30:51.330
like, when I log into
Azure, I have like a

606
00:30:51.330 --> 00:30:54.240
live ID and a credit
card. Is there like some,

607
00:30:54.390 --> 00:30:55.950
this is just a totally
random question. Cause I got

608
00:30:55.950 --> 00:30:57.150
to ask a random at
the end, is there like

609
00:30:57.150 --> 00:31:01.110
some dudes credit card being
charged? I'm actually not sure

610
00:31:01.110 --> 00:31:03.960
how our billing is set
up. I know one of

611
00:31:03.960 --> 00:31:05.610
the funny things is we
all used to be on

612
00:31:05.610 --> 00:31:09.240
like one developer account and
Azure. And because we were

613
00:31:09.240 --> 00:31:11.940
new to Azure, everyone, like
wasn't shutting down their cores

614
00:31:11.940 --> 00:31:14.460
and their deployments every night
because you just don't think

615
00:31:14.460 --> 00:31:17.010
about that coming from a
traditional service background. And so

616
00:31:17.250 --> 00:31:19.590
they gave every developer, we
now have our own accounts

617
00:31:19.590 --> 00:31:22.170
so that they can see
who's like, you know, costing

618
00:31:22.170 --> 00:31:25.470
them a lot of money.
Oh, that's awesome. Okay. Cause

619
00:31:25.470 --> 00:31:27.180
that's, that is the fear.
I mean, that's funny when

620
00:31:27.180 --> 00:31:28.830
you, once you have a
whole lot of stuff running

621
00:31:28.830 --> 00:31:31.050
on Azure, you do have
to think about like, you

622
00:31:31.050 --> 00:31:32.340
know, does this need to
be running and does this

623
00:31:32.340 --> 00:31:35.040
need, and it's kind of
cool. It's almost like running

624
00:31:35.100 --> 00:31:37.980
your website and Azure is
almost like the way that

625
00:31:37.980 --> 00:31:39.950
you drive a Prius. If
you've ever got a P

626
00:31:39.970 --> 00:31:41.400
of a Prius or anything
like that, you're driven a

627
00:31:41.400 --> 00:31:45.510
hybrid car. There's a gamification
when you get a hybrid

628
00:31:45.510 --> 00:31:48.120
car and it's like, okay,
I can do 44 miles

629
00:31:48.120 --> 00:31:50.730
per gallon. Right. I'm going
to save like 5 cents and

630
00:31:50.730 --> 00:31:53.640
it changes the way you
drive and cloud services changed

631
00:31:53.640 --> 00:31:55.350
the way you write code
in that you want to

632
00:31:55.350 --> 00:31:58.980
squeeze that last penny. Right?
So it's just like an

633
00:31:58.980 --> 00:32:03.450
interesting note. Like obviously the
big, I would never say,

634
00:32:03.450 --> 00:32:05.130
just take code out of
a server and like port

635
00:32:05.130 --> 00:32:07.350
it into Azure. You're probably,
you could do it and

636
00:32:07.350 --> 00:32:08.760
it will probably work, but
it's not going to be

637
00:32:08.760 --> 00:32:13.710
super cost effective or efficient.
I think like really thinking

638
00:32:13.710 --> 00:32:15.810
about how you design your
service for Azure so that

639
00:32:15.810 --> 00:32:18.210
a you're getting the most
out of the pricing model

640
00:32:18.240 --> 00:32:21.000
and you know, you're building
it for this sort of,

641
00:32:21.090 --> 00:32:24.040
it's kind of a chaotic
environment where you, you, you

642
00:32:24.120 --> 00:32:28.650
assume things fail is super
helpful and make your services

643
00:32:28.650 --> 00:32:31.500
more reliable and it'll make
them scale out better in

644
00:32:31.500 --> 00:32:33.990
the, as you move forward
and get more users as

645
00:32:33.990 --> 00:32:36.420
well. That's very cool. Well,
thanks so much for chatting

646
00:32:36.420 --> 00:32:39.410
with me today, Katie. No
problem. Cool. Next next couple

647
00:32:39.410 --> 00:32:41.090
of weeks, we're actually going
To have the way point

648
00:32:41.090 --> 00:32:44.300
the client site, people who
consume and use your services.

649
00:32:44.300 --> 00:32:45.800
And we're going to talk
to those folks too. So

650
00:32:45.800 --> 00:32:47.450
we're going to see how
halo works on the back

651
00:32:47.450 --> 00:32:50.960
end, the front end. Cool.
This has been another episode

652
00:32:50.960 --> 00:32:53.210
of Hansel minutes and we'll
see you again next week.

