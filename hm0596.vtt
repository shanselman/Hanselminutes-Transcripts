WEBVTT FILE

1
00:00:00.330 --> 00:00:03.480
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:03.480 --> 00:00:06.450
they make the show possible.
Today's show is sponsored by

3
00:00:06.450 --> 00:00:10.620
developer express, become a UI
superhero with dev express controls

4
00:00:10.620 --> 00:00:15.150
and libraries. Deliver elegant.net solutions
that address customer needs today

5
00:00:15.540 --> 00:00:19.620
by leveraging your existing knowledge,
you can build next generation

6
00:00:19.650 --> 00:00:23.730
touch enabled solutions for tomorrow,
you can download your free

7
00:00:23.850 --> 00:00:45.990
30 day trial@dxdothanselminutes.com. That's dx.hanselminutes.com.
Hi, this is Scott Hanselman.

8
00:00:45.990 --> 00:00:48.330
This is another episode of
Hansel minutes today. I'm talking

9
00:00:48.330 --> 00:00:51.480
with Tracy Lee. She's a
Google developer expert and a

10
00:00:51.480 --> 00:00:55.050
JavaScript developer, and you're a
serial entrepreneur. You've done all

11
00:00:55.050 --> 00:00:58.430
kinds of things. Yes. Hi,
nice to meet you. Nice

12
00:00:58.430 --> 00:01:02.600
to see you again anyways.
Cool. Thanks for, for hanging

13
00:01:02.600 --> 00:01:06.320
out. You're also the co
founder of this dot labs.

14
00:01:06.380 --> 00:01:08.090
And what I think is
interesting about it is that

15
00:01:08.090 --> 00:01:11.660
it's a, it's an agency,
but it's framework agnostic, but

16
00:01:11.660 --> 00:01:14.480
then if I go and
look at your medium, it

17
00:01:14.480 --> 00:01:16.970
looks to me like you're
trying all the JavaScript frameworks.

18
00:01:16.970 --> 00:01:23.240
You're like framework agnostic framework
nondenominational. Yes. I love playing

19
00:01:23.240 --> 00:01:26.000
around with all the different
frameworks and libraries and just

20
00:01:26.000 --> 00:01:29.150
sort of seeing the differences
in how, how people think

21
00:01:29.150 --> 00:01:31.490
about things and also the
similarities. I think it's amazing

22
00:01:31.490 --> 00:01:34.610
how we in the JavaScript
world learn from each other

23
00:01:34.610 --> 00:01:38.000
all the time. And I'm
just watching again, you know,

24
00:01:38.000 --> 00:01:40.970
things get repeated and thinking,
well, did we need to

25
00:01:40.970 --> 00:01:43.940
do that again? Or, wow,
I'm really glad these people

26
00:01:43.940 --> 00:01:47.780
learn from these people. Do
you think that it's a

27
00:01:47.780 --> 00:01:50.660
little overwhelming? I mean, I'm
a, I mean, I'm a

28
00:01:50.900 --> 00:01:53.180
quasi JavaScript person. I wouldn't
say I'm a front end.

29
00:01:53.180 --> 00:01:55.970
I'm kind of a full
stack, but you know, people

30
00:01:55.970 --> 00:01:57.980
email me all the time
and they say, should I

31
00:01:57.980 --> 00:02:02.360
learn angular or react like
either? Or, and it seems

32
00:02:02.360 --> 00:02:04.220
to come down to an
amount of time, like how

33
00:02:04.220 --> 00:02:07.100
much time do I have
available? Should people be saying

34
00:02:07.100 --> 00:02:09.680
things like, should I learn
this or that? Or should

35
00:02:09.680 --> 00:02:11.450
they just learn them all
all or learn none of

36
00:02:11.450 --> 00:02:15.800
them. I think everybody has
different opinions based on what

37
00:02:15.800 --> 00:02:19.310
they read. So they might
read something that react is

38
00:02:19.310 --> 00:02:22.910
faster because X, and they
might decide to go down

39
00:02:22.910 --> 00:02:25.250
the react path for that
reason. Or they might read

40
00:02:25.250 --> 00:02:32.000
something about how angular is
more for enterprise. So they

41
00:02:32.000 --> 00:02:34.970
want to go that way,
or this is supported because

42
00:02:34.970 --> 00:02:37.670
of this or this has
this license. And I think

43
00:02:38.180 --> 00:02:42.320
that, you know, at the
end of the day, if

44
00:02:42.320 --> 00:02:45.350
you just test out a
few things, like, I don't,

45
00:02:45.350 --> 00:02:47.150
I don't remember if it
was you and I talking

46
00:02:47.150 --> 00:02:49.970
about this or somebody else,
but I remember speaking to

47
00:02:49.970 --> 00:02:53.300
somebody about how, you know,
learning technology in general is

48
00:02:53.300 --> 00:02:57.170
just about testing out a
bunch of different things. And

49
00:02:57.170 --> 00:03:01.240
then once you feel you're
comfortable in one thing, then

50
00:03:01.240 --> 00:03:02.950
just sort of go all
in on it for a

51
00:03:02.950 --> 00:03:07.270
few months. So really, you
know, whether you choose react

52
00:03:07.270 --> 00:03:10.780
or whether you choose angular
or Vue or Ember, any

53
00:03:10.780 --> 00:03:13.060
of the other ones it's
really about, do you feel

54
00:03:13.060 --> 00:03:15.520
comfortable with this syntax? Does
it give you what you

55
00:03:15.520 --> 00:03:17.920
need? Do you need to
get, do you feel productive

56
00:03:17.920 --> 00:03:20.680
in it? Right. Like, I
think in the beginning for,

57
00:03:20.680 --> 00:03:24.130
for me, because I came
from Ember and angular when

58
00:03:24.130 --> 00:03:26.800
I was starting to get
into react, JSX didn't really

59
00:03:26.800 --> 00:03:28.960
make any sense to me.
And so it really took

60
00:03:28.960 --> 00:03:31.810
me a little second to,
to get familiar with it

61
00:03:32.530 --> 00:03:37.290
and get comfortable with it.
It seems like people are

62
00:03:37.290 --> 00:03:40.350
afraid that they're going to
start down a path, maybe

63
00:03:40.350 --> 00:03:43.320
try it out. Like you
said, then commit their company

64
00:03:43.320 --> 00:03:46.680
or their product to it,
and then hit some wall.

65
00:03:47.250 --> 00:03:49.260
And the wall is unspecified,
right. We don't know. It's

66
00:03:49.260 --> 00:03:51.390
just a wall that we
can't see and that's why

67
00:03:51.390 --> 00:03:54.030
it's scary. And then we'll
find that, wow, well, it

68
00:03:54.030 --> 00:03:56.910
worked great when I was
fooling around, but then when

69
00:03:56.910 --> 00:03:59.400
I decided to do something,
I don't know, put a

70
00:03:59.400 --> 00:04:02.160
million things in a data
grid. It all fell apart.

71
00:04:02.430 --> 00:04:04.530
And now the whole company
goes under. Like, I know

72
00:04:04.530 --> 00:04:08.790
that that's like a, a
silly and a, and a

73
00:04:08.790 --> 00:04:11.640
silly example, but I honestly
think people are just afraid

74
00:04:11.700 --> 00:04:14.610
that they're going to paint
themselves in a corner. Should

75
00:04:14.610 --> 00:04:17.670
they be, I totally agree.
Cause I hear that all

76
00:04:17.670 --> 00:04:22.230
the time as well. And
I don't think so. I

77
00:04:22.230 --> 00:04:27.120
mean, I think that, you
know, I see, I see

78
00:04:27.120 --> 00:04:31.440
regrets on both sides. So
if I see sometimes I

79
00:04:31.440 --> 00:04:34.530
see people going down the
react path and then realizing

80
00:04:34.530 --> 00:04:36.990
they really wished they had
a little bit more convention

81
00:04:36.990 --> 00:04:39.750
around it. Or, you know,
they're really trying to scale

82
00:04:39.750 --> 00:04:43.020
this out, across larger teams
and then they run into

83
00:04:43.020 --> 00:04:46.800
some problems or I see
angular people saying like, Oh,

84
00:04:46.800 --> 00:04:49.200
I really wish I had,
you know, a smaller X.

85
00:04:49.200 --> 00:04:52.650
Right. But again, those are
just opinions. Those are just

86
00:04:52.650 --> 00:04:55.860
one people's opinions and nothing's
right or wrong. Like if

87
00:04:55.860 --> 00:04:58.920
you ask some people, angular
is actually faster than react.

88
00:04:59.160 --> 00:05:01.380
If you ask some people
react as faster than, than

89
00:05:01.380 --> 00:05:03.690
angular. But I think what
it really comes down to

90
00:05:03.690 --> 00:05:08.040
is the technical expertise. When
I was building my first

91
00:05:08.040 --> 00:05:11.580
startup, I remember not coding,
not knowing how to code

92
00:05:11.880 --> 00:05:16.290
and thinking, okay, do I
go rails or Python or

93
00:05:16.290 --> 00:05:21.840
PHP? And like, who knows?
Right. So I went down

94
00:05:21.840 --> 00:05:24.630
the PHP path and you
know, that didn't work out.

95
00:05:24.750 --> 00:05:27.480
But then I, I ended
up going down and rewriting

96
00:05:27.480 --> 00:05:29.670
my entire app in Python,
but it was because I

97
00:05:29.670 --> 00:05:32.610
had the technical leadership. And
again, that's what really matters.

98
00:05:32.610 --> 00:05:35.940
If you have a technical
leadership in a specific framework

99
00:05:35.940 --> 00:05:38.790
or library, then you're going
to be able to maneuver

100
00:05:38.790 --> 00:05:41.340
and do the things you
need to do. Right. I

101
00:05:41.340 --> 00:05:43.350
think where people suffer is
they get to a point

102
00:05:43.350 --> 00:05:46.020
and then they don't have
the expertise to get them

103
00:05:46.020 --> 00:05:48.990
to, you know, point B
let's say after they go

104
00:05:48.990 --> 00:05:52.800
start down a path. No,
that's interesting. And almost a

105
00:05:52.800 --> 00:05:57.830
little bit controversial. It's it's
like saying, I, I, you

106
00:05:57.830 --> 00:05:59.810
know, I learned this skill.
I learned a little bit

107
00:05:59.810 --> 00:06:02.420
of angular, but I really
don't understand what it's doing

108
00:06:02.420 --> 00:06:05.420
underneath, or I really don't
understand what, what, what JavaScript

109
00:06:05.420 --> 00:06:08.240
is doing. And then I
hit a wall. The question

110
00:06:08.240 --> 00:06:11.480
is, is that wall an
angular technical wall? Or is

111
00:06:11.480 --> 00:06:13.670
it a personal wall that
I hit when I really

112
00:06:13.670 --> 00:06:15.110
had no idea what I
was doing in the first

113
00:06:15.110 --> 00:06:19.600
place? I think a lot
of it is just not

114
00:06:19.600 --> 00:06:23.290
knowing how or what you're
doing. A lot of the

115
00:06:23.290 --> 00:06:28.150
times, like there is a,
there is recently some conversations

116
00:06:28.150 --> 00:06:33.550
on Twitter about how, you
know, stop just installing, you

117
00:06:33.550 --> 00:06:37.750
know, different little stop MPM,
installing everything, to try to

118
00:06:37.750 --> 00:06:40.270
solve your problem, try to
dig a little bit deeper

119
00:06:40.270 --> 00:06:42.790
into the framework or library
that you're using because there's

120
00:06:42.790 --> 00:06:45.310
probably a solution there. So
I think a lot of

121
00:06:45.310 --> 00:06:49.150
the times when you hit
that frustration, you look externally

122
00:06:49.150 --> 00:06:51.580
or look for a reason
or think, Oh, I need

123
00:06:51.580 --> 00:06:54.280
to redo it because I've
heard that I w I

124
00:06:54.280 --> 00:06:56.830
might have, you know, run
into this problem or things

125
00:06:56.830 --> 00:06:58.960
like that. But a lot
of the times, if you

126
00:06:58.960 --> 00:07:00.550
just, you know, if you
just dig a little bit

127
00:07:00.550 --> 00:07:02.740
deeper or if you ask
somebody, I mean, I think

128
00:07:02.740 --> 00:07:06.460
this is the importance of
having mentors as well. You

129
00:07:06.460 --> 00:07:10.120
can usually figure out how
to untangle yourself from whatever

130
00:07:10.120 --> 00:07:13.270
mess you've, you've gotten yourself
into or whatever snag you're

131
00:07:13.270 --> 00:07:17.980
hitting. Interesting. I recently had
a Chris Nandy, Andy, on

132
00:07:17.980 --> 00:07:20.740
the show talking about just
everyone should just use the

133
00:07:20.740 --> 00:07:23.530
vanilla Java script and basically
pushed JavaScript as far as

134
00:07:23.530 --> 00:07:25.600
you can, before you feel
the need to pull in

135
00:07:25.600 --> 00:07:29.530
another framework. Yikes. That would
be so painful for me.

136
00:07:29.530 --> 00:07:32.740
I would cry. So where
do you find the balance?

137
00:07:32.740 --> 00:07:35.290
Because I feel like you're
advocating for both. Like, you

138
00:07:35.290 --> 00:07:37.150
need to understand what's going
on, but there's value in

139
00:07:37.150 --> 00:07:40.330
frameworks. But at the same
time, I got an email

140
00:07:40.330 --> 00:07:44.890
just yesterday from someone who
was, was basically scolded at

141
00:07:44.890 --> 00:07:47.950
work because they wanted to
do some, some cross Blatt,

142
00:07:48.010 --> 00:07:52.150
some cross HDP call and
they brought in jQuery and

143
00:07:52.150 --> 00:07:53.740
their boss was like, you
don't need to use jQuery

144
00:07:53.740 --> 00:07:56.260
anymore for that. That's just
a simple thing it's built

145
00:07:56.260 --> 00:07:58.270
in now. I think there's
a lot of us that

146
00:07:58.270 --> 00:08:00.610
are still stuck in that
world where if you want

147
00:08:00.610 --> 00:08:03.010
to go and grab a
node, you know, a note

148
00:08:03.010 --> 00:08:05.710
of the Dom you'll do
it with, you know, with

149
00:08:05.710 --> 00:08:08.410
the dollar sign and open
a parentheses as opposed to

150
00:08:08.800 --> 00:08:15.850
doing the native JavaScript stuff.
Yeah. So I think, well,

151
00:08:15.910 --> 00:08:19.660
I think the power of
frameworks is that you can

152
00:08:19.660 --> 00:08:23.140
get started immediately and you
can get productive immediately. So

153
00:08:23.140 --> 00:08:26.950
I'm, I'm totally, you know,
I don't think hand rolling

154
00:08:26.950 --> 00:08:28.960
things is a great idea.
And the reason I don't

155
00:08:28.960 --> 00:08:32.830
think it's a great idea
is because people have already

156
00:08:32.830 --> 00:08:36.190
solved the, these, this problem,
whatever problem we have managing

157
00:08:36.190 --> 00:08:40.780
state like routing, you know,
whatever they've already done it

158
00:08:40.780 --> 00:08:43.300
for you. And you know,
a lot of these CLS

159
00:08:43.300 --> 00:08:47.200
these days, right. Just handle
your entire build system and

160
00:08:47.200 --> 00:08:49.120
everything like that. So you
don't have to figure out

161
00:08:49.120 --> 00:08:53.750
like some custom configuration and
you just don't, you know,

162
00:08:53.750 --> 00:08:57.690
you can actually spend writing
code versus trying to set

163
00:08:57.690 --> 00:09:00.060
up your, your environment and
thing, like things like that.

164
00:09:00.270 --> 00:09:03.360
And I think this is
why I think this is

165
00:09:03.360 --> 00:09:05.910
why people, you know, coming
from, let's say the.net world

166
00:09:06.180 --> 00:09:09.600
are actually much more comfortable
in places. Like, let's say

167
00:09:09.630 --> 00:09:13.080
angular because you have the
CLI, you know, I mean,

168
00:09:13.110 --> 00:09:15.480
I think most people and
I haven't done.net, but this

169
00:09:15.480 --> 00:09:17.610
is what I've heard, you
know, like everything is just

170
00:09:17.610 --> 00:09:21.240
sort of set up for
you already. Right. So that's

171
00:09:21.360 --> 00:09:23.490
sort of like the same
thing with angular. Everything's set

172
00:09:23.490 --> 00:09:25.650
up for you already. You
can just get productive immediately

173
00:09:25.830 --> 00:09:27.630
for his having to figure
out how to, like, let's

174
00:09:27.630 --> 00:09:30.470
say configure a pack or
something like that. Yeah. I

175
00:09:30.470 --> 00:09:33.350
think that it's very prescriptive,
like the way that I

176
00:09:33.350 --> 00:09:35.330
think the, one of the
reasons that I think rails,

177
00:09:35.480 --> 00:09:39.890
you know, gained prominence, was
it wasn't like here's a

178
00:09:39.890 --> 00:09:41.720
million ways to do this.
It was like, here's the

179
00:09:41.720 --> 00:09:44.240
way to do this, do
it like that. Yeah. Yes,

180
00:09:44.720 --> 00:09:47.120
absolutely. And that's kind of
what I like. And I

181
00:09:47.120 --> 00:09:50.540
think that if you are,
let's say a more seasoned

182
00:09:51.350 --> 00:09:55.520
developer and sort of have
your own ideas and ways

183
00:09:55.520 --> 00:09:57.080
of how you want to
do things. Or if you're

184
00:09:57.080 --> 00:09:59.270
the type of person who
just really needs to know

185
00:09:59.270 --> 00:10:02.180
what's going on, like you're
not comfortable about, you know,

186
00:10:02.180 --> 00:10:06.110
doing like a and G
start or something like that,

187
00:10:06.110 --> 00:10:09.290
or sorry, NG serve from,
from your, from your terminal

188
00:10:09.290 --> 00:10:12.980
and serving on an application
or something like that. Then

189
00:10:12.980 --> 00:10:15.500
I think that a great
way to go, for example,

190
00:10:15.500 --> 00:10:16.820
this is why a lot
of people, I feel like

191
00:10:16.850 --> 00:10:20.630
choose react, right? Because you
have, let's say five different

192
00:10:20.630 --> 00:10:24.140
ways. You can do CSS,
you have all these different

193
00:10:24.140 --> 00:10:27.530
ways. You can do state
management, you know, you can

194
00:10:27.530 --> 00:10:33.170
configure everything you want. So,
so, and I think that's

195
00:10:33.170 --> 00:10:35.900
why people sort of are
drawn to that. People, people

196
00:10:35.900 --> 00:10:38.840
who really like writing code
and really like building and

197
00:10:38.840 --> 00:10:43.370
creating, you know, like it's
sort of the geeky developer

198
00:10:43.550 --> 00:10:47.630
sexiness right now, like, Oh,
I want to write code

199
00:10:47.630 --> 00:10:49.610
and I get to write
code with reacts. So let

200
00:10:49.610 --> 00:10:52.460
me do that. So have
you, have you seen that

201
00:10:52.460 --> 00:10:57.050
at all? I mean, I
don't know if I put

202
00:10:57.050 --> 00:10:58.610
it that way, but I
understand where you're coming from.

203
00:11:02.090 --> 00:11:04.880
I've noticed on looking at
your medium, that you, like,

204
00:11:04.910 --> 00:11:07.100
not only do you explain,
explore lots of different things,

205
00:11:07.100 --> 00:11:09.740
but you're also really into
it seems components and web

206
00:11:09.740 --> 00:11:12.980
components, and then there's this
new angular component dev kit.

207
00:11:13.010 --> 00:11:17.690
Can you explain that to
me? Yeah. Components of kit

208
00:11:18.230 --> 00:11:22.850
as actually just, it was
just released by the material,

209
00:11:23.180 --> 00:11:29.630
the angular material team. So
material design components, the angular

210
00:11:29.630 --> 00:11:34.670
material is material, material, design
components, specifically built for angular

211
00:11:34.700 --> 00:11:38.210
by the angular team Material
design. If I can interrupt

212
00:11:38.210 --> 00:11:41.510
you, is the, make it
look like this Google prescription

213
00:11:41.510 --> 00:11:44.120
for like how, how things
should be pretty it's like

214
00:11:44.120 --> 00:11:48.290
their bootstrap. Yes, exactly. Yeah.
And a lot of people

215
00:11:48.590 --> 00:11:52.130
in the industry these days
follow the material design guidelines

216
00:11:52.610 --> 00:11:56.590
in terms of how they
think about style guides and

217
00:11:56.590 --> 00:12:03.670
things like that. So they,
so angular material decided to

218
00:12:03.820 --> 00:12:09.910
move the components to a
component dev kit. And the

219
00:12:09.910 --> 00:12:12.370
reason they decided to do
this is because they realized

220
00:12:12.370 --> 00:12:17.890
that, Hey, people writing angular,
you know, probably a few

221
00:12:17.890 --> 00:12:22.090
of them want to actually
use their own styling. So

222
00:12:22.450 --> 00:12:26.860
they, they took all the
it's, it's basically components without

223
00:12:26.860 --> 00:12:29.680
the material design on top
of them. So you have

224
00:12:29.680 --> 00:12:32.230
things like accessibility and, you
know, you can have your

225
00:12:32.230 --> 00:12:34.060
date picker and things like
that, and you can slap

226
00:12:34.060 --> 00:12:36.220
your own style on it.
It was just released a

227
00:12:36.220 --> 00:12:38.290
few months ago, so they're
still working on it, but

228
00:12:39.310 --> 00:12:41.080
a lot of people are
starting to use it in

229
00:12:41.080 --> 00:12:43.390
production and testing it out.
If you just look at

230
00:12:43.600 --> 00:12:46.110
the number of downloads per
week on MPM, it's a,

231
00:12:46.110 --> 00:12:49.140
it's growing pretty fast. I
see. So it's, it's meant

232
00:12:49.140 --> 00:12:51.660
to make the hard stuff
easier, but also not getting

233
00:12:51.660 --> 00:12:53.010
your way. If you want
to make things look the

234
00:12:53.010 --> 00:12:56.190
way you want. Like, I
was looking at the, the

235
00:12:56.250 --> 00:13:01.260
data table, these CDK or
component dev kit table, and

236
00:13:01.260 --> 00:13:05.280
they specifically call it out
as an unopinionated data table.

237
00:13:05.520 --> 00:13:08.910
Yes. Yeah. And I think
that's actually really beautiful. Cause

238
00:13:08.910 --> 00:13:12.210
you look at a bunch
of these different companies who

239
00:13:12.210 --> 00:13:16.680
are build these custom components,
right? Like Kendo UI is

240
00:13:16.680 --> 00:13:19.440
a good example. And it's
going to be really intriguing

241
00:13:19.440 --> 00:13:24.120
how this changes the industry,
right? Because Kendo, UI built

242
00:13:24.120 --> 00:13:28.110
these specific components for angular
where you can slop on

243
00:13:28.110 --> 00:13:30.240
your own styles for it
and things like that. But

244
00:13:30.270 --> 00:13:33.540
all of a sudden the
angular team is actually giving

245
00:13:33.540 --> 00:13:38.670
that to you. So like
is Kendo UI, for example,

246
00:13:38.670 --> 00:13:41.880
going to start building their
components on top of the

247
00:13:41.880 --> 00:13:43.860
component of kit, like what
is that going to look

248
00:13:43.860 --> 00:13:46.890
like? I'm really curious. Yeah.
I think that's really interesting

249
00:13:46.890 --> 00:13:51.630
point. A good example is
that the angular material stuff

250
00:13:51.660 --> 00:13:56.520
or MD hyphen table is
the material design data table.

251
00:13:56.970 --> 00:13:59.820
It sits on top of
this dev kit tables. So

252
00:13:59.820 --> 00:14:03.240
they're there, I'm not just
releasing it for people like

253
00:14:03.240 --> 00:14:05.760
Kendo they've they're actually using
it themselves. They're eating their

254
00:14:05.760 --> 00:14:09.570
own dog food as they
say. Yes. Yes, yes. Hmm.

255
00:14:09.570 --> 00:14:12.000
Interesting. So do you think
though that in the future,

256
00:14:12.000 --> 00:14:15.330
in some post 2017 future,
we're going to be able

257
00:14:15.330 --> 00:14:17.520
to write apps with no
code and it'll be drag

258
00:14:17.520 --> 00:14:21.030
and drop of web components
and things like that. Do

259
00:14:21.030 --> 00:14:25.980
you think we're moving there?
I think that there is,

260
00:14:26.610 --> 00:14:30.810
I think this is kind
of what the Google Chrome

261
00:14:30.930 --> 00:14:37.140
team really hopes to do
in the future. I shouldn't,

262
00:14:37.170 --> 00:14:39.960
I probably shouldn't speak for
them, but No, but you

263
00:14:39.960 --> 00:14:42.060
know, British, this is opinions,
right? I mean, I can

264
00:14:42.060 --> 00:14:44.100
say you're a Google dev
expert, which means you don't

265
00:14:44.100 --> 00:14:46.590
work for Google, but they've,
it's like a Microsoft MVP.

266
00:14:46.590 --> 00:14:48.300
They've given you this title.
Cause you know what you're

267
00:14:48.300 --> 00:14:51.350
talking about, but you don't
speak for Google right. As

268
00:14:51.350 --> 00:14:53.990
I work for Microsoft, but
this podcast is my own.

269
00:14:53.990 --> 00:14:56.330
And so our opinions are
our own to be clear.

270
00:14:56.800 --> 00:15:00.550
Yes, yes, yes, absolutely. But
you know the whole idea

271
00:15:00.580 --> 00:15:04.870
that now it's so easy
to build out components, like,

272
00:15:05.020 --> 00:15:08.110
like for example, a lot
of companies these days, right?

273
00:15:08.110 --> 00:15:11.560
If you just look at
polymer and what they were

274
00:15:11.560 --> 00:15:13.990
doing before, there's been a
lot of improvements, but you

275
00:15:13.990 --> 00:15:16.870
can basically go to some
of these polymer sites and

276
00:15:16.870 --> 00:15:20.260
you can just drag and
drop in a Google map.

277
00:15:20.470 --> 00:15:22.480
Right. And then it's just
going to use the Google

278
00:15:22.480 --> 00:15:25.150
maps API and you can
sort of configure this website

279
00:15:25.150 --> 00:15:28.900
by yourself and then, you
know, supposedly it just works.

280
00:15:29.110 --> 00:15:31.570
So I think a lot
of things that we sort

281
00:15:31.570 --> 00:15:34.210
of have to do now,
we're not going to have

282
00:15:34.210 --> 00:15:36.550
to do later. And a
web development is going to

283
00:15:36.550 --> 00:15:42.760
become very different. You know,
like I only started coding

284
00:15:42.850 --> 00:15:45.130
about two years ago. Right.
So I sort of have

285
00:15:45.130 --> 00:15:50.260
had the luxury of working
with different frameworks and libraries

286
00:15:50.530 --> 00:15:52.960
and have a lot of
stuff handed to me. Right.

287
00:15:53.230 --> 00:15:55.960
But I'm sure those of
you who've been programming longer,

288
00:15:57.010 --> 00:15:59.260
sort of see what we
can, what we have now

289
00:15:59.260 --> 00:16:01.930
in today's world. But imagine
if that's 10 times easier,

290
00:16:01.930 --> 00:16:04.090
it's going to be, you
know, we're all going to

291
00:16:04.090 --> 00:16:06.520
be out of jobs or
something. I don't know. Well,

292
00:16:06.520 --> 00:16:09.310
it's funny, it's funny because
speaking from the, in the

293
00:16:09.310 --> 00:16:12.790
historical context, if you think
about things like polymer and

294
00:16:12.790 --> 00:16:16.090
by the way, for long
time listeners, we had Monica

295
00:16:16.120 --> 00:16:20.410
Dinkle sq on the show
show number 499. This was

296
00:16:20.410 --> 00:16:24.850
in October of 2015. So
basically exactly two years ago,

297
00:16:25.420 --> 00:16:29.260
talking about polymer and chrom
fast forward to today. And

298
00:16:29.260 --> 00:16:30.640
I'll put this in the
show notes. If you go

299
00:16:30.640 --> 00:16:36.370
to polymer, hyphen designer.app, spot.com,
it's a polymer grid that

300
00:16:36.370 --> 00:16:38.800
you can basically build an
app in. It looks a

301
00:16:38.800 --> 00:16:43.300
lot like visual basic three,
except it's in the browser,

302
00:16:44.050 --> 00:16:46.240
which means that we did,
we were, we were onto

303
00:16:46.240 --> 00:16:48.370
something, you know, back in
the day when we were

304
00:16:48.370 --> 00:16:51.250
doing things like visual, basic
dragging buttons around and, and

305
00:16:51.250 --> 00:16:55.330
having third party maps and,
and controls and stuff. But

306
00:16:55.330 --> 00:16:58.360
now we're doing it on
an open platform that could

307
00:16:58.360 --> 00:17:01.780
be rendered theoretically by any
browser. Yeah. Monica is awesome.

308
00:17:01.780 --> 00:17:05.020
By the way, I've never
heard her name pronounced. So

309
00:17:05.020 --> 00:17:07.150
it was really cool to
hear you say that. I,

310
00:17:07.180 --> 00:17:08.830
well, I could only hope
that I got it right.

311
00:17:08.920 --> 00:17:12.910
We'll see. That's that's how
she said it two years

312
00:17:12.910 --> 00:17:16.090
ago. So maybe I got
it right. We'll see. So

313
00:17:16.090 --> 00:17:20.260
polymer is hoping to sit
as hoping to sit in

314
00:17:20.260 --> 00:17:23.530
that world. What w that
jQuery did jQuery said, Hmm.

315
00:17:23.560 --> 00:17:26.200
Things are hard. Things are
complicated that will fix a

316
00:17:26.200 --> 00:17:29.560
bunch of the, the quirks
of JavaScript. Now, you know,

317
00:17:29.560 --> 00:17:32.230
polymeric is kind of like
jQuery for web components. It

318
00:17:32.230 --> 00:17:35.350
sits on top of web
components and makes it super,

319
00:17:35.350 --> 00:17:41.530
super easy. Yeah. I, I'm
a polymer. I think polymer

320
00:17:41.530 --> 00:17:44.200
three dot Oh, is coming
out soon. And I think

321
00:17:44.200 --> 00:17:46.810
the thing about web components
in general or polymer, I

322
00:17:46.810 --> 00:17:49.830
think the polymer team is
sort of trying to, while

323
00:17:49.830 --> 00:17:51.630
we're talking about polymer, but
what we're really trying to

324
00:17:51.630 --> 00:17:54.210
talk about is web components,
right? And polymers sort of

325
00:17:54.510 --> 00:17:57.480
the way to help us
get to web components today

326
00:17:57.690 --> 00:18:00.600
while we're building for web
components and while the browser

327
00:18:00.600 --> 00:18:04.170
standards are catching up. So
I think a lot of

328
00:18:04.170 --> 00:18:08.280
people's hesitation these days is
backwards compatibility and things like

329
00:18:08.280 --> 00:18:12.570
that. And, and whatever. But
if you start working with

330
00:18:12.570 --> 00:18:15.270
Palmer components and you really
sort of start getting educated

331
00:18:15.270 --> 00:18:18.450
in the space, a lot
of large companies are actually

332
00:18:18.450 --> 00:18:22.980
adopting it. So a thing
I see every week is

333
00:18:23.010 --> 00:18:27.600
companies saying, okay, you know,
we have a billion apps.

334
00:18:27.870 --> 00:18:31.800
We need to manage all
these applications. And, you know,

335
00:18:32.040 --> 00:18:36.270
we're sick of repeating code.
And, you know, that might

336
00:18:36.270 --> 00:18:38.790
be a date picker that
might be a table that

337
00:18:38.790 --> 00:18:44.010
might be the standard style
of their header. Right. And

338
00:18:44.010 --> 00:18:47.760
so they're doing things like
trying to create component libraries

339
00:18:48.060 --> 00:18:51.030
that they can have as
sort of one centralized database,

340
00:18:51.360 --> 00:18:54.270
and then share that across
all the different teams. So

341
00:18:54.270 --> 00:19:00.090
you see companies doing this
using react, using angular, using

342
00:19:00.090 --> 00:19:05.880
polymer, probably using a view
as well. I knew, I

343
00:19:05.880 --> 00:19:10.560
know view is definitely catching
steam and also with Amber,

344
00:19:10.560 --> 00:19:12.450
right. Amber, you have the
add on library. So it's

345
00:19:12.450 --> 00:19:16.220
a little bit easier to
do things like that View

346
00:19:16.250 --> 00:19:20.420
or it's V U E
right. Seemed to come out

347
00:19:20.420 --> 00:19:27.170
of nowhere last year. So
yeah, Yeah, yeah. I, you

348
00:19:27.170 --> 00:19:29.390
know, I looked at it
and there was this article

349
00:19:29.390 --> 00:19:33.200
that came out about the
number of downloads, surpassing anybody,

350
00:19:33.200 --> 00:19:35.810
any framework or library. And
so you look at that

351
00:19:35.810 --> 00:19:38.600
data and you think, okay,
what is this? Right? But

352
00:19:38.900 --> 00:19:42.890
the reason view is so
popular is because it's so

353
00:19:42.890 --> 00:19:47.420
fast. And you know, for
us in the, you know,

354
00:19:47.510 --> 00:19:52.730
in North America and maybe
even Western Europe, we don't

355
00:19:52.730 --> 00:19:57.920
really have the concerns of
crappy internet. Right. And, and

356
00:19:57.920 --> 00:20:00.260
it doesn't cost us much.
A lot of us have

357
00:20:00.260 --> 00:20:04.670
unlimited data plans. But when
you look at India and

358
00:20:04.670 --> 00:20:09.230
China, right, every time you
refresh a page, every time

359
00:20:09.230 --> 00:20:13.310
you do an app update,
they're actually, you're actually having

360
00:20:13.310 --> 00:20:15.950
to pay for it. So
imagine having to spend, you

361
00:20:15.950 --> 00:20:19.580
know, $3 every time you
updated an application, or every

362
00:20:19.580 --> 00:20:21.440
time you have to refresh
a page, it costs you

363
00:20:21.440 --> 00:20:25.160
a dollar. So with those
types of things, the, the,

364
00:20:25.290 --> 00:20:28.640
the smallness per smallest is
probably not the right word.

365
00:20:28.640 --> 00:20:32.030
But the smallness of view
is what's really, really, really

366
00:20:32.140 --> 00:20:37.940
appealing to these developers. And
the earlier this year, I,

367
00:20:38.170 --> 00:20:41.630
I thought to myself, okay,
we'll see what happens. Like

368
00:20:41.630 --> 00:20:44.000
a lot of my friends
were saying, Oh, why don't

369
00:20:44.000 --> 00:20:47.380
we use view? And I
was thinking, well, let's a

370
00:20:47.380 --> 00:20:50.230
little bit, and see, but
now, as I'm talking to

371
00:20:50.230 --> 00:20:53.590
people, and as I'm talking
to our clients and larger

372
00:20:53.590 --> 00:20:57.520
companies, there's a lot of
companies using view in production.

373
00:20:57.880 --> 00:20:59.560
So I think it's a
time to hop on the

374
00:20:59.560 --> 00:21:03.540
bandwagon. People really like it.
So, Yeah. And now of

375
00:21:03.540 --> 00:21:06.090
course I said, it felt
like a, it came out

376
00:21:06.090 --> 00:21:07.710
and just in the last
year or two as with

377
00:21:07.710 --> 00:21:10.980
all good things, you know,
everyone is an overnight success

378
00:21:11.400 --> 00:21:14.490
from one person's perspective. But
view has been around since

379
00:21:14.490 --> 00:21:19.380
2013, 2014. It just feels
like the, the hockey stick

380
00:21:19.710 --> 00:21:21.720
hit in the last year
or two. And now everyone's

381
00:21:21.720 --> 00:21:24.840
talking about it. And to
your point about the size

382
00:21:24.840 --> 00:21:30.540
of pages back in 2015,
there was an article about

383
00:21:30.540 --> 00:21:33.900
the size of the verge.
You know, the verge.com. It

384
00:21:33.900 --> 00:21:40.440
was 9.5 megabytes with 263
HTTP requests. And a hundred

385
00:21:40.440 --> 00:21:44.580
of those were JavaScript. That's
intense. You think it'd be

386
00:21:44.580 --> 00:21:46.980
all images, right? There was
only a megabyte of images,

387
00:21:46.980 --> 00:21:51.330
but seven megabytes of JavaScript.
And that's really our fault.

388
00:21:51.870 --> 00:21:56.460
Isn't it? That is, I
don't even know what to

389
00:21:56.460 --> 00:22:00.390
say about that, but I
blame myself. You know, I

390
00:22:00.390 --> 00:22:06.690
wish I, I have the
luxury myself of being able

391
00:22:06.690 --> 00:22:11.580
to play around with technology
and make fun applications and

392
00:22:11.580 --> 00:22:13.950
figure out how things work
and teach people how easy

393
00:22:13.950 --> 00:22:15.450
it is to get started.
And that's what I love

394
00:22:15.450 --> 00:22:17.820
to do, but I don't
get to go into the

395
00:22:17.820 --> 00:22:22.320
deep, deep, dark depths of
like, Oh my God, you

396
00:22:22.320 --> 00:22:25.170
know, it takes X amount
of time for this page

397
00:22:25.170 --> 00:22:28.500
to paint or look how
many repaints or there's a

398
00:22:28.500 --> 00:22:31.020
leak in, you know, there's
a leak in IIE or,

399
00:22:31.020 --> 00:22:33.630
you know, Why is that
though? Is that because your

400
00:22:33.630 --> 00:22:36.090
clients are in the States
and they don't worry about

401
00:22:36.120 --> 00:22:38.490
bandwidth? Or do you have
someone who does that for

402
00:22:38.490 --> 00:22:43.860
you? Yeah, it's more because
I don't actually handle a

403
00:22:43.860 --> 00:22:48.510
lot of the coding of
our clients. I more do

404
00:22:48.510 --> 00:22:52.350
development and play when I'm
speaking at different conferences I

405
00:22:52.350 --> 00:22:55.080
go to and things like
that. So I know enough

406
00:22:55.080 --> 00:22:58.110
to, to, to get started
and to tell people why,

407
00:22:58.110 --> 00:23:00.270
and to put people in
the right direction, but I

408
00:23:00.270 --> 00:23:03.180
don't actually spend a lot
of time actually writing the

409
00:23:03.180 --> 00:23:05.940
code. So you said that
you've only been coding for

410
00:23:05.940 --> 00:23:08.430
a couple of years, and
it sounds like you have

411
00:23:08.430 --> 00:23:10.710
transitioned a little bit from
writing code into more kind

412
00:23:10.710 --> 00:23:16.230
of community organizing. I think,
you know, actually it, it,

413
00:23:17.070 --> 00:23:19.560
I th I keep going
back and forth. So I

414
00:23:19.560 --> 00:23:24.270
started off community organizing in
the JavaScript world. And, you

415
00:23:24.270 --> 00:23:26.880
know, then I decided, well,
JavaScript, okay. I should probably

416
00:23:26.880 --> 00:23:29.670
learn how to do this
JavaScript thing. And then, so

417
00:23:29.670 --> 00:23:32.160
I started coding and I
fell in love with it.

418
00:23:33.210 --> 00:23:36.840
And then I spent all
my time coding. And then

419
00:23:36.840 --> 00:23:38.760
I realized that, you know,
maybe I should be a

420
00:23:38.760 --> 00:23:42.060
little more productive with my
life. And I decided to

421
00:23:42.930 --> 00:23:46.430
start doing things I'm really
good at, which is a

422
00:23:46.460 --> 00:23:50.480
community organizing and helping put
people in the right direction

423
00:23:50.480 --> 00:23:56.150
and connecting people and things
like that. So it's sort

424
00:23:56.150 --> 00:23:57.890
of half and half these
days. I really wish I

425
00:23:57.890 --> 00:24:00.580
could spend more time in
code, but I think we

426
00:24:00.580 --> 00:24:02.890
all do unless we're being
paid full time to write,

427
00:24:02.890 --> 00:24:04.960
like by the line, I
think a lot of us

428
00:24:04.960 --> 00:24:09.070
find ourselves in meetings about
design. And then we write

429
00:24:09.070 --> 00:24:12.610
code at night. I was
talking to my buddy Damian,

430
00:24:12.910 --> 00:24:15.610
who works on asp.net. And
we were trying to figure

431
00:24:15.610 --> 00:24:17.080
out how many hours a
week we actually had to

432
00:24:17.080 --> 00:24:18.640
code. It seems like all
of us are doing it

433
00:24:18.640 --> 00:24:22.510
at night when the kids
are asleep. Yeah. It's kind

434
00:24:22.510 --> 00:24:25.150
of depressing. Like lately I've
been having to do really

435
00:24:25.150 --> 00:24:29.620
stupid, like home things like,
Oh, I have to buy

436
00:24:29.650 --> 00:24:32.350
a couch or, you know,
just the things that drives

437
00:24:32.350 --> 00:24:34.960
me and saying that I
have to do, or like

438
00:24:34.990 --> 00:24:36.880
I have to trim the
trees outside and it pisses

439
00:24:36.880 --> 00:24:39.250
me off. Cause I'm not
spending my time coding. So

440
00:24:40.720 --> 00:24:44.350
it's very frustrating. So you
said that you've been coding

441
00:24:44.350 --> 00:24:46.060
for two years, but it
sounds to me like you

442
00:24:46.060 --> 00:24:47.680
already know a lot more
about Java script than I

443
00:24:47.680 --> 00:24:50.410
do. And I've been coding
for many years is for

444
00:24:50.410 --> 00:24:53.410
people who are listening, who
might be, you know, coding

445
00:24:53.410 --> 00:24:56.650
10, 15 years, but not
deep into JavaScript, how do

446
00:24:56.650 --> 00:24:59.500
they get so kind of
literate in such a short

447
00:24:59.500 --> 00:25:01.450
amount of time in the
JavaScript world? Cause I think

448
00:25:01.450 --> 00:25:04.420
we're all looking for that
moment to jump in and,

449
00:25:04.900 --> 00:25:08.860
and hopefully head in the
right direction. I think, you

450
00:25:08.860 --> 00:25:11.350
know, when people, if, if
people have been in the

451
00:25:11.350 --> 00:25:13.510
industry for quite some time,
the thing I hear is

452
00:25:13.510 --> 00:25:16.120
I hate Java script and
probably because it was a

453
00:25:16.120 --> 00:25:18.790
little bit more painful back
in the day, but in

454
00:25:18.790 --> 00:25:21.760
the past few years as
come so, so, so far,

455
00:25:22.120 --> 00:25:25.870
and it is just so,
so easy to get started

456
00:25:25.870 --> 00:25:30.520
these days. And, you know,
I don't think there's any

457
00:25:30.520 --> 00:25:33.310
right or wrong way. I
don't, I personally don't think

458
00:25:33.610 --> 00:25:36.730
that, you know, you should
just write vanilla Java script

459
00:25:36.730 --> 00:25:39.220
and tell, you know, the
language and then you should

460
00:25:39.220 --> 00:25:41.770
jump into a framework because
then you'll understand what the

461
00:25:41.770 --> 00:25:45.010
framework or library is doing
for you. I think you

462
00:25:45.010 --> 00:25:49.630
should value the fact that
that frameworks and libraries help

463
00:25:49.630 --> 00:25:52.150
you get started and make
your life a lot easier

464
00:25:52.330 --> 00:25:55.210
so that you can actually
do something and accomplish something.

465
00:25:55.330 --> 00:26:00.100
Right. So, you know, angular
has angular CLI. And so

466
00:26:00.100 --> 00:26:03.430
it's really easy to generate
components, different things like that.

467
00:26:04.000 --> 00:26:10.330
Very much convention over configuration,
like react is the same

468
00:26:10.330 --> 00:26:12.460
way right now I'm playing
with a lot of native

469
00:26:12.460 --> 00:26:15.370
script. So if you want
to jump in and write

470
00:26:15.370 --> 00:26:18.430
mobile apps, native script has,
you know, I mean, there's

471
00:26:18.430 --> 00:26:23.230
great plugins these days for
everything documentation's out there. So

472
00:26:23.290 --> 00:26:28.300
have you done much TypeScript?
I love TypeScript. Yes, because

473
00:26:28.300 --> 00:26:31.990
angular two and above uses
TypeScript and it's like my

474
00:26:31.990 --> 00:26:36.520
favoritest thing ever. So you
use that, like when you

475
00:26:36.520 --> 00:26:38.770
write your Java script, you're
writing more TypeScript than you

476
00:26:38.770 --> 00:26:43.290
are writing like proper JavaScript
or I don't know. Yeah.

477
00:26:43.320 --> 00:26:45.630
I mean, I guess I'm
Writing type script. I mean,

478
00:26:45.630 --> 00:26:49.050
to me it's all one
and the same. Like I

479
00:26:49.050 --> 00:26:53.970
can't sometimes again, because, because
my knowledge spans so far,

480
00:26:53.970 --> 00:26:58.890
it's like, I can't distinguish
the difference between <inaudible> and

481
00:26:59.610 --> 00:27:03.900
TypeScript or JavaScript or angular
or, you know. Yeah. I

482
00:27:03.900 --> 00:27:07.110
mean, everything is just like,
you get comfortable, you can

483
00:27:07.110 --> 00:27:09.540
build something like that is
the most important thing. And

484
00:27:09.540 --> 00:27:13.110
I think that's the most
gratifying thing. So I remember

485
00:27:13.110 --> 00:27:16.800
taking a C plus plus
class and thinking, Oh my

486
00:27:16.800 --> 00:27:18.930
gosh, why do I have
to spend all this time?

487
00:27:18.930 --> 00:27:21.390
I spent three hours trying
to find a semi colon.

488
00:27:21.840 --> 00:27:25.290
And it was so frustrating.
And so I didn't finish

489
00:27:25.290 --> 00:27:29.450
the class, but when I
Really, that semi-colon kicked you

490
00:27:29.450 --> 00:27:31.520
out of the class, I've
had semicolons like kick my

491
00:27:31.520 --> 00:27:34.490
butt. And I've had semicolons
caused me to have people

492
00:27:34.490 --> 00:27:36.650
come over to my desk
and stare with me. And

493
00:27:36.650 --> 00:27:39.100
like, that's a $10,000 on
my calling. You're looking at,

494
00:27:39.110 --> 00:27:40.490
cause we took us like
a month to find it,

495
00:27:41.030 --> 00:27:42.500
but I've never had a
kick me out of a

496
00:27:42.500 --> 00:27:46.280
course. Well, I wasn't all
that motivated to become a

497
00:27:46.280 --> 00:27:49.790
computer science major. You know,
my parents, my both my

498
00:27:49.790 --> 00:27:54.320
parents are computer science majors,
but I said, okay, I

499
00:27:54.320 --> 00:27:57.410
tried it. This is not
fun. So I decided to

500
00:27:57.410 --> 00:28:02.810
move on and do major
in business. But when I

501
00:28:02.810 --> 00:28:07.610
started in JavaScript, I immediately
two weeks after learning HTML,

502
00:28:07.610 --> 00:28:10.580
CSS, and a little bit
of Java script, I immediately

503
00:28:10.580 --> 00:28:13.640
got on Amber and Ember
CLI. And what I was

504
00:28:13.640 --> 00:28:18.200
able to do was build
an app immediately in, you

505
00:28:18.200 --> 00:28:22.100
know, 10 hours. And so
the fact that I was

506
00:28:22.100 --> 00:28:24.620
able to build an app
and then deploy it and

507
00:28:24.620 --> 00:28:27.530
have a site that looks
good because I just used

508
00:28:27.530 --> 00:28:31.640
material design. That is very,
very, very gratifying. Also the

509
00:28:31.640 --> 00:28:34.790
life reload, where you can
see what's happening immediately and

510
00:28:34.790 --> 00:28:37.790
you can see the changes
on the page. I think

511
00:28:37.790 --> 00:28:40.130
that's what gets people really
excited. I also think that's

512
00:28:40.130 --> 00:28:43.160
why it's really good for
kids to learn JavaScript, because

513
00:28:43.220 --> 00:28:47.360
again, you immediately see your
changes. So it seems to

514
00:28:47.360 --> 00:28:49.970
me like you would say,
this is the time to

515
00:28:49.970 --> 00:28:51.680
get into JavaScript. Like if
you looked at it a

516
00:28:51.680 --> 00:28:54.770
couple of years back and
you're like, Oh, JavaScript, you're

517
00:28:54.770 --> 00:28:58.640
saying, no, totally. Now is
the time, Especially with a,

518
00:28:58.640 --> 00:29:01.400
you know, node. I mean,
node is just such a

519
00:29:02.000 --> 00:29:05.360
basic common sort of utility
these days for us. Right.

520
00:29:05.360 --> 00:29:08.420
But it's on the service
side now. I mean, you're

521
00:29:08.420 --> 00:29:12.980
seeing JavaScript everywhere. So you
might as well, it's funny

522
00:29:12.980 --> 00:29:18.590
cause us JavaScript. I wouldn't
say that's exactly a ringing

523
00:29:18.590 --> 00:29:22.430
endorsement you might as well.
Well, I think a lot

524
00:29:22.430 --> 00:29:26.690
of the things that are
happening in these SES are

525
00:29:27.950 --> 00:29:32.480
like, you know, I love
all frameworks and libraries, but

526
00:29:32.540 --> 00:29:36.620
I would say that angular
since it's just very conventional

527
00:29:36.680 --> 00:29:40.190
and it's something that, you
know, like for example, it

528
00:29:40.190 --> 00:29:45.730
has typings because of TypeScript
and things like that. Backend

529
00:29:45.730 --> 00:29:47.950
developers, for example, might just
find it a little bit

530
00:29:47.950 --> 00:29:50.680
easier to get into angular.
Right. Cause it's going to

531
00:29:50.680 --> 00:29:53.530
be an environment. Maybe they're
a little bit more comfortable

532
00:29:53.530 --> 00:29:57.370
and familiar with. There's a
really great IDE for you.

533
00:29:59.590 --> 00:30:02.770
I don't know. I mean,
just, you know, globally install,

534
00:30:02.770 --> 00:30:06.400
angular, CLI generate a new
app, see what it scaffolds

535
00:30:06.400 --> 00:30:10.300
up like code a few
things, deploy it on a

536
00:30:10.480 --> 00:30:13.690
Firebase. And I mean, that
could be like a weekend

537
00:30:13.690 --> 00:30:18.270
thing for you. Well, people
can check you out on

538
00:30:18.270 --> 00:30:22.050
your website. It's a lady
LEED, L E E t.com.

539
00:30:22.080 --> 00:30:24.960
Is that correct? Yes. And
they can also find you

540
00:30:24.960 --> 00:30:27.630
on Twitter and check out
your medium where all the

541
00:30:27.630 --> 00:30:30.300
different blog posts that we've
been talking about are located.

542
00:30:31.170 --> 00:30:34.050
Yes. Thank you for having
me. Cool. Thanks so much.

543
00:30:34.380 --> 00:30:37.320
This has been another episode
of Hanselminutes and we'll see

544
00:30:37.320 --> 00:30:38.370
you again next week.

