WEBVTT FILE

1
00:00:04.380 --> 00:00:18.140
<inaudible> From hanselminutes.com. It's Hansel
minutes, a weekly discussion with

2
00:00:18.140 --> 00:00:23.180
web developer and technologist Scott
Hanselman. This is Lauren's Ryan

3
00:00:23.240 --> 00:00:28.280
announcing show number two Oh
six. Recorded live Tuesday, March 16th, 2010.

4
00:00:29.060 --> 00:00:32.030
Support for Hanselman it's is
provided by Tellerik R a

5
00:00:32.030 --> 00:00:35.660
D controls the most comprehensive
suite of components for windows

6
00:00:35.660 --> 00:00:45.470
forms and asp.net web applications.
online@wwwdottlerik.com. In this episode, Scott

7
00:00:45.470 --> 00:00:48.560
talks with developer, Charlie Kendall
from the windows phone team.

8
00:00:51.770 --> 00:00:54.110
Hi, This is Scott Hanselman.
This is another episode of

9
00:00:54.110 --> 00:00:56.660
Hansel minutes, and we're here
this week in Las Vegas

10
00:00:56.660 --> 00:00:59.660
at the Mandalay Bay resort
and casino at mix mix

11
00:00:59.660 --> 00:01:01.580
2010. And I'm sitting down
with Charlie Kendall, who is

12
00:01:01.580 --> 00:01:05.840
responsible for the developer experience
for windows phone seven, which

13
00:01:05.840 --> 00:01:08.150
we heard about the windows
phone seven series we learned

14
00:01:08.150 --> 00:01:10.400
about here at mix. First,
I finally got a chance

15
00:01:10.400 --> 00:01:11.810
to sit down with you
and you've been running around

16
00:01:11.850 --> 00:01:13.940
talking to all sorts of
people today. Thanks so much

17
00:01:13.940 --> 00:01:16.130
for chatting with me here
at the ed max, I

18
00:01:16.130 --> 00:01:20.240
Scott, it's great to be
here. All right. So if

19
00:01:20.240 --> 00:01:23.240
I want to develop for
these phones, where do I

20
00:01:23.240 --> 00:01:27.320
start? What do I install?
Okay. So the very first

21
00:01:27.320 --> 00:01:32.870
thing you do go to
developer.windows, phone.com. And on that

22
00:01:32.870 --> 00:01:36.050
site, there's a link to
the download page and there's

23
00:01:36.050 --> 00:01:39.680
a single download. That includes
a special version of visual

24
00:01:39.680 --> 00:01:45.470
studio, 2010, the windows, phone,
emulator, documentation, and samples in

25
00:01:45.470 --> 00:01:48.650
a single download that will
install on your machine. If

26
00:01:48.650 --> 00:01:52.400
you already have visual studio,
2010 RC installed like the

27
00:01:52.400 --> 00:01:55.490
ultimate version of professional version,
this will add on as

28
00:01:55.490 --> 00:01:57.770
a, as an add on
to that, and just allow

29
00:01:57.770 --> 00:02:01.130
you to, you know, add
windows, phone projects, individual studio,

30
00:02:01.880 --> 00:02:05.690
if you don't have visual
studio, 2010, it installs this

31
00:02:05.690 --> 00:02:10.190
express version. That's specific for
windows phone and it, for

32
00:02:10.190 --> 00:02:12.500
this release that we've just
released mixed, which is a

33
00:02:12.500 --> 00:02:17.660
CTP. There's also a version
of expression blend for windows

34
00:02:17.660 --> 00:02:20.240
phone that is available in
the kind of the same

35
00:02:20.240 --> 00:02:23.330
way. It's a special version
just for building windows, phone

36
00:02:23.330 --> 00:02:26.060
apps. And, and at this
point in time, it's actually

37
00:02:26.060 --> 00:02:29.030
not part of that single
download it's in a separate

38
00:02:29.030 --> 00:02:32.270
download. So right now there's
two downloads, which we will

39
00:02:32.270 --> 00:02:34.580
fix even the next turn
of the crank for this.

40
00:02:34.880 --> 00:02:36.890
But the point here is
that all of these tools

41
00:02:36.890 --> 00:02:39.920
will be made available for
free when they're finally released,

42
00:02:39.920 --> 00:02:42.860
obviously they're free right now
because they're CTP. But part

43
00:02:42.860 --> 00:02:44.930
of what we announced this
week is the tools are

44
00:02:44.930 --> 00:02:47.900
actually free. And that includes
this version of expression blend,

45
00:02:48.800 --> 00:02:52.160
which previously wasn't available in
any sort of a free

46
00:02:52.160 --> 00:02:55.400
version. But two most interesting,
interesting things that I heard,

47
00:02:55.400 --> 00:02:57.530
right. There were one that
if I already have visual

48
00:02:57.530 --> 00:03:00.700
studio, this is going to
that and add Onto it.

49
00:03:01.450 --> 00:03:04.330
It'll become a comfortable file
new. And then it'll just

50
00:03:04.330 --> 00:03:06.670
say windows phone that's right.
And then if I don't,

51
00:03:06.670 --> 00:03:09.580
it'll automatically install everything that
I need. That's that's correct.

52
00:03:09.760 --> 00:03:11.950
Now you said virtual machine.
So, I mean, is this

53
00:03:11.950 --> 00:03:14.910
like virtual PC? This is
virtual windows. Yeah. I, I,

54
00:03:15.390 --> 00:03:17.520
what I said is that
we include the windows phone

55
00:03:17.520 --> 00:03:22.410
emulator, which is, which actually
runs a version of windows,

56
00:03:22.410 --> 00:03:26.970
phone compiled for x86 in
an emulated environment. It's running

57
00:03:26.970 --> 00:03:31.170
it, it's using x86 virtualization
on your developer workstation. And

58
00:03:31.170 --> 00:03:34.110
that allows you to test
your apps in a, you

59
00:03:34.110 --> 00:03:37.500
know, in an <inaudible> debug
cycle, within visual studio or

60
00:03:37.500 --> 00:03:42.570
expression blend. Oh yeah. And,
and with full performance with

61
00:03:42.600 --> 00:03:46.110
multi-touch input, if you're using
a windows seven PC that

62
00:03:46.110 --> 00:03:52.620
has a multitouch and using
3d GPU acceleration. So all

63
00:03:52.620 --> 00:03:56.100
we, we pump all the
direct 3d directly through in

64
00:03:56.100 --> 00:03:58.710
the emulator to the host
PC. So you get great

65
00:03:58.710 --> 00:04:02.370
performance and it works really,
really well Virtual phone. I

66
00:04:02.370 --> 00:04:04.140
mean, I can, I have
orientation, I can flip it

67
00:04:04.140 --> 00:04:05.820
on its side to see
what my Apple behave like.

68
00:04:05.820 --> 00:04:08.730
And if it works, they're
in the virtual, in the,

69
00:04:09.030 --> 00:04:10.860
in the virtual, it's a
real windows phone away. It's

70
00:04:10.860 --> 00:04:13.620
not as visual anything, I
suppose, it's right. This real

71
00:04:13.620 --> 00:04:15.270
windows, it's going to work
the same on the device.

72
00:04:16.590 --> 00:04:19.050
The, the, so the emulator
supports a bunch of really

73
00:04:19.050 --> 00:04:21.900
cool features along those lines.
One does support rotation. So

74
00:04:21.900 --> 00:04:24.000
you can just click on
a button on the emulator

75
00:04:24.240 --> 00:04:27.240
and the screen rotates and
the right things happen. It

76
00:04:27.240 --> 00:04:32.850
also supports zooming. So windows
phones, the, the design for

77
00:04:32.850 --> 00:04:36.180
the screen as an 800
pixel tall screen, it's 800

78
00:04:36.180 --> 00:04:38.730
by four 80. Wow. That's
really high rents. It really

79
00:04:38.730 --> 00:04:41.040
is. Well, the problem is,
is on some laptops, when

80
00:04:41.040 --> 00:04:44.970
you're doing development, you don't
have 800 vertical pixels or

81
00:04:44.970 --> 00:04:46.920
close to that. And so
the nice thing we've done

82
00:04:46.920 --> 00:04:48.540
in the emulator is we've
made it, so it actually

83
00:04:48.540 --> 00:04:51.540
scales. And so, so will
we actually use the video

84
00:04:51.540 --> 00:04:53.880
scaler? So there's a little
dialogue box that allows you

85
00:04:53.880 --> 00:04:58.110
to set different percentages of
scaling, which is, Well, I

86
00:04:58.110 --> 00:05:00.390
saw that and it's not
just like one X, two

87
00:05:00.390 --> 00:05:03.210
X, three X, you know,
it's like, Oh, 62%. That

88
00:05:03.210 --> 00:05:05.400
actually, I think what you're
referring to is the design

89
00:05:05.400 --> 00:05:08.760
surface within visual studio that
does have a, kind of

90
00:05:08.760 --> 00:05:11.810
an infinite slider for scaling
as well, which is it

91
00:05:11.810 --> 00:05:14.640
again, it's the same thing.
Developers want to be able

92
00:05:14.640 --> 00:05:17.310
to have really flexible workspaces
and what we've done with

93
00:05:17.310 --> 00:05:21.300
the design surface for windows
phone apps within visual studio

94
00:05:21.690 --> 00:05:24.210
is make it so that
it can scale at size

95
00:05:24.210 --> 00:05:26.460
as well. And it really
looks like when you're in

96
00:05:26.460 --> 00:05:28.710
the design surface, it looks
like a phone itself. You

97
00:05:28.710 --> 00:05:30.690
almost, it almost seems like
when you hit a five

98
00:05:30.690 --> 00:05:34.500
that the design surface jumps
out and then the phone

99
00:05:34.500 --> 00:05:37.140
is kind of like left
the visual studio environment, and

100
00:05:37.140 --> 00:05:38.970
now it's jumped out. Like
you have the same kind

101
00:05:38.970 --> 00:05:41.340
of, you know, the windows
phone, Chrome, that's kind of

102
00:05:41.340 --> 00:05:43.840
around the house. Yeah. And
you know, the funny thing

103
00:05:43.840 --> 00:05:46.350
about this conversation that I'm
sitting here on the talking

104
00:05:46.350 --> 00:05:48.390
to, you're thinking about someone
riding in their car, listening

105
00:05:48.390 --> 00:05:51.060
to this podcast and trying
to visualize what we're talking

106
00:05:51.060 --> 00:05:53.550
about and the kind of
the cool message that I

107
00:05:53.550 --> 00:05:56.280
have days you can go
download this right now. Also

108
00:05:56.280 --> 00:05:58.190
you get out of your
and get into Europe. And

109
00:05:58.190 --> 00:06:02.090
it's a, it's a, maybe
a 10 minute install download

110
00:06:02.090 --> 00:06:03.800
all the way. Cause it's
not a very large package.

111
00:06:03.800 --> 00:06:05.390
We've tried to optimize to
make sure it's a small

112
00:06:05.390 --> 00:06:08.870
package. And within a couple
minutes you can be up

113
00:06:08.870 --> 00:06:10.880
and running, literally hit F
five and see this for

114
00:06:10.880 --> 00:06:14.200
yourself. I saw Scott goo
do this on a onstage

115
00:06:14.200 --> 00:06:18.190
when he, he basically started
dragging controls over. And the

116
00:06:18.190 --> 00:06:20.500
first thing that I, I
noticed, and actually the first

117
00:06:20.500 --> 00:06:22.840
thing I was worried about
was I said, are we

118
00:06:22.840 --> 00:06:25.660
going to enable people to
make like ugly applications with

119
00:06:25.660 --> 00:06:28.420
purple backgrounds and green buttons?
Like, you know, it was

120
00:06:28.420 --> 00:06:31.930
possible. And other let's just
say other design surfaces, but

121
00:06:32.080 --> 00:06:34.690
he drugged over a button
and it looked like a

122
00:06:34.690 --> 00:06:36.820
windows phone button. That's right.
I mean, do all the

123
00:06:36.820 --> 00:06:39.820
controls behave that way. Yeah.
What we've done with it

124
00:06:39.820 --> 00:06:42.700
starts with the fact that
the windows phone developer platform

125
00:06:42.700 --> 00:06:45.640
is, you know, the, it's
a combination of both X

126
00:06:45.640 --> 00:06:48.550
and a game studio for
building X and a style

127
00:06:48.550 --> 00:06:51.790
games and Silverlight, and because
of that, we're able to

128
00:06:51.790 --> 00:06:53.830
take a use, make use
of all of the Silverlight

129
00:06:53.840 --> 00:06:57.250
theming capabilities and the controls
and Silverlight, and within the

130
00:06:57.250 --> 00:07:01.510
design surface and visual studio,
we've enabled that theming support.

131
00:07:01.630 --> 00:07:03.580
So when you do file
new project and you get

132
00:07:03.580 --> 00:07:06.400
that first windows phone application,
and there's a couple different

133
00:07:06.400 --> 00:07:09.700
templates that are available, it
immediately looks like a windows

134
00:07:09.850 --> 00:07:12.700
immediately looks like a windows
phone application has the right

135
00:07:12.700 --> 00:07:15.790
fonts, has the right look
and feel and any control

136
00:07:15.790 --> 00:07:20.320
that you drop onto it
automatically inherits those, those themes.

137
00:07:20.620 --> 00:07:24.640
And just looks like a
windows phone control Controls that

138
00:07:24.640 --> 00:07:26.350
I'm used to behaving in
one way. Like for example,

139
00:07:26.350 --> 00:07:28.990
the calendar keeps coming to
mind. I drag a calendar

140
00:07:28.990 --> 00:07:32.020
on a window, a windows
phone classic, and I'm going

141
00:07:32.020 --> 00:07:33.940
to get kind of a
dropdown on the calendar and

142
00:07:33.940 --> 00:07:35.950
it feels more like a
webpage with a calendar. Pop-up

143
00:07:35.980 --> 00:07:37.840
what does it control like
that going to behave like

144
00:07:37.840 --> 00:07:40.690
in a world of stacks
and, Yeah, well, so there's

145
00:07:40.690 --> 00:07:44.920
a, as you know, there's
hundreds of controls available in

146
00:07:44.920 --> 00:07:48.910
the ecosystem for Silverlight, whether
they're from third parties or

147
00:07:48.910 --> 00:07:52.240
they're part of the Silverlight
SDK, the control samples that

148
00:07:52.240 --> 00:07:55.240
are there right now, what
we've included with this version

149
00:07:55.240 --> 00:07:57.910
of visual studio is a
set of, you know, kind

150
00:07:57.910 --> 00:08:00.400
of the standard controls that
we've optimized to work in

151
00:08:00.400 --> 00:08:04.570
this environment. Some of them
like button just work. Sure.

152
00:08:04.630 --> 00:08:06.760
Some of the more advanced
controls, they really need some

153
00:08:06.850 --> 00:08:10.150
tweaks to really work well
within the windows phone design

154
00:08:10.150 --> 00:08:14.410
system. And so the calendar
example you gave is actually

155
00:08:14.410 --> 00:08:18.970
one that isn't quite there
yet in the CTP. Although

156
00:08:18.970 --> 00:08:21.070
there are, it'll be very
quick, someone's going to go

157
00:08:21.100 --> 00:08:23.080
and build one and post
it to code plaques and

158
00:08:23.080 --> 00:08:25.640
make it. So is that
the intent though, that a

159
00:08:25.690 --> 00:08:28.090
control that I'm used to
using I'm familiar with their

160
00:08:28.090 --> 00:08:30.070
properties and familiar with their
events when I use it

161
00:08:30.070 --> 00:08:32.140
in Silverlight somewhere else is
going to behave in a

162
00:08:32.140 --> 00:08:34.060
similar way. When I bring
it onto windows phone, it's

163
00:08:34.060 --> 00:08:36.100
going to, you know, it's
going to have those. It

164
00:08:36.100 --> 00:08:40.180
is, it is absolutely. And
this is all, this is

165
00:08:40.180 --> 00:08:42.550
all server light. That is
the way, I mean, every

166
00:08:42.550 --> 00:08:45.310
app is Silverlight any app
that I add on is

167
00:08:45.310 --> 00:08:47.170
silver light. This is not
a, I'm not going to

168
00:08:47.170 --> 00:08:50.080
be writing anything in, in
C plus plus code environment.

169
00:08:50.110 --> 00:08:54.490
Yeah. And so the application
platform is a managed code,

170
00:08:54.490 --> 00:08:57.750
only application platform. We have
no provision for people to

171
00:08:57.750 --> 00:09:00.270
write native code, all your
apps run within a managed

172
00:09:00.270 --> 00:09:03.330
sandbox that we control as
part of the application model

173
00:09:03.330 --> 00:09:06.960
on the phone and your
there's two styles of applications.

174
00:09:06.960 --> 00:09:09.600
You can build two flavors.
If you will. One is

175
00:09:09.600 --> 00:09:11.310
a flavor that it would
be an X and a

176
00:09:11.340 --> 00:09:14.460
flavored application or game. And
generally these are gonna be

177
00:09:14.460 --> 00:09:20.190
for games that are generally
3d, you know, highly interactive

178
00:09:21.000 --> 00:09:24.150
core gamer style games using
the X and a framework.

179
00:09:25.020 --> 00:09:28.530
The other flavor of application
is a Silverlight application. And

180
00:09:28.530 --> 00:09:30.930
that's where you, you, whatever
you're trying to write, you're

181
00:09:30.930 --> 00:09:34.650
gonna use a market based
programming model. You want to

182
00:09:34.650 --> 00:09:37.470
have that theming support that
matches the rest of the

183
00:09:37.470 --> 00:09:40.320
phone. We think people will
build some games using that

184
00:09:40.320 --> 00:09:43.050
as well. Sure. Cause there's
lots of Silverlight games out

185
00:09:43.050 --> 00:09:45.630
there today, but really there's,
you have that choice when

186
00:09:45.630 --> 00:09:47.640
you start a project, you
either use X and a

187
00:09:47.640 --> 00:09:51.390
game studio style programming, or
you use Silverlight style. But

188
00:09:51.390 --> 00:09:53.700
what we've done with windows
phone is we've taken all

189
00:09:53.700 --> 00:09:56.370
the common libraries that you
use for you or those,

190
00:09:56.370 --> 00:09:58.470
and we've made sure they're
actually common to both of

191
00:09:58.470 --> 00:10:01.200
them. So for example, it
used to be that if

192
00:10:01.200 --> 00:10:02.820
you wanted to do X
and a program and you

193
00:10:02.820 --> 00:10:05.160
want to do microphone input,
you used an X and

194
00:10:05.160 --> 00:10:08.130
a API for that. And
there was no microphone input

195
00:10:08.220 --> 00:10:11.310
API for Silverlight three. So
what we've done is that

196
00:10:11.370 --> 00:10:14.520
X and API is now
available to both styles of

197
00:10:14.520 --> 00:10:19.170
applications. That's just one example
of the, of the common

198
00:10:19.170 --> 00:10:22.430
programming model. Hmm. So, so
does that mean that as

199
00:10:22.430 --> 00:10:24.680
a windows phone developer, if
I somehow find a reason

200
00:10:24.680 --> 00:10:27.890
to switch between one flavor
to another, I'm going to

201
00:10:27.890 --> 00:10:31.820
find familiar API one find
familiar developer metaphor. Absolutely. You

202
00:10:31.820 --> 00:10:34.100
know, a great example of
this is windows communication foundation,

203
00:10:34.100 --> 00:10:36.170
which we were, you were
talking about before the podcast,

204
00:10:37.340 --> 00:10:39.860
it is available to both
flavors and it is just

205
00:10:39.860 --> 00:10:43.910
windows communication foundation, the same
version that's available in Silverlight

206
00:10:43.910 --> 00:10:46.340
it's available, whether you're building
a 3d game, which is

207
00:10:46.340 --> 00:10:49.010
kind of cool, or you're
building, you know, the next,

208
00:10:49.130 --> 00:10:51.890
you know, Twitter client or
whatever. I've noticed a lot

209
00:10:51.890 --> 00:10:54.020
of people asking, but what
about this? What about that?

210
00:10:54.020 --> 00:10:55.400
And I want support for
this. I want to support

211
00:10:55.400 --> 00:10:58.610
for that. You said that
it's a managed code environment,

212
00:10:58.610 --> 00:11:01.040
but it's not necessarily closed.
It might not understand that.

213
00:11:01.040 --> 00:11:03.590
Like if I wanted, I
don't, I can't think of

214
00:11:03.590 --> 00:11:06.440
anything. Let's say that there's
some wacky protocol that comes

215
00:11:06.440 --> 00:11:08.690
out tomorrow and I really
need that. And there's some

216
00:11:08.690 --> 00:11:11.570
open source application now that
works on windows works in

217
00:11:11.570 --> 00:11:15.500
server Lite. Can I bring
that code into the windows

218
00:11:15.500 --> 00:11:18.010
phone and compile it? It
is this like several light

219
00:11:18.110 --> 00:11:20.930
or water down several lines.
It is, this is silver

220
00:11:20.930 --> 00:11:23.900
light. This is the, the,
the, the full meal. So

221
00:11:23.900 --> 00:11:26.330
an example of this is
there are a couple of

222
00:11:26.330 --> 00:11:31.280
really cool physics libraries written
in C sharp for Silverlight

223
00:11:31.280 --> 00:11:33.620
available in code Plex. So
you can go to COVID,

224
00:11:33.620 --> 00:11:38.000
they're open source libraries. They
run on PCs today, you

225
00:11:38.000 --> 00:11:40.610
know, within Silverlight today. And
literally you can go get

226
00:11:40.610 --> 00:11:43.880
those projects, download them, fold
them into your windows, phone

227
00:11:43.880 --> 00:11:46.820
projects and, you know, module,
maybe some bugs we have

228
00:11:46.820 --> 00:11:49.610
in the CTP and they
will just work. And we've,

229
00:11:49.610 --> 00:11:51.290
we have a bunch of
examples of that, where we've

230
00:11:51.290 --> 00:11:52.970
gone and done that to
make sure that things are

231
00:11:52.990 --> 00:11:55.980
solid. That's really cool. Yeah.
So if I've got an

232
00:11:55.980 --> 00:11:58.800
existing application on that, like
that provides some data, if

233
00:11:58.800 --> 00:12:01.080
it has a WCF service
or some RSS or really

234
00:12:01.080 --> 00:12:02.940
anything at all, that's going
to come over the wire.

235
00:12:03.420 --> 00:12:05.340
You've got that support on
the phone now. And I

236
00:12:05.340 --> 00:12:07.830
suppose you can tell whether
the phone has a signal

237
00:12:07.830 --> 00:12:10.890
or not, or whether it's
got wifi or not disconnected,

238
00:12:11.160 --> 00:12:13.950
Right? So there's, there's, there's
the, there's the, the kind

239
00:12:13.950 --> 00:12:17.520
of the high level UI
frameworks that you'd expect, you

240
00:12:17.520 --> 00:12:21.210
know, the Silverlight provides. And
then we've added some specific

241
00:12:21.210 --> 00:12:24.420
phone API APIs. API is
around phone specific things. Like

242
00:12:24.420 --> 00:12:28.470
you mentioned the what, what
network you're on things like

243
00:12:28.500 --> 00:12:30.600
being able to have great
access to location information, which

244
00:12:30.600 --> 00:12:33.480
is critical for phones, all
have GPS. They all have

245
00:12:33.480 --> 00:12:37.200
GPS as in it's a
service backed location system that

246
00:12:37.200 --> 00:12:45.390
uses assisted GPS, wifi triangulation,
as well as the third

247
00:12:45.390 --> 00:12:48.780
one, I'm drawing a blank
right now there's three sources

248
00:12:48.780 --> 00:12:50.940
of GPS information and they
all get folded up for

249
00:12:50.940 --> 00:12:54.330
you as a developer, by
us using a backend service.

250
00:12:54.330 --> 00:12:56.670
And you get by this,
you get really fast response.

251
00:12:56.670 --> 00:12:58.230
You don't have to wait
for the GPS to find

252
00:12:58.230 --> 00:13:01.980
a signal, right? And you
get accurate responses as well.

253
00:13:03.300 --> 00:13:06.210
Hi, this is Scott Hanselman
from another parallel universe, got

254
00:13:06.210 --> 00:13:07.860
to tell you about some
of our things our sponsors

255
00:13:07.860 --> 00:13:11.460
are doing. They make this
free podcast possible. If you're

256
00:13:11.460 --> 00:13:14.280
developing a new line of
business application, you've probably tried

257
00:13:14.280 --> 00:13:16.560
the latest version of server
light. Now you can get

258
00:13:16.560 --> 00:13:19.290
even better results by combining
the functionality and server Lite

259
00:13:19.290 --> 00:13:21.630
for beta, with some of
the richness or the third

260
00:13:21.630 --> 00:13:24.750
party controls from our friends
at Tellerik. They're the first

261
00:13:24.870 --> 00:13:27.360
vendors to offer native support
for the server Lite for

262
00:13:27.360 --> 00:13:29.880
beta and their rad controls.
They've got a new server

263
00:13:29.880 --> 00:13:32.730
life for CTP suite of
these controls. They let you

264
00:13:32.730 --> 00:13:35.310
tap into the frameworks, great
potential. You've got native, right

265
00:13:35.310 --> 00:13:37.140
mouse click and all the
new features of server line.

266
00:13:37.680 --> 00:13:41.220
There's 38 controls that give
you all these features. You

267
00:13:41.220 --> 00:13:43.710
can start building those compelling
line of business applications right

268
00:13:43.710 --> 00:13:46.350
away. I encourage you to
check those products out at

269
00:13:46.380 --> 00:13:51.780
tellerik.com/silverlight and, you know, thank
Tellerik for supporting Don and

270
00:13:51.780 --> 00:13:54.420
rock supporting Hansel minutes on
their Facebook fan page at

271
00:13:54.420 --> 00:13:59.550
facebook.com/tellerik. Now back to the
show, things like assisted GPS

272
00:13:59.550 --> 00:14:02.580
are really interesting because basically
based on what cell tower

273
00:14:02.580 --> 00:14:05.520
that I'm near or possibly
what wife, what known wifi

274
00:14:05.520 --> 00:14:07.530
spots are near, I can
save a great deal of

275
00:14:07.530 --> 00:14:10.620
time in figuring out like
what hemisphere I'm in, what

276
00:14:10.620 --> 00:14:12.330
city I'm in. I can
get someone down to a

277
00:14:12.330 --> 00:14:14.490
city block, which then helps
them get a job UTS

278
00:14:14.490 --> 00:14:17.790
lock even faster, right? Just
that we're kind of jumping

279
00:14:17.790 --> 00:14:19.620
randomly on a different things,
but to drill on that

280
00:14:19.620 --> 00:14:22.430
point a little bit more
sure. The idea that, and

281
00:14:22.430 --> 00:14:24.780
one of the things that
supported this API is I

282
00:14:24.780 --> 00:14:26.940
can actually call into the
API and it'll give me

283
00:14:26.940 --> 00:14:32.910
a real address back, really?
Yes. To location, to place

284
00:14:32.910 --> 00:14:35.370
name, I guess it's called
that. That's pretty, that's pretty

285
00:14:35.370 --> 00:14:37.410
cool. Cause that's a huge
hassle. I've done location work

286
00:14:37.430 --> 00:14:39.510
before you can get Latin
lawn, you can get region,

287
00:14:39.540 --> 00:14:41.310
but you know, getting it
down to a street address,

288
00:14:42.240 --> 00:14:43.680
you know, plus or minus
a few feet is pretty

289
00:14:43.680 --> 00:14:46.530
hard, right? That's the, that's
the power of, of being

290
00:14:46.530 --> 00:14:50.340
able to make an application
platform that has implicit services

291
00:14:50.340 --> 00:14:52.970
built in, as of it,
when I gave my talk

292
00:14:52.970 --> 00:14:56.660
yesterday, I'm here at mix.
One of the things that

293
00:14:56.660 --> 00:14:59.180
I highlighted is the way
that we think about applications

294
00:14:59.180 --> 00:15:02.330
for windows phone is they're
service enabled. They really are

295
00:15:02.360 --> 00:15:05.450
powered by services. And then
I gave a taxonomy. We

296
00:15:05.450 --> 00:15:08.480
like to use for how
to think about services. And

297
00:15:08.480 --> 00:15:10.940
there's three types of, as
a developer, there's three types

298
00:15:10.940 --> 00:15:14.030
of services. There are my
services, the services that I

299
00:15:14.030 --> 00:15:16.850
build as a developer and
I expose. So I go

300
00:15:16.850 --> 00:15:20.060
and I, you know, use
Azure or S3 or my,

301
00:15:20.060 --> 00:15:22.220
you know, a web server
sitting under my desk, whatever

302
00:15:22.220 --> 00:15:25.520
it is to build and
publish my service. The second

303
00:15:25.520 --> 00:15:28.640
type of service is a
service that some third party

304
00:15:28.640 --> 00:15:32.030
provides. Like the Twitter API
would be a great example

305
00:15:32.030 --> 00:15:34.730
of that. And then the
third type of service is

306
00:15:34.730 --> 00:15:38.090
a service that is implicitly
plumbed through the platform and

307
00:15:38.090 --> 00:15:41.390
exposed as a high level
API. And with windows phone,

308
00:15:41.780 --> 00:15:44.870
we have four examples of
those in this release. The

309
00:15:44.870 --> 00:15:47.330
first is the one we
just talked about location, right?

310
00:15:47.840 --> 00:15:51.560
The second one is a
push notifications system that allows

311
00:15:51.560 --> 00:15:54.650
you to, from your web
services, push notifications to the

312
00:15:54.650 --> 00:15:58.220
applications on the phone, even
if the application isn't running.

313
00:15:58.310 --> 00:16:01.940
Okay. And so there's push
notifications. The second army, the

314
00:16:01.940 --> 00:16:05.120
third one is the Xbox
live gamer services that are

315
00:16:05.120 --> 00:16:08.150
available on the phone. So
X-Box live games on the

316
00:16:08.150 --> 00:16:11.840
phone, have access to your
avatar, your gamer tag, all

317
00:16:11.840 --> 00:16:16.640
of your Xbox live profile,
including leaderboards and achievements. Very

318
00:16:16.640 --> 00:16:20.840
cool. It is very cool.
And then the fourth service

319
00:16:20.840 --> 00:16:24.410
that, that we provide implicitly
is the whole application deployment

320
00:16:24.410 --> 00:16:27.980
system for how your apps
go from the developer workstation.

321
00:16:27.980 --> 00:16:30.560
They get released in through
the marketplace onto the phone

322
00:16:31.190 --> 00:16:33.680
and then update it over
time. And so that, that

323
00:16:33.680 --> 00:16:36.050
taxonomy works pretty good. Developers
say, okay, I need to

324
00:16:36.050 --> 00:16:37.820
build a service. It's part
of my app. I'm going

325
00:16:37.820 --> 00:16:40.430
to use Azure and WCF
and all those great tools

326
00:16:40.430 --> 00:16:43.220
allow me to do that.
Or, Oh, there's a third

327
00:16:43.220 --> 00:16:45.140
party tool that I'm going
to a service I'm gonna

328
00:16:45.140 --> 00:16:47.780
use. I've got WCF on
the client or on the

329
00:16:47.780 --> 00:16:50.870
server. And I can integrate
that in. And then thirdly,

330
00:16:50.870 --> 00:16:53.210
I just call these API
APIs on the platform. Like

331
00:16:53.420 --> 00:16:55.790
I create a new instance
of the notification object and

332
00:16:55.790 --> 00:16:59.200
it takes care of the
underpinnings automatically. You know, thinking

333
00:16:59.200 --> 00:17:02.890
about the way that games
and applications spread virally now

334
00:17:02.890 --> 00:17:05.320
on the, on the web
and how, you know, three,

335
00:17:05.350 --> 00:17:07.180
three folks in a garage
decide to put out an

336
00:17:07.180 --> 00:17:09.130
application and then suddenly it
becomes, you know, the net,

337
00:17:09.130 --> 00:17:12.130
you know, and then everyone's
virtually farming and it becomes

338
00:17:12.130 --> 00:17:15.580
suddenly interesting. And then they
struggle with scale. Do you,

339
00:17:15.680 --> 00:17:17.950
you see situations where someone's
going to create a game

340
00:17:17.950 --> 00:17:19.900
or an application and they'll
put the service in Azure

341
00:17:19.900 --> 00:17:22.390
and it'll become popular. And
by virtue of the fact

342
00:17:22.390 --> 00:17:24.100
that it's an Azure, that's
going to allow them to,

343
00:17:24.270 --> 00:17:27.040
to scale. I think that's
one of the core value

344
00:17:27.040 --> 00:17:30.880
propositions of being able to
have a, a worldwide scalable

345
00:17:31.330 --> 00:17:35.830
cloud service infrastructure, like Azure,
that it allows developers to,

346
00:17:36.010 --> 00:17:38.350
to not have to think
about. I now need to

347
00:17:38.350 --> 00:17:40.870
go buy, you know, 15
more servers and yeah. Find

348
00:17:40.870 --> 00:17:42.370
someone to manage it. I
guess I've never really put

349
00:17:42.370 --> 00:17:44.020
that together. I guess it's
obvious once you say it,

350
00:17:44.020 --> 00:17:46.180
but the idea I didn't
really plug Azure and the

351
00:17:46.180 --> 00:17:47.950
phone together, but they do
seem to be kind of

352
00:17:48.610 --> 00:17:52.020
a, you know, friends. Here's
Another challenge for people listening

353
00:17:52.020 --> 00:17:55.260
to this, go download the
tools. So, and this only

354
00:17:55.260 --> 00:17:57.150
works if you already have
a full version of visual

355
00:17:57.150 --> 00:18:00.990
studio, 2010 RC. Okay. Cause
the phone version doesn't include

356
00:18:00.990 --> 00:18:03.480
the ability to do things
like Azure projects directly in

357
00:18:03.480 --> 00:18:06.440
it. So let's assume you
have visual studio 2010 standards

358
00:18:06.440 --> 00:18:07.920
and feel free to walk
us through in detail what

359
00:18:07.920 --> 00:18:11.970
we were going to. Yeah.
So install visual studio, 2010,

360
00:18:12.120 --> 00:18:13.950
the full version of the
RC that's available on the

361
00:18:13.950 --> 00:18:17.340
web today, right? Go into
it and also install the

362
00:18:17.340 --> 00:18:19.440
Azure tools, which is a
separate thing. You have to

363
00:18:19.440 --> 00:18:22.740
install it just to file
new project cloud service. And

364
00:18:22.740 --> 00:18:24.570
the first time you run
it, it'll tell you that

365
00:18:24.600 --> 00:18:26.280
you have to go download
something and it does it

366
00:18:26.280 --> 00:18:28.050
for you automatically. It's kind
of cool the way they

367
00:18:28.050 --> 00:18:30.390
did it. Also, I think
it's kind of hokey, but

368
00:18:30.660 --> 00:18:32.490
this is how you sign
up for an account. You

369
00:18:32.490 --> 00:18:34.530
know, it's just how you
get the tools installed and

370
00:18:34.530 --> 00:18:36.480
visual studio. Oh, I see.
Okay. This is just for

371
00:18:36.480 --> 00:18:39.000
installation. Exactly. So once you're
done with that, then download

372
00:18:39.000 --> 00:18:42.210
the windows phone developer tools.
Okay. Install that installer. It's

373
00:18:42.210 --> 00:18:45.390
about 10 minutes of download
and install time and then

374
00:18:45.390 --> 00:18:49.410
go individual studio, the full
version to file new project.

375
00:18:49.980 --> 00:18:51.630
And you'll see a list
of the types of projects

376
00:18:51.630 --> 00:18:53.340
you can create. And one
of them is a cloud

377
00:18:53.340 --> 00:18:58.140
service and so select cloud
service. And when you do

378
00:18:58.140 --> 00:19:00.960
that, name it with whatever
you want. And then it'll,

379
00:19:00.990 --> 00:19:03.360
it'll say, what do you
want in this cloud service?

380
00:19:03.420 --> 00:19:05.730
And for this demo, I
recommend you just add a

381
00:19:05.730 --> 00:19:09.930
WCF service to it and
windows communication foundation service. Okay.

382
00:19:10.890 --> 00:19:14.490
And then that'll create this
solution within visual studio with,

383
00:19:14.620 --> 00:19:17.340
with a couple projects you
very easily can go in

384
00:19:17.340 --> 00:19:19.560
there and can define the
web service interface you want

385
00:19:19.560 --> 00:19:22.320
to use, you know, add
a couple of methods or

386
00:19:22.320 --> 00:19:24.360
whatever, or use the, the
sample that, or the, the

387
00:19:24.360 --> 00:19:28.290
template there automatically gives you
a interface with some fake

388
00:19:28.380 --> 00:19:30.720
numbers. You can just code
those up, put some fake

389
00:19:30.720 --> 00:19:35.760
data behind them. Okay. And
then do file new, or

390
00:19:35.760 --> 00:19:39.390
I'm sorry, within the solution
in visual studio, add a

391
00:19:39.390 --> 00:19:42.490
new project, you're adding a
project to an it solution.

392
00:19:42.520 --> 00:19:44.970
Now you have two projects.
So now the second project

393
00:19:44.970 --> 00:19:48.660
you're adding in that same,
you know, file new project,

394
00:19:48.880 --> 00:19:52.290
same solution. You will see
windows phone application is one

395
00:19:52.290 --> 00:19:56.610
of your options. Click on
that. And that will give

396
00:19:56.610 --> 00:19:59.910
you an option of in
this release. Two styles of

397
00:19:59.910 --> 00:20:03.030
windows, phone applications you can
add. One is just a

398
00:20:03.030 --> 00:20:05.940
standard windows phone application. And
the second one is a

399
00:20:05.940 --> 00:20:09.630
list-based windows phone application. Okay.
Pick whichever one you want

400
00:20:10.410 --> 00:20:13.410
on name it and then
go in and you'll, you'll

401
00:20:13.410 --> 00:20:15.720
get the visual designer. It
will be very obvious what

402
00:20:15.720 --> 00:20:18.390
you're looking at. You're looking
at windows, phone applications, black

403
00:20:18.390 --> 00:20:22.380
background with white text drag,
some UI elements in it,

404
00:20:22.890 --> 00:20:26.040
go to COVID behind and
wire it up to that,

405
00:20:26.490 --> 00:20:29.340
that, that Azure service, the
way you do that is

406
00:20:29.610 --> 00:20:33.300
within your windows phone project.
You do add new service

407
00:20:33.300 --> 00:20:37.890
reference point it at your
WCF project. That's in the

408
00:20:37.890 --> 00:20:41.250
Azure project. Once you do
that, and I've done this

409
00:20:41.250 --> 00:20:45.030
before 22 minutes from beginning
to end hit F five

410
00:20:45.930 --> 00:20:49.300
and with the windows phone
application as your startup project,

411
00:20:49.780 --> 00:20:55.090
the emulator will start it'll
it'll load up takes the

412
00:20:55.090 --> 00:20:56.830
first time you do it,
maybe 20 seconds for it

413
00:20:56.830 --> 00:20:59.170
to start maybe 30 seconds.
Cause it's cause it's actually,

414
00:20:59.290 --> 00:21:01.590
it's literally booting the phone
Phone on, right. I guess

415
00:21:01.610 --> 00:21:04.320
it even has a little
battery. If it doesn't anymore,

416
00:21:04.320 --> 00:21:09.390
we fix that. So it
starts up. And then a

417
00:21:09.390 --> 00:21:11.940
couple seconds later that app
you just built will show

418
00:21:11.940 --> 00:21:14.730
up in the surf on
the app or on the

419
00:21:14.730 --> 00:21:17.010
phone in the emulator. And
you can click on the

420
00:21:17.010 --> 00:21:19.140
button you put on there,
whatever, and it'll go hit

421
00:21:19.140 --> 00:21:22.140
that web service on your
local PC because that Azure

422
00:21:22.140 --> 00:21:24.600
service is actually running in
the low personal cloud. It's

423
00:21:24.600 --> 00:21:26.430
right in your own person.
It's a test cloud that,

424
00:21:26.670 --> 00:21:29.520
that the Azure team built
to run on your, on

425
00:21:29.520 --> 00:21:34.590
your workstation and your app
will work and then you

426
00:21:34.590 --> 00:21:36.240
can go build it and
refine it and do whatever

427
00:21:36.240 --> 00:21:38.550
you want the thing to
do. And then you can

428
00:21:38.550 --> 00:21:42.750
go sign up for Azure
and take that project and

429
00:21:42.750 --> 00:21:46.950
deploy it. Yeah. I'm starting
to think. I'm thinking about

430
00:21:46.950 --> 00:21:48.450
some of the data that
I have already and what

431
00:21:48.450 --> 00:21:51.360
could I potentially build? I've
got this, this nerd dinner

432
00:21:51.360 --> 00:21:53.910
application that we just added
data to, and I want

433
00:21:53.910 --> 00:21:58.530
to build a nerd dinner,
a windows phone application. The

434
00:21:58.530 --> 00:22:00.550
data is already there. The
service is already there. There.

435
00:22:00.600 --> 00:22:01.890
I mean, I bet you
I'll probably be able to

436
00:22:01.890 --> 00:22:03.990
pull it off, you know,
you know, in less than

437
00:22:03.990 --> 00:22:06.510
a half an hour from,
from download all the way

438
00:22:06.510 --> 00:22:08.340
till, till the end. If
what I'm hearing you say

439
00:22:08.700 --> 00:22:12.300
now, I see a lot
of examples of more advanced

440
00:22:12.300 --> 00:22:15.570
things and just putting data
analyst, particularly this notion of

441
00:22:15.570 --> 00:22:20.010
horizontal scrolling. The idea that
there's a view beyond, I

442
00:22:20.010 --> 00:22:22.920
actually was looking over at
guy one of the windows

443
00:22:22.920 --> 00:22:25.500
phone guys. And I noticed
that the text for a

444
00:22:25.500 --> 00:22:29.310
word, I think it was
like movies, but the, he

445
00:22:29.310 --> 00:22:31.170
was cut off and I
said, You know, you've cut

446
00:22:31.170 --> 00:22:32.760
off the word there. And
he says, no, that's that's

447
00:22:32.760 --> 00:22:35.370
okay. Visual metaphor. That's a
hint indicating that there's more.

448
00:22:35.700 --> 00:22:37.770
And then he swiped his
finger to the left and

449
00:22:37.770 --> 00:22:40.350
it caused the entire screen
to go over. How am

450
00:22:40.350 --> 00:22:42.570
I doing that from a
developer perspective? Is, is there

451
00:22:42.570 --> 00:22:47.100
a really wide Screen there?
Or am I making panels?

452
00:22:47.400 --> 00:22:49.650
How do I make these
kinds of experiences that seem

453
00:22:49.650 --> 00:22:52.590
to go on endlessly? Yeah.
We have a term for

454
00:22:52.590 --> 00:22:56.520
those types of experiences within
the windows phone, a design

455
00:22:56.520 --> 00:23:00.960
system called panoramas. And the
idea is that the, the,

456
00:23:01.010 --> 00:23:03.960
the, the screen of the
phone is a window into

457
00:23:03.960 --> 00:23:10.860
a horizontally scrolling canvas. And
there's different layers of typography

458
00:23:11.040 --> 00:23:15.240
and imagery on that canvas.
And as you scroll from

459
00:23:15.240 --> 00:23:17.430
left to right, or right
to left by using flicks

460
00:23:17.430 --> 00:23:21.780
of a finger, those different
layers, accelerate at different speeds,

461
00:23:21.780 --> 00:23:25.260
which creates this very interesting
effect of motion and hints

462
00:23:25.260 --> 00:23:28.050
to the user that these
either more or less information

463
00:23:28.050 --> 00:23:30.690
to the left or the
right it's called a Panorama.

464
00:23:30.780 --> 00:23:33.090
And it's one of the
key user interface elements that

465
00:23:33.090 --> 00:23:37.020
we use within the hubs
on windows phone, in the

466
00:23:37.020 --> 00:23:40.260
CTP release that we have
the windows phone developer tools.

467
00:23:40.800 --> 00:23:44.790
We don't have a full
Panorama control available for developers

468
00:23:45.410 --> 00:23:47.810
already though. They're sprung up
a couple of projects where

469
00:23:47.810 --> 00:23:50.540
people have done a good
job of, of simulating what

470
00:23:50.540 --> 00:23:53.630
we, you know, what our
intent is. And it's actually

471
00:23:53.630 --> 00:23:56.360
not rocket science to build.
Once you, you have the

472
00:23:56.360 --> 00:23:58.760
basics, we will be providing
much better support for that

473
00:23:58.760 --> 00:24:02.500
in a very prescriptive guidance
way. So, and correct me

474
00:24:02.500 --> 00:24:03.820
if I'm wrong, but what
I mean, what I'm kind

475
00:24:03.820 --> 00:24:06.700
of hearing underneath, what you're
saying is that the developer

476
00:24:06.700 --> 00:24:10.860
tools want to maintain not
just an S a, an

477
00:24:10.900 --> 00:24:15.070
aesthetic, a windows phone aesthetic,
but a, they don't want

478
00:24:15.070 --> 00:24:18.430
you to make on attractive
unusable applications. It's almost like

479
00:24:18.430 --> 00:24:21.250
they're not constraining you as
they are encouraging you to

480
00:24:21.250 --> 00:24:24.100
make an app that looks
like what they're calling Metro,

481
00:24:24.130 --> 00:24:27.550
right? Trust the code name
for the windows phone design

482
00:24:27.550 --> 00:24:32.350
system designs. This look right
Is Metro and the developer

483
00:24:32.350 --> 00:24:34.960
tools want to encourage us
to use Metro. You do,

484
00:24:35.140 --> 00:24:37.600
but at the same time,
we're not, we're not preventing

485
00:24:37.600 --> 00:24:40.330
developers from being super creative
in doing, you know, other

486
00:24:40.450 --> 00:24:43.780
other things. What I'm gonna
encourage right now is one

487
00:24:43.780 --> 00:24:46.330
of the talks that was
given here at max by

488
00:24:46.480 --> 00:24:49.600
people on the windows phone
team was the design talk.

489
00:24:50.350 --> 00:24:53.050
It was the third talk
we gave on on Monday.

490
00:24:53.500 --> 00:24:57.220
And I highly recommend developers
go, if you'd look at

491
00:24:57.220 --> 00:24:59.260
any other talk, like my
talk was pretty good, cause

492
00:24:59.260 --> 00:25:01.870
I gave it and it's
the overview and so forth,

493
00:25:01.870 --> 00:25:03.910
and I'm proud of it.
But the talk that I

494
00:25:03.910 --> 00:25:06.610
think is the most interesting
and is the most informative

495
00:25:06.610 --> 00:25:09.670
about what we really want
to accomplish is the design

496
00:25:09.670 --> 00:25:13.990
talk, the, the, it, it
will help developers understand this

497
00:25:13.990 --> 00:25:19.900
design system and not just
where we're prescriptive and where

498
00:25:19.900 --> 00:25:21.880
we're saying, this is what
we really should do to

499
00:25:21.880 --> 00:25:23.980
make it look like the
rest of the phone and

500
00:25:23.980 --> 00:25:26.980
be beautiful, but also where
we really want you to

501
00:25:27.070 --> 00:25:30.670
adventure beyond that and do
creative things and how you

502
00:25:30.670 --> 00:25:33.490
can find kind of the
rails that will let you

503
00:25:33.490 --> 00:25:35.860
be successful there. And one
of the things that really

504
00:25:35.860 --> 00:25:39.670
impressed me was when I
saw the, the Netflix application,

505
00:25:40.240 --> 00:25:43.210
it was, I mean, I'm
not a designer, but I

506
00:25:43.210 --> 00:25:45.610
do know that I like
pretty things. And I saw

507
00:25:45.610 --> 00:25:47.590
it and I said, wow,
this looks like a windows

508
00:25:47.590 --> 00:25:49.750
phone app. And it looks
like Netflix. I mean, it

509
00:25:49.750 --> 00:25:51.620
was like red. It was
like red to the core,

510
00:25:51.620 --> 00:25:55.570
right. And it was evocative
of, of Netflix and it

511
00:25:55.570 --> 00:25:57.310
was a VOC. And then
what I thought was cool

512
00:25:57.310 --> 00:25:59.350
that it switched over into
Zune, which had kind of

513
00:25:59.350 --> 00:26:01.870
a Zune gray kind of
style. And it looked like

514
00:26:01.900 --> 00:26:03.700
Zoona in my Xbox and
it looked like Xena, my

515
00:26:03.700 --> 00:26:08.440
PC, but then Netflix was
there, which indicated to me.

516
00:26:08.440 --> 00:26:10.150
And I'm just, I mean,
I'm kind of reading into

517
00:26:10.150 --> 00:26:13.840
this, that somehow the Netflix
system was able to announce

518
00:26:14.230 --> 00:26:15.880
to the phone or connect
with the phone and say,

519
00:26:16.030 --> 00:26:19.060
Hey, I'm involved in media.
I'm part of the, the

520
00:26:19.060 --> 00:26:22.180
media hub, let me be
involved as well. And my

521
00:26:22.180 --> 00:26:24.640
Zune video is my podcast
and my Netflix were all

522
00:26:24.640 --> 00:26:27.670
in the same place. Is
that an, is that intentional?

523
00:26:27.880 --> 00:26:30.670
It is. So we have
this concept of these integrated

524
00:26:30.670 --> 00:26:33.250
experiences on the phone and
there's five or six or

525
00:26:33.250 --> 00:26:35.860
seven of them. I can't
remember the exact number. There's

526
00:26:35.860 --> 00:26:39.730
the people hub. There's the
office hub. There's the gaming

527
00:26:39.730 --> 00:26:44.700
hub. There is the, I
said office already. There is

528
00:26:44.700 --> 00:26:50.520
the music and video hub,
the marketplace, okay. Couple others.

529
00:26:50.730 --> 00:26:54.660
And these each have their
own unique way where additional

530
00:26:54.660 --> 00:26:58.590
content and, and assets can
be added in by third

531
00:26:58.590 --> 00:27:02.130
parties, but all, but they
are basically extensible so that

532
00:27:02.130 --> 00:27:05.490
additional things can happen within
them. We also have the

533
00:27:05.490 --> 00:27:07.200
ability. So that's one place.
And what you saw there

534
00:27:07.200 --> 00:27:09.780
was, was an example of
Netflix plugging into the music

535
00:27:09.780 --> 00:27:15.020
and video hub experience. Xbox,
in the sense of when

536
00:27:15.020 --> 00:27:17.690
I got Netflix on my
Xbox, it became part of

537
00:27:17.690 --> 00:27:20.450
the video live that's right.
It was very integrated. You've

538
00:27:20.450 --> 00:27:22.310
got it. Know the other
thing that we allow is

539
00:27:22.310 --> 00:27:25.730
it that a company like
Netflix can build an application

540
00:27:25.730 --> 00:27:28.820
that is their own hub.
And that's, so that's what

541
00:27:28.820 --> 00:27:32.960
you saw. You saw effectively.
The Netflix application was the

542
00:27:32.960 --> 00:27:36.470
Netflix hub and it had
its own experience in this

543
00:27:36.470 --> 00:27:40.490
horizontal Panorama mode. If people
are curious what this really

544
00:27:40.490 --> 00:27:44.570
looks like, the keynote for
the, for mix is available

545
00:27:44.570 --> 00:27:47.780
on demand. And all those
demos are on that keynote,

546
00:27:48.650 --> 00:27:51.800
you know, on the, the,
the live dot visit mix.com,

547
00:27:51.830 --> 00:27:54.770
right? That this is what
makes me start thinking about,

548
00:27:55.090 --> 00:27:57.230
on some of the existing
phones that I use that

549
00:27:57.230 --> 00:27:59.900
will go on named. I
find myself going, I go

550
00:27:59.900 --> 00:28:01.370
into the Twitter thing and
out of the Twitter thing

551
00:28:01.370 --> 00:28:02.810
and into the Facebook thing
and out of the Facebook

552
00:28:02.840 --> 00:28:04.340
thing. And now I go
into the forest square thing

553
00:28:04.340 --> 00:28:06.440
and it's like, well, why
can't put her in Facebook

554
00:28:06.440 --> 00:28:09.580
and Foursquare all be part
of something that is, is

555
00:28:09.680 --> 00:28:12.140
this integrated? It sounds like
you're saying that the developer

556
00:28:12.140 --> 00:28:14.990
platform will enable this. So
even though, like, for example,

557
00:28:14.990 --> 00:28:17.240
and again, I'm kind of
a pimping nerd dinner, which

558
00:28:17.240 --> 00:28:20.240
is a tiny, tiny, tiny
thing, but I could opt

559
00:28:20.240 --> 00:28:22.790
in to people. I could,
you know, I could somehow

560
00:28:23.000 --> 00:28:25.250
be part of one of
these hubs if the data

561
00:28:25.310 --> 00:28:28.130
presents itself. And I want
to be clear that we

562
00:28:28.130 --> 00:28:31.700
don't have, I think you're
applying a depth of extensibility

563
00:28:31.700 --> 00:28:33.830
that we really don't have
in this release. We have

564
00:28:33.830 --> 00:28:37.970
some examples within the various
hubs where this can happen.

565
00:28:38.000 --> 00:28:40.400
The one you gave, where
you could inject additional people,

566
00:28:40.400 --> 00:28:43.580
information into the people hub,
Maybe that's a little extreme,

567
00:28:43.580 --> 00:28:45.440
but I guess the idea
is that the notion of

568
00:28:45.440 --> 00:28:49.160
being social and getting updates
on different places, because I

569
00:28:49.160 --> 00:28:52.160
remember seeing a demo where
we looked at a person

570
00:28:52.160 --> 00:28:56.210
and we saw their updates
within that person. Is that

571
00:28:56.210 --> 00:28:59.030
something that, that we might
be in the future able

572
00:28:59.030 --> 00:29:02.030
to opt into In the
future? Absolutely. And the way

573
00:29:02.030 --> 00:29:03.860
to think about it is,
is what we've done. There

574
00:29:03.860 --> 00:29:06.380
is all that integration is
actually happiness. Part of winner's

575
00:29:06.380 --> 00:29:11.000
life. The aggregation of the
Facebook and windows live feed

576
00:29:11.000 --> 00:29:13.520
that the phone is representing
is not being done on

577
00:29:13.520 --> 00:29:15.920
the phone it's being done
as part of the service.

578
00:29:15.920 --> 00:29:17.660
And this is, I mean,
this is really the way

579
00:29:17.660 --> 00:29:20.780
apps should be built. The
business logic, the stuff that

580
00:29:20.780 --> 00:29:23.000
does the heavy lifting lifting
should run in the most

581
00:29:23.000 --> 00:29:26.840
powerful processor. There is the
cloud and the, the screen,

582
00:29:26.840 --> 00:29:30.050
the device should use its
resources to provide the best

583
00:29:30.050 --> 00:29:34.070
possible user experience locally. That
makes sense. So if you

584
00:29:34.070 --> 00:29:36.890
were going to enable something
like, you know, LinkedIn information

585
00:29:36.890 --> 00:29:38.990
and all these other different
things, that would be something

586
00:29:38.990 --> 00:29:40.860
that I would go and
sign up for and on

587
00:29:40.860 --> 00:29:43.120
in the cloud, because I
understand that all of this

588
00:29:43.120 --> 00:29:46.120
is being synchronized that's over
the, over the wire. Exactly.

589
00:29:46.390 --> 00:29:49.420
Oh, okay. Very cool. Well,
I really appreciate you taking

590
00:29:49.420 --> 00:29:50.800
the time to sit down
and chat with me today

591
00:29:50.800 --> 00:29:53.860
and everyone should go to
visit mix.com. I'm going to

592
00:29:53.860 --> 00:29:55.210
guess in a couple of
weeks. So a couple of

593
00:29:55.210 --> 00:29:56.920
days, maybe even we're going
to have all these sessions

594
00:29:56.920 --> 00:29:59.800
online, all the windows phone
sessions, as well as lots

595
00:29:59.800 --> 00:30:03.850
and lots of information@developer.windows, phone.com.
Yeah. And, and actually the

596
00:30:03.850 --> 00:30:08.200
mix sessions are already available
there quickly. The other thing

597
00:30:08.210 --> 00:30:09.400
I need you to give
a shout out to my

598
00:30:09.400 --> 00:30:16.240
blog. All right. blogs.msdn.com/c Kendall.
K I N E L.

599
00:30:16.980 --> 00:30:19.510
And you can follow me
on C Kindle on Twitter

600
00:30:19.510 --> 00:30:21.730
as well. Fantastic. Well, thank
you so much, Charlie Kendo

601
00:30:21.740 --> 00:30:24.280
for chatting with me here
at mix. This has been

602
00:30:24.280 --> 00:30:26.860
another episode of Hansel minutes,
and I'll see you again

603
00:30:26.890 --> 00:30:27.250
next week.

