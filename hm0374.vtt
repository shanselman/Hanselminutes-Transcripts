WEBVTT FILE

1
00:00:04.380 --> 00:00:16.400
<inaudible> From Hanselman it's dot
com. It's Hansel minutes, all

2
00:00:16.400 --> 00:00:20.540
weekly discussion with web developer
and technologists. Scott Hanselman. This

3
00:00:20.540 --> 00:00:25.070
is Lawrence Ryan announcing show number
three 77. Recorded live Thursday,

4
00:00:25.100 --> 00:00:29.900
June 27, 2013. Support for
Hanselman. This is provided by

5
00:00:29.900 --> 00:00:37.190
Tellerik offering the best in
developer tools and support online@telerik.com.

6
00:00:37.910 --> 00:00:42.140
And by Franklin is.net makers
of gesture, a powerful gesture,

7
00:00:42.140 --> 00:00:46.310
recording and recognition system for
Microsoft connect for windows developers

8
00:00:46.760 --> 00:00:51.800
details. Add gesture, PA k.com.
In this episode, Scott talks

9
00:00:51.800 --> 00:00:56.150
with Mads Christensen about his
newly open source web essentials.

10
00:00:58.910 --> 00:01:00.830
Hi, this is Scott Hanselman.
This is another episode of

11
00:01:00.830 --> 00:01:02.900
Hansel minutes. I'm actually down
here in San Francisco at

12
00:01:02.990 --> 00:01:08.090
build the sounds of sirens
behind me. No doubt. Some

13
00:01:08.090 --> 00:01:10.520
windows machine somewhere is having
trouble and they've called the

14
00:01:10.520 --> 00:01:13.910
police and I've got Matt
Christiansen here. We're actually heading

15
00:01:13.910 --> 00:01:16.550
out in my hotel room.
We've got the keynote is

16
00:01:16.550 --> 00:01:20.330
done day one, day two.
And you presented at build?

17
00:01:20.420 --> 00:01:23.300
I did. Yes. What did
you show? I showed a

18
00:01:23.300 --> 00:01:26.060
lot of, of the new
cool stuff that came in

19
00:01:26.420 --> 00:01:29.210
visual studio 2013 for web
developers. So a lot of

20
00:01:29.210 --> 00:01:35.180
new HTML capabilities, JavaScript and
browser link. Yeah. Put me

21
00:01:35.180 --> 00:01:37.280
in the artery now. I
like the name artery better

22
00:01:37.280 --> 00:01:39.050
than that. Yeah, I know.
But there's two things you're

23
00:01:39.050 --> 00:01:40.970
working on that are really
cool. And I think browser

24
00:01:40.970 --> 00:01:42.710
link is one. We'll talk
about that a little bit.

25
00:01:42.890 --> 00:01:44.750
And then web essentials, which
is kind of a side

26
00:01:44.750 --> 00:01:47.270
gig for you. It's actually
not, you know, I wouldn't

27
00:01:47.270 --> 00:01:49.730
say it's, it's sanctioned, but
it's still your thing, right?

28
00:01:49.730 --> 00:01:52.670
You own it. Yes, yes.
I'm the only developer on

29
00:01:52.670 --> 00:01:55.100
it, but yeah. Well, let's
talk about that first actually,

30
00:01:55.280 --> 00:01:57.950
because web essentials is kind
of this extension that you

31
00:01:57.950 --> 00:02:01.250
plug into 2012 or 2013,
I think there was a

32
00:02:01.250 --> 00:02:04.190
version for 2010, whereas the
original version came out for

33
00:02:04.190 --> 00:02:07.070
2010, but it's not as
feature rich. It came in

34
00:02:07.100 --> 00:02:10.430
pretty late. And then we
started working on 2012 and

35
00:02:10.430 --> 00:02:13.790
I kinda just went ahead
and, and, and worked on

36
00:02:13.790 --> 00:02:16.700
the version for 2012 early
on. So the 2010 version

37
00:02:16.910 --> 00:02:19.970
does have a lot of
features, but not nearly as

38
00:02:19.970 --> 00:02:22.550
much as, as many as
2012. How many people have

39
00:02:22.550 --> 00:02:27.080
downloaded web essentials now we're
probably pushing 500,000. Yeah. It's

40
00:02:27.080 --> 00:02:30.230
almost a half, man. It's
almost become, I think for

41
00:02:30.230 --> 00:02:34.070
front end web developers on
the, on the.net platform to

42
00:02:34.070 --> 00:02:37.760
be like essential. You know
what I mean? Yeah. I

43
00:02:37.760 --> 00:02:39.860
think that it is why
isn't it included out of

44
00:02:39.860 --> 00:02:43.040
the box while a lot
of the features actually now

45
00:02:43.070 --> 00:02:45.830
are included out of the
box, but they started in

46
00:02:45.830 --> 00:02:48.290
web essentials because that's just,
it's a playground. It's where

47
00:02:48.290 --> 00:02:53.210
we test ideas and iterate
over a possible solutions to

48
00:02:53.210 --> 00:02:56.150
problems that we all have
all front end developers have.

49
00:02:56.540 --> 00:03:00.970
And, and so we don't
actually get things right. Sometimes

50
00:03:00.970 --> 00:03:03.070
we know what a problem
is, but we might realize

51
00:03:03.070 --> 00:03:05.620
that there were several solutions.
And so we test them

52
00:03:05.620 --> 00:03:08.620
out and we actually then
measure like what works, what

53
00:03:08.620 --> 00:03:10.780
doesn't work. And when we
think we got it, then

54
00:03:11.140 --> 00:03:13.630
we're going to move it
in. So it's basically just

55
00:03:13.630 --> 00:03:17.200
a testing ground and it's
also a way for people

56
00:03:17.200 --> 00:03:19.870
to get their hands on
features way earlier than normal

57
00:03:20.770 --> 00:03:23.860
because they start there. It's
basically part of our specification

58
00:03:24.460 --> 00:03:27.070
planning process if you want.
Right. So, so you get

59
00:03:27.070 --> 00:03:29.140
really early access to a
lot of features. Yeah. I

60
00:03:29.140 --> 00:03:32.680
kind of reminds me of,
I use Gmail for my,

61
00:03:32.680 --> 00:03:35.940
my internet mail and I've,
I have a, there's a

62
00:03:35.940 --> 00:03:39.600
feature in Gmail called labs
and it's just random stuff.

63
00:03:39.630 --> 00:03:42.090
And like, some of it
might be, you know, embed

64
00:03:42.090 --> 00:03:44.490
YouTube videos and other ones
might be like change the

65
00:03:44.490 --> 00:03:47.160
way this button looks. And
I think what they're doing

66
00:03:47.160 --> 00:03:49.530
is, is that they're voting
and they're basically seeing how

67
00:03:49.530 --> 00:03:51.480
many people want that feature.
How many people use that

68
00:03:51.480 --> 00:03:55.950
feature and then every year
or so they'll graduate individual

69
00:03:55.950 --> 00:03:59.250
features into the main product.
So then like send an

70
00:03:59.250 --> 00:04:01.440
archive was a feature and
it moved into the main

71
00:04:01.440 --> 00:04:04.500
product. Are there things that
are in labs that have

72
00:04:04.500 --> 00:04:08.610
shown up in 2012? There
is for instance, lesson coffee

73
00:04:08.610 --> 00:04:11.670
script, less, less than COVID
strip started in web centrals.

74
00:04:12.870 --> 00:04:17.850
So did syntax highlighting for
mustache and handlebars and even

75
00:04:17.850 --> 00:04:21.480
a paste, Jason as classes
actually started there and mustache

76
00:04:21.630 --> 00:04:25.380
Handlebars again are not just
funny nouns, but are the

77
00:04:25.380 --> 00:04:29.160
names of templating. Yeah. They're,
they're actual things. Yes. They're

78
00:04:29.160 --> 00:04:31.110
real thing for those that
may not know. Yeah. So,

79
00:04:31.110 --> 00:04:33.630
I mean, if you're using
Ember JS, for instance, then

80
00:04:33.630 --> 00:04:37.470
you're using handlebars probably for
your templating. So we now

81
00:04:37.470 --> 00:04:39.930
have nice insects highlighting, but
all that started just as

82
00:04:40.410 --> 00:04:44.190
prototypes and experiments in web
essentials. Now for me, I

83
00:04:44.220 --> 00:04:47.700
don't like running extensions in
visual studio cause I'm afraid

84
00:04:47.700 --> 00:04:50.160
that it destabilizes Visual studio.
I don't know if that's

85
00:04:50.160 --> 00:04:53.610
historical, Maybe the old way
that they used to do

86
00:04:53.610 --> 00:04:56.100
that, but I haven't had
that many problems with web

87
00:04:56.100 --> 00:04:58.830
essentials, like crashing stuff. Now,
why does that mean that

88
00:04:58.830 --> 00:05:01.710
you're a better programmer than
the other people? There's something

89
00:05:01.710 --> 00:05:03.540
about the way you wrote
it? I hear, I hear

90
00:05:03.540 --> 00:05:05.790
actually hear from a lot
of people the same concerns

91
00:05:06.360 --> 00:05:09.270
and I actually also have
them not, not with visual

92
00:05:09.270 --> 00:05:14.580
studio anymore, but for instance,
with browsers kind of, we

93
00:05:14.580 --> 00:05:16.200
know that if you have
a lot of plugins for

94
00:05:16.200 --> 00:05:18.960
your browsers, that slows everything
down and, and we think

95
00:05:18.960 --> 00:05:21.060
that, well, it must be
the same then for, for

96
00:05:21.060 --> 00:05:23.550
visual studio, but actually the
way you hook things up

97
00:05:23.550 --> 00:05:25.950
in visual studio, that's not
the case. For instance, you

98
00:05:25.950 --> 00:05:31.440
don't load a particular extension
for CSS, for instance, unless

99
00:05:31.440 --> 00:05:35.850
you open a CSS file.
So there, so I guess

100
00:05:35.850 --> 00:05:38.580
the, the, the nature's is
different. So you're saying that

101
00:05:38.940 --> 00:05:41.370
if I load it Official
studio in Weber, centrals, we

102
00:05:41.370 --> 00:05:43.050
have a center. It doesn't
actually even load it when

103
00:05:43.050 --> 00:05:45.840
I'm sitting File new project.
Well, essentially, actually it does

104
00:05:45.840 --> 00:05:48.930
load it because it does
some things, but it does

105
00:05:48.930 --> 00:05:51.330
it in a nonblocking way
and the heavy lifting of

106
00:05:51.360 --> 00:05:54.540
everything that web essential does
it doesn't do one solution

107
00:05:54.540 --> 00:05:57.560
load or when you open
visual studio, actually that doesn't

108
00:05:57.560 --> 00:06:00.290
run at all. When you
just opened visual studio, when

109
00:06:00.290 --> 00:06:02.390
you open a solution, that's
when it kicks in. Okay.

110
00:06:02.630 --> 00:06:04.670
But it doesn't really do
much. It just registers some

111
00:06:04.670 --> 00:06:07.940
commands. And then after that,
then you have to invoke

112
00:06:07.940 --> 00:06:09.980
those commands. You have to
be in the CSS editor,

113
00:06:09.980 --> 00:06:14.560
for instance, for those commands
to be loaded. Now, editing,

114
00:06:14.590 --> 00:06:17.020
changing the way the editor
behaves. The, the two main

115
00:06:17.110 --> 00:06:19.360
extensions that I think of
when I think of changing

116
00:06:19.360 --> 00:06:24.640
how an editor behaves are
code rush and ReSharper yes.

117
00:06:24.670 --> 00:06:26.800
And they do all sorts
of crazy stuff. They're painting

118
00:06:26.800 --> 00:06:29.080
over the top and all
that kind of stuff. When

119
00:06:29.080 --> 00:06:33.340
did extending the editors in
visual studio become less scary

120
00:06:33.340 --> 00:06:35.620
and evil because you seem
to be able to, and

121
00:06:35.620 --> 00:06:37.570
you and I will have
conversations late at night and

122
00:06:37.570 --> 00:06:39.520
the next day you've gone
on, you've done the thing

123
00:06:40.060 --> 00:06:42.040
and you've extended the editor
inside. I don't know if

124
00:06:42.040 --> 00:06:44.080
it, if that's, if it
has gotten that much easier.

125
00:06:44.080 --> 00:06:48.970
I think the, the initial,
like the initial hurdle that

126
00:06:48.970 --> 00:06:52.360
you have to, to kind
of understand what's going on

127
00:06:52.360 --> 00:06:55.840
and understand the meth structure
of, Of meth, the managing

128
00:06:55.840 --> 00:06:58.300
sensibility. Yeah. Yeah. The how,
how you can kind of

129
00:06:58.300 --> 00:07:01.300
inject your own code into
visual studio. You have to

130
00:07:01.300 --> 00:07:03.580
kind of understand how that
works. It took me probably

131
00:07:03.580 --> 00:07:06.370
six months to kind of
understand it, but when you

132
00:07:06.370 --> 00:07:08.380
then get it and you
already have code that does

133
00:07:08.380 --> 00:07:10.600
similar things, it's really, really
simple if you're just to

134
00:07:10.630 --> 00:07:13.840
copy and modify and basically
that's what I do. I

135
00:07:13.840 --> 00:07:16.630
see. So what you're saying
is that there's things where

136
00:07:16.630 --> 00:07:18.760
that you might want to
expand or hovered over, or

137
00:07:18.760 --> 00:07:21.580
identify a piece of information
within some CSS. And now

138
00:07:21.580 --> 00:07:23.860
that you've figured out the,
where that lives in memory

139
00:07:24.340 --> 00:07:26.860
going and changing the color
of something or putting a

140
00:07:27.010 --> 00:07:29.050
tool tip over something is
not a big deal. It's

141
00:07:29.050 --> 00:07:31.240
not a big deal. There's
actually some good samples out

142
00:07:31.240 --> 00:07:32.650
there. You have to kind
of know where to look.

143
00:07:32.650 --> 00:07:35.620
And, and it's not that
obvious all the time, but

144
00:07:35.620 --> 00:07:37.420
there are code there's code
out there and you can

145
00:07:37.420 --> 00:07:39.220
just search for it. And
that's what I did. A

146
00:07:39.220 --> 00:07:41.290
lot of people think that
while I work at Microsoft,

147
00:07:41.290 --> 00:07:43.480
so I have direct access
to those teams that build

148
00:07:43.570 --> 00:07:46.540
the different things in visual
studio. And that's why I'm

149
00:07:46.540 --> 00:07:49.240
able to do this. That's
not true. You're not using

150
00:07:49.240 --> 00:07:52.900
any undocumented. I'm not like
going over to some other

151
00:07:52.900 --> 00:07:54.580
team and visual studio and
asking them how to do

152
00:07:54.580 --> 00:07:57.790
certain things. It's all stuff
I found online, or I

153
00:07:57.790 --> 00:08:01.390
discover interfaces or something like
that. That's in that I

154
00:08:01.390 --> 00:08:04.840
can just see, like that's
in the instant extensibility project.

155
00:08:05.590 --> 00:08:08.590
So when you say file
new extensibility project, the SDK

156
00:08:08.590 --> 00:08:11.770
lays down a lot of
templates and, and, and DLL

157
00:08:11.770 --> 00:08:14.530
files that you can use.
And I just discovered them

158
00:08:14.530 --> 00:08:17.890
they're basically. Okay. Yeah. So
the thing that I think

159
00:08:17.890 --> 00:08:20.920
that potentials is most known
for is taking the CSS

160
00:08:20.920 --> 00:08:23.530
editor and just making it
better, because I remember seeing

161
00:08:23.530 --> 00:08:25.960
your presentation that you gave
to the team that had

162
00:08:25.960 --> 00:08:28.360
some like bar charts. And
it was showing kind of

163
00:08:28.360 --> 00:08:29.920
like from zero to a
hundred. And it was like,

164
00:08:30.160 --> 00:08:33.430
here's how good our CSS
editor is. And in 2010

165
00:08:33.430 --> 00:08:35.470
it was like, we're doing
30% of what we could

166
00:08:35.470 --> 00:08:38.680
do. And in 200 2012,
we're doing, I don't know,

167
00:08:38.680 --> 00:08:40.330
I'm just making numbers up
60% of what we're doing.

168
00:08:40.510 --> 00:08:42.310
And then you said, but
if we just push a

169
00:08:42.310 --> 00:08:45.250
little harder, we could do
like 98% or a hundred

170
00:08:45.250 --> 00:08:48.070
percent. Yeah. And then, you
know, sometimes people believe you

171
00:08:48.070 --> 00:08:50.290
and sometimes they don't and
then sometimes you just go

172
00:08:50.290 --> 00:08:51.670
and do it. And that's
one of the things that

173
00:08:51.730 --> 00:08:53.260
is a good way to
get things done at Microsoft

174
00:08:53.260 --> 00:08:55.060
is to just simply do
it, just do it and

175
00:08:55.200 --> 00:08:57.000
go back later and Show
your boss that you did

176
00:08:57.000 --> 00:08:59.550
it. Yeah. You just went
off basically and said, you

177
00:08:59.550 --> 00:09:02.640
know, I don't care what
those guys say. I know

178
00:09:02.640 --> 00:09:04.950
what our CSS editor can
do. And you basically just

179
00:09:04.950 --> 00:09:07.320
went and did it. Yeah.
Well, it, it came from,

180
00:09:07.800 --> 00:09:11.310
yeah, well, it started out
being my way of testing

181
00:09:11.310 --> 00:09:13.320
this CSS at a server.
So in 2012 we built

182
00:09:13.320 --> 00:09:15.870
a brand new one. And
so we threw everything out.

183
00:09:15.870 --> 00:09:18.510
That was the old editor,
which was the same editor

184
00:09:18.510 --> 00:09:21.360
that we've used always in
visual studio. And we replaced

185
00:09:21.360 --> 00:09:23.730
it with a new one
that had full extensibility and

186
00:09:24.060 --> 00:09:27.540
our way of testing that
extensibility model and making sure

187
00:09:27.540 --> 00:09:31.080
that the API was as
flexible as possible was to

188
00:09:31.080 --> 00:09:33.810
actually build extensions. So that's
how it all started. So

189
00:09:33.810 --> 00:09:37.110
it just started as me
actually testing what a developer

190
00:09:37.680 --> 00:09:42.570
was coding. And so the
CSS editor in 2012, even

191
00:09:42.570 --> 00:09:44.190
though it's, you know, it's
text, right, doesn't look any

192
00:09:44.190 --> 00:09:47.850
different ideas. It's completely rewrite,
completely all managed code, all

193
00:09:47.850 --> 00:09:51.000
very nicely done and paired
to 2010 compared to 2010

194
00:09:51.000 --> 00:09:53.370
and everything before it's it's
it has a really nice

195
00:09:53.370 --> 00:09:57.360
API, probably the nicest API
of all the editors, at

196
00:09:57.360 --> 00:10:00.300
least to my knowledge. And,
and now we're doing the

197
00:10:00.300 --> 00:10:02.460
same thing with HTML, which
is very exciting too. So

198
00:10:02.460 --> 00:10:05.370
in 2013, which they announced
a couple of days ago,

199
00:10:05.700 --> 00:10:07.620
the exact same thing has
been done to the HTML

200
00:10:07.620 --> 00:10:10.170
editor. So the razor editor,
all that stuff completely be

201
00:10:10.170 --> 00:10:13.680
ready, completely rewritten from scratch.
And th the sensibility model

202
00:10:13.680 --> 00:10:16.500
is the same. The concepts
are the same as CSS.

203
00:10:16.500 --> 00:10:19.020
So now we're going to
have a more similar and

204
00:10:19.020 --> 00:10:21.630
familiar story. So if you've
ever done any extensibility on

205
00:10:21.630 --> 00:10:26.400
CSS, transferring that knowledge to
HTML is it's pretty easy.

206
00:10:26.400 --> 00:10:28.170
Actually. One of the things
that I showed in the

207
00:10:28.380 --> 00:10:30.930
keynote, and I kind of
snuck it in there as

208
00:10:30.930 --> 00:10:33.960
I'm showing your stuff. Right.
Yeah. Which is, you know,

209
00:10:34.830 --> 00:10:38.310
cool is a hovering over
a CSS rule and then

210
00:10:38.310 --> 00:10:42.000
having real world browser versions
and saying, okay, this version

211
00:10:42.000 --> 00:10:43.890
of opera and this version
of Firefox, et cetera, et

212
00:10:43.890 --> 00:10:45.870
cetera, where is it? You
learn that from a database

213
00:10:45.870 --> 00:10:48.300
or how do you know
that stuff? That's actually pretty

214
00:10:48.300 --> 00:10:51.360
funny because that's in, that
was in the box in

215
00:10:51.360 --> 00:10:53.880
2012. That was not something
that we loaded later on

216
00:10:54.300 --> 00:10:57.210
it, is it, is it
the knowledge or the tool

217
00:10:57.210 --> 00:10:59.610
tip the knowledge, the tools
that came with web essentials,

218
00:10:59.610 --> 00:11:02.550
but the knowledge of the
browsers came in the box.

219
00:11:02.880 --> 00:11:04.950
Oh, we just never did
anything in a second. So

220
00:11:05.220 --> 00:11:09.750
I know that in 2012,
is it in 2010 or

221
00:11:09.750 --> 00:11:11.880
2012? It'll give me squiggles
and tell me if I'm

222
00:11:11.880 --> 00:11:14.750
doing something I shouldn't be
doing, but it's not doing

223
00:11:14.770 --> 00:11:16.440
a little tell me like,
Oh, that's not CSS three

224
00:11:16.440 --> 00:11:18.960
that's. Yes, that was 2010.
Okay. That's what we're were

225
00:11:18.960 --> 00:11:21.210
just doing web centers up
here. Right? Right. Remember sir,

226
00:11:21.390 --> 00:11:25.800
but you're saying that it
knows that transform works 3d

227
00:11:25.800 --> 00:11:28.410
transform works on 90 10
and it just doesn't do

228
00:11:28.410 --> 00:11:30.120
anything with it. Correct. Where
is it? It's like a

229
00:11:30.120 --> 00:11:33.450
database somewhere. That's a crime.
Well, no, all the, just

230
00:11:33.450 --> 00:11:36.510
like with XML actually, Oh,
sorry. With the HTML letters

231
00:11:36.510 --> 00:11:40.170
or all the, all the
schema files that make up

232
00:11:40.350 --> 00:11:43.410
the intelligence and validation of
CSS actually is just XML

233
00:11:43.410 --> 00:11:48.470
files somewhere within visual studio
installed directory program files, metadata.

234
00:11:49.230 --> 00:11:51.330
It's actually very nicely structured.
So you have one XML

235
00:11:51.330 --> 00:11:53.920
file per CSS, three module.
So it's really easy to

236
00:11:53.920 --> 00:11:57.100
navigate around and CSS module.
You mean? I mean, the

237
00:11:57.100 --> 00:11:59.890
actual, she says module by
the W3C. Okay. So you

238
00:11:59.890 --> 00:12:03.910
have transform module. You'll have
a, you know, background is

239
00:12:03.910 --> 00:12:07.210
in borders, animation, animations, and
so on. Yeah. The text

240
00:12:07.210 --> 00:12:09.940
module, I think there's like
40 of them. Right? Nicely

241
00:12:09.940 --> 00:12:12.850
structured, very nicely structured. Very
easy to see how to

242
00:12:12.850 --> 00:12:14.650
work. I wrote a blog
post a while back on,

243
00:12:14.650 --> 00:12:16.870
how do I actually add
new schemas? And I had

244
00:12:16.870 --> 00:12:19.450
an example how to add
K HTML, which is the

245
00:12:19.450 --> 00:12:23.350
old WebKit vendor prefix. So
you're saying that if a

246
00:12:23.350 --> 00:12:26.410
new CSS module came out,
theoretically, you could add that

247
00:12:26.410 --> 00:12:28.840
to visual studio and web
essentials and not have to

248
00:12:28.840 --> 00:12:31.540
recompile anything. That's absolutely. That's
exactly what a web essentially

249
00:12:31.540 --> 00:12:34.330
like she does. I have
every three days web essentials.

250
00:12:34.330 --> 00:12:36.130
We'll see if there is
an update to the schemas

251
00:12:36.130 --> 00:12:39.100
and they will just download
the new XML files. You're

252
00:12:39.100 --> 00:12:42.490
kidding. Where are you for
that online on real world

253
00:12:42.490 --> 00:12:45.940
validator.com and what is real
world validator.com. See that you're

254
00:12:45.940 --> 00:12:48.490
just leading me down the
Primrose path. This is a,

255
00:12:48.970 --> 00:12:50.590
yeah. I do have an
analytics on it and not

256
00:12:50.590 --> 00:12:54.760
a lot of visitors, but,
well, yeah, but basically if

257
00:12:54.760 --> 00:13:00.640
you, yeah, I hijacked F1
help, right. From CSS. So

258
00:13:00.640 --> 00:13:03.130
if you ever hit F
one, when your cursors on

259
00:13:03.130 --> 00:13:07.710
a property, you actually hi,
Jack. No, I don't. That's

260
00:13:07.710 --> 00:13:10.980
awesome. Okay. So if I
have CSS open and I

261
00:13:10.980 --> 00:13:13.020
a firewall and I have
web centers, if I hit

262
00:13:13.050 --> 00:13:17.370
for help, yes, I will
get your website. Yes. But

263
00:13:17.370 --> 00:13:21.180
for a good reason though,
because no, but it's why

264
00:13:21.180 --> 00:13:24.360
would you go to MSDN,
which is what you normally

265
00:13:24.360 --> 00:13:28.130
go to go to MSDN
to learn about CSS. It

266
00:13:28.140 --> 00:13:30.120
is not the natural place.
So what I did actually

267
00:13:30.120 --> 00:13:33.960
was to, I didn't just
put people on real world

268
00:13:33.960 --> 00:13:36.180
validators for the fun of
it. It's actually, because you

269
00:13:36.180 --> 00:13:39.390
can see in there very
clearly what browser supports, what

270
00:13:39.390 --> 00:13:41.880
with linked to the specification,
with linked to the module,

271
00:13:42.000 --> 00:13:45.420
all sorts of metadata like
that. Can I use.com? Yes.

272
00:13:45.450 --> 00:13:48.300
Very much indeed. Interesting. Okay.
And where are you getting

273
00:13:48.300 --> 00:13:52.950
that information from? Well, that's,
that was manually gathered. Jen

274
00:13:52.960 --> 00:13:54.810
figured it out. Oh yeah,
no. Yeah. We went to,

275
00:13:55.030 --> 00:13:57.690
I use.com and other places
to kind of see all

276
00:13:57.690 --> 00:14:01.260
these things, but then it
turned out that all these

277
00:14:01.260 --> 00:14:03.660
different sites actually disagree on
a lot of things. How

278
00:14:03.660 --> 00:14:05.790
did you figure out the
resilient, the final word? Well,

279
00:14:05.790 --> 00:14:08.730
we tried it to see.
Yeah. So of course we

280
00:14:08.730 --> 00:14:11.070
have contacts over at the
IEP team. So they helped

281
00:14:11.070 --> 00:14:15.450
out you think, well, no,
we needed that because we,

282
00:14:15.450 --> 00:14:17.310
we, of course we want
make sure that we have

283
00:14:17.340 --> 00:14:21.600
everything that all the browsers
support. So Bruce Lawson from opera

284
00:14:21.600 --> 00:14:24.090
help out with, with the
opera specific stuff and all

285
00:14:24.090 --> 00:14:27.900
that. So which, which actually
brings me to another thing,

286
00:14:27.930 --> 00:14:31.320
the IntelliSense and the CSS
editor would help tell me

287
00:14:31.320 --> 00:14:33.450
what's built in versus what's
in web, essentially, because I

288
00:14:33.450 --> 00:14:37.350
know now that I can
type hyphen O or hyphen

289
00:14:37.380 --> 00:14:40.770
M S and I can
get browser specific prefixes. Yeah.

290
00:14:40.770 --> 00:14:42.600
That's built in, that's built
in. So we'll get to

291
00:14:42.660 --> 00:14:44.880
out of the box. I
get that in 2012, you

292
00:14:44.880 --> 00:14:46.950
get all the vendor specifics
built in. And if you

293
00:14:46.950 --> 00:14:49.560
hit dash or hyphen first
and they all show up,

294
00:14:49.590 --> 00:14:52.010
that's all building. Now I
know that a lot of

295
00:14:52.010 --> 00:14:55.670
people, like, for example, Leah
Varu from the W3C has

296
00:14:55.820 --> 00:14:59.420
been encouraging people to do
things prefix free. And she

297
00:14:59.420 --> 00:15:02.690
might look at some aspects
of a tool like a

298
00:15:02.990 --> 00:15:05.750
Weber centrals. And think of
that promotes a world full

299
00:15:05.750 --> 00:15:08.150
of vendor prefixes. Yes. What
do you think about that?

300
00:15:08.150 --> 00:15:10.220
And are you thinking about
changing it, such that it

301
00:15:11.240 --> 00:15:14.540
encourages the user in a
different direction? Yeah, that is

302
00:15:14.540 --> 00:15:18.950
a very, that is a
very interesting thing because we,

303
00:15:19.030 --> 00:15:21.710
we do not want to
encourage bad behavior. Right. And

304
00:15:21.770 --> 00:15:24.920
we also want to move
as, as browser stabilize. We

305
00:15:24.920 --> 00:15:26.870
want to make sure that
we're ahead and we've removed

306
00:15:26.870 --> 00:15:29.840
all vendor prefixes that are
no longer use. And I

307
00:15:29.840 --> 00:15:32.360
got some emails, actually. They
got a lot of tweets

308
00:15:32.360 --> 00:15:34.370
as well from people that
all of a sudden was

309
00:15:34.370 --> 00:15:38.930
wondering, why do I not
have any dash mosque, dashed

310
00:15:38.930 --> 00:15:41.870
border radios and Daz WebKit
border radius anymore. And that's

311
00:15:41.870 --> 00:15:44.870
basically because we updated the
schema files and web essentials

312
00:15:44.870 --> 00:15:46.910
goes out and checks for
them and they were no

313
00:15:46.910 --> 00:15:49.160
longer needed. So it keeps
itself up to date. So

314
00:15:49.160 --> 00:15:51.380
it actually removes the vendor
specifics that are no longer

315
00:15:51.380 --> 00:15:53.870
needed. And I think the
rule I had back when

316
00:15:53.870 --> 00:15:57.860
I did that was if
it's not supported, if the

317
00:15:57.860 --> 00:16:02.690
standard property is supported in
Firefox for then I'm just

318
00:16:02.690 --> 00:16:04.670
going to remove the Mozilla
version. And then they had

319
00:16:04.670 --> 00:16:06.650
the same kind of version
you haven't cut off point.

320
00:16:06.680 --> 00:16:07.910
I had a cut off
point for each of the

321
00:16:07.910 --> 00:16:09.980
browser based. Okay. So then
let me ask you this.

322
00:16:09.980 --> 00:16:12.680
If I already have a
CSS file, that's using these,

323
00:16:13.220 --> 00:16:16.700
do you have a sweep
function that will go and

324
00:16:16.700 --> 00:16:18.170
tie, you know, you're wincing.
Cause you know, you need

325
00:16:18.170 --> 00:16:21.680
it. That will go through
and basically check desk. You

326
00:16:21.680 --> 00:16:23.720
know what I mean? Like
where's my CSS lint. Yeah.

327
00:16:24.740 --> 00:16:26.420
No, it does not do
that. It does it the

328
00:16:26.420 --> 00:16:29.420
other opposite way. It does
it. If you, if you're

329
00:16:29.420 --> 00:16:31.520
missing any, it will tell
you, it will not tell

330
00:16:31.520 --> 00:16:33.400
you It will. It will.
Well, I will tell you

331
00:16:33.400 --> 00:16:35.950
if you have Vendor specific
that no longer exists, it

332
00:16:35.950 --> 00:16:37.750
will simply just say, this
does not exist. I see.

333
00:16:38.230 --> 00:16:40.990
But you have to delete
it manually. Okay. Now, one

334
00:16:40.990 --> 00:16:42.880
of the things that you
do is you augment in

335
00:16:42.880 --> 00:16:46.030
web essentials features that aren't
necessarily features that you work

336
00:16:46.030 --> 00:16:48.340
on. So for example, Howard
and the team that works

337
00:16:48.340 --> 00:16:53.110
on bundling optimization, they do
their bundling and observation. If

338
00:16:53.110 --> 00:16:55.330
I understand correctly, cause they're
on our team. Hope I

339
00:16:55.330 --> 00:16:59.650
better understand correctly more, mostly
at runtime. Yes. You know,

340
00:16:59.650 --> 00:17:02.370
you put together bundles, but
you have this cool featured.

341
00:17:02.370 --> 00:17:06.250
We'll actually to that take
the idea of runtime minification

342
00:17:06.250 --> 00:17:09.190
and bundling of CSS. And
you have like open a

343
00:17:09.190 --> 00:17:13.210
CSS file, hit control S
it's very natural gesture. And

344
00:17:13.210 --> 00:17:16.480
then a.men shows up next
to it. Yes. Which has

345
00:17:16.480 --> 00:17:18.580
saved time. Yes. And then
you've got this idea of

346
00:17:18.580 --> 00:17:21.370
a bundle file. That's like
a little XML file that

347
00:17:21.370 --> 00:17:23.500
says these are a bundle
and then you will hook

348
00:17:23.540 --> 00:17:25.360
into that. And I could
even put it into build

349
00:17:25.360 --> 00:17:27.700
time. So it got a
lot of different choices about

350
00:17:27.700 --> 00:17:29.890
when I could do that.
Well actually there is no

351
00:17:29.890 --> 00:17:33.310
build time for either bundling
or minification in Volvo centrals.

352
00:17:33.310 --> 00:17:37.620
There are no hooks at
all. But for bunny minification

353
00:17:37.660 --> 00:17:41.020
actually the official nuke or
sorry, the Howard's team that

354
00:17:41.020 --> 00:17:43.810
does the system with visualization,
they're actually coming up. Yeah.

355
00:17:43.810 --> 00:17:46.150
They're coming out with a
funding and modification in this

356
00:17:46.150 --> 00:17:47.980
build times. They are. Okay.
So that's all right. Sorry.

357
00:17:47.980 --> 00:17:50.700
I misunderstood. So they will
have runtime and Build on

358
00:17:50.700 --> 00:17:54.000
the web on the, on
the, on the official side.

359
00:17:54.000 --> 00:17:57.330
Right. Pardon me? And then
we'll have saved time. Now,

360
00:17:57.480 --> 00:17:59.550
could the shave time mess
up? Like, could you fight

361
00:17:59.550 --> 00:18:03.440
with their feature? No, not
really. Because all they're all

362
00:18:03.440 --> 00:18:05.810
runtime, so they will take
whatever she has filed. You

363
00:18:05.810 --> 00:18:08.660
have registered with the runtime
component and whether or not

364
00:18:08.660 --> 00:18:12.740
that that whether or not
that's CSS file comes from,

365
00:18:12.980 --> 00:18:15.500
you know, has been generated
through a grant funding mechanism

366
00:18:15.500 --> 00:18:18.110
in web essentials or, or
not, that doesn't really matter

367
00:18:18.440 --> 00:18:21.230
Value than a web, essentially
saving a modified version on

368
00:18:21.620 --> 00:18:24.680
when I hit save, if
I choose not to use.

369
00:18:24.680 --> 00:18:26.570
Yeah. It's a personal choice.
I see. So if I

370
00:18:26.570 --> 00:18:28.940
choose not to use runtime
bundling, it might just be

371
00:18:28.940 --> 00:18:31.130
there waiting for me. Ready
to go. Yeah. I mean,

372
00:18:31.130 --> 00:18:33.470
I like a runtime bundling
for a lot of, a

373
00:18:33.470 --> 00:18:35.210
lot of things. And then
for some things I don't

374
00:18:35.210 --> 00:18:37.910
like to like it, a
lot of people, they, they,

375
00:18:38.210 --> 00:18:41.540
they like to serve all
their static files statically, right?

376
00:18:41.600 --> 00:18:43.190
Yeah. That's a good point.
So they just want the

377
00:18:43.190 --> 00:18:46.550
Fox, you understand what's happening
and you know, Yeah. So

378
00:18:46.550 --> 00:18:48.290
let's say though that too,
I'm starting to realize that

379
00:18:48.290 --> 00:18:50.090
this is a lot of
work and you are all

380
00:18:50.090 --> 00:18:54.770
by yourself putting together Crapload
of work. And what happens

381
00:18:54.770 --> 00:18:57.530
if you get hit by
a truck and web essentially

382
00:18:57.730 --> 00:18:59.750
is just going to sit
there on your hard drive

383
00:18:59.750 --> 00:19:02.270
and we'll never know, Well,
we're going to have well,

384
00:19:02.300 --> 00:19:05.570
that, that was a real
problem until last Friday when

385
00:19:05.570 --> 00:19:07.850
I opened sourced the whole
thing. Ah, so now it's

386
00:19:07.850 --> 00:19:10.640
actually out in the wild
is on get up. So

387
00:19:10.640 --> 00:19:13.490
it's On GitHub and I
can, like, I could add

388
00:19:13.490 --> 00:19:15.410
a new module or do
something cool. Yep. And that's,

389
00:19:15.410 --> 00:19:17.540
I hope you will. I
hope you will. I'm really

390
00:19:17.540 --> 00:19:19.970
eager to see what people
will come up with because

391
00:19:19.970 --> 00:19:21.770
there has been a lot
of interest in helping out

392
00:19:21.800 --> 00:19:24.950
from the community and it
hasn't really been possible before,

393
00:19:24.950 --> 00:19:26.690
but now we finally figured
out how to open source

394
00:19:26.690 --> 00:19:29.030
it and you know, in
a good way. And now

395
00:19:29.030 --> 00:19:34.070
it is. So hopefully we're
going to see a way

396
00:19:34.070 --> 00:19:37.490
bigger momentum coming, going forward
here. Now on the, you

397
00:19:37.490 --> 00:19:41.270
said that in 2012, we
updated the CSS editor. So

398
00:19:41.270 --> 00:19:43.070
it would be very flexible
and got a great new

399
00:19:43.070 --> 00:19:45.860
API for extensibility, which made
all of the cool stuff

400
00:19:45.860 --> 00:19:49.010
you did possible. Yes. Now
in 2013 we were doing

401
00:19:49.010 --> 00:19:52.280
the exact same thing to
the HTML editor. What crazy

402
00:19:52.280 --> 00:19:55.610
stuff might I now want
to do in weather centrals?

403
00:19:55.610 --> 00:19:57.230
And is that hooked up
so that someone could go

404
00:19:57.230 --> 00:20:00.300
and see the hooks? Oh
yes. Ready and waiting. There

405
00:20:00.300 --> 00:20:02.690
is already stuff in there
as I've already added smart

406
00:20:02.690 --> 00:20:04.310
tags. So if you want
to add smart tax that

407
00:20:04.310 --> 00:20:06.440
are so smart tech, you
know, from C sharp, it's

408
00:20:06.440 --> 00:20:08.960
that little thing that shows
up whenever you implement a,

409
00:20:08.960 --> 00:20:11.390
an interface. For instance, it
shows up a little, a

410
00:20:11.630 --> 00:20:15.590
cliff, like little, little context
menu and just context menu

411
00:20:15.590 --> 00:20:18.200
on the actual item itself.
So in this case, that

412
00:20:18.200 --> 00:20:20.420
item could be an attribute.
It could be an HTML

413
00:20:20.420 --> 00:20:23.510
element. Okay. And you can
invoke that a control comment,

414
00:20:23.510 --> 00:20:25.250
we'll open it up and
you can basically do whatever

415
00:20:25.250 --> 00:20:28.040
you want. And because you
have control calmer control dot,

416
00:20:28.070 --> 00:20:32.690
Oh, sorry, control dot, sorry.
Two different features. So, but

417
00:20:32.690 --> 00:20:34.850
anyway, since you have full
access to the, to the,

418
00:20:34.910 --> 00:20:37.850
to the tree, the HTML
tree or Dom tree or

419
00:20:37.850 --> 00:20:42.020
whatever you want to call
it, you can manipulate all

420
00:20:42.020 --> 00:20:44.210
you want. So, so we
ship out of the box.

421
00:20:44.210 --> 00:20:46.940
We have features that will
automatically add a height and

422
00:20:46.940 --> 00:20:51.700
a attribute to an image
or basically foreign encoded. And

423
00:20:51.700 --> 00:20:54.280
I've added new other stuff
that will convert an image

424
00:20:54.280 --> 00:20:58.020
to a figure, an HTML
five figure tech. I wonder

425
00:20:58.020 --> 00:21:00.360
if I could do something
cool with SVG and illustrator

426
00:21:00.360 --> 00:21:03.060
files or come up with
some way to do that.

427
00:21:03.120 --> 00:21:05.610
Oh yeah. Like now when
you, something that we couldn't

428
00:21:05.610 --> 00:21:08.640
do before, that seems a
very basic is when you

429
00:21:08.640 --> 00:21:11.370
have an image tag and
you point to an image

430
00:21:11.370 --> 00:21:13.290
somewhere, right. Which I do
all the time. You want

431
00:21:13.290 --> 00:21:15.540
to just take a food
up PNG and drag it

432
00:21:15.540 --> 00:21:19.650
in and go Equals. Yeah.
And then now when you

433
00:21:19.650 --> 00:21:21.990
take your cursor over it,
we can actually show a

434
00:21:21.990 --> 00:21:24.330
little preview of that image
just as we could in

435
00:21:24.330 --> 00:21:26.820
CSS, in line in the
inline NCSS. And it's just

436
00:21:26.820 --> 00:21:29.520
like a hover tool too.
Well, what other metadata might

437
00:21:29.520 --> 00:21:31.950
be inside of that image
file that I might want

438
00:21:31.950 --> 00:21:35.040
to then That's exactly you
can do whatever you want.

439
00:21:35.040 --> 00:21:37.950
If you can, with heightened
with is what we're already

440
00:21:37.950 --> 00:21:41.100
doing with the smart tech
to insert that. But you

441
00:21:41.100 --> 00:21:43.110
can, you're gonna extract all
sorts of stuff. And even

442
00:21:43.110 --> 00:21:45.150
if it's like a remote
resource, you can go download

443
00:21:45.150 --> 00:21:49.860
that and do all sorts
of analytics on it. For

444
00:21:49.860 --> 00:21:51.720
instance, if you have a
script blog or style blog,

445
00:21:51.750 --> 00:21:54.450
you can now say export
to its own file, like

446
00:21:54.450 --> 00:21:55.860
at a smart tack for
that you can kind of

447
00:21:55.860 --> 00:21:58.590
clean up, you can do
a lot of refactorings. All

448
00:21:58.590 --> 00:22:02.370
those things become now become
possible because we changed the

449
00:22:02.370 --> 00:22:04.950
HTML editor. We updated it
to this number. What about

450
00:22:04.950 --> 00:22:08.400
a Twitter bootstrap specific things
so that I could say

451
00:22:08.400 --> 00:22:10.380
button and then see what
are the choices of different

452
00:22:10.380 --> 00:22:13.110
button styles? And then a
preview of what the button

453
00:22:13.110 --> 00:22:15.930
might look like as I'm
doing that. That would, that

454
00:22:15.930 --> 00:22:19.230
will be actually not that
hard. So yeah. That's what

455
00:22:19.230 --> 00:22:21.090
I like hearing. It would
not be that hard. Yeah.

456
00:22:21.300 --> 00:22:23.610
Yeah. It's cool. Okay. So
the second thing that you're

457
00:22:23.610 --> 00:22:25.350
doing, and I got to
show this a little bit

458
00:22:25.350 --> 00:22:26.640
and you can see it
on the keynote. If you

459
00:22:26.640 --> 00:22:31.050
go to channel nine.msdn.com, is
this thing called browser link?

460
00:22:31.080 --> 00:22:34.200
Now I like code name
artery. Yes. But somebody pointed

461
00:22:34.200 --> 00:22:37.230
out that arteries only flow
blood in one direction. Yeah.

462
00:22:37.410 --> 00:22:41.280
And this is a dual
directional link between the browser

463
00:22:41.280 --> 00:22:45.930
and visual studio. Yes. It's
a bi-directional communication channel all

464
00:22:45.930 --> 00:22:49.950
implemented in open standards, web
sockets, JavaScript, HTML. So you

465
00:22:49.950 --> 00:22:54.060
have a web server inside
of visual studio editor. Yes.

466
00:22:54.300 --> 00:22:55.890
Is it in the editor
or where does it know?

467
00:22:56.220 --> 00:22:59.460
No, it's it's somewhere within
the visual studio process. It's

468
00:23:00.030 --> 00:23:03.210
basically what it is. It's
a self hosted signal. Our

469
00:23:03.660 --> 00:23:06.600
HTTP list Signal are being
the real time framework that

470
00:23:06.600 --> 00:23:09.300
we're using anyways. Yeah. So
it's basically like the way

471
00:23:09.300 --> 00:23:11.700
that we host web sockets
and because it's based on

472
00:23:11.700 --> 00:23:14.600
signal, are it means that
we support all the browsers

473
00:23:14.610 --> 00:23:17.580
that signal our supports, even
browsers that do not support

474
00:23:17.670 --> 00:23:20.010
a web sockets. We will
then fall back through signal

475
00:23:20.010 --> 00:23:23.310
are too long polling and
signal. <inaudible> pretty much anything.

476
00:23:23.340 --> 00:23:25.260
I mean, not for many
or whatever, they support all

477
00:23:25.260 --> 00:23:28.470
that stuff. Okay. So wait
a second. So now in

478
00:23:28.470 --> 00:23:33.600
the keynote I showed dual
or bi-directional communication between visual

479
00:23:33.690 --> 00:23:36.840
studio E and Chrome. Can
I maybe hook up to

480
00:23:36.840 --> 00:23:40.770
an iPhone someday? Yes You
can. Yeah. So I actually

481
00:23:40.770 --> 00:23:48.140
demoed, I actually demoed how
to use the iPhone and

482
00:23:48.500 --> 00:23:50.510
there's absolutely no problem. It,
it hooks up with web

483
00:23:50.510 --> 00:23:53.870
sockets there. It just works.
So it doesn't really matter

484
00:23:53.870 --> 00:23:57.280
what browser you've got. What
about Device? How would I

485
00:23:57.280 --> 00:23:59.830
hook that up to a
device? We've done some investigation

486
00:23:59.830 --> 00:24:01.780
on hooking up to a
device because that that's the

487
00:24:01.780 --> 00:24:03.940
cool thing. Right? Cause it's
not necessarily on local host,

488
00:24:03.940 --> 00:24:05.920
but it might be yes.
Somewhere else. Or I might

489
00:24:05.920 --> 00:24:07.630
want to do a local
host tunnel of some kind.

490
00:24:07.660 --> 00:24:10.930
Yeah. So the problem is
firewalling, right? You have, if

491
00:24:10.930 --> 00:24:12.280
you want to connect from,
let's say you have your

492
00:24:12.280 --> 00:24:14.740
windows phone and you want
to type in your, your,

493
00:24:14.890 --> 00:24:16.780
you know, you have a
workstation and now from your

494
00:24:16.780 --> 00:24:18.670
windows phone, you want to
type in the server. Well,

495
00:24:18.710 --> 00:24:20.680
they're on the same network.
I should be able to

496
00:24:20.680 --> 00:24:23.350
make it so I could
get IAS express. Yes. The

497
00:24:23.350 --> 00:24:26.680
development version of iOS outside
and available and hooked up

498
00:24:26.680 --> 00:24:30.280
on portal anything quickly. So
there's nothing that prohibits us

499
00:24:30.370 --> 00:24:32.950
of doing that. What, what
the problem is right now

500
00:24:33.040 --> 00:24:35.470
or not, not the problem.
The challenge is how do

501
00:24:35.470 --> 00:24:37.690
we, how do we do
that in a very, very

502
00:24:37.690 --> 00:24:39.600
easy way, because right now
you actually have to open

503
00:24:39.610 --> 00:24:42.880
up firewall ports and everything
to make that communication possible.

504
00:24:43.210 --> 00:24:45.670
And that that's, that's a
challenge. Right? So to be

505
00:24:45.670 --> 00:24:48.280
honest, it's impossible. It's just,
it's just very difficult right

506
00:24:48.280 --> 00:24:50.950
now. You didn't do it
with browser link slash artery

507
00:24:50.980 --> 00:24:52.750
in this case, I just
have to figure out, I

508
00:24:52.750 --> 00:24:54.910
mean, you can do it
now. Probably. Yeah. I would.

509
00:24:55.810 --> 00:24:58.150
The idea is we're not
using IAS in this case,

510
00:24:58.150 --> 00:25:00.460
we are using IAS express.
So it needs to be

511
00:25:00.460 --> 00:25:04.510
answering with your browsers, your
computers, host name on a

512
00:25:04.510 --> 00:25:07.690
certain port firewall open using
IIS. I suppose I could

513
00:25:07.690 --> 00:25:10.450
do this tonight. Couldn't it?
Yeah. But, well, you still,

514
00:25:10.450 --> 00:25:12.670
you're still gonna run into
that firewall issue To talk

515
00:25:12.670 --> 00:25:15.490
web sockets into visual studio
itself From a remote device.

516
00:25:15.490 --> 00:25:18.520
Right. So, so you still
have the same, no, not

517
00:25:18.520 --> 00:25:20.530
the website. It's just accessing
the actual website. If you

518
00:25:20.530 --> 00:25:22.900
can see the website, then
we can also have browsing

519
00:25:22.900 --> 00:25:26.140
hook it up, but getting
from your phone and actually

520
00:25:26.140 --> 00:25:29.440
seeing your iOS site on
your server is problematic. But

521
00:25:29.440 --> 00:25:31.630
that could be like, what
is it called? Adobe shadow.

522
00:25:32.140 --> 00:25:34.060
Yes. It could be. That
would have all of these

523
00:25:34.060 --> 00:25:37.060
devices sitting on my desk.
Yep. We actually had a

524
00:25:37.090 --> 00:25:39.910
prototype running off a windows
eight app that was opening

525
00:25:39.910 --> 00:25:43.330
a UDP channel that would,
that would actually do that.

526
00:25:44.200 --> 00:25:46.660
So you could kind of
go around any firewall issues

527
00:25:46.660 --> 00:25:49.360
and all that stuff. But,
but that, that didn't seem

528
00:25:49.360 --> 00:25:51.190
to be the right approach.
So, but that was just

529
00:25:51.190 --> 00:25:54.490
the prototype. But the fact
is where we are right

530
00:25:54.490 --> 00:25:58.690
now is that we are
actually limiting the request has

531
00:25:58.690 --> 00:26:01.870
to be local. So right
now, until we figure this

532
00:26:01.870 --> 00:26:04.570
out, we're actually for security
reasons, we're actually limiting it

533
00:26:04.600 --> 00:26:08.290
to be only the, the
same. That makes sense. Yeah.

534
00:26:09.190 --> 00:26:13.840
Interesting. The, The thing that
it's implemented first and the

535
00:26:13.840 --> 00:26:15.700
one that people can see
and use and play with

536
00:26:15.700 --> 00:26:18.670
today and explore is the
idea of this browser refresh.

537
00:26:18.700 --> 00:26:21.760
Yes. So I can hit
control alt enter or I

538
00:26:21.760 --> 00:26:24.460
can hit the button and
I can take, is there

539
00:26:24.460 --> 00:26:26.650
some limit and number of
browsers, there is no limit.

540
00:26:26.980 --> 00:26:29.020
So lots of hours, you
know, someone in development might

541
00:26:29.020 --> 00:26:32.350
have four or five. Yeah.
And then hit refresh. But

542
00:26:32.350 --> 00:26:35.230
that's more of a, and
I'm not trying to disparage

543
00:26:35.230 --> 00:26:36.430
your work, but it's almost
like just a proof of

544
00:26:36.430 --> 00:26:38.500
concept. Like you've shipped a
proof of concept from a

545
00:26:38.500 --> 00:26:42.820
feature perspective. What's interesting. Isn't
that feature live refresh or

546
00:26:42.820 --> 00:26:47.250
auto reload. What's interesting is
the, the underlayment, the communication

547
00:26:47.250 --> 00:26:51.090
framework is solid signal is
proven. Yep. So now it's

548
00:26:51.090 --> 00:26:54.570
like web essentials. You've got
the hooks in now. It's

549
00:26:54.570 --> 00:26:57.510
what chronic crazy thing could
you think of? Yep. I

550
00:26:57.510 --> 00:26:59.430
was thinking about what if
I made it? So I

551
00:26:59.430 --> 00:27:01.290
was filling out a form
and I was typing in

552
00:27:01.290 --> 00:27:03.750
one browser and then it
typed at the same time

553
00:27:03.750 --> 00:27:06.030
and all the other browsers.
Would that be weird? I

554
00:27:06.030 --> 00:27:07.640
mean, I had seen like
a grid Be weird, but

555
00:27:07.640 --> 00:27:09.350
it's, it's really cool. And
that's what I built. Right.

556
00:27:09.380 --> 00:27:12.020
So did you have that
too? Yeah, you're lying. No,

557
00:27:12.260 --> 00:27:14.600
you're kidding. You didn't see
that? No. Okay. I just

558
00:27:14.600 --> 00:27:16.910
made that up really. I'm
totally serious. I swear to

559
00:27:16.910 --> 00:27:18.680
God. I just had that
idea. Okay. Well, when did

560
00:27:18.680 --> 00:27:21.350
you do that? The chill
nine video. You're kidding. Yeah.

561
00:27:22.430 --> 00:27:25.070
Wow. Very cool. So you're
going to say, Oh wow.

562
00:27:25.100 --> 00:27:27.110
All right. So then you
mail you, did you build

563
00:27:27.150 --> 00:27:28.880
that? What has it been
an extension of some kind,

564
00:27:28.910 --> 00:27:32.540
That's an extension that took
me I'll guess maybe eight

565
00:27:32.540 --> 00:27:34.070
minutes to write that. What
happens if it gets out

566
00:27:34.070 --> 00:27:36.800
of sync? I guess it
really can't because you're going

567
00:27:36.800 --> 00:27:39.770
on a name value pair
basis. Huh? Well, why would

568
00:27:39.770 --> 00:27:41.480
it get out of sync?
I don't know. The type

569
00:27:41.480 --> 00:27:43.640
too fast in one browser
has different behavior than another.

570
00:27:43.640 --> 00:27:45.140
Yeah. So you need to,
you need to see the

571
00:27:45.140 --> 00:27:47.090
talk because I actually show
off something that's really funny

572
00:27:47.090 --> 00:27:49.250
as well. And cool. I'm
not sure how useful it

573
00:27:49.250 --> 00:27:50.830
is, but that's the whole
point. That's the whole point

574
00:27:50.850 --> 00:27:53.090
to experiment. Like I have
one, let's say that you

575
00:27:53.090 --> 00:27:55.130
have two browsers open and
you're on the same URL.

576
00:27:55.660 --> 00:27:57.260
Let's say that one of
the browsers, you now scroll

577
00:27:57.260 --> 00:27:58.970
down to the bottom of
the page because that's the

578
00:27:58.970 --> 00:28:01.790
part that you're not working
on right now. What if

579
00:28:01.790 --> 00:28:04.100
you want all your other
browsers to kind of scroll

580
00:28:04.100 --> 00:28:07.190
down to that same location
I've implemented. So if you

581
00:28:07.190 --> 00:28:10.100
hit control all, enter in
your browser, all the other

582
00:28:10.100 --> 00:28:12.110
browsers will align to that.
So if, if they're on

583
00:28:12.110 --> 00:28:14.720
the same URL, they will
scroll to the same position.

584
00:28:15.110 --> 00:28:17.030
But if they're on a
different URL, they will navigate

585
00:28:17.030 --> 00:28:19.190
to the right girl. So
you can kind of sync

586
00:28:19.190 --> 00:28:20.930
up your browsers and basically
what it is. It's just

587
00:28:20.930 --> 00:28:24.110
a, it's a process of
browser communication, where they just

588
00:28:24.200 --> 00:28:27.980
relay that communication over the
browser link. I see. But

589
00:28:27.980 --> 00:28:31.040
if you open up a
new URL that next year

590
00:28:31.040 --> 00:28:34.640
I'll have to reattach that
connection. The every time there's

591
00:28:34.640 --> 00:28:39.080
a refresh going on, they,
they, they reconnect. Yes. But

592
00:28:39.080 --> 00:28:41.330
that's really fast. That's not,
that's not something you're gonna

593
00:28:41.340 --> 00:28:45.820
notice. That's really cool. Yeah.
Yeah. So right now we

594
00:28:45.830 --> 00:28:50.270
were working on how to
do live CSS update. So

595
00:28:50.570 --> 00:28:52.730
the one I showed was
every time you save the

596
00:28:52.730 --> 00:28:56.180
CSS file, all the browsers,
just refresh the CSS files,

597
00:28:56.420 --> 00:28:58.610
not the actual of the
whole page. So it just,

598
00:28:59.210 --> 00:29:00.680
How do you do that?
You'd have to basically go

599
00:29:00.680 --> 00:29:02.690
in and run like a
reset and then reapply them

600
00:29:02.690 --> 00:29:05.450
all. Yeah. It's actually very,
very simple. I'll show you

601
00:29:05.450 --> 00:29:09.680
the code. There's probably 10
lines of JavaScript altogether, but

602
00:29:09.680 --> 00:29:13.270
basically I just, I just
run through all the linked

603
00:29:13.270 --> 00:29:17.030
style sheets and basically just
attach a, like a random

604
00:29:17.030 --> 00:29:19.370
number to the query string
that makes, that makes the

605
00:29:19.370 --> 00:29:21.680
browser reload them. Okay. Let
me ask you this then.

606
00:29:21.680 --> 00:29:26.330
And this is a more
controversial question in a world

607
00:29:26.330 --> 00:29:28.520
where a lot of developers
are doing Chrome and dev

608
00:29:28.520 --> 00:29:32.510
tools and sublime. What's the
point of, of, of a

609
00:29:32.510 --> 00:29:36.440
big fat quote, unquote IDE
like visual studio, you know,

610
00:29:36.890 --> 00:29:40.190
things like project meteor For
me, it's, it's, it's about

611
00:29:40.190 --> 00:29:43.720
productivity. It's about that. I'm
in, I'm in one tool

612
00:29:43.930 --> 00:29:46.540
and the more I can
stay there and productive the

613
00:29:46.540 --> 00:29:48.970
better, what I really don't
like is that I have

614
00:29:48.970 --> 00:29:52.180
to go search for stuff
online and I have to

615
00:29:52.180 --> 00:29:53.770
use console apps and I
have to use all sort

616
00:29:53.770 --> 00:29:56.650
of command line tools and
just different tools in general,

617
00:29:56.650 --> 00:29:58.870
to do the stuff that
I have to do every

618
00:29:58.870 --> 00:30:02.380
day. And all that context
switching for me is like

619
00:30:02.380 --> 00:30:04.900
really problematic. And it gets
me out of the sewn.

620
00:30:04.900 --> 00:30:06.580
You know, you know, as
a developer, we get in

621
00:30:06.580 --> 00:30:08.050
the zone. I want to
stay there as long as

622
00:30:08.050 --> 00:30:10.300
possible. And I can do
that if I can get

623
00:30:10.300 --> 00:30:14.140
away, get all friction away.
And if I can minimize

624
00:30:16.330 --> 00:30:19.090
all the time that my
environment kind of gets in

625
00:30:19.090 --> 00:30:22.270
the way, so we want
to get the details, right.

626
00:30:22.300 --> 00:30:24.010
We want to get the
ID out of the way.

627
00:30:24.400 --> 00:30:27.130
And actually we want to
be a little bit better

628
00:30:27.130 --> 00:30:29.500
than that because we want
something that's called a think.

629
00:30:29.630 --> 00:30:31.680
IDE, if you're going to
think of a thinking idea,

630
00:30:31.720 --> 00:30:34.990
thinking ID, how can we
get the IDE to be

631
00:30:35.500 --> 00:30:37.720
knowing what your next move
is going to be, and

632
00:30:37.720 --> 00:30:39.790
then present it to you
once you need it? What

633
00:30:39.790 --> 00:30:42.370
about a way that, I
mean, I'm always changing CSS

634
00:30:42.400 --> 00:30:45.790
in dev tools in Chrome
when I get it right.

635
00:30:45.790 --> 00:30:49.690
I want to push it
back down into my IDE

636
00:30:49.960 --> 00:30:53.890
and into the N number
of CSS files. You know

637
00:30:53.890 --> 00:30:56.170
what I mean? So I
change a rule. I could

638
00:30:56.170 --> 00:30:59.080
go and update that rule
using Chrome as the authoritative

639
00:30:59.080 --> 00:31:01.690
source. Yes. That would be
cool. That would be really

640
00:31:01.690 --> 00:31:04.660
cool. And we're actually looking
into doing that. We know

641
00:31:04.660 --> 00:31:08.020
how to do that. So
we have this technology to

642
00:31:08.020 --> 00:31:12.430
do that through browser link.
We know what to do

643
00:31:12.880 --> 00:31:14.530
now. It's just a matter
of actually doing it, but

644
00:31:14.530 --> 00:31:16.240
we need to get the
infrastructure done first and all

645
00:31:16.240 --> 00:31:18.040
those things. So it's something
where we're going to look

646
00:31:18.040 --> 00:31:20.650
at, because what we really
want is that people should

647
00:31:20.650 --> 00:31:23.260
use the workflow that they
want. Right. If they, if

648
00:31:23.260 --> 00:31:25.120
they want to use Chrome
dev tools to, to do

649
00:31:25.120 --> 00:31:28.330
all their pixel pushing, they
should do that. And we

650
00:31:28.330 --> 00:31:30.520
should just have the option
of giving them the safe

651
00:31:30.520 --> 00:31:34.320
button in Chrome or in
Firebug or, or I E

652
00:31:34.320 --> 00:31:37.540
or, you know, wherever they're
comfortable and have that safe

653
00:31:37.540 --> 00:31:39.130
bag. And we do know
how to do all those

654
00:31:39.130 --> 00:31:41.410
steps. It's just a matter
of actually getting it done

655
00:31:41.470 --> 00:31:43.930
so you can expect something
like that to be coming

656
00:31:43.930 --> 00:31:45.970
down the line and people
can see, okay, so people

657
00:31:45.970 --> 00:31:49.180
can go to GitHub on
your personal GitHub, Jesse, your

658
00:31:50.110 --> 00:31:52.840
web central stuff that's can
get involved and they can

659
00:31:52.840 --> 00:31:54.580
go to channel nine and
bill, and they can see

660
00:31:54.580 --> 00:31:57.460
your talk that you didn't
build, which apparently I saw

661
00:31:57.460 --> 00:31:59.320
in my dreams. Cause I
swear I totally had the

662
00:31:59.330 --> 00:32:01.720
idea and you've already built.
That's crazy. That is, I

663
00:32:01.720 --> 00:32:04.840
have an idea and you've
already built it as I

664
00:32:04.840 --> 00:32:07.930
have the idea. Yup. That
makes me feel a little

665
00:32:07.930 --> 00:32:10.180
people. I build it last
week. You bought it last

666
00:32:10.180 --> 00:32:13.120
week too. Oh my goodness.
Alright. Well, thanks so much

667
00:32:13.120 --> 00:32:14.740
for talking to me. Yeah.
Thanks for having me, man.

668
00:32:15.130 --> 00:32:17.890
This has been another episode
of Hansel minutes and I'll

669
00:32:17.890 --> 00:32:18.970
see you again next week.

