WEBVTT FILE

1
00:00:12.140 --> 00:00:16.790
From Hanselman it's dot com.
It's Hansel minutes, a weekly

2
00:00:16.790 --> 00:00:21.050
discussion with web developer and
technologists. Scott Hanselman hosted by

3
00:00:21.050 --> 00:00:25.400
Carl Franklin. This is Lauren's Ryan
announcing show number one 40

4
00:00:25.490 --> 00:00:31.220
recorded live Monday, December 1st, 2008. Support
for Hanselman it's is provided

5
00:00:31.220 --> 00:00:35.510
by teller. Rad controls, the
most comprehensive suite of components

6
00:00:35.510 --> 00:00:44.960
for windows forms and asp.net
web applications. online@wwwdottelerik.com. Support is

7
00:00:44.960 --> 00:00:48.770
also provided by.net developers journal.
The world's leading that net

8
00:00:48.770 --> 00:00:55.310
developer magazine online at www
dot <inaudible> dot com. In

9
00:00:55.310 --> 00:00:58.580
this episode, Scott talks about
domain driven design with Rob

10
00:00:58.580 --> 00:01:04.040
Connery. Hi, this is Scott
Hanselman and this is another

11
00:01:04.040 --> 00:01:07.250
episode of Hansel minutes, and
gosh, I'm breaking the rules.

12
00:01:07.250 --> 00:01:10.070
I've got Rob Connery on
the show. Again, this is

13
00:01:10.070 --> 00:01:12.200
a, you were in on
the show in September, October,

14
00:01:12.260 --> 00:01:15.440
somewhere in there. Right? I
feel so very lucky. I,

15
00:01:15.470 --> 00:01:17.030
you know, I've just, I
run out of guests and

16
00:01:17.030 --> 00:01:19.760
now I'm doing repeats. It's
just horrible, famous people. Won't

17
00:01:19.760 --> 00:01:22.970
talk to me. So I'm
talking to you. Oh, thank

18
00:01:22.970 --> 00:01:24.410
you so much. Well, you
know, I'm glad to fill

19
00:01:24.410 --> 00:01:26.810
in as always, I feel
like Keith Olbermann on David

20
00:01:26.810 --> 00:01:29.690
Letterman. Yeah. You are exactly
like that. Does that make,

21
00:01:29.720 --> 00:01:31.160
I guess that would help
me Letterman, which is not

22
00:01:31.160 --> 00:01:34.250
a bad thing. No, exactly.
Actually, I, we, we, people

23
00:01:34.250 --> 00:01:36.830
don't realize that you and
I, we talk daily a

24
00:01:36.830 --> 00:01:38.690
couple of times a day.
You've come to the house.

25
00:01:38.690 --> 00:01:40.430
We talk all the time.
So we worked together a

26
00:01:40.430 --> 00:01:43.970
lot. We're working on a
little project on the side

27
00:01:43.970 --> 00:01:46.850
right now, but one of
the things that you've been

28
00:01:46.850 --> 00:01:50.060
working on is trying to
learn the domain driven design.

29
00:01:50.060 --> 00:01:51.590
And I think a lot
of people would really appreciate

30
00:01:52.070 --> 00:01:55.190
the way that you're learning
in public. I think both

31
00:01:55.190 --> 00:01:57.620
of us kind of have
that style. I mean, you

32
00:01:57.620 --> 00:02:00.110
know, w we know what
we know, and we're very

33
00:02:00.110 --> 00:02:02.900
clear about what we don't
know. And when we don't

34
00:02:02.900 --> 00:02:05.360
know something, we want to
learn it, but why not

35
00:02:05.360 --> 00:02:09.110
learn it in public and
have people learn with us

36
00:02:09.290 --> 00:02:12.620
and, and you've been learning
domain driven design. It generally

37
00:02:12.620 --> 00:02:14.720
seems like a good idea
to do that. Cause people

38
00:02:14.720 --> 00:02:18.200
do, as you're saying, you're
saying appreciate the learning process.

39
00:02:18.200 --> 00:02:20.210
However, sometimes I do feel
like I might just end

40
00:02:20.210 --> 00:02:22.730
up being the village idiot,
you know, like, you know,

41
00:02:23.180 --> 00:02:24.830
it's, it's hard to kind
of put out what you

42
00:02:24.830 --> 00:02:27.170
don't know and then, Oh
my gosh, is that too

43
00:02:27.170 --> 00:02:28.730
much that I don't know.
And then people say, Oh,

44
00:02:28.730 --> 00:02:31.670
this guy doesn't know anything.
Right? Yeah. I do think

45
00:02:31.670 --> 00:02:33.530
about that sometimes. I mean,
I know there are some

46
00:02:33.530 --> 00:02:35.570
things that I feel good
about the things I've spent

47
00:02:35.570 --> 00:02:39.230
10, 15 years learning and
working on, but there's definitely

48
00:02:39.230 --> 00:02:41.960
stuff that I have no
idea about. You know, someone

49
00:02:41.960 --> 00:02:44.630
will send me an email
and they'll say, you know,

50
00:02:44.630 --> 00:02:48.200
help me do this obscure
thing and WCF, you know,

51
00:02:48.200 --> 00:02:50.690
standing on your head. And
it's like, you know, I

52
00:02:50.690 --> 00:02:52.820
haven't spent as much time
in WCF as I have

53
00:02:52.820 --> 00:02:57.170
an ASP net. I don't
know what do we do

54
00:02:57.170 --> 00:02:59.830
now? It's like, well, find
somebody who knows. So that's

55
00:02:59.830 --> 00:03:01.690
what you did. You found
someone who knows domain driven

56
00:03:01.690 --> 00:03:04.570
design and, and the goal
of this podcast is to

57
00:03:04.570 --> 00:03:08.500
talk about not what domain
driven design is, is necessarily,

58
00:03:08.500 --> 00:03:11.260
and the final word on
it, but what resources are

59
00:03:11.260 --> 00:03:14.770
available for people to learn
this, this style of design.

60
00:03:14.770 --> 00:03:16.690
So, so what did you
do? You decided you needed

61
00:03:16.690 --> 00:03:20.070
to learn this? Why? Well,
it was interesting when I

62
00:03:20.070 --> 00:03:22.410
was doing the MVC storefront,
I got to a certain

63
00:03:22.440 --> 00:03:24.180
spot where I said, okay,
let's wrap this thing up,

64
00:03:24.270 --> 00:03:27.180
let's put it to bed.
And you know, you kinda,

65
00:03:27.210 --> 00:03:30.510
you, you start going over
your code and refactoring it,

66
00:03:30.510 --> 00:03:32.970
any comments. And as I
started to do that, as

67
00:03:32.970 --> 00:03:35.610
well as explain it to
other folks internally at Microsoft,

68
00:03:36.210 --> 00:03:38.280
I realized that there was
a lot of what they

69
00:03:38.280 --> 00:03:41.520
call smell in there. There
is just things that naming

70
00:03:41.520 --> 00:03:44.820
conventions is ways I was
carrying out logic. That just

71
00:03:44.820 --> 00:03:47.760
didn't make sense. And I
think it's natural for every

72
00:03:47.760 --> 00:03:50.670
project to get to a
certain point where you say,

73
00:03:50.670 --> 00:03:52.920
okay, we gotta, we got
to shake things a bit

74
00:03:53.340 --> 00:03:56.640
and, and restructure it to
make more sense. And so

75
00:03:56.640 --> 00:03:58.050
that's the point I hit.
And I said, well, you

76
00:03:58.050 --> 00:04:00.390
know, a lot of people
have been after me talking

77
00:04:00.390 --> 00:04:05.250
about domain driven design DDD,
especially because I started using

78
00:04:05.280 --> 00:04:08.010
the repository pattern as my
data access. And they kept

79
00:04:08.010 --> 00:04:09.900
saying, well, you know, in
DDD, this is what we

80
00:04:09.900 --> 00:04:12.660
do. I said, well, I'm
not doing DDD. And I

81
00:04:12.660 --> 00:04:15.060
thought, well, maybe, maybe it's
about time because I know

82
00:04:15.060 --> 00:04:17.130
one thing I do know
is that DDD is about

83
00:04:17.130 --> 00:04:19.470
addressing complexity. And I felt
like I got to a

84
00:04:19.470 --> 00:04:22.800
certain point of complexity with
it all. So yeah, that's

85
00:04:22.800 --> 00:04:24.450
what I'm doing. And yeah,
I want to underscore what

86
00:04:24.450 --> 00:04:27.480
you just said. One more
time. This isn't me explaining

87
00:04:27.780 --> 00:04:30.900
how DDD works. This is
me explaining how I'm learning

88
00:04:30.900 --> 00:04:36.410
it. And I hope everyone
understands that. So you, we

89
00:04:36.410 --> 00:04:38.100
back up a second, you
said that this is a

90
00:04:38.100 --> 00:04:40.590
record refactoring. Like you, you
got to a point in

91
00:04:40.590 --> 00:04:48.090
your MVC storefront where things
smelled bad enough to, to

92
00:04:48.090 --> 00:04:50.820
change things, but now you're,
but you're still continuously refactoring.

93
00:04:50.820 --> 00:04:53.850
So how is this refactoring
different from the kinds that

94
00:04:53.850 --> 00:04:57.750
you're doing all the time?
W it's different because the,

95
00:04:57.810 --> 00:05:00.270
the approach that I took,
the way that I separated

96
00:05:00.270 --> 00:05:04.080
the classes out the way
that let me see if

97
00:05:04.080 --> 00:05:06.900
I can give you a
concrete example. Well, let me

98
00:05:06.900 --> 00:05:09.510
answer your question first, the
way that I was kind

99
00:05:09.510 --> 00:05:11.910
of looking at the complexity
of the site, you know,

100
00:05:11.910 --> 00:05:14.370
they're usually, it's sort of
an intuitive thing. You get

101
00:05:14.370 --> 00:05:17.190
a flow going like, this
is how this logic is

102
00:05:17.190 --> 00:05:19.380
carried out where an order
is processed. You go through

103
00:05:19.380 --> 00:05:23.480
these steps, you know, it's
always kind of a, a

104
00:05:23.580 --> 00:05:25.710
test when you try and
explain that to somebody else

105
00:05:25.740 --> 00:05:28.830
and you stumble and that's
what was happening. So when

106
00:05:28.830 --> 00:05:30.690
I realized is it, wasn't
just a part of a

107
00:05:30.690 --> 00:05:32.820
refactoring step that I needed
to do. It's actually a

108
00:05:32.820 --> 00:05:36.150
restructuring. So that made sense.
And I wanted to be

109
00:05:36.150 --> 00:05:39.210
able to look at Bertrend,
who's my new manager and

110
00:05:39.210 --> 00:05:41.970
say, well, the storefront works
in X, Y, Z, and

111
00:05:42.000 --> 00:05:46.020
we use this pattern here.
And, and so that's how,

112
00:05:46.260 --> 00:05:48.140
that's how I want it
to, to, to be, to,

113
00:05:48.140 --> 00:05:51.390
to carry out if that
makes sense. Okay. So, so

114
00:05:51.390 --> 00:05:55.290
where did you start? Well,
it was a, it was

115
00:05:55.290 --> 00:05:59.930
really tough to get started
because it's funny, the first

116
00:05:59.930 --> 00:06:02.090
person I talked to is
Jeremy Miller. I sent him a

117
00:06:02.090 --> 00:06:05.390
little tweet, Skype message, and
he said, Hey, Jeremy, I

118
00:06:05.390 --> 00:06:07.520
really need your help. Or
you're up on DDD? Aren't

119
00:06:07.520 --> 00:06:10.910
you? And his answer was
really funny. He, you know,

120
00:06:10.910 --> 00:06:13.010
he, he embraces DDD and
I don't want to speak

121
00:06:13.010 --> 00:06:14.870
for Jeremy in any sense,
but one of the things

122
00:06:14.870 --> 00:06:16.850
he mentioned was that there's
a difficulty with what he

123
00:06:16.850 --> 00:06:20.440
called the jargon explosion and
Well, yeah, I mean, I

124
00:06:20.440 --> 00:06:23.380
feel I'm an interrupt. I
feel like, I mean, there

125
00:06:23.380 --> 00:06:25.600
are, there are a group
of people who speak with

126
00:06:25.630 --> 00:06:28.150
authority on a lot of
these things. And, and as

127
00:06:28.150 --> 00:06:30.460
you know, there's DDD and
BDD and all these different

128
00:06:30.460 --> 00:06:35.260
designs. And, you know, I,
I didn't even know what

129
00:06:35.260 --> 00:06:37.000
kind of design we did
at my, at my last

130
00:06:37.000 --> 00:06:38.830
job. And we were a
scrum shop. We were an

131
00:06:38.830 --> 00:06:42.370
agile shop. We did some
design up front, and then

132
00:06:42.370 --> 00:06:45.250
we did the rest of
it as we refactored. But,

133
00:06:45.400 --> 00:06:49.150
you know, I think it
was DDD like, but there

134
00:06:49.150 --> 00:06:51.280
was only so many jargons
in so many, three letter

135
00:06:51.280 --> 00:06:56.020
acronyms that one could possibly
use at one time. Exactly.

136
00:06:56.110 --> 00:06:58.330
And well, that's why, so,
you know, to, to come

137
00:06:58.330 --> 00:07:00.250
back to your question, that's
exactly where I got started

138
00:07:00.250 --> 00:07:03.700
was learning just what is
this jargon? And unfortunately, one

139
00:07:03.700 --> 00:07:05.740
of the problems that DDD
has, and this isn't me

140
00:07:05.740 --> 00:07:08.560
railing, this is just an
issue is that the jargon

141
00:07:08.560 --> 00:07:11.770
is insanely generic. So to
give you an example, one

142
00:07:11.770 --> 00:07:14.170
of the things that a
concept that you learned is

143
00:07:14.170 --> 00:07:17.410
something called an aggregate route.
And then another thing you

144
00:07:17.410 --> 00:07:21.610
learn is a bounded context.
The term domain, and the

145
00:07:21.610 --> 00:07:25.000
term entity are probably two
of the most generic words

146
00:07:25.060 --> 00:07:28.330
in the English language. So
you don't really have an

147
00:07:28.330 --> 00:07:31.750
innate understanding as you would,
if you're reading something based

148
00:07:31.750 --> 00:07:34.450
on like relational design, for
instance, I mean the term

149
00:07:34.450 --> 00:07:38.560
relational, it says a lot.
How does data relate in

150
00:07:38.560 --> 00:07:41.170
a database? So that's the
first place I started was

151
00:07:41.170 --> 00:07:43.450
it cracked open? I went
down to borders and I

152
00:07:43.450 --> 00:07:46.900
opened, opened up Eric Evans book,
which is kind of considered

153
00:07:46.900 --> 00:07:50.200
the DDD Bible by a
lot of people it's tackling

154
00:07:51.070 --> 00:07:53.770
complexity and programming design or
something like that. But anyway,

155
00:07:53.770 --> 00:07:56.710
it's Eric Evans, DDD book, it's
blue, and that's how you'll

156
00:07:56.710 --> 00:07:59.080
know it. And it's a
great read and it really

157
00:07:59.080 --> 00:08:01.240
is awesome. And the next
one I got was Jimmy

158
00:08:01.240 --> 00:08:06.370
Nelson's book, I'm applying domain
driven design I'm in.net. And

159
00:08:06.400 --> 00:08:09.940
both of them were extremely
helped. Yeah, it is. It

160
00:08:09.940 --> 00:08:12.910
is the Bible or, I
mean, is it just, you

161
00:08:12.910 --> 00:08:15.820
know, I'm looking here on
Amazon. One guy says it's

162
00:08:15.820 --> 00:08:18.250
just another patterns book. And,
you know, and I hear

163
00:08:18.250 --> 00:08:20.770
when people talk about DDD,
they, they, they spit out

164
00:08:20.770 --> 00:08:23.110
a whole bunch of new
patterns that are not necessarily

165
00:08:23.110 --> 00:08:25.660
the gang of four patterns
that I'm used to, although

166
00:08:25.730 --> 00:08:29.200
a lot of them are.
Yeah. You know, that's what

167
00:08:29.200 --> 00:08:32.320
I put on my blog
last week when I said

168
00:08:32.320 --> 00:08:34.030
I was, you know, kind
of taking a hard look

169
00:08:34.030 --> 00:08:35.470
at D D D I
said, really D D D

170
00:08:35.470 --> 00:08:38.230
is a collection of patterns.
And a lot of folks

171
00:08:38.260 --> 00:08:40.840
jumped on me in a
good way to say, Hey,

172
00:08:40.840 --> 00:08:43.210
it's, what's way more than
that. And it's true. It

173
00:08:43.210 --> 00:08:47.440
is way more than that.
But the technical aspect is

174
00:08:47.800 --> 00:08:51.640
knowing some core patterning that
really all of us have

175
00:08:51.640 --> 00:08:55.030
learned at some point or
may have learned. And it's

176
00:08:55.200 --> 00:08:58.620
learning how to implement it
properly, to bring about what

177
00:08:58.620 --> 00:09:00.300
it is you're trying to
do. There's a nice plan

178
00:09:00.300 --> 00:09:02.960
statement for you. No, the
things that I've read on

179
00:09:02.960 --> 00:09:07.400
DDD though, are, so what's
the word just kind of

180
00:09:07.400 --> 00:09:09.440
up in the sky heady,
they don't get into a

181
00:09:09.440 --> 00:09:12.560
lot of, a lot of
detail. You know, the, there

182
00:09:12.560 --> 00:09:15.320
doesn't seem to be really
good examples and then people

183
00:09:15.320 --> 00:09:18.260
keep falling back and saying,
Oh, well, blah, blah, blah.

184
00:09:18.290 --> 00:09:22.100
The repository pattern, blah, blah,
blah, the aggregate pattern. But

185
00:09:22.130 --> 00:09:25.100
I don't quite, I hear
a lot of words, but

186
00:09:25.100 --> 00:09:28.820
I don't see a lot
of clarity is this is

187
00:09:28.820 --> 00:09:31.280
this, is this, this feeling,
is this the natural feeling

188
00:09:31.280 --> 00:09:34.340
one has when they start
digging into this stuff? It

189
00:09:34.400 --> 00:09:38.750
absolutely is. And I got
really frustrated. I was told

190
00:09:38.750 --> 00:09:40.610
a bunch of conflicting things
when I, you know, I

191
00:09:40.610 --> 00:09:43.220
kinda Twittered what I was
wanting to do. And a

192
00:09:43.220 --> 00:09:46.010
couple of people said to
me, Oh, you know, DDD

193
00:09:46.010 --> 00:09:49.100
is something you can't really
factor in. And I said,

194
00:09:49.100 --> 00:09:50.810
well, my goodness. And then
you know how to get

195
00:09:50.810 --> 00:09:52.460
it? How do you get
started with it then? And

196
00:09:52.460 --> 00:09:54.710
someone else said to me,
well, you know, for what

197
00:09:54.710 --> 00:09:57.200
you're trying to do, it's
not complex enough yet. And

198
00:09:57.200 --> 00:09:58.640
I said, well, if I
don't have a level of

199
00:09:58.640 --> 00:10:01.280
complexity and I can't really
factor it in, it doesn't

200
00:10:01.280 --> 00:10:02.990
make any sense. Where do
I get started? It's catch

201
00:10:02.990 --> 00:10:06.620
22. So I had a
lot of frustration, but you

202
00:10:06.620 --> 00:10:09.230
know, the interesting thing is,
as I just slowly patiently

203
00:10:09.230 --> 00:10:12.770
worked through that frustration, I
realized that, and this is

204
00:10:12.770 --> 00:10:15.050
kind of segwaying into the
next phase of the discussion

205
00:10:15.050 --> 00:10:18.470
here is that DDD is
a lot about discussion. It's

206
00:10:18.470 --> 00:10:22.550
a lot about dialogue. In
fact, it's 80%, probably 90%

207
00:10:22.580 --> 00:10:26.690
about dialogue. And, and only
until I was working out

208
00:10:26.720 --> 00:10:29.810
this restructuring of the application,
did I realize how much

209
00:10:29.810 --> 00:10:33.800
dialogue is involved and how
that really is the cornerstone

210
00:10:33.800 --> 00:10:36.230
of it all, at least
what I have interpreted it

211
00:10:36.240 --> 00:10:39.320
being. And I'll give you
an example of that. I

212
00:10:39.320 --> 00:10:42.200
was trying to figure out,
you know, where exactly does

213
00:10:42.200 --> 00:10:45.200
a shopping cart live, you
know, and is really a

214
00:10:45.200 --> 00:10:47.060
shopping cart, just an order.
You know, there's a lot

215
00:10:47.060 --> 00:10:50.300
of questions about how that
plays out in eCommerce. And

216
00:10:51.110 --> 00:10:53.060
I talked to, I talked
to a nice guy of

217
00:10:53.060 --> 00:10:56.240
Ben Taylor. We had a
Skype conversation yesterday and he

218
00:10:56.240 --> 00:10:58.370
said to me, well, you
know, what you'd really want

219
00:10:58.370 --> 00:10:59.960
to do is sit down
with your customer and ask

220
00:10:59.960 --> 00:11:02.450
them, well, how do they
view a shopping cart? Well,

221
00:11:02.450 --> 00:11:04.160
you know, you just get
to the concepts of it.

222
00:11:04.160 --> 00:11:06.230
And so I said, well,
I don't really have a

223
00:11:06.230 --> 00:11:09.740
client. I can kind of
remember what my old client

224
00:11:09.740 --> 00:11:12.470
KLA, Tencor, I built them
an eCommerce site before. I

225
00:11:12.470 --> 00:11:14.810
can kind of remember what
they're saying. And so we

226
00:11:14.810 --> 00:11:17.270
started this dialogue, you know,
and he, he started asking

227
00:11:17.270 --> 00:11:19.340
me about it. And in
the course of the discussion,

228
00:11:19.580 --> 00:11:22.250
we nailed it. And, and
it was because we used,

229
00:11:22.640 --> 00:11:25.520
we used just regular English.
We talked about, you know,

230
00:11:25.520 --> 00:11:27.530
the concepts that are into
the store, but we focused

231
00:11:27.530 --> 00:11:30.620
mainly on the business approach.
And as we started talking

232
00:11:30.620 --> 00:11:33.920
through the business approach, it
shook out the technology, which

233
00:11:33.920 --> 00:11:37.470
I thought was extraordinary. And
it's funny because he, I,

234
00:11:37.550 --> 00:11:39.530
I was saying, I'm frustrated
by this because of X,

235
00:11:39.530 --> 00:11:40.940
Y, and Z, but he
said, well, wait a minute,

236
00:11:40.940 --> 00:11:43.580
you just said the answer
to your question right here.

237
00:11:43.580 --> 00:11:44.870
And he backed me up
a little bit in my

238
00:11:44.870 --> 00:11:47.240
sentence. And I said, Oh
my gosh, I did didn't

239
00:11:47.240 --> 00:11:51.680
I? So it was pretty,
it was pretty profound. Make

240
00:11:51.680 --> 00:11:54.940
the possible out of the,
well, the dotnet ninjas at

241
00:11:54.940 --> 00:11:57.610
Telerik do they just released
a huge pack of web

242
00:11:57.610 --> 00:12:00.880
controls, all built on top
of aspirin at Ajax, that'll

243
00:12:00.880 --> 00:12:04.030
help you build impossibly fast
and interactive applications in no

244
00:12:04.030 --> 00:12:07.720
time at all. They've made
the impossible possible in desktop

245
00:12:07.720 --> 00:12:11.230
development. If you think you
can have a carousel component

246
00:12:11.230 --> 00:12:14.410
and wind forms while you
can, they're windows form suite

247
00:12:14.470 --> 00:12:17.170
features a super powerful grid
view control on 32 other

248
00:12:17.170 --> 00:12:21.160
crazy desktop components. That'll give
you a dazzling WPF like

249
00:12:21.160 --> 00:12:24.100
features, but in wind farms,
they do the same thing

250
00:12:24.100 --> 00:12:26.560
in reporting solutions with a
new design surface, like nothing

251
00:12:26.560 --> 00:12:30.040
else looks just like graph
paper. Cause you advanced page

252
00:12:30.040 --> 00:12:33.190
layout capabilities makes it feel
more like a graphic design

253
00:12:33.190 --> 00:12:37.960
software than a reporting solution.
Go check them out@telerikdotcomandbea.net Ninja.

254
00:12:38.230 --> 00:12:42.790
Thanks for listening. Hmm, that,
that reminds me of a

255
00:12:42.790 --> 00:12:45.370
story I've told before in
the show where one of

256
00:12:45.370 --> 00:12:48.190
my bosses use this term
about the cell phone antenna

257
00:12:48.220 --> 00:12:50.020
all the time. This is
his standard story that he

258
00:12:50.020 --> 00:12:53.560
would say. So basically, a
guy walks into, you know,

259
00:12:53.560 --> 00:12:56.530
the cell phone provider and
he says, I need a

260
00:12:56.530 --> 00:13:00.670
bigger antenna. And you say,
well, you need a bigger

261
00:13:00.670 --> 00:13:03.940
antenna. Well, what, what exactly
do you need? And this

262
00:13:03.940 --> 00:13:06.760
is the customer saying, I
need a bigger antenna. In

263
00:13:06.760 --> 00:13:10.030
fact, the person is saying,
I need better cell phone

264
00:13:10.030 --> 00:13:14.500
reception. They're coming in with
the solution. So this is

265
00:13:14.500 --> 00:13:18.610
like when the business person
says something like I put

266
00:13:18.610 --> 00:13:20.770
the button right here, or
I think the page should

267
00:13:20.770 --> 00:13:23.800
lay out like this. Those
aren't the kinds of things

268
00:13:23.800 --> 00:13:25.780
that the customer really needs
to be focused on. Those

269
00:13:25.780 --> 00:13:28.690
are the kinds of things
that you need to keep

270
00:13:28.690 --> 00:13:31.510
the customer away from focus
on the problem domain and

271
00:13:31.510 --> 00:13:35.830
keep them away from trying
to solve the problem for

272
00:13:35.830 --> 00:13:38.200
you. Don't let them tell
you that they need a

273
00:13:38.200 --> 00:13:42.900
better cell phone antenna. That's
true. And part of what

274
00:13:42.900 --> 00:13:46.740
that process entails between the
two of them, between you

275
00:13:46.920 --> 00:13:49.710
and your customer is that
you, that shield that you

276
00:13:49.710 --> 00:13:51.510
put up, you know, in
other words, don't focus on

277
00:13:51.510 --> 00:13:53.880
what I'm doing or don't
focus on the technology per

278
00:13:53.880 --> 00:13:56.640
se. But what you do
is you come, you come

279
00:13:56.640 --> 00:13:59.490
to their business, you get
to know their business really

280
00:13:59.490 --> 00:14:01.500
well, but at the same
time, you pull them into

281
00:14:01.500 --> 00:14:03.900
the technology a little bit.
You tell them about, we

282
00:14:03.900 --> 00:14:05.820
have these things called entities
and value objects and all

283
00:14:05.820 --> 00:14:08.850
these other things that you
learn about DDD. But pretty

284
00:14:08.850 --> 00:14:11.880
soon you're talking about the
same thing. And to reflect

285
00:14:11.880 --> 00:14:14.280
back a little bit about
the cart issue I just

286
00:14:14.280 --> 00:14:16.800
had, it was a lot
easier when I was working

287
00:14:16.800 --> 00:14:19.050
with KLA Tencor before it
was a lot easier for

288
00:14:19.050 --> 00:14:23.280
them to sort of understand
their process in terms of

289
00:14:23.280 --> 00:14:26.370
a cart. And so he
would my customer talk about

290
00:14:26.370 --> 00:14:28.470
a cart and he would
talk about a customer. And

291
00:14:28.470 --> 00:14:31.020
so we began to sort
of just talk that way.

292
00:14:31.320 --> 00:14:33.870
And that is what the
term ubiquitous language is all

293
00:14:33.870 --> 00:14:37.290
about. So as we start
talking and I'm diagramming, he

294
00:14:37.290 --> 00:14:39.510
knows precisely what I'm talking
about because when I'm talking

295
00:14:39.510 --> 00:14:41.580
about a cart and I
say to myself, well, I

296
00:14:41.580 --> 00:14:43.080
might as well call it
a cart because that's how

297
00:14:43.080 --> 00:14:45.480
he envisions it. And so
now that you have these

298
00:14:45.480 --> 00:14:48.120
two things together, which is
called the ubiquitous language, you

299
00:14:48.120 --> 00:14:52.070
can start as that as
your foundation, which really led

300
00:14:52.070 --> 00:14:55.210
me to an aha moment.
I just had the standing.

301
00:14:55.210 --> 00:14:59.170
And about 30 seconds ago,
you WhatsApp, I, as you're

302
00:14:59.170 --> 00:15:02.350
speaking, I'm like, it seems
so funny how aha moments,

303
00:15:02.380 --> 00:15:04.570
aren't the ones where you're
your, you know, your brain

304
00:15:04.570 --> 00:15:07.390
completely explodes. And you realize
that you're thinking about it

305
00:15:07.390 --> 00:15:10.060
all wrong. I used to
think aha moments were like

306
00:15:10.090 --> 00:15:14.770
going from like point a
to point Z and just

307
00:15:14.770 --> 00:15:17.260
skipping over all the other
ones. It really is just

308
00:15:17.260 --> 00:15:20.110
an incremental thing. I mean,
it's such an obvious statement.

309
00:15:20.110 --> 00:15:24.040
You just said that you
create, you wanted your design

310
00:15:24.100 --> 00:15:28.660
to use the same vocabulary
that the business person was

311
00:15:28.660 --> 00:15:32.110
using and that there's removing
the, the kind of impedance

312
00:15:32.110 --> 00:15:35.710
mismatch. You know, we spend
so much time as developers

313
00:15:35.710 --> 00:15:39.880
trying to teach the business
person technology and that's completely

314
00:15:39.880 --> 00:15:43.480
wrong headed because technology exists
for one reason. And that

315
00:15:43.480 --> 00:15:46.660
is to make the business
person money, right? It's technology

316
00:15:46.990 --> 00:15:50.020
exists to move the business
forward. So you're saying that

317
00:15:50.020 --> 00:15:53.770
you're creating your entities and
your patterns in a language

318
00:15:53.800 --> 00:15:56.650
that the business person is
familiar with so that when

319
00:15:56.650 --> 00:16:00.610
he just starts describing the
business problem and he's describing

320
00:16:00.610 --> 00:16:04.570
the entities and the, and
the patterns such that you're

321
00:16:04.570 --> 00:16:06.040
going to go, Oh yeah,
well, this is how the

322
00:16:06.040 --> 00:16:10.690
system actually works. So we're
on the same page. I

323
00:16:10.690 --> 00:16:12.970
mean, exactly. And the power
of that statement, we are

324
00:16:12.970 --> 00:16:16.390
on the same page. I
understand your language because we've

325
00:16:16.390 --> 00:16:19.780
spent so much time discussing
the problem domain. Now we

326
00:16:19.780 --> 00:16:23.770
were speaking the same. Yeah.
And that's the term domain

327
00:16:23.770 --> 00:16:27.460
driven it's domain means business.
You model the business in

328
00:16:27.460 --> 00:16:31.000
a domain and, and, and
you, you stick to it

329
00:16:31.690 --> 00:16:36.190
very heavily and it's, it's
quite, it's really, it's nice

330
00:16:36.190 --> 00:16:38.950
because it's an affirmation of
all the things that, you

331
00:16:38.950 --> 00:16:42.040
know, I think consultants have
done where they go in

332
00:16:42.460 --> 00:16:45.520
and, and they sit with
the client and they, they

333
00:16:45.550 --> 00:16:48.760
reason through problems with them.
And one statement that's made

334
00:16:48.760 --> 00:16:51.310
in, I think the Evan's
book is, you know, how

335
00:16:51.310 --> 00:16:54.700
much more valuable of a
consultant are you to, let's

336
00:16:54.700 --> 00:16:58.750
say organization acts, let's say
the organization makes airplanes. If

337
00:16:58.750 --> 00:17:03.880
you're, if you're aeronautical engineer
that happens to know.net and

338
00:17:03.880 --> 00:17:06.460
C sharp really well, how
much more valuable are you

339
00:17:06.460 --> 00:17:09.040
to them than just a
really good C sharp programmer?

340
00:17:09.730 --> 00:17:12.010
And so what the point
of DDD is for you

341
00:17:12.010 --> 00:17:14.800
to strive to know the
industry really, really highly. So

342
00:17:14.800 --> 00:17:17.800
you can actually solve their
problems very well. Right? It

343
00:17:17.800 --> 00:17:19.660
was just kind of funny
because it's, it's a very

344
00:17:19.660 --> 00:17:21.730
Zen thing to just say,
you know, return to the

345
00:17:21.730 --> 00:17:24.850
basics. What exactly are we
trying to do here? You

346
00:17:24.850 --> 00:17:27.130
know, there's a lot of
the meetings that I'm in.

347
00:17:27.130 --> 00:17:29.620
I try to remind people
that the point of the

348
00:17:29.620 --> 00:17:32.710
meeting is to come up
with the next actions to

349
00:17:32.710 --> 00:17:35.080
solve the problem and spend
less time jabbering and more

350
00:17:35.080 --> 00:17:38.800
time really distilling things down
to a space ex there's

351
00:17:38.800 --> 00:17:42.160
a really great blog up
at <inaudible>. If you're familiar

352
00:17:42.160 --> 00:17:47.020
with, with Casey Charleton and
he has a post called

353
00:17:47.320 --> 00:17:52.590
the Dao of domain design,
and he says here, domain

354
00:17:52.590 --> 00:17:55.230
driven design is the latest
software fat. And it's already

355
00:17:55.230 --> 00:17:58.620
becoming a buzzword that recruiters
are looking for. Every developer

356
00:17:58.620 --> 00:18:00.990
wants to do it. And
many think they are doing

357
00:18:00.990 --> 00:18:03.930
it. I think that's really
powerful. He says, it's really

358
00:18:03.930 --> 00:18:07.590
about how developers remove the
artificial boundaries that exist between

359
00:18:07.590 --> 00:18:12.040
IDs it and the business
we're there to support it.

360
00:18:12.050 --> 00:18:16.920
It's, it's just a very
Zen thing. I mean, it's,

361
00:18:16.920 --> 00:18:19.140
it's difficult to put one's
finger on, and that may

362
00:18:19.140 --> 00:18:22.020
be why it's so easy
to kind of throw rocks

363
00:18:22.020 --> 00:18:24.870
at and they say, Oh,
that's just nonsense. That's not

364
00:18:24.900 --> 00:18:28.550
concrete. Exactly. Well, it's also
the main reason why it's

365
00:18:28.550 --> 00:18:31.550
difficult to explain. It's difficult
for someone to get it

366
00:18:31.550 --> 00:18:33.860
across to somebody. I mean,
if I was to say

367
00:18:33.860 --> 00:18:35.690
to you, Scott, tell me
what Zen is all about.

368
00:18:35.960 --> 00:18:38.720
You know, you, you probably
would try and come up

369
00:18:38.720 --> 00:18:41.510
with analogies and you might
slip some jargon in there,

370
00:18:41.840 --> 00:18:44.840
which is exactly the problem
that DDD has. Right. And

371
00:18:46.100 --> 00:18:49.940
Overall, One of the challenges
that I think is facing

372
00:18:49.940 --> 00:18:51.980
DDD, which is something that
I put the other day

373
00:18:52.220 --> 00:18:54.590
on, on Twitter, is to
have somebody out there who

374
00:18:54.590 --> 00:18:57.920
can actually explain it in
real terms. And that we've

375
00:18:57.920 --> 00:19:00.560
actually all been doing it.
And if you, if you're

376
00:19:00.560 --> 00:19:03.920
wondering if you are out
there listening, and you're wondering,

377
00:19:03.950 --> 00:19:06.140
Hm, do I do DDD
or do I not? Is

378
00:19:06.140 --> 00:19:08.990
this something that I've always
been doing the way to

379
00:19:08.990 --> 00:19:11.210
consider? It is something that
I considered myself as when

380
00:19:11.210 --> 00:19:13.190
I walk into a client's
office or when I used

381
00:19:13.190 --> 00:19:16.760
to do I look at
their, what their problem is

382
00:19:16.760 --> 00:19:18.980
that they're telling me and
say, Oh, what you really

383
00:19:18.980 --> 00:19:22.490
need is this type of
application. And you abstract their

384
00:19:22.490 --> 00:19:26.780
problem into your terms of
understanding. That is a point

385
00:19:26.780 --> 00:19:29.070
of failure to a person
who likes Dee Dee Dee

386
00:19:29.410 --> 00:19:31.340
Dee Dee Dee person would
just sit there and listen

387
00:19:31.340 --> 00:19:34.220
and start diagramming, throwing objects
up on the wall. And

388
00:19:34.220 --> 00:19:37.310
pretty soon you're both understanding
the problem together. And you

389
00:19:37.310 --> 00:19:39.830
have an abstracted, their issue
as a programmer would into

390
00:19:39.830 --> 00:19:45.350
your terms. Is that Yeah.
Yeah. Cool. Yeah. I think,

391
00:19:45.560 --> 00:19:48.680
I think that the way
that I learn these kinds

392
00:19:48.680 --> 00:19:52.640
of concepts that best are
when I hear a story

393
00:19:52.640 --> 00:19:56.540
about how it's, how it's
succeeded. I think that when,

394
00:19:56.540 --> 00:19:59.600
when people say, well, give
me specifics, give me specifics.

395
00:19:59.660 --> 00:20:01.730
You know, some people want
a cookbook. They want like,

396
00:20:01.730 --> 00:20:05.690
step-by-step, you know, step one,
find a customer's step to

397
00:20:05.720 --> 00:20:08.510
sit down with a customer
that kind of detail for

398
00:20:08.510 --> 00:20:13.730
me. I prefer success narratives.
When I want to learn

399
00:20:13.730 --> 00:20:16.280
a concept like, like one
of my favorite books is

400
00:20:16.310 --> 00:20:18.950
Eli gold rats, the goal.
Have you ever read the

401
00:20:18.950 --> 00:20:24.650
goal? I haven't it's it's
it's it seems dry, but

402
00:20:24.650 --> 00:20:28.490
it's basically a novel about
a guy who runs a

403
00:20:28.490 --> 00:20:32.150
manufacturing plant. You never really
learn what they're making. They

404
00:20:32.150 --> 00:20:34.610
just use like code words
and stuff, they'll say, yeah,

405
00:20:34.940 --> 00:20:37.520
yeah. The info is ORC
1000. You know, it's, it's,

406
00:20:37.550 --> 00:20:40.610
it's not being built correctly
and you never really learned

407
00:20:40.610 --> 00:20:43.070
what it is cause it's
not really the point. And

408
00:20:43.100 --> 00:20:50.140
the whole book is about
a, of continuous improvement and

409
00:20:50.140 --> 00:20:54.100
how all these different characters
get together and work out

410
00:20:54.130 --> 00:20:57.640
where the bottlenecks are in
the manufacturing process and how

411
00:20:57.640 --> 00:21:02.290
they can better figure out
how to make this, this

412
00:21:02.290 --> 00:21:07.720
particular widget effectively. And the
way that they do it

413
00:21:08.260 --> 00:21:11.530
is, is a, is an
ongoing process of improvement. They

414
00:21:11.530 --> 00:21:13.810
improve this, they improve that
and they, they puzzle it

415
00:21:13.810 --> 00:21:17.440
out. So you're reading about
them, thinking about, you know,

416
00:21:17.440 --> 00:21:20.440
working through their, their own
logic. And I think that,

417
00:21:20.470 --> 00:21:24.760
you know, software books that
are abstract that include, you

418
00:21:24.760 --> 00:21:28.120
know, lots of UML diagrams
are useful to me as

419
00:21:28.120 --> 00:21:31.510
a, as a reference, but
I really prefer reading about

420
00:21:31.510 --> 00:21:37.180
people's people's successes and failures
in, in much more concrete

421
00:21:37.180 --> 00:21:41.200
terms. I like reading blog
posts about people's projects at

422
00:21:41.200 --> 00:21:43.690
work and what they're, what
they're currently doing and how

423
00:21:43.690 --> 00:21:48.730
they're applying something like, you
know, DDD to, to their,

424
00:21:48.730 --> 00:21:51.310
their life, through the life
that they're living right now.

425
00:21:51.800 --> 00:21:56.920
I know that Evan's book
isn't really deep on, on,

426
00:21:57.190 --> 00:22:00.790
on specifics like that. Are
there any resources or are

427
00:22:00.790 --> 00:22:03.610
there any blogs and people
are talking about living DDD

428
00:22:03.610 --> 00:22:08.400
right now, To be honest
with you, you know, I've

429
00:22:08.400 --> 00:22:12.090
found most blog resources out
there that talk about DDD

430
00:22:12.090 --> 00:22:15.870
and, and this isn't meant
to sound negative, but unfortunately

431
00:22:15.870 --> 00:22:17.760
it is. It's a lot
of, a lot of jargon

432
00:22:17.790 --> 00:22:21.930
thrown around and not very
careful explanation about how to

433
00:22:21.930 --> 00:22:25.020
solve a particular problem. And
I'm, you know, the thing

434
00:22:25.020 --> 00:22:26.790
that I'm building out here,
which is an eCommerce store

435
00:22:26.790 --> 00:22:29.550
is probably the ubiquitous sample.
Now short of maybe the

436
00:22:29.550 --> 00:22:32.850
blog engine. And, you know,
I was looking at how

437
00:22:32.850 --> 00:22:35.970
people would solve this and,
you know, I've looked online

438
00:22:35.970 --> 00:22:39.030
at sample applications, but sample
applications are really not the

439
00:22:39.030 --> 00:22:41.550
things you should look at
because they take theory to

440
00:22:41.550 --> 00:22:45.450
the degree. And I haven't
found much of anything to

441
00:22:45.450 --> 00:22:47.370
be honest with you. And
that's probably just because I've

442
00:22:47.370 --> 00:22:50.610
only been looking for a
couple of weeks here, but

443
00:22:51.090 --> 00:22:52.770
I hate to say it
now. I mean, Jimmy Bogard

444
00:22:52.770 --> 00:22:55.230
is a great, a good
blogger on he's on Los

445
00:22:55.230 --> 00:22:59.040
techies. He writes a lot
about DDD and I think

446
00:22:59.790 --> 00:23:02.340
I end day writes a
decent amount of DDD, but

447
00:23:02.340 --> 00:23:04.200
he doesn't really focus on
it. But if you're looking

448
00:23:04.200 --> 00:23:07.650
to learn it by reading
a set of blogs, I

449
00:23:07.650 --> 00:23:09.600
haven't found any. And that's
not to say they're not

450
00:23:09.600 --> 00:23:11.970
out there, but hopefully some
of your readers will, I

451
00:23:11.970 --> 00:23:15.720
enjoy reading. I enjoy reading
code better on covid.com. I

452
00:23:15.720 --> 00:23:19.440
enjoy reading delicious. A lot
of discussion of this happens

453
00:23:19.440 --> 00:23:22.470
in tiny, tiny little snippets
on Twitter, but I keep

454
00:23:22.500 --> 00:23:25.110
getting emails from people saying,
you know, where do I

455
00:23:25.110 --> 00:23:28.230
start? And it's almost like
saying, do you want to

456
00:23:28.230 --> 00:23:31.050
learn how to swim, jump
off this cliff, you know,

457
00:23:31.080 --> 00:23:34.050
and good luck with that
whole swimming thing. Okay. Well,

458
00:23:34.150 --> 00:23:36.630
it is that funny thing
is, Is that the conclusion

459
00:23:36.630 --> 00:23:39.470
of our show here? That's
not good. No, no, no,

460
00:23:39.480 --> 00:23:41.040
not at all. I'm going
to tell you all about

461
00:23:41.040 --> 00:23:42.780
how I'm doing this and
hopefully I can do it

462
00:23:42.780 --> 00:23:46.400
in short order. So this,
the segue into the next

463
00:23:46.400 --> 00:23:48.620
part, you know, so I
had that initial understanding of

464
00:23:48.620 --> 00:23:52.010
trying to slice up the
problem and figure it out

465
00:23:52.010 --> 00:23:53.930
in a different way. Cause
before I was looking at

466
00:23:53.930 --> 00:23:55.760
it like a developer much,
much too much like a

467
00:23:55.760 --> 00:23:58.220
developer. So what I decided
to do is to break

468
00:23:58.220 --> 00:24:02.810
it down and restructure everything.
And so a nice, a

469
00:24:02.810 --> 00:24:05.360
really, a couple of nice
ways that are a couple

470
00:24:05.360 --> 00:24:07.160
of nice things that came
out of reading these books

471
00:24:07.550 --> 00:24:10.580
were software patterns that they
really favor because of the

472
00:24:10.580 --> 00:24:15.050
way they loosely coupled designs
and other patterns, or excuse

473
00:24:15.050 --> 00:24:17.720
me, literally, a couple of
designs and complexity of the

474
00:24:17.720 --> 00:24:20.240
solution. So I'm throwing jargon
at you. I can't stay

475
00:24:20.240 --> 00:24:23.960
on that. So break it
down. Yeah. So what I

476
00:24:23.960 --> 00:24:27.110
did was I, the first
concept I learned was the

477
00:24:27.110 --> 00:24:29.090
concept that Dave Larrabee told
me about, which was the

478
00:24:29.090 --> 00:24:33.860
bounded context. Now what that
means simply is that when

479
00:24:33.860 --> 00:24:35.990
you sit down and you
create a domain, instead of

480
00:24:35.990 --> 00:24:38.990
entities, a things called services,
which I'll go into in

481
00:24:38.990 --> 00:24:43.010
a second, you put them
in a specific context, knowing

482
00:24:43.070 --> 00:24:47.600
in a e-commerce application, you
have actually two contexts at

483
00:24:47.600 --> 00:24:51.590
the very beginning. The first
context is sales. We're actually

484
00:24:51.590 --> 00:24:53.840
trying to sell something. That's
what the UI is mostly

485
00:24:53.840 --> 00:24:57.230
about in an eCommerce store.
So, you know, you have

486
00:24:57.230 --> 00:24:58.730
specials, you have all these
other things, try and get

487
00:24:58.730 --> 00:25:00.380
the person to put something
in your basket and boom,

488
00:25:00.380 --> 00:25:04.970
sell it. That's context. One
context too is actually order

489
00:25:04.970 --> 00:25:09.380
fulfillment. Those are two really
separate and very specific domains.

490
00:25:09.650 --> 00:25:12.110
If you look at any,
any systems. So that was

491
00:25:12.110 --> 00:25:15.140
the first thing. So once
I got past that, I

492
00:25:15.170 --> 00:25:17.930
kind of said, okay, I'm
being big business focused. I

493
00:25:17.990 --> 00:25:22.180
set up two applications or
two libraries that digital. And

494
00:25:22.180 --> 00:25:25.250
then I, I just hard
on the second thing or

495
00:25:25.250 --> 00:25:26.830
that let's say the second
and third thing that go

496
00:25:26.830 --> 00:25:30.370
together. The second thing is
the repository pattern, which we've

497
00:25:30.370 --> 00:25:33.070
been using in the past.
But now that I'm focusing

498
00:25:33.070 --> 00:25:35.110
on DDD, it's got a
little bit of a separate

499
00:25:35.110 --> 00:25:38.770
meaning. The repository is simply
where you are entities are

500
00:25:38.770 --> 00:25:42.220
created from. I think most
people understand that from hearing

501
00:25:42.220 --> 00:25:47.170
the repository before. So the
final thing that goes together

502
00:25:47.170 --> 00:25:49.900
here is the thing called
a unit of work, again,

503
00:25:49.900 --> 00:25:52.900
a pretty bland term. But
what unit of work represents

504
00:25:53.440 --> 00:25:57.250
is it's sort of a
holder for your objects. If,

505
00:25:57.330 --> 00:26:00.910
if I'm explaining this properly,
it manages the state of

506
00:26:00.910 --> 00:26:03.280
the objects that you're playing
with. So if you're familiar

507
00:26:03.280 --> 00:26:06.130
with LinkedIn SQL and you
use the data context, that

508
00:26:06.130 --> 00:26:08.830
data context represents a unit
of work, you ask it

509
00:26:08.830 --> 00:26:11.200
for some entities, you work
with those entities, you might

510
00:26:11.200 --> 00:26:13.810
add it's amenities to that.
And then you say, okay,

511
00:26:14.270 --> 00:26:17.410
submit everything at once that
when you say submit everything

512
00:26:17.500 --> 00:26:20.650
at once or submit all
changes that is known as,

513
00:26:20.650 --> 00:26:22.990
as a unit of work
and kind of an atomic

514
00:26:23.270 --> 00:26:27.520
addition into a database, okay.
Now is it so is

515
00:26:27.610 --> 00:26:31.330
so I started focusing on
those, those aspects and implementing

516
00:26:31.330 --> 00:26:34.180
them into the, into the
project. The next thing I

517
00:26:34.180 --> 00:26:38.770
had to understand was the
difference between entities and value

518
00:26:38.800 --> 00:26:42.340
objects. This, to me, it
was just really hard because

519
00:26:42.340 --> 00:26:46.980
entities or literally anything and
a value object says nothing

520
00:26:46.980 --> 00:26:49.500
to me. So I had
to look and basically understand

521
00:26:49.500 --> 00:26:51.840
what that means. Now, the
difference is an entity is

522
00:26:51.840 --> 00:26:54.390
something you care deeply about
in terms of its identity.

523
00:26:55.070 --> 00:26:57.030
Do you want to persist
it? Do I care about

524
00:26:57.030 --> 00:27:00.480
it two weeks from now?
So in, in, in a

525
00:27:00.480 --> 00:27:03.180
sense in your application, an
order is something you'd care

526
00:27:03.180 --> 00:27:05.820
deeply about and an order
has a specific identity that

527
00:27:05.820 --> 00:27:08.550
you need to work with.
However, an address may not

528
00:27:08.550 --> 00:27:11.910
be in a system that
just simply hasn't addressed, that

529
00:27:11.970 --> 00:27:14.790
that will define where you're
shipping something to you don't

530
00:27:14.790 --> 00:27:18.060
really care. It is just
there simply to decorate or

531
00:27:18.060 --> 00:27:21.510
to kind of add value
or add a description to

532
00:27:21.510 --> 00:27:23.400
an order. So that would
be what's called a value

533
00:27:23.400 --> 00:27:27.510
object. The main difference is
that a value object has

534
00:27:27.510 --> 00:27:32.190
no setters. Primarily it is
only, excuse me. Yeah. It's

535
00:27:32.190 --> 00:27:34.500
only, only has gets on
it. And our main reason,

536
00:27:34.500 --> 00:27:36.840
why is you don't want
it to change. And so

537
00:27:36.840 --> 00:27:39.690
you start setting up those
kinds of rules. It starts

538
00:27:39.690 --> 00:27:41.610
to make sense, like you
set up these lines and

539
00:27:41.610 --> 00:27:45.270
these boundaries inside your application,
and you start to see

540
00:27:45.270 --> 00:27:47.430
things take shape. And I'm
going to take a slight

541
00:27:47.430 --> 00:27:51.210
tangent here and say that
these patterns, the way you

542
00:27:51.210 --> 00:27:54.420
can think about this in
your mind is in terms

543
00:27:54.420 --> 00:27:56.880
of relational theory. So that's
the neat thing about a

544
00:27:56.880 --> 00:27:59.430
database is that we have
relational theory. If you're talking

545
00:27:59.430 --> 00:28:03.690
about a transactional database where
tables have very strict ways

546
00:28:03.690 --> 00:28:07.590
that you're supposed to go
down and follow normalization and

547
00:28:07.590 --> 00:28:09.690
relational theory and the way
you structure it. So everybody

548
00:28:09.690 --> 00:28:12.240
pretty much agrees. And you
know, there's variations, of course,

549
00:28:13.230 --> 00:28:15.870
all this is, is a
type of relational theory for

550
00:28:15.870 --> 00:28:18.270
how you build out your
application. In other words, what

551
00:28:18.270 --> 00:28:21.630
pattern do I use to
represent this status change? What,

552
00:28:21.780 --> 00:28:23.790
how does a customer have
a shopping card or does

553
00:28:23.790 --> 00:28:25.920
a shopping card have a
customer? You see what I'm

554
00:28:25.920 --> 00:28:27.600
saying? So then you kind
of, if you don't know

555
00:28:27.600 --> 00:28:30.120
the answer, you go back
to your client and you

556
00:28:30.120 --> 00:28:32.250
talk to them and you
figured out in a dialogue.

557
00:28:32.820 --> 00:28:35.820
So that that's kind of
how the that's kind of

558
00:28:35.820 --> 00:28:38.730
how it comes together. Now,
what I'm finding here is

559
00:28:38.730 --> 00:28:41.220
a ton of confusion. As
I restructured my application, like,

560
00:28:41.280 --> 00:28:42.930
you know the questions I'm
bringing up now, you know,

561
00:28:43.500 --> 00:28:46.320
like even non down, does
it product have categories? It

562
00:28:46.320 --> 00:28:47.850
is a category. I have
a product. And the question

563
00:28:47.850 --> 00:28:50.730
to the answer turned out
to be neither. I found

564
00:28:50.730 --> 00:28:53.970
that out by having discussions
with my friends and talking

565
00:28:53.970 --> 00:28:55.890
about the problem that I
was trying to solve. And

566
00:28:55.890 --> 00:28:57.630
I normally do that with
a client. I don't have

567
00:28:57.670 --> 00:29:00.240
a client per se, but
I talked to <inaudible> one

568
00:29:00.240 --> 00:29:02.580
day and he said, well,
this is the gripping of

569
00:29:02.580 --> 00:29:04.320
the, to is not a
concern of either one of

570
00:29:04.320 --> 00:29:06.980
them. It's actually a bit
of logic that lives sort

571
00:29:06.980 --> 00:29:10.190
of yeah. Tangentially to it.
It's, it's a service. And

572
00:29:10.190 --> 00:29:12.170
that's what a, you know,
a service is in DDD

573
00:29:12.170 --> 00:29:15.200
is it is a kind
of a logic dump that

574
00:29:16.400 --> 00:29:19.730
it handles something that an
entity otherwise wouldn't. And so

575
00:29:19.730 --> 00:29:22.920
you start to see these
patterns play out and, and,

576
00:29:22.950 --> 00:29:25.520
and you say, okay, well,
I can start restructuring putting

577
00:29:25.520 --> 00:29:27.680
things together. And as it
comes together and you look

578
00:29:27.680 --> 00:29:31.250
at it, it really makes
you feel good. It's a

579
00:29:31.250 --> 00:29:33.050
little bit of Zen thrown
in the code and you

580
00:29:33.050 --> 00:29:34.820
say, Oh my goodness, this
is awesome. Now I just

581
00:29:34.820 --> 00:29:35.900
throw a bunch of stuff
at you. And I'm sure

582
00:29:35.900 --> 00:29:39.440
you have questions. All good.
Trying to bring that back

583
00:29:39.440 --> 00:29:42.280
to the relationship with the,
in your case, you don't

584
00:29:42.280 --> 00:29:45.910
really have a customer though.
Exactly. Right. Cause you're living

585
00:29:45.910 --> 00:29:48.850
in a little microcosm that
doesn't necessarily reflect reality. So

586
00:29:48.850 --> 00:29:51.640
are you alright, do you
think you're really getting the,

587
00:29:52.930 --> 00:29:55.780
the truth about how this
works when you are your

588
00:29:55.780 --> 00:30:00.000
own customer? You know, that's
a, that's a great question.

589
00:30:00.030 --> 00:30:03.030
And someone pointed me, I'd
say 10 to 20 people

590
00:30:03.030 --> 00:30:07.500
pointed out to me when
I got started and only

591
00:30:07.500 --> 00:30:09.330
10 to 20, you have
believe it or not. No,

592
00:30:09.330 --> 00:30:12.300
but you know, the truth
about it is I'm focusing

593
00:30:12.300 --> 00:30:15.510
on my old client that
I, I think it's pretty

594
00:30:16.410 --> 00:30:21.420
A pretty standard kind of
large corporation that does, that

595
00:30:21.420 --> 00:30:23.760
does eCommerce and the problems
that they had and how

596
00:30:23.760 --> 00:30:27.150
they envisioned stuff. I'm not
going into it as deeply

597
00:30:27.150 --> 00:30:30.030
as they they'd had, but
I'm kind of looking at

598
00:30:30.030 --> 00:30:31.860
things in the way that
they would have, if that

599
00:30:31.860 --> 00:30:34.110
makes sense. I've known that
I've been working, was working

600
00:30:34.110 --> 00:30:36.090
with them for six years.
So I know their business

601
00:30:36.090 --> 00:30:38.490
inside and out, and I
know how they would answer

602
00:30:38.490 --> 00:30:40.710
these questions now because I
got to know my client

603
00:30:40.710 --> 00:30:43.830
that well, is that, Does
that make sense? Yeah, that

604
00:30:43.830 --> 00:30:46.100
makes sense. Yeah, but still,
I think though, that, that,

605
00:30:46.370 --> 00:30:48.780
that I know that when
I was doing agile work

606
00:30:48.810 --> 00:30:52.980
and, and, and, and learning
from guys like Jim shore

607
00:30:53.010 --> 00:30:58.110
about how to really get
started, the, the onsite customer

608
00:30:58.260 --> 00:31:01.690
was very, you know, fundamental.
And I still believe when

609
00:31:01.770 --> 00:31:04.770
we say the onsite customer,
we mean, you know, ideally

610
00:31:04.770 --> 00:31:07.680
they've moved into a cubicle
next to you, but it

611
00:31:07.680 --> 00:31:12.090
means constant and ongoing continuous
communication because, you know, things

612
00:31:12.090 --> 00:31:15.630
like, you know, things like
big upfront design, a bunch

613
00:31:15.630 --> 00:31:18.870
of work, and then customer
acceptance testing is where you'll

614
00:31:18.870 --> 00:31:22.440
get, you'll get nailed. That's
where, where the customer says,

615
00:31:22.740 --> 00:31:25.470
do something, you go running
in the wrong direction. And

616
00:31:25.470 --> 00:31:26.730
then they say, no, no,
no, no, no. Over here

617
00:31:26.730 --> 00:31:28.530
this direction. And then you
spend a lot of time

618
00:31:28.920 --> 00:31:31.350
running around in circles rather
than running in a straight

619
00:31:31.560 --> 00:31:36.540
in a straight line. It
seems like DDD refines that

620
00:31:36.900 --> 00:31:39.600
such that not only is
there this ongoing relationship with

621
00:31:39.600 --> 00:31:42.340
the customer, but you're trying
to make sure that the,

622
00:31:42.340 --> 00:31:44.460
the language that you're using
the, as they say that

623
00:31:44.460 --> 00:31:50.400
ubiquitous language is one that
is absolutely clear. It's clear

624
00:31:50.400 --> 00:31:53.850
to both of you and,
and the, and all the

625
00:31:53.850 --> 00:31:56.190
way down to the point
where the software design, the

626
00:31:56.190 --> 00:31:58.350
patterns that you use and
the code that you write

627
00:31:58.740 --> 00:32:03.330
aligns with the business and
with the expectation that that

628
00:32:03.330 --> 00:32:06.390
customer has, is that, Yeah.
And I can give you,

629
00:32:06.420 --> 00:32:08.520
let me give you a
specific example of the way

630
00:32:08.520 --> 00:32:11.070
that you might reason this
out as a developer, trying

631
00:32:11.070 --> 00:32:14.550
to implement a pattern that
is kind of handled in

632
00:32:14.550 --> 00:32:18.870
DDD. One might be like
the, the idea of creating

633
00:32:18.870 --> 00:32:21.960
an order. And there's a
lot of different, there's a

634
00:32:21.960 --> 00:32:24.120
lot of different considerations when
you create an order, like,

635
00:32:24.120 --> 00:32:25.620
are you creating it new
so that, you know, you're

636
00:32:25.620 --> 00:32:27.960
going to jam it through
the process, or are you

637
00:32:27.960 --> 00:32:30.210
creating a new, a different
type of order, like a

638
00:32:30.210 --> 00:32:33.030
PO that might have a
PO to it. So, you

639
00:32:33.030 --> 00:32:35.190
know, what you could do
is in traditional kind of

640
00:32:35.190 --> 00:32:38.670
C sharp programming is just
create constructor, overloads. And over

641
00:32:38.670 --> 00:32:42.710
time as the complexity grows
in your application, you might

642
00:32:42.710 --> 00:32:47.180
end up with three, four,
whatever constructor overloads with DDD

643
00:32:47.180 --> 00:32:49.700
would say about that is
when you look at those

644
00:32:49.700 --> 00:32:51.740
overloads, do they make sense?
Would they make sense to

645
00:32:51.740 --> 00:32:54.530
your customer? If you're trying
to explain what those overloads

646
00:32:54.530 --> 00:32:56.930
mean, and 99% of the
time, the answer would be

647
00:32:56.930 --> 00:32:59.870
no. Cause cause each one
of the signatures on those

648
00:32:59.870 --> 00:33:04.040
constructors means something to a
programmer, but that doesn't necessarily

649
00:33:04.040 --> 00:33:06.830
mean what they do. So
what they would, w D

650
00:33:06.830 --> 00:33:08.240
D D would say at
that point is, well, you

651
00:33:08.240 --> 00:33:10.550
got a certain level of
complexity here. Let's implement the

652
00:33:10.550 --> 00:33:12.920
factory pattern. And so you'd
create a thing called an

653
00:33:12.920 --> 00:33:15.830
order factory that has specific
logic in it. Now what's

654
00:33:15.830 --> 00:33:18.230
that logic. Well, you sit
down with your customer and

655
00:33:18.230 --> 00:33:19.940
say, well, Hey, you know,
when someone phones in an

656
00:33:19.940 --> 00:33:21.950
order, so in the case
of KLA, Tencor, my client,

657
00:33:22.700 --> 00:33:24.950
I would say, you know,
when someone phones an order

658
00:33:24.950 --> 00:33:27.770
in for a massive manufacturing
machine, what do you do?

659
00:33:28.220 --> 00:33:29.750
They said, well, you know,
we, we pull out an

660
00:33:29.750 --> 00:33:32.630
order sheet and that order
sheet has these, you know,

661
00:33:32.630 --> 00:33:34.370
the name and what the
client, or what the, you

662
00:33:34.370 --> 00:33:36.560
know, what the client wants
and a couple other things

663
00:33:36.560 --> 00:33:39.260
like, Oh, okay. So when
do you use, do you

664
00:33:39.260 --> 00:33:41.330
always use the same sheet?
And so we go through

665
00:33:41.330 --> 00:33:42.560
this Q and a, by
the end of it, I

666
00:33:42.560 --> 00:33:45.560
say, okay, well, let's mirror
what the factory does, according

667
00:33:45.560 --> 00:33:47.450
to what they do. Now,
you can even use the

668
00:33:47.450 --> 00:33:51.800
same thing, create new order
for client, create new order

669
00:33:51.800 --> 00:33:55.490
for star client, whatever. Now
the signature has become extremely

670
00:33:55.490 --> 00:33:58.910
clear. The logic is isolated,
as you've determined it from

671
00:33:58.910 --> 00:34:01.130
your client. That little bit
of logic is isolated in

672
00:34:01.130 --> 00:34:03.770
that factory. It makes great
sense. And then when you

673
00:34:03.770 --> 00:34:07.120
show it to your client,
they understand it. Cool. So

674
00:34:07.120 --> 00:34:09.730
there's all this, it does
assume, which is, I guess,

675
00:34:09.730 --> 00:34:14.290
a reasonable assumption that their
existing business processes working, such

676
00:34:14.290 --> 00:34:19.000
that you would in fact
want to you, you would

677
00:34:19.000 --> 00:34:22.420
in fact when a mirror,
it Exactly. That's exactly right.

678
00:34:23.530 --> 00:34:25.300
And to follow up just
one last thing. I know

679
00:34:25.300 --> 00:34:28.030
we don't have too much
more time, but I I've

680
00:34:28.030 --> 00:34:30.580
decided that for the storefront,
I want to break out

681
00:34:30.580 --> 00:34:33.070
what I'm doing here. This
restructuring stuff into about three

682
00:34:33.070 --> 00:34:36.820
or four episodes. I've got
recorded time from Dave Larrabee

683
00:34:37.480 --> 00:34:40.960
from my end day, Jimmy
Bogard. And I'm going to

684
00:34:41.440 --> 00:34:44.200
probably talk to Scott bellwether
as well, just to get

685
00:34:44.200 --> 00:34:46.960
their take on what I'm
doing, which I think will

686
00:34:46.960 --> 00:34:50.410
be interesting to say the
least To the, the alt.net

687
00:34:51.010 --> 00:34:54.160
podcast. Guys, you should do
it with them. I have

688
00:34:54.160 --> 00:34:58.360
an alt.net podcast tomorrow with
James Avery. And I'm talking specifically

689
00:34:58.360 --> 00:35:00.970
about this. Yeah. So, you
know, my, I have an

690
00:35:00.970 --> 00:35:03.310
ulterior motive here, which is
to kind of bring DD

691
00:35:03.310 --> 00:35:04.900
into the light, which is
funny because it's one of

692
00:35:04.900 --> 00:35:07.690
the DDD core tenants is
to bring problems into the

693
00:35:07.690 --> 00:35:10.900
light. Not that health.net is
a problem, but, or DDD

694
00:35:10.900 --> 00:35:12.310
or anything as a problem,
but I'm trying to bring

695
00:35:12.310 --> 00:35:14.080
it into the light because
it's been a sore subject

696
00:35:14.080 --> 00:35:15.880
with people, you blog about
it. And if you get

697
00:35:15.880 --> 00:35:18.100
it wrong, people, people correct
you. And I'm sure I'm

698
00:35:18.100 --> 00:35:20.500
going to be corrected today
if that's okay, because it

699
00:35:20.500 --> 00:35:22.660
talks a little bit to
the point you made before

700
00:35:22.660 --> 00:35:25.120
about continuous learning. And that
is one of the points

701
00:35:25.120 --> 00:35:27.250
of DDT is to always
learn and to always think

702
00:35:27.250 --> 00:35:29.140
and to always talk. So
it's good. Yeah. Well, I

703
00:35:29.140 --> 00:35:31.900
think it's great. So it
sounds like the way that

704
00:35:31.900 --> 00:35:34.210
people can learn more about
de de de de de

705
00:35:34.630 --> 00:35:37.200
is as opposed to just
randomly searching for on the

706
00:35:37.200 --> 00:35:40.350
web. They can start by
taking a look@theall.net podcast that

707
00:35:40.350 --> 00:35:41.610
are going to be coming
in the next couple of

708
00:35:41.610 --> 00:35:42.930
weeks that you're going to
be working on. They can

709
00:35:42.930 --> 00:35:45.090
check a look at your
blog. They can get involved

710
00:35:45.090 --> 00:35:47.910
in the conversation and they
can certainly read the domain

711
00:35:47.910 --> 00:35:51.930
driven design book by Eric Evans.
Absolutely. And for what it's

712
00:35:51.930 --> 00:35:54.390
worth this, what I'm mostly
going to be focusing on

713
00:35:54.420 --> 00:35:58.230
with the storefront is my
journeys and learning. Not necessarily

714
00:35:58.410 --> 00:36:00.600
what I think is correct.
So that's just more throwing

715
00:36:00.600 --> 00:36:03.360
out there. Cool. Well, Rob,
Conrad, thanks so much for

716
00:36:03.360 --> 00:36:06.810
sitting down with me today
and chatting. Thank you, Scott.

717
00:36:07.350 --> 00:36:09.150
All right. Well, this has
been another episode of Hansel

718
00:36:09.150 --> 00:36:16.670
minutes and I'll see you
again. Next time. <inaudible>.

