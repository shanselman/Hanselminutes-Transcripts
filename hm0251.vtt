WEBVTT FILE

1
00:00:12.240 --> 00:00:17.700
From hanselminutes.com. It's Hansel minutes.
Our weekly discussion with web

2
00:00:17.700 --> 00:00:22.290
developer and technologists, Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.290 --> 00:00:28.740
number two 51 recorded live
Thursday, January 27th, 2011. Support for Hansel

4
00:00:28.740 --> 00:00:32.640
minutes is provided by Tellerik
rad controls, the most comprehensive

5
00:00:32.640 --> 00:00:36.450
suite of components for windows
forums and asp.net web applications

6
00:00:36.780 --> 00:00:45.540
online@wwwdottelerik.com. In this episode, Scott
talks HTML five basics with

7
00:00:45.540 --> 00:00:52.160
Mads Christiansen, Scott Hanselman. This
is another episode of Hansel

8
00:00:52.160 --> 00:00:55.430
minutes. And today I'm talking
about HTML five. I've got

9
00:00:55.430 --> 00:01:01.730
Mads Christianson on. Thanks for
taking the time to be

10
00:01:01.730 --> 00:01:06.560
here. So what are you
in charge of within Microsoft,

11
00:01:06.650 --> 00:01:10.850
as it relates to HTML
five, I'm in charge of

12
00:01:10.850 --> 00:01:17.660
the HTML editor in visual
studio in various places, but

13
00:01:17.660 --> 00:01:23.630
it's mainly the studio visual
studio. So there's a lot

14
00:01:23.630 --> 00:01:26.420
of people within Microsoft that
are working on HTML five.

15
00:01:26.420 --> 00:01:29.120
I know. And like you
said, you're working on the

16
00:01:29.120 --> 00:01:31.340
editor. So you're the, you're
the person who is thinking

17
00:01:31.340 --> 00:01:35.540
about what the experience will
be like for a developer.

18
00:01:35.750 --> 00:01:38.750
Who's going to be living
inside of visual studio. You're

19
00:01:38.750 --> 00:01:43.760
going to be adding things
presumably to visual studio. I

20
00:01:43.760 --> 00:01:48.860
noticed recently when I installed
the service pack, beta beta

21
00:01:48.860 --> 00:01:54.170
for visual studio, under tools,
options, and validation that HTML

22
00:01:54.170 --> 00:01:57.800
five now shows up as
an, as an option there.

23
00:01:57.800 --> 00:02:04.420
That was a brand new
thing. And you'll find the

24
00:02:12.020 --> 00:02:16.830
toolbar. Then you also have
to pop down there and

25
00:02:16.830 --> 00:02:25.970
you might've seen it basically.
So what is that? What

26
00:02:25.970 --> 00:02:30.530
does that dropdown box in
the editor? What does that,

27
00:02:30.530 --> 00:02:32.600
what does that add or
allow me to do that

28
00:02:32.600 --> 00:02:38.720
I didn't have before. So
it gives you intelligence and

29
00:02:38.720 --> 00:02:43.310
validation for most of the
new HTML elements and attributes.

30
00:02:47.420 --> 00:02:54.980
It's a schema and it
comes with its own set

31
00:02:54.980 --> 00:03:00.970
of elements and attributes and
values. So by, by enabling

32
00:03:00.970 --> 00:03:03.700
HTML five, and you have
to do this manually after

33
00:03:03.700 --> 00:03:08.170
installing SP one, when you
select your schema to be

34
00:03:08.170 --> 00:03:12.310
HTML five, you will get
these new elements and attributes

35
00:03:13.390 --> 00:03:15.580
and it will show. So
whenever you type something, I

36
00:03:15.580 --> 00:03:17.890
mean, we're going to drop
down the intelligence list and

37
00:03:18.550 --> 00:03:20.590
you have your video tag
and footer and header and

38
00:03:20.590 --> 00:03:25.380
all these things. So a
lot of people are using

39
00:03:25.380 --> 00:03:29.370
HTML five. It feels like
to me to maybe mean

40
00:03:29.670 --> 00:03:32.760
more than it really is.
I mean, it's, it's, it's

41
00:03:32.760 --> 00:03:36.030
being used so often in
conversation. It seems very, very

42
00:03:36.030 --> 00:03:39.750
scary. Remember that XHTML was
supposed to be the next

43
00:03:39.750 --> 00:03:44.160
big thing. Certainly HTML four
is, you know, the most

44
00:03:44.160 --> 00:03:47.460
successful market format ever. Everyone
right now is effectively writing

45
00:03:47.460 --> 00:03:51.030
their code in HTML four
is HTML five going to

46
00:03:51.030 --> 00:03:52.710
mean I'm going to have
to rewrite a lot of

47
00:03:52.710 --> 00:03:55.860
stuff or is it, is
it scary? I mean, talk

48
00:03:55.860 --> 00:03:58.110
to me about what is,
what is this thing that

49
00:03:58.110 --> 00:04:02.100
everyone is talking about called
HTML five? Yeah. So, so

50
00:04:02.130 --> 00:04:06.660
people usually talk about two
different things using the same

51
00:04:07.020 --> 00:04:11.970
name, HTML five. And so
ACML five is also used

52
00:04:12.180 --> 00:04:14.970
as an umbrella term for
everything. That's kind of the

53
00:04:14.970 --> 00:04:20.400
web 2.0 standards. So, you
know, the HTML, CSS, web

54
00:04:20.400 --> 00:04:24.060
sockets, some JavaScript API and
so on. And then there

55
00:04:24.060 --> 00:04:27.510
is the HTML five, that's
only the HTML specification and

56
00:04:27.510 --> 00:04:29.790
the new version of HTML,
the one that takes over.

57
00:04:34.350 --> 00:04:36.390
So that's kind of the
distinction between the two. And

58
00:04:36.390 --> 00:04:42.060
that's, there's a lot of
that's using statements because of

59
00:04:42.060 --> 00:04:47.490
this basically. I mean, it's,
if you're used to code

60
00:04:48.000 --> 00:04:52.020
and ride your market and
HTML four, then HTML five

61
00:04:52.020 --> 00:04:55.920
is very simple. It's, it's
very forgiving. So, you know,

62
00:04:55.950 --> 00:05:00.930
everything goes, it's not like
XHTML where there were some

63
00:05:00.930 --> 00:05:04.110
things you couldn't do. XHTML
you have to close the

64
00:05:04.110 --> 00:05:07.020
tags, you have to use
value quotes and so on,

65
00:05:07.590 --> 00:05:09.060
and you don't have to
do that in agent of

66
00:05:09.060 --> 00:05:14.040
five. So actually, if your
page is already written in

67
00:05:14.040 --> 00:05:16.320
HTML, for all you need
to do is just change

68
00:05:16.320 --> 00:05:20.250
the doc type. So the
new HTML five and, and

69
00:05:20.250 --> 00:05:24.540
your pages are still valid,
Really. Okay. So I understand

70
00:05:24.540 --> 00:05:27.150
that the doc type is
a lot simpler. Now it's

71
00:05:27.150 --> 00:05:30.330
just an exclamation point, the
word doc type, and then

72
00:05:30.330 --> 00:05:33.660
the word HTML, and there's
no namespace or big, long

73
00:05:33.660 --> 00:05:36.450
complicated URI in, in the,
at the top of my

74
00:05:36.600 --> 00:05:40.620
document. Yeah, that's right. And
actually, if you're, if you're

75
00:05:40.620 --> 00:05:44.700
using the other flavor of
HTML five, the XHTML five,

76
00:05:45.390 --> 00:05:48.570
then you actually don't even
need a doc type Really.

77
00:05:48.570 --> 00:05:51.300
So I would just start
it with HTML as a,

78
00:05:51.810 --> 00:05:55.290
as a root element. And
that's X HTML five. Yeah.

79
00:05:55.320 --> 00:05:57.500
So yeah, if you don't
have a duck type, then,

80
00:05:57.560 --> 00:05:59.810
then it's like, Hmm, well,
of course you have to

81
00:06:00.080 --> 00:06:04.550
adhere to the XML rules
of value quotes and close

82
00:06:04.550 --> 00:06:08.770
your tax and so on.
Okay. So I can take

83
00:06:08.770 --> 00:06:12.070
my existing HTML four. I
can put doc type HTML

84
00:06:12.070 --> 00:06:16.030
on it. And then presumably
browsers might change their renderers,

85
00:06:16.030 --> 00:06:18.970
like Firefox, or I might
start treating it like HTML

86
00:06:18.970 --> 00:06:21.490
five. I assume I might
have some small changes in

87
00:06:21.490 --> 00:06:24.850
the way things render between
four and five, just because

88
00:06:24.850 --> 00:06:27.250
I changed my doc type.
Cause I'm making a declaration

89
00:06:27.250 --> 00:06:30.700
that this is HTML five.
Yes, yes. There are. I

90
00:06:30.700 --> 00:06:34.000
mean, so the, I use
as a rule of thumb

91
00:06:34.000 --> 00:06:39.220
that if it worked in,
in <inaudible> or it worked

92
00:06:39.220 --> 00:06:42.160
in HTML four and it
just changed the doc type

93
00:06:42.190 --> 00:06:46.090
chances are that it works
and they smell five pretty,

94
00:06:46.450 --> 00:06:50.200
pretty big. Okay. And I
understand that there's a bunch

95
00:06:50.200 --> 00:06:53.920
of new semantic links, a
mathematic elements rather, excuse me,

96
00:06:55.000 --> 00:07:00.700
like article header, footer nav,
is that meant to like

97
00:07:01.090 --> 00:07:06.220
keep people from using dibs
for everything. Yeah. Basically it,

98
00:07:06.280 --> 00:07:09.550
it helps you break up
your page in a more

99
00:07:09.550 --> 00:07:15.760
semantical way and they're awesome
discussions going on right now

100
00:07:16.180 --> 00:07:19.750
within the working groups and
online on when to use

101
00:07:21.160 --> 00:07:23.140
the new tech section for
instance, and when to use

102
00:07:23.140 --> 00:07:28.450
a diff, because is most
people would probably use this

103
00:07:28.750 --> 00:07:34.430
as some sort of section
the limiter or container. So,

104
00:07:34.430 --> 00:07:39.250
so there is no clear
understanding on when to use

105
00:07:39.250 --> 00:07:42.370
what. So I think we
have to just wait and

106
00:07:42.370 --> 00:07:45.190
see what the W3C comes
up with and recommend us

107
00:07:45.190 --> 00:07:48.910
to do, but, but it
seems that you can do

108
00:07:48.910 --> 00:07:52.150
pretty much whatever you want
and no matter what, if

109
00:07:52.150 --> 00:07:54.190
you use the footer and
header and age groups and

110
00:07:54.190 --> 00:07:58.540
all these new somatic markups,
it will, it will result

111
00:07:58.540 --> 00:08:03.940
in a more semantic document.
Even though that, you know,

112
00:08:03.940 --> 00:08:06.100
the recommendations might change a
little bit in the future.

113
00:08:06.760 --> 00:08:08.800
It is still better than
it was before in my

114
00:08:08.800 --> 00:08:12.820
mind. But these, these new
elements in a, in a

115
00:08:12.820 --> 00:08:15.610
browser that doesn't understand them
will just be ignored. Right.

116
00:08:15.610 --> 00:08:19.030
So if I say article
or footer, even I six,

117
00:08:19.030 --> 00:08:20.440
we'll just say, I don't
know what that is and

118
00:08:20.440 --> 00:08:24.820
it'll ignore it. Just like
any stray element, right? Yeah,

119
00:08:24.820 --> 00:08:28.120
exactly. So, so basically what,
what you have to do

120
00:08:28.750 --> 00:08:33.220
for, I use six, seven,
and eight is to include

121
00:08:33.290 --> 00:08:38.050
a little piece of JavaScript
that creates those elements. And

122
00:08:38.560 --> 00:08:40.480
once you do that, they
just become elements like any

123
00:08:40.480 --> 00:08:44.140
other element that you can,
you can use them. So

124
00:08:44.230 --> 00:08:47.650
what most people do is
that they have this conditional.

125
00:08:49.930 --> 00:08:52.420
So I was going to
include, you know, if less

126
00:08:52.420 --> 00:08:56.670
than <inaudible> a thing in
your, then include this script

127
00:08:56.670 --> 00:09:02.420
tech, which then Register, And
then probably you also have

128
00:09:02.420 --> 00:09:07.040
in your CSS, you want
to make sure that they

129
00:09:07.040 --> 00:09:11.180
are perceived as block elements
and that's used for styling.

130
00:09:11.180 --> 00:09:15.980
So the styling is equal
in. Oh, okay. If you

131
00:09:16.100 --> 00:09:18.080
go take a look in
the, in the reset CSS,

132
00:09:18.740 --> 00:09:21.050
you know, the reset CSS
file is done by Yahoo

133
00:09:21.050 --> 00:09:25.190
and, and other entities out
there it's been used for

134
00:09:25.190 --> 00:09:27.950
many years. You'll see them
coming out right now with

135
00:09:29.000 --> 00:09:31.910
support for these new elements.
Let's basically what you want

136
00:09:31.910 --> 00:09:33.560
to do. You, you just
want to lay the ground

137
00:09:33.560 --> 00:09:37.430
for the old process. And
then, So it doesn't necessarily

138
00:09:37.430 --> 00:09:40.880
make the browser HTML five
compliant in all features, but

139
00:09:40.880 --> 00:09:43.910
it'll definitely make it recognize
some of these new elements

140
00:09:44.420 --> 00:09:48.560
as being something that stylish,
right? Yeah. So it looked

141
00:09:48.680 --> 00:09:54.470
exactly the same and I
old versus new with this,

142
00:09:55.580 --> 00:09:57.890
with these JavaScript things. And
it's big, it's a very

143
00:09:57.890 --> 00:10:01.880
small JavaScript. It basically just
says document, create element video.

144
00:10:03.410 --> 00:10:05.420
That's basically all you have
to do. And then the

145
00:10:05.420 --> 00:10:07.370
browser will start recognizing it
as a, as a real

146
00:10:07.370 --> 00:10:11.330
tech is a real element.
I see. I see. So

147
00:10:11.330 --> 00:10:14.060
some of these tags are
semantic and for breaking up

148
00:10:14.060 --> 00:10:17.090
sections like article and header
and footer, and then some

149
00:10:17.090 --> 00:10:19.070
of these are a little
bit more interesting, like, like

150
00:10:19.160 --> 00:10:22.540
progress for like some kind
of a progress bar or

151
00:10:22.550 --> 00:10:26.390
video or canvas. It seems
like a lot of, a

152
00:10:26.390 --> 00:10:28.550
lot of discussion. And a
lot of controversy happens around

153
00:10:28.550 --> 00:10:32.390
some of these, these more
active tags and like video,

154
00:10:32.390 --> 00:10:35.090
for example, I'm hearing lots
of people saying that the

155
00:10:35.090 --> 00:10:39.080
video tag is a good
idea in theory, but underneath

156
00:10:39.080 --> 00:10:42.830
it, you don't really know
if your browser supports particular

157
00:10:42.830 --> 00:10:45.290
codec or will be able
to play a video until

158
00:10:45.290 --> 00:10:46.880
you actually give it a
try and see if it

159
00:10:46.880 --> 00:10:50.600
works. Yeah. Well, and you
can actually enjoy him. You

160
00:10:50.600 --> 00:10:53.330
can ask whether or not
the certain video code, I

161
00:10:53.330 --> 00:10:56.180
guess, support it. So you
don't have to try, but

162
00:10:56.190 --> 00:10:58.460
you can, you can, in
JavaScript, you can ask whether

163
00:10:58.460 --> 00:11:01.550
or not certain formats are
supported before starting playing anything.

164
00:11:03.650 --> 00:11:06.290
When asked with JavaScript, if
they are, if a certain

165
00:11:07.520 --> 00:11:10.670
Kodak is supported, they'll say
probably, or maybe for example,

166
00:11:10.670 --> 00:11:14.450
that, you know, saying that
a dot ABI or dot

167
00:11:14.450 --> 00:11:18.260
MP4 is supported, the prouder
can say, well, maybe, but

168
00:11:18.260 --> 00:11:20.600
I don't necessarily know until
I see what's inside it

169
00:11:20.600 --> 00:11:24.410
because some of these video
files are containers. And you

170
00:11:24.410 --> 00:11:28.070
can't tell just by presenting
the, the extension about whether

171
00:11:28.070 --> 00:11:31.130
or not a file will
be readable. Exactly. So some

172
00:11:31.130 --> 00:11:35.780
of these containers put, contain,
so they have a video

173
00:11:35.780 --> 00:11:39.560
and they have an audio
part and the video could

174
00:11:39.560 --> 00:11:41.240
be in one format and
the audio could be in

175
00:11:41.240 --> 00:11:45.500
another file, But the container
And the file extension of

176
00:11:45.500 --> 00:11:49.420
that file is the same.
So no one listed it,

177
00:11:49.460 --> 00:11:52.190
you know, it looks inside
of it. But HTML five

178
00:11:52.190 --> 00:11:55.000
actually does have a, for
you to specify what's inside

179
00:11:55.900 --> 00:11:57.910
so that you can get
rid of the maybes and

180
00:11:57.910 --> 00:12:00.100
probably in all that and
just get a yes or

181
00:12:00.100 --> 00:12:03.780
no. Okay. So the more,
the more clear you are

182
00:12:03.780 --> 00:12:05.940
and the more you give
it, the, the browser information

183
00:12:05.940 --> 00:12:09.960
about exactly what's going on
inside specifically indicating the Kodak

184
00:12:09.960 --> 00:12:11.640
that you're going to use,
then you'll be able to

185
00:12:11.640 --> 00:12:14.280
get, get real answers as
to whether or not video

186
00:12:14.280 --> 00:12:18.990
is going to work. Okay.
And I noticed also that

187
00:12:18.990 --> 00:12:21.390
the input element has a
whole lot of new stuff.

188
00:12:21.390 --> 00:12:24.270
Cause right now there's basically
input, text and input drop

189
00:12:24.270 --> 00:12:25.920
down and things like that.
But now we're going to

190
00:12:25.920 --> 00:12:30.180
have input element does with
types like email and date

191
00:12:30.180 --> 00:12:34.650
and date, date, time, and
month and week are those

192
00:12:34.650 --> 00:12:37.230
things that I can do
now in visual studio. Like

193
00:12:37.230 --> 00:12:40.050
what if I make an
input box that's of type

194
00:12:40.320 --> 00:12:44.460
email, what will work and
what won't today? Yeah. So

195
00:12:44.460 --> 00:12:47.520
what we've done with, with
the new HTML five schema

196
00:12:47.520 --> 00:12:50.880
support and SP one is
that we've taken the old

197
00:12:50.880 --> 00:12:55.110
elements such as input and
update the value lists. So

198
00:12:55.110 --> 00:12:59.820
you will get full entails
and support for, for email

199
00:12:59.820 --> 00:13:04.140
URL date and all these
other types of all these

200
00:13:04.140 --> 00:13:07.650
other values you can use
in your type field. So

201
00:13:07.650 --> 00:13:11.670
that is fully supported, but
of course, it's, it's then

202
00:13:11.670 --> 00:13:15.570
up to the browsers to
actually support these things. And

203
00:13:15.570 --> 00:13:20.460
as of right now, with
this particular one, it's a

204
00:13:20.460 --> 00:13:24.840
bit limited. It seems that
a lot of these new

205
00:13:25.410 --> 00:13:28.470
mechanisms we see in the,
in the forms, in the

206
00:13:28.470 --> 00:13:31.980
HTML forms, hasn't been as
widely adopted by the browser

207
00:13:31.980 --> 00:13:38.160
vendors yet, but that will
probably come very soon. Hi,

208
00:13:38.160 --> 00:13:40.320
this is Scott coming to
you from another place in

209
00:13:40.320 --> 00:13:43.680
time. Are you using agile
practices to manage your software

210
00:13:43.680 --> 00:13:45.960
development? There's lots of tools
in the market that manage

211
00:13:45.960 --> 00:13:47.880
the steps of a project,
but most of them focus

212
00:13:47.880 --> 00:13:51.240
on individual roles, get ready
for a solution that caters

213
00:13:51.240 --> 00:13:53.760
for the success of the
whole team. Guys at Tellerik

214
00:13:53.790 --> 00:13:57.570
introduced team pulse to an
agile project management tool. That'll

215
00:13:57.570 --> 00:14:00.780
help you gather ideas, estimate
plan, track progress in a

216
00:14:00.780 --> 00:14:04.770
common workspace. Finally, companies, regardless
of their size can use

217
00:14:04.770 --> 00:14:07.080
a lightweight and convenient tool
that makes all the stakeholders

218
00:14:07.080 --> 00:14:10.110
work as a United team.
Even if they're in different

219
00:14:10.110 --> 00:14:13.470
countries by combining intuitive user
interface and the power of

220
00:14:13.470 --> 00:14:16.290
server light team poles removes
the roadblocks that you typically

221
00:14:16.290 --> 00:14:19.410
face and applying agile in
an effective manner, no more

222
00:14:19.410 --> 00:14:23.370
lost data, no disparate systems,
no lack of critical analytics

223
00:14:23.610 --> 00:14:27.120
regarding the health and philosophy
project. So if yourself get

224
00:14:27.120 --> 00:14:29.730
a free copy for five
users on one project at

225
00:14:29.730 --> 00:14:36.630
tellerik.com/team pulse, and please do
thank tolerant for supporting Hansel

226
00:14:36.630 --> 00:14:41.490
minutes on their Facebook fan
page, facebook.com/t L E R

227
00:14:41.490 --> 00:14:45.180
I K Keller. We do
appreciate it. There wouldn't be

228
00:14:45.180 --> 00:14:49.170
a Hansel minutes. If there
wasn't, Tellerik helping us. That

229
00:14:49.170 --> 00:14:51.000
is interesting that there's all
these new things in HTML,

230
00:14:51.440 --> 00:14:53.480
but it doesn't seem like
everyone is supporting all the

231
00:14:53.480 --> 00:14:55.790
different, all the different features.
I mean, a lot of

232
00:14:55.790 --> 00:14:59.420
attention is, is spent talking
about video and I don't

233
00:14:59.420 --> 00:15:02.120
hear a lot about things
like input type equals color.

234
00:15:03.310 --> 00:15:04.790
I don't even think I've
seen them. I mean, I

235
00:15:04.790 --> 00:15:07.160
run all the latest browsers.
I run the latest everything,

236
00:15:07.880 --> 00:15:09.860
and I don't, I don't
bump into those very often

237
00:15:09.860 --> 00:15:12.490
out there in the world.
No, I don't. I don't,

238
00:15:12.670 --> 00:15:14.980
I don't actually think that
there's a single browser supporting

239
00:15:15.040 --> 00:15:20.680
the color value opera has
the most support for these

240
00:15:20.680 --> 00:15:24.910
new types. So if you
choose date, for instance, it

241
00:15:24.910 --> 00:15:28.750
will pop up a date
picker and a calendar. Then

242
00:15:28.750 --> 00:15:31.120
you can customize. So you
can do want it to

243
00:15:31.120 --> 00:15:34.060
show weeks months, should you
navigate, how do you navigate

244
00:15:34.060 --> 00:15:37.120
it? You can style it.
And all these things. So

245
00:15:37.120 --> 00:15:43.450
opera, they have support Foleys,
pretty cool features. And it

246
00:15:43.450 --> 00:15:46.660
seems that the other browsers
are catching up slowly. I

247
00:15:46.660 --> 00:15:49.210
mean, it'll, it'll probably take
some time to get everything

248
00:15:49.360 --> 00:15:54.670
supported. So these are, these
are markup things that are

249
00:15:55.150 --> 00:15:57.490
available to me in HTML
five, but I understand that

250
00:15:57.490 --> 00:16:00.490
there's also some kind of
services, I guess, is the

251
00:16:00.490 --> 00:16:03.100
best way to phrase it.
Things like geolocation and local

252
00:16:03.100 --> 00:16:06.100
storage. I mean, these aren't
parts of markup. He's our,

253
00:16:07.090 --> 00:16:09.550
is your basically JavaScript API
that I can access in

254
00:16:09.550 --> 00:16:14.470
September. Yeah, exactly. Yeah. So,
so, so when, when he's

255
00:16:14.470 --> 00:16:17.410
talking about HTML five, some
people, they tend to see

256
00:16:17.410 --> 00:16:21.850
that the umbrella term also
covering these related technologies such

257
00:16:21.850 --> 00:16:25.210
as the new JavaScript API,
which is, you know, geolocation,

258
00:16:25.240 --> 00:16:30.130
web sockets and so on.
But yeah, they actually allow

259
00:16:30.130 --> 00:16:35.380
you to control a lot
more than before. So they're

260
00:16:35.380 --> 00:16:38.800
good for geolocation, as you
can ask the use of

261
00:16:38.800 --> 00:16:43.540
where are, you know, really
it has really great potential

262
00:16:45.280 --> 00:16:48.160
fulfilling cool apps, but there
are other stuff like web

263
00:16:48.160 --> 00:16:52.060
sockets. Finally, we can get
to the realtime web that

264
00:16:52.060 --> 00:16:54.850
we've always wanted and has
been a real pain before

265
00:16:54.850 --> 00:16:57.850
to do because of the
web is, you know, this,

266
00:16:58.600 --> 00:17:01.600
I request and you respond,
but I have to do

267
00:17:01.600 --> 00:17:05.980
the request first before I
get any answers. So it's

268
00:17:05.980 --> 00:17:08.770
always been a little bit
awkward to have real time,

269
00:17:09.550 --> 00:17:11.890
but now we can with
WebSockets now we're just, we

270
00:17:11.890 --> 00:17:14.110
just need all the browsers
again. And we need all

271
00:17:14.110 --> 00:17:18.460
the underlying service technologies to
pick up this new technology.

272
00:17:20.260 --> 00:17:23.920
It seems like all of
the, all these different HTML

273
00:17:23.920 --> 00:17:30.070
five features have an associated
JavaScript library. Like modernizer is

274
00:17:30.070 --> 00:17:32.290
one of them that I,
that comes to mind. That

275
00:17:32.290 --> 00:17:35.710
is a way of saying
use it if you support

276
00:17:35.710 --> 00:17:39.340
it natively, otherwise, try this
or try this, or try

277
00:17:39.340 --> 00:17:43.900
this before, completely giving up.
For example, with geolocation, it's

278
00:17:43.900 --> 00:17:46.870
a JavaScript thing that all
these browsers just should support

279
00:17:46.870 --> 00:17:50.250
and Firefox supports it in
Chrome. And so I can

280
00:17:50.250 --> 00:17:56.340
say, get current position with
JavaScript on a geolocation object

281
00:17:57.150 --> 00:17:59.220
and then, you know, start
getting information about where I'm

282
00:17:59.220 --> 00:18:01.650
at, whether that be very
vague, like a city or

283
00:18:01.650 --> 00:18:05.430
state, or very specific, like
an exact Latin lawn, but

284
00:18:05.430 --> 00:18:08.400
I can use like modernizer,
which is a little JavaScript

285
00:18:08.400 --> 00:18:16.470
library, browser supports this feature.
Otherwise maybe try a plugin

286
00:18:16.470 --> 00:18:19.800
or something else. Is that
the best practice to be

287
00:18:19.800 --> 00:18:22.860
saying, do I support this
feature as opposed to be

288
00:18:22.860 --> 00:18:26.640
saying, do I support HTML
five? Oh yeah. You always

289
00:18:26.640 --> 00:18:28.380
want to, you always want
to ask for this specific

290
00:18:28.380 --> 00:18:32.040
feature because the browsers are,
you know, their, their, their

291
00:18:32.040 --> 00:18:34.680
progress in supporting all, this
is pretty independent of each

292
00:18:34.680 --> 00:18:37.470
other. So you see somebody
else's have support for one

293
00:18:37.470 --> 00:18:39.690
thing, but not the other
and vice versa with the

294
00:18:39.690 --> 00:18:42.360
other browsers. So always asks
for a specific feature, whether

295
00:18:42.360 --> 00:18:45.750
or not that support it
has that always been the

296
00:18:45.750 --> 00:18:47.950
way to do things the
right way to do things.

297
00:18:48.030 --> 00:18:50.370
But I remember writing a
lot of code in the,

298
00:18:50.390 --> 00:18:52.230
in the late nineties and
the early two thousands that

299
00:18:52.230 --> 00:18:59.010
was saying that was a
bad idea. That was a

300
00:18:59.010 --> 00:19:11.340
real bad idea quicker than
a website might not change

301
00:19:11.340 --> 00:19:17.280
that much. So always ask
for the feature, if the

302
00:19:17.280 --> 00:19:20.580
browser support certain feature, instead
of asking, for instance, the

303
00:19:20.580 --> 00:19:39.150
browser version, whatever API. So
theoretically, and in a, in

304
00:19:39.150 --> 00:19:43.380
an ideal world, all of
this are asking if it's

305
00:19:43.380 --> 00:19:46.350
a specific version of Firefox
should, should go away. It

306
00:19:46.350 --> 00:19:53.250
should not be doing, does
this mean though that I

307
00:19:53.250 --> 00:19:56.820
can use features of HTML
five without necessarily using all

308
00:19:56.820 --> 00:20:00.000
of what I need to
go and start using all

309
00:20:00.000 --> 00:20:03.150
these different elements? If I
just wanted my existing website?

310
00:20:04.350 --> 00:20:10.200
Or can I ask, you
can just ask for that

311
00:20:10.200 --> 00:20:15.530
one feature, one feature that
comes in the geolocation that

312
00:20:15.530 --> 00:20:21.870
comes in HTML five, it
will work even though your

313
00:20:29.040 --> 00:20:37.770
vendors, regardless of what type
of a website you're building.

314
00:20:39.930 --> 00:20:42.660
So you can actually start
using all of these new

315
00:20:42.660 --> 00:20:48.690
API right now without changing
your markup. See that, that,

316
00:20:48.690 --> 00:20:51.700
that definitely changes that that
can confuse things, because I

317
00:20:51.700 --> 00:20:53.950
think so many people out
there are saying, you know,

318
00:20:53.950 --> 00:20:55.990
when can I use HTML
five and should I start

319
00:20:55.990 --> 00:20:58.840
using it today? But, you
know, they might just want

320
00:20:58.840 --> 00:21:00.430
to look in and say,
I just want to use

321
00:21:00.430 --> 00:21:03.220
geolocation. I just want to
use a local storage. They

322
00:21:03.220 --> 00:21:05.260
could start doing this today
in their applications. And they

323
00:21:05.260 --> 00:21:08.830
can, as I said, that
there's JavaScript libraries to kind

324
00:21:08.830 --> 00:21:11.200
of help them through this
with even older browsers. So,

325
00:21:11.560 --> 00:21:14.800
I mean, isn't that confusing?
I mean, so many people

326
00:21:14.800 --> 00:21:17.710
are sitting around waiting for
new browsers and waiting for

327
00:21:18.130 --> 00:21:20.530
things to settle down. They
really could be doing this

328
00:21:20.530 --> 00:21:24.990
today. It's very confusing, but
I think it ties down

329
00:21:24.990 --> 00:21:31.560
to this. It's a duality
of, of HTML five that

330
00:21:31.560 --> 00:21:35.130
it's, it's a markup language,
but then it's, it's an

331
00:21:35.190 --> 00:21:38.640
umbrella term that covers all
this different things. So it's

332
00:21:38.640 --> 00:21:41.180
because it's used in those
two ways that I think

333
00:21:41.320 --> 00:21:46.080
it adds to the, One
of the other things that's

334
00:21:46.080 --> 00:21:50.640
interesting. Five is a specification
that's called web storage or

335
00:21:50.640 --> 00:21:53.970
what sometimes people called HTML
five storage. So this is

336
00:21:53.970 --> 00:21:57.930
basically local story. That's like
not a cookie, right? It's,

337
00:21:57.960 --> 00:22:00.150
it's, it's literally, you have
a little bit of space

338
00:22:00.210 --> 00:22:02.220
on the user's desk that
you can put stuff in

339
00:22:03.630 --> 00:22:06.450
And you can already, you
can already leverage this today.

340
00:22:08.550 --> 00:22:11.220
I think all the way
back to <inaudible> maybe before

341
00:22:11.220 --> 00:22:13.860
that as well, but then
you need one of those

342
00:22:13.860 --> 00:22:17.670
JavaScript libraries you're talking about
that, that wraps, that wraps

343
00:22:17.680 --> 00:22:20.340
all of this functionality, because
you've been able to do

344
00:22:20.340 --> 00:22:25.200
this in various different ways
in the old I E

345
00:22:25.740 --> 00:22:36.990
five and six days, you
could attach it. Okay. Which

346
00:22:36.990 --> 00:22:39.240
is a very different way
of doing it, the HTML

347
00:22:39.240 --> 00:22:43.230
five way, but between the
HTML five and the old

348
00:22:43.260 --> 00:22:46.680
<inaudible> thing, there's been a
lot of different implementations across

349
00:22:46.680 --> 00:22:50.310
the different browsers. So with
the right library out there,

350
00:22:50.310 --> 00:22:53.880
you can actually start using
that already. I assume that

351
00:22:53.880 --> 00:22:55.830
it's not encrypted or anything
like that, but I can

352
00:22:55.830 --> 00:22:58.080
basically, it's basically a hash
table that I can put

353
00:22:58.080 --> 00:23:01.230
stuff in and I can
count on it being, being

354
00:23:01.230 --> 00:23:05.880
there when I get back
now, is this just literally

355
00:23:05.880 --> 00:23:07.980
a hash table that source
itself on disc? Or can

356
00:23:07.980 --> 00:23:09.960
I do, like, is this
a little tiny database? And

357
00:23:09.960 --> 00:23:14.580
I can do some, some,
some SQL on it, There

358
00:23:14.580 --> 00:23:17.610
are different versions. And the,
the one that you can

359
00:23:17.610 --> 00:23:20.850
use right now across the
board is, is the hashtag.

360
00:23:21.540 --> 00:23:24.870
I see. Okay. Yup. And
then we have the index

361
00:23:24.880 --> 00:23:28.320
DB thing. That's, that's, isn't
really supported yet by any,

362
00:23:28.500 --> 00:23:31.530
any browser it's being slowly
adopted though. So, so it

363
00:23:31.530 --> 00:23:35.070
will be in, and you
can do some more funky

364
00:23:35.070 --> 00:23:41.010
stuff using that. Right. Right.
I know that Firefox 90,

365
00:23:41.010 --> 00:23:45.620
you don't quite have support
for that yet. Yeah. Interesting.

366
00:23:45.620 --> 00:23:47.390
Interesting. I remember that there
were a lot of hacks

367
00:23:47.390 --> 00:23:50.150
back in the day before
HTML five, there were a

368
00:23:50.150 --> 00:23:53.360
lot of local storage hacks.
People shoving things in cookies

369
00:23:53.360 --> 00:23:56.960
and hiding things in the
browser history and, you know,

370
00:23:56.990 --> 00:23:59.060
and anything that they could
do to store, to store

371
00:23:59.060 --> 00:24:02.030
state, probably not a place
for a bank to store

372
00:24:02.030 --> 00:24:06.560
information about your, your accounts,
but definitely a better place

373
00:24:06.560 --> 00:24:10.550
to store information is the
user's machine than in a

374
00:24:10.550 --> 00:24:13.100
database on the server side.
If it's not private private

375
00:24:13.100 --> 00:24:17.230
data. Exactly. It, it opens
up a lot of possibilities

376
00:24:17.230 --> 00:24:22.720
for offline web. Yeah. Actually,
and that's interesting question. I

377
00:24:22.750 --> 00:24:25.660
know that I run, I
run Chrome sometimes and I

378
00:24:25.660 --> 00:24:30.760
use offline, offline email. Where
is it getting its HTML

379
00:24:30.760 --> 00:24:32.500
from? I mean, is it
pulling out of the cash?

380
00:24:32.510 --> 00:24:34.060
I mean, how can I
visit a page when I

381
00:24:34.060 --> 00:24:35.440
don't even, I was on
an airplane and I was

382
00:24:35.440 --> 00:24:38.140
checking my email, how do
I, how am I doing

383
00:24:38.140 --> 00:24:41.230
that? I think your Chrome
is using, that's using Google

384
00:24:41.230 --> 00:24:45.700
gears, right. Is that where
the HTML is coming from?

385
00:24:45.700 --> 00:24:47.590
And an offline thing? I
mean, is the idea of

386
00:24:47.590 --> 00:24:50.170
an offline app and HTML
five thing, or is that

387
00:24:50.530 --> 00:24:52.780
is the concept of an
offline application is something that

388
00:24:52.780 --> 00:24:56.470
people have kind of devised
or derived from all of

389
00:24:56.470 --> 00:25:02.770
these other, these other new
specifications and features. I'm actually

390
00:25:02.770 --> 00:25:07.600
not quite sure where, where
it originated Google gears, I

391
00:25:07.600 --> 00:25:10.990
think was the first full
fledged solution for this problem,

392
00:25:11.920 --> 00:25:17.950
but it was limited. And
now Google gears is it's

393
00:25:17.950 --> 00:25:21.190
going away and it's that
HTML five is taken over.

394
00:25:21.250 --> 00:25:24.580
I mean, that's what Google
says. So they're gonna remove

395
00:25:24.580 --> 00:25:27.190
their old implementation for the
new one. So I just

396
00:25:27.190 --> 00:25:29.650
think it's one of those
things that start out as

397
00:25:29.650 --> 00:25:34.000
a proprietary thing and slowly
gained, gained ground and, and

398
00:25:34.270 --> 00:25:37.240
then made it into the
standard space specifications, like most

399
00:25:37.240 --> 00:25:40.780
other things, Right. It's interesting.
If you, if you look

400
00:25:40.780 --> 00:25:43.450
at the history of this,
almost all of these features

401
00:25:43.450 --> 00:25:47.860
were available via plugins or
via hacks or via JavaScript

402
00:25:47.860 --> 00:25:50.950
libraries. And then it slowly
becomes something that is built

403
00:25:50.950 --> 00:25:53.830
in, which is kind of
cool. Yeah. I don't usually

404
00:25:53.830 --> 00:25:56.230
think of the standards bodies
as paying attention, but somehow

405
00:25:56.260 --> 00:25:59.320
they did it in this
instance. Yeah. Well, in this

406
00:25:59.320 --> 00:26:04.000
instance, the browser vendors kind
of took over and drove

407
00:26:04.000 --> 00:26:08.410
the whole creation of the
HTML five SMAs patients. So

408
00:26:08.500 --> 00:26:13.060
I guess that's why it
happens so fast. Usually it

409
00:26:13.060 --> 00:26:16.120
takes a long time. There's
a long stabilization period for

410
00:26:16.120 --> 00:26:19.720
any standard before it gets
widely adoption here. It seems

411
00:26:19.720 --> 00:26:22.300
that all the browsers are
jumping on the bandwagon and

412
00:26:22.300 --> 00:26:26.110
want to support HTML five.
Whereas there have been literally

413
00:26:26.110 --> 00:26:30.340
no stabilization period of the
specification yet. Yeah. Yeah. That's

414
00:26:30.340 --> 00:26:33.400
true. Is it? It's not
done yet? Is it? No,

415
00:26:33.400 --> 00:26:36.160
no, no, no. It's, it's
done in 2022. I think

416
00:26:37.000 --> 00:26:42.580
that's the, if it's the
official, I don't know where

417
00:26:42.580 --> 00:26:45.780
I have stayed from. You
could find it out there.

418
00:26:46.190 --> 00:26:48.380
So, so the idea of
waiting is, is a silly

419
00:26:48.380 --> 00:26:50.240
one. We really should just
start doing this now. I

420
00:26:50.240 --> 00:26:52.580
mean, there's no reason to
wait for anything with HTML

421
00:26:52.580 --> 00:26:57.560
five, right? No. Yeah. Just
start using it. Interesting. I'm

422
00:26:57.560 --> 00:26:59.630
looking online here and apparently
the way that you do

423
00:26:59.630 --> 00:27:02.570
offline applications is you have
a manifest file. So you

424
00:27:02.570 --> 00:27:05.090
say on your route, you
see HTML and you say,

425
00:27:05.090 --> 00:27:07.340
here's my manifest, which is
a list of all of

426
00:27:07.340 --> 00:27:11.210
the things that your website
is going to need offline.

427
00:27:11.210 --> 00:27:15.410
So it's basically a, a
cash manifest that says if,

428
00:27:15.410 --> 00:27:18.350
if I'm offline, go and
use this, and if I'm

429
00:27:18.350 --> 00:27:20.720
offline, I'm going to need
this CSS and these images

430
00:27:20.720 --> 00:27:24.250
and all this stuff. So
it's, it's seems very straightforward.

431
00:27:24.270 --> 00:27:27.290
Just a matter of sitting
down and doing it. Yeah.

432
00:27:27.410 --> 00:27:29.480
It seems very easy. It's
it's like almost building an

433
00:27:29.480 --> 00:27:34.970
application, but without, without an
installer. Yeah, really. I guess

434
00:27:34.970 --> 00:27:36.380
it is. I mean, once
you have a link on

435
00:27:36.380 --> 00:27:38.480
your desktop, people are no
longer going to be able

436
00:27:38.480 --> 00:27:41.780
to tell whether or not
something is an app that

437
00:27:41.780 --> 00:27:43.550
they install or an app
that they run on their

438
00:27:43.550 --> 00:27:45.320
browser. I mean, I know
that my wife has kind

439
00:27:45.320 --> 00:27:48.860
of stopped making the distinction,
but things like Gmail or

440
00:27:48.860 --> 00:27:52.130
mint.com, she doesn't think of
them as a place anymore.

441
00:27:52.130 --> 00:27:55.400
She does think of them
as applications. Yeah. And it

442
00:27:55.400 --> 00:27:59.950
isn't, the condition was a
web application. I use, if

443
00:27:59.950 --> 00:28:03.950
you ever used the jump
lists and the, the new

444
00:28:03.950 --> 00:28:05.810
feature where you can drag
your tap down to your

445
00:28:05.810 --> 00:28:09.650
task bar in windows seven
with <inaudible>. Yeah. Yeah. I

446
00:28:09.650 --> 00:28:12.920
actually, I used that on
with Facebook. That's the one

447
00:28:12.920 --> 00:28:15.020
I always use the most.
I've drugged Facebook down into

448
00:28:15.020 --> 00:28:17.090
the task bar. So I
have a little Facebook icon.

449
00:28:17.090 --> 00:28:18.650
I right. Click on it
and then I'll click on

450
00:28:18.650 --> 00:28:21.740
news and it'll take me
right to that location. So

451
00:28:21.740 --> 00:28:26.840
it's almost like tiny bookmarks
within a, within an existing

452
00:28:27.980 --> 00:28:30.770
icon, but it also has
a little, I like, I

453
00:28:30.770 --> 00:28:32.180
just clicked on it right
now and it says I

454
00:28:32.180 --> 00:28:36.290
have to mail messages. So
there's a little overlay over

455
00:28:36.800 --> 00:28:41.540
the, in mind. Yeah. And
you can do, you can

456
00:28:41.540 --> 00:28:44.780
do this before. I, I
nine and windows seven, there

457
00:28:44.780 --> 00:28:48.350
was the, the prism initiative
from Mozilla that enabled that

458
00:28:48.350 --> 00:28:53.210
for Firefox. So, so you've
been doing this for a

459
00:28:53.210 --> 00:28:55.490
long time and this probably
makes it into the standards

460
00:28:55.490 --> 00:28:58.700
someday as well. But it
does emphasize that a lot

461
00:28:58.700 --> 00:29:01.790
of what we consider to
be websites, actually our applications.

462
00:29:02.000 --> 00:29:05.570
And we can now start
using them as such Really.

463
00:29:05.580 --> 00:29:09.320
There's a thing that turns
us on for Firefox. No,

464
00:29:09.320 --> 00:29:12.230
not in the windows seven
task bar, but there's, if

465
00:29:12.230 --> 00:29:16.040
you, if you go search
for prism Oh, right. Yeah.

466
00:29:16.040 --> 00:29:19.670
Those are called single-site browsers
or SSPs. These are, this

467
00:29:19.670 --> 00:29:22.040
is a way of formally
saying this is an applicant.

468
00:29:22.040 --> 00:29:24.140
This isn't a web application.
And then you remove things

469
00:29:24.140 --> 00:29:26.480
like toolbars. And then it
really looks like an app

470
00:29:26.570 --> 00:29:33.590
as opposed to a bookmark.
Definitely. Now, can I write

471
00:29:33.590 --> 00:29:35.990
these things now with asp.net?
I know that I was

472
00:29:35.990 --> 00:29:38.450
at web camps recently, and
that question keeps coming up

473
00:29:38.450 --> 00:29:41.500
and I've been telling people
that, you know, if you

474
00:29:41.500 --> 00:29:45.160
want to use web Forms
or asp.net MVC, you could

475
00:29:45.160 --> 00:29:49.900
definitely start writing HTML five.
Now, you know, there might

476
00:29:49.900 --> 00:29:52.360
be a few quirks, but
for the most part, there's

477
00:29:52.360 --> 00:30:11.710
no reason to wait. What,
what is your matrix in

478
00:30:11.710 --> 00:30:37.720
the sense that it doesn't
break down? So this is,

479
00:30:40.300 --> 00:30:42.280
I can do this before
I get the service pack

480
00:30:42.280 --> 00:30:43.660
one, or do I want
to upgrade? Do I want

481
00:30:43.660 --> 00:30:53.590
to get the beta beta?
So the beta will make

482
00:30:53.590 --> 00:30:56.260
it a lot easier for
me to do this. And

483
00:30:56.310 --> 00:30:59.620
I presume that the beta
isn't the, isn't the end,

484
00:30:59.620 --> 00:31:03.940
all of HTML five that
we're going to keep doing

485
00:31:04.540 --> 00:31:07.240
and keep, keep improving. So
I assume that we'll keep

486
00:31:07.240 --> 00:31:11.650
seeing more HTML, five support
going forward in Microsoft products.

487
00:31:13.750 --> 00:31:19.960
The service pack one comes
out in the spring. That's

488
00:31:19.960 --> 00:31:22.720
not the end of it.
We're going to keep creating

489
00:31:22.720 --> 00:31:27.640
more HTML, five things. That's
cool. Well, thank you very

490
00:31:27.640 --> 00:31:30.490
much for clearing it up
a little bit. I really

491
00:31:30.490 --> 00:31:38.050
appreciate that. Alright, well, folks
can go take a look@diveintohtmlfive.org,

492
00:31:38.050 --> 00:31:39.820
as well as a bunch
of other great HTML, five

493
00:31:39.820 --> 00:31:41.680
websites that I'm going to
put in the show notes.

494
00:31:42.970 --> 00:31:45.460
This has been another episode
of Hansel minutes. We'll see

495
00:31:45.460 --> 00:31:46.420
you again next week.

