WEBVTT FILE

1
00:00:12.120 --> 00:00:16.890
From hanselman.com. It's Hanselman. It's
our weekly discussion with web

2
00:00:16.890 --> 00:00:20.880
developer and technologists. Scott Hanselman
hosted by Carl Franklin. This is

3
00:00:20.880 --> 00:00:25.620
Lawrence Ryan announcing show number 21
recorded June 11th through the 16th,

4
00:00:25.650 --> 00:00:29.400
2006. Support for Hanselman it's
just provided by COVID Smith

5
00:00:29.430 --> 00:00:33.480
tools, makers of code Smith,
an extensible template based code

6
00:00:33.480 --> 00:00:37.620
generator for.net. I now have
some minutes, listeners get $100

7
00:00:37.620 --> 00:00:40.860
off code Smith professional with
coupon code H M 100.

8
00:00:41.070 --> 00:00:47.190
online@covidsmithtools.com. Support is also provided
by exceeds zip for.net, which

9
00:00:47.190 --> 00:00:51.000
lets you handle zip tar
and jesus' files on FTP

10
00:00:51.000 --> 00:00:55.110
servers in streams in memory
and more. Now get 20%

11
00:00:55.110 --> 00:00:57.360
off any exceed component or
suite just for listening to

12
00:00:57.360 --> 00:01:01.710
Hansel minutes, go to shrinks.com/f
P T and use the

13
00:01:01.710 --> 00:01:06.060
code H M dash 20
dash 20. And don't forget

14
00:01:06.060 --> 00:01:09.480
to visit Peter bloom.com. Start
with better controls. Finish it

15
00:01:09.480 --> 00:01:18.330
better sites online@peterblum.com and.net developers
journal the world's leading.net developer

16
00:01:18.330 --> 00:01:23.940
magazine online at www dot
<inaudible> dot com. In this

17
00:01:23.940 --> 00:01:27.180
episode, Scott is recorded, live
from the tech, get 2006

18
00:01:27.180 --> 00:01:33.210
conference in Boston. So we're
sitting here with John Lamb hanging

19
00:01:33.210 --> 00:01:36.000
out at tech ed we're
over here at the architecture.

20
00:01:36.720 --> 00:01:39.480
What do they call these
things? Now? TLCs is the

21
00:01:39.480 --> 00:01:42.930
techno technical learning center. How's
it going? John Lamb. I'm doing

22
00:01:42.930 --> 00:01:45.300
great Scott. And what are
you working on that you

23
00:01:45.300 --> 00:01:48.300
shouldn't be? Oh my God.
I'm trying to fix DAS

24
00:01:48.300 --> 00:01:51.600
blog right now. So that
the, the new intelligence part

25
00:01:51.600 --> 00:01:53.460
of DAS blog that begins
with a lower case where

26
00:01:53.460 --> 00:01:57.210
it's not supposed to, Oh,
you bastard. Well, you know

27
00:01:57.240 --> 00:01:59.730
what can I say? Right.
But yeah, I'm here to

28
00:01:59.730 --> 00:02:02.340
talk about Ruby CLR at
tech ed. This is my,

29
00:02:02.490 --> 00:02:06.330
this is my thing. So
at five o'clock today, it's

30
00:02:06.330 --> 00:02:08.070
about two o'clock right now.
So three hours to go.

31
00:02:08.940 --> 00:02:11.940
I'm going to go onstage
to talk about Ruby CLR

32
00:02:11.940 --> 00:02:14.400
right after Mahesh talks about
R and Python. So I'll

33
00:02:14.400 --> 00:02:16.560
get a chance to make
fun of his language and,

34
00:02:16.770 --> 00:02:19.230
and all that good stuff.
Now, Ruby CLR, that sounds

35
00:02:19.230 --> 00:02:22.380
like the destabilizing technology that
seems like that's something that's

36
00:02:22.380 --> 00:02:25.080
kind of dangerous. Take something
controversial and wonderful, like Ruby

37
00:02:25.080 --> 00:02:28.350
and something powerful and a
behemoth like CLR and you

38
00:02:28.350 --> 00:02:30.150
put them together and you
say Ruby CLR. You're saying

39
00:02:30.150 --> 00:02:33.240
it very, very casually. Like
there's really no, no problem

40
00:02:33.240 --> 00:02:34.740
there. Well, it was really
like, it was meant to

41
00:02:34.740 --> 00:02:38.370
be together. Right. You know,
and you'll see that. I

42
00:02:38.370 --> 00:02:40.800
guess a lot of the
Ruby guys are certainly open

43
00:02:40.800 --> 00:02:43.290
source with a capital O
capital S kind of guys.

44
00:02:43.770 --> 00:02:48.030
And you know, I'm actually
rather surprised at the kind

45
00:02:48.030 --> 00:02:50.430
of reception of those guys
have given Ruby CLR. They're

46
00:02:50.430 --> 00:02:54.060
actually really happy that that's
happening both on the Microsoft

47
00:02:54.060 --> 00:02:56.580
side and the J Ruby
side too, to build Ruby

48
00:02:56.580 --> 00:02:59.170
into the JVM, right? Both
giant corporate behemoths that are

49
00:02:59.320 --> 00:03:02.820
relatively anti open source. Now,
why is it that someone

50
00:03:02.820 --> 00:03:04.890
clever, like you has to
go and do this as

51
00:03:04.890 --> 00:03:07.410
opposed to a behemoth, having
the idea and pulling it

52
00:03:07.410 --> 00:03:10.800
off themselves. Cause a giant
behemoths is actually really hard

53
00:03:10.800 --> 00:03:13.590
to get anything done. So,
you know, Microsoft's a big

54
00:03:13.590 --> 00:03:16.380
company and their resource constraint
just like everybody else. And,

55
00:03:16.770 --> 00:03:19.470
and I'm a guy that
has a way of funding,

56
00:03:19.470 --> 00:03:22.080
the development of this stuff
myself. So I'm just going

57
00:03:22.080 --> 00:03:24.450
out doing it. I'm giving
it back out to the

58
00:03:24.450 --> 00:03:26.910
community and seeing what else.
So, so how are you

59
00:03:26.910 --> 00:03:28.260
funding this? I mean, I
know when I work on

60
00:03:28.260 --> 00:03:30.900
DAS blog that doesn't exactly
get monetized. I think we've

61
00:03:30.900 --> 00:03:33.240
had all of like $50
in donations. How are you

62
00:03:33.240 --> 00:03:36.150
monetizing Ruby CLR? Well, I
get to monetize it cause

63
00:03:36.150 --> 00:03:38.700
I'm a partner already a
consulting firm called object sharp

64
00:03:38.700 --> 00:03:41.490
up in Toronto. And so
it's really because we have

65
00:03:41.490 --> 00:03:43.710
all sorts of other guys
that do real billable work

66
00:03:44.310 --> 00:03:46.680
that we can fund my
little science experiments, Time to

67
00:03:46.680 --> 00:03:49.530
time. But you do anticipate
actually making money off this.

68
00:03:49.530 --> 00:03:51.570
You're going to use this
in real projects. Yeah, absolutely.

69
00:03:51.570 --> 00:03:55.200
Right. Like, like right now
it's all about trying to

70
00:03:55.200 --> 00:03:57.930
build the thing to create
a market, to sell Ruby

71
00:03:57.930 --> 00:04:01.050
services into the.net world. Right?
Because really, if you think

72
00:04:01.050 --> 00:04:04.350
about it, most business applications
are really kind of scripting

73
00:04:04.350 --> 00:04:08.490
together a whole bunch of
database components and gooey components

74
00:04:08.490 --> 00:04:10.530
and those kinds of things.
So we're just gluing together

75
00:04:10.530 --> 00:04:12.120
a whole bunch of stuff.
Why don't we use the

76
00:04:12.120 --> 00:04:14.430
most powerful, flexible language that
we can to glue all

77
00:04:14.430 --> 00:04:18.810
that stuff together. So you've
already written Avalon WinForms applications,

78
00:04:19.170 --> 00:04:21.270
particularly the one that demos
the best when I demo

79
00:04:21.270 --> 00:04:23.700
your stuff as the RSS
reader, if someone were going

80
00:04:23.700 --> 00:04:25.590
to actually deploy this on
a system, let's assume a

81
00:04:25.590 --> 00:04:28.380
machine already has a.net framework,
is your system dot and

82
00:04:28.380 --> 00:04:32.910
framework specific. And how would
they deploy that? Yeah, they'll

83
00:04:32.910 --> 00:04:36.690
need done framer 2.0 because
Ruby CLR leverages specific features

84
00:04:36.690 --> 00:04:41.160
that only exist in, in
Donna 2.0 and you'll have

85
00:04:41.160 --> 00:04:44.250
to install Ruby itself on
your box. And the nice

86
00:04:44.250 --> 00:04:46.110
thing is, is that there's
a whole bunch of, you

87
00:04:46.110 --> 00:04:50.010
know, instant Ruby types of
installs that are out there.

88
00:04:50.010 --> 00:04:53.400
And the one in particular
is called the one-click RubyInstaller.

89
00:04:53.640 --> 00:04:55.740
So it's an MSI. You
go download this thing and

90
00:04:55.740 --> 00:04:57.240
it installs all the stuff
you need to run Ruby.

91
00:04:57.900 --> 00:05:00.840
And then you go grab
Ruby CLR. And all you

92
00:05:00.840 --> 00:05:06.000
need to do is go
to Ruby forge.org/project/ruby CLR. And

93
00:05:06.210 --> 00:05:08.310
that's where that thing lives.
You can go download the

94
00:05:08.310 --> 00:05:12.700
bits it's distributed in a
compiled DLL cause part of

95
00:05:12.700 --> 00:05:15.390
Ruby CLR is written in
C plus plus. So the

96
00:05:15.390 --> 00:05:17.550
DLL is already pre compiled
for you and a whole

97
00:05:17.550 --> 00:05:19.620
bunch of source code because
most of the interesting parts

98
00:05:19.620 --> 00:05:22.050
of Ruby CLR actually written
in Ruby. So could I

99
00:05:22.050 --> 00:05:24.820
actually do this in a
no touch deploy? Kind of

100
00:05:24.820 --> 00:05:26.970
I just ex copy, like
not actually install Ruby, but

101
00:05:26.970 --> 00:05:29.460
just to have my app
plus Ruby plus should be

102
00:05:29.460 --> 00:05:31.980
CLR all in one folder
and just drop it on

103
00:05:31.980 --> 00:05:34.830
the side. Yeah, absolutely. That's
that's definitely a goal. So

104
00:05:35.010 --> 00:05:36.990
the, the key prerequisite is
to have Ruby on your

105
00:05:36.990 --> 00:05:39.300
system already. The MSI does
enough of the tricky stuff

106
00:05:39.300 --> 00:05:42.780
to, to make sure it
just works. I already have

107
00:05:42.780 --> 00:05:45.060
a guy that's contributed a
patch to Ruby CLR where

108
00:05:45.060 --> 00:05:46.410
it's going to be a
gym and a gym is

109
00:05:46.410 --> 00:05:50.160
a really nice way of,
you know, just typing jam

110
00:05:50.160 --> 00:05:53.250
space, install space, Ruby CLR.
That's what the install experience

111
00:05:53.250 --> 00:05:55.800
is going to be in
Ruby CLR in the next

112
00:05:55.800 --> 00:05:58.160
release. Wow. So that means
that if I were writing

113
00:05:58.160 --> 00:06:00.560
The application, I could write
a little installer. It would

114
00:06:00.560 --> 00:06:03.290
just shell out, call Jim
install, Ruby CLR, and just

115
00:06:03.290 --> 00:06:05.390
keep copying my application and
could have an icon and

116
00:06:05.390 --> 00:06:07.400
sit in the start menu.
And no one would have

117
00:06:07.400 --> 00:06:10.520
to know it was running
in Ruby. Exactly. Yes. Yes.

118
00:06:11.090 --> 00:06:14.660
That's fantastic. So that talk
is tonight at five o'clock

119
00:06:15.050 --> 00:06:17.270
five. O'clock not sure if
we'll get the podcast up

120
00:06:17.270 --> 00:06:19.400
by then, but if you,
if you do see it,

121
00:06:19.850 --> 00:06:22.250
if you get the podcast,
go see John's talk and

122
00:06:22.250 --> 00:06:23.570
we're gonna be doing a
birds of a feather on

123
00:06:23.570 --> 00:06:29.080
Ruby on it's tomorrow, Nine
o'clock, somewhere in ticket. Cool,

124
00:06:29.110 --> 00:06:39.040
fantastic. Thanks a lot, John.
This portion of Hanselman, this

125
00:06:39.040 --> 00:06:41.410
is brought to you by
COVID Smith tools. The most

126
00:06:41.410 --> 00:06:45.220
powerful cogeneration tool on the
market with features such as

127
00:06:45.230 --> 00:06:50.530
template based cogeneration, a rich
integrated template development environment, including

128
00:06:50.530 --> 00:06:55.420
statement completion and a highly
extensible metadata system. That includes

129
00:06:55.420 --> 00:06:59.560
database, schema, XML, and many
other sources, and now handsome

130
00:06:59.560 --> 00:07:01.570
and its listeners can get
a hundred dollars off code

131
00:07:01.580 --> 00:07:05.800
Smith professional with coupon code
H M 100 and just

132
00:07:05.800 --> 00:07:11.200
go online to www.covidsmithtools.com. And
now let's get back to

133
00:07:11.200 --> 00:07:16.450
Hansel minutes. Hey, we're hanging
out on the tech ed

134
00:07:16.450 --> 00:07:19.150
floor and I've just bumped
into my arch nemesis, Jeff

135
00:07:19.150 --> 00:07:21.970
Atwood. I'm here with my
buddy Patrick Callwell Jeff Howard. How

136
00:07:21.970 --> 00:07:24.490
are you sir? Doing great.
And joining tech ed is

137
00:07:24.490 --> 00:07:26.890
my first tech ed. So
I'm a Virgin at tech

138
00:07:26.890 --> 00:07:29.590
ed. First we say Virgin
on a podcast and we

139
00:07:29.590 --> 00:07:31.630
love to do that. This
is your first tech ed.

140
00:07:31.630 --> 00:07:32.950
What have you been doing
for the last 15 years?

141
00:07:32.950 --> 00:07:35.560
Not going to tech ed.
Well, when you don't work

142
00:07:35.560 --> 00:07:37.540
for a company that values
developers, then you don't get

143
00:07:37.540 --> 00:07:39.160
to go to things like
this. So now I work

144
00:07:39.160 --> 00:07:41.710
for a company that actually
values developers. Wow. I would

145
00:07:41.710 --> 00:07:43.690
really like to know what
company you worked for before

146
00:07:43.870 --> 00:07:46.660
that didn't value of a
devalue. I currently work for

147
00:07:46.670 --> 00:07:50.530
vertigo software and point Richmond
in the San Francisco Bay

148
00:07:50.530 --> 00:07:53.260
area. And it's a good,
it's great. I'm a technical

149
00:07:53.260 --> 00:07:56.170
evangelist there, technically when nobody
knows what that means. It's

150
00:07:56.170 --> 00:07:57.550
great because nobody knows what
I do so I can

151
00:07:57.550 --> 00:07:59.650
just do whatever I want.
Now, Does that involve writing

152
00:07:59.650 --> 00:08:02.170
code or is it just
being Sometimes right now I'm

153
00:08:02.170 --> 00:08:04.420
focusing on team system. We're
trying to get team system

154
00:08:04.420 --> 00:08:06.520
engagements based on our adoption
of team system and sort

155
00:08:06.520 --> 00:08:08.080
of get people to use
it, although it costs, you

156
00:08:08.080 --> 00:08:10.990
know, a bajillion dollars. So
it's people that it's worth

157
00:08:10.990 --> 00:08:14.050
it. So it costs a
million dollars and, and you're,

158
00:08:14.110 --> 00:08:16.870
you're advocating that it's awesome.
Some companies have a jillion

159
00:08:16.870 --> 00:08:19.720
dollars. See, that's the thing.
So, you know, some people

160
00:08:19.720 --> 00:08:21.850
don't, some people do. It's
a great tool. It's a

161
00:08:21.850 --> 00:08:23.650
great tool. I mean, what
they're doing totally makes sense.

162
00:08:23.650 --> 00:08:26.490
It sort of moves you
up the evolutionary ladder of,

163
00:08:26.490 --> 00:08:28.510
of developers, right? If you,
I mean, cause a lot

164
00:08:28.510 --> 00:08:31.210
of developers, particularly in it
shops don't really do a

165
00:08:31.210 --> 00:08:33.340
unit testing even, right? So
this is a new thing

166
00:08:33.340 --> 00:08:36.280
to them. So exposing them
to unit testing, code coverage,

167
00:08:36.280 --> 00:08:38.860
really basic stuff, you know,
to more advanced developers. It's

168
00:08:38.860 --> 00:08:41.050
still moving them up the
evolutionary ladder. So I view

169
00:08:41.050 --> 00:08:42.250
it as very good thing.
So I'm just in there

170
00:08:42.250 --> 00:08:44.470
evangelizing what, you know, a
lot of advanced developers that

171
00:08:44.470 --> 00:08:46.540
read blogs sort of already
know, but not everybody knows

172
00:08:46.540 --> 00:08:49.750
that stuff. Okay. So point
counter point, my buddy Patrick Caldwell

173
00:08:49.750 --> 00:08:50.980
is here with me. We're
gonna be doing a talk

174
00:08:50.980 --> 00:08:55.060
at four 30. We're a
subversion and unit net shop.

175
00:08:55.920 --> 00:08:59.370
And so you take team
system and he'll take all

176
00:08:59.370 --> 00:09:01.740
the free software. And so
tell me why I should

177
00:09:01.740 --> 00:09:03.530
use teams system. Yeah. First
you should throw all that

178
00:09:03.740 --> 00:09:06.260
crap out. That's all crap.
No, no, I'm kidding. Actually,

179
00:09:06.260 --> 00:09:07.700
one of the first things
we say to people, you

180
00:09:07.700 --> 00:09:09.350
know, and then actually I
asked these questions. If you're

181
00:09:09.350 --> 00:09:12.560
a hardcore subversion in unit
shop, you're probably not going

182
00:09:12.560 --> 00:09:14.150
to want to change because
you have a certain way

183
00:09:14.150 --> 00:09:16.850
that you're used to working
and you know, teams system

184
00:09:16.850 --> 00:09:18.830
follows some of the conventions,
but not all of them.

185
00:09:19.220 --> 00:09:21.590
So I wouldn't recommend if
you have a process, stick

186
00:09:21.590 --> 00:09:23.540
with the process. If you
have something that's working, like

187
00:09:23.540 --> 00:09:25.310
I said, this is for
developers that it shops who

188
00:09:25.310 --> 00:09:28.130
really haven't reached that evolutionary
plateau yet where they're doing

189
00:09:28.130 --> 00:09:30.530
the stuff. That's what this
product is for. This really

190
00:09:30.530 --> 00:09:33.140
isn't for guys like you,
I mean, you should probably

191
00:09:33.140 --> 00:09:35.270
be familiar with it in,
in, in sort of how

192
00:09:35.270 --> 00:09:38.240
it inter-operates and stuff, but
it's really not for you,

193
00:09:38.780 --> 00:09:41.960
nothing personal, but I wouldn't
actually advocate that you switch.

194
00:09:41.960 --> 00:09:44.060
If you have process that
you like. So that reminds

195
00:09:44.060 --> 00:09:46.100
me of the time when,
when Microsoft bought one tree

196
00:09:46.100 --> 00:09:48.800
software and we all started
using visual source safe because

197
00:09:48.800 --> 00:09:52.160
it was free. So Microsoft
introduced choice control. You were

198
00:09:52.160 --> 00:09:55.100
probably around that during that
time, right? Patrick, did you

199
00:09:55.100 --> 00:09:56.960
use SourceSafe because that's what
was free and what came

200
00:09:56.960 --> 00:09:58.910
out? No, I was actually
at Intel at the time

201
00:09:58.910 --> 00:10:02.300
and were using PVCs on
the command line. Wow. And

202
00:10:02.300 --> 00:10:07.550
never getting corrupted databases. Did
you feel like you missed

203
00:10:07.550 --> 00:10:11.060
out by not experiencing the
corruption? The pain? No. I've

204
00:10:11.060 --> 00:10:15.020
experienced that since then. Right?
I've used VSS on subsequently,

205
00:10:15.020 --> 00:10:16.940
but not when they first
bought one tree, I, we

206
00:10:16.940 --> 00:10:19.190
didn't use it. I'm I'm
enjoying the fact that it's

207
00:10:19.190 --> 00:10:21.170
a version. You can actually
find where the files are

208
00:10:21.170 --> 00:10:24.350
and potentially fix them. Cause
they're just textiles. Patrick, let

209
00:10:24.350 --> 00:10:25.880
me tell you a great
art comes from great pain.

210
00:10:26.510 --> 00:10:29.020
You see? So you have
to experience the pain to,

211
00:10:29.020 --> 00:10:31.430
to build the really beautiful
things. You'll see this in

212
00:10:31.430 --> 00:10:34.280
art and music a lot,
but, but yeah, no, no.

213
00:10:34.320 --> 00:10:37.880
In all seriousness, you know,
it's just, it is analogous

214
00:10:37.880 --> 00:10:39.280
to source safe in that
it sort of moves you

215
00:10:39.290 --> 00:10:41.000
in. So let's say it
didn't always suck. People forget,

216
00:10:41.000 --> 00:10:43.490
like when it first was
purchased, it was sort of

217
00:10:43.580 --> 00:10:46.190
a relatively cutting edge source
control system problems. They sorta

218
00:10:46.190 --> 00:10:48.530
just never developed it again.
It was like, there was

219
00:10:48.530 --> 00:10:51.320
one version and then bug
fixes for like eight years,

220
00:10:51.380 --> 00:10:54.200
nine years, however long it
was a long time. So

221
00:10:54.290 --> 00:10:56.240
you know, it really, isn't
just that it's a baseline

222
00:10:56.240 --> 00:10:58.820
level of quality. If you
can afford it, that sort

223
00:10:58.820 --> 00:11:00.830
of gets you thinking about
these processes. If one thing

224
00:11:00.830 --> 00:11:02.600
you capture data, like how
many bugs did we have?

225
00:11:02.900 --> 00:11:04.190
How many bugs do we
fix last week? How many

226
00:11:04.190 --> 00:11:07.430
shops can't even answer that
question a lot? So let

227
00:11:07.430 --> 00:11:10.100
me ask you, this is
the jump from either nothing

228
00:11:10.100 --> 00:11:12.950
or from well, virtually nothing
of safe is a jump

229
00:11:12.950 --> 00:11:16.580
from shore safe to TFS,
a jump that has to

230
00:11:16.580 --> 00:11:19.910
include bug fixing and, and
task management and all that

231
00:11:19.910 --> 00:11:21.590
kind of stuff. Or what
if I just want a

232
00:11:21.590 --> 00:11:25.340
source control system from Microsoft
and that's it. You have

233
00:11:25.340 --> 00:11:26.870
to want the source control
part because that's where the

234
00:11:26.870 --> 00:11:28.700
heart of the system. So
if you do want source

235
00:11:28.700 --> 00:11:30.020
control, then your, your gold
and all the other stuff

236
00:11:30.020 --> 00:11:32.450
is like a icing on
the cake. If you will,

237
00:11:32.450 --> 00:11:34.250
right? You don't have to
use it like you don't,

238
00:11:34.280 --> 00:11:36.470
you don't have to use
all the advanced reporting capabilities.

239
00:11:36.470 --> 00:11:37.880
You don't have to use
the bug tracking. You could

240
00:11:37.880 --> 00:11:40.760
use it just for source
control via relatively pricey source

241
00:11:40.760 --> 00:11:42.770
control system. But you can
certainly do that. And I

242
00:11:42.770 --> 00:11:44.390
think a lot of shops
actually will do that. It'll

243
00:11:44.390 --> 00:11:47.450
just be a better source
control, sustain shelving for one

244
00:11:47.450 --> 00:11:49.520
thing. Actually, this is one
thing that subversion kind of

245
00:11:49.520 --> 00:11:52.040
doesn't really have. It's basically
a little personal private branch

246
00:11:52.040 --> 00:11:54.430
that you create. You just
shelf your stuff and you

247
00:11:54.430 --> 00:11:56.200
can pull it up, put
it on the shelf and

248
00:11:56.200 --> 00:11:57.490
then pull it back down
and other developers can pull

249
00:11:57.490 --> 00:12:00.340
it back down. It's really
convenient. So Patrick, how would

250
00:12:00.340 --> 00:12:02.410
you do the equivalent? What
he just said shelving into

251
00:12:02.410 --> 00:12:06.210
version. That's essentially the same
thing, right? We, you create

252
00:12:06.210 --> 00:12:08.790
your own branch in another
repository. So like we have

253
00:12:08.790 --> 00:12:11.670
a user's repository, I've got
a P Caldwell folder and

254
00:12:11.670 --> 00:12:14.220
the user's repository and I
just copy whatever I'm working

255
00:12:14.220 --> 00:12:17.580
on there. And with the
version you can just switch

256
00:12:17.640 --> 00:12:20.250
and then check in changes
there. But I have to,

257
00:12:20.310 --> 00:12:21.560
I have to know what
it means, right. And I

258
00:12:21.570 --> 00:12:23.220
have to know what I'm
doing and I have to,

259
00:12:23.610 --> 00:12:25.770
there's no button that says
shelf. So the advantage, the

260
00:12:25.770 --> 00:12:27.600
advantage to TFS is that
there is a button it's

261
00:12:27.610 --> 00:12:30.030
a shelf and it's easy
to explain what that means.

262
00:12:30.090 --> 00:12:33.000
Right. And on the, on
the source control side, I

263
00:12:33.390 --> 00:12:35.190
I'm, I'm surprised to hear
you say that, that you

264
00:12:35.190 --> 00:12:37.230
think people will go for
just the source control part.

265
00:12:37.650 --> 00:12:41.460
Cause the it's kind of
overkill. Right? And if, if

266
00:12:41.970 --> 00:12:43.440
so I used to be,
you know, it was an

267
00:12:43.440 --> 00:12:47.130
irrational shop for awhile and
you know, if even rational

268
00:12:47.130 --> 00:12:48.510
sort of told us, you
know, Hey, if you're just

269
00:12:48.510 --> 00:12:52.560
going to run a ClearCase
don't bother. Right. The cool

270
00:12:52.560 --> 00:12:55.170
part about ClearCase is that
it works with clear quest

271
00:12:55.170 --> 00:12:56.850
and it works with, you
know, all the rest of

272
00:12:56.850 --> 00:12:59.700
the tools suite, if you've
got the quarter million dollars

273
00:12:59.700 --> 00:13:03.720
in licensing fees, right. It
all works holistically. CFS is

274
00:13:04.040 --> 00:13:06.090
similar that the selling point,
right, is that it's all

275
00:13:06.090 --> 00:13:08.370
integrated. We don't, we don't
have any of that stuff.

276
00:13:08.370 --> 00:13:11.250
So yeah, we have subversion,
we have actually clear quest.

277
00:13:11.550 --> 00:13:14.310
We have, you know, all
these other tools and we

278
00:13:14.310 --> 00:13:17.640
managed to make them integrated,
but it's because we've established

279
00:13:17.640 --> 00:13:19.770
processes to do that. Not
because it came that way.

280
00:13:20.010 --> 00:13:22.680
Right. So we didn't have
the trillion dollars. We were

281
00:13:22.680 --> 00:13:25.080
willing to do the work,
but it means a lot

282
00:13:25.080 --> 00:13:28.860
more training, a lot more
process overhead. Right. But it

283
00:13:28.860 --> 00:13:32.310
was for us. So it's
essentially through sheer force of

284
00:13:32.310 --> 00:13:34.380
will. And if you have
really talented developers who can

285
00:13:34.380 --> 00:13:36.210
sort of come up with
that process and like teach

286
00:13:36.210 --> 00:13:38.040
the other developers about it
and then you're golden, but

287
00:13:38.040 --> 00:13:39.750
a lot of places don't
have that, man. I mean,

288
00:13:39.750 --> 00:13:41.850
it's really common not to
have that. It's more common.

289
00:13:41.850 --> 00:13:42.870
You have a lot of
money, but not a lot

290
00:13:42.870 --> 00:13:45.120
of it let alone, not
a lot of expertise. So

291
00:13:45.120 --> 00:13:47.040
that's really what what team
system is about. And it's

292
00:13:47.040 --> 00:13:50.940
about integration, the one button
operations and they're really compatible

293
00:13:50.940 --> 00:13:52.980
worldviews, but I definitely wouldn't
one of the first things

294
00:13:52.980 --> 00:13:54.450
I asked, like I said,
is, are you a hardcore

295
00:13:54.450 --> 00:13:57.300
subversion, you know, in unit
shop, then you probably wouldn't

296
00:13:57.300 --> 00:14:01.530
want to switch it. It
rational had the same sort

297
00:14:01.530 --> 00:14:05.130
of market strategy, right? They,
they really appealed to places

298
00:14:05.130 --> 00:14:07.890
that had no process and
pay, just pay us the

299
00:14:07.890 --> 00:14:10.950
money. And we'll give you
process as opposed to somebody

300
00:14:10.980 --> 00:14:12.900
that already has process in
place, then they're going to,

301
00:14:12.900 --> 00:14:14.550
if they buy TFS, then
they're going to go, well,

302
00:14:14.550 --> 00:14:16.560
it doesn't really fit my
process. And it was the

303
00:14:16.560 --> 00:14:18.270
same thing with rap, right?
A lot of people want

304
00:14:18.270 --> 00:14:20.280
it to use the rational
suite, but they didn't want

305
00:14:20.280 --> 00:14:22.680
to buy into the full
high ceremony, you know, Rob

306
00:14:22.680 --> 00:14:24.360
and they kind of, well,
while we can make it

307
00:14:24.360 --> 00:14:27.180
work for agile development, if
you don't really use the

308
00:14:27.180 --> 00:14:29.850
product the way it's intended
to be used, but if

309
00:14:29.850 --> 00:14:31.830
you don't have any process
and then they can just

310
00:14:31.830 --> 00:14:33.240
drop it in and say,
Hey look, do it like

311
00:14:33.240 --> 00:14:36.600
this. It's cool. And teachers,
and it also is very

312
00:14:36.600 --> 00:14:38.880
lightweight. In fact, there's a,
there's a scrum process template

313
00:14:38.910 --> 00:14:41.460
in addition to the Microsoft
agile process template. So it

314
00:14:41.460 --> 00:14:43.490
does actually accommodate and they
say, you know, look, you

315
00:14:43.500 --> 00:14:45.660
can not use all the
features that you don't need.

316
00:14:45.660 --> 00:14:48.090
You can just cherry pick
the things that are interesting

317
00:14:48.090 --> 00:14:49.710
to you and use them.
They don't really force you

318
00:14:49.710 --> 00:14:51.620
to have a process. There's
just all this cool stuff

319
00:14:51.620 --> 00:14:53.510
is there for you to
take advantage of it. And

320
00:14:53.510 --> 00:14:54.740
you'll see teams, you go
in and talk to them.

321
00:14:54.740 --> 00:14:56.240
They start thinking about all
the stuff, which is the

322
00:14:56.240 --> 00:14:58.100
whole point like, wow, maybe
we should all have a

323
00:14:58.100 --> 00:15:00.500
shared source control server and
not work in these little

324
00:15:00.500 --> 00:15:04.040
departments where nobody knows what
anybody's doing. So it just

325
00:15:04.040 --> 00:15:05.960
drags them up and running
the evolutionary ladder. On the

326
00:15:05.960 --> 00:15:07.730
other hand, the pricing can
be difficult for people to

327
00:15:07.730 --> 00:15:09.560
deal with the analogy I
use. It's like sort of

328
00:15:09.560 --> 00:15:12.800
like walking into McDonald's and
seeing like, you know, $50

329
00:15:12.950 --> 00:15:15.500
flank steak on the menu.
This is just not something

330
00:15:15.650 --> 00:15:17.630
it's all pricing level that
you don't expect from McDonald's

331
00:15:17.630 --> 00:15:19.820
could be an excellent steak,
but you didn't really walk

332
00:15:19.820 --> 00:15:22.820
into McDonald's expecting, you know,
a 40, $50 steak on

333
00:15:22.820 --> 00:15:25.730
the menu. So it sort
of shocks people. But if

334
00:15:25.730 --> 00:15:27.200
you look at like the
pricing of rational of the

335
00:15:27.200 --> 00:15:29.360
things that if you went
down a feature matrix and

336
00:15:29.360 --> 00:15:31.760
say, what does this actually
compare to? And how much

337
00:15:31.760 --> 00:15:35.450
does it cost? It's actually
cheaper than the rational systems.

338
00:15:35.690 --> 00:15:37.580
It's just so, so few
people actually look at that

339
00:15:37.580 --> 00:15:40.340
because it's just not a
mainstream tool, right. Nobody says,

340
00:15:40.370 --> 00:15:42.650
Oh, I'm gonna use rational
PSS, which they get with

341
00:15:42.650 --> 00:15:44.600
their, with license are they're
comparing it to subversion or

342
00:15:44.600 --> 00:15:47.090
CVS, which they can go
get for, you know, free

343
00:15:47.090 --> 00:15:51.170
as in puppy. But you're
right. I mean, when you

344
00:15:51.170 --> 00:15:53.250
compare it to rational, I'm
sure it's competitive or any

345
00:15:53.250 --> 00:15:55.400
of the other big, you
know, inner solve or any

346
00:15:55.400 --> 00:15:59.570
of the other big merits.
Sorry, then, then it is

347
00:15:59.570 --> 00:16:02.720
competitive. Yeah. It's not like
you're expecting a happy meal.

348
00:16:02.720 --> 00:16:05.440
Right. And that's not having
trouble keeping track of all

349
00:16:05.460 --> 00:16:08.210
these analogies. So I heard
free like a puppy subversion,

350
00:16:08.870 --> 00:16:13.790
flank steak at McDonald's TVs.
Yeah. Alright, fantastic. And that's

351
00:16:13.790 --> 00:16:15.920
it from here on the
tech ed floor with Jeff

352
00:16:15.920 --> 00:16:28.330
Atwood and Patrick Caldwell, This portion
of Hanselminutes is brought to

353
00:16:28.330 --> 00:16:32.950
you by exceed zip for.net.
The only multitalented compression component

354
00:16:33.370 --> 00:16:37.900
use it to handle files,
folders, and data anywhere easily

355
00:16:38.020 --> 00:16:42.520
in zip tar and jesus'
files on FTP servers in

356
00:16:42.520 --> 00:16:47.020
streams, in memory and more
solve all your data manipulation

357
00:16:47.020 --> 00:16:50.200
needs at once. And now
you can get 20% off,

358
00:16:50.230 --> 00:16:53.890
any exceed component or suite
just for listening to Hanselman,

359
00:16:53.890 --> 00:16:59.590
it's go to shrink stir.com/f
P T and enter coupon

360
00:16:59.590 --> 00:17:03.550
code H M dash 20
dash 20. And now let's

361
00:17:03.550 --> 00:17:12.100
get back to Hansel minutes.
We're hanging out at the

362
00:17:12.310 --> 00:17:16.510
T L C the technical
learning center, not a cabana,

363
00:17:17.140 --> 00:17:18.820
right? It's not the Cabana's
like they called it last

364
00:17:18.820 --> 00:17:22.000
year. It's not the, not
the tent. It's not the

365
00:17:22.570 --> 00:17:25.390
it's the TLC. And I
got Clemons Vassar's I got

366
00:17:25.390 --> 00:17:28.210
Joshua Flanagan flimflam and I
got Steve mains. We got

367
00:17:28.240 --> 00:17:31.300
two Indigo guys, two non
Indigo guys. And we sat

368
00:17:31.300 --> 00:17:34.600
here, we're sitting here trying
to talk about DAS blog

369
00:17:34.600 --> 00:17:37.210
and the future of blog.
We sent out a note

370
00:17:37.210 --> 00:17:39.850
to our entire dash blog
developers group and say, Hey

371
00:17:39.850 --> 00:17:41.470
guys, let's all hook up
a tech head. And I

372
00:17:41.470 --> 00:17:43.570
think we've got about 10
people saying, yeah, we'll check

373
00:17:43.570 --> 00:17:46.330
it out. If it's now
15 minutes into our meeting

374
00:17:46.330 --> 00:17:51.480
and who has shown up
Clemens, we have Four people

375
00:17:51.480 --> 00:17:55.280
showing up And is this
representative of open source software

376
00:17:55.280 --> 00:17:59.150
in some way? Yeah. Everybody's
Christ's array. And then in

377
00:17:59.150 --> 00:18:03.560
the end, it's two guys
doing the work. How do

378
00:18:03.560 --> 00:18:05.450
you feel by that? Joshua
as someone who just recently

379
00:18:05.450 --> 00:18:07.220
jumped right back in and
does blogging started doing some

380
00:18:07.220 --> 00:18:11.660
serious damage? Well, I figured
this is exactly what I

381
00:18:11.660 --> 00:18:13.010
wanted to have something like
this, so we could get

382
00:18:13.010 --> 00:18:17.300
some direction and motivation to
get people motivated to contribute.

383
00:18:17.330 --> 00:18:19.760
But I guess we need
to get something before that.

384
00:18:20.300 --> 00:18:21.710
Do you think we ought
to just, do you think

385
00:18:21.710 --> 00:18:23.540
we ought to just find
people walking by and just

386
00:18:23.540 --> 00:18:25.940
grab them? Like, do you
have asp.net skills maybe they'll

387
00:18:25.940 --> 00:18:28.700
get involved that might work.
That might work. It might

388
00:18:28.970 --> 00:18:32.090
be a more effective than
our current approach. We would

389
00:18:32.090 --> 00:18:34.610
need a weapon. We would
need weapons too. Yeah. I

390
00:18:34.610 --> 00:18:37.550
see guns or something. Now
Steve vain from Steve Mann,

391
00:18:37.550 --> 00:18:39.050
from the end team. Now
you're not in a Dutch

392
00:18:39.060 --> 00:18:41.290
blog project, but you showed
up because of the, the

393
00:18:41.340 --> 00:18:44.210
massive crowd that you saw
forming around us here. Right.

394
00:18:44.210 --> 00:18:47.930
You know, absolutely. Scott. It
was really your animal magnetism

395
00:18:47.930 --> 00:18:51.920
that pulled me in off
the street. I appreciate that

396
00:18:51.920 --> 00:18:55.070
very much. So it is
not a coincidence that two

397
00:18:55.070 --> 00:18:57.110
of the guys here are
from the Indigo team. Why

398
00:18:57.110 --> 00:18:59.090
in the world with the
dusk blog open source team

399
00:18:59.090 --> 00:19:00.890
like Josh or myself and
the other guys that didn't

400
00:19:00.890 --> 00:19:04.340
show have any interest in
talking to the Indigo team

401
00:19:04.340 --> 00:19:08.900
and Clemens as the grandfather
or great-grandfather of, of DAS

402
00:19:08.900 --> 00:19:12.590
blog. Why do you Care?
Oh, because we're trying to

403
00:19:12.590 --> 00:19:16.670
stage a, a complete takeover
of the, So you're doing

404
00:19:16.670 --> 00:19:20.900
a hostile takeover of Josh
blog from the WCF point

405
00:19:20.900 --> 00:19:25.550
of view WTF. What's the
deal. Yeah. It's daddy's coming

406
00:19:25.550 --> 00:19:31.310
home. Daddy has returned to
the project. Okay. So what,

407
00:19:31.310 --> 00:19:33.080
what is it you're going
to break and plug in

408
00:19:33.080 --> 00:19:37.130
with Indigo. I think we
want to own the wire.

409
00:19:37.340 --> 00:19:40.430
That's all you guys can
do all the UI stuff

410
00:19:40.430 --> 00:19:42.260
and we're just going to
own the wire and everything

411
00:19:42.260 --> 00:19:44.510
that goes across the wire.
So this is very interesting

412
00:19:44.510 --> 00:19:46.850
because ordinarily you would think
there's not much going on

413
00:19:46.850 --> 00:19:48.710
in the wire with something
like a type of blog

414
00:19:48.710 --> 00:19:51.470
engine, but there's more entry
points and exit points than

415
00:19:51.470 --> 00:19:53.750
one would think, right? What
are the different places that

416
00:19:53.750 --> 00:19:57.830
information might flow into a
blog? The simplest one is

417
00:19:57.830 --> 00:20:01.550
certainly referrals and that's a
channel. That's a very interesting

418
00:20:01.550 --> 00:20:04.790
to police. First of all,
because of the spam, it's

419
00:20:04.790 --> 00:20:09.470
an interesting place to drive
statistics from. It's an interesting

420
00:20:09.500 --> 00:20:12.500
place to correlate information on.
Then we have comments. We

421
00:20:12.500 --> 00:20:17.420
have, we have, certainly we
have mailed postings. We have

422
00:20:17.420 --> 00:20:21.470
mail that's outflowing for notifications.
We have track backs, ping

423
00:20:21.470 --> 00:20:26.720
backs. We've got all the
API APIs to, or external

424
00:20:26.720 --> 00:20:28.910
web services to control things.
So you can post stuff

425
00:20:28.910 --> 00:20:33.260
to it. You can. Yeah.
And that's currently XML RPC.

426
00:20:34.250 --> 00:20:36.950
So you have all sorts
of different, different end points

427
00:20:36.950 --> 00:20:39.830
that go in it, except
in addition to the UI

428
00:20:39.830 --> 00:20:42.230
stuff. So the creepiest thing
that you just said, there

429
00:20:42.230 --> 00:20:46.100
was male, male pop three
as an API. Steve, do

430
00:20:46.100 --> 00:20:47.950
you think that that's kind
weird to say the Indigo

431
00:20:47.950 --> 00:20:52.300
could Have a male, a
male channel? No, I don't

432
00:20:52.300 --> 00:20:56.380
think that's weird at all.
I've actually written one. No,

433
00:20:56.380 --> 00:20:59.470
I think so. One of
my personal absolute favorite features

434
00:20:59.470 --> 00:21:01.600
in early versions of gospel
hope was the mail to

435
00:21:01.600 --> 00:21:05.110
web blog functionality, which somehow
we broke in later version.

436
00:21:05.140 --> 00:21:06.790
The reason that that's actually
broke, I did a little

437
00:21:06.790 --> 00:21:09.700
analysis it's because that function
has a cyclometic complexity of

438
00:21:09.700 --> 00:21:15.790
80. Yeah. So for those,
that would be Clemens's fault.

439
00:21:17.920 --> 00:21:19.840
No, I don't think it's
weird to think about Indigo

440
00:21:19.840 --> 00:21:22.600
taking data in from all
sorts of different transports. I

441
00:21:22.600 --> 00:21:25.240
mean, one of the things
that I've really enjoyed doing

442
00:21:25.240 --> 00:21:28.660
is using Indigo extensibility to
kind of make it stand

443
00:21:28.660 --> 00:21:30.610
up, stand up on its
head and do tricks and

444
00:21:30.610 --> 00:21:33.580
all sorts of interesting ways.
So I've done kind of

445
00:21:33.580 --> 00:21:35.920
an XML. I've done an
XML RPC stack actually built

446
00:21:35.920 --> 00:21:37.360
on top of Indego, which
I think is kind of

447
00:21:37.360 --> 00:21:39.490
interesting, which is one of
the reasons I'm standing here.

448
00:21:39.970 --> 00:21:41.860
So is there, so in
the last 30 seconds you've

449
00:21:41.860 --> 00:21:44.890
said that you've written a
pop three, a channel for

450
00:21:44.950 --> 00:21:47.470
Indigo and an XML RPC,
where, where are these things?

451
00:21:47.470 --> 00:21:50.020
Are they in your pocket?
Are they on code Plex?

452
00:21:50.260 --> 00:21:51.730
Where would someone get ahold
of that kind of stuff?

453
00:21:51.850 --> 00:21:54.910
They will be on code
Plex soon. So the SMTP

454
00:21:54.910 --> 00:21:57.910
transport is actually on my
blog. So it's on hyperthink.net.

455
00:21:58.390 --> 00:22:00.400
It was a ports of
the wizzy to, or the

456
00:22:00.400 --> 00:22:02.920
wizzy to transport I did,
which got moved over to

457
00:22:02.920 --> 00:22:04.930
wizzy three and eventually over
to Indigo. So it's kind

458
00:22:04.930 --> 00:22:09.310
of, yeah, well it uses
its SMTP on receive and

459
00:22:09.730 --> 00:22:13.240
yeah. Cool. So Joshua, as
someone who's worked on the

460
00:22:13.240 --> 00:22:15.400
dashboard program and you know,
the whole thing from, you

461
00:22:15.400 --> 00:22:17.560
know, left and right. But
I assume you don't know

462
00:22:17.560 --> 00:22:20.620
much about Indigo, is this
freaking you out? Yes, absolutely.

463
00:22:21.710 --> 00:22:24.190
And now as someone who's
recently jumped into the project

464
00:22:24.190 --> 00:22:25.540
and you know, done a
lot of really good stuff

465
00:22:25.570 --> 00:22:27.280
for us, does this make
you want to just jump

466
00:22:27.320 --> 00:22:28.840
in to go and start
doing some damage? Or do

467
00:22:28.840 --> 00:22:31.510
you think that maybe it's
time to just pick another

468
00:22:31.510 --> 00:22:35.740
blog engine? No, absolutely. I'm
intrigued. I want to jump

469
00:22:35.740 --> 00:22:38.560
right in and see what
we got. Alright, very cool.

470
00:22:39.400 --> 00:22:40.570
Are you not going to
make us run this thing

471
00:22:40.570 --> 00:22:43.690
on Longhorn your Clements? No,
you can run it on

472
00:22:43.720 --> 00:22:46.810
XP. You can run it
on a windows server, 2003.

473
00:22:46.810 --> 00:22:49.600
You can run it on
Vista and on the lawn

474
00:22:49.600 --> 00:22:53.080
horror stuff. Fantastic. Well, this
has been Scott Hanselman. I'm

475
00:22:53.080 --> 00:22:54.610
on the floor here at
tech ed and I'll catch

476
00:22:54.610 --> 00:22:55.150
you at a later.

