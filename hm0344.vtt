WEBVTT FILE

1
00:00:12.120 --> 00:00:17.460
From hanselminutes.com. It's Hanselman. That's
a weekly discussion with web

2
00:00:17.460 --> 00:00:22.290
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.290 --> 00:00:28.620
number three 44. Recorded live
Thursday, November 1st, 2012. This episode is

4
00:00:28.620 --> 00:00:31.590
brought to you by Telerx
offering the best in developer

5
00:00:31.590 --> 00:00:41.100
tools and support online@telerikdotcomandbyfranklins.net training
developers to work smarter and

6
00:00:41.100 --> 00:00:44.580
now offering gesture pack a
powerful gesture, recording and recognition

7
00:00:44.580 --> 00:00:51.420
system for Microsoft connect for
windows developers details@gesturepak.com. In this

8
00:00:51.420 --> 00:00:54.690
episode, Scott talks with Michael Gibson
creator of the three D

9
00:00:54.690 --> 00:01:00.090
modeling tool Moai. Hi, this
is Scott Hanselman. This is

10
00:01:00.090 --> 00:01:02.580
another episode of Hansel minutes.
Today. I'm going to talk

11
00:01:02.580 --> 00:01:04.620
a little bit more about
things that are 3d. In

12
00:01:04.620 --> 00:01:08.790
fact, I'm talking to the
author of Moai <inaudible> dot

13
00:01:08.790 --> 00:01:12.720
com Michael Gibson. Who's created an
amazing three D modeling tool

14
00:01:12.720 --> 00:01:15.240
for designers and artists. And
I appreciate you taking the

15
00:01:15.240 --> 00:01:17.400
time to talk to me
today, Michael. No problem. My

16
00:01:17.400 --> 00:01:20.340
pleasure Scott. So I've got
my up on my, on

17
00:01:20.340 --> 00:01:22.950
my 30 inch screen here
and it's separated with top

18
00:01:22.950 --> 00:01:26.220
front, right. 3d. And I
hopefully you'll explain some of

19
00:01:26.220 --> 00:01:29.520
the nomenclature and the interface
here, but I can only

20
00:01:29.520 --> 00:01:31.860
assume you have a team
of 30, 40 people working

21
00:01:31.860 --> 00:01:34.440
on this kind of back
at the office. It's a

22
00:01:34.440 --> 00:01:38.180
pretty sophisticated piece of software.
Well, it's only just me

23
00:01:38.180 --> 00:01:40.610
and myself and I am
working on it. I do

24
00:01:40.610 --> 00:01:42.530
sometimes I have an org
chart on my wall that

25
00:01:42.530 --> 00:01:44.780
someone drew for me with
my cat, my well, my

26
00:01:44.780 --> 00:01:48.140
ex cat passed away cat
and my rabbit on the

27
00:01:48.210 --> 00:01:50.360
org chart. But then there's
just me underneath I'm I'm

28
00:01:50.360 --> 00:01:53.180
working for them on the
work chart. So there's only

29
00:01:53.180 --> 00:01:55.700
just one. We just want
to be here. The cat

30
00:01:55.700 --> 00:01:59.330
is the CEO and the
CFO. Yeah. The rabbit is

31
00:01:59.330 --> 00:02:03.200
a team lead. So in
the, in the three D

32
00:02:03.200 --> 00:02:06.500
space, you've got some pretty
excited fans. And I want

33
00:02:06.500 --> 00:02:09.290
to understand some of the
terminology before we dig into

34
00:02:09.530 --> 00:02:12.650
what this accomplishes. As I,
as I looked around about

35
00:02:12.650 --> 00:02:17.060
3d, I'm seeing this, this
word nerves and you are

36
00:02:17.930 --> 00:02:19.880
what is a nerve and
why would I care in

37
00:02:19.880 --> 00:02:23.000
the world of three-day? Okay,
well, don't confuse it with

38
00:02:23.000 --> 00:02:27.890
nerds, but yeah, it, so
it's an acronym for non-uniform

39
00:02:27.890 --> 00:02:32.630
rational, beast blind. And basically
it's a, it's a mathematical

40
00:02:32.630 --> 00:02:37.580
method for representing geometry and
the particular, the particulars of

41
00:02:37.580 --> 00:02:40.250
it is that it's a,
it's a, you probably know

42
00:02:40.250 --> 00:02:42.920
what a Bezier curve is.
You might be familiar with

43
00:02:42.920 --> 00:02:45.050
that, of course, from illustrator
and that kind of thing.

44
00:02:45.050 --> 00:02:47.540
So it's a, it's a
derivative of that. It's kind

45
00:02:47.540 --> 00:02:49.940
of like the next iteration
of a Bezier curve, where

46
00:02:50.270 --> 00:02:54.380
it's a smooth curve that,
that uses control points. But,

47
00:02:54.950 --> 00:02:57.560
but it's, you know, blends
those points together as you

48
00:02:57.560 --> 00:03:00.910
move along the spine to
make a curved entity. And

49
00:03:00.910 --> 00:03:02.980
so you can use curves
and surfaces it's used for

50
00:03:02.980 --> 00:03:05.920
CAD because of precision. You
can also do things like

51
00:03:05.920 --> 00:03:10.330
exact circles and arts and
conic sections. So a lot

52
00:03:10.330 --> 00:03:13.180
of CAD programs that are
focused on manufacturing and accurate

53
00:03:13.180 --> 00:03:18.130
representations will use nerves as
the basis of the geometry

54
00:03:18.130 --> 00:03:21.960
definition. And it is nerve
a thing that, is it

55
00:03:21.960 --> 00:03:24.510
a file format or is
it more a thing like

56
00:03:24.720 --> 00:03:28.470
an extension of a Bezier
curve? It's more like a

57
00:03:28.470 --> 00:03:31.470
mathematical concept. So there's all
kinds of different file formats

58
00:03:31.470 --> 00:03:35.760
that can contain nerves. I
just stepped format various ones

59
00:03:35.760 --> 00:03:38.760
like that. So it's, but
the word word, nervous self

60
00:03:38.760 --> 00:03:43.200
just basically refers to the
overall mathematical concept of it.

61
00:03:43.410 --> 00:03:46.050
Okay. So if there were
multiple 3d formats and I

62
00:03:46.050 --> 00:03:48.750
see that when I say
save on your application, you

63
00:03:48.810 --> 00:03:52.350
support a dozen of them.
They might pack the bites

64
00:03:52.350 --> 00:03:55.290
a different way, but when
you get the actual points

65
00:03:55.290 --> 00:03:58.650
out that describe what the
curve looks like. The nerves

66
00:03:58.650 --> 00:04:00.600
are the nerves, no matter
how they decided to pack

67
00:04:00.600 --> 00:04:03.270
the bites and call it
a file format. Yes, that's

68
00:04:03.270 --> 00:04:08.040
correct. Yep. Okay. So I
know that Bezier curve has,

69
00:04:08.370 --> 00:04:11.850
you know, some number of
points and you could start

70
00:04:11.850 --> 00:04:14.520
with 0.0 1.1 and that's
a straight line. And then

71
00:04:14.520 --> 00:04:16.860
when you start adding points,
things start getting really, really

72
00:04:16.860 --> 00:04:20.520
interesting. This seems like the
math would be pretty, pretty

73
00:04:20.520 --> 00:04:23.790
complicated. Are there, are there
libraries that you would use

74
00:04:23.790 --> 00:04:26.250
or does everyone who makes
their own 3d application have

75
00:04:26.250 --> 00:04:29.190
to write their own libraries
to handle these? There are

76
00:04:29.190 --> 00:04:30.870
libraries that you can use,
and there's a variety of

77
00:04:30.870 --> 00:04:35.040
different ones. I use one
called solids plus plus from

78
00:04:35.040 --> 00:04:37.740
a company called integrity where
they're down in San Diego,

79
00:04:39.090 --> 00:04:42.240
there's some other common ones
are ASIS. Parasolid some of

80
00:04:42.240 --> 00:04:46.590
those ones are expensive, the
license. And that's one reason

81
00:04:46.590 --> 00:04:49.380
why that licensing cost is
one reason why a lot

82
00:04:49.380 --> 00:04:55.380
of software is pretty darn
expensive, especially parasol. The pretty

83
00:04:55.380 --> 00:04:59.160
heavy duty one is a
pretty pricey component to license.

84
00:04:59.400 --> 00:05:01.710
So there are a few
people, there are a few

85
00:05:01.710 --> 00:05:04.740
companies that do custom current
stuff. A lot of times

86
00:05:05.130 --> 00:05:08.250
it's called the geometry kernel.
The geometry libraries referred to,

87
00:05:08.250 --> 00:05:10.800
and there are some companies
that do custom make their

88
00:05:10.800 --> 00:05:15.720
one, but it really requires
a pretty big investment of

89
00:05:15.720 --> 00:05:17.640
time. And you need to
get people with a lot

90
00:05:17.640 --> 00:05:21.900
of experience in mathematics and
especially in, you know, digital

91
00:05:21.900 --> 00:05:26.520
mathematics and numerical methods and
things like that, which is

92
00:05:27.720 --> 00:05:30.480
not that easy to come
by a whole big team

93
00:05:30.480 --> 00:05:33.180
of those people. So it's
usually a lot, most of

94
00:05:33.180 --> 00:05:34.800
the time, it's something that
you licensed because of the

95
00:05:34.800 --> 00:05:37.530
difficulty in developing it. And
the other thing that's difficult

96
00:05:37.530 --> 00:05:40.440
about the nerves itself, you
know, just doing something with

97
00:05:40.440 --> 00:05:43.830
a curve is pretty simple,
but things like when the

98
00:05:43.830 --> 00:05:46.260
extension of nerves into surfaces
is that you have like

99
00:05:46.260 --> 00:05:49.530
a can imagine that if
you have a net of

100
00:05:49.530 --> 00:05:51.720
Bezier is like running in
two different directions that makes

101
00:05:51.720 --> 00:05:54.720
a skin. Now you have
a surface and that's how

102
00:05:54.720 --> 00:05:57.740
surfaces are nerve surface or
a busy surface is defined

103
00:05:57.740 --> 00:06:00.590
that way by this rectangular
grid of control points, instead

104
00:06:00.590 --> 00:06:03.890
of just points going in
one direction. Once you start

105
00:06:03.890 --> 00:06:06.830
dealing with intersecting those with
each other and things like

106
00:06:06.830 --> 00:06:10.490
that, it starts to become
pretty finicky calculation. So that's

107
00:06:10.490 --> 00:06:13.820
why it's, it's difficult to
develop a really robust one,

108
00:06:14.540 --> 00:06:18.350
especially because geometry processing comes,
geometry comes in like so

109
00:06:18.350 --> 00:06:21.110
many infinite varieties, you know,
there's so many different kinds

110
00:06:21.110 --> 00:06:23.360
of shapes in the world.
And so many different kinds

111
00:06:23.360 --> 00:06:26.120
of conditions about one touching
the other are barely grazing

112
00:06:26.120 --> 00:06:28.490
each other and things like
that. That is, it's a

113
00:06:28.490 --> 00:06:31.790
very, it's pretty difficult to
test very well because there's

114
00:06:32.510 --> 00:06:35.860
infinite variations, you know? Yeah.
When, when I think about

115
00:06:35.860 --> 00:06:37.850
it in term in a,
in a layman's term and

116
00:06:37.870 --> 00:06:40.720
by layman, I mean, someone
who does not live and

117
00:06:40.720 --> 00:06:42.430
breathe this stuff like you
do, I think of it

118
00:06:42.430 --> 00:06:46.030
in terms of a video
game and, and specifically the

119
00:06:46.030 --> 00:06:49.330
idea of quality. I think
we've all played three D

120
00:06:49.330 --> 00:06:54.070
video games, and there's always
that sense that this is

121
00:06:54.070 --> 00:06:58.030
a cheap game. This guy
just put his arm through

122
00:06:58.030 --> 00:07:01.270
the door and the system
didn't notice that he, he

123
00:07:01.270 --> 00:07:05.170
got clipped off or a
video game where I get

124
00:07:05.170 --> 00:07:08.020
caught in a corner and
I simply can't move anymore

125
00:07:08.020 --> 00:07:11.470
because, you know, it's just
not smart about that. And

126
00:07:11.470 --> 00:07:15.460
it makes one think, wow,
this, this is what a

127
00:07:15.460 --> 00:07:18.070
cheap video game looks like.
And then when I really

128
00:07:18.070 --> 00:07:21.040
amazing, well-produced when it comes
out, none of those things

129
00:07:21.040 --> 00:07:24.220
occur. And it sounds like
it's the difference between, you

130
00:07:24.220 --> 00:07:27.460
know, the 80%, you know,
the 80 20 rule, right.

131
00:07:27.730 --> 00:07:31.990
Getting the 80% case is
easy. Yeah. Yeah. And then

132
00:07:31.990 --> 00:07:35.590
the, yeah, the, the other
conditions that, of course everyone

133
00:07:35.590 --> 00:07:37.900
is going to enough, people
will run into to give

134
00:07:37.900 --> 00:07:39.790
you a lot of support.
The questions about are the

135
00:07:39.790 --> 00:07:43.420
difficult ones. Yeah. Yeah, No,
there's a really, really great

136
00:07:43.510 --> 00:07:47.470
article on Wikipedia specifically about
Bezier curves. And what's great

137
00:07:47.470 --> 00:07:49.390
about it is that someone
has gone to the work

138
00:07:49.840 --> 00:07:54.490
of creating a quartet Bezier
curve as an animated GIF.

139
00:07:55.270 --> 00:07:56.980
Yeah. Yeah. That helps a
lot to see what's going

140
00:07:56.980 --> 00:07:59.950
on. And it's amazing. And
what's interesting about it to

141
00:07:59.950 --> 00:08:02.230
me is that I can
look at just a very

142
00:08:02.230 --> 00:08:05.080
basic Bezier curve, like a
quadratic and get a general

143
00:08:05.080 --> 00:08:08.710
sense of, okay, I see
how this worked, but what's

144
00:08:08.710 --> 00:08:12.580
more interesting to me is
the, the movement between the

145
00:08:12.580 --> 00:08:17.980
three points and I'm imagining
it being drawn. This helped

146
00:08:17.980 --> 00:08:20.440
me understand how to go
from something that is a,

147
00:08:20.520 --> 00:08:24.100
is a function, a continuum
into something that's more procedural.

148
00:08:24.670 --> 00:08:26.800
The part that I have
trouble understanding when I think

149
00:08:26.800 --> 00:08:29.230
about things in terms of
programming is how do you

150
00:08:29.230 --> 00:08:32.500
get from something that's so
amazingly functional into something that's

151
00:08:32.500 --> 00:08:37.150
so incredibly procedural like C
or C plus plus? Well,

152
00:08:38.320 --> 00:08:40.330
it depends on the particular,
I mean, there's all kinds

153
00:08:40.330 --> 00:08:44.920
of different algorithms for processing
the nerves. Some things there's

154
00:08:44.920 --> 00:08:48.130
some kinds of processes, especially
with the surfaces that use

155
00:08:48.130 --> 00:08:50.860
an iteration approach. You know,
that there is not, it's

156
00:08:50.860 --> 00:08:53.890
not easy to come up
with a direct calculation. Instead,

157
00:08:54.370 --> 00:08:58.800
you, you, you know, try
to start with a approximation.

158
00:08:59.220 --> 00:09:01.290
There is a method that
you use a method that

159
00:09:01.290 --> 00:09:03.930
will analyze whether that approximation
is very good or not.

160
00:09:04.380 --> 00:09:06.030
And is the stepping like
a little bit to this

161
00:09:06.030 --> 00:09:07.980
side or to that side
better or worse. And then

162
00:09:07.980 --> 00:09:10.590
you, if you take one
little step towards the better

163
00:09:10.590 --> 00:09:13.320
side, and then you don't
measure again, and many of

164
00:09:13.320 --> 00:09:16.500
them are, are this kind
of iterative solver methods, we're

165
00:09:16.500 --> 00:09:22.560
doing particularly difficult things like
intersections of tracing, contour lines

166
00:09:22.560 --> 00:09:27.690
and things like that. That's
why that's why a lot

167
00:09:27.690 --> 00:09:29.490
of this doesn't drive off.
And then the other thing

168
00:09:29.490 --> 00:09:32.820
that's difficult is that the,
you know, the floating point

169
00:09:32.820 --> 00:09:36.730
mathematics are not incredibly precise
on the computer to do

170
00:09:36.870 --> 00:09:39.630
that, to start with, you
know, that you, they, you

171
00:09:39.630 --> 00:09:41.760
know, you got a double
precision number and it's, you

172
00:09:41.760 --> 00:09:45.810
know, eight bites and that's,
you know, you got to

173
00:09:45.810 --> 00:09:47.160
fit all your numbers that
you're going to work with

174
00:09:47.160 --> 00:09:51.900
into those eight bites. There's,
you know, there's accuracy issues.

175
00:09:51.900 --> 00:09:54.300
So you have to be,
there's a lot of fiddling

176
00:09:54.300 --> 00:09:57.390
around with dealing with the
limitations of math, also on

177
00:09:57.390 --> 00:10:01.200
the computer. You can't just
use something that is a

178
00:10:01.200 --> 00:10:05.580
mathematically beautiful formula, but breaks
down by little, one little

179
00:10:05.580 --> 00:10:08.640
tiny bits of the results
are, you know, basically tossed

180
00:10:08.640 --> 00:10:11.030
out the window. So this,
this kind of starts up

181
00:10:11.030 --> 00:10:14.480
an interesting discussion in my
perspective about the layering process,

182
00:10:14.960 --> 00:10:18.650
because there's the representation of
the, of the math. You

183
00:10:18.650 --> 00:10:20.600
know, the nerve is the
closest thing that we have

184
00:10:20.600 --> 00:10:23.000
to represent the purity of
the math. But even at

185
00:10:23.000 --> 00:10:28.220
that point, you've had to
set a precision value. So

186
00:10:28.220 --> 00:10:30.500
even at the lowest, lowest
level of all of this,

187
00:10:31.010 --> 00:10:33.910
you still don't have infinite
precision, do you? No, no.

188
00:10:33.920 --> 00:10:35.510
It was very they're in
fact, a pretty, you know,

189
00:10:35.840 --> 00:10:40.610
fairly limited precision in certain
cases, sometimes that sometimes that

190
00:10:40.610 --> 00:10:42.590
crops up in all kinds
of different ways, like, you

191
00:10:42.590 --> 00:10:45.410
know, it it's, it doesn't
the math on the computer

192
00:10:45.410 --> 00:10:48.110
doesn't work that well, it
is kind of geared floating

193
00:10:48.110 --> 00:10:50.360
point is geared to working
pretty well when all of

194
00:10:50.360 --> 00:10:52.730
the numbers you're working with
are of the same general

195
00:10:52.730 --> 00:10:55.460
size, you know, because it's
basically, that's, what's floating about

196
00:10:55.460 --> 00:10:58.850
it is it kind of
has a, you know, there's

197
00:10:58.850 --> 00:11:00.890
a certain amount of bits
for the sort of the

198
00:11:00.890 --> 00:11:03.140
working area. And then you
have an exponent separately. And

199
00:11:03.140 --> 00:11:06.050
if your, if your things
are in the same general

200
00:11:06.050 --> 00:11:09.140
exponent range, then they interact
the numbers interact together well,

201
00:11:09.140 --> 00:11:11.750
and you don't lose very
much, but a big number

202
00:11:12.080 --> 00:11:14.270
and a small number interacting
with each other, then that

203
00:11:14.360 --> 00:11:16.400
in the small number just
tends to kind of evaporate

204
00:11:16.430 --> 00:11:19.030
out of the way. Exactly
what you said. That's, that's,

205
00:11:19.070 --> 00:11:21.740
what's floating about it. If
you're, if you're working in

206
00:11:21.740 --> 00:11:25.910
stuff, that's all within the
same order of magnitude, you

207
00:11:25.910 --> 00:11:28.520
can have lots of precision,
but yeah, if you bring

208
00:11:28.520 --> 00:11:30.920
something very detailed into some
giant number, then things start

209
00:11:30.920 --> 00:11:33.800
getting messy. Do you do
this in C and C

210
00:11:33.800 --> 00:11:36.830
plus plus? Yeah. C plus
plus I write everything in

211
00:11:36.830 --> 00:11:40.730
C plus plus, And I
wonder though, as, as a,

212
00:11:40.730 --> 00:11:43.370
as a guy, who's trying
to learn languages myself, do

213
00:11:43.370 --> 00:11:45.320
you ever say, well, maybe
I need to do this

214
00:11:45.320 --> 00:11:49.160
engine part in some new
language, some functional language and

215
00:11:49.490 --> 00:11:51.380
hide that away from the
C plus plus, because it's

216
00:11:51.380 --> 00:11:53.650
more, more suited for the
kind of math I want

217
00:11:53.650 --> 00:11:57.360
to do. Well, I spent
a lot of time doing

218
00:11:57.360 --> 00:12:00.270
functional language itself in, as
far as the practical application

219
00:12:00.270 --> 00:12:03.240
side goes, I use a
lot of JavaScript as a

220
00:12:03.240 --> 00:12:07.080
scripting language for my app
to control sort of, you

221
00:12:07.080 --> 00:12:11.010
know, do high levels control
flow of my UI and

222
00:12:11.010 --> 00:12:13.290
things like that. You know,
like when you go through

223
00:12:13.290 --> 00:12:15.540
different stages in a command
and set up a point

224
00:12:15.540 --> 00:12:18.930
picker and say, now I'm
going to pick the object.

225
00:12:18.930 --> 00:12:20.550
Now I'm going to pick
the line. Now I'm going

226
00:12:20.550 --> 00:12:23.130
to draw a point or
whatever I do that in

227
00:12:23.130 --> 00:12:26.400
JavaScript. So there is a,
my app as a whole

228
00:12:26.400 --> 00:12:31.980
is, has got some different
languages in it, but I

229
00:12:31.980 --> 00:12:36.570
haven't done a big exploration
into, to, to the whole

230
00:12:36.570 --> 00:12:39.990
different, you know, functional language
for the guts of it.

231
00:12:40.560 --> 00:12:43.650
That's a big project to,
to do a geometry kernel,

232
00:12:43.650 --> 00:12:46.590
a first place. So I
just being, that's one of

233
00:12:46.590 --> 00:12:48.750
the side effects of being
a single person company is

234
00:12:48.750 --> 00:12:50.820
I have to also, I
can't bite off more than

235
00:12:50.820 --> 00:12:54.060
I can chew. If I
go off onto some big,

236
00:12:54.060 --> 00:12:56.550
huge project, that's going to
take a really long time.

237
00:12:56.550 --> 00:13:01.830
I could, I could really
be screwed basically. So you've

238
00:13:01.830 --> 00:13:04.620
got an application that is
also cross platform, right? This

239
00:13:04.620 --> 00:13:08.730
runs on Macs. It does
now. It's just, that's the

240
00:13:08.730 --> 00:13:10.890
most recent thing that I've
done is I've just recently

241
00:13:10.890 --> 00:13:13.500
finished a port only like
I finished it maybe a

242
00:13:13.500 --> 00:13:16.140
month ago or so. And
is that the same source

243
00:13:16.140 --> 00:13:18.270
code base and just you've
if Def your way, all

244
00:13:18.270 --> 00:13:21.810
the way to Mac Yeah.
Same source code and him

245
00:13:21.930 --> 00:13:23.850
for a lot of the
cases, same binary, because I

246
00:13:23.850 --> 00:13:27.390
use this system called wine
that run that that can,

247
00:13:27.450 --> 00:13:32.550
can actually load windows of
you files and execute their

248
00:13:32.610 --> 00:13:35.910
machine code. So I actually
compile, I don't, I don't

249
00:13:35.910 --> 00:13:38.010
have, if depths, I have,
I have a few, if

250
00:13:38.010 --> 00:13:40.110
deaths, I have a few,
if deaths were certain key

251
00:13:40.110 --> 00:13:42.450
areas, like the file, open
dialogue and things like that.

252
00:13:43.020 --> 00:13:45.930
But for the most part,
I actually load the same

253
00:13:45.930 --> 00:13:50.160
binary and run it. Well,
that's interesting. That's almost, that's

254
00:13:50.160 --> 00:13:54.810
almost like cheating, isn't it?
The windows emulator. Yeah. Some

255
00:13:54.810 --> 00:13:59.730
of them, some of them,
some, some people do think

256
00:13:59.730 --> 00:14:03.390
it is cheating. Tell me
that some people don't like

257
00:14:03.390 --> 00:14:05.340
it, but it's, I've, you
know, I've, I've put in

258
00:14:05.340 --> 00:14:08.760
enough native development on there
to get some key, you

259
00:14:08.760 --> 00:14:11.190
know, key points like the
file, open dialogue and other

260
00:14:11.190 --> 00:14:13.800
picker and things like that
to be native. So I

261
00:14:14.280 --> 00:14:16.110
I've done just enough work
to kind of, you know,

262
00:14:16.110 --> 00:14:18.690
make it not look too
weird. But I think from

263
00:14:18.690 --> 00:14:22.680
a pragmatic perspective, I mean,
you're one guy and why

264
00:14:22.680 --> 00:14:25.050
the heck not right. That,
that got it working. And

265
00:14:25.050 --> 00:14:27.150
I assume it looks exactly
like it does here. It

266
00:14:27.150 --> 00:14:29.730
looks great. And you've got
this, you have a unique

267
00:14:29.730 --> 00:14:33.030
style already. I mean, for
people who can't see it,

268
00:14:33.030 --> 00:14:35.180
I would describe it as
what we used to call

269
00:14:35.200 --> 00:14:37.680
owner draw. So, you know,
your, a save button looks

270
00:14:37.680 --> 00:14:40.080
like your save button and
your toolbox looks like your

271
00:14:40.080 --> 00:14:43.140
toolbox. You're not using native
controls. Oh, I have my

272
00:14:43.140 --> 00:14:46.650
own, my own controls. And
that, that actually doing that,

273
00:14:46.710 --> 00:14:48.930
made it a lot easier
to do the Mac Mac

274
00:14:48.930 --> 00:14:51.770
port, because I didn't have
to try to rewrite everything.

275
00:14:51.780 --> 00:14:54.590
It's not as weird when
you have everything on a

276
00:14:54.590 --> 00:14:56.720
dry and a custom look
to everything it's not as

277
00:14:56.720 --> 00:14:59.330
weird. Then when you have
that custom look somewhere else,

278
00:14:59.330 --> 00:15:02.330
too, you know, like it
looks the same there, you

279
00:15:02.330 --> 00:15:04.760
know, once you have something
custom, it makes more sense

280
00:15:05.390 --> 00:15:08.030
to have that same custom
look everywhere. And that greatly

281
00:15:08.030 --> 00:15:11.390
uses the porting because that's
a, that's one of the

282
00:15:11.390 --> 00:15:13.580
trickiest parts about porting is
trying to, if you're trying

283
00:15:13.580 --> 00:15:17.120
to make everything different on
each platform, now you multiplied

284
00:15:17.120 --> 00:15:19.370
your work by a huge
amount. And then once you

285
00:15:19.370 --> 00:15:21.980
multiplied your work, it's really
easy for one of those

286
00:15:21.980 --> 00:15:24.470
ports to become the main
one and the other one

287
00:15:24.470 --> 00:15:27.170
to always be lagging behind
because there's extra work involved

288
00:15:27.200 --> 00:15:30.350
in bringing that, or, you
know, implementing new features or

289
00:15:30.350 --> 00:15:32.780
whatever. So I really didn't
want to, I really didn't

290
00:15:32.780 --> 00:15:35.120
want to do something that
with the Mac port that

291
00:15:35.120 --> 00:15:37.220
would then add to my
work later on in the

292
00:15:37.220 --> 00:15:40.510
future, you know? Yeah. Well,
if, if one looks at

293
00:15:40.510 --> 00:15:44.020
your application, not like a,
an app with a whole

294
00:15:44.020 --> 00:15:47.230
bunch of buttons, like, you
know, a text boxes over

295
00:15:47.230 --> 00:15:50.950
data business app, which when
ported it over to a

296
00:15:50.950 --> 00:15:53.410
Mac with wine would look
like a windows app on

297
00:15:53.410 --> 00:15:55.960
a Mac. But instead looking
at your application as if

298
00:15:55.960 --> 00:15:59.140
it were 3d video game
where everything is splitted to

299
00:15:59.140 --> 00:16:03.940
the screen, then that makes
a lot of sense. Almost.

300
00:16:03.940 --> 00:16:05.860
I had a sort of
Mac ish vibe about it,

301
00:16:05.890 --> 00:16:08.320
even on windows originally, you
know, so it's sort of

302
00:16:08.320 --> 00:16:11.290
like the cab controls or
semi where kind of a

303
00:16:11.290 --> 00:16:14.920
little bit Mac influenced in
the look and everything. So

304
00:16:14.920 --> 00:16:18.220
it's, it was actually somewhat
of a hybrid to begin

305
00:16:18.220 --> 00:16:21.280
with as far as the
UI feel well goes, you

306
00:16:21.280 --> 00:16:25.150
know, so yeah, and that,
that makes it, so it

307
00:16:25.150 --> 00:16:27.340
doesn't stick out like a
sore thumb as much, at

308
00:16:27.340 --> 00:16:29.380
least in my opinion, you
know, when it, when you

309
00:16:29.380 --> 00:16:32.050
have the Mac version, there's,
it is, I also have

310
00:16:32.050 --> 00:16:34.300
quite a few people who
are you who use both

311
00:16:34.300 --> 00:16:36.610
a Mac and a PC
and having them having the

312
00:16:36.610 --> 00:16:42.160
same UI is great for
those people. There's, I've, I've

313
00:16:42.160 --> 00:16:43.840
heard from quite a few
people who have, you know,

314
00:16:43.990 --> 00:16:46.870
it's not uncommon to have
a PC as a desktop

315
00:16:46.900 --> 00:16:50.070
and a Mac for a
laptop. Yeah, absolutely. Well, and,

316
00:16:50.070 --> 00:16:54.670
and wine is actually the
acronym wine. W I N

317
00:16:54.700 --> 00:16:58.570
E means wine is not
an emulator. It's actually translating

318
00:16:58.570 --> 00:17:01.630
windows API calls that you
make into calls that are

319
00:17:01.930 --> 00:17:04.390
compatible to Linux or Mac
iOS. So it's not really

320
00:17:04.390 --> 00:17:07.750
an, an emulator as it
is a shim. Exactly. That's

321
00:17:07.750 --> 00:17:10.870
exactly what it is, is
a shim library. So actually

322
00:17:10.870 --> 00:17:14.110
the performance is really great
because it just, it doesn't,

323
00:17:14.230 --> 00:17:16.060
it doesn't run in a
virtual machine or it doesn't

324
00:17:16.060 --> 00:17:19.810
do heavy lifting. It only
comes into play at API

325
00:17:19.930 --> 00:17:22.870
calls. And then it just
basically turns around and calls

326
00:17:22.900 --> 00:17:26.810
the same equivalent API on,
you know, Unix. Yeah. Yeah.

327
00:17:26.980 --> 00:17:29.170
It's a big thunking layer
over all of the things

328
00:17:29.170 --> 00:17:31.540
that you would need to
worry about. That's great. Now

329
00:17:31.570 --> 00:17:33.520
the tricky part about it
is, is that it also

330
00:17:33.520 --> 00:17:36.660
doesn't perfectly emulate things, you
know, because, because of that,

331
00:17:36.980 --> 00:17:40.990
that, you know, if you,
the earlier versions didn't work

332
00:17:40.990 --> 00:17:42.400
very well with it. And
I did a whole bunch

333
00:17:42.430 --> 00:17:46.270
of dependency elimination or my
recent version in order to

334
00:17:46.270 --> 00:17:49.380
be able to do this
wine at all, the more

335
00:17:49.380 --> 00:17:53.400
I, I, I took more
things to be built into

336
00:17:53.400 --> 00:17:57.690
my own package and less,
less system and less things

337
00:17:57.690 --> 00:18:00.480
dependent, you know, less logic
dependent on things like internet

338
00:18:00.480 --> 00:18:03.870
Explorer and things like that.
So once I removed more

339
00:18:03.870 --> 00:18:06.870
dependencies, it gets easier for
wine to be more compatible

340
00:18:06.870 --> 00:18:09.780
with your code. The more
that you are connected to

341
00:18:09.780 --> 00:18:13.620
all kinds of different platform
things, they'll let the least

342
00:18:13.680 --> 00:18:17.040
likely it is that wine
will work. You know, there's,

343
00:18:17.100 --> 00:18:19.160
you know, it doesn't work
perfectly. Right. Right. So the

344
00:18:19.370 --> 00:18:22.640
more the code is owned
entirely by you. The more,

345
00:18:22.910 --> 00:18:24.350
the more likely it is
to work under wine. If

346
00:18:24.350 --> 00:18:26.930
you started bringing in third
party dependencies, then you've got

347
00:18:26.930 --> 00:18:28.820
to figure out whether or
not they mean that might

348
00:18:28.820 --> 00:18:30.710
be a blocking issue that
such and such a third

349
00:18:30.710 --> 00:18:32.570
party library is just not
going to work online. And

350
00:18:32.570 --> 00:18:35.390
now you're stuck. Yeah. And
especially, and also if you

351
00:18:35.390 --> 00:18:39.590
have dependencies on, you know,
complex platform libraries as well,

352
00:18:39.590 --> 00:18:43.130
you know, wine will, will
have difficulty with like, it

353
00:18:43.130 --> 00:18:45.770
has difficulty with, with a
lot of dotnet stuff, even

354
00:18:45.770 --> 00:18:47.960
like, I don't, you can't
do current Sonos stuff with

355
00:18:47.960 --> 00:18:53.300
wine at all. This episode
of Hansel minutes is brought

356
00:18:53.300 --> 00:18:57.140
to you by careers. 2.0
careers, 2.0 is a new

357
00:18:57.140 --> 00:19:00.320
service by our friends at
stack overflow. You're probably all

358
00:19:00.320 --> 00:19:03.080
familiar with stack overflow, the
online Q and a resource

359
00:19:03.080 --> 00:19:08.180
dedicated specifically to programmers and
programming related topics. Well, the

360
00:19:08.180 --> 00:19:11.690
team at stack overflow created
careers 2.0 to provide you

361
00:19:11.690 --> 00:19:14.330
with access to great jobs
and introduce you to a

362
00:19:14.330 --> 00:19:16.550
bunch of great companies that
you might consider working for,

363
00:19:17.120 --> 00:19:19.700
even if you're not currently
looking for a job, think

364
00:19:19.700 --> 00:19:23.300
of careers. 2.0 is a
programmer profile, gives you a

365
00:19:23.300 --> 00:19:26.660
platform to show that you're
awesome by featuring your proudest

366
00:19:26.660 --> 00:19:31.520
contributions to stack overflow GitHub
SourceForge Bitbucket, anything programming related,

367
00:19:32.150 --> 00:19:35.030
you can even add your
favorite programming books from amazon.com

368
00:19:35.900 --> 00:19:38.780
profiles on careers. 2.0 are
free. They're easy to get

369
00:19:38.780 --> 00:19:43.460
started, especially by importing your
LinkedIn profile. However, there's one

370
00:19:43.460 --> 00:19:49.100
catch profiles on career 2.0
invite only. They did this

371
00:19:49.100 --> 00:19:51.410
to keep out the spam
and have a high quality

372
00:19:51.410 --> 00:19:55.130
environment. Fortunately, for you as
a Hansel minutes listener, I've

373
00:19:55.130 --> 00:19:58.970
got your back head on
over to careers dot stack

374
00:19:58.970 --> 00:20:04.190
overflow.com/h M to accept your
invitation today, once again, that's

375
00:20:04.190 --> 00:20:12.380
careers dot stack, overflow.com/m. I
hope you like it. Where

376
00:20:12.380 --> 00:20:14.930
does your application fit in
the kind of the strata

377
00:20:14.930 --> 00:20:17.300
of 3d applications? The one
that reminds me of the

378
00:20:17.300 --> 00:20:22.130
most of your application is
Google sketch it up. And

379
00:20:22.130 --> 00:20:25.010
I would think that that
is a kind of your

380
00:20:25.010 --> 00:20:28.040
biggest competition, except you charge
and they're free. How do

381
00:20:28.040 --> 00:20:33.170
you deal with that? It's
pretty different from me. I

382
00:20:33.170 --> 00:20:35.450
mean, it's, it's, it's the
thing that's nice about SketchUp

383
00:20:35.450 --> 00:20:37.430
is it's focused on me
being easy to use, and

384
00:20:37.430 --> 00:20:40.010
they've kept that they've done
a great job of keeping

385
00:20:40.010 --> 00:20:42.680
that alive through multiple revisions.
That's one of the things

386
00:20:42.680 --> 00:20:45.500
that's really tricky with, with
any kind of software that's

387
00:20:45.500 --> 00:20:48.130
trying to do something complex
is every people are clamoring

388
00:20:48.130 --> 00:20:50.290
to have more things in,
and it's pretty easy for

389
00:20:50.290 --> 00:20:52.900
you to lose the simplicity
of just by simply jamming

390
00:20:52.900 --> 00:20:55.330
things in there. So they've
done a great job of

391
00:20:55.330 --> 00:20:58.560
keeping it streamlined and simple,
but focus is still they're

392
00:20:58.560 --> 00:21:00.990
best suited for what they
do originally designed for, which

393
00:21:00.990 --> 00:21:04.140
is architectural modeling. You know,
things that are boxy. They're

394
00:21:04.140 --> 00:21:07.020
not based on nerves. They're
based on polygons only, you

395
00:21:07.020 --> 00:21:09.690
know, so they're, they don't
have anything as they don't

396
00:21:09.690 --> 00:21:11.980
have any kind of truly
curved surfaces. If you tried

397
00:21:11.980 --> 00:21:14.640
to build a sphere and
SketchUp is going to be

398
00:21:14.640 --> 00:21:18.750
a bazillion little triangle faces,
even though they we'll shade

399
00:21:18.750 --> 00:21:21.540
it to look smooth as
this is cheating trick only,

400
00:21:21.540 --> 00:21:24.480
it's not actually with geometry,
it's a whole bunch of

401
00:21:24.480 --> 00:21:28.050
little facets. So it's clumsy
and SketchUp to do things

402
00:21:28.080 --> 00:21:31.190
that are smooth and curved
have any of y'all almost

403
00:21:31.350 --> 00:21:34.230
any kind of curves. There's
no curves. Everything is only

404
00:21:34.230 --> 00:21:37.620
line segments. You know, if
you try to draw, you

405
00:21:37.620 --> 00:21:39.660
draw a circle, it's a
whole bunch of little lines

406
00:21:39.660 --> 00:21:43.530
only. And in architectural modeling,
that's not a big problem

407
00:21:43.530 --> 00:21:45.930
because things are in the
beat box here. The forms

408
00:21:45.930 --> 00:21:48.510
are larger, you know, sharp
corners and things like that.

409
00:21:49.020 --> 00:21:51.190
And it's really well suited
for that kind of design.

410
00:21:51.190 --> 00:21:54.840
It works great for its
original sort of class of

411
00:21:55.260 --> 00:21:59.730
targets, but for industrial design,
for people doing like jewelry

412
00:21:59.730 --> 00:22:04.530
design, things that might have
smooth flowing forms in it,

413
00:22:05.160 --> 00:22:07.950
that's not a great fit
with SketchUp and those things

414
00:22:07.950 --> 00:22:14.820
work better in MOA. And
so SketchUp has no nerves

415
00:22:15.070 --> 00:22:20.040
is basically what it amounts
to everything's polygon, polygons only.

416
00:22:20.040 --> 00:22:22.340
That's the big difference. Now,
the thing that's nice about

417
00:22:22.380 --> 00:22:25.830
the thing that, that is
the comparison between two is

418
00:22:25.830 --> 00:22:27.630
that I try to really
focus on the ease of

419
00:22:27.630 --> 00:22:30.270
use and that's another area
where they focused on really

420
00:22:30.270 --> 00:22:33.120
well too. So that's the
area where there's a good

421
00:22:33.120 --> 00:22:37.560
comparison between them. And that's
the difference between that. I've

422
00:22:37.560 --> 00:22:40.800
tried to physician Moai in
the scheme of CAD programs

423
00:22:41.340 --> 00:22:44.070
is being in the easy
to use segment, which is

424
00:22:44.070 --> 00:22:49.170
not really there in ad
programs in general, because historically

425
00:22:49.170 --> 00:22:52.170
CAD programs have been for
mechanical engineers, people doing sort

426
00:22:52.170 --> 00:22:57.180
of, you know, manufacturing, design,
excuse me, on a, on

427
00:22:57.720 --> 00:23:01.080
a pipeline for doing, you
know, zillions of aircraft parts

428
00:23:01.080 --> 00:23:04.910
or, you know, making people
that are, have a, have

429
00:23:05.370 --> 00:23:08.250
a lot of training and
time invested in, you know,

430
00:23:08.850 --> 00:23:12.990
all this kind of technical
mechanical discipline stuff, engineering work.

431
00:23:13.140 --> 00:23:17.100
And Oh, a lot of
people, especially artists doing metal

432
00:23:17.220 --> 00:23:21.120
work jewelry, you know, all
kinds of all kinds of

433
00:23:21.120 --> 00:23:23.370
different things who don't have
that sort of super technical

434
00:23:23.370 --> 00:23:27.510
mechanical engineering background, but could
use CAD to do their,

435
00:23:27.510 --> 00:23:29.790
help them with their work.
That's the kind of person

436
00:23:30.210 --> 00:23:33.120
that I'm trying to reach
with MOA because I'm trying

437
00:23:33.120 --> 00:23:35.160
to make it easier to
use this kind of CAD

438
00:23:35.160 --> 00:23:39.840
nerves, toolset, and trying to
simplify things to make it

439
00:23:40.800 --> 00:23:43.290
work for these kinds of
users who could benefit from

440
00:23:43.290 --> 00:23:46.130
CAD, but who we don't
have much of a shot

441
00:23:46.130 --> 00:23:49.790
of paying $4,000 for bald
works and then having to

442
00:23:49.790 --> 00:23:51.680
go to, you know, two
weeks class to learn how

443
00:23:51.680 --> 00:23:55.280
to use it. And, you
know, continuously, you know, try

444
00:23:55.280 --> 00:23:57.830
to pretend like they're a
mechanical engineer instead of an

445
00:23:57.830 --> 00:24:00.690
artist or something. Well, that's
really interesting that, that, that

446
00:24:00.700 --> 00:24:03.490
really, for me, kind of
cements in my brain where

447
00:24:03.490 --> 00:24:06.010
these things fit then, because
I see sketch it up,

448
00:24:06.040 --> 00:24:08.830
being useful for putting together
a, you know, kind of

449
00:24:08.830 --> 00:24:12.820
in game models or models
of buildings that I might

450
00:24:12.820 --> 00:24:15.760
want to put into Google
map or Google earth. So

451
00:24:15.760 --> 00:24:18.040
it's, it's a, it's a
way of having those kinds

452
00:24:18.040 --> 00:24:23.710
of modeling be more, more
accessible, but your application is

453
00:24:23.710 --> 00:24:27.490
more of a sketch it
up for a full on

454
00:24:27.850 --> 00:24:35.970
CAD application For buildings and
architecture work that Scott, this

455
00:24:35.970 --> 00:24:39.370
semi semi sort of semi
boxiness to it, you know,

456
00:24:39.370 --> 00:24:44.410
to, and something that's more
like products or, you know,

457
00:24:44.420 --> 00:24:46.810
consumer products or a coffee
maker or something like that.

458
00:24:46.810 --> 00:24:50.140
Those are becoming, you know,
less suited for SketchUp and

459
00:24:50.140 --> 00:24:53.290
more for CAD. And, and
I'm trying to, and I'm,

460
00:24:53.590 --> 00:24:55.870
so I'm, I'm basically a
CAD program, but I'm trying

461
00:24:55.870 --> 00:24:58.600
to be easy to use
CAD programs, Right? Yeah. It's

462
00:24:58.600 --> 00:25:01.300
an ex it's an accessible
CAD program, which brings me

463
00:25:01.300 --> 00:25:03.940
to the next obvious thing.
When would I be able

464
00:25:03.940 --> 00:25:07.720
to load something up into
a MOA and then say

465
00:25:07.720 --> 00:25:11.980
print? Well, yeah, I don't.
So you can save to

466
00:25:11.980 --> 00:25:13.540
STL. If you want to
do a three D printer,

467
00:25:13.570 --> 00:25:15.910
you mean like make a
three D printer type stuff

468
00:25:15.910 --> 00:25:17.770
or do you mean, I
mean, three D print, I

469
00:25:17.770 --> 00:25:20.710
guess what I'm saying is
that this seems like of

470
00:25:20.710 --> 00:25:23.980
all the things that I've
seen, people creating their, their

471
00:25:23.980 --> 00:25:26.020
three D printing models in
this seems like the most

472
00:25:26.020 --> 00:25:28.750
friendly. And I just talked
to bill Steele who has

473
00:25:28.750 --> 00:25:31.660
a, a three D printing
product called the ultra bot.

474
00:25:32.050 --> 00:25:34.210
And it just seemed like
there's so many pieces of

475
00:25:34.210 --> 00:25:38.320
software cobbled together to get
printing to happen. Can I

476
00:25:38.320 --> 00:25:41.260
print with your product into
a three D printer? Yeah.

477
00:25:41.310 --> 00:25:42.940
Yeah. In fact, I do
have quite a few people

478
00:25:42.940 --> 00:25:45.010
using it with that. There's
this guy who uses it

479
00:25:45.010 --> 00:25:47.440
to do so. One of
the things that works great

480
00:25:47.440 --> 00:25:49.660
with three D printing right
now is jewelry, jewelry designed

481
00:25:49.660 --> 00:25:52.870
because it's a natural fit
for the size and the,

482
00:25:52.870 --> 00:25:55.390
you know, in the process
of three D printing, especially

483
00:25:55.390 --> 00:25:58.090
for like the build size
that they can do and

484
00:25:58.090 --> 00:26:01.330
everything. So I have people
doing jewelry design, doing three

485
00:26:01.330 --> 00:26:03.070
D printing. There's a guy
who does it to print

486
00:26:03.070 --> 00:26:08.530
out to make custom parts
for his railroad, like old

487
00:26:08.530 --> 00:26:12.340
railroad working railroad thing. That's
the old, old metal parts

488
00:26:12.340 --> 00:26:15.100
that he needs to make
custom replacements for. And the

489
00:26:15.100 --> 00:26:17.710
process is used. You just
save to an STL file.

490
00:26:17.710 --> 00:26:21.070
That's the format that three
D printers use most frequently

491
00:26:21.070 --> 00:26:24.130
in order to, to take
their data in. And I

492
00:26:24.130 --> 00:26:26.140
can just write right to
that file. And so you

493
00:26:26.140 --> 00:26:29.350
don't print directly from MOA.
You save to STL file

494
00:26:29.350 --> 00:26:33.100
and then shove that STL
file into your printers. Oh,

495
00:26:33.100 --> 00:26:36.700
okay. So how does someone
get from, I mean, other

496
00:26:36.700 --> 00:26:38.800
than three D printing, which
I understand, I mean, I

497
00:26:38.800 --> 00:26:42.010
understand that I save as
an STL file. I import

498
00:26:42.010 --> 00:26:44.820
it, and then there's, it's
sliced up and didn't sent

499
00:26:44.820 --> 00:26:46.770
off to the three D
printer, and I understand how

500
00:26:46.770 --> 00:26:49.980
the printer extrudes plastic, but
like, for example, on your

501
00:26:49.980 --> 00:26:53.610
homepage, there's this interesting looking,
what I presume is metal

502
00:26:53.970 --> 00:26:56.460
piece of some kind, or
if I imagine that that

503
00:26:56.460 --> 00:27:00.060
gentlemen making a metal piece
for his model railroad, do

504
00:27:00.060 --> 00:27:03.000
I take one of these
file formats to a machinist?

505
00:27:03.030 --> 00:27:04.410
How do I get one
of these things out of

506
00:27:04.410 --> 00:27:08.840
steel? How do I make
something? So there are, there's

507
00:27:08.850 --> 00:27:12.350
like, there's quite a few
different, pretty different methods of

508
00:27:12.440 --> 00:27:15.950
generating your three D object.
There's, there's CNC, milling that's

509
00:27:15.980 --> 00:27:18.440
there's people that do cabinetry
and carved wood and stuff.

510
00:27:18.440 --> 00:27:22.040
And that that's a subtractive
process where you, you take

511
00:27:22.490 --> 00:27:25.070
that can work on off
STL, but it can also

512
00:27:25.070 --> 00:27:31.100
work off of nerves, nerves,
file formats, where they will

513
00:27:31.100 --> 00:27:33.200
calc you take it into
what's called a cam program.

514
00:27:33.200 --> 00:27:37.280
And they calculate a cutting
path for the tool. They

515
00:27:37.280 --> 00:27:40.670
analyze the shape, the geometry,
and they will trace paths

516
00:27:40.700 --> 00:27:45.260
over it in order to
calculate where the cutter, where

517
00:27:45.260 --> 00:27:47.990
the cutting tool has to
travel in order to carve

518
00:27:47.990 --> 00:27:52.610
your shape up, that's called
cam computer aided manufacturing. And

519
00:27:52.610 --> 00:27:55.730
so that's a different process
and a additive process of

520
00:27:55.730 --> 00:27:58.130
three D printing, but it's,
it's also, it's a, you

521
00:27:58.130 --> 00:28:04.220
know, very frequently used method
for our construction also than

522
00:28:04.220 --> 00:28:06.320
other way that that's, that
you can do you do

523
00:28:06.320 --> 00:28:08.540
that people do, especially for
jewelry is that you three

524
00:28:08.540 --> 00:28:13.040
D print of a base
thing and use it to

525
00:28:13.040 --> 00:28:16.130
make a mold. And now
you use that mold to

526
00:28:16.550 --> 00:28:19.700
pour metal into, to, to
actually make the metal form.

527
00:28:19.710 --> 00:28:21.950
So it's sort of like
a, a two step process

528
00:28:22.010 --> 00:28:25.490
reading three D print to
build the, the core piece

529
00:28:25.520 --> 00:28:27.860
and then build a mold
from that. Now you have

530
00:28:27.860 --> 00:28:31.370
the mold to use for
making your metal, there are

531
00:28:31.380 --> 00:28:33.380
some new, there's some new
three D printers that print

532
00:28:33.380 --> 00:28:36.470
metal spit out little metal
particles or something. Anyway, that

533
00:28:36.470 --> 00:28:38.990
prints metal directly to that's
an, that's a kind of

534
00:28:38.990 --> 00:28:41.810
a newcoming thing actually. Oh,
wow. So all of it,

535
00:28:41.810 --> 00:28:44.150
all it matters though, is
that I've got that, that

536
00:28:44.150 --> 00:28:46.310
file format. And I'm clicking
save right now. And I've

537
00:28:46.310 --> 00:28:50.270
got three, four, five, six,
seven, eight, nine, 10, 11

538
00:28:50.270 --> 00:28:52.730
different formats. I mean, I
can move anything I want

539
00:28:52.730 --> 00:28:56.390
from your application into a,
into, as any other application

540
00:28:56.390 --> 00:28:59.690
that accepts these, this, this
nerves format. Yeah. And now

541
00:28:59.690 --> 00:29:01.400
some of those are nerves
formats, and some of those

542
00:29:01.400 --> 00:29:05.120
are polygon format. So some
programs only, and will only

543
00:29:05.120 --> 00:29:08.300
take especially ones that are
focused on animation and rendering,

544
00:29:08.660 --> 00:29:10.190
which is a whole nother
kind of thing that people

545
00:29:10.190 --> 00:29:11.750
you can do with rendering
is a whole nother thing

546
00:29:11.750 --> 00:29:13.670
you can do with your
three D models. That's kind

547
00:29:13.670 --> 00:29:15.830
of like a simulated environment
where you set up lights

548
00:29:15.830 --> 00:29:18.380
and materials, push a button,
and then it will make

549
00:29:18.380 --> 00:29:22.520
a, you know, virtual photograph
of your object that looks

550
00:29:22.520 --> 00:29:27.410
really realistic. Those kinds of
programs usually take polygon formats.

551
00:29:28.100 --> 00:29:30.920
So I can save to
either nerves format where you

552
00:29:30.920 --> 00:29:34.850
get the nerve status directly,
or a polygon format where

553
00:29:34.850 --> 00:29:38.360
you'll, it will convert it
by a tesselation process and

554
00:29:38.360 --> 00:29:41.980
dice up the nerve surfaces
into little facets to output

555
00:29:41.980 --> 00:29:44.530
to the polygon pro pro
to the program that understands

556
00:29:44.530 --> 00:29:48.270
polygon. So I can use
your application to make stuff

557
00:29:48.540 --> 00:29:51.060
that is physical, or I
could model characters and then

558
00:29:51.060 --> 00:29:53.970
move them into a game.
Yes. Now, so for characters,

559
00:29:54.480 --> 00:30:00.540
usually CAD is not that
greatly suited for things like

560
00:30:01.380 --> 00:30:05.340
faces and creatures and what
I would call normally a

561
00:30:05.370 --> 00:30:11.760
characters because because CAD is
focused on constructing things from

562
00:30:11.760 --> 00:30:13.890
two D profile curves, you
know, it's sort of like

563
00:30:13.990 --> 00:30:16.710
the that's, the that's where
it shines the most at

564
00:30:16.710 --> 00:30:21.480
that technology modeling technology is
by drawing plans and using

565
00:30:21.480 --> 00:30:24.300
those plan curves, those two
D curves directly as part

566
00:30:24.300 --> 00:30:27.000
of the model construction by
extruding and revolving and cutting,

567
00:30:27.480 --> 00:30:29.940
but you know, a creature
or a face, it doesn't

568
00:30:29.940 --> 00:30:31.920
have very much of a
two D nature about it

569
00:30:31.920 --> 00:30:34.620
at all. You know, like
you can't define a human

570
00:30:34.620 --> 00:30:38.760
face only by a profile
curve because the profile curve,

571
00:30:38.970 --> 00:30:41.700
isn't what I would call
like a defining characteristic of

572
00:30:41.730 --> 00:30:44.280
the face. It's only just
like a snapshot of it

573
00:30:44.370 --> 00:30:47.580
at one little angle, you
know, I see. And then

574
00:30:47.580 --> 00:30:52.470
there's textures and things like
that as well. Sure. Usually

575
00:30:52.470 --> 00:30:55.590
that's done in a different
style of program. Something like

576
00:30:55.590 --> 00:31:01.830
Modo my cinema four D
studio max, those are programs

577
00:31:01.830 --> 00:31:05.430
that are oriented towards animation
and movie effects and things

578
00:31:05.430 --> 00:31:08.070
like that. Those are usually
done. Those are usually where

579
00:31:08.070 --> 00:31:10.350
people go to model characters
and they use a different

580
00:31:10.350 --> 00:31:16.070
process there, which is, which
is polygon modeling, subdivision surfaces

581
00:31:16.080 --> 00:31:19.050
as a method of taking
polygon hall and smoothing it

582
00:31:19.050 --> 00:31:21.360
down to make a kind
of melted like smooth surface

583
00:31:21.360 --> 00:31:23.490
out of it. It's a
different technique than there was

584
00:31:23.490 --> 00:31:29.010
modeling. That's more often used
for character. Might I use

585
00:31:29.010 --> 00:31:32.490
nerves modeling to create like
weapons or, or, you know,

586
00:31:32.700 --> 00:31:34.830
tables and things that are
kind of around the character.

587
00:31:35.430 --> 00:31:38.160
Yeah. It's a good fit
for that. Cause then, cause

588
00:31:38.160 --> 00:31:42.300
basically polygon modeling works great
for things like a skin

589
00:31:42.300 --> 00:31:44.250
or a face or something
like that, but it's not

590
00:31:44.250 --> 00:31:48.330
good at building mechanical objects
because booleans, don't work very

591
00:31:48.330 --> 00:31:51.240
well with polygon models, but
they do work well with

592
00:31:51.240 --> 00:31:54.240
nerves models. So things that
are more look like they're

593
00:31:54.240 --> 00:31:57.270
manmade, manufactured things, those are
the things that work really

594
00:31:57.270 --> 00:32:01.080
well with nerves, technology, things
that are less, that don't

595
00:32:01.080 --> 00:32:03.300
have very much of a
2d nature about them at

596
00:32:03.300 --> 00:32:05.790
all, that you wouldn't see
like a blueprint of a

597
00:32:05.790 --> 00:32:09.250
human face, for instance, right.
With dimensions called out on

598
00:32:09.270 --> 00:32:11.010
or whatever. Like you wouldn't
see that there's not a

599
00:32:11.010 --> 00:32:13.740
lot of, there's no line,
there's no flat line anywhere

600
00:32:13.740 --> 00:32:16.770
on it on a face.
Things like that then are

601
00:32:16.770 --> 00:32:19.650
not very well suited for
nerves. So I had two,

602
00:32:19.650 --> 00:32:21.300
I had two other questions
and they're kind of, they're

603
00:32:21.300 --> 00:32:23.430
kind of random. They don't
flow like the other, the

604
00:32:23.430 --> 00:32:25.860
last questions. The first one
was, was how do you

605
00:32:25.860 --> 00:32:30.270
unit test something like this?
Well, I, I just, I

606
00:32:30.270 --> 00:32:32.430
don't, I don't do unit
testing. I just, I just

607
00:32:32.670 --> 00:32:34.650
get in and draw some
things, you know, like if

608
00:32:34.650 --> 00:32:36.450
I want to test something,
I'd build a model that

609
00:32:36.450 --> 00:32:39.740
uses the features that I
just, that I've working on.

610
00:32:41.120 --> 00:32:43.160
And I just kind of
draw for 10 minutes or

611
00:32:43.160 --> 00:32:45.080
something like that, you know,
and just, just use it

612
00:32:45.080 --> 00:32:48.110
and exercise it. So I
don't, I don't really do

613
00:32:48.620 --> 00:32:52.790
any formal unit testing myself,
but I do, you know,

614
00:32:52.850 --> 00:32:56.710
work it directly As you
find something like a regression

615
00:32:56.710 --> 00:32:59.020
of some kind, if something,
you know, you broke some,

616
00:32:59.040 --> 00:33:01.120
some feature from years ago
and you didn't even realize

617
00:33:01.120 --> 00:33:04.900
it. Well, that happens sometimes.
I mean, especially actually it

618
00:33:04.980 --> 00:33:09.700
especially happens in library updates
from, you know, new geometry

619
00:33:09.700 --> 00:33:13.750
library versions. And it's also,
it's almost, it's not unusual

620
00:33:13.750 --> 00:33:18.310
for tuning one geometry problem
to then cause problems in

621
00:33:18.320 --> 00:33:20.620
another one with things of
tolerances or things that are

622
00:33:20.620 --> 00:33:25.330
barely, you know, all kinds
of special case conditions. Well,

623
00:33:25.990 --> 00:33:30.010
sometimes those don't, sometimes those
don't get tested until someone

624
00:33:30.010 --> 00:33:32.470
tests them in the beta
version. And I try to

625
00:33:32.470 --> 00:33:34.030
put out one of the
things I try to do

626
00:33:34.030 --> 00:33:36.460
is I try to have
a beta versions released frequently.

627
00:33:36.520 --> 00:33:40.090
I, I don't save them
all up until I'm ready

628
00:33:40.090 --> 00:33:42.790
to release. I, I put
them out continuously as soon

629
00:33:42.790 --> 00:33:45.520
as I have anything new
at all. So that, you

630
00:33:45.520 --> 00:33:49.600
know, they get tested by
users pretty, pretty frequently. Okay.

631
00:33:49.600 --> 00:33:52.000
And then the other question
I had was that I

632
00:33:52.000 --> 00:33:53.920
know that you are a
big fan of pins and

633
00:33:53.920 --> 00:33:55.870
then you were really kind
of on the forefront, you

634
00:33:55.870 --> 00:33:58.420
know, five, six years ago
doing, you know, encouraging people

635
00:33:58.420 --> 00:34:01.060
to use pens and pen
tablets and things like that.

636
00:34:01.300 --> 00:34:04.900
What do you think about
a version of your software

637
00:34:04.900 --> 00:34:08.380
for an iPad or a
slate That wasn't, that was

638
00:34:08.380 --> 00:34:10.990
kind of like the original
concept for Moira was to

639
00:34:11.020 --> 00:34:13.540
like carve out. I was,
the original concept was sort

640
00:34:13.540 --> 00:34:16.600
of like I saw that
people using pen tablets struggled

641
00:34:16.600 --> 00:34:18.880
with CAD software and it
didn't, it didn't work very

642
00:34:18.880 --> 00:34:21.940
well with the CAD software.
So I was gonna, that

643
00:34:21.940 --> 00:34:24.940
was my original concept was
to make my software be

644
00:34:24.940 --> 00:34:27.610
pen, tablet friendly, which at
that time, maybe eight or

645
00:34:27.610 --> 00:34:30.010
nine years ago, man, like
the Wacom style, you know,

646
00:34:30.190 --> 00:34:35.170
and tablets, digitizer pads. And
that's what really drove me

647
00:34:35.170 --> 00:34:37.180
to try to do a
different kind of UI and,

648
00:34:37.240 --> 00:34:41.620
you know, think outside the
box or whatever, that's become

649
00:34:41.620 --> 00:34:43.990
less of a focus for
me over time because more,

650
00:34:44.200 --> 00:34:46.600
most people that I've found
that are attracted to the

651
00:34:46.600 --> 00:34:50.560
software or just, just focused
mostly on ease of use

652
00:34:50.560 --> 00:34:52.900
and not on specifically on
using with a pen. So

653
00:34:52.900 --> 00:34:56.110
I don't, I like my,
my actual pen tablet users

654
00:34:56.160 --> 00:34:58.960
are thinking of minority of
all my user base now.

655
00:34:59.590 --> 00:35:01.930
So it's become less of
a, less of an actual

656
00:35:01.930 --> 00:35:05.920
focus for me. I still
like to consider it because

657
00:35:05.920 --> 00:35:08.410
it's sort of kept me
sort of what jolted me

658
00:35:08.410 --> 00:35:12.010
out of, of just, you
know, doing the same kind

659
00:35:12.010 --> 00:35:16.690
of thing as everyone else
initially. But it's not that

660
00:35:16.690 --> 00:35:18.880
big of a focus for
me now. And I don't

661
00:35:19.360 --> 00:35:21.790
for drawing, you feel like
finger painting, trying to do

662
00:35:21.790 --> 00:35:25.960
something precision with your fingers
only. It seems, I don't

663
00:35:25.960 --> 00:35:28.210
know. It seems weird to
me. Well, I assume that

664
00:35:28.210 --> 00:35:30.070
they would have some kind
of a Superman that there

665
00:35:30.070 --> 00:35:33.310
is a, there is a
precision pixel precision pen for

666
00:35:33.310 --> 00:35:36.340
the iPad now. Yes. Yeah,
there is. There is, but

667
00:35:36.340 --> 00:35:38.400
it's like a, you know,
not everybody has it and

668
00:35:38.400 --> 00:35:40.550
it's Yeah. Yeah. You don't
want to tie your application

669
00:35:40.550 --> 00:35:43.760
down to that one tool.
Yeah. So I don't know.

670
00:35:43.880 --> 00:35:46.610
I don't know about that.
It seems, it seems like

671
00:35:46.610 --> 00:35:52.340
it's so focused on touch
and touch with precision drawing.

672
00:35:52.340 --> 00:35:54.500
Is this sort of a
sort of a, I don't

673
00:35:54.500 --> 00:35:59.600
know, not It's really great.
I really appreciate you taking

674
00:35:59.600 --> 00:36:01.970
the time to chat with
me today. No problem. So

675
00:36:02.000 --> 00:36:04.190
folks can go and they
can actually download a trial

676
00:36:04.460 --> 00:36:09.650
of Moai at <inaudible> dot
com. It's extremely affordable and

677
00:36:09.650 --> 00:36:12.980
really sophisticated and a lot
of fun. And you can

678
00:36:13.910 --> 00:36:17.120
check that out and there's
only one guy. So if

679
00:36:17.120 --> 00:36:19.100
you're in the forums asking
for support, you're going to

680
00:36:19.100 --> 00:36:21.710
be talking directly to Michael.
So that's great. Thanks a

681
00:36:21.710 --> 00:36:23.690
lot, Michael, for chatting. No
problem. Thank you very much,

682
00:36:23.690 --> 00:36:26.660
Scott. This has been another
episode of Hanselminutes and we'll

683
00:36:26.660 --> 00:36:27.830
see you again next week.

