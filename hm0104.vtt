WEBVTT FILE

1
00:00:04.920 --> 00:00:16.730
<inaudible> From Hanselman it's dot
com. It's Hanselman. It's a

2
00:00:16.730 --> 00:00:21.110
weekly discussion with web developer
and technologists. Scott Hanselman posted

3
00:00:21.110 --> 00:00:24.980
by Carl Franklin. This is Lawrence Ryan
announcing show number one Oh

4
00:00:24.980 --> 00:00:31.370
four. Recorded live Wednesday, March 12th, 2008.
Support for Hanselman it's is

5
00:00:31.370 --> 00:00:35.990
provided by tolerant. Already controls
the most comprehensive suite of

6
00:00:35.990 --> 00:00:46.730
components for windows forms and
asp.net web applications. online@wwwdottelerik.com. Support

7
00:00:46.730 --> 00:00:50.960
is also provided by.net developers
journal. The world's leading.net developer

8
00:00:50.960 --> 00:00:57.530
magazine online at www dot
<inaudible> dot com. In this

9
00:00:57.530 --> 00:01:01.430
episode, Scott talks with Dave
Larrabee of exclaimed software about

10
00:01:01.490 --> 00:01:06.860
alt.net. Hi, this is Scott
Hanselman, and this is another

11
00:01:06.860 --> 00:01:09.500
episode of Hansel minutes. And
I'm sitting here with Dave

12
00:01:09.500 --> 00:01:13.280
Larrabee of exclaim software, and
Dave is deeply involved in

13
00:01:13.280 --> 00:01:17.240
the alt.net movement that did
you actually coin the term

14
00:01:17.270 --> 00:01:22.790
alt.net? Yeah, I did a
C April wrote a post,

15
00:01:22.820 --> 00:01:24.740
just kind of one of
those posts that you write

16
00:01:24.740 --> 00:01:28.790
in 20, 30 minutes, they're
always the most successful the

17
00:01:28.790 --> 00:01:31.670
ones you don't think about.
Yeah, exactly. So it was

18
00:01:31.670 --> 00:01:35.060
kind of coming off of
the MVP summit that time.

19
00:01:35.060 --> 00:01:38.510
I just got a, got
an invite from, I was

20
00:01:38.510 --> 00:01:42.200
there as a special guests
and yeah, we had really

21
00:01:42.200 --> 00:01:45.890
interesting conversation with some of
the guys from the entity

22
00:01:45.890 --> 00:01:49.430
framework team, kind of trying
to convince them testability is

23
00:01:49.430 --> 00:01:54.650
a main goal. And subsequent
to that Rhoda Rhoda, there

24
00:01:54.650 --> 00:01:56.870
was a lot of energy
there wrote a post kind

25
00:01:56.870 --> 00:02:00.230
of summarizing that event and
saying, Hey, you know, a

26
00:02:00.230 --> 00:02:03.230
lot of us are looking
for alternatives to what Microsoft's

27
00:02:03.470 --> 00:02:06.770
currently providing and open source,
things like that. And yeah,

28
00:02:06.860 --> 00:02:08.570
it got a lot of
traction and got a lot

29
00:02:08.570 --> 00:02:11.840
of links, got a lot
of comments and kind of

30
00:02:11.840 --> 00:02:15.920
evolved from there. Kind of
ignited a movement. I called

31
00:02:15.920 --> 00:02:17.780
it a movement because I
mean, I, I think that,

32
00:02:18.230 --> 00:02:21.800
you know, I've really been
involved in the last few

33
00:02:21.800 --> 00:02:25.880
years kind of agile and
open source and things like

34
00:02:25.880 --> 00:02:28.190
that. And yeah, those things
are, I would say movements.

35
00:02:28.970 --> 00:02:32.030
So we're looking at that
happening in the dotnet space

36
00:02:32.030 --> 00:02:37.190
at innovation happening around agile
open source web 2.0 open

37
00:02:37.190 --> 00:02:41.150
ID, you know, exciting things.
And I do think there

38
00:02:41.150 --> 00:02:45.710
is a movement. If you
look at conferences I've spoken

39
00:02:45.710 --> 00:02:49.760
at dev teach, for example,
that tracks that the agile

40
00:02:49.760 --> 00:02:53.750
track gets bigger and bigger
every year. And it's gotten

41
00:02:53.750 --> 00:02:55.550
to the point where it's
kind of standing remotely. So

42
00:02:55.550 --> 00:02:58.730
there does, you know, in
a very literal sense seem

43
00:02:58.740 --> 00:03:02.530
to be movement or trend
towards that. So largely that's

44
00:03:02.530 --> 00:03:05.500
what we're saying. And when
we say movement, we're saying

45
00:03:05.500 --> 00:03:09.190
there's, you know, guys gathering
up, meeting up and gals

46
00:03:09.280 --> 00:03:11.890
and gals. Yeah. Yeah. We
want to encourage more of

47
00:03:11.890 --> 00:03:14.400
that. Yeah. You got to,
we had two buzzwords here.

48
00:03:14.400 --> 00:03:18.240
We've called alt alt.net. <inaudible>
dot net. Yeah. And we've

49
00:03:18.240 --> 00:03:23.040
got agile and you know,
as, as with all labels,

50
00:03:23.040 --> 00:03:24.900
one wants to examine them
to see if this is

51
00:03:24.900 --> 00:03:27.540
the best word to describe
that thing. Yeah. So there's

52
00:03:27.540 --> 00:03:29.670
two things I want to
dig in there. First agile.

53
00:03:29.910 --> 00:03:32.010
Some people feel that agile
is just, you know, it's,

54
00:03:32.010 --> 00:03:34.170
it's the roll up of
things like extreme programming, pair

55
00:03:34.170 --> 00:03:37.410
programming and all those things.
It's agile practitioning, it's scrum.

56
00:03:38.490 --> 00:03:40.410
Some people need in the
large enterprise think that agile

57
00:03:40.410 --> 00:03:43.470
is just an excuse to
be sloppy in one's project

58
00:03:43.470 --> 00:03:47.280
management. What does agile, Well,
let me first kind of,

59
00:03:48.120 --> 00:03:50.760
kind of say that I
think agile just kind of

60
00:03:50.760 --> 00:03:54.270
adopting it on a, it's
a process, right? It's a

61
00:03:54.270 --> 00:03:58.350
software development process whereby we're
going to start delivering business

62
00:03:58.350 --> 00:04:00.510
value from day one and
by day one, I mean,

63
00:04:00.510 --> 00:04:03.600
iteration one. So two weeks,
three weeks, one week, whatever

64
00:04:03.600 --> 00:04:05.940
it is, the goal is
that we're not going to

65
00:04:05.940 --> 00:04:09.210
sit down and design a
big architect, a big, you

66
00:04:09.210 --> 00:04:12.740
know, piece of software, the
grand design right now, we're,

67
00:04:12.740 --> 00:04:16.650
we're not rolling Howard work
cell, right? We are simply

68
00:04:16.680 --> 00:04:19.170
letting that design evolve or
more tending a garden than

69
00:04:19.170 --> 00:04:25.230
building a skyscraper. So that
is a hard thing to

70
00:04:25.230 --> 00:04:28.770
do. There's a skyscraper to
be built. Then, you know,

71
00:04:28.800 --> 00:04:31.680
agile may not be appropriate
for you. I would say,

72
00:04:31.680 --> 00:04:34.230
you know, safety, critical systems
is one Ben, one thing

73
00:04:34.230 --> 00:04:36.720
that have come under fire
as far as agile, not

74
00:04:36.720 --> 00:04:41.400
necessarily suiting that most business
applications though, however large can

75
00:04:41.400 --> 00:04:44.640
benefit from this approach. It
gets hard when you want

76
00:04:44.640 --> 00:04:46.380
to scale it and get
up to, you know, lots

77
00:04:46.380 --> 00:04:48.480
and lots of people. But
there's certainly presses For that

78
00:04:48.600 --> 00:04:50.490
is the scale. The number
of P is the issue

79
00:04:50.490 --> 00:04:52.380
of scale, the number of
people or the size and

80
00:04:52.380 --> 00:04:55.050
complexity and the breadth of
the application. I think that

81
00:04:55.050 --> 00:04:57.480
size and breadth of the
application will drive the number

82
00:04:57.480 --> 00:05:00.540
of people. Right. But you
know, in a large kind

83
00:05:00.540 --> 00:05:04.560
of component oriented or service
oriented application, there's a lot

84
00:05:04.560 --> 00:05:06.840
to deliver to get something
off the ground, or you're

85
00:05:06.840 --> 00:05:09.630
doing a big rewrite. There's
a lot to go. So

86
00:05:09.960 --> 00:05:13.050
I think we're agile has
come under fire. Is people

87
00:05:13.050 --> 00:05:14.820
just kind of adopting it
and saying, Oh yeah, we're

88
00:05:14.820 --> 00:05:18.090
doing agile. And it's really
a year long, two year

89
00:05:18.090 --> 00:05:20.850
long, got to get coaches
in there. It's an investment.

90
00:05:20.850 --> 00:05:24.000
It's a, maybe it's just
as hard to do as

91
00:05:24.000 --> 00:05:28.590
waterfall. And yeah, you can
be successful with waterfall. I

92
00:05:28.590 --> 00:05:32.160
mean, that's certainly a possibility
and I, you know, I

93
00:05:32.160 --> 00:05:36.000
I've been on successful waterfall
projects, but I think there's

94
00:05:36.000 --> 00:05:40.110
a huge, huge advantage to
not doing, you know, not

95
00:05:40.110 --> 00:05:43.200
doing infrastructure for two weeks
to two months, three months,

96
00:05:43.230 --> 00:05:44.640
you know, and then, Oh,
then we'll get to the

97
00:05:44.640 --> 00:05:47.580
business value. The hard part
of the application is the

98
00:05:47.580 --> 00:05:50.880
domain that you're working on.
And you know, that leads

99
00:05:50.880 --> 00:05:54.060
us kind of down another
domain driven design or domain

100
00:05:54.060 --> 00:05:55.710
specific way we should do
that. We should do a

101
00:05:55.710 --> 00:05:58.880
thing on the yeah. And
that's, you know, these are

102
00:05:58.880 --> 00:06:01.610
kind of the topics in
authentic. So to bring your

103
00:06:01.610 --> 00:06:07.220
question around full circle, alternate
agile, it isn't just agile.

104
00:06:07.280 --> 00:06:09.650
Right? Of course not agile.
Isn't a silver bullet. There

105
00:06:09.650 --> 00:06:13.550
are no silver bullets, right.
Fred Brooks. But there certainly

106
00:06:13.550 --> 00:06:15.800
is actually he's, he's the
uncle of a buddy of

107
00:06:15.800 --> 00:06:17.800
mine. Really? Yeah. That guy
went to high school with

108
00:06:17.800 --> 00:06:20.350
his uncles. Fred Brooks. Do
you just chill with Fred

109
00:06:20.350 --> 00:06:22.960
Brooks at barbecue? I don't,
but I, I, but you

110
00:06:22.960 --> 00:06:25.810
know, the whole six degrees
of separation, I am comforted

111
00:06:26.020 --> 00:06:28.090
by the fact that I
am one degree of separation

112
00:06:28.090 --> 00:06:29.830
from him. That's cool. If
I needed to get, if

113
00:06:29.830 --> 00:06:32.350
I needed to get him
an urgent note, I wouldn't

114
00:06:32.350 --> 00:06:34.210
have to go. So I
would have to use LinkedIn.

115
00:06:34.420 --> 00:06:36.190
And that makes me feel
good about myself. You do

116
00:06:36.190 --> 00:06:38.890
show notes, right? What's that
you do show notes like,

117
00:06:39.070 --> 00:06:40.900
Oh yeah. We'll put things
in the notes. So you

118
00:06:40.900 --> 00:06:45.010
should link to the Fred
Brooks did a, a podcast

119
00:06:45.010 --> 00:06:47.650
that oops, no way conference
yet. And he's a really

120
00:06:47.650 --> 00:06:50.770
interesting thing about where agile
breaks down large, you know,

121
00:06:51.130 --> 00:06:53.770
That's fantastic for Fred Brooks
of course, author of the

122
00:06:53.770 --> 00:06:56.700
mythical man month. Yeah. It's
a canonical, you know, it's

123
00:06:56.710 --> 00:06:59.440
primary work I think in
our industry. Yeah. But it's

124
00:06:59.440 --> 00:07:01.720
a great podcast is a
very controversial topic. I don't

125
00:07:01.720 --> 00:07:05.050
know if I fully agree,
but definitely worth getting all

126
00:07:05.050 --> 00:07:09.340
angles. So yeah, the alternate
thing totally about considering these

127
00:07:09.340 --> 00:07:14.110
topics and just innovating, innovating
on dotnet pushing it to

128
00:07:14.110 --> 00:07:16.570
the edge, helping each other
get better. So this is

129
00:07:16.570 --> 00:07:18.310
interesting because when this term
came out, I think I

130
00:07:18.310 --> 00:07:20.710
posted on your, most of
the comment on your post,

131
00:07:20.720 --> 00:07:24.100
where I worked at Karelian
this, you know, last year

132
00:07:24.100 --> 00:07:26.650
in April. And I was
like, why is this alternative?

133
00:07:26.740 --> 00:07:29.080
Because I was working at
a company that was using

134
00:07:29.410 --> 00:07:32.920
subversion and cover and unit
and dock before it went

135
00:07:32.920 --> 00:07:35.890
away. And you know, we
were doing what we could

136
00:07:35.890 --> 00:07:38.740
do to get the work
done. We were doing it.

137
00:07:38.740 --> 00:07:41.380
We were moving from waterfall
to scrum, right. For our,

138
00:07:41.860 --> 00:07:44.230
it was Scrummerfall for a
little while there, but we

139
00:07:44.230 --> 00:07:47.320
went to a scrum process
and I thought it was

140
00:07:47.320 --> 00:07:49.480
very pragmatic. And I was,
I was a huge fan

141
00:07:49.480 --> 00:07:52.480
of the pragmatic programmer guys.
So when you said alt.net,

142
00:07:52.480 --> 00:07:54.700
there was a big discussion
about, is this word divisive

143
00:07:54.700 --> 00:07:58.090
because it's basically saying screw
you to Microsoft. What do

144
00:07:58.090 --> 00:08:00.100
you think about that? Well,
I think, I think over

145
00:08:00.100 --> 00:08:03.610
the last, my hope is,
and my sense, and I

146
00:08:03.610 --> 00:08:06.910
may be disconnected. I'll allow
that as a possibility. But

147
00:08:06.910 --> 00:08:10.480
I think my sense is
that the alternative has become

148
00:08:10.480 --> 00:08:15.790
an alternative alternative in as
opposed to alternative to. So

149
00:08:15.790 --> 00:08:18.670
we had a little leadership
summit out in New York city

150
00:08:19.150 --> 00:08:22.630
in the winter. We had
Martin Fowler out there. He

151
00:08:22.630 --> 00:08:25.360
made a really good point.
He said, and it kind

152
00:08:25.360 --> 00:08:27.670
of clicked for me. And
I had been thinking this,

153
00:08:27.670 --> 00:08:30.340
but you know, Nobody follows
through what she thought was

154
00:08:30.340 --> 00:08:33.490
great because Martin will take
whatever you were thinking. And

155
00:08:33.490 --> 00:08:35.200
you've been ruminating and trying
to write that blog and

156
00:08:35.200 --> 00:08:37.450
he'd just nail it down
to like two sentences. Exactly.

157
00:08:37.510 --> 00:08:40.510
Yeah. The chase. And he
said, look, we're working on

158
00:08:40.510 --> 00:08:44.080
the.net platform. We're all, you
know, multi-platform developers here. We

159
00:08:44.080 --> 00:08:46.390
work on various things at
various times, but in the

160
00:08:46.400 --> 00:08:50.410
dominant space, let's get some
innovation happening. Let's start to

161
00:08:50.410 --> 00:08:52.690
bleed in other ideas, let's
start to, you know, you

162
00:08:52.690 --> 00:08:55.560
look at the work that
guys like Jim Hagan, John Lamb

163
00:08:55.560 --> 00:08:58.440
are doing that's to me
an alternative. Now we can

164
00:08:58.440 --> 00:09:00.960
program in Python in a
very real way. It is

165
00:09:00.960 --> 00:09:03.990
it's all on the inside.
Yeah. So it, I think

166
00:09:03.990 --> 00:09:06.630
we've kind of come to
terms a little bit with

167
00:09:06.630 --> 00:09:09.750
the whole anti Microsoft riff.
It's not at all about

168
00:09:09.750 --> 00:09:15.240
that. We're certainly getting huge
evolvement from Microsoft people guys

169
00:09:15.240 --> 00:09:18.140
like Josh Holmes on the
ag side have really, You

170
00:09:18.140 --> 00:09:21.530
know, he is an architecture
evangelist for that, Sorry, Microsoft

171
00:09:21.530 --> 00:09:23.690
events. So I feel like
compelled to use acronyms. You

172
00:09:23.690 --> 00:09:25.160
know, I just, there's so
many people who are listening

173
00:09:25.160 --> 00:09:27.650
in other countries who may
not necessarily speak English in

174
00:09:27.650 --> 00:09:30.290
any time we use a,
a TLA. I gotcha. We

175
00:09:30.300 --> 00:09:32.630
gotta tell them that means
three letter acronym. Right. So,

176
00:09:32.630 --> 00:09:35.450
so we've gotten so much
support and we, Scott Guthrie, you

177
00:09:35.450 --> 00:09:38.180
know, Scott's the man, you
know, and from guys like

178
00:09:38.180 --> 00:09:41.600
yourself, I mean, there's been
a big at first. It

179
00:09:41.600 --> 00:09:43.700
was a little, you know,
what are these guys all

180
00:09:43.700 --> 00:09:45.650
about? But now I think
it's just kind of, Because

181
00:09:45.650 --> 00:09:48.200
you want to know what
their alternative, I mean, are

182
00:09:48.200 --> 00:09:51.110
they coming to the <inaudible>
Microsoft? I guess me, I

183
00:09:51.110 --> 00:09:54.110
guess that's why I'm them
now, am I coming to

184
00:09:54.110 --> 00:09:56.540
all.net conference to crush you?
You know, is this an

185
00:09:56.570 --> 00:09:59.240
uprising, you know, where the
spark of a spark of

186
00:09:59.240 --> 00:10:03.440
all.net turns into the flames
of rebellion? No, I don't

187
00:10:03.440 --> 00:10:05.300
think so. No, No, not
at all. I mean, I

188
00:10:05.300 --> 00:10:07.310
just want to get stuff
done. You know, I I've

189
00:10:07.310 --> 00:10:09.080
said this before, whether I
worked for Microsoft or whether

190
00:10:09.080 --> 00:10:11.090
I work on my own,
I just like making good

191
00:10:11.090 --> 00:10:13.520
software and I want to
feel good when I'm doing

192
00:10:13.520 --> 00:10:16.340
it. And if a tool
feels yucky, yeah. That's such

193
00:10:16.340 --> 00:10:19.100
a sophisticated word and I
won't use it. Like we

194
00:10:19.100 --> 00:10:20.960
ended up using log for
net because it was just

195
00:10:21.170 --> 00:10:26.280
effortlessly. One log is perfect.
So I used it And,

196
00:10:26.280 --> 00:10:28.850
and that's exactly. I mean,
it's, it's great. It's great

197
00:10:28.850 --> 00:10:31.070
to see like the patterns
and practices people. Thank you,

198
00:10:31.070 --> 00:10:35.060
sir. Come out with something
like unity, it's an alternative

199
00:10:35.060 --> 00:10:37.220
to an open source thing.
Right. That's cool. And they

200
00:10:37.220 --> 00:10:40.670
work and we should have
as many choices as possible.

201
00:10:40.670 --> 00:10:43.370
We should also be taking
inspiration from other communities such

202
00:10:43.370 --> 00:10:46.070
as you know, we mentioned
agile, but why aren't we

203
00:10:46.070 --> 00:10:47.840
looking at Ruby on rails?
Why aren't we looking at

204
00:10:47.840 --> 00:10:50.480
the Ruby community? Why aren't
we looking at, you know,

205
00:10:50.510 --> 00:10:54.290
web 2.0, what's going on?
We just launched Shea website,

206
00:10:54.350 --> 00:10:57.860
all.net.org. It's kind of an
asinine Earl to say out

207
00:10:57.860 --> 00:11:05.360
loud, All.net.org all the time
<inaudible> period org. Okay. And

208
00:11:06.470 --> 00:11:08.420
I developed that on rails.
I wanted to have a

209
00:11:08.420 --> 00:11:11.510
basis of comparison or looking
at MVC. I wanted to

210
00:11:11.510 --> 00:11:14.840
be able to contribute to
NBC. And you know, we

211
00:11:14.840 --> 00:11:18.440
also use open ID there,
exclusively love open-end D yeah.

212
00:11:18.470 --> 00:11:21.500
I love it too. But
interestingly enough, even in this

213
00:11:21.500 --> 00:11:24.530
kind of circle of people
that consider themselves, you know,

214
00:11:25.550 --> 00:11:28.750
looking outwards, always there was
flak. Why would you choose

215
00:11:28.880 --> 00:11:32.090
Microsoft? Not Microsoft people.net. People
were like, what's happening. Yeah.

216
00:11:32.330 --> 00:11:34.610
This is annoying that I
couldn't just sign on with

217
00:11:34.610 --> 00:11:36.170
a user And password. Well,
Oh man. I've had an

218
00:11:36.170 --> 00:11:38.660
open ID for like, Yeah,
yeah, no, I've got it

219
00:11:38.660 --> 00:11:41.870
hooked up to my blog
and it's clearly the way

220
00:11:41.870 --> 00:11:44.660
things should, should go or
it's a very cool thing.

221
00:11:44.660 --> 00:11:47.330
So, you know, we try
to find ways to feed

222
00:11:47.330 --> 00:11:49.400
two birds with one seed.
We try to find ways

223
00:11:49.400 --> 00:11:54.280
to, you know, introduce these
ideas into what can be

224
00:11:54.730 --> 00:11:58.950
A kind of homogenous culture,
you know, Do you know

225
00:11:58.950 --> 00:12:03.510
how to build web 2.0
Ajax applications with web 1.0

226
00:12:03.510 --> 00:12:08.100
components, right? You just can't
in order to have next

227
00:12:08.100 --> 00:12:11.880
generation web apps, you need
next generation components. And that's

228
00:12:11.880 --> 00:12:14.550
exactly what our friends at
Tellerik have for you. Their

229
00:12:14.550 --> 00:12:19.020
upcoming product code name, rad
controls Prometheus's is a huge

230
00:12:19.050 --> 00:12:22.200
pack of web controls built
on top of Microsoft ASP,

231
00:12:22.200 --> 00:12:27.120
net Ajax, which will add
previously impossible performance and interactivity

232
00:12:27.510 --> 00:12:29.880
to your next project. Just
listen to this. The new

233
00:12:29.880 --> 00:12:33.990
controls mirror, the ASP net
Ajax API. So development is

234
00:12:33.990 --> 00:12:38.310
straight forward. Client scripts are
shared. So loading time is

235
00:12:38.310 --> 00:12:40.920
pretty much instant. And if
you just set a couple

236
00:12:40.920 --> 00:12:43.500
of properties, you'll be able
to automatically bind to web

237
00:12:43.500 --> 00:12:47.400
services for even more efficient
operation. After all the facts

238
00:12:47.400 --> 00:12:50.310
speak for themselves, the new
rad editor for ASP net

239
00:12:50.310 --> 00:12:54.510
Ajax loads up to four
times faster than before. Similarly,

240
00:12:54.510 --> 00:12:58.620
rad grid handles thousands of
records in mere milliseconds. But

241
00:12:58.620 --> 00:13:01.620
again, it's best to try
for yourself visit <inaudible> dot

242
00:13:01.620 --> 00:13:06.210
com slash ASP net Ajax,
and download a trial. And

243
00:13:06.210 --> 00:13:10.170
don't forget to thank them
for supporting handsome. That's the

244
00:13:10.170 --> 00:13:12.540
issue of, of choice is
really interesting because there are

245
00:13:12.540 --> 00:13:15.740
those that really like to
be, to be handed the,

246
00:13:15.740 --> 00:13:18.720
the option like here's visual
source safe, right? This is

247
00:13:18.720 --> 00:13:22.350
how we do source control
enjoy. And then they become

248
00:13:22.350 --> 00:13:25.050
flummoxed when there's so many
choices. And I keep going

249
00:13:25.050 --> 00:13:27.780
back and forth on this.
Like I, for awhile, I

250
00:13:27.780 --> 00:13:30.540
wanted a mocking framework. That
was the one true mocking

251
00:13:30.540 --> 00:13:32.850
framework, right. And then I
woke up one day and

252
00:13:32.850 --> 00:13:35.460
there was tight mock rhino,
mock and mock, and now

253
00:13:35.730 --> 00:13:40.560
mock with a hard cue
from, from Daniel Catalino. And

254
00:13:41.010 --> 00:13:42.990
I finally have come to
terms with the fact that

255
00:13:43.290 --> 00:13:46.050
I want to be able
to choose from a half

256
00:13:46.050 --> 00:13:49.260
dozen ORMs object, relational mappers.
I want to be able

257
00:13:49.260 --> 00:13:53.160
to choose from a half
dozen mocking frameworks and what

258
00:13:53.160 --> 00:13:55.500
a cool thing that the
community has gotten together and

259
00:13:55.500 --> 00:13:58.890
made this stuff actually. Inter-operate
right. And then now of

260
00:13:58.890 --> 00:14:04.080
course, with MVC internally, they're
constantly angsting over angst and

261
00:14:04.080 --> 00:14:06.420
they're just very concerned that
it needs to work with

262
00:14:06.420 --> 00:14:08.310
all these different things, you
know, all the different testing

263
00:14:08.310 --> 00:14:11.670
frameworks and all the different.
Yeah. I mean, I think,

264
00:14:12.030 --> 00:14:14.220
I think Phil's the right
guy for that job. I

265
00:14:14.220 --> 00:14:19.170
mean, he's definitely feel hack
is totally in the community

266
00:14:19.170 --> 00:14:21.720
has been for a long
time, big, big time blogger,

267
00:14:22.530 --> 00:14:25.020
any, you know, it's really
encouraging to see him kind

268
00:14:25.020 --> 00:14:28.020
of scrutinizing over know let's
face it. The all tight

269
00:14:28.020 --> 00:14:32.070
net community is a, there's
no shortage of opinions there,

270
00:14:32.190 --> 00:14:34.680
you know, and they are
vocal and it is kind

271
00:14:34.680 --> 00:14:37.380
of a community of leaders.
They are the people out

272
00:14:37.380 --> 00:14:40.260
there speaking, they're all alpha
people. They are. I mean,

273
00:14:40.260 --> 00:14:44.400
and, and you know, that's,
that's interesting. That's great. But

274
00:14:44.520 --> 00:14:46.800
that brings with it. You,
you need a certain tough

275
00:14:46.800 --> 00:14:49.830
skin kind of, you know,
quality we're, we're hoping that

276
00:14:49.830 --> 00:14:53.210
we can kind of reduce
the tension There, but yeah,

277
00:14:53.270 --> 00:14:55.570
you reduced the tension. You
reduced the pain. No, it's

278
00:14:55.570 --> 00:14:57.940
so loud though. Sometimes I
think that people who jump

279
00:14:57.940 --> 00:15:00.910
in to the Yahoo group
on all.net and people who

280
00:15:00.910 --> 00:15:03.250
kind of kind of get
involved, find it to be

281
00:15:03.250 --> 00:15:06.160
a little off putting, they,
they feel that, that they

282
00:15:06.160 --> 00:15:08.590
don't understand the three, that
three letter acronyms. And maybe

283
00:15:08.590 --> 00:15:12.010
they're not doing agile. I
always use this canonical person.

284
00:15:12.010 --> 00:15:13.780
I don't know if this
guy exists, maybe he'll call

285
00:15:13.780 --> 00:15:16.360
me. So David, I always
talk about the chief architect

286
00:15:16.360 --> 00:15:19.570
at the Nebraska department of
forestry. Okay. Right. He's the

287
00:15:19.570 --> 00:15:22.390
guy who's gotta just get
stuff done. He's gonna be,

288
00:15:22.390 --> 00:15:24.280
he's got an access database
and he's trying to get

289
00:15:24.280 --> 00:15:26.530
off that system, but he
wants to do the right

290
00:15:26.530 --> 00:15:31.060
thing. What are the folks
that aren't alpha, alpha people

291
00:15:31.060 --> 00:15:35.190
kind of obnoxious outspoken people
like us for giving her,

292
00:15:35.200 --> 00:15:38.860
putting us into on us.
What do they care about

293
00:15:38.860 --> 00:15:45.340
all.net? I that's a really
good question. I think I

294
00:15:45.340 --> 00:15:49.210
kind of look at Altona
as having two purposes. One

295
00:15:49.210 --> 00:15:51.970
is yes. Innovation is going
to come from the alphas.

296
00:15:51.970 --> 00:15:55.630
It's gonna come from connecting
people in a social network.

297
00:15:55.690 --> 00:15:59.410
And having those people work
on new open source projects

298
00:15:59.410 --> 00:16:02.710
and criticize existing projects, it's
going to work on, you

299
00:16:02.710 --> 00:16:05.320
know, it's going to work
on a level of establishing

300
00:16:05.320 --> 00:16:08.470
a relationship with Microsoft, a
conduit for being able to

301
00:16:08.470 --> 00:16:11.230
talk about that. The second
level it's, you know, our

302
00:16:11.230 --> 00:16:15.580
second area or half of
the pie is that education

303
00:16:15.580 --> 00:16:20.140
thing. Right? How do we
go out and start talking

304
00:16:20.140 --> 00:16:22.690
to people? And I think
the answer is pretty simple.

305
00:16:22.720 --> 00:16:26.830
Get out there, get blogging,
get out there, get speaking.

306
00:16:27.760 --> 00:16:30.610
We're hoping to have a
lot of open spaces, events,

307
00:16:31.060 --> 00:16:32.980
and it's a, it's a,
it's kind of a nascent

308
00:16:32.980 --> 00:16:36.580
young movement. Right. But we're
having one in Seattle that's

309
00:16:36.820 --> 00:16:40.450
maybe a little bit more
insider. It got Closed really

310
00:16:40.450 --> 00:16:43.630
quickly. I felt that a
few minutes after the announcement

311
00:16:43.630 --> 00:16:46.240
happened, the registration was closed.
Cause we'd hit the fire

312
00:16:46.240 --> 00:16:49.120
code limit on what the
room would hold. Yeah. Pretty

313
00:16:49.120 --> 00:16:51.660
much. Well, we're kind of
at the, you know, we're,

314
00:16:51.660 --> 00:16:54.640
we're running this on a
pretty shoestring budget and we're

315
00:16:54.640 --> 00:16:58.360
counting on the, you know,
a digit pen is, is

316
00:16:58.360 --> 00:17:02.290
a, a company in Seattle.
That's, that's kindly giving us

317
00:17:02.290 --> 00:17:04.300
some space and there's a
limit to how many people

318
00:17:04.300 --> 00:17:06.850
we can fit. And we
do, I will say kind

319
00:17:06.850 --> 00:17:09.100
of prime the pump as
far as trying to get

320
00:17:09.490 --> 00:17:12.190
some of the visible people
out there with some great

321
00:17:12.190 --> 00:17:14.980
attendees coming. How many what's
the ratio of? I mean,

322
00:17:15.010 --> 00:17:17.620
there's alphas to folks that
just want to get involved

323
00:17:17.670 --> 00:17:21.010
if it's, so if it's
so nascent, but we're still

324
00:17:21.010 --> 00:17:24.370
filling up 250 people rooms,
how do we get, you

325
00:17:24.370 --> 00:17:26.590
know, Joe public? How do
we get that chief architect

326
00:17:26.590 --> 00:17:28.900
and the Nebraska department of
forestry to get involved If

327
00:17:28.900 --> 00:17:34.150
you can't get in? Yeah.
Well hopefully, I mean management

328
00:17:34.150 --> 00:17:37.360
cliche, number 437, you can
lead a horse to water,

329
00:17:37.390 --> 00:17:39.970
right? Yeah. But I think
they're going to have to

330
00:17:39.970 --> 00:17:42.550
kind of find it on
their own. One of the

331
00:17:42.550 --> 00:17:44.980
things we talked about in
New York city is having a

332
00:17:44.980 --> 00:17:49.560
deeper level of engagement with
the evangelism people, you know,

333
00:17:49.560 --> 00:17:51.980
and like the Microsoft Exactly's
and stuff. Exactly. How can

334
00:17:51.980 --> 00:17:55.910
we piggyback onto product launches
to provide a follow on

335
00:17:55.910 --> 00:17:58.460
that's more practice value. Yeah.
Yeah. That's a good point.

336
00:17:58.490 --> 00:18:00.560
I was here at mix
and we're here at mix

337
00:18:00.560 --> 00:18:03.440
right now and I did
a talk. What was a

338
00:18:03.440 --> 00:18:05.930
side talk sometimes when this
many Microsoft people come together,

339
00:18:06.110 --> 00:18:07.460
we'll take a group of
them and have a meeting

340
00:18:07.460 --> 00:18:09.350
because it's like, how often
do you get people from

341
00:18:09.350 --> 00:18:12.290
all over the world in
one room? And you know,

342
00:18:12.290 --> 00:18:14.930
there was some talk about
all.net, but there wasn't the

343
00:18:14.930 --> 00:18:18.020
formal, you know, two hour,
here's everything you need to

344
00:18:18.020 --> 00:18:20.630
know about this movement. Right.
Take it to the people.

345
00:18:21.680 --> 00:18:23.690
Well, I have a couple
of projects that we're, we're

346
00:18:23.690 --> 00:18:26.660
considering a, you know, this
is all volunteer and yeah.

347
00:18:26.720 --> 00:18:29.360
You know, I'm, I'm day
to day running a software

348
00:18:29.360 --> 00:18:31.310
startup and got a lot
of pokers in the fire.

349
00:18:31.490 --> 00:18:33.920
So we do what we
can. But I think one

350
00:18:33.920 --> 00:18:36.530
thing we're talking about is
having a, a street kit

351
00:18:36.740 --> 00:18:38.570
where we could go out
there and be like, alright,

352
00:18:38.600 --> 00:18:41.480
here's your autonomous data dump.
Anyone can kind of take

353
00:18:41.480 --> 00:18:43.340
it, show you what we're
about. And the other thing

354
00:18:43.340 --> 00:18:46.820
we're probably going to bring
back up when we, when

355
00:18:46.820 --> 00:18:51.290
we meet out in Seattle
or Redmond actually in April

356
00:18:51.500 --> 00:18:53.930
is the manifesto. Right. It
would be nice to have

357
00:18:53.930 --> 00:18:56.180
a one sheet. Do we
stand for exactly? What do

358
00:18:56.180 --> 00:18:58.880
we stand for? Are you
in, are you out? And

359
00:18:59.030 --> 00:19:02.030
what is, what's a lightweight
protocol for, you know, engaging

360
00:19:02.030 --> 00:19:04.670
in being apart Participating. Yeah.
So, so assuming that there's

361
00:19:04.670 --> 00:19:06.590
still a few people listening
to this podcast, let's talk

362
00:19:06.590 --> 00:19:09.050
about some concrete stuff towards
the end here, sir. What

363
00:19:09.050 --> 00:19:14.180
are some of the technologies
that, that all.net people use?

364
00:19:14.390 --> 00:19:17.990
What are those benefits? What,
what gaps in Microsoft stack

365
00:19:18.050 --> 00:19:22.490
are those technologies filling? I
would take it a step

366
00:19:22.490 --> 00:19:25.070
back and say principles and
practices are kind of, we

367
00:19:25.320 --> 00:19:26.720
Let's start there. And then
I do want to get

368
00:19:26.720 --> 00:19:28.190
to tooling though, because I
want people to know what

369
00:19:28.310 --> 00:19:31.490
projects they can check on.
I think you're, you're kind

370
00:19:31.490 --> 00:19:36.560
of basic, Oh, Oh, principles,
single responsibility, principle, object, orientation,

371
00:19:36.890 --> 00:19:41.810
object, oriented principles, you know,
open-close principle last cough, you

372
00:19:41.810 --> 00:19:46.250
know, substitution principle, all of
these things, how, you know,

373
00:19:46.250 --> 00:19:48.410
does this affect the design
of an object system? And

374
00:19:48.410 --> 00:19:51.020
let's face it, most systems
are object systems in this

375
00:19:51.020 --> 00:19:55.070
day and age. So that's
certainly one thing we're considering,

376
00:19:55.220 --> 00:19:58.610
you know, dependency, injection, you
know, and that is a

377
00:19:58.640 --> 00:20:02.540
direct side effect of just
testability, maintainability quality. And I

378
00:20:02.540 --> 00:20:06.080
think that most people in
this group identify themselves as

379
00:20:06.080 --> 00:20:12.410
kind of crafts men, craftswomen
craftspeople people. And I think

380
00:20:12.560 --> 00:20:14.870
that's where it kind of
all Stems from. So as

381
00:20:14.870 --> 00:20:18.650
far as tools, the tools
would That kind of common

382
00:20:18.650 --> 00:20:20.810
value system. So all of
these patterns that you just

383
00:20:20.810 --> 00:20:24.560
rattled off and particularly, you
know, dependency injection, also Colin

384
00:20:24.560 --> 00:20:29.270
version of control are our
principles for creation of good

385
00:20:29.270 --> 00:20:33.560
software that allow it to
be more testable, separate concerns

386
00:20:33.560 --> 00:20:37.100
between systems. These are our
patterns that are, that are

387
00:20:37.100 --> 00:20:40.220
intuitive people. These are kind
of, you know, 20, 30

388
00:20:40.220 --> 00:20:43.820
years of oops law, an
object oriented conference, it talks

389
00:20:43.820 --> 00:20:46.100
about this stuff. It seems
like the number of people

390
00:20:46.100 --> 00:20:48.760
who know those things, you
know, in the single digit

391
00:20:48.760 --> 00:20:52.180
percentages. Yeah. So yeah, I
think you're right. That there's

392
00:20:52.180 --> 00:20:55.300
the, the education about those
principles. And then once someone

393
00:20:55.390 --> 00:20:59.110
values a principle, then they'll
go looking for a tool.

394
00:20:59.520 --> 00:21:03.690
Absolutely. Absolutely. And tool-wise, I
mean, it runs the gamut.

395
00:21:03.720 --> 00:21:06.270
I mean, you, you obviously
have your containers out there

396
00:21:06.270 --> 00:21:11.130
which enable this inversion of
control situation castle. Windsor's a

397
00:21:11.130 --> 00:21:15.660
popular one. You know, you
have all of your there's

398
00:21:15.660 --> 00:21:18.210
unity there Let's use, let's
use that as an example.

399
00:21:18.210 --> 00:21:20.700
We could probably do a
tooling podcast at some point,

400
00:21:20.700 --> 00:21:23.460
but let's talk about why
do I care about inversion

401
00:21:23.460 --> 00:21:26.010
control as a principal? What
value does that bring me

402
00:21:26.370 --> 00:21:28.020
that would then lead me
to go find one of

403
00:21:28.020 --> 00:21:31.350
these, these tools Mainly it's
going to bring you the

404
00:21:31.350 --> 00:21:35.790
ability to control the dependencies
in a given class and

405
00:21:35.790 --> 00:21:39.270
give that class at test
time, a fake object or

406
00:21:39.270 --> 00:21:42.330
a mock object. Right? So
then that object can carry

407
00:21:42.330 --> 00:21:47.250
expectations. So you can write
tests that very cleanly isolate

408
00:21:47.490 --> 00:21:49.830
one particular class. So if
I want to paraphrase, if

409
00:21:49.830 --> 00:21:51.480
I'm going to use a
class, let's say I'm going

410
00:21:51.480 --> 00:21:56.820
to use a class that
represents a, a service that

411
00:21:56.820 --> 00:22:00.240
calls flicker. Sure. And I'm
the user of that. So

412
00:22:00.240 --> 00:22:02.430
I'm writing some code and
I'm, and I usually say,

413
00:22:02.790 --> 00:22:05.730
you know, flicker service F
equals new flicker service. That's

414
00:22:05.730 --> 00:22:08.610
how we've been making objects
forever. And in that chat,

415
00:22:08.610 --> 00:22:10.830
in that sense, I'm in
control. I have asked for

416
00:22:10.830 --> 00:22:14.250
a concrete thing. If I
understand correctly, then inversion of

417
00:22:14.250 --> 00:22:17.250
control is flipping that on
its head. And I'm saying

418
00:22:17.250 --> 00:22:19.800
that I don't really care
if I get the flicker

419
00:22:19.800 --> 00:22:22.890
service, but I don't want
something that looks like a

420
00:22:22.890 --> 00:22:25.110
flicker service. Right. And I
don't really care where it

421
00:22:25.110 --> 00:22:27.720
comes from. And I really
don't want to be in

422
00:22:27.720 --> 00:22:31.530
control of the creation of
that, that object and the

423
00:22:31.530 --> 00:22:34.350
dependencies that that object may
have there. Is that correct?

424
00:22:34.470 --> 00:22:37.020
Sure. Your object now is
starting to become more of

425
00:22:37.020 --> 00:22:40.950
a component. Okay. And we're
getting to that distinction between

426
00:22:40.950 --> 00:22:44.070
what's a class object, what's
a component and a component

427
00:22:44.070 --> 00:22:48.030
we'll specify what it needs
from its environment, its container,

428
00:22:48.120 --> 00:22:51.780
right? The benefit of that
is reuse clearly, right? So

429
00:22:51.780 --> 00:22:58.350
you get testability reuse and
replaceability. So every class essentially

430
00:22:58.350 --> 00:23:02.400
is a strategy. Every class
can the strategy pattern. Exactly.

431
00:23:02.400 --> 00:23:05.160
So every, you know, that
strategy in a test scenario

432
00:23:05.370 --> 00:23:08.910
is going to be a
mock. So if I wanted

433
00:23:08.910 --> 00:23:12.900
to test my flicker service,
I could mock out one

434
00:23:12.900 --> 00:23:15.720
aspect of its dependencies. Sure.
Perhaps the way that it

435
00:23:15.720 --> 00:23:18.510
calls out onto the wire,
if flicker was down, I

436
00:23:18.510 --> 00:23:21.270
still want my test to
pass. Right. But not other

437
00:23:21.270 --> 00:23:24.540
aspects. So then I could
go into this container. We

438
00:23:24.540 --> 00:23:26.970
keep using these kind of
vague terms. So then let's

439
00:23:26.970 --> 00:23:28.860
talk about tooling. Then I
would go and find which

440
00:23:28.860 --> 00:23:31.620
it dependency, injection container that
I want. So I go

441
00:23:31.620 --> 00:23:34.590
get castle Windsor, which is
the name of a dependency

442
00:23:34.590 --> 00:23:36.870
injection container and install it
in my machine. And I

443
00:23:36.870 --> 00:23:42.240
do what You start writing
code. I mean, you start

444
00:23:42.240 --> 00:23:45.320
writing your solution, but you
break your classes up into

445
00:23:45.830 --> 00:23:50.420
very single responsibility type classes.
So single responsibility, a class

446
00:23:50.420 --> 00:23:52.850
should have one and only
one reason to change a

447
00:23:52.850 --> 00:23:54.680
better way to put it
a class should have one

448
00:23:54.680 --> 00:23:58.640
responsibility and one reason for
living. Exactly. So you have

449
00:23:58.640 --> 00:24:02.330
lots and lots of classes
and you start thinking about

450
00:24:02.420 --> 00:24:06.650
the problem domain first, and
the benefit there is you

451
00:24:06.650 --> 00:24:10.130
can worry about the infrastructure
later. I mean, infrastructure happens.

452
00:24:10.130 --> 00:24:12.740
It's a really important thing
we have to think about,

453
00:24:12.770 --> 00:24:15.920
you know, are we communicating
to exchange server? Are we

454
00:24:15.920 --> 00:24:18.950
communicating to SQL server? Are
we communicating to some RSS

455
00:24:18.950 --> 00:24:22.400
feeds somewhere, but that you
don't want to let that

456
00:24:22.400 --> 00:24:24.590
hang you up necessarily. Right?
You don't want that to

457
00:24:24.590 --> 00:24:28.100
be your first thing. So
by using a container, you

458
00:24:28.100 --> 00:24:29.750
obviously get all that. So
I mean, as far as

459
00:24:29.750 --> 00:24:32.450
the workflow goes, yeah, pick
your container. You're going to

460
00:24:32.450 --> 00:24:34.850
be writing XML. That's how
all this stuff is glued

461
00:24:34.850 --> 00:24:37.610
up. So you can say
my flicker service depends on

462
00:24:37.610 --> 00:24:41.720
the, you know, I flicker
API. So that's the point

463
00:24:41.720 --> 00:24:44.900
when you, when you tie
up the, the need, I

464
00:24:44.900 --> 00:24:47.240
want something that looks like
a flicker surface, right. To

465
00:24:47.240 --> 00:24:50.960
the concrete. So it's a
separate level of indirection, right?

466
00:24:50.960 --> 00:24:53.330
They always say that any
problem in computer science can

467
00:24:53.330 --> 00:24:56.480
be solved by one additional
layer of indirection. Right? This

468
00:24:56.480 --> 00:25:00.530
is that indirection that literally
hides the new keyword. Yeah.

469
00:25:00.860 --> 00:25:02.990
Yeah. You're I mean you're
as a user of services,

470
00:25:02.990 --> 00:25:06.620
you're abstracting way new sure.
Letting somebody else handle that.

471
00:25:07.070 --> 00:25:10.670
And then the benefits are
that you can plug reuse.

472
00:25:10.730 --> 00:25:14.390
There, there are amazing benefits
to this. For example, you

473
00:25:14.390 --> 00:25:17.540
say, I need this interface,
right? Who's to say, that's

474
00:25:17.540 --> 00:25:22.040
not just written dynamically at
runtime and providing a whole

475
00:25:22.040 --> 00:25:24.770
layer of interception. So when
you call this method, you

476
00:25:24.770 --> 00:25:28.670
can actually get logging outside
of actually having to put

477
00:25:28.670 --> 00:25:31.340
that in line with your
method, things like that. So

478
00:25:31.700 --> 00:25:35.420
what you get from this
approach to software development is

479
00:25:35.420 --> 00:25:38.390
the ability to make decisions
later, you get a certain

480
00:25:38.450 --> 00:25:41.330
agility from your code base
and you can full circle.

481
00:25:41.360 --> 00:25:45.500
Exactly. Exactly. Well, we got
to do a show just

482
00:25:45.680 --> 00:25:47.390
on some of the tooling,
I think at some point.

483
00:25:47.420 --> 00:25:49.400
Absolutely. Well, I really appreciate
you taking the time to

484
00:25:49.400 --> 00:25:51.230
sit down with me here
at the mics. This has

485
00:25:51.230 --> 00:25:53.330
been Scott Hanselman. I've been
talking to Dave Larrabee about

486
00:25:53.330 --> 00:26:02.680
all.net. We'll see you next
week on Hanselman's <inaudible>.

