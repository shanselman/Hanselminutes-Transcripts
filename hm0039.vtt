WEBVTT FILE

1
00:00:12.150 --> 00:00:17.490
From Hanselman, it's calm. It's
Hanselman. It's a weekly discussion

2
00:00:17.490 --> 00:00:21.510
with web developer and technologists.
Scott Hanselman hosted by Carl Franklin.

3
00:00:22.380 --> 00:00:26.340
This is Lawrence Ryan announced in
show number 39. Recorded Monday,

4
00:00:26.370 --> 00:00:32.310
October 30th, 2006. Support for Hanselman it's
just provided by COVID Smith

5
00:00:32.310 --> 00:00:36.420
tools, makers of code Smith,
an extensible template based code

6
00:00:36.420 --> 00:00:40.680
generator for.net. Councilman is listeners
just get $100 off COVID

7
00:00:40.680 --> 00:00:48.180
Smith professional with coupon code
H M 100. online@covidsmithtools.com and

8
00:00:48.180 --> 00:00:52.620
buy slash N software red
carpet subscriptions. The most comprehensive

9
00:00:52.620 --> 00:00:57.240
solution for adding connectivity to
your.net and asp.net applications with

10
00:00:57.240 --> 00:01:04.320
components for every major internet
protocol online@wwwdotnsoftware.com. Support is also

11
00:01:04.320 --> 00:01:09.270
provided by.net developers journal. The
world's leading dotnet developer magazine

12
00:01:09.840 --> 00:01:15.240
online at www dot <inaudible>
dot com. In this episode,

13
00:01:15.240 --> 00:01:22.710
Scott and Carl talk about
identity. Hi, this is Carl Franklin.

14
00:01:22.710 --> 00:01:25.800
You're listening to Hansel minutes.
I'm here with Scott Hanselman.

15
00:01:26.040 --> 00:01:31.500
Hi Scott. How are you,
sir? I density card spaces

16
00:01:31.740 --> 00:01:35.010
is the topic today. Was
that your Sean Connery? Our

17
00:01:35.010 --> 00:01:40.830
dendrite today comrades actually shale
into history with identity 2.0

18
00:01:41.340 --> 00:01:43.440
yeah, dude. This is a
ball about card spaces. Cause

19
00:01:43.440 --> 00:01:47.700
we've been, we've talked. We
talked about doing a.net framework

20
00:01:47.730 --> 00:01:49.740
three O show, but we
all know that the framework's

21
00:01:49.740 --> 00:01:52.740
too big, do it in
a short Hansel minutes. Double

22
00:01:52.740 --> 00:01:54.630
speed, 20 minute podcasts. So
we're going to do it

23
00:01:54.630 --> 00:01:56.640
in chunks. We also know
that it's really not a

24
00:01:56.640 --> 00:02:01.350
framework for three it's kind
of it's a collection of

25
00:02:01.800 --> 00:02:04.530
pillars features. These were the
new features, so we've got

26
00:02:04.530 --> 00:02:07.440
card space. We've got windows
presentation foundation. We've got windows

27
00:02:07.440 --> 00:02:13.380
communication foundation. So Avalon info
card and Indigo Indigo where

28
00:02:13.380 --> 00:02:16.860
the code names. So at
Kirlian, we're really interested in

29
00:02:16.860 --> 00:02:19.200
card space because you know,
we do online banking, big

30
00:02:19.200 --> 00:02:22.320
time and banks are always
getting fished. They're always getting

31
00:02:22.320 --> 00:02:25.440
attacked by people who get
their names and their passwords

32
00:02:25.440 --> 00:02:28.620
stolen. Right? And we encourage
people to have stronger passwords.

33
00:02:28.630 --> 00:02:31.980
We encourage people to have
passphrases right at a space

34
00:02:31.980 --> 00:02:34.410
and have a big long
password. That's like 20, 30

35
00:02:34.410 --> 00:02:37.950
characters long, but these are
still just things that, you

36
00:02:37.950 --> 00:02:40.770
know, that can be stolen
from you. You can be

37
00:02:40.770 --> 00:02:42.900
tortured and they could, you
could give them up. Right.

38
00:02:43.110 --> 00:02:47.430
And generally identity on the
internet is broken. You got

39
00:02:47.430 --> 00:02:50.190
identity theft, there's spoofing and
man in the middle of

40
00:02:50.190 --> 00:02:52.560
things and there's evil malware
that could be running on

41
00:02:52.560 --> 00:02:55.170
your machine. And it's pretty
clear that the username and

42
00:02:55.170 --> 00:02:57.990
password mechanism is overwhelmed. I
mean, just the fact that

43
00:02:57.990 --> 00:03:01.480
we've got password manager programs,
you know, programs with a

44
00:03:01.480 --> 00:03:03.490
super password that are set
up to manage your other

45
00:03:03.490 --> 00:03:07.000
passwords. It's doesn't really work,
right? Yeah. So the whole

46
00:03:07.000 --> 00:03:11.530
idea is what's a better
way to identify both the

47
00:03:11.530 --> 00:03:13.270
user to the site and
the site to the user

48
00:03:14.050 --> 00:03:16.120
because you know, a lot
of times you go to

49
00:03:16.120 --> 00:03:18.340
a site and you don't
know if you trust the

50
00:03:18.340 --> 00:03:20.230
site, maybe it's a blog.
I don't want to go

51
00:03:20.230 --> 00:03:22.030
and sign up on a
blog. I don't know about

52
00:03:22.030 --> 00:03:23.710
you, but I don't want
to sign up with a

53
00:03:23.710 --> 00:03:26.710
blog and give them yet
another username and password just

54
00:03:26.710 --> 00:03:31.350
for the privileges of a
leaving a comment. Exactly. The

55
00:03:31.350 --> 00:03:34.320
less signups I can do
the better. Exactly. So then

56
00:03:34.320 --> 00:03:36.240
we get down to these
kind of main signups and

57
00:03:36.240 --> 00:03:39.180
then of course, passport Microsoft
passport was kind of an

58
00:03:39.180 --> 00:03:41.340
attempt to centralize all of
that. But the problem was,

59
00:03:41.340 --> 00:03:44.550
it was managed by, by
Microsoft. It was, it put

60
00:03:44.550 --> 00:03:45.990
it in, it wasn't the
fact that it was Microsoft,

61
00:03:45.990 --> 00:03:47.520
but it was the fact
that it was a single

62
00:03:47.640 --> 00:03:50.400
entity that will handle it.
They were basically saying, just

63
00:03:50.400 --> 00:03:52.170
give us your username and
password and we'll come up

64
00:03:52.170 --> 00:03:55.110
with a tricky way to
single sign you into all

65
00:03:55.110 --> 00:03:57.630
these different places. We'll keep
a, your credit card number

66
00:03:57.630 --> 00:04:00.540
on file and all your
business information, all your personal

67
00:04:00.540 --> 00:04:03.720
business info, we'll hold all
your stuff. And the response

68
00:04:03.720 --> 00:04:07.590
was a resounding. Yeah, right?
Yeah. Yeah. It worked technically

69
00:04:07.620 --> 00:04:10.740
like I used it for
Expedia and for eBay, and

70
00:04:10.740 --> 00:04:12.090
that was pretty much the
extent of it, but I

71
00:04:12.090 --> 00:04:15.330
just didn't feel comfortable with
it because you know, you

72
00:04:15.330 --> 00:04:18.060
never know. I don't think
that a passport was fished

73
00:04:18.060 --> 00:04:21.300
successfully, but it's easy to
make a site that looks

74
00:04:21.300 --> 00:04:22.650
like the site that you
want to go to. So

75
00:04:22.650 --> 00:04:24.690
fishing is a problem. And
of course we've seen in

76
00:04:25.110 --> 00:04:28.980
Firefox two Oh and an
<inaudible> they've built an anti-phishing

77
00:04:28.980 --> 00:04:31.110
stuff. I mean, there's a
good reason just to install

78
00:04:31.110 --> 00:04:33.060
ice up and right there,
I put <inaudible> on all

79
00:04:33.060 --> 00:04:35.760
my relatives machines. I also
think Scott, before we get

80
00:04:35.760 --> 00:04:37.560
too far away from it,
that one of the reasons

81
00:04:37.560 --> 00:04:40.710
passport failed or, or, you
know, dot named my services

82
00:04:41.280 --> 00:04:44.400
in the is, is what
we're really talking about was

83
00:04:44.400 --> 00:04:47.640
just because of timing. There
was a lot of, you

84
00:04:47.640 --> 00:04:51.060
know, disruption going on security
wise at that time. Yeah.

85
00:04:51.060 --> 00:04:52.680
It was kind of the
end of web 1.0, in

86
00:04:52.680 --> 00:04:54.600
the beginning of web two.
Oh, the bubble occurred and

87
00:04:54.600 --> 00:04:56.400
it was a, it was
a fairly disruptive thing. And

88
00:04:56.400 --> 00:04:59.670
it was not exactly easy,
frankly, to integrate. If you've

89
00:04:59.670 --> 00:05:02.220
ever tried to get a
passport to work, the STK

90
00:05:02.220 --> 00:05:03.510
was a little tricky. And
just when you got it

91
00:05:03.510 --> 00:05:06.840
working, another SDK came out.
Right? So the real issue

92
00:05:06.840 --> 00:05:09.630
here is what the guys
at the card space team

93
00:05:09.660 --> 00:05:11.940
and Nigel watt Lang is
one of the guys that's

94
00:05:11.940 --> 00:05:15.000
got a presentation that I'll
point everyone to is the

95
00:05:15.000 --> 00:05:18.300
idea of identity silo. Hell
right. He had all of

96
00:05:18.300 --> 00:05:20.580
these different silos where you
have an identity at one

97
00:05:20.580 --> 00:05:23.790
place, but you're not trusted
by another, like Amazon's big

98
00:05:23.790 --> 00:05:25.920
and wonderful. And they, they
use my identity for a

99
00:05:25.920 --> 00:05:28.230
number of things. I can
leave reviews and comments. I

100
00:05:28.230 --> 00:05:32.190
can buy stuff, but I
can't use my Amazon identity

101
00:05:32.490 --> 00:05:35.310
or my reputation and use
it somewhere else. So Let's

102
00:05:35.310 --> 00:05:39.060
talk about card space. Okay.
So, so card space is

103
00:05:39.090 --> 00:05:44.070
basically a, an implementation by
Microsoft of an open and

104
00:05:44.130 --> 00:05:49.740
specifically non-proprietary way to represent
identity. It's it's open and

105
00:05:49.740 --> 00:05:52.620
non-proprietary proprietary in that it
uses the Ws startup star

106
00:05:52.830 --> 00:05:57.800
technologies it's done with web
services using SAML assertions, using

107
00:05:57.920 --> 00:06:02.360
Ws Mex, it's called Ws
metadata exchange. I like to

108
00:06:02.360 --> 00:06:04.730
call it Ws TexMex, but
people don't like that though.

109
00:06:05.450 --> 00:06:09.220
And using Ws trust Scott,
I know that anybody can

110
00:06:09.220 --> 00:06:11.950
say this is an open
standard and then still exploited

111
00:06:11.950 --> 00:06:14.410
for their own personal benefit
at the expense of others.

112
00:06:14.800 --> 00:06:18.250
So is the real test,
is, is anyone else besides

113
00:06:18.250 --> 00:06:21.160
Microsoft using it? That's a
very good point. So of

114
00:06:21.160 --> 00:06:23.080
course, this is an example
of something where Microsoft's done

115
00:06:23.080 --> 00:06:26.950
the first and perhaps thus
far the best implementation of

116
00:06:26.950 --> 00:06:30.070
it, but people are already
getting excited about this. So

117
00:06:30.070 --> 00:06:34.120
for example, the guy Kim
Cameron at Microsoft, who really

118
00:06:34.120 --> 00:06:37.630
promotes this, who runs identity
blog.com, brilliant guy up at

119
00:06:37.630 --> 00:06:40.750
shrink stir slash J K
M M as in mom.

120
00:06:41.680 --> 00:06:45.550
He runs a blog based
on PHP. So in a

121
00:06:45.550 --> 00:06:47.980
kind of an unusual move
by, by Microsoft guys, he

122
00:06:48.010 --> 00:06:51.220
ate his own dog food
and built a PHP implementation

123
00:06:51.220 --> 00:06:55.570
of info card. So if
you have card spaces on

124
00:06:55.570 --> 00:06:58.600
your machine, the windows implementation
of card spaces, then you

125
00:06:58.600 --> 00:07:00.220
can go up to his
blog and you can sign

126
00:07:00.220 --> 00:07:04.360
in and it's using all
PHP, no Microsoft stack. So

127
00:07:04.390 --> 00:07:06.070
the idea is that you
would go up to his

128
00:07:06.070 --> 00:07:08.920
blog and in this instance
you would be using <inaudible>

129
00:07:09.190 --> 00:07:11.620
and then you'd have the.net
framework three on your system.

130
00:07:12.190 --> 00:07:14.170
Remember that <inaudible> is going
to get pushed out as

131
00:07:14.170 --> 00:07:17.470
a high priority update to
everyone. And the.net framework is

132
00:07:17.470 --> 00:07:20.800
going to be an optional
but recommended update. So I

133
00:07:20.800 --> 00:07:22.630
think more and more, we're
going to see this. It's

134
00:07:22.630 --> 00:07:25.360
also built into Vista so
on, although it's unfortunate that

135
00:07:25.360 --> 00:07:26.920
three O is not going
to be a high priority

136
00:07:26.920 --> 00:07:30.730
update. We are going to
see this pushed out to

137
00:07:30.730 --> 00:07:32.590
a lot of people's machines.
You go up to his

138
00:07:32.590 --> 00:07:36.040
blog and then you visit
a regular HTML page. If

139
00:07:36.040 --> 00:07:39.070
you did a view source
on this page of the

140
00:07:39.070 --> 00:07:42.640
HTML, you would see an
object tag, right? An object

141
00:07:42.640 --> 00:07:44.320
tags, that kind of thing
you would use to show

142
00:07:44.320 --> 00:07:47.320
like a flash object, right?
In this case, the object

143
00:07:47.350 --> 00:07:51.400
is an information card. That's
saying I have some requirements

144
00:07:51.940 --> 00:07:53.710
that you're going to need
to give me. So just

145
00:07:53.710 --> 00:07:56.050
like you for putting a
name and password together on

146
00:07:56.050 --> 00:07:59.170
an HTML site, you would
say input, text equals password

147
00:07:59.170 --> 00:08:01.690
and put text equals type
equals text. And they would

148
00:08:01.690 --> 00:08:03.940
put in their name and
their password. In this case,

149
00:08:04.120 --> 00:08:07.180
within the form, there is
an object tag. I love

150
00:08:07.180 --> 00:08:10.210
the elastic girl thing. What's
that all about On his

151
00:08:10.210 --> 00:08:13.960
site? He uses the last
a girl from the incredible

152
00:08:13.960 --> 00:08:17.200
is to represent his, his
very flexible implementation of card

153
00:08:17.200 --> 00:08:23.200
space. So if you basically
click on this object, the

154
00:08:23.200 --> 00:08:26.200
browser will pop up and
launch whatever that helper is.

155
00:08:26.230 --> 00:08:28.630
So in the instance of
<inaudible> it'll launch, what's called

156
00:08:28.630 --> 00:08:31.870
an identity selector. It's going
to launch the windows card

157
00:08:31.870 --> 00:08:35.800
space, identity selector, and on
windows or on Vista. You're

158
00:08:35.800 --> 00:08:37.750
going to get this kind
of curtain of death. This

159
00:08:37.750 --> 00:08:43.060
kind of gray, transparent curtain
will drop and a card

160
00:08:43.060 --> 00:08:46.510
space, identity application will launch
up and let you select

161
00:08:46.510 --> 00:08:48.790
a card. And in this
context of card is a

162
00:08:48.820 --> 00:08:51.700
kind of a client side.
Yeah. That's a good thing

163
00:08:51.700 --> 00:08:55.650
to clarify that it isn't
necessarily a physical card, although

164
00:08:55.650 --> 00:08:57.960
it can be stored on
a card. That's a very

165
00:08:57.960 --> 00:09:01.070
good point. The card space
cards are basically kind of

166
00:09:01.070 --> 00:09:04.250
a client side security token
that are going to allow

167
00:09:04.250 --> 00:09:07.520
you to fulfill some claims
that the site will make

168
00:09:07.640 --> 00:09:10.090
yes. Like a metaphor for
a credit card or something.

169
00:09:10.100 --> 00:09:11.960
It's like handing someone a
card because like I go

170
00:09:11.960 --> 00:09:15.830
to you're in Connecticut, right?
Yes. Okay. So I'm an

171
00:09:15.830 --> 00:09:17.690
Oregon. So I go to
Connecticut and I get pulled

172
00:09:17.690 --> 00:09:20.150
over and I show the
cop, my Oregon driver's license.

173
00:09:21.140 --> 00:09:23.930
Why does he trust me?
He trusts me because Connecticut

174
00:09:23.930 --> 00:09:26.600
trust Oregon. Right? So he
says, well, I don't know

175
00:09:26.600 --> 00:09:29.210
you, mr. Cop and mr.
Cop, you don't know me,

176
00:09:29.210 --> 00:09:32.240
but I know Oregon and
I know Connecticut. So we

177
00:09:32.240 --> 00:09:35.060
trust each other because we
trust this third party. Yep.

178
00:09:35.630 --> 00:09:39.170
So info card uses that
card metaphor. That idea of

179
00:09:39.170 --> 00:09:41.570
here is something that I
have that is attached and

180
00:09:41.570 --> 00:09:44.510
issued by someone that we
both trust a lot, like

181
00:09:44.510 --> 00:09:47.810
SSL works, right? I visit
your site, you use a

182
00:09:47.810 --> 00:09:50.990
Verisign SSL card, and then
we have this trust relationship,

183
00:09:51.170 --> 00:09:54.530
right? So you've got this
object tag on your HTML

184
00:09:54.530 --> 00:09:56.870
page, and it's just coded
like a regular object tag,

185
00:09:56.900 --> 00:09:59.270
like a flash tag or
any tag that uses object.

186
00:09:59.810 --> 00:10:02.360
And it has a certain
type that says, you know,

187
00:10:02.360 --> 00:10:06.260
something, something slash info card,
the browser associates, whatever the

188
00:10:06.260 --> 00:10:09.170
identity selector on your system,
in this case, the windows

189
00:10:09.170 --> 00:10:11.750
card space UI, and it
pops up this curtain of

190
00:10:11.750 --> 00:10:13.130
death. And the reason I
point out the curtain of

191
00:10:13.130 --> 00:10:16.760
death is because this is
a new separate desktop, because

192
00:10:16.760 --> 00:10:18.980
you don't want to let
any card loggers or evil

193
00:10:18.980 --> 00:10:21.680
things that are kind of
snuck into your system, anything

194
00:10:21.680 --> 00:10:24.560
running in the tray or
some malware. So this is

195
00:10:24.560 --> 00:10:27.470
the similar technology that they're
using in the user access

196
00:10:27.470 --> 00:10:30.920
control stuff in Vista, they're
basically running this in its

197
00:10:30.920 --> 00:10:34.670
own universe, its own parallel
world on your machine, its

198
00:10:34.670 --> 00:10:37.520
own desktop context. So no
other applications get to get

199
00:10:37.520 --> 00:10:40.190
loaded in there. And it's
running in a very limited

200
00:10:40.190 --> 00:10:42.440
trust. It does exactly what
it does and no more.

201
00:10:42.920 --> 00:10:45.410
So we're trying to prevent
fishers, being able to get

202
00:10:45.410 --> 00:10:49.280
into that space and, and,
and futz around that you

203
00:10:49.280 --> 00:10:51.500
select your identity or you
create a card. There's two

204
00:10:51.500 --> 00:10:54.080
kinds of cards. You can
have a self issued card.

205
00:10:54.440 --> 00:10:57.140
You basically create your own
cert. And there's a little

206
00:10:57.140 --> 00:11:00.740
security token service on your
machine that basically issues the

207
00:11:00.740 --> 00:11:03.140
card to yourself. So this
would be the equivalent of

208
00:11:03.140 --> 00:11:05.540
writing on a piece of
paper I'm me. And then

209
00:11:05.540 --> 00:11:08.060
using that as your identification,
right? If somebody wants to

210
00:11:08.060 --> 00:11:10.610
trust you, they can, but
they don't have to Exactly.

211
00:11:10.760 --> 00:11:12.380
A site would have the
choice to say, I'm only

212
00:11:12.380 --> 00:11:13.730
going to deal with one
that has done with a

213
00:11:13.730 --> 00:11:15.770
managed card. And the other
kind of card is a

214
00:11:15.770 --> 00:11:19.400
managed card. Now I'm hoping
that not only will windows

215
00:11:19.400 --> 00:11:21.560
live or windows, you know,
the windows live as they

216
00:11:21.570 --> 00:11:25.460
rebranded a windows passport they'll
of course implement this. And

217
00:11:25.460 --> 00:11:28.910
people who have passports will
automatically get card space cards.

218
00:11:29.270 --> 00:11:32.060
But I think like visa,
American express, these big kind

219
00:11:32.060 --> 00:11:34.940
of places that manage our
identity, they will issue managed

220
00:11:34.940 --> 00:11:39.110
cards. So if you trust
visa and I trust visa,

221
00:11:39.110 --> 00:11:42.050
then we'll have this relationship.
It's interesting because then your

222
00:11:42.050 --> 00:11:46.160
credit card becomes more usable
as a source of identity.

223
00:11:46.670 --> 00:11:48.620
Exactly. Well, one of the
things you could license is

224
00:11:48.620 --> 00:11:52.460
now visually the credit card
can electronically, Right? And if

225
00:11:52.490 --> 00:11:54.700
let's say I'm going to
buy something from, from Franklins

226
00:11:54.700 --> 00:11:57.730
net right now, I go
online and I make a,

227
00:11:58.060 --> 00:12:00.670
a log in and I
register and it's all name

228
00:12:00.670 --> 00:12:03.520
and password. Then I would
give you my credit card

229
00:12:03.520 --> 00:12:05.410
and I've got two choices
either. I can let Franklins

230
00:12:05.410 --> 00:12:08.140
net store it without any
understanding about how you're going

231
00:12:08.140 --> 00:12:10.450
to choose to store my
credit card, right. Or I

232
00:12:10.450 --> 00:12:12.580
just give it to you
each time and I have

233
00:12:12.580 --> 00:12:15.160
to fire it across the
internet. And I have to

234
00:12:15.190 --> 00:12:18.760
keep updating you on things
like the expiration date. And

235
00:12:19.870 --> 00:12:23.500
if I did a managed
card, rather than me sending

236
00:12:23.500 --> 00:12:27.940
you the credit card number,
I could send you the,

237
00:12:28.210 --> 00:12:31.660
the managed token, this managed
security token, and then you

238
00:12:31.660 --> 00:12:34.840
could talk to visa and
they wouldn't have to give

239
00:12:34.840 --> 00:12:37.360
you the credit card. They
could just say, Oh, this

240
00:12:37.360 --> 00:12:41.650
person has decided to pay
you $10. Here's the confirmation

241
00:12:41.650 --> 00:12:44.200
number and credit cards can
be removed entirely from the

242
00:12:44.440 --> 00:12:46.980
process. So the number doesn't
exist. Yeah. And all the,

243
00:12:46.980 --> 00:12:50.880
all the transactions happen behind
the scenes at visa. Exactly.

244
00:12:51.300 --> 00:12:53.460
And it's all done in
a, in a cryptographically significant

245
00:12:53.460 --> 00:12:56.640
way. So this identity selector
back to what you were

246
00:12:56.640 --> 00:12:59.160
saying was like, well, who
else has done this? So

247
00:12:59.190 --> 00:13:02.610
there are already starting to
see identity selectors for other

248
00:13:02.610 --> 00:13:06.300
browsers. There's a Firefox one
written in Java at shrink

249
00:13:06.300 --> 00:13:08.760
stir slash J K N
right now it works on

250
00:13:08.760 --> 00:13:12.420
Firefox one five, but I'm
sure he'll update it. And

251
00:13:12.420 --> 00:13:17.220
there is one for Safari
at shrink stir slash J

252
00:13:17.220 --> 00:13:19.860
K U a. I think
that as more and more

253
00:13:19.860 --> 00:13:22.350
people realize that this is
not a Microsoft thing, this

254
00:13:22.350 --> 00:13:25.710
is an open Ws startup
star standard that they're gonna

255
00:13:25.710 --> 00:13:28.590
start creating these. I think
we'll see all the major

256
00:13:28.590 --> 00:13:33.420
browsers supporting an identity selector
in various ways. I've found

257
00:13:33.420 --> 00:13:35.550
the card space. One, the
one that's built in with,

258
00:13:35.970 --> 00:13:39.630
with windows to be very
flexible right now you do

259
00:13:39.630 --> 00:13:42.930
have to store your cards
on your local machine and

260
00:13:42.930 --> 00:13:44.670
you can move them from
place to place. So I've

261
00:13:44.910 --> 00:13:47.670
basically exported my cards and
then imported them back at

262
00:13:47.670 --> 00:13:50.550
home. And in the future,
a version of card space

263
00:13:50.550 --> 00:13:53.640
is going to support using
your USB key as a

264
00:13:53.640 --> 00:13:57.030
kind of a token, and
then saving the tokens on

265
00:13:57.030 --> 00:14:00.060
that key. So then you
would have no store on

266
00:14:00.060 --> 00:14:02.160
your local machine, but you
will be able to log

267
00:14:02.160 --> 00:14:04.650
in on any machine and
then say, Oh, well, here's

268
00:14:04.650 --> 00:14:07.200
my identity. So you'd basically
be using your USB key,

269
00:14:07.200 --> 00:14:09.450
like you just said, as
a smart card. So it'd

270
00:14:09.450 --> 00:14:11.910
be a poor man smart
card. And certainly that would

271
00:14:11.910 --> 00:14:14.220
be much more ubiquitous than
a smart card itself. This

272
00:14:14.220 --> 00:14:16.230
is another thing that came
up in my conversation with

273
00:14:16.230 --> 00:14:19.740
Kim Cameron on dotnet rocks,
which is, you know, RFID

274
00:14:19.740 --> 00:14:22.110
tags. And, you know, and
as soon as I said

275
00:14:22.110 --> 00:14:25.170
RFID, he could hear the
hair on the back of

276
00:14:25.170 --> 00:14:29.100
his neck bristle. He said,
RFID is not a security

277
00:14:29.160 --> 00:14:33.930
device. It's not secure anybody
with an RFID reader can

278
00:14:33.930 --> 00:14:37.650
walk up to you with,
with your fog and read

279
00:14:37.650 --> 00:14:41.400
what is coming out of
it and then give it

280
00:14:41.430 --> 00:14:45.900
an answer. And so there's
no cryptography, there's nothing. You've

281
00:14:45.900 --> 00:14:49.620
seen people going around with
laptops, with RFID readers and,

282
00:14:49.670 --> 00:14:52.970
and, you know, RFID units
or whatever they call them

283
00:14:52.970 --> 00:14:56.090
reader, broadcaster, a reader writer,
I don't know. And they

284
00:14:56.090 --> 00:14:58.250
can go up to like
a Prius, which uses a,

285
00:14:58.700 --> 00:15:01.070
you know, I'm giving away
people can hack my car

286
00:15:01.070 --> 00:15:05.090
now, but uses an RFID
tag on the fog and

287
00:15:05.360 --> 00:15:07.670
they can just sit there.
And within an hour they

288
00:15:07.670 --> 00:15:09.650
can not only get into
it, but they can start

289
00:15:09.650 --> 00:15:13.360
the engine. Right. RFID is
just broadcasting a good, for

290
00:15:13.360 --> 00:15:14.890
lack of a better way
to phrase it. I mean,

291
00:15:14.890 --> 00:15:16.960
it's, it's an, a no
space and no way of

292
00:15:16.960 --> 00:15:19.420
claims to be in a
kind of security. Right. So,

293
00:15:19.420 --> 00:15:22.120
yeah, definitely. But the idea
that someone could use a

294
00:15:22.120 --> 00:15:26.710
flexible token and create something
unique to a, a USB

295
00:15:26.710 --> 00:15:29.770
key and turn that into
a smart card like device,

296
00:15:29.770 --> 00:15:34.270
that's a powerful thing. Yeah.
Now there's been also a

297
00:15:34.270 --> 00:15:38.380
number of example, chunks of
code online, whether it be

298
00:15:38.400 --> 00:15:40.780
in Java and PHP on
how to do these things.

299
00:15:41.110 --> 00:15:45.220
There's an example, decoder at
a shrink stir slash J

300
00:15:45.220 --> 00:15:48.430
K O where you can
basically see what was sent.

301
00:15:48.490 --> 00:15:50.530
They'll actually show you what
happened on the wire, because

302
00:15:50.680 --> 00:15:54.490
this all happens only under
SSL right now, right? And

303
00:15:54.490 --> 00:15:57.000
that decoder will show you
the assertions in the, and

304
00:15:57.000 --> 00:16:00.910
the underlying web services, angle
brackets. If you like that

305
00:16:00.910 --> 00:16:02.710
kind of stuff, you can
see it. And there's a

306
00:16:02.710 --> 00:16:05.440
very good article at MSDN
at shrink stir slash J

307
00:16:05.440 --> 00:16:08.770
K P that will explain
kind of step by step,

308
00:16:08.770 --> 00:16:11.230
how this works. And actually
the Wikipedia article. I know

309
00:16:11.230 --> 00:16:13.660
that Wikipedia is a little
dodgy, but at the time

310
00:16:13.660 --> 00:16:16.060
that I read, it was
quite a up to date

311
00:16:16.060 --> 00:16:19.900
at shrink stir slash J
K R. Now, so many

312
00:16:19.900 --> 00:16:22.150
people are getting excited about
this. Now I had planned

313
00:16:22.180 --> 00:16:27.760
to enable DAS blog for
information cards, but Cohen, Kevin Hammond

314
00:16:27.790 --> 00:16:30.250
beat me to it by
like a week. No kidding.

315
00:16:30.280 --> 00:16:34.960
He has taken a Casa
de Hambone that's his website,

316
00:16:35.350 --> 00:16:37.960
it's the Casa de Hambone.
And that's a trickster slash

317
00:16:37.990 --> 00:16:40.570
J K S. And he
has taken an instance of

318
00:16:40.570 --> 00:16:43.570
DAS blog and he has
enabled it for info cards.

319
00:16:44.290 --> 00:16:46.660
So this is, this could
really change the way people

320
00:16:46.660 --> 00:16:51.340
do do identity over the
over blog. So leaving comments.

321
00:16:51.340 --> 00:16:54.220
And he also now uses
that information card to log

322
00:16:54.220 --> 00:16:56.830
in to the administration of
his blog. Wow. So in

323
00:16:56.830 --> 00:17:00.970
this case, no password being
required. So Kevin has enabled

324
00:17:00.970 --> 00:17:05.650
us blog using this personal
private identifier that is sent

325
00:17:05.920 --> 00:17:08.260
as one of the claims.
Basically when you're sending an

326
00:17:08.260 --> 00:17:10.720
information card, you can insert
a series of claims and

327
00:17:10.720 --> 00:17:13.570
that object tag that say,
here are the requirements you

328
00:17:13.570 --> 00:17:16.630
might say, I'm going to
need from you and info

329
00:17:16.630 --> 00:17:21.160
card that has first name,
last name, personal private identifier,

330
00:17:21.460 --> 00:17:24.580
and your email address. And
each of these claims is

331
00:17:24.580 --> 00:17:29.860
described using a URI, right,
a uniform resource identifier. And

332
00:17:29.860 --> 00:17:32.400
you just list these things
out in your object tags

333
00:17:32.400 --> 00:17:34.270
saying, these are the things
I'm going to need. And

334
00:17:34.270 --> 00:17:38.200
that personal private identifier is
actually unique to the card

335
00:17:38.230 --> 00:17:41.410
and the site they're actually
using some of the information

336
00:17:41.410 --> 00:17:45.580
within the SSL certificate to
hook you up with the,

337
00:17:47.260 --> 00:17:50.610
with, with the site. So
if I visited.net under SSL

338
00:17:50.610 --> 00:17:55.380
or hanselman.com under SSL, I
would get a cryptographically significant

339
00:17:55.440 --> 00:17:59.700
and different personal private identifier.
So that unique ID couldn't

340
00:17:59.700 --> 00:18:02.280
be stolen by a Fisher
because it's different on a

341
00:18:02.280 --> 00:18:06.630
per site basis. Ah, ah,
starts to get interesting now,

342
00:18:06.630 --> 00:18:10.350
right? Yeah. So for example,
we have an application here

343
00:18:10.350 --> 00:18:12.630
at work that is a
name and password kind of

344
00:18:12.630 --> 00:18:15.570
a thing, but we also
have this notion of a

345
00:18:15.570 --> 00:18:17.910
single sign on the idea
that you might have some

346
00:18:17.940 --> 00:18:21.450
other external system that's going
to manage your identity. So

347
00:18:21.450 --> 00:18:24.540
we can put in unique
identifiers that are, we call

348
00:18:24.540 --> 00:18:27.210
them aliases and a lot
of single sign on systems

349
00:18:27.210 --> 00:18:29.550
do this. They're basically saying
you can log in with

350
00:18:29.550 --> 00:18:33.120
your name and password or
one of these alias identifiers,

351
00:18:33.630 --> 00:18:36.660
and a lot of systems
that have implemented this alternate

352
00:18:36.690 --> 00:18:40.920
identity can just take that
personal private identifier and use

353
00:18:40.920 --> 00:18:45.660
that straight up as a,
an alternate way to log

354
00:18:45.660 --> 00:18:48.600
in. So that the kind
of a thing that I

355
00:18:48.600 --> 00:18:51.510
think you'll see are sites
that include the support for

356
00:18:51.510 --> 00:18:54.390
logging in then the classic
way or in the info

357
00:18:54.390 --> 00:18:57.270
card way. So I could
envision a time when I

358
00:18:57.270 --> 00:18:59.640
might go to Amazon one
day, log in with my

359
00:18:59.640 --> 00:19:01.620
name and my password, and
then go to my main

360
00:19:01.620 --> 00:19:07.260
account management page, say associate
an information card with my

361
00:19:07.260 --> 00:19:10.410
account, send them an info
card. And then they would

362
00:19:10.410 --> 00:19:13.890
take that private identifier, that
personal private ID that's unique

363
00:19:13.890 --> 00:19:17.490
to Amazon because it's a
combination of some of the

364
00:19:17.490 --> 00:19:20.220
stuff in the SSL certificate,
the, and some of the

365
00:19:20.220 --> 00:19:22.890
stuff on my certificate, and
it's going to stick that

366
00:19:22.980 --> 00:19:26.070
number. I think it's like
a 32 character long kind

367
00:19:26.070 --> 00:19:29.220
of good light thing, stick
it in their database. And

368
00:19:29.220 --> 00:19:32.160
then I could actually shut
off name and password support.

369
00:19:32.940 --> 00:19:34.920
I would say, I don't
want anyone allowed to log

370
00:19:34.920 --> 00:19:37.980
in to Amazon anymore by
name and password info cards

371
00:19:37.980 --> 00:19:42.750
only, then it starts getting
interesting. Right? Yeah. Now that's

372
00:19:42.750 --> 00:19:45.600
just with a self managed
card. One of the things

373
00:19:45.600 --> 00:19:48.120
that self-managed cards don't really
support is the notion of

374
00:19:48.120 --> 00:19:51.210
revocation. This is the idea
that you want to cancel

375
00:19:51.210 --> 00:19:54.540
your card when someone steals
it right now, if Amazon

376
00:19:54.570 --> 00:19:58.440
issued cards from their own
security token service, and they

377
00:19:58.440 --> 00:20:01.470
said, well, you have an
Amazon identity. So we're going

378
00:20:01.470 --> 00:20:03.450
to give you an Amazon
card, just like they would

379
00:20:03.450 --> 00:20:06.390
give you an Amazon credit
card with the Amazon logo

380
00:20:06.390 --> 00:20:09.990
branded on. I could go
to Franklin's net and say,

381
00:20:10.350 --> 00:20:12.600
Hey, here's my Amazon card.
And if you have a

382
00:20:12.600 --> 00:20:16.440
trust relationship with Amazon, you
could use these Ws trust

383
00:20:16.650 --> 00:20:19.860
web services to actually ask
Amazon, do you know this

384
00:20:19.860 --> 00:20:23.130
guy when I hand you
an information card and you

385
00:20:23.130 --> 00:20:25.350
would say, and I need
these claims, I need this

386
00:20:25.350 --> 00:20:27.150
guy's first name. Are you
going to provide that to

387
00:20:27.150 --> 00:20:29.820
me? And Amazon would say
whether or not that was

388
00:20:29.820 --> 00:20:33.150
cool, but if I had
done something naughty and Amazon

389
00:20:33.150 --> 00:20:37.080
had maybe revoked my card,
you could say, I'm sorry.

390
00:20:37.080 --> 00:20:40.290
Amazon has revoked your car.
Just like browsers. Now can

391
00:20:40.290 --> 00:20:43.560
revoke SSL certificates. All right.
So I got two questions.

392
00:20:44.190 --> 00:20:49.630
Number one, this is all
for browsing, But these things

393
00:20:49.630 --> 00:20:53.730
will work in physical form
as well. Right? Right. So

394
00:20:53.730 --> 00:20:56.430
more and more, they're going
to have support for storing

395
00:20:56.430 --> 00:20:59.700
these tokens on secure fobs
on whether it be any,

396
00:20:59.700 --> 00:21:03.540
any kind of thing that
could potentially provide a more

397
00:21:03.540 --> 00:21:07.680
context. So like, Could you
envision a day where you

398
00:21:07.680 --> 00:21:10.080
would be able to check
in at an airport a

399
00:21:10.080 --> 00:21:13.980
lot faster, if you have
an info card, If you

400
00:21:13.980 --> 00:21:16.920
had like an identity set
up on like Alaska airlines

401
00:21:16.920 --> 00:21:20.130
or on United, and you'd
associated an information card. If

402
00:21:20.130 --> 00:21:22.530
I had that info card
on some physical thing and

403
00:21:22.530 --> 00:21:24.120
they of course would have
to decide whether that was

404
00:21:24.120 --> 00:21:27.120
USB or smart card or
whatever, I could see what

405
00:21:27.120 --> 00:21:29.730
I would be able to
go to a kiosk at

406
00:21:29.730 --> 00:21:32.940
an airport and give them
this shirt. And because it

407
00:21:32.940 --> 00:21:36.480
is a real certificate that
can identify me as being

408
00:21:36.540 --> 00:21:39.210
totally unique and guaranteed to
be me, and then maybe

409
00:21:39.210 --> 00:21:42.240
apply some additional information because
security is not just about

410
00:21:42.780 --> 00:21:45.330
what you have, it's about
what you know. Right. So

411
00:21:45.330 --> 00:21:49.830
the more factors in the
authentication, the more legit that's

412
00:21:49.830 --> 00:21:53.460
why ATM is have the
card that you require and

413
00:21:53.460 --> 00:21:57.030
the pin number And the
pin. And the second question

414
00:21:57.030 --> 00:22:01.110
is, do you foresee all,
everybody trying to be a

415
00:22:01.140 --> 00:22:03.780
card provider, just like every
business in the world wants

416
00:22:03.780 --> 00:22:06.810
you to, once you to
think of them as the

417
00:22:06.810 --> 00:22:10.050
end all be all in
all services, you know what

418
00:22:10.050 --> 00:22:13.860
I mean? So get your,
get your ground round credit

419
00:22:13.860 --> 00:22:17.070
card, get your mobile credit
card, get your Ben and

420
00:22:17.070 --> 00:22:20.400
Jerry's credit card, you know,
it's like ridiculous. And, and

421
00:22:21.420 --> 00:22:24.960
if, if that's the case,
doesn't that sort of defeat

422
00:22:24.960 --> 00:22:28.000
the whole purpose of having
a universal card. Yeah. I

423
00:22:28.050 --> 00:22:30.990
totally agree with you that
having everyone like, you know,

424
00:22:30.990 --> 00:22:33.960
your local Safeway grocery store
and give you a card

425
00:22:34.260 --> 00:22:35.880
is lame. And I know,
I mean, I've got like

426
00:22:35.880 --> 00:22:40.320
six different tokens on my
key chain On 150 tokens

427
00:22:40.320 --> 00:22:42.360
and I wouldn't have to.
Yeah. I think that the

428
00:22:42.360 --> 00:22:45.660
public will make that decision.
I think that while there

429
00:22:45.660 --> 00:22:48.600
are companies that issue hundreds
of different kinds of branded

430
00:22:48.600 --> 00:22:50.580
credit cards, I know I
had a Yahoo card for

431
00:22:50.580 --> 00:22:54.660
awhile. I think that people
will eventually kind of decide

432
00:22:54.660 --> 00:22:56.970
that they'll probably be five
to 10. You know, the

433
00:22:56.970 --> 00:23:00.030
obvious players, if everyone gets
up behind this, there'll be

434
00:23:00.030 --> 00:23:05.370
Google identity. There'll be live.com
Amazon and people will decide

435
00:23:05.370 --> 00:23:09.690
that they're what really becomes
interesting is when, when Google

436
00:23:09.690 --> 00:23:13.620
decides that Dell except Microsoft
cards. And again, we're not

437
00:23:13.620 --> 00:23:15.660
talking about the format, we're
talking about the, the, the

438
00:23:15.730 --> 00:23:18.420
authority that you issued them.
We shouldn't have to rely

439
00:23:18.420 --> 00:23:22.500
on trust relationships between providers
in order to have access

440
00:23:22.500 --> 00:23:25.500
to things. And that that's
really bothering me. Like I

441
00:23:25.500 --> 00:23:29.160
would just want, I would
want one provider and I

442
00:23:29.160 --> 00:23:31.770
would want everybody to trust
it. You know what I'm

443
00:23:31.770 --> 00:23:34.710
saying? I would want American
express to be my provider

444
00:23:35.400 --> 00:23:37.290
and I want everybody else
to trust it. And then

445
00:23:37.290 --> 00:23:40.080
I don't have, Oh, I'm
sorry, sir. You can't stay

446
00:23:40.080 --> 00:23:42.780
at this hotel because we
don't have a relationship with

447
00:23:42.810 --> 00:23:46.210
Google. Sure. But that's part
of reality. I mean, I

448
00:23:46.220 --> 00:23:51.140
don't like going to like
Costco, Costco, the big wholesaler

449
00:23:51.440 --> 00:23:53.840
didn't take debit cards for
the longest time. They didn't

450
00:23:53.840 --> 00:23:56.300
take visa. They didn't take
MasterCard. They only took American

451
00:23:56.300 --> 00:23:59.120
express. Yeah. That's just part
of business. I think that

452
00:23:59.120 --> 00:24:01.750
same problem is going to
happen within the card space

453
00:24:01.750 --> 00:24:04.160
space is that people will
just decide that, you know,

454
00:24:04.160 --> 00:24:07.070
we won't accept this certain
kind of card, but I

455
00:24:07.070 --> 00:24:09.680
think that the pressure from
the public will for a,

456
00:24:09.680 --> 00:24:14.930
for a clean approach to
identity will eventually make sure

457
00:24:14.930 --> 00:24:16.900
that everyone decides. Yeah. And
it's going to have to,

458
00:24:16.900 --> 00:24:19.300
I mean, like ATM is,
you've got how many networks

459
00:24:19.300 --> 00:24:23.020
are there for ATM, but
every ATM machine recognizes all

460
00:24:23.020 --> 00:24:25.150
of those networks, but there's
only a handful of them.

461
00:24:25.210 --> 00:24:27.040
Right. But you know, every
once in a while though,

462
00:24:27.040 --> 00:24:29.290
you'll get, you'll get penalized
in some way. I hope

463
00:24:29.290 --> 00:24:30.970
we don't get to that.
I really, I really hope

464
00:24:30.970 --> 00:24:33.790
that this works out so
that, you know, the, the,

465
00:24:33.790 --> 00:24:37.150
the consumer wins and not,
it doesn't become a battle

466
00:24:37.150 --> 00:24:39.610
for the mind and heart
and mind to the consumer

467
00:24:39.910 --> 00:24:41.830
At this point. I don't
think that'll happen, but a

468
00:24:41.830 --> 00:24:46.000
lot, but no managed services
have come out yet. Right.

469
00:24:46.000 --> 00:24:49.270
I mean, there's not a
whole run a rush to,

470
00:24:49.270 --> 00:24:52.660
to, to come up with
your own managed token service.

471
00:24:52.900 --> 00:24:54.910
I think it's going to
be probably this time next

472
00:24:54.910 --> 00:25:00.070
year, but the, the, the
hardware, the software will all

473
00:25:00.070 --> 00:25:04.090
be ready by then. I
mean, Microsoft's implementation of it

474
00:25:04.090 --> 00:25:06.520
is just the first step.
It's getting everyone else to

475
00:25:06.520 --> 00:25:09.220
get stoked about it. Right.
If it's just a thing

476
00:25:09.220 --> 00:25:10.930
that works in Vista, that's
not going to be cool.

477
00:25:11.320 --> 00:25:14.410
So like right now it
works in windows 2003. It

478
00:25:14.410 --> 00:25:17.830
works in XP. If you've
got dotnet framework three, Oh.

479
00:25:18.850 --> 00:25:22.540
If people are able to
download a tiny certificate acceptor

480
00:25:22.540 --> 00:25:27.610
within Firefox giving alternative browsers,
the ability to do this

481
00:25:27.610 --> 00:25:29.080
kind of stuff, then it's
gonna become a lot more

482
00:25:29.080 --> 00:25:32.050
palatable know. Interestingly, I really
think it's going to be

483
00:25:32.050 --> 00:25:34.450
the blogs. It's funny. I
mean, just the fact that

484
00:25:34.450 --> 00:25:38.200
Kim Cameron's got a PHP,
one that Kevin Hammond put together,

485
00:25:38.200 --> 00:25:39.940
a Dutch blog went and
just today set it up.

486
00:25:39.940 --> 00:25:41.620
So it'll work in one,
one or two. Oh, with

487
00:25:41.620 --> 00:25:44.750
a pluggable identity provider. Isn't
it funny how the, the

488
00:25:44.960 --> 00:25:47.440
people who have no money
and run blogs are the

489
00:25:47.440 --> 00:25:50.170
ones that do these things
first, and then the people

490
00:25:50.170 --> 00:25:52.240
with lots of money like
Amazon or Google, We'll do

491
00:25:52.240 --> 00:25:55.540
it later. Yeah. Interesting. It's
definitely going to change the

492
00:25:55.540 --> 00:25:57.850
game though. And I think
for, for banking and for

493
00:25:57.850 --> 00:26:00.850
identity, protecting your identity, it's
going to be, it's going

494
00:26:00.850 --> 00:26:02.890
to be invaluable for my
industry. It's going to be

495
00:26:02.890 --> 00:26:04.660
fantastic. It's just going to
be figuring out what the

496
00:26:04.660 --> 00:26:07.240
easiest way to get grandma
to run an information card

497
00:26:07.240 --> 00:26:12.310
is So what's a extended
validation. So EVs ESL is

498
00:26:12.310 --> 00:26:14.860
a kind of a certificate
that I blogged about recently.

499
00:26:14.860 --> 00:26:17.170
And you can see that
at shrink stir slash J

500
00:26:17.170 --> 00:26:20.440
K X, and this talks
about the, kind of the

501
00:26:20.440 --> 00:26:24.520
evolution of SSL certificates and
how right now, if I

502
00:26:24.520 --> 00:26:28.720
visit franklins.net and I see
a little lock up there

503
00:26:28.720 --> 00:26:32.770
because I'm under SSL right
there, that lock says the

504
00:26:32.770 --> 00:26:36.970
information is encrypted on the
wire, but people have started

505
00:26:36.970 --> 00:26:40.210
to associate that lock with
a sense of trust that,

506
00:26:40.240 --> 00:26:43.000
Oh, if I see the
lock it's okay. Right. But

507
00:26:43.020 --> 00:26:45.810
that doesn't necessarily imply. I'm
looking at Franklin's dot net.

508
00:26:45.840 --> 00:26:50.430
I could be looking at
Franklins evil Fisher, correct.net. So

509
00:26:50.460 --> 00:26:53.790
EVs SSL is a new
kind of extended validation or

510
00:26:53.790 --> 00:26:57.930
what they call high assurance,
SSL certificate. And these certificates

511
00:26:58.560 --> 00:27:01.140
are a new kind of
certificate. It's an emerging standard.

512
00:27:01.140 --> 00:27:03.030
We'll see it probably be
ratified in the next couple

513
00:27:03.030 --> 00:27:06.660
of months. It's supported in
<inaudible>. Now there's an example.

514
00:27:06.660 --> 00:27:10.920
You can go download it
and you can see it@woodgrovebank.net.

515
00:27:11.280 --> 00:27:13.860
And basically if you visit
a site that has one

516
00:27:13.860 --> 00:27:16.890
of these extended validation certificates,
your address bar is going

517
00:27:16.890 --> 00:27:19.200
to turn bright green, and
you're going to get an

518
00:27:19.200 --> 00:27:22.050
additional lock. That's going to
shift back and forth between

519
00:27:22.050 --> 00:27:24.750
the name of the organization,
not the URL, but the

520
00:27:24.750 --> 00:27:27.870
actual name of the organization
that, that, that certificate is

521
00:27:27.870 --> 00:27:30.840
for. And then the, the
certificate issuer, and it will

522
00:27:30.840 --> 00:27:34.880
kind of cycle back and
forth, Let's say@woodgrovebank.com, by the

523
00:27:34.880 --> 00:27:39.950
way, Is it? Yeah. Oh
my bad. Hang on one

524
00:27:39.950 --> 00:27:44.660
second. Yep. You're absolutely right.
It's word, grow bank.com. And

525
00:27:45.140 --> 00:27:48.350
if you have installed the,
a, the test certificate, you'll

526
00:27:48.350 --> 00:27:52.280
see in <inaudible> that address
bar turned bright green. It's

527
00:27:52.280 --> 00:27:55.610
just an example of a,
that what the certificate experience

528
00:27:55.610 --> 00:27:58.430
will look like and what
that means to a, like

529
00:27:58.430 --> 00:28:00.650
a bank or any kind
of an eCommerce site, is

530
00:28:00.650 --> 00:28:02.630
that they're going to have
to go through some additional

531
00:28:02.630 --> 00:28:05.000
auditing to prove that they
are in fact who they

532
00:28:05.000 --> 00:28:07.550
say they are, because like,
I just got a certificate

533
00:28:07.550 --> 00:28:12.170
for hanselman.com from godaddy.com. I
think it took, I don't

534
00:28:12.170 --> 00:28:14.840
know, 10 minutes to get
an SSL certificate hooked up.

535
00:28:14.870 --> 00:28:17.000
I mean, it was crazy.
I just went up, got

536
00:28:17.000 --> 00:28:20.960
the cert, ask my ISP
for a request, confirm that

537
00:28:20.960 --> 00:28:22.790
I, in fact, own the
domain. And I had assert

538
00:28:23.300 --> 00:28:28.580
I use instant ssl.com 30
bucks. Yeah. So, I mean,

539
00:28:28.580 --> 00:28:31.940
it's easy to get secure
wire access, but they want

540
00:28:31.940 --> 00:28:34.130
to make it more difficult
to say that I am

541
00:28:34.130 --> 00:28:37.370
in fact, you know, what
Grove bank or Hanselman bank.

542
00:28:37.910 --> 00:28:39.830
And I think that within
a year or two, we're

543
00:28:39.830 --> 00:28:41.810
going to see all of
the different browsers supporting that

544
00:28:41.810 --> 00:28:44.360
Firefox is indicated that they'll
support it opera as indicated

545
00:28:44.360 --> 00:28:47.120
they'll support it. Usually they're
using right now, they're using

546
00:28:47.120 --> 00:28:49.580
like dun and Bradstreet. You
know, you have to have

547
00:28:49.580 --> 00:28:51.890
a DMBI account and that's
an easy way for them

548
00:28:51.890 --> 00:28:54.020
to verify your address and
all that, blah, blah, blah.

549
00:28:54.600 --> 00:28:56.420
They want it. They want
to prove that you're a

550
00:28:56.420 --> 00:28:59.480
real organization. Some actually they
used to come out to

551
00:28:59.480 --> 00:29:01.910
your site and take pictures.
Did you know that? Did

552
00:29:01.910 --> 00:29:05.870
they like auditing? Yep. They
used to require that they

553
00:29:05.870 --> 00:29:08.270
would have to come out
and take a photo to

554
00:29:08.270 --> 00:29:10.910
make sure you are who
you say you are Now.

555
00:29:10.910 --> 00:29:12.500
See, some people think that
that's not fair to the

556
00:29:12.500 --> 00:29:14.030
little guy they were saying
that that's going to make

557
00:29:14.030 --> 00:29:16.610
it more difficult for the
little guy. Well, they don't

558
00:29:16.610 --> 00:29:19.460
do that anymore. Yeah. Yeah.
So there's a number of

559
00:29:19.460 --> 00:29:21.020
different things that people should
be checking out if they

560
00:29:21.020 --> 00:29:23.120
want to learn about info
card. There's a great video

561
00:29:23.120 --> 00:29:29.120
up on channel9@shrinkstir.com slash J
K w. And they can

562
00:29:29.120 --> 00:29:32.180
also learn about protecting your,
your identity online as a

563
00:29:32.180 --> 00:29:34.880
good kind of things that
you can do. And bits

564
00:29:34.880 --> 00:29:37.730
of information about yourself that
are low, medium and high

565
00:29:38.120 --> 00:29:42.820
sensitivity at shrink stir slash
J K T and a,

566
00:29:42.820 --> 00:29:44.350
and then you can also,
like I said, learn about

567
00:29:44.350 --> 00:29:47.530
EVs, sell at my blog
at drinker slash J K

568
00:29:47.530 --> 00:29:49.510
X. And a lot of
people have been commenting that

569
00:29:49.510 --> 00:29:51.730
they think this is a
way for the certificate authorities

570
00:29:51.730 --> 00:29:55.600
to get rich by requiring
an expensive certificate. And I'm

571
00:29:55.600 --> 00:29:57.280
not sure that I think
that's the case, but there's

572
00:29:57.280 --> 00:29:59.260
a good conversation going on
in the comments up on

573
00:29:59.260 --> 00:30:02.080
the blog there. So check
that out. And the reason

574
00:30:02.080 --> 00:30:04.870
that EVs Excel makes sense
in the context of info

575
00:30:04.870 --> 00:30:07.090
card is that both of
these things are giving an

576
00:30:07.090 --> 00:30:10.510
entirely new visual cue and
visual metaphor for what it

577
00:30:10.510 --> 00:30:12.520
means to visit a secure
site. So there's going to

578
00:30:12.520 --> 00:30:14.380
become kind of an expectation
on the part of the

579
00:30:14.380 --> 00:30:17.380
users that just as they
look for that lock, they're

580
00:30:17.380 --> 00:30:19.000
going to start looking for
that info card. They can

581
00:30:19.000 --> 00:30:21.910
start looking for that, that
bright green address bar and

582
00:30:21.910 --> 00:30:25.240
that, that new warning, whether
or not a site is

583
00:30:25.240 --> 00:30:27.760
secure. And I think it's
conceivable that there'll be a

584
00:30:27.760 --> 00:30:30.910
time when browsers will come
with a default that will

585
00:30:30.910 --> 00:30:35.800
only allow certificates that are
of this higher assurance. So

586
00:30:36.040 --> 00:30:38.260
not something that's gonna happen
tomorrow, but it'll definitely happen

587
00:30:38.260 --> 00:30:40.930
in the next year or
so I think. Awesome. Well,

588
00:30:40.930 --> 00:30:43.780
Hey Scott, that's a show.
Thanks a lot. What a

589
00:30:43.780 --> 00:30:46.030
great show. Thank you. I
don't know what else to

590
00:30:46.030 --> 00:30:48.130
say about it. It's a
great topic and I can't

591
00:30:48.130 --> 00:30:50.380
wait to see it evolve.
Yeah. I really encourage people

592
00:30:50.380 --> 00:30:53.350
to check it out. Go
install the.net framework three. Oh,

593
00:30:53.980 --> 00:30:56.410
I'm running the September CTP,
but you can also get

594
00:30:56.410 --> 00:30:59.830
the, the RC RC one
September CTP is a little

595
00:30:59.830 --> 00:31:01.540
bit newer, but you can
check all of this stuff

596
00:31:01.540 --> 00:31:04.570
out about card space at
shrink stir slash J K

597
00:31:04.570 --> 00:31:08.740
Q up at net effects,
three.com and we'll have all

598
00:31:08.740 --> 00:31:11.140
these links up on the
handsome in site. All right.

599
00:31:11.200 --> 00:31:14.340
And until then, we'll see
you next On Hansel minutes.

600
00:31:14.880 --> 00:31:26.010
<inaudible>.

