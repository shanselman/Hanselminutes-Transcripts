WEBVTT FILE

1
00:00:12.090 --> 00:00:16.320
From Hanselman it's dot com.
It's Hansel minutes. Oh, weekly

2
00:00:16.320 --> 00:00:20.430
discussion with web developer and
technologist Scott Hanselman. This is

3
00:00:20.430 --> 00:00:26.160
Lawrence Ryan announcing show number two
24. Recorded live Friday, July 23rd, 2010.

4
00:00:27.030 --> 00:00:29.970
Support for Hansel minutes is
provided by teller at rad

5
00:00:29.970 --> 00:00:33.510
controls. The most comprehensive suite
of components for windows forms

6
00:00:33.510 --> 00:00:42.060
and asp.net web applications. online@wwwdottlerik.com.
In this episode, Scott discusses

7
00:00:42.060 --> 00:00:45.990
the asp.net MVC three, cause
you one with Phil hat.

8
00:00:47.940 --> 00:00:50.280
Hi, this is Scott Hanselman
and this is another episode

9
00:00:50.280 --> 00:00:54.390
of Hansel minutes. Today. We're
chatting with Phil hack today.

10
00:00:54.510 --> 00:00:59.370
Phil, you released a preview
of MVC three. Congratulations. Thank

11
00:00:59.370 --> 00:01:04.920
you. So this is a
preview. It's not an alpha,

12
00:01:04.920 --> 00:01:06.930
it's not a beta. What's
the, what's the naming, like

13
00:01:07.050 --> 00:01:11.150
what are the rules? And
the naming here Preview is

14
00:01:12.020 --> 00:01:16.130
what we might've formally called
a CTP or community technology

15
00:01:16.130 --> 00:01:20.390
preview. We just generally call
them previews now, but it's

16
00:01:20.390 --> 00:01:23.150
an early bits. It's not
meant, you know, for you

17
00:01:23.150 --> 00:01:25.760
to go and launch a
business on the site. So,

18
00:01:26.420 --> 00:01:27.770
I mean, if he did,
I'm not going to go

19
00:01:27.770 --> 00:01:31.460
hunt you down, it's just
that your own risk, But

20
00:01:31.910 --> 00:01:34.220
community technology preview, where does
that fit in the alpha

21
00:01:34.220 --> 00:01:39.920
beta world? Like in English?
Probably such a Microsoft, Right?

22
00:01:39.920 --> 00:01:43.310
So by preview, we mean
that you get to see

23
00:01:43.310 --> 00:01:46.580
what we're thinking about for
the next version. It's not

24
00:01:46.580 --> 00:01:50.420
yet feature complete in any,
by any means. There's a

25
00:01:50.420 --> 00:01:54.050
lot more features we haven't
yet implemented and it's subject

26
00:01:54.050 --> 00:01:58.400
to change in drastic ways.
So, you know, typically closer

27
00:01:58.400 --> 00:02:01.040
to what you might consider
an alpha, whereas a beta

28
00:02:01.040 --> 00:02:04.070
release would be something that
we consider a feature, complete

29
00:02:05.570 --> 00:02:08.540
names of functions and things
like that. Aren't likely to

30
00:02:08.540 --> 00:02:12.110
change much, but we're looking
for feedback for bugs and

31
00:02:12.110 --> 00:02:14.240
that sort of thing. So
yeah, we're in the very

32
00:02:14.240 --> 00:02:19.220
early alpha phase. Are you
looking for feedback for things

33
00:02:19.220 --> 00:02:21.980
that maybe you hadn't thought
about, like features that we

34
00:02:22.100 --> 00:02:24.080
had missed out on or
features that they want to

35
00:02:24.080 --> 00:02:29.240
work a different way? A
little of both. So for

36
00:02:29.240 --> 00:02:32.390
example, we, we have a
limited budget of what features

37
00:02:32.390 --> 00:02:35.510
we can implement. So almost
more important for us, right?

38
00:02:35.540 --> 00:02:38.090
This point is looking at
the feature set that we

39
00:02:38.090 --> 00:02:41.480
did implement in preview one.
Are there ways we could

40
00:02:41.480 --> 00:02:45.440
have implemented it better to
serve, you know, people's needs

41
00:02:45.440 --> 00:02:48.890
and requirements, or are there
gaps in what we did

42
00:02:48.890 --> 00:02:50.930
implement that would make a
lot of sense for us

43
00:02:50.930 --> 00:02:54.230
to implement or, you know,
did the things we implement?

44
00:02:54.230 --> 00:02:56.900
Are they just playing wrong
or are, you know, or,

45
00:02:57.110 --> 00:03:00.070
you know, if you feel
kind hearted, what's good about

46
00:03:00.070 --> 00:03:02.200
the features that we implemented.
And what would you like

47
00:03:02.200 --> 00:03:05.170
to see more of though,
that I think that is

48
00:03:05.170 --> 00:03:07.570
the thing that we most
want to hear. And then,

49
00:03:08.260 --> 00:03:11.770
you know, other features that
we're missing, we certainly want

50
00:03:11.770 --> 00:03:14.950
to hear feedback on that.
Some of that, unless it's

51
00:03:14.950 --> 00:03:18.880
really cheap and, and has
a big win, maybe harder

52
00:03:18.880 --> 00:03:22.570
for us to factor in,
you know, unless the idea

53
00:03:22.570 --> 00:03:24.670
is so good that we
cut something else we were

54
00:03:24.670 --> 00:03:27.310
planning to implement because we
realized that this would provide

55
00:03:27.310 --> 00:03:30.480
more value. Where, where do
the ideas come from? I

56
00:03:30.480 --> 00:03:33.720
mean, that's, that's ultimately that
ultimately decided by you or

57
00:03:33.720 --> 00:03:36.450
is it you unless Scott
GU was in the room

58
00:03:36.450 --> 00:03:38.340
at the time? Or what,
how does that work? I

59
00:03:38.340 --> 00:03:41.100
just wouldn't box on my
wall that has a big

60
00:03:41.100 --> 00:03:44.130
suggestion sign on it. So
people combined slip pieces of

61
00:03:44.130 --> 00:03:48.330
paper in and I pull
them out. So anyone who

62
00:03:48.330 --> 00:03:50.550
wants anyone on the listeners
who wants a feature, they

63
00:03:50.550 --> 00:03:53.820
just stopped by your office
in Seattle, Drop a, you

64
00:03:53.820 --> 00:03:58.810
know, fill out a suggestion
form and triple kit, agile,

65
00:03:59.910 --> 00:04:06.540
agile, agile, well, most of
the ideas come from a

66
00:04:06.540 --> 00:04:11.310
variety of places, a, the
community, our customers who tell

67
00:04:11.310 --> 00:04:13.440
us, well, you know, they're
doing this and they need

68
00:04:13.440 --> 00:04:18.690
this. Then there's the Scott Guthrie
factor who he often had

69
00:04:18.690 --> 00:04:22.340
a lot of ideas and
he comes in and tells,

70
00:04:22.440 --> 00:04:25.260
tells me what cool things
he thinks we should do.

71
00:04:26.730 --> 00:04:28.740
I have my own ideas
of what we should do.

72
00:04:28.950 --> 00:04:31.710
And, and we also look
at, you know, what the

73
00:04:31.710 --> 00:04:35.610
competition is doing to say,
see, you know, Oh, they're

74
00:04:35.610 --> 00:04:38.700
doing, they're solving this problem
and we're not solving that

75
00:04:38.700 --> 00:04:41.670
problem. And, and you know,
now that we've had the

76
00:04:41.670 --> 00:04:43.950
framework out for a couple
of versions, some of it

77
00:04:43.980 --> 00:04:47.010
even comes from, you know,
our own internal app building.

78
00:04:47.220 --> 00:04:53.190
Like there are certain large
teams@microsoftbuildingonasp.net MVC. So it kind

79
00:04:53.190 --> 00:04:55.110
of helps them when we
talk to them and they

80
00:04:55.110 --> 00:04:57.480
can tell us that, you
know, we'd really like to

81
00:04:57.480 --> 00:05:01.920
see this or that in
there. What are some features

82
00:05:01.920 --> 00:05:04.890
in MVC three that are
either in this preview or

83
00:05:04.890 --> 00:05:08.910
plan that you got directly
from the community? Probably the

84
00:05:08.910 --> 00:05:14.940
biggest one is the usage
of the common service locator

85
00:05:14.940 --> 00:05:20.400
for dependency injection. So in
MEC three, preview one, we'd

86
00:05:20.550 --> 00:05:25.440
taken the common service locator
interface. So that's a community

87
00:05:25.440 --> 00:05:29.700
driven effort to build a
common interface for what you

88
00:05:29.700 --> 00:05:35.490
call service location, and then
the various IOC or, or

89
00:05:35.490 --> 00:05:41.010
inversion of control dependency, injection
container guys have all built

90
00:05:41.400 --> 00:05:45.780
implementations of this interface for
their different Dai containers. So

91
00:05:46.050 --> 00:05:49.650
there's an inject one, there's
a, a Windsor one, there's

92
00:05:49.650 --> 00:05:52.830
a structure map one. And
so we took that interface

93
00:05:52.860 --> 00:05:55.290
and in preview one, we
copied it into our source

94
00:05:55.290 --> 00:06:00.020
code. So in you, our,
our current goal is to

95
00:06:00.020 --> 00:06:03.080
actually take a dependency on
the actual CSL so that

96
00:06:03.650 --> 00:06:06.650
you wouldn't have to recompile
those implementations that are already

97
00:06:06.650 --> 00:06:09.920
out there. But what we've
done is we've taken that

98
00:06:09.920 --> 00:06:13.220
interface copied in their source
code and built up a

99
00:06:13.220 --> 00:06:16.790
set of dependency injection hooks
that make use of this

100
00:06:17.180 --> 00:06:23.180
service location interface. So that
feature there is, comes pretty

101
00:06:23.180 --> 00:06:26.660
directly from feedback from the
community saying, you need to

102
00:06:26.660 --> 00:06:32.000
have more dependency, injection hooks
in asp.net MVC. So we

103
00:06:32.000 --> 00:06:34.790
took that feedback and we
also looked at what community

104
00:06:34.790 --> 00:06:37.250
efforts were out there and,
and pull that into our

105
00:06:37.250 --> 00:06:41.050
code. Was that controversial to
pick the common service locator,

106
00:06:41.350 --> 00:06:45.040
either in the community or
within Microsoft with like, as

107
00:06:45.040 --> 00:06:48.100
you're taking a dependency at
this point on, you know,

108
00:06:48.400 --> 00:06:52.450
on an opensource project, on
the interface level? Well, I

109
00:06:52.450 --> 00:06:54.190
guess some of the, you
know, it remains to be

110
00:06:54.190 --> 00:06:57.430
seen what controversy we will
face as we're just releasing,

111
00:06:57.430 --> 00:07:01.150
but internally there's a little
bit of hesitation to take

112
00:07:01.150 --> 00:07:06.160
a dependency on yet another
assembly. Now, fortunately, the assembly

113
00:07:06.160 --> 00:07:10.300
is written by the PNP
group, but it's a, you

114
00:07:10.300 --> 00:07:14.650
know, Microsoft upstart assembly, it's
not in the.net framework. And

115
00:07:14.650 --> 00:07:16.930
that means that we have
to deal with the overhead

116
00:07:16.930 --> 00:07:20.680
of shipping an extra assembly,
which doesn't sound like much,

117
00:07:20.710 --> 00:07:23.710
but unfortunately it's not, it's
not as trivial as it

118
00:07:23.770 --> 00:07:27.730
sounds like, you know, in
terms of now we're going

119
00:07:27.730 --> 00:07:29.140
to, how are we going
to have to support that

120
00:07:29.140 --> 00:07:31.900
and have the five plus
five, you know, the five

121
00:07:31.900 --> 00:07:35.680
years of support and five
years of servicing or whatever,

122
00:07:35.890 --> 00:07:40.690
you know, you high level
servicing contracts. We have not

123
00:07:40.690 --> 00:07:43.480
only that from the community,
I imagine there's going to

124
00:07:43.480 --> 00:07:45.970
be some, there's going to
be a little bit of

125
00:07:45.970 --> 00:07:48.730
controversy in that, you know,
for some yeah. And, and

126
00:07:48.730 --> 00:07:53.110
IOC container authors who originally
supported the common service locator

127
00:07:53.470 --> 00:07:55.990
now, not all of them
continue to support that model

128
00:07:55.990 --> 00:08:00.310
because it, by definition has
to be a bit of

129
00:08:00.450 --> 00:08:04.480
a lowest common denominator of
what the DEI containers out

130
00:08:04.480 --> 00:08:09.820
there implement. You're using, you
know, a certain, you know,

131
00:08:09.820 --> 00:08:13.180
whatever Dai container and you're
using all his advanced features.

132
00:08:13.780 --> 00:08:17.020
They might not be exposed
by the service locator. I

133
00:08:17.020 --> 00:08:19.420
think that the good news
about it though, is that

134
00:08:20.020 --> 00:08:23.200
we don't get in the
business of having a common

135
00:08:23.200 --> 00:08:27.490
registration interface. All we're doing
is using the service locator

136
00:08:27.490 --> 00:08:31.270
to look up instances based
on, you know, the information

137
00:08:31.270 --> 00:08:34.510
you gave us. So I
think, and if you don't

138
00:08:34.510 --> 00:08:37.600
want to use the service
locator API, we still have

139
00:08:37.600 --> 00:08:40.810
these hooks in the framework.
So you can use, you

140
00:08:40.810 --> 00:08:43.810
know, your DEI container more
directly and kind of get

141
00:08:43.810 --> 00:08:47.800
in there and hook things
up. But I think the

142
00:08:47.800 --> 00:08:52.810
overall benefit, I think it's
overall better because, you know,

143
00:08:52.810 --> 00:08:56.910
we certainly wouldn't want to
invent our own interface for

144
00:08:57.630 --> 00:09:03.060
abstracting away dependency, injection. I
think that would go, that

145
00:09:03.060 --> 00:09:06.900
wouldn't go over very well
at all. And I think

146
00:09:06.900 --> 00:09:11.160
it's overall good to support
a community effort that that

147
00:09:11.220 --> 00:09:15.620
occurred. Okay. Well, what are
some other significant features that

148
00:09:15.620 --> 00:09:17.870
are in NVC three that
people have been waiting for?

149
00:09:19.130 --> 00:09:22.160
One of the most interesting
features that people been discussing

150
00:09:22.160 --> 00:09:25.040
is the razor view engine.
This was kind of a

151
00:09:25.040 --> 00:09:27.410
big deal because you're actually
making this the default now.

152
00:09:29.090 --> 00:09:32.540
Yeah. Yeah. Although you'll be
able to select the web

153
00:09:32.540 --> 00:09:34.760
form view engine very easily
when you create a new

154
00:09:34.760 --> 00:09:38.420
project. But yeah, the razor
V engine has a pretty

155
00:09:38.420 --> 00:09:41.060
slick syntax. That's based on
some of the work that

156
00:09:41.060 --> 00:09:45.170
we did for the web
matrix family of products, Is

157
00:09:45.170 --> 00:09:49.640
this another assembly as well?
Or how do you have

158
00:09:49.640 --> 00:09:53.330
an application that uses razor
and MVC, and then that

159
00:09:53.330 --> 00:09:56.690
might also be using razor
in another way, or razors

160
00:09:56.690 --> 00:10:01.250
running on another website on
the same machine. Yeah. So

161
00:10:01.250 --> 00:10:04.220
that, what that's going to
mean is that if it,

162
00:10:04.220 --> 00:10:06.500
an NBC is going to
have to take a dependency

163
00:10:06.500 --> 00:10:12.140
at some point on the
assemblies that the razor compiler,

164
00:10:12.140 --> 00:10:15.710
which is in its own
assembly and then some, and

165
00:10:15.710 --> 00:10:19.910
there's, there's a common infrastructure
that's shared between asp.net web

166
00:10:19.910 --> 00:10:27.500
pages, which is the new,
simple web matrix, asp.net framework

167
00:10:28.070 --> 00:10:31.820
and asp.net MVC. So there,
we're going to have to

168
00:10:31.820 --> 00:10:37.100
share a common infrastructure, some
common infrastructure assemblies that allow

169
00:10:37.100 --> 00:10:43.160
us to have the same
syntax in both scenarios. Yeah.

170
00:10:43.160 --> 00:10:45.500
And then what's really what
I really like about the

171
00:10:45.500 --> 00:10:48.680
razor syntax is that it's
a very, very clean and

172
00:10:48.680 --> 00:10:52.610
terse syntax. There's a, it
kind of strips away all

173
00:10:52.610 --> 00:10:55.730
the, a lot of the
noise that comes with, you

174
00:10:55.730 --> 00:10:58.190
know, current, like our current
templating languages, where you have

175
00:10:58.190 --> 00:11:03.290
this less than percent, something
percent greater than the razor

176
00:11:03.300 --> 00:11:07.670
syntax really understands the language,
you know, the C sharp

177
00:11:07.670 --> 00:11:11.060
language and it understands HTML.
And it's able to take

178
00:11:11.060 --> 00:11:14.810
that contextual information about, you
know, the fact that it

179
00:11:14.810 --> 00:11:16.640
knows what C-sharp looks like
and knows what they should

180
00:11:16.640 --> 00:11:21.530
TML looks like and really
streamlines what you have to

181
00:11:21.530 --> 00:11:24.590
do within a template in
order to render out HTML.

182
00:11:25.130 --> 00:11:26.870
So if you've seen Scott
got through his blog posts,

183
00:11:26.870 --> 00:11:29.720
you can see some of
the samples where, you know,

184
00:11:30.050 --> 00:11:33.350
it's really, really clean and
when you actually start using

185
00:11:33.350 --> 00:11:35.510
it, and this is something
I found is when I

186
00:11:35.510 --> 00:11:38.240
started using it, I felt
like there, there are many

187
00:11:38.240 --> 00:11:42.350
times where I was writing
out a view and it's

188
00:11:42.350 --> 00:11:45.580
almost like things work just
the way that you, your,

189
00:11:45.580 --> 00:11:49.520
your brain works, if that
makes any sense. So, you

190
00:11:49.520 --> 00:11:51.740
know, like I do a,
for each loop, write some

191
00:11:51.740 --> 00:11:54.850
HTML and then just close
curly brace. And, you know,

192
00:11:54.850 --> 00:11:56.470
there was a moment where
I thought, Oh, wait, am

193
00:11:56.470 --> 00:11:59.380
I supposed to escape that?
And, you know, curly we

194
00:11:59.540 --> 00:12:02.950
for the four block. But
what I naturally did was

195
00:12:02.950 --> 00:12:05.950
just closed the four block
and it just works. Now

196
00:12:05.950 --> 00:12:07.870
this might, none of this
might make sense, but if

197
00:12:07.870 --> 00:12:10.840
you actually look at the
code samples or get a

198
00:12:10.840 --> 00:12:13.750
chance to start playing with
it, hopefully that'll make it

199
00:12:14.080 --> 00:12:16.920
make more sense. What I
think is significant about it

200
00:12:16.920 --> 00:12:19.620
though, is that, and if
I maybe be so bold,

201
00:12:19.620 --> 00:12:22.890
you're your code focused person,
you know, you thought you

202
00:12:22.890 --> 00:12:26.370
probably think in code first
and HTML second. So for

203
00:12:26.370 --> 00:12:31.770
you a, a templating language
from markup that is, you

204
00:12:31.770 --> 00:12:36.450
know, 51% code and 49%
markup makes total sense and

205
00:12:36.450 --> 00:12:39.330
is incredibly intuitive. And then
someone else might be a

206
00:12:39.330 --> 00:12:43.380
markup head, a would prefer
using something like spark, which

207
00:12:43.380 --> 00:12:49.170
is different from razor and
liens and differs to HTML

208
00:12:49.170 --> 00:12:53.250
and markup more than it
differs to code. So I

209
00:12:53.250 --> 00:12:56.460
think that, that's interesting though,
this really is called focused

210
00:12:56.460 --> 00:12:57.900
markup. And a lot of
people have thought that these

211
00:12:57.900 --> 00:13:00.810
things were real similar. There
was some initial frustration and

212
00:13:00.810 --> 00:13:03.420
like, why did Microsoft invent
this? And why didn't they

213
00:13:03.420 --> 00:13:05.490
just take spark? But I
would really encourage people to

214
00:13:05.490 --> 00:13:09.480
try both because they're, they're
really different. Yeah. I think

215
00:13:09.480 --> 00:13:12.810
they are really different. It's
a different philosophy in terms

216
00:13:12.810 --> 00:13:17.280
of being a imperative or
declarative. And I think a

217
00:13:17.700 --> 00:13:21.720
Razor's more code as you
mentioned, more code focus. Also.

218
00:13:21.840 --> 00:13:24.810
Unfortunately, one of the features
that we haven't yet implemented

219
00:13:24.810 --> 00:13:26.910
razor is one of the
ones that I think is

220
00:13:26.910 --> 00:13:30.090
really going to show the
power of razor, which is

221
00:13:30.090 --> 00:13:34.530
something that we've been discussing
around kind of like this

222
00:13:34.530 --> 00:13:39.120
thing called helpers, where you
can write methods that return

223
00:13:39.120 --> 00:13:44.310
blocks of HTML and in
C sharp. For example, when

224
00:13:44.310 --> 00:13:46.020
you write a method, let's
say you read an HTML

225
00:13:46.020 --> 00:13:49.710
dot textbox method. You have
to kind of build up

226
00:13:49.710 --> 00:13:52.290
that HTML for the text
box, right? You have to,

227
00:13:52.290 --> 00:13:54.990
you know, do the string
concatenation and all this weird

228
00:13:54.990 --> 00:14:00.240
escaping, but with CSH TML
or the razor syntax, you

229
00:14:00.240 --> 00:14:02.430
know, we plan to have
this way where you could

230
00:14:02.460 --> 00:14:06.120
write this function, that when
you return HTML, you can

231
00:14:06.150 --> 00:14:10.440
just return HTML as a
literal, as a literal. So

232
00:14:10.440 --> 00:14:15.060
a lot like XML literals
in vb.net, you'll have that

233
00:14:15.060 --> 00:14:21.480
kind of concept within, within
razor. And all the encoding

234
00:14:21.480 --> 00:14:24.420
is done just for you
correctly and all that stuff.

235
00:14:24.970 --> 00:14:30.360
You have really powerful mechanisms
for building up HTML. So,

236
00:14:30.360 --> 00:14:32.400
you know, HTML, literals, I
think, are going to be

237
00:14:32.400 --> 00:14:36.180
really, really cool. This is
the part of the show

238
00:14:36.180 --> 00:14:40.560
where I mock you while
actually Tellerik mock says your

239
00:14:40.560 --> 00:14:44.040
applications that you're testing dependent
on external systems over which

240
00:14:44.040 --> 00:14:46.620
you have no control. Maybe
you're being slowed down by

241
00:14:46.620 --> 00:14:49.830
those systems, their lack of
availability, responsiveness. Do you want

242
00:14:49.830 --> 00:14:53.060
to do TDD, right? Our
friends at Tellerik help you

243
00:14:53.060 --> 00:14:55.640
solve some of those problems
with their newest marketing tool,

244
00:14:55.850 --> 00:14:59.180
just mock it to let
you do fast, simple controlled

245
00:14:59.180 --> 00:15:03.470
unit tests, independent of external
resources like databases, web services,

246
00:15:03.770 --> 00:15:07.790
proprietary code, unlike some mocking
tools, just mock works with

247
00:15:07.790 --> 00:15:12.770
non-virtual methods, seal classes, static
methods, giving you complete control

248
00:15:12.770 --> 00:15:15.410
of your code. You can
get more details. You can

249
00:15:15.410 --> 00:15:20.510
download just mock at telerik.com/just
mock. And don't forget to

250
00:15:20.510 --> 00:15:23.210
thank Tellerik for supporting Hanselman
it's on their Facebook fan

251
00:15:23.210 --> 00:15:29.750
page, facebook.com/tellerik. Thanks a lot
or HTML liberals. That's something

252
00:15:29.750 --> 00:15:31.790
that someone can, can screw
up that they can do

253
00:15:31.790 --> 00:15:35.360
wrong. I mean, are aren't
people going to be effectively

254
00:15:35.450 --> 00:15:39.320
concatenating strings just, and then
burying it instead of helper?

255
00:15:40.630 --> 00:15:44.020
Well, well, that's, that's a,
that's a nice approach is

256
00:15:44.020 --> 00:15:49.000
that it's not concatenating strings.
It's using HTML literals, and

257
00:15:49.000 --> 00:15:52.570
it's more like interpolation. So
let's say I want to

258
00:15:52.720 --> 00:15:58.000
re return a national text
box right now, right? In

259
00:15:58.000 --> 00:16:01.360
C sharp, you would say,
you know, return quote, you

260
00:16:01.360 --> 00:16:03.970
know, less than input type
equals text, you know, and

261
00:16:03.970 --> 00:16:06.580
then do a bunch of
string concatenation to build that

262
00:16:06.580 --> 00:16:10.630
up with this new helper
syntax, you might just do

263
00:16:10.630 --> 00:16:15.880
return less than input type
equals blah app, you know,

264
00:16:15.880 --> 00:16:21.340
name at value directly in
the HTML as if you

265
00:16:21.340 --> 00:16:23.560
were building a template. So
another way to look at

266
00:16:23.560 --> 00:16:25.570
it is this almost like
we turn template, you know

267
00:16:25.570 --> 00:16:29.020
what I mean? We turn
HTML template, but, but you

268
00:16:29.020 --> 00:16:35.140
can do that template in
line. Yeah. So, so because

269
00:16:35.140 --> 00:16:37.510
the templating engine is, is
the way that it is,

270
00:16:37.510 --> 00:16:42.010
it's the older ways of
doing things just aren't necessarily

271
00:16:42.040 --> 00:16:45.040
it's, it's, it's a, it's
a templating language in itself.

272
00:16:45.040 --> 00:16:47.470
There's no reason to do
a lot of this plus

273
00:16:47.470 --> 00:16:50.500
that plus that type of
work. Yeah. I mean, th

274
00:16:50.520 --> 00:16:53.890
th the parser and the,
a compiler for this templating

275
00:16:53.890 --> 00:16:57.190
engine have been written ground
up. So, you know, which

276
00:16:57.190 --> 00:17:00.340
is another real key benefit
of, of razor view engine

277
00:17:00.340 --> 00:17:04.510
and razor syntax is that
the, you know, if you

278
00:17:04.510 --> 00:17:06.700
look at the web forms,
parser, you know, the page

279
00:17:06.730 --> 00:17:11.590
parser that has deep ties
into the asp.net runtime, so

280
00:17:11.590 --> 00:17:14.200
you, you kinda need the
runtime to even run the

281
00:17:14.200 --> 00:17:18.310
parser that takes the SPX
code and generates a C

282
00:17:18.310 --> 00:17:21.820
sharp class. So, you know,
not everyone realizes that every

283
00:17:21.820 --> 00:17:24.010
time you hit an ASP
X page, unless you do

284
00:17:24.190 --> 00:17:28.030
pre compilation, there's a runtime
compile that runs parses that

285
00:17:28.030 --> 00:17:31.030
whole thing and puts this
file in your temporary speed

286
00:17:31.030 --> 00:17:34.360
on it files that has
the full actual code. And

287
00:17:34.570 --> 00:17:36.760
that code is, you know,
a bunch of response. Right,

288
00:17:36.850 --> 00:17:41.860
right, right. Right. So with
the razor syntax, you can,

289
00:17:42.730 --> 00:17:45.400
you can do that outside
of asp.net. You don't need

290
00:17:45.400 --> 00:17:49.320
a speed on it, runtime
in process to take a

291
00:17:49.530 --> 00:17:54.120
razor template and compile a
class from that template. So

292
00:17:54.120 --> 00:17:58.560
I'm Andrew nurse who wrote
the parser for razor recently

293
00:17:58.560 --> 00:18:00.510
wrote a blog post, where
he shows how you can

294
00:18:00.990 --> 00:18:07.500
invoke the razor parser outside
of asp.net to compile a

295
00:18:07.560 --> 00:18:10.770
CSA HTML file. And I
think that's going to open

296
00:18:10.770 --> 00:18:14.400
up a lot of really
cool scenarios. For example, if

297
00:18:14.400 --> 00:18:19.110
you have a, if you
want to fully compile a

298
00:18:19.170 --> 00:18:23.730
list, asp.net MVC application, you
could, you could, you know,

299
00:18:23.760 --> 00:18:27.180
perhaps use the same code
that he did put in

300
00:18:27.180 --> 00:18:29.910
a T four template and
have the <inaudible> template, run

301
00:18:29.910 --> 00:18:33.660
it over all your, you
know, views and compile your

302
00:18:33.660 --> 00:18:37.070
views into an assembly. These
things that Andrew is showing

303
00:18:37.100 --> 00:18:40.520
are they plans is this
is this, you know, sometimes

304
00:18:40.520 --> 00:18:42.980
someone will come out with
a piece of software and

305
00:18:42.980 --> 00:18:44.990
then they'll write a blog
post about the crazy things

306
00:18:44.990 --> 00:18:47.210
you can do with it.
But those are kind of

307
00:18:47.210 --> 00:18:52.190
filed under crazy things. Is
Andrew showing us that, Hey,

308
00:18:52.190 --> 00:18:55.910
look, I can use razor
to generate HTML and spam

309
00:18:55.910 --> 00:19:01.430
people, but is that a
core, is that a core

310
00:19:01.430 --> 00:19:06.980
scenario? Well, what he's showing
is a consequence of conscious

311
00:19:06.980 --> 00:19:09.920
design choices. So it is
a course scenario, for example,

312
00:19:09.920 --> 00:19:17.540
that the razor syntax can
be fully compiled. So without

313
00:19:17.810 --> 00:19:21.710
re re without requiring the
speed on at runtime, Scott

314
00:19:21.710 --> 00:19:24.260
got three mentioned in his
blog post that, for example,

315
00:19:24.260 --> 00:19:26.720
we want to look at
ways that you can unit

316
00:19:26.720 --> 00:19:30.140
test your views if you
so choose. So, you know,

317
00:19:30.140 --> 00:19:33.350
I, I personally, don't, I'm
not a fan of unit

318
00:19:33.350 --> 00:19:36.680
testing views. I think that's
more of a functional testing

319
00:19:36.710 --> 00:19:39.800
type of thing, but, but
you know, maybe you're building

320
00:19:39.800 --> 00:19:43.480
a simple partial view, right.
That's really, really simple. And

321
00:19:43.480 --> 00:19:45.230
you just want to write
a unit test to make

322
00:19:45.230 --> 00:19:48.410
sure that a few things
are in there correctly. The

323
00:19:48.410 --> 00:19:49.910
idea here is that you
would be able to write

324
00:19:49.910 --> 00:19:53.540
that unit test without having
to spawn up an asp.net

325
00:19:54.170 --> 00:19:58.130
app domain. And that would
be a very cool consequence

326
00:19:58.130 --> 00:20:01.000
of conscious design choices that
we've made. And that's, that's,

327
00:20:01.370 --> 00:20:03.920
that is a scenario that
we want to work in

328
00:20:03.920 --> 00:20:07.370
and make sure is enabled.
Yeah. The first thing that

329
00:20:07.370 --> 00:20:10.040
I thought about when I
saw the razor could do

330
00:20:10.040 --> 00:20:12.380
that, was that I would
use it to, to generate

331
00:20:13.520 --> 00:20:16.910
doing a direct mail generate
email. Does that seem like

332
00:20:16.910 --> 00:20:21.800
a pretty good scenario? Yeah,
I think that's quite possible.

333
00:20:24.170 --> 00:20:27.020
Yeah. Yeah, sure. I don't
send a lot of emails,

334
00:20:27.020 --> 00:20:30.350
so I don't know. Go
ahead and take a stand

335
00:20:30.350 --> 00:20:34.640
there, Phil. Sure. If you
want to start your spam

336
00:20:34.640 --> 00:20:38.570
King empire, It's more about,
I'm trying to think about

337
00:20:38.570 --> 00:20:42.560
places where I've done stuff
before and hadn't done. He

338
00:20:42.560 --> 00:20:50.980
didn't he v.one H G
R a anymore. I said

339
00:20:50.980 --> 00:20:54.270
I don't need any, any
of your Viagra. Okay. Yeah.

340
00:20:54.270 --> 00:20:57.300
We'll cut that out. I'm
sorry. I think it's early

341
00:20:57.300 --> 00:21:00.360
for both of us. Pro
programmers should never have podcasts

342
00:21:00.360 --> 00:21:06.000
at 9:00 AM. My friend. You're
probably podcasting from your pajamas.

343
00:21:06.270 --> 00:21:09.420
I talked at the MVC
conference yesterday, right? You did

344
00:21:09.420 --> 00:21:15.120
to the <inaudible> dot com
and apparently there was some

345
00:21:15.120 --> 00:21:18.480
controversy on a controversy. It's
funny how people say controversy.

346
00:21:18.660 --> 00:21:23.100
There were three tweets. There's
intense controversy on Twitter about

347
00:21:23.100 --> 00:21:25.260
whether or not I was
wearing pants because it was

348
00:21:25.260 --> 00:21:27.450
a virtual conference. And we
did the whole thing over

349
00:21:27.450 --> 00:21:31.320
the whole with a live
meeting. Oh, did you? Oh,

350
00:21:31.320 --> 00:21:34.140
so did you actually record
video of yourself while you're

351
00:21:34.140 --> 00:21:36.960
giving your talk? Yeah, I
just I'm everyone else was

352
00:21:36.960 --> 00:21:40.920
doing live meeting with projecting
and I just don't like

353
00:21:40.920 --> 00:21:42.690
that. I feel that if
you, if you, if you

354
00:21:42.690 --> 00:21:46.350
see the person, it is
more engaging. So I broadcasted

355
00:21:46.350 --> 00:21:48.630
video during my, my talk.
I felt that it was,

356
00:21:48.640 --> 00:21:50.550
You know, I kind of
would have liked to have

357
00:21:50.550 --> 00:21:55.260
done that, except I, I
have trouble with the lightning

358
00:21:55.270 --> 00:21:58.920
software. I have no idea
how to use it. Well,

359
00:21:59.760 --> 00:22:03.030
we probably should have come
up with some non live

360
00:22:03.030 --> 00:22:07.340
meeting way to do it,
but you know, Ustream is,

361
00:22:07.340 --> 00:22:11.070
is pretty useful, but Ustream
makes it is great. If

362
00:22:11.070 --> 00:22:14.100
one person is doing the
broadcasting, but since people were

363
00:22:14.670 --> 00:22:18.000
broadcasting from all over, it
would have been very difficult.

364
00:22:18.000 --> 00:22:20.580
And we would have had
to have had people bounce

365
00:22:20.580 --> 00:22:23.700
from room to room or
figure out some kind of

366
00:22:23.700 --> 00:22:28.740
global handoff as one person
in Seattle stops. And another

367
00:22:28.740 --> 00:22:32.190
person in Australia starts. So
there were some complaints about

368
00:22:32.190 --> 00:22:33.990
having to install live, meaning
it is kind of a

369
00:22:33.990 --> 00:22:38.550
crappy. Yeah. But overall I
felt that conference was really

370
00:22:38.550 --> 00:22:42.810
successful and a really interesting
model for potential future virtual

371
00:22:42.810 --> 00:22:45.960
conferences. I think it was
really significant. People had said

372
00:22:45.960 --> 00:22:47.790
that it was the best
Microsoft conference that I've ever

373
00:22:47.790 --> 00:22:51.750
been to because they felt
that Microsoft wasn't marketing to

374
00:22:51.750 --> 00:22:56.430
them. It was truly an
educational conference. And that's interesting

375
00:22:56.430 --> 00:22:58.920
because I've attended lots of
tech heads and PDCs, and

376
00:22:58.920 --> 00:23:01.080
I've never really felt I
was being sold to, but

377
00:23:01.080 --> 00:23:03.360
that may just mean that
I'm numb to it now.

378
00:23:04.050 --> 00:23:08.220
Yeah. Yeah. Well, yeah. And
I mean, for me, like

379
00:23:08.220 --> 00:23:10.170
I didn't have to leave
my family and go fly

380
00:23:10.170 --> 00:23:12.930
somewhere. And it took very
little time out of my

381
00:23:12.930 --> 00:23:17.520
day to give this presentation.
And this, the feedback that

382
00:23:17.520 --> 00:23:21.270
I got from the presentation
was extremely positive and it

383
00:23:21.300 --> 00:23:23.550
made me feel good just
that this was a conference

384
00:23:23.550 --> 00:23:25.680
built around, you know, the
product that I work on,

385
00:23:25.680 --> 00:23:29.400
a speed on NBC, that,
that the community people are

386
00:23:29.400 --> 00:23:32.040
so passionate about it that,
you know, they went on

387
00:23:32.040 --> 00:23:35.910
and put this, put on
this conference that in many

388
00:23:35.910 --> 00:23:39.510
ways is kind of a
leading indicator of what, where

389
00:23:39.510 --> 00:23:43.140
conferences might go into the
future. Right. It's very innovative.

390
00:23:43.140 --> 00:23:45.920
It was very, it was
very exciting to be a

391
00:23:45.920 --> 00:23:49.270
part of that. Yeah. It's
interesting. I tried to explain

392
00:23:49.270 --> 00:23:52.030
to the wife why I
thought that this was important

393
00:23:52.030 --> 00:23:55.900
to do on my vacation.
And I was trying to

394
00:23:55.900 --> 00:24:00.460
explain to her they're 540
people that were watching my

395
00:24:00.460 --> 00:24:04.300
silly little talk, like 500
people think about all the

396
00:24:04.300 --> 00:24:07.480
flying that I did last
year to talk to 500

397
00:24:07.480 --> 00:24:12.280
people. Yeah, yeah, yeah, exactly.
I had a little bit

398
00:24:12.280 --> 00:24:16.000
of technical difficulties and I
went on Twitter to say,

399
00:24:16.060 --> 00:24:18.220
ah, you know, I'm, I'm,
I'm running into difficulties, but

400
00:24:18.220 --> 00:24:21.580
I'll be there soon. And
someone replied back, you know,

401
00:24:21.790 --> 00:24:24.160
ah, don't worry about it,
Phil. There's only 300 people

402
00:24:24.160 --> 00:24:32.620
waiting for you. Okay. So
we've got razor view engine,

403
00:24:32.620 --> 00:24:36.250
we've got new hooks for
dependency injection that hopefully people

404
00:24:36.250 --> 00:24:40.180
will jump, jump at and
start finding out new ways

405
00:24:40.180 --> 00:24:43.720
that they can kind of
tease apart MVC and make

406
00:24:43.720 --> 00:24:45.850
it do what they want.
What else, what else do

407
00:24:45.850 --> 00:24:50.980
we have in NBC three
preview one We've added support

408
00:24:50.980 --> 00:24:57.430
for.net for data annotations and
metadata attributes. So, you know,

409
00:24:57.430 --> 00:25:00.430
one con bit of confusion
that people had on MVC

410
00:25:00.430 --> 00:25:03.970
too, was that even though
MPC two ran on both.net

411
00:25:03.970 --> 00:25:07.180
three, five S P one
and on dotnet four, it

412
00:25:07.180 --> 00:25:11.230
didn't out of the box
support.net for data annotations or,

413
00:25:11.260 --> 00:25:14.800
or data annotations that were
new to Donna for. And

414
00:25:14.800 --> 00:25:17.950
the simple reason was while
we compiled that against 3.5

415
00:25:17.950 --> 00:25:21.130
so that we could run
it on both platforms and

416
00:25:21.310 --> 00:25:23.920
being compiled against 3.5, it
has no idea that there's

417
00:25:23.920 --> 00:25:27.970
these new attributes and.net four,
but with ASP dynamic three

418
00:25:28.360 --> 00:25:34.540
we've dropped support for <inaudible>.
We only support.net for, because

419
00:25:34.540 --> 00:25:37.270
we compile against on net
for and by doing so

420
00:25:37.270 --> 00:25:39.580
we get this advantage that
we can now take advantage

421
00:25:39.580 --> 00:25:41.770
of all the new features
in dotnet for such as

422
00:25:41.770 --> 00:25:48.310
conditional parameters and these new
data annotations. So, you know,

423
00:25:48.310 --> 00:25:51.340
one simple case is we
used to use the display

424
00:25:51.340 --> 00:25:55.480
name attribute when you wanted
to Mark up a property

425
00:25:55.480 --> 00:25:57.820
to say, well, when you
display this property using one

426
00:25:57.820 --> 00:26:02.080
of our templates, did helpers
use this screen? But the

427
00:26:02.080 --> 00:26:06.010
display name attribute doesn't support
the resource strings, but in

428
00:26:06.010 --> 00:26:09.400
dotnet four, they added the
display attributes and that supports

429
00:26:09.400 --> 00:26:15.490
resource strings and localization, other
validation attributes. For example, there

430
00:26:15.490 --> 00:26:18.250
was this, the old validation
attributes had an is valid

431
00:26:18.250 --> 00:26:20.330
method and you just return
true or false, and you

432
00:26:20.410 --> 00:26:23.800
just got the value and
that's it with a new

433
00:26:23.800 --> 00:26:27.100
validation attributes. They have an
overload of is valid. That

434
00:26:27.100 --> 00:26:30.640
gives you this validation context.
And that context gives you

435
00:26:30.640 --> 00:26:34.270
a lot of information about
where you are in the

436
00:26:34.270 --> 00:26:36.460
validation, so that you can
say, Oh, I'll use the

437
00:26:36.460 --> 00:26:43.060
validation context to look at
other properties and, and validate

438
00:26:43.080 --> 00:26:47.570
this property based on that
things, things like that Does.

439
00:26:47.630 --> 00:26:51.860
So does this mean that
there is no using MVC

440
00:26:51.860 --> 00:26:56.780
three or outside of DetNet
for correct. Okay. So the,

441
00:26:56.780 --> 00:26:59.720
so two old people can
keep doing their thing, but

442
00:27:00.350 --> 00:27:03.050
NBC three is a, is
a more than gentle nudge

443
00:27:03.770 --> 00:27:07.280
in the direction of moving
towards and for Correct. And

444
00:27:07.280 --> 00:27:11.120
video studio 2010. So we,
you won't be able to

445
00:27:11.120 --> 00:27:17.690
build that NBC three apps
using visual studio 2008. Hmm.

446
00:27:18.320 --> 00:27:21.290
Do, do you think that'll
be a controversial decision or

447
00:27:21.290 --> 00:27:25.160
is that the whole point
of doing a preview? Well,

448
00:27:26.240 --> 00:27:28.820
it is a, yes, that,
that is the point of

449
00:27:28.820 --> 00:27:31.250
the preview. I think there
will be a lot of

450
00:27:31.250 --> 00:27:36.230
people who will be disappointed
by that decision, but, and

451
00:27:36.530 --> 00:27:38.840
who knows, maybe it will
be controversial, but I think

452
00:27:38.840 --> 00:27:41.260
in the, for the long
run for this feature of

453
00:27:41.270 --> 00:27:43.790
the framework, I think most,
I hope most people will

454
00:27:43.790 --> 00:27:47.300
understand why we made that
decision is that if we

455
00:27:47.540 --> 00:27:50.840
stick to detonate three, five,
there's a lot of innovations

456
00:27:50.840 --> 00:27:53.360
and improvements that we can't
take advantage of. Then, you

457
00:27:53.360 --> 00:27:57.770
know, our framework, it will
stagnate. And so by moving

458
00:27:57.770 --> 00:28:00.890
to.net for a lot of
people who aren't yet ready

459
00:28:00.890 --> 00:28:04.040
to move to.net for, you
know, won't be able to

460
00:28:04.040 --> 00:28:07.550
use it, which is a
disappointment. But for example, the

461
00:28:07.550 --> 00:28:10.010
razor syntax, we wouldn't be
able to adopt that because

462
00:28:10.010 --> 00:28:14.900
that is built on.net for,
we had improvements to.net for

463
00:28:14.900 --> 00:28:18.380
specifically the support scenarios that
we needed to even implement

464
00:28:18.410 --> 00:28:22.700
the razor view engine. So
in the long run, I

465
00:28:22.700 --> 00:28:24.940
think, you know, I personally
think it's the right, right

466
00:28:25.030 --> 00:28:27.620
decision. I mean, I really
want to move things forward

467
00:28:27.620 --> 00:28:31.220
and not have too much
of this attachment to the

468
00:28:31.220 --> 00:28:34.850
past. Although I can understand
that, you know, it will

469
00:28:34.850 --> 00:28:38.750
be painful for some, but,
you know, I think <inaudible>

470
00:28:38.770 --> 00:28:43.340
is a great framework as
well. And will people, people

471
00:28:43.340 --> 00:28:44.780
will be able to use
it for a long time.

472
00:28:45.380 --> 00:28:47.930
Yeah. I think that, that
is a really challenging thing.

473
00:28:47.930 --> 00:28:50.030
Like when do you, when
does one make that move?

474
00:28:50.030 --> 00:28:52.460
But I think the point
is that NBC twos out

475
00:28:52.460 --> 00:28:56.570
there it's, it's open source
as well. <inaudible> is still

476
00:28:56.570 --> 00:29:03.410
open source, right? Same license.
So yeah about that. So

477
00:29:03.410 --> 00:29:07.400
NBC is a, you know,
released and MP3 won't be

478
00:29:07.400 --> 00:29:10.460
released for awhile anyway. So
there's a lot of time

479
00:29:10.460 --> 00:29:13.100
for people, you know, to
adjust in terms of the

480
00:29:13.100 --> 00:29:16.640
licenses. The way we work
with the open source licenses

481
00:29:16.640 --> 00:29:21.650
is that we only release
the OSI certified open source

482
00:29:21.650 --> 00:29:25.670
license. You know, the MSPL
source code when we actually

483
00:29:25.670 --> 00:29:28.790
do the RTM release. So
we did that with MVC

484
00:29:28.790 --> 00:29:31.370
one. We did that with
MVC two, and we'll probably

485
00:29:31.370 --> 00:29:36.650
do that with NBC three,
the preview releases, we use

486
00:29:37.310 --> 00:29:39.950
what we call, we do
release a source code, but

487
00:29:39.950 --> 00:29:43.330
it's not under an, an
open source license. It's under

488
00:29:43.330 --> 00:29:48.640
some asp.net pre-release license. The
reason we do that is

489
00:29:48.640 --> 00:29:51.820
to cut costs legal costs
because we have to do

490
00:29:51.820 --> 00:29:54.820
a whole bunch of legal
work every time we release

491
00:29:54.850 --> 00:29:57.880
source code under MSPL. And
it's just easier that way

492
00:29:57.970 --> 00:30:00.580
when we're in development, that
we just do it under

493
00:30:00.580 --> 00:30:04.140
this other license. Interesting. So
it sounds like a Microsoft

494
00:30:04.140 --> 00:30:10.710
ism. Sure. It, I don't
think it's unique to Microsoft

495
00:30:10.710 --> 00:30:13.530
in that I'm sure there
are other big companies who

496
00:30:13.530 --> 00:30:16.890
are targets for lawsuits that
have to do this sort

497
00:30:16.890 --> 00:30:20.880
of thing. But yeah, it
certainly is a Microsoft isn't.

498
00:30:21.450 --> 00:30:25.620
Okay. So, Oh, it's source
opened until it releases and

499
00:30:25.620 --> 00:30:27.960
then it's open source, just
the same as a MVC

500
00:30:27.960 --> 00:30:32.400
one and two That's the
plan. All right. And then

501
00:30:32.640 --> 00:30:36.300
finally, what is this going
to include any additional tooling

502
00:30:36.300 --> 00:30:37.980
or new fancy things that
we're going to see in

503
00:30:37.980 --> 00:30:43.710
visual studio? So in visual
studio, we'll see a couple

504
00:30:43.710 --> 00:30:47.970
of things. One is syntax
highlighting and, and IntelliSense for

505
00:30:47.970 --> 00:30:52.500
razor, which, you know, you,
I think people would expect,

506
00:30:52.500 --> 00:30:55.530
but in preview one, we
won't have that yet. So

507
00:30:55.530 --> 00:30:59.010
that's another important point, which
is, you know, kind of

508
00:30:59.040 --> 00:31:01.260
tough, but in preview one,
when you open up a

509
00:31:01.590 --> 00:31:05.580
CSA HTML file, which is
a razor file, you'll just

510
00:31:05.910 --> 00:31:08.130
open it up as a
text file. By the time

511
00:31:08.130 --> 00:31:10.560
we are TM, we expect
to have full visual studio

512
00:31:10.560 --> 00:31:13.100
support for that. The other
thing we're doing in fuse

513
00:31:13.100 --> 00:31:17.430
studios, when you for preview
one, when you install NBC

514
00:31:17.430 --> 00:31:21.060
three, you'll see that there's
two project templates from C3,

515
00:31:21.060 --> 00:31:24.150
one for web forms, view
engine, and one for razor

516
00:31:24.210 --> 00:31:27.870
view engine, we plan to
that's just for preview one.

517
00:31:27.870 --> 00:31:30.360
So we could get out
the door. We plan to

518
00:31:30.360 --> 00:31:34.890
have improvements, tour unit test
dialogue. In fact, we'll probably

519
00:31:34.890 --> 00:31:37.230
rename the unit test dialogue
to be sort of the

520
00:31:37.320 --> 00:31:42.180
new project dialogue. And when
you launch, when you create

521
00:31:42.180 --> 00:31:44.430
a new MC three project,
you'll get a choice of

522
00:31:44.430 --> 00:31:47.100
which view engine you want
there. And perhaps a choice

523
00:31:47.100 --> 00:31:49.440
to say, you know, whether
you want to include all

524
00:31:49.440 --> 00:31:54.390
that account controller stuff or
not. Okay. Okay. Have there

525
00:31:54.390 --> 00:31:59.220
been any secret meetings with
existing people who have, have

526
00:31:59.220 --> 00:32:01.940
view engines that you are
going to have anything additional

527
00:32:02.210 --> 00:32:04.740
in the launch a little
bit will spark be there?

528
00:32:05.550 --> 00:32:08.310
Yeah. Yeah. So the other
thing we're adding is the

529
00:32:08.310 --> 00:32:12.000
ability to include other view
engines in the add view

530
00:32:12.000 --> 00:32:17.340
dialogue. So when you right
click add view, we've launched

531
00:32:17.340 --> 00:32:22.110
this dialogue that allows you
to choose a T4 template.

532
00:32:22.140 --> 00:32:26.070
So like a list template,
editor template that can be

533
00:32:26.070 --> 00:32:30.750
used as scaffold, your type
and NBC wanted to, obviously

534
00:32:30.840 --> 00:32:34.110
you could only select Westfarms
view engine for that. I

535
00:32:34.110 --> 00:32:35.880
mean, there was no selection
for the view. And so

536
00:32:35.880 --> 00:32:39.830
we would just generate a
web form scaffold of that

537
00:32:40.550 --> 00:32:44.360
with MC three, we've made
that dialogue extensible. So by

538
00:32:44.360 --> 00:32:49.100
default, there's two options now,
SPX and razor. And what

539
00:32:49.100 --> 00:32:51.770
we'll do is what we've
done in preview. One is

540
00:32:51.770 --> 00:32:54.440
allow you to get other
options in there and then

541
00:32:55.220 --> 00:32:59.690
post preview one, we'll expand
that support so that if

542
00:32:59.690 --> 00:33:03.170
you're a big fan of
spark, you can get spark

543
00:33:03.170 --> 00:33:06.350
in there and have, you
know, pretty much a first

544
00:33:06.350 --> 00:33:10.040
class experience using spark as
your view engine. So, you

545
00:33:10.040 --> 00:33:12.110
know, I'll probably work with
Lewis to make sure that

546
00:33:12.890 --> 00:33:15.680
those guys implement whatever it
is they need to implement

547
00:33:15.680 --> 00:33:20.080
to make that happen. All
right. Rock on. Are you

548
00:33:20.080 --> 00:33:22.570
pretty excited about this or
has it been real stressful

549
00:33:25.400 --> 00:33:28.600
About what the whole thing
or that this particular feature?

550
00:33:29.170 --> 00:33:32.980
No, the whole release. Oh,
I'm really excited about it.

551
00:33:33.010 --> 00:33:36.100
I mean, it's been stressful.
I I've come down with

552
00:33:36.100 --> 00:33:40.570
this condition called the dermatitis
and like my entire body

553
00:33:40.570 --> 00:33:44.830
itches and I've been, it's
been really bad and my

554
00:33:45.310 --> 00:33:48.580
doctor thinks it's stress-related, but
at the same time, I'm

555
00:33:48.790 --> 00:33:53.920
really excited about this release.
Well, I appreciate you getting

556
00:33:53.920 --> 00:33:58.840
a huge rash for the
community. You feel happy? Yeah.

557
00:33:58.840 --> 00:34:00.850
When you put it that
way, it sounds pretty disgusting

558
00:34:02.290 --> 00:34:05.710
Taking one for the team
and we appreciate it. Yeah.

559
00:34:05.740 --> 00:34:08.560
Thank you. Thanks for coming
on the show. My pleasure.

560
00:34:09.280 --> 00:34:12.130
This has been another episode
of Hanselminutes and we'll see

561
00:34:12.130 --> 00:34:13.150
you again next week.

