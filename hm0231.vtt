WEBVTT FILE

1
00:00:12.180 --> 00:00:17.670
From hanselminutes.com. It's Hansel minutes,
a weekly discussion with web

2
00:00:17.670 --> 00:00:22.560
developer and technologists. Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.560 --> 00:00:28.380
number two 31 recorded live
Thursday, September 2nd, 2010. Support for Hanselman

4
00:00:28.380 --> 00:00:32.100
it's just provided by Tellerik
rad controls, the most comprehensive

5
00:00:32.100 --> 00:00:35.850
suite of components for windows
forms and asp.net web applications

6
00:00:36.060 --> 00:00:43.650
online@wwwdottelerik.com. In this episode, Scott
talks with Eric sink from

7
00:00:43.650 --> 00:00:49.350
source gear about DVCS. Hi,
this is Scott Hanselman, and

8
00:00:49.350 --> 00:00:51.660
this is another episode of
Hansel minutes. And today we're

9
00:00:51.660 --> 00:00:54.570
chatting with Eric sink, a
founder at source gear who

10
00:00:54.570 --> 00:00:58.110
makes source control products. And
I want to talk to

11
00:00:58.110 --> 00:01:02.940
Eric because I figured he
could explain distributed revision control

12
00:01:02.940 --> 00:01:06.510
or DVCS distributed version control
systems. To me, how's it

13
00:01:06.510 --> 00:01:08.820
going, Eric, come on in
Scott going well, how are

14
00:01:08.820 --> 00:01:14.730
you? How's your bed? I,
I started using version control

15
00:01:14.730 --> 00:01:19.860
systems and I want to
say 91 or 92. Wow.

16
00:01:19.950 --> 00:01:23.610
That is like 20 years
ago almost. And I use

17
00:01:23.640 --> 00:01:26.880
my first one. My introduction
to that was, was source

18
00:01:26.880 --> 00:01:29.400
safe. And I spent a
lot of time in sourcing.

19
00:01:30.480 --> 00:01:33.210
Do you think people are
still using it now? Oh,

20
00:01:33.210 --> 00:01:37.950
definitely. We, we hear a
lot of people using source

21
00:01:37.950 --> 00:01:39.840
safe. In fact, you know,
we still sell an add

22
00:01:39.840 --> 00:01:44.040
on product for source safe
and it still sells fairly

23
00:01:44.040 --> 00:01:47.460
well after 10 years. So
there's definitely a lot of

24
00:01:47.460 --> 00:01:51.000
sort of safe users out
there. What is it that

25
00:01:51.000 --> 00:01:54.000
people hate about source safe
and why do so many

26
00:01:54.000 --> 00:01:59.340
people use it? Well, I
mean, what they hate about

27
00:01:59.340 --> 00:02:03.960
source safe is just its
reputation. You know, I we've

28
00:02:03.960 --> 00:02:06.240
done our share of bashing
source if I'd have to

29
00:02:06.240 --> 00:02:08.430
say, but you know, the
fairest way to say it

30
00:02:08.430 --> 00:02:11.790
is that especially, it probably
doesn't deserve as much bashing

31
00:02:11.790 --> 00:02:15.390
as it gets. It. It
had some reliability problems in

32
00:02:15.390 --> 00:02:18.060
the past. My understanding is
those are mostly worked out.

33
00:02:19.380 --> 00:02:21.540
And so, you know, what
we need to talk about

34
00:02:21.540 --> 00:02:23.160
is what they love about
source they have. And that

35
00:02:23.160 --> 00:02:25.200
is what they loved back
in 92. And that is

36
00:02:25.200 --> 00:02:28.440
it's really easy to use.
And people are still in

37
00:02:28.440 --> 00:02:31.860
love with that kind of
ease of use. It seems

38
00:02:31.860 --> 00:02:33.540
like some people have said
that sort of safe is

39
00:02:33.540 --> 00:02:35.820
really no more useful than
just zipping up your source.

40
00:02:36.420 --> 00:02:38.670
Like I know a lot
of people, unfortunately, who still

41
00:02:38.670 --> 00:02:40.620
do that, like source control
to them is a zip

42
00:02:40.620 --> 00:02:45.750
file. Like one dot, zip,
zip. Yeah. Yeah. Certainly. I

43
00:02:45.750 --> 00:02:49.770
mean, we've all done that
I don't, I mean, I

44
00:02:49.770 --> 00:02:51.780
think to say that source
safe is no more useful

45
00:02:51.780 --> 00:02:56.340
than that is, is pretty
unfair. I mean, I think

46
00:02:56.340 --> 00:03:01.330
it's fair to say that
SourceSafe has not stayed modern

47
00:03:01.330 --> 00:03:05.110
as version control has evolved
over the years, but it

48
00:03:05.110 --> 00:03:09.160
was a groundbreaking product when
it was released. And the

49
00:03:09.160 --> 00:03:13.000
fact that it is still
widely used almost 20 years

50
00:03:13.000 --> 00:03:17.380
later is really a Testament
to what a great product

51
00:03:17.380 --> 00:03:22.290
it has been seriously. I
do. I don't think it's

52
00:03:22.290 --> 00:03:24.120
just cause it's sticky. I
mean, the people are just

53
00:03:24.120 --> 00:03:28.740
using it because of momentum
and inertia. Well, I think,

54
00:03:30.180 --> 00:03:34.350
I mean, I think it's
free. I mean, basically it's

55
00:03:34.350 --> 00:03:38.160
very windows friendly, you know,
it is still has a

56
00:03:38.160 --> 00:03:40.380
lot going for it, even
though, you know, I don't

57
00:03:40.380 --> 00:03:42.120
think you're going to see
a lot of your so

58
00:03:42.120 --> 00:03:45.750
called alpha hackers using source
save these days, but there's

59
00:03:45.750 --> 00:03:47.910
a lot of programmers out
there, all kinds of shapes

60
00:03:47.910 --> 00:03:53.070
and sizes and SourceSafe is
sort of save is still

61
00:03:53.070 --> 00:03:56.340
pretty popular. Do we want
to get those other, those

62
00:03:56.370 --> 00:04:01.020
people off of this? I
said, I know Microsoft does.

63
00:04:02.130 --> 00:04:05.370
And I know two of
them, Mike, Microsoft decide do

64
00:04:05.370 --> 00:04:09.570
we, as, as, as programmers
that are slightly above average,

65
00:04:09.870 --> 00:04:12.930
want to help the average
and below average programmers get

66
00:04:12.930 --> 00:04:14.850
off of this thing? Is
it, is it a bad

67
00:04:14.850 --> 00:04:20.070
thing or is it better
than nothing? I, I don't

68
00:04:20.070 --> 00:04:22.290
know. See, some people would
say it's worse than nothing,

69
00:04:23.220 --> 00:04:26.310
but that may just be
bashing. I think it's just

70
00:04:26.310 --> 00:04:29.940
bashing. I mean, if you're
a modern source safe user

71
00:04:29.940 --> 00:04:33.930
using the latest releases, I
don't think it's that bad

72
00:04:33.930 --> 00:04:35.850
of a tool. I certainly
don't think it's something, you

73
00:04:35.850 --> 00:04:38.220
know, that we have to
rescue them, although it's, This

74
00:04:38.220 --> 00:04:39.630
is totally not the way
I thought this was going

75
00:04:39.630 --> 00:04:43.860
to go. Well, the fact
is, I mean, I answer,

76
00:04:43.890 --> 00:04:46.260
I give the opposite answer
sometimes because I have a

77
00:04:46.260 --> 00:04:51.900
business incentive to sell people,
our SourceSafe replacement and I

78
00:04:51.900 --> 00:04:55.320
like to sell that. That's
great. But the, the fact

79
00:04:55.320 --> 00:04:57.630
is every time we go
to a trade show, somebody

80
00:04:57.630 --> 00:05:00.420
comes up to us and
asks us, so why should

81
00:05:00.420 --> 00:05:02.100
I get off source safe?
And I asked them the

82
00:05:02.100 --> 00:05:04.380
question, are you happy with
source safe? And they say,

83
00:05:04.380 --> 00:05:07.500
yes, I am. I said,
then don't get off mean

84
00:05:07.800 --> 00:05:11.220
isn't it. So this conversation
over and over now, the

85
00:05:11.220 --> 00:05:13.170
vast majority of people that
turns out are not happy

86
00:05:13.170 --> 00:05:15.450
with SourceSafe. And for those
people, we have a solution.

87
00:05:15.450 --> 00:05:17.970
We hope fits them, but
we're not trying to force

88
00:05:17.970 --> 00:05:20.100
people into a change that
they don't have any reason

89
00:05:20.100 --> 00:05:25.320
to make. Hmm. That's extremely,
that's extremely pragmatic. Wouldn't wouldn't

90
00:05:25.330 --> 00:05:28.200
couldn't you argue that by
switching over to something like

91
00:05:28.200 --> 00:05:32.370
subversion, which wouldn't be too
big of a jump that

92
00:05:33.450 --> 00:05:35.760
they, they would gain so
much more and they would

93
00:05:35.760 --> 00:05:39.150
have a product that was
changing and, and being improved

94
00:05:39.150 --> 00:05:43.650
on a regular basis. I
could definitely argue that, but

95
00:05:44.550 --> 00:05:46.050
I mean, there's a couple
of things to that. I

96
00:05:46.050 --> 00:05:49.230
always keep in mind. One
is that psychologists will tell

97
00:05:49.230 --> 00:05:52.170
you that people don't change
unless the status quo becomes

98
00:05:52.170 --> 00:05:58.130
intolerable. And I think that's,
that's even more for version

99
00:05:58.130 --> 00:06:00.830
control users. People are just
really resistant to change the

100
00:06:00.830 --> 00:06:07.430
version control tool, and we're
not likely to succeed in

101
00:06:07.430 --> 00:06:10.100
business. If our, if our
business model is to convince

102
00:06:10.100 --> 00:06:13.220
people that they're unhappy. I
mean, salespeople will have this

103
00:06:13.220 --> 00:06:16.520
thing. They call create dissatisfaction
with the status quo. I'm

104
00:06:16.520 --> 00:06:19.640
not a sales weasel, you
know, I'm primarily just trying

105
00:06:19.640 --> 00:06:23.390
to be pragmatic. Like you
said, there are enough unhappy

106
00:06:23.390 --> 00:06:27.770
people for us to make
money. There's no reason trying

107
00:06:27.770 --> 00:06:29.930
to take happy people and
turn them into unhappy people

108
00:06:29.930 --> 00:06:34.750
just so that we can
make money. Okay. But what

109
00:06:34.750 --> 00:06:38.380
about kind of the larger
philosophical stuff like the, you

110
00:06:38.380 --> 00:06:43.060
know, save their souls or
their souls in danger? Oh,

111
00:06:43.060 --> 00:06:44.560
I don't know if I'd
say their souls in danger

112
00:06:44.980 --> 00:06:48.970
there, you know, the, the
fact is there are better

113
00:06:48.970 --> 00:06:55.150
alternatives out there and you
know, sometimes people are happy

114
00:06:55.150 --> 00:06:57.910
because they don't know what
they're missing. And there's, you

115
00:06:57.910 --> 00:06:59.590
know, there is another side
of this coin and that

116
00:06:59.590 --> 00:07:02.020
is that you show people
what they're missing and all

117
00:07:02.020 --> 00:07:04.270
of a sudden they start
to become unhappy and they

118
00:07:04.270 --> 00:07:07.120
think about a change. And
there are some, there are

119
00:07:07.130 --> 00:07:09.160
some tools out there that
are a major step forward.

120
00:07:09.160 --> 00:07:11.980
I mean, source safe is
largely what it is in

121
00:07:11.980 --> 00:07:15.610
93. You know, this thing
has not changed a lot,

122
00:07:16.090 --> 00:07:20.830
certainly in the last 15
years. And the fact that

123
00:07:20.830 --> 00:07:23.650
it still meets anyone's needs
is amazing. How many pieces

124
00:07:23.650 --> 00:07:25.330
of software do you know
that are 15 years old?

125
00:07:26.470 --> 00:07:28.960
But that doesn't mean it's
modern. That doesn't mean it

126
00:07:28.960 --> 00:07:31.810
has kept pace. And certainly
there are alternatives out there

127
00:07:31.810 --> 00:07:35.980
that people should explore if
they're interested in new things.

128
00:07:36.520 --> 00:07:39.100
Okay. So, so one of
the things that people that

129
00:07:39.100 --> 00:07:42.430
I didn't like and people
don't like about source source

130
00:07:42.430 --> 00:07:44.860
safe out of the box
is the idea that when

131
00:07:44.860 --> 00:07:47.080
I checked something out, it's
checked out only to me

132
00:07:47.110 --> 00:07:50.860
exclusive checkouts. And while there
are settings within source safe

133
00:07:50.860 --> 00:07:53.380
to say that you don't
really want to lock a

134
00:07:53.380 --> 00:07:55.270
file when you check it
out, most people don't change

135
00:07:55.270 --> 00:07:57.880
that. And when they do
the merging process is so

136
00:07:57.880 --> 00:08:02.110
painful that they get in
trouble. And I have been

137
00:08:02.110 --> 00:08:05.170
at two different companies where
we have moved from SourceSafe

138
00:08:05.170 --> 00:08:12.160
to either CVS or subversion
and found some version to

139
00:08:12.160 --> 00:08:16.930
be absolutely lovely and wonderful
in the tortoise. SVN is

140
00:08:16.930 --> 00:08:20.380
great and everything was peachy
keen until we actually did

141
00:08:20.380 --> 00:08:24.130
merges. And then things got
a little crazy. And then

142
00:08:24.130 --> 00:08:27.070
we tried to go and
impose a, you know, the

143
00:08:27.070 --> 00:08:33.280
whole standard trunks and branches
style of a folder, a

144
00:08:33.700 --> 00:08:37.360
layout, and then things got
a little bit better. Could

145
00:08:37.360 --> 00:08:39.130
you talk a little bit
about some of the strengths

146
00:08:39.130 --> 00:08:42.700
of CVS and subversion and,
and how that is, or

147
00:08:42.700 --> 00:08:46.270
is not an improvement over
sourcing? Well, I mean, certainly

148
00:08:46.270 --> 00:08:48.940
you've hit some of them
there already. Subversion is a

149
00:08:48.940 --> 00:08:54.010
heck of a tool. It's
the, the truth that despite

150
00:08:54.010 --> 00:08:56.160
everything we just said is
sort of safe users are

151
00:08:56.160 --> 00:08:59.730
leaving source safe at a
regular basis. And a lot

152
00:08:59.730 --> 00:09:01.830
of them are going to
our product. A lot of

153
00:09:01.830 --> 00:09:03.480
them are going to TFS,
but a whole lot of

154
00:09:03.480 --> 00:09:05.640
them are going to subversion
and for good reason, because

155
00:09:06.180 --> 00:09:10.350
it's free, it's constantly being
maintained and improved, it's reliable.

156
00:09:11.460 --> 00:09:14.910
And once they, once they
kind of get over the

157
00:09:15.230 --> 00:09:20.520
lack of exclusive locks on
a file, it, everyone who

158
00:09:20.520 --> 00:09:24.540
makes that choice, who makes
that change is happier when

159
00:09:24.540 --> 00:09:29.160
they're done. There's a certain
fear to it for people

160
00:09:29.160 --> 00:09:32.940
who have always sort of
lived with the assumption that

161
00:09:32.940 --> 00:09:34.590
when I have a file
checked out, I'm the only

162
00:09:34.590 --> 00:09:37.320
one that can modify it.
And there's a safety in

163
00:09:37.320 --> 00:09:39.810
that, that it's hard to
get people out of, but

164
00:09:39.810 --> 00:09:41.910
once they do make the
change, everyone, I know who's

165
00:09:41.910 --> 00:09:45.510
made the change is happy
once they've done it. But

166
00:09:45.510 --> 00:09:47.340
even the ones that dreaded
the change before they did

167
00:09:47.340 --> 00:09:53.210
it. And CVS versus subversion,
I mean, CVS was what

168
00:09:53.210 --> 00:09:55.550
we, we switched over to
at the time and then

169
00:09:55.580 --> 00:09:59.600
kind of subversion was, was
on the rise. And then

170
00:09:59.600 --> 00:10:03.020
we actually went from, we
switched from SourceSafe to CVS

171
00:10:03.020 --> 00:10:05.420
and then said, well, you
know, things are getting corrupted

172
00:10:05.420 --> 00:10:07.160
and things are difficult and
things are tricky and we'll

173
00:10:07.160 --> 00:10:09.050
just switch over to servers.
So we kind of did

174
00:10:09.050 --> 00:10:12.530
like a little hop between
the two. That seems to

175
00:10:12.530 --> 00:10:15.380
be a very common thing,
but now CVS is largely

176
00:10:15.440 --> 00:10:18.890
forgotten. Yeah. Less and less
common all the time. I

177
00:10:18.890 --> 00:10:22.520
mean, there's very little reason
to start using CVS today.

178
00:10:22.940 --> 00:10:26.270
If you, if you're looking
for a new version control

179
00:10:26.270 --> 00:10:29.930
in that realm, then subversion
is, is almost certainly the

180
00:10:29.930 --> 00:10:33.500
way to go. I talked
to, I talked to some

181
00:10:33.500 --> 00:10:35.780
folks once at a, at
a bank who, you know,

182
00:10:35.780 --> 00:10:37.730
I, I like to ask
people what source control tool

183
00:10:37.730 --> 00:10:39.980
they use. And they said,
well, we'll use CVS. And

184
00:10:39.980 --> 00:10:41.900
I said, good grief. Why
don't you switch to subversion?

185
00:10:41.900 --> 00:10:44.510
I mean, it's time. And
they said, well, we're not

186
00:10:44.510 --> 00:10:48.770
allowed to switch to subversion
because there's a policy against

187
00:10:48.770 --> 00:10:52.160
open source. And I said,
you know, CVS is open

188
00:10:52.160 --> 00:10:53.930
source. And they said, yes,
but our bosses don't know

189
00:10:53.930 --> 00:10:58.040
that. So aside from the
crazy reasons, there's really no

190
00:10:58.040 --> 00:11:02.420
reason to use CVS today.
So version sustaining, I have

191
00:11:02.420 --> 00:11:05.840
worked at that company, whatever
that is, we've opened up

192
00:11:05.840 --> 00:11:09.140
snuck open source in the
companies because it was well

193
00:11:09.140 --> 00:11:11.240
known and they knew the
names. So they assumed there

194
00:11:11.240 --> 00:11:16.580
was a company behind it.
Right. That's awesome. So then

195
00:11:17.420 --> 00:11:22.730
what is distributed version control?
So distributed version control is,

196
00:11:22.780 --> 00:11:28.370
is this new, relatively new
thing. And, you know, saying

197
00:11:28.370 --> 00:11:31.130
that, it's saying that it's
new, I suppose, is a

198
00:11:31.130 --> 00:11:32.930
little bit insulting to the
folks that have been doing

199
00:11:32.930 --> 00:11:38.840
it since 1997. But the
fact is it's, it's relatively

200
00:11:38.840 --> 00:11:41.990
new because it's, you know,
it's only recently starting to

201
00:11:41.990 --> 00:11:44.780
approach mainstream. And the basic
idea is that instead of

202
00:11:44.780 --> 00:11:50.540
one central server, the version
control tool in most cases

203
00:11:50.540 --> 00:11:55.270
will operate where every user
has their own copy of

204
00:11:55.270 --> 00:12:00.910
the whole repository, the, the
sort of high level way

205
00:12:00.910 --> 00:12:03.430
of explaining it is that
it brings a tremendous amount

206
00:12:03.430 --> 00:12:09.040
of flexibility. And by and
large, the DVCS community has,

207
00:12:09.130 --> 00:12:11.980
has done a horrible job
of explaining its benefits. Because

208
00:12:12.490 --> 00:12:14.950
usually when you ask somebody
what a DVCS is, they

209
00:12:14.950 --> 00:12:17.320
will say something like, Oh,
well, there's no central server.

210
00:12:17.830 --> 00:12:21.700
Well, who wants that? I
mean, everyone wants a central

211
00:12:21.700 --> 00:12:25.330
server. In fact, the, the
reality is that that one

212
00:12:25.330 --> 00:12:27.460
of the big benefits of
DVCS is that instead of

213
00:12:27.460 --> 00:12:30.040
one central server, you might
want two or three for

214
00:12:30.040 --> 00:12:33.250
all kinds of reasons, because
of the flexibility. The other

215
00:12:33.250 --> 00:12:34.900
thing that people say is
that you can code on

216
00:12:34.900 --> 00:12:40.950
an airplane and no one
codes on airplanes. That was

217
00:12:40.950 --> 00:12:42.690
exactly what people said. We
didn't call it in an

218
00:12:42.690 --> 00:12:44.400
airplane. That's not great. You
know what you want to

219
00:12:44.400 --> 00:12:46.050
do all of your good
work on an airplane and

220
00:12:46.050 --> 00:12:50.280
then check it in from
the lounge. Yeah. I mean,

221
00:12:51.030 --> 00:12:54.450
the idea is sort of
ludicrous. And as I, you

222
00:12:54.450 --> 00:12:56.310
know, one of the jokes
I throw around is that,

223
00:12:56.370 --> 00:13:00.300
well, the airplanes have wifi
now, anyway. So, but the

224
00:13:02.070 --> 00:13:06.330
really, it just comes down
to flexibility. And after 10

225
00:13:06.330 --> 00:13:08.910
years of supporting different source
control products, one thing I

226
00:13:08.910 --> 00:13:12.810
know is that customers always
want flexibility. They always end

227
00:13:12.810 --> 00:13:15.210
up wanting some kind of
flexibility that you don't have.

228
00:13:16.380 --> 00:13:18.270
And so, you know, if
we, if we go to

229
00:13:18.270 --> 00:13:21.150
most of our customers today
and say, Hey, we're going

230
00:13:21.150 --> 00:13:23.100
to offer you a product
that has no central server,

231
00:13:23.100 --> 00:13:25.380
they're going to freak out.
But some of those same

232
00:13:25.380 --> 00:13:29.160
customers have called us and
said things like, yeah, so

233
00:13:29.160 --> 00:13:31.140
I've got this team in
Phoenix and I got a

234
00:13:31.140 --> 00:13:33.810
team in Denver and I
don't want to have to

235
00:13:33.810 --> 00:13:35.520
use the same server for
both of them. I want

236
00:13:35.520 --> 00:13:37.110
to each of them to
have their own server and

237
00:13:37.110 --> 00:13:39.390
sync it up at night.
Can I do that? And

238
00:13:39.420 --> 00:13:41.310
that's the kind of things
that DVCS does because of

239
00:13:41.310 --> 00:13:45.480
the flexibility, but it, it,
it needs to be explained

240
00:13:45.480 --> 00:13:47.490
in terms of the kinds
of problems that customers really

241
00:13:47.490 --> 00:13:51.690
have. This is the part
of the show where I

242
00:13:51.690 --> 00:13:56.520
mock you while actually Tellerik
mock says your applications, that

243
00:13:56.520 --> 00:13:59.490
you're testing dependent on external
systems over which you have

244
00:13:59.490 --> 00:14:02.580
no control. Maybe you're being
slowed down by those systems,

245
00:14:03.180 --> 00:14:05.190
their lack of availability, responsiveness.
Do you want to do

246
00:14:05.190 --> 00:14:08.700
TDD? Right? Our friends at
Tellerik help you solve some

247
00:14:08.700 --> 00:14:11.760
of those problems with their
newest marketing tool, just mock

248
00:14:12.600 --> 00:14:15.720
it'll let you do fast,
simple controlled unit tests, independent

249
00:14:15.720 --> 00:14:21.060
of external resources, like databases,
web services, proprietary code, unlike

250
00:14:21.060 --> 00:14:24.720
some marketing tools, just mock
works with non-virtual methods, seal

251
00:14:24.720 --> 00:14:28.530
classes, static methods, giving you
complete control of your code.

252
00:14:29.310 --> 00:14:31.830
You can get more details.
You can download just mock

253
00:14:32.430 --> 00:14:36.510
at telerik.com/just Mark. And don't
forget to thank Tellerik for

254
00:14:36.510 --> 00:14:42.060
supporting Hanselman it's on their
Facebook fan page, facebook.com/tellerik. Thanks

255
00:14:42.060 --> 00:14:45.660
a lot. So what is
the balance then between having

256
00:14:45.660 --> 00:14:53.660
a central server and still
being distributed? The is usually,

257
00:14:53.720 --> 00:14:58.880
I mean, in terms of
a DVCS it's your central

258
00:14:58.880 --> 00:15:02.870
server is the central server
because of policy. You're not

259
00:15:02.870 --> 00:15:06.350
in contact with it all
the time, but every team

260
00:15:06.350 --> 00:15:09.620
I know that uses a
DVCS has at least one

261
00:15:09.620 --> 00:15:13.880
central server. And the, I
guess I'd say the balance

262
00:15:14.630 --> 00:15:17.720
is that you have the
central server for the things

263
00:15:17.720 --> 00:15:19.340
you want it for, but
you don't have to have

264
00:15:19.340 --> 00:15:21.590
it every second. You do
have the ability to have

265
00:15:21.590 --> 00:15:27.440
offline operation, which, you know,
is still important, even if

266
00:15:27.440 --> 00:15:30.010
you're not talking about airplanes,
because I mean, the fact

267
00:15:30.020 --> 00:15:33.680
is people are mobile these
days and you know, for

268
00:15:33.680 --> 00:15:36.050
a lot of people, I
know certainly for me, wifi

269
00:15:36.080 --> 00:15:37.670
is a lot like a
cop. I mean, it seems

270
00:15:37.670 --> 00:15:39.470
like there's always a cop
around when you don't need

271
00:15:39.470 --> 00:15:42.320
one. And, and when you
do, you can't find one,

272
00:15:42.320 --> 00:15:45.230
well, wifi is the same
way everywhere I go. There's

273
00:15:45.230 --> 00:15:48.110
signs saying free wifi. And
about a third of the

274
00:15:48.110 --> 00:15:50.120
time when I really need
wifi, I don't have it.

275
00:15:50.990 --> 00:15:54.680
And so, I mean, offline
operation is still, is still

276
00:15:54.680 --> 00:15:58.160
a valuable use case, but
that doesn't mean we don't,

277
00:15:58.430 --> 00:16:00.320
we don't want a central
server. I mean, we all

278
00:16:00.320 --> 00:16:03.290
want a place where the
team pushes their work. And,

279
00:16:04.520 --> 00:16:06.980
and so everyone I know,
uses a DVCS that way.

280
00:16:07.190 --> 00:16:08.720
And in fact, some of
them have two central servers

281
00:16:08.720 --> 00:16:11.900
they'll have, okay, push your
work to here. If it's,

282
00:16:11.990 --> 00:16:14.360
if it passes the test
suite and then they'll have

283
00:16:14.360 --> 00:16:16.460
another central server that says,
push it here. If it

284
00:16:16.460 --> 00:16:18.470
doesn't pass the test suite,
but you want it backed

285
00:16:18.470 --> 00:16:20.360
up. So we got two
central places to put it.

286
00:16:21.130 --> 00:16:24.360
Okay. But, but the, the
main, like the lead in

287
00:16:24.360 --> 00:16:27.310
the chief programmer model, their
computer is never the authoritative

288
00:16:27.310 --> 00:16:31.750
source, is it? That's right.
It's their computer is not

289
00:16:31.750 --> 00:16:35.320
the authoritative source. It's a,
it's a copy of the,

290
00:16:35.470 --> 00:16:40.180
of the repo that is
only as up to date,

291
00:16:40.180 --> 00:16:42.460
as you know, as it
is synchronized with the central

292
00:16:42.460 --> 00:16:44.770
server. Right. Right. But it
would be fair to say,

293
00:16:44.770 --> 00:16:47.260
like with like, like Linus,
his computer is not the

294
00:16:47.260 --> 00:16:52.570
authoritative source of the kernels.
Some central repository is, That's

295
00:16:52.570 --> 00:16:55.270
probably true. I don't actually
know how Linus does that.

296
00:16:55.660 --> 00:16:57.370
Well, you know, he uses
get, of course, and he,

297
00:16:57.430 --> 00:17:01.090
he's the kind of the
primary committer. So people send

298
00:17:01.090 --> 00:17:04.540
him requests, pull requests and
say, here's a, here's a

299
00:17:04.540 --> 00:17:09.520
fix, go check it out.
Right. The real answer is

300
00:17:09.520 --> 00:17:13.960
that the thing that is
the central is the authoritative

301
00:17:13.960 --> 00:17:16.090
source is the one you
decided you want it to

302
00:17:16.090 --> 00:17:20.650
be, rather than having the
software constrain you and say,

303
00:17:20.950 --> 00:17:22.930
all your changes have to
be here for them to

304
00:17:22.930 --> 00:17:28.660
be authoritative. It's simply a
matter of you decide whether

305
00:17:28.660 --> 00:17:31.150
you does making the decision
or having the software, make

306
00:17:31.150 --> 00:17:33.820
the decision is the way
to say it. Say that

307
00:17:33.820 --> 00:17:37.930
again. Yeah. Because I didn't
say well, no, but That's,

308
00:17:37.930 --> 00:17:41.230
it's, it's, it's, it's either
incredibly deep or it makes

309
00:17:41.230 --> 00:17:42.460
no sense at all. So
I want you to say

310
00:17:42.460 --> 00:17:43.720
it again so I can
find out what it is.

311
00:17:44.650 --> 00:17:50.910
Fair enough. The difference is
whether the software is making

312
00:17:50.910 --> 00:17:55.770
a decision about where, what
the authoritative repo for the

313
00:17:55.770 --> 00:17:58.200
code is, or whether a
human being is making the

314
00:17:58.200 --> 00:18:01.400
decision. Right. Right. And no
matter what the software says,

315
00:18:01.400 --> 00:18:04.610
you can just decide that
the authoritative source is your

316
00:18:04.610 --> 00:18:07.210
machine. If you'd like, and,
and that's where you, you

317
00:18:07.210 --> 00:18:08.780
know, God forbid, that's where
you do your builds and

318
00:18:08.780 --> 00:18:10.670
your releases from that. I
guess it is the authoritative.

319
00:18:10.670 --> 00:18:13.310
Sorry. Right. And if you
want to decide that, that

320
00:18:13.310 --> 00:18:18.680
way you're free to the,
I mean, this is a

321
00:18:18.680 --> 00:18:20.630
little bit of a two
edged sword. I go back

322
00:18:20.630 --> 00:18:22.820
to what I started with
here and say that the

323
00:18:22.820 --> 00:18:26.690
great thing about DVCS is
our flexibility. And the bad

324
00:18:26.690 --> 00:18:29.750
thing about flexibility is that
it allows people to do

325
00:18:29.750 --> 00:18:32.960
stupid things. It's a little
bit like C you know,

326
00:18:34.550 --> 00:18:36.680
see, you can do anything,
but it's also one of

327
00:18:36.680 --> 00:18:39.260
the best languages for shooting
yourself in the foot. We

328
00:18:39.260 --> 00:18:42.590
have the same design pattern,
all across technology, things that

329
00:18:42.590 --> 00:18:46.280
offer more flexibility, give the
user the power to do

330
00:18:46.280 --> 00:18:49.850
stupid things. People, you know,
things that have really constrained

331
00:18:49.850 --> 00:18:52.820
user interfaces, like an iPod.
You don't have a lot

332
00:18:52.820 --> 00:18:54.650
of power to do stupid
things, but they work really,

333
00:18:54.650 --> 00:18:58.880
really well. How do people
initially find it so difficult

334
00:18:58.880 --> 00:19:02.210
to jump from something like
subversion or source safe or

335
00:19:02.210 --> 00:19:05.960
in source gear to a
distributed version control system? What

336
00:19:05.960 --> 00:19:11.030
is the, the, the disconnect
that makes that leap difficult?

337
00:19:13.790 --> 00:19:17.780
I certainly think the, I
mean, one of the first

338
00:19:17.780 --> 00:19:21.590
disconnects is, is a little
bit what we've been talking

339
00:19:21.590 --> 00:19:30.650
about, where they don't see
why they still want their

340
00:19:30.650 --> 00:19:34.220
central server. And the tool
is being explained to them

341
00:19:34.220 --> 00:19:37.430
in a way that says
they don't need one. You

342
00:19:37.430 --> 00:19:43.490
know, that's one of the
first disconnects, the it's also

343
00:19:44.420 --> 00:19:46.940
the flexibility comes a little
bit of a price. So

344
00:19:48.260 --> 00:19:52.760
another big disconnect is this
idea that branching you're either

345
00:19:52.760 --> 00:19:56.210
afraid of it, or you're
not source control tools that

346
00:19:56.210 --> 00:20:00.320
do allow easy job at
branching and merging train people

347
00:20:00.320 --> 00:20:03.770
to be afraid of branching
and merging. The fact is

348
00:20:03.770 --> 00:20:08.270
the DVCS tools, branching and
merging is extremely common. So

349
00:20:08.270 --> 00:20:11.510
the tools end up being
really good at it. And

350
00:20:11.510 --> 00:20:13.460
that disconnect can be The
big issue as well. Now

351
00:20:13.460 --> 00:20:18.890
that's, that's significant. There are
things that may or may

352
00:20:18.890 --> 00:20:20.810
not be possible in the
core engine of a source

353
00:20:20.810 --> 00:20:23.150
control system, but depending on
the way that they are

354
00:20:23.150 --> 00:20:28.550
presented through the tooling, you
can basically make people afraid

355
00:20:28.550 --> 00:20:32.300
of the concept by the
tool sucking enough. And I

356
00:20:32.300 --> 00:20:35.690
definitely can say I was
a branching emerging PR. I

357
00:20:35.690 --> 00:20:40.010
was, I was afraid of
those, those concepts and people

358
00:20:40.010 --> 00:20:42.170
who are saying yes, and
the DVCS world is just

359
00:20:42.170 --> 00:20:44.360
so it's wonderful. It's just,
you know, it's puppies and

360
00:20:44.360 --> 00:20:49.300
unicorns it's to believe that.
So I would say even

361
00:20:49.330 --> 00:20:51.370
my, my own kind of
disbelief that it could be

362
00:20:51.370 --> 00:20:55.090
that easy is a, is
enough to prevent me from

363
00:20:55.090 --> 00:20:59.280
leaping over that chasm. And
to an extent you're right.

364
00:21:00.300 --> 00:21:03.390
Everyone's saying that it's, you
know, it's just wonderful joy

365
00:21:03.420 --> 00:21:07.380
doing branching and merging in
the DVCS world. I think

366
00:21:07.380 --> 00:21:12.000
that overstating it a bit.
It's better. It's definitely better,

367
00:21:12.180 --> 00:21:14.400
but you don't want to,
it's still something to be

368
00:21:14.400 --> 00:21:19.440
avoided. I mean, I just
did well. Yeah. I'm working

369
00:21:19.440 --> 00:21:21.750
as a programmer on our
team and I had a

370
00:21:21.810 --> 00:21:24.870
five week private branch where
I was actively coding for

371
00:21:24.870 --> 00:21:26.820
five weeks and the rest
of the team was actively

372
00:21:26.820 --> 00:21:28.200
coding for five weeks and
I had to do a

373
00:21:28.200 --> 00:21:32.340
merge and it worked out
pretty well, but it still

374
00:21:32.340 --> 00:21:35.640
wasn't fun. I mean, merging,
merging can be a pain

375
00:21:36.600 --> 00:21:39.480
and DVCS has made it
better, but they're, they're not

376
00:21:39.480 --> 00:21:43.110
a panacea for that. What
are some of the DVCS

377
00:21:43.110 --> 00:21:44.760
is that people would, would
look at? I mean, I

378
00:21:44.760 --> 00:21:47.340
think we know some of
the source control systems that

379
00:21:47.340 --> 00:21:51.070
are more, more standard, more
centralized version control systems, but

380
00:21:51.070 --> 00:21:55.650
we hear about get, we
hear about material. You have,

381
00:21:55.680 --> 00:21:58.590
you have a product as
well. Yeah, we are. We

382
00:21:58.590 --> 00:22:01.860
are working on a new
offering. Certainly ours is not

383
00:22:01.860 --> 00:22:06.150
ready yet, but certainly the
two most popular ones today

384
00:22:06.150 --> 00:22:10.230
would be, would be get
and were curial. And for

385
00:22:10.230 --> 00:22:12.930
a little bit more windows
friendly audience, like, like this

386
00:22:12.930 --> 00:22:16.170
one, you know, mercurial is
probably the most popular choice

387
00:22:17.970 --> 00:22:22.110
and it's, it's outstanding. We
use mercurial for our own

388
00:22:22.110 --> 00:22:24.480
development until we could dog
food, which means, you know,

389
00:22:24.480 --> 00:22:26.300
we were using it for
quite a while and, and

390
00:22:26.520 --> 00:22:29.130
finding it to be a
good product. Why is mercurial,

391
00:22:29.340 --> 00:22:32.430
if people keep saying mercurial
is more friendly, why is

392
00:22:32.430 --> 00:22:34.950
that? It's just because it
integrates with there's an integration

393
00:22:34.950 --> 00:22:39.450
point for Explorer. Well, it's
that, but I mean, the

394
00:22:39.450 --> 00:22:43.950
same thing exists to some
extent, forget mercurial was definitely

395
00:22:43.950 --> 00:22:46.950
designed for ease of use.
I mean, I guess I'll

396
00:22:46.960 --> 00:22:50.400
give two answers. One is
the ease of use aspect.

397
00:22:50.400 --> 00:22:55.020
And the big issue there
is that get, has one

398
00:22:55.020 --> 00:22:58.980
extra abstraction that it calls
the index. So it's not

399
00:22:58.980 --> 00:23:01.410
only an extra abstraction, but
it's a poorly named abstraction.

400
00:23:01.920 --> 00:23:05.370
And that is that everything
in get goes into this

401
00:23:05.370 --> 00:23:08.100
staging area and then it
gets committed. And so it's,

402
00:23:08.130 --> 00:23:12.750
it's actually sort of an
extra step. And conceptually, it's

403
00:23:12.750 --> 00:23:15.300
just one more abstraction for
people to wrap their head

404
00:23:15.300 --> 00:23:21.600
around. And the, and the
result is that it creates

405
00:23:21.600 --> 00:23:25.380
the impression of being a
little harder to use mercurial

406
00:23:25.380 --> 00:23:27.810
doesn't have that its command
set is much more similar

407
00:23:27.810 --> 00:23:31.350
to subversion, except for the
fact that it's a DVCS

408
00:23:31.350 --> 00:23:34.260
of course, and most people
just find it to be

409
00:23:34.260 --> 00:23:36.990
a lot friendlier. The second
big thing, especially for windows

410
00:23:36.990 --> 00:23:41.280
users is that get, was
originally written only for Linux

411
00:23:42.270 --> 00:23:48.920
it's it's from a little
bit of, you know, Linux

412
00:23:48.920 --> 00:23:53.840
centricity ever since. It's never,
it's nowhere close to as

413
00:23:53.840 --> 00:23:56.900
cool and fast on windows
as it is on Linux.

414
00:23:57.170 --> 00:24:01.220
Whereas mercurial is, is much
more cross platform in that

415
00:24:01.220 --> 00:24:05.470
regard. Why should someone pick
one? I mean, should you

416
00:24:05.470 --> 00:24:07.390
just try them both and
see what you like, or

417
00:24:07.390 --> 00:24:12.340
should you, should you simply
make the decision based on

418
00:24:12.340 --> 00:24:17.920
materials slightly more friendly on
windows? Like what kind of

419
00:24:17.920 --> 00:24:19.870
things did you think about
when you are out there

420
00:24:19.870 --> 00:24:23.290
thinking it's time for us
to move towards distributed version

421
00:24:23.290 --> 00:24:30.220
control? What are some of
the decision points? Probably? Well,

422
00:24:30.250 --> 00:24:33.280
like I said, windows friendliness
is, is one decision point.

423
00:24:33.790 --> 00:24:36.130
I mean, people come in
two kinds when they're making

424
00:24:36.130 --> 00:24:38.350
decisions like that, they either
trust the advice of an

425
00:24:38.350 --> 00:24:41.080
expert or they want to
go explore every single issue

426
00:24:41.500 --> 00:24:44.320
and decide what to do.
And I'm currently looking to

427
00:24:44.320 --> 00:24:47.140
buy a new truck and
I explored every single issue.

428
00:24:47.140 --> 00:24:48.610
I don't want to just
tell, I have somebody tell

429
00:24:48.610 --> 00:24:51.640
me, get a Ford or
a Chevy. And you know,

430
00:24:51.640 --> 00:24:54.040
the same thing happens if
you want to trust the

431
00:24:54.040 --> 00:24:58.090
advice of an expert. Yeah.
I'd say, go with, Procurian

432
00:24:58.120 --> 00:25:01.090
try it first. But if
you want to explore every

433
00:25:01.090 --> 00:25:02.950
single issue, you'll find out
that, you know, some of

434
00:25:02.950 --> 00:25:06.880
the decision points are, if
you work primarily on windows,

435
00:25:06.880 --> 00:25:10.660
gate is gonna frustrate you.
If you are interested in

436
00:25:10.660 --> 00:25:13.900
the absolute fastest product, get
is the way to go

437
00:25:14.740 --> 00:25:22.840
mercurial. It depends on the
version that you're using. Say

438
00:25:22.840 --> 00:25:26.980
on windows, they're going to
be competitive. Certainly if you're

439
00:25:26.980 --> 00:25:31.240
on, if you're on Linux
and performance is, you know,

440
00:25:31.450 --> 00:25:33.760
primary for you, you know,
get as the way to

441
00:25:33.760 --> 00:25:38.440
go. You know, you should
know whether you're a power

442
00:25:38.440 --> 00:25:41.800
user or not. I mean,
get, has hundreds of commands.

443
00:25:41.800 --> 00:25:43.510
It's like a Swiss army
knife. It lets you do

444
00:25:43.510 --> 00:25:47.830
anything you want to do.
Mercurial is, is relatively simple

445
00:25:47.830 --> 00:25:53.320
in that regard. Oh, another
big one is, and I

446
00:25:53.320 --> 00:25:54.940
don't know if this is
too far, too much detail

447
00:25:54.940 --> 00:25:59.710
for the show, but yeah.
Mercurial have different philosophies about

448
00:25:59.950 --> 00:26:04.930
pushing change sets to the
server. Get we'll let you

449
00:26:04.930 --> 00:26:07.960
do things that could be
thought of as rewriting history.

450
00:26:09.040 --> 00:26:12.040
What, you know, what Linux
wants his lieutenants to do

451
00:26:12.040 --> 00:26:14.740
when they push things to
his repo is don't show

452
00:26:14.740 --> 00:26:17.740
me all the intervening changes
that you made. What I

453
00:26:17.740 --> 00:26:19.870
want you to do is
take all your changes, squash

454
00:26:19.870 --> 00:26:23.290
them up into one change,
set with one good explanatory

455
00:26:23.290 --> 00:26:26.200
comment and push me that
it's simpler. I want things

456
00:26:26.200 --> 00:26:30.040
clean. Well, in a sense,
if you only push that

457
00:26:30.040 --> 00:26:32.740
to the central repo, you
lost all your intervening steps

458
00:26:32.740 --> 00:26:35.800
and those steps are in
fact part of the history

459
00:26:35.800 --> 00:26:39.610
of the change. And so
there's this huge philosophical divide

460
00:26:39.610 --> 00:26:42.850
between the, the culture of
the get community and the,

461
00:26:43.260 --> 00:26:45.720
of the mercurial community. And
if you dive in to

462
00:26:45.720 --> 00:26:48.090
look for decision points, you
will find that divide and

463
00:26:48.090 --> 00:26:50.490
you will find yourself siding
with one side of the

464
00:26:50.490 --> 00:26:56.670
other. Is it a war?
I don't know if I'd

465
00:26:56.670 --> 00:27:00.960
say it's a war a
little bit. Maybe I haven't

466
00:27:00.960 --> 00:27:05.310
seen any actual blood, but
it's, it's definitely a disagreement.

467
00:27:09.290 --> 00:27:11.360
Do you think that windows
people focus too much on

468
00:27:11.360 --> 00:27:13.790
wishing there was a tortoise
version of whatever the version

469
00:27:13.790 --> 00:27:19.190
control system that they wanted.
Did they Listening is a,

470
00:27:19.190 --> 00:27:23.450
is that as a plugin
to explore a tortoise, CVS

471
00:27:23.450 --> 00:27:26.510
was one Torres ESPN. It
lets you right. Click on

472
00:27:26.510 --> 00:27:28.880
a folder and checkout and
right click and do all

473
00:27:28.880 --> 00:27:32.030
of your source control management
system either inside of Explorer.

474
00:27:32.030 --> 00:27:34.100
And there seems to be
basically three kinds of people.

475
00:27:34.100 --> 00:27:38.000
There's command line people there's
inside visual studio people, and

476
00:27:38.000 --> 00:27:41.000
then there's Explorer people. And
whenever I hear someone talk

477
00:27:41.000 --> 00:27:43.220
about kit or mercurial on
a windows side, I hear

478
00:27:43.220 --> 00:27:45.740
them say, no, I'll wait
for the really awesome tortoise

479
00:27:45.740 --> 00:27:50.660
version of that, that thing.
I, I don't know if

480
00:27:50.660 --> 00:27:52.340
I'd say they focus too
much on it, but I

481
00:27:52.340 --> 00:27:54.680
do. I can't say that.
I'm not sure I get

482
00:27:54.680 --> 00:27:59.210
it. I always thought of
people who prefer the tortoise

483
00:27:59.210 --> 00:28:03.950
client. I always wondered are
these just refugees who found

484
00:28:03.950 --> 00:28:06.290
something they can use because
there was no good visual

485
00:28:06.290 --> 00:28:10.370
studio client. I mean, cause
I mean certainly in our,

486
00:28:11.120 --> 00:28:13.520
in our business, it's all
about the visual studio client.

487
00:28:14.270 --> 00:28:16.400
We don't have any command
line users. I don't know

488
00:28:16.430 --> 00:28:21.320
maybe one. And it's all
about visual studio. And for

489
00:28:21.320 --> 00:28:23.420
a long time, I know
that CVS and subversion and

490
00:28:23.420 --> 00:28:26.420
tools like that didn't really
have great visual studio integration.

491
00:28:26.420 --> 00:28:28.640
But then this thing popped
up that, you know, everyone

492
00:28:28.640 --> 00:28:32.810
called tortoise and like I
just never quite figured out,

493
00:28:33.020 --> 00:28:35.450
do people actually prefer the
tortoise client or is it

494
00:28:35.450 --> 00:28:38.030
that they couldn't get visual
studio? So they settled for

495
00:28:38.030 --> 00:28:39.380
this and then they fell
in love with it. I

496
00:28:39.380 --> 00:28:43.810
don't know. I, I, you
know, you never know why

497
00:28:43.880 --> 00:28:46.340
people pick one thing and
then once they pick that

498
00:28:46.340 --> 00:28:49.910
thing, that's how they work.
Therefore that's, that's where they,

499
00:28:49.960 --> 00:28:52.670
that's what they're going to
do. I know that I

500
00:28:52.730 --> 00:28:56.450
I'm using mercurial now. And
as a long time as

501
00:28:56.480 --> 00:29:00.500
a subversion user, I find
it more comfortable just because

502
00:29:00.500 --> 00:29:06.290
tortoise HG, which is the
mercurial login for Explorer feels

503
00:29:06.290 --> 00:29:09.350
in 80%, like what I'm
used to, but the, the

504
00:29:09.350 --> 00:29:12.470
hardcore alpha type say, you
know, I should grow a

505
00:29:12.470 --> 00:29:14.300
pair and I should learn
how to use the command

506
00:29:14.300 --> 00:29:18.110
line and gets the way
to go. Well, those don't

507
00:29:18.110 --> 00:29:20.540
necessarily have to be synonymous.
So using mercurial from the

508
00:29:20.540 --> 00:29:26.480
command line is actually kind
of nice, but yeah, there's

509
00:29:26.480 --> 00:29:28.190
always going to be somebody
telling you that you should

510
00:29:28.190 --> 00:29:30.380
use what they like instead
of what you like. It's

511
00:29:30.380 --> 00:29:33.510
the way technology works. W
what is a what's you,

512
00:29:33.510 --> 00:29:35.810
you have an open source
project that you're working on.

513
00:29:35.810 --> 00:29:37.580
You mentioned a little bit
before. What, what are you

514
00:29:37.580 --> 00:29:41.560
doing in the distributed version
control space? We're a, we're

515
00:29:41.560 --> 00:29:44.170
implementing Something we call veracity.
And as you said, it's

516
00:29:44.170 --> 00:29:47.650
open source and the core
will stay open source. Although

517
00:29:47.650 --> 00:29:50.080
we do plan on selling
some, some add ons that

518
00:29:50.080 --> 00:29:55.930
are proprietary later, but, you
know, in a nutshell, we're,

519
00:29:56.530 --> 00:30:00.250
we're looking down the road
and thinking that the DVCS

520
00:30:00.250 --> 00:30:02.590
model is likely to be
the future of this industry.

521
00:30:03.940 --> 00:30:06.760
So we're, you know, we're,
we're making a longterm play

522
00:30:06.760 --> 00:30:10.030
here and saying, we're trying
to build something that has

523
00:30:10.030 --> 00:30:13.630
some of the best benefits
of something like mercurial, but

524
00:30:13.630 --> 00:30:20.680
is designed to be very
enterprise friendly, designed to be

525
00:30:20.710 --> 00:30:26.020
a bit more, a bit
more adaptable to the kinds

526
00:30:26.020 --> 00:30:28.450
of things that, that a
lot of paying customers are

527
00:30:28.450 --> 00:30:31.960
gonna care a lot about.
You know, things like administration

528
00:30:31.960 --> 00:30:36.400
features, ID integration, of course
is going to be, is

529
00:30:36.400 --> 00:30:40.510
going to be a focus
for us. You know, the,

530
00:30:40.810 --> 00:30:45.280
I think the current tools
have gained this huge, popular

531
00:30:45.460 --> 00:30:48.070
following in the community, and
I think they deserve it.

532
00:30:49.240 --> 00:30:52.150
But what we're hearing from,
from a lot of corporate

533
00:30:52.150 --> 00:30:54.430
and enterprise customers, when they
try and switch to something

534
00:30:54.430 --> 00:30:59.290
like mercurial or get they
stumble because they over things

535
00:30:59.290 --> 00:31:01.720
like, you know, wait, let
me get this straight. There's

536
00:31:01.720 --> 00:31:05.350
no logins. There's no, there's
no way to administer users.

537
00:31:05.380 --> 00:31:10.720
You know, things like that.
So we're, we're, we're trying

538
00:31:10.720 --> 00:31:14.920
to build something that the
follows in the footsteps of

539
00:31:14.920 --> 00:31:18.130
some of these outstanding tools,
but also is looking towards

540
00:31:18.130 --> 00:31:22.140
more corporate users later. That'd
be very interesting to hear

541
00:31:22.170 --> 00:31:25.260
from people who are listening
when they respond in the

542
00:31:25.260 --> 00:31:28.770
comments to see if you're,
you know, you're effectively saying

543
00:31:28.920 --> 00:31:32.250
we're going to make an
enterprise friendly DVCS and there's

544
00:31:32.250 --> 00:31:34.920
the implicit, the ones that
are out there really aren't

545
00:31:35.760 --> 00:31:40.380
enterprise friendly or scalable to
the size that accompany has.

546
00:31:40.380 --> 00:31:42.030
And I don't mean scalable,
just like in the, how

547
00:31:42.030 --> 00:31:44.580
many people can use it,
but in the kinds of

548
00:31:44.580 --> 00:31:45.930
things that you throw at
it, that it would be

549
00:31:45.930 --> 00:31:49.080
more unusual versus the kind
of classic way that open

550
00:31:49.350 --> 00:31:53.310
is developed. That sounds like
a pretty interesting business opportunity.

551
00:31:54.570 --> 00:31:57.450
Well, we think it is,
it's ambitious for a company

552
00:31:57.450 --> 00:32:00.000
our size, but we're excited
about it. And we're, we're

553
00:32:00.000 --> 00:32:03.240
doing well so far. So
it's fun. It's a, it's

554
00:32:03.240 --> 00:32:06.990
a fun ride. Very cool.
Well, thanks so much for

555
00:32:06.990 --> 00:32:09.630
sitting down with me and
talking about distributed version control

556
00:32:09.630 --> 00:32:12.960
systems, and hopefully folks will
go out there and start

557
00:32:12.960 --> 00:32:16.980
downloading stuff. And apparently not
asking an expert, they're going

558
00:32:16.980 --> 00:32:20.220
to go figure it out
themselves. In most cases I

559
00:32:20.220 --> 00:32:24.510
dare say they will. Thank
you, Scott. Thank you. This

560
00:32:24.510 --> 00:32:27.150
has been another episode of
Hansel minutes. We'll see you

561
00:32:27.150 --> 00:32:27.840
again next week.

