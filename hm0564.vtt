WEBVTT FILE

1
00:00:12.480 --> 00:00:18.000
From Hansel minutes.com it's Hansel
minutes, a weekly discussion with

2
00:00:18.000 --> 00:00:23.190
web developer and technologist Scott
Hanselman. This is Lawrence Ryan announcing

3
00:00:23.190 --> 00:00:27.900
show number 564. In this
episode, Scott talks with Mina

4
00:00:27.900 --> 00:00:32.370
Markham about building the Hillary
Clinton UI pattern library known

5
00:00:32.370 --> 00:00:40.500
as Penn suit. Hi, this
is Scott Hanselman. This is

6
00:00:40.500 --> 00:00:43.740
another episode of Hanselminutes today.
I'm talking with Mina Markham.

7
00:00:44.190 --> 00:00:46.920
She worked at Hillary for
America. She organized the front

8
00:00:46.920 --> 00:00:49.560
porch conference. She's worked at
IBM design and all over,

9
00:00:49.830 --> 00:00:52.370
how are you? I'm doing
great. How are you doing?

10
00:00:53.930 --> 00:00:56.840
And I'm very happy to
be talking with you. I

11
00:00:57.200 --> 00:01:00.110
found out about you when
I was looking at your

12
00:01:00.110 --> 00:01:04.100
UI pattern library. You built
a, a design system, but

13
00:01:04.100 --> 00:01:07.280
not just a design system.
You build a presidential design

14
00:01:07.280 --> 00:01:11.780
system for then candidate Hillary
Clinton. Yes, I did. It

15
00:01:11.780 --> 00:01:15.380
was a lot of funnels.
Actually. The first project I

16
00:01:15.380 --> 00:01:17.690
did when I started working
there and it was the

17
00:01:17.990 --> 00:01:20.570
longest spanning project. I did
it the entire time I

18
00:01:20.570 --> 00:01:22.880
was there. So over the
span of like 18 months,

19
00:01:22.880 --> 00:01:27.320
I worked on two separate
versions of this pattern library

20
00:01:28.880 --> 00:01:31.340
Is that work. Like someone
comes up with a, you

21
00:01:31.340 --> 00:01:33.050
know, when you have all
these at the time, there

22
00:01:33.050 --> 00:01:35.660
were all these different presidential
candidates and there's all these

23
00:01:36.230 --> 00:01:39.800
logo designers, but like, is
there some designer that comes

24
00:01:39.800 --> 00:01:42.770
up with like the language
that you're going to use?

25
00:01:42.770 --> 00:01:45.050
Or were you part of
the language, the Hillary Clinton

26
00:01:45.050 --> 00:01:48.770
language team, or how did
Well, there were two different

27
00:01:48.770 --> 00:01:53.210
versions of pantsuit that the
library for each different of

28
00:01:53.240 --> 00:01:55.490
versions of the site that
we launched a main site,

29
00:01:55.490 --> 00:02:01.250
Hillary clinton.com. When the campaign
originally launched back in April, 2015,

30
00:02:01.250 --> 00:02:04.610
the site had one kind
of look and I was

31
00:02:04.610 --> 00:02:09.350
charged with sort of retrofitting
and retro, like committing a

32
00:02:09.350 --> 00:02:12.830
pattern library based on the
excite as it existed. So

33
00:02:12.830 --> 00:02:16.250
I had to take a
design that was already in

34
00:02:16.250 --> 00:02:20.120
place by people who were
no longer working on the

35
00:02:20.120 --> 00:02:23.570
project and figure out a
way to make a reusable

36
00:02:23.570 --> 00:02:27.140
system out of something that
already existed for the second

37
00:02:27.140 --> 00:02:29.600
version of the site. I
actually worked with our designer,

38
00:02:30.380 --> 00:02:32.720
our lead, one of our
lead visual designers, Victor, and

39
00:02:32.720 --> 00:02:36.680
he redesigned Hillary clinton.com. And
based on the redesign, I

40
00:02:36.680 --> 00:02:40.190
was also redoing the library
at the same time. So

41
00:02:40.190 --> 00:02:43.490
he and I worked pretty
closely together to make sure

42
00:02:43.490 --> 00:02:48.590
that the library I was
creating directly reflected his designs

43
00:02:48.590 --> 00:02:51.050
and we would update each
acne B. So with a

44
00:02:51.050 --> 00:02:53.540
lot of like rapid iteration
and a lot of like

45
00:02:53.540 --> 00:02:58.940
payer design and coding happening,
Political campaigns have more than

46
00:02:58.960 --> 00:03:01.690
just like one website, right?
They have different entry points

47
00:03:01.690 --> 00:03:04.210
and different other mini sites
and things like that is

48
00:03:04.210 --> 00:03:07.440
that That's correct. At least
for us, we had the

49
00:03:07.440 --> 00:03:11.490
main site, which was the.com
and that was that hosted

50
00:03:11.490 --> 00:03:15.090
art, the home page and
state specific pages, policy pages

51
00:03:15.570 --> 00:03:20.700
and our blog and content
driven pages underneath the umbrella

52
00:03:20.700 --> 00:03:24.270
of Hillary clinton.com. We had
other platforms and apps like

53
00:03:24.270 --> 00:03:27.480
our donations platform, which was
a separate code base, our

54
00:03:27.480 --> 00:03:31.350
event RSVP platform, which again,
a separate code base. We

55
00:03:31.350 --> 00:03:35.490
had one off sites for
things like our fact checker

56
00:03:35.490 --> 00:03:40.770
that we did for debates.
And we had policy driven.

57
00:03:41.010 --> 00:03:45.180
Micro-sites like the college calculator
or some policy picker where

58
00:03:45.180 --> 00:03:47.430
you can pick the kind
of policies that the issues

59
00:03:47.430 --> 00:03:49.860
that were important to you.
And it would lay out

60
00:03:49.860 --> 00:03:53.580
like your platform as presented
by Hillary Clinton. So we

61
00:03:53.580 --> 00:03:57.540
had like a lot of
different apps all under the.hillerman.com.

62
00:03:59.430 --> 00:04:01.320
So it's almost, I mean,
when you, when you're saying

63
00:04:01.320 --> 00:04:04.320
a platform like there, the
candidate is off figuring out

64
00:04:04.320 --> 00:04:07.170
their platform and you're building
a platform, that's a visual

65
00:04:07.170 --> 00:04:12.390
platform to build literally everything
up on top of that.

66
00:04:14.250 --> 00:04:18.750
Yeah. As the candidate herself
was building out her policy

67
00:04:18.750 --> 00:04:22.140
platform, we were updating the
site to reflect both the

68
00:04:22.140 --> 00:04:24.840
policies and basically what you're
trying to make sure that

69
00:04:24.840 --> 00:04:28.350
everything on the site was
reflecting the message and the

70
00:04:28.350 --> 00:04:30.630
vision of the candidate herself.
So it was a lot

71
00:04:30.630 --> 00:04:34.110
of like rapid fire, like
updates, whenever something needed to

72
00:04:34.110 --> 00:04:38.460
be changed. A lot of
the people who are listening

73
00:04:38.460 --> 00:04:41.160
are designers. Let me ask
a couple of maybe dumb

74
00:04:41.160 --> 00:04:44.460
questions and you'll please forgive
me. If, if I do,

75
00:04:44.940 --> 00:04:48.450
why can't you do something
like, I don't know, one

76
00:04:48.450 --> 00:04:50.910
big CSS file. And we
all just include that. Like

77
00:04:50.910 --> 00:04:53.250
when does it, when does
a solution like this go

78
00:04:53.250 --> 00:04:56.610
from being, eh, just include
this, you know, super-duper dot

79
00:04:56.610 --> 00:05:00.390
CSS and that'll handle everything
versus it becomes a system.

80
00:05:01.650 --> 00:05:04.380
The reason we wanted to
do a system was because

81
00:05:04.380 --> 00:05:08.580
we had so many different
individual like products and different

82
00:05:09.120 --> 00:05:13.830
projects under different COVID basis,
no one ever needed all

83
00:05:13.890 --> 00:05:16.500
of the library that I
made, no one ever used,

84
00:05:16.500 --> 00:05:18.630
every single thing that was
in it. So in the

85
00:05:18.630 --> 00:05:21.630
interest of making sure that
our, our front end code

86
00:05:21.630 --> 00:05:24.240
was lightweight as possible and
our sides were as fast

87
00:05:24.240 --> 00:05:27.420
as possible. We built a
system that our people could

88
00:05:27.420 --> 00:05:29.340
just take the parts of
it that they needed as

89
00:05:29.340 --> 00:05:34.140
opposed to taking absolutely everything
that was there. It bolted

90
00:05:34.170 --> 00:05:36.780
in. And one, our engineers
were able to move a

91
00:05:36.780 --> 00:05:39.000
lot faster cause they could
just like take some button

92
00:05:39.000 --> 00:05:43.200
styles out or just take
some styles out for headlines

93
00:05:43.200 --> 00:05:45.330
and things, just the parts
they needed and leave the

94
00:05:45.330 --> 00:05:48.600
rest out of it. Okay.
So this is a lot

95
00:05:48.600 --> 00:05:51.600
more modular it's it is
overly what I described is

96
00:05:51.600 --> 00:05:54.570
very simplistic for, for a
system that is this big.

97
00:05:55.290 --> 00:05:58.190
Yeah. Because it has, I,
there was way to anticipate

98
00:05:58.190 --> 00:06:01.580
how it was going to
be used. I had to

99
00:06:01.610 --> 00:06:04.910
create something that could be
used in effective isolation, like

100
00:06:05.300 --> 00:06:07.490
ed, to be able to
take any one part of

101
00:06:07.490 --> 00:06:10.040
it and plug it into
any kind of code base

102
00:06:10.040 --> 00:06:11.960
and have it work and
not have to do a

103
00:06:11.960 --> 00:06:15.500
lot of like tweaking and
a lot of like extra

104
00:06:15.500 --> 00:06:17.480
coding on top of it,
just because of the pace

105
00:06:17.480 --> 00:06:22.240
that we were developing at.
And you based the core

106
00:06:22.240 --> 00:06:25.240
architecture on this concept that
I've not heard of before

107
00:06:25.240 --> 00:06:30.670
called it CSR. Yes, I
did. It's a concept that

108
00:06:30.670 --> 00:06:35.980
Harry Roberts he's called by CSS.
Wizardry came up with this

109
00:06:36.370 --> 00:06:40.450
brilliant system where it, a
lot of times when you

110
00:06:40.450 --> 00:06:44.110
write CSS, you kind of
almost work against the principle

111
00:06:44.110 --> 00:06:47.350
of the cascade of it.
You try to fight the

112
00:06:47.350 --> 00:06:51.010
CSF. Cause Steve has naturally
like inherit styles from the

113
00:06:51.010 --> 00:06:53.770
top down to the bottom.
And sometimes when you're writing

114
00:06:53.770 --> 00:06:57.640
it, you almost go against
that principle. Whereas with ITC

115
00:06:57.640 --> 00:07:00.280
assess the ideas that you
start off with a really

116
00:07:00.550 --> 00:07:05.590
broad scale, really grand styles,
and you narrowly get more

117
00:07:05.590 --> 00:07:10.090
specific and more narrow as
you go down and your

118
00:07:10.090 --> 00:07:13.480
style sheets. So at the
end, you're left with very

119
00:07:13.480 --> 00:07:17.320
specific, like a clot where's
this class with that handle

120
00:07:17.350 --> 00:07:20.830
like one particular property at
one particular declaration. And at

121
00:07:20.830 --> 00:07:22.990
the very top of it,
you'll have things that go

122
00:07:23.380 --> 00:07:27.220
where you have like your
box sizing or your styles

123
00:07:27.220 --> 00:07:30.520
on like the HTML pack
and like the, the, the

124
00:07:30.520 --> 00:07:34.150
main tags there. So it's,
I really liked that principle

125
00:07:34.150 --> 00:07:39.520
because it, it, it lends
itself well to modularity, but

126
00:07:39.520 --> 00:07:41.530
also a limited self to
like, not writing a lot

127
00:07:41.530 --> 00:07:44.320
of like overtly specific CSS
and a lot of like

128
00:07:44.350 --> 00:07:48.250
bloated code, because you weren't
effectively trying to undo something

129
00:07:48.250 --> 00:07:53.590
you did before. It seems
like from a layman's perspective

130
00:07:53.590 --> 00:07:57.190
that there's a, it applies
rigor to something that I

131
00:07:57.190 --> 00:07:59.410
personally as kind of not
a designer, I just hacked

132
00:07:59.410 --> 00:08:02.050
CSS together. I've never applied
that level of kind of

133
00:08:02.050 --> 00:08:05.440
rigor or formality to, to
my CSS. This is a

134
00:08:05.440 --> 00:08:08.890
whole framework within which like
a name is, it's a

135
00:08:08.890 --> 00:08:11.860
naming convention. It's a way
to focus your, your classes

136
00:08:11.860 --> 00:08:15.010
and their purpose and their
scope. Yeah. I try to

137
00:08:15.010 --> 00:08:17.980
do that as much as
possible because what I've discovered

138
00:08:17.980 --> 00:08:19.180
is that a lot of
people, even a lot of

139
00:08:19.180 --> 00:08:22.900
fun developers who do more
JavaScript and more like logic

140
00:08:22.900 --> 00:08:26.320
oriented things, they kind of,
don't like writing CSS because

141
00:08:26.320 --> 00:08:29.350
they've gotten used to the
idea that it's kind of

142
00:08:29.350 --> 00:08:33.370
haphazard and it's very easily
to, it's very easy to

143
00:08:33.370 --> 00:08:37.300
like things to get to
break very easily. And I

144
00:08:37.300 --> 00:08:40.360
was out, I've kind of
figured out that that's because

145
00:08:40.360 --> 00:08:44.890
people tend to write the
CSS, mimicking the HTML structure

146
00:08:45.310 --> 00:08:47.650
and they kind of type
tightly coupled the two so

147
00:08:47.650 --> 00:08:50.770
that if you change one,
you end up having to

148
00:08:50.770 --> 00:08:54.910
change the other or something
might break. So the principle

149
00:08:54.930 --> 00:08:59.430
behind using something like PCSs
and using really great naming

150
00:08:59.430 --> 00:09:02.100
conventions is to make it
so that your, your CSS

151
00:09:02.100 --> 00:09:05.250
file. One is easily. Human
is easily read by human.

152
00:09:05.520 --> 00:09:08.700
We use naming conventions that
if you look at the

153
00:09:08.700 --> 00:09:11.310
name of the class, you
could pretty easily tell what

154
00:09:11.310 --> 00:09:14.100
the styles are, what that
class purpose is. I guess

155
00:09:14.100 --> 00:09:16.110
I try to name my
classes in a way that

156
00:09:16.110 --> 00:09:18.330
if you saw the name
of the class, you can

157
00:09:18.330 --> 00:09:21.390
know what exactly it is
was referencing. But also I

158
00:09:21.390 --> 00:09:25.350
wanted to be able to
remove the styles from the

159
00:09:25.650 --> 00:09:29.370
structure of the page, so
that if you happen to

160
00:09:29.370 --> 00:09:32.850
move around your markup a
little bit, you, you weren't,

161
00:09:32.850 --> 00:09:34.530
you didn't have to go
back and then rewrites and

162
00:09:34.530 --> 00:09:38.550
CSS, it should just work.
And I found that, especially

163
00:09:38.550 --> 00:09:40.980
when we were working in
a very rapid fire environment,

164
00:09:40.980 --> 00:09:44.760
like the, like the campaign
was it's less work, you

165
00:09:44.760 --> 00:09:48.630
can do the better. So
being able to just change

166
00:09:48.720 --> 00:09:51.450
classes, move around classmates and
not have like, redo all

167
00:09:51.450 --> 00:09:54.060
of your HTML structure or
vice versa, like it made

168
00:09:54.060 --> 00:09:55.830
it so that there was
a lot of, like, there

169
00:09:55.830 --> 00:09:57.590
wasn't a lot of lifting
to get started or what

170
00:09:57.600 --> 00:10:02.360
my lifting to change your
styles. And when you're putting

171
00:10:02.360 --> 00:10:04.310
together a site that's going
to get, you know, I

172
00:10:04.310 --> 00:10:06.320
assume, you know, tens of
millions, if not hundreds of

173
00:10:06.320 --> 00:10:09.110
millions of hits, you're going
to want to hit everybody.

174
00:10:09.860 --> 00:10:11.810
And it's going to have
to be really, really inclusive.

175
00:10:11.840 --> 00:10:15.620
So does this work like,
is it, is it accessible,

176
00:10:15.650 --> 00:10:18.290
accessible? Is it compliant with
all the things for screen

177
00:10:18.290 --> 00:10:20.150
readers and low vision and
all those kinds of things?

178
00:10:20.960 --> 00:10:24.560
Yeah. I tried to make
the site as compliant as

179
00:10:24.560 --> 00:10:29.210
possible, because like you said,
it's particularly when you're applying

180
00:10:29.210 --> 00:10:31.070
to work at the highest
office of the land, like

181
00:10:31.070 --> 00:10:33.140
you want to make sure
you can reach everyone. Who's

182
00:10:33.290 --> 00:10:36.290
attempting to find out more
information about you. So I

183
00:10:36.290 --> 00:10:38.540
wanted to make sure I
remove as many barriers as

184
00:10:38.540 --> 00:10:42.740
possible from being able to
access the site. And so

185
00:10:42.740 --> 00:10:45.860
that included one, making sure,
like you said, that screen

186
00:10:45.860 --> 00:10:49.940
readers could ask, could read
the site properly. And to

187
00:10:49.940 --> 00:10:54.200
do that, I tried my
best to code every page

188
00:10:54.200 --> 00:10:56.360
with the proper higher accuracy
of the pop and the

189
00:10:56.360 --> 00:10:59.630
proper HTML tags so that
the screen readers would know

190
00:11:00.110 --> 00:11:02.030
the hierarchy of the content.
It would be able to

191
00:11:02.030 --> 00:11:05.780
better interpret what the content
meant. In addition to that

192
00:11:06.140 --> 00:11:08.660
keyboard navigation was something I
tried to pay attention to.

193
00:11:08.660 --> 00:11:12.320
There's a lot of people
who use keyboard only have,

194
00:11:13.430 --> 00:11:16.100
are able to use a
mouse or whatnot. So they

195
00:11:16.460 --> 00:11:18.680
use a lot of key.
I use keyboard navigation to

196
00:11:18.680 --> 00:11:20.180
go around the site, and
I wanted to make sure

197
00:11:20.180 --> 00:11:23.840
that if you were using
a top key or arrow

198
00:11:23.840 --> 00:11:26.090
can get to go through
our site, you were able

199
00:11:26.090 --> 00:11:28.190
to hit every single thing
you'd be able to hit.

200
00:11:28.220 --> 00:11:30.650
You didn't get into any
traps where you weren't able

201
00:11:30.650 --> 00:11:34.460
to access. Like for example,
our dropdown menu on navigation

202
00:11:34.970 --> 00:11:37.160
are our main navigation. I
just want to make sure

203
00:11:37.160 --> 00:11:39.110
that everything you be able
to get around the site

204
00:11:39.260 --> 00:11:44.840
without much difficulty of the
same time when you're using

205
00:11:45.070 --> 00:11:47.900
keyboard navigation, you want to
make sure that there's focus

206
00:11:47.900 --> 00:11:51.470
States. So people know when
they're moving the key, when

207
00:11:51.470 --> 00:11:53.950
they're moving the cursor with
the, you, they want, you

208
00:11:53.950 --> 00:11:57.490
want to be able to
see where you are located

209
00:11:57.600 --> 00:12:00.250
at any given time. Like
with the mouse, you're able

210
00:12:00.250 --> 00:12:02.470
to tell where you're where
your mouse is. You can

211
00:12:02.470 --> 00:12:05.560
see the cursor, but with
the, with the tab keys,

212
00:12:05.560 --> 00:12:09.130
if you don't specifically style
focus States, you may not

213
00:12:09.130 --> 00:12:11.830
always be able to tell
where you are on a

214
00:12:11.830 --> 00:12:16.330
page. Funny thing is, is
that the browser does this

215
00:12:16.330 --> 00:12:19.450
for you automatically. Like, it
just comes with focus days,

216
00:12:19.450 --> 00:12:23.710
but lots of frameworks inadvertently
like remove that styling. And

217
00:12:24.760 --> 00:12:27.130
some developers don't know that
they need to add that

218
00:12:27.130 --> 00:12:29.770
back so that people are
able to see where they

219
00:12:29.770 --> 00:12:32.590
are. So I worked with
our designer to make sure

220
00:12:32.590 --> 00:12:35.620
that we specifically styled all
of our focus States so

221
00:12:35.620 --> 00:12:39.340
that even though I removed
the default browser styles, because

222
00:12:39.340 --> 00:12:41.050
I didn't, we didn't like
the way they looked. We've

223
00:12:41.050 --> 00:12:43.300
made sure that we added
them back, that they matched

224
00:12:43.300 --> 00:12:46.060
our brand and people could
still tap through and know

225
00:12:46.060 --> 00:12:49.140
where they were. I see.
So there is, there is

226
00:12:49.140 --> 00:12:52.320
the stuff that the browser
does by default. You removed

227
00:12:52.320 --> 00:12:53.850
it because you didn't like
the look of it, but

228
00:12:53.880 --> 00:12:57.030
you made sure that no,
no behaviors were removed. No

229
00:12:57.210 --> 00:12:59.850
expectations were not in that
when someone did something like

230
00:12:59.880 --> 00:13:03.510
tab over something. Yeah. And
it's, there's nothing wrong with

231
00:13:03.510 --> 00:13:06.750
moving because I think the
like on a Mac anyway,

232
00:13:06.750 --> 00:13:10.890
there's this like default, like
blue shadowy outline where you

233
00:13:10.890 --> 00:13:13.710
tap over something and lots
of people don't necessarily like

234
00:13:13.710 --> 00:13:16.660
that look, but just if
you're going to remove and

235
00:13:16.660 --> 00:13:20.700
make sure that you've been
style that look appropriately, and

236
00:13:20.700 --> 00:13:24.800
we did a separate style
between hover and focus States,

237
00:13:24.810 --> 00:13:28.380
cause the, the gut reaction
is, well, I'll just style.

238
00:13:28.380 --> 00:13:31.050
The hover States and the
focus stays the exact same,

239
00:13:31.440 --> 00:13:34.560
that doesn't necessarily always work.
So we wanted to make

240
00:13:34.560 --> 00:13:38.970
sure that when you were
tabbing versus hovering over something,

241
00:13:38.980 --> 00:13:41.370
you would know the distinction
by being able to visually

242
00:13:41.370 --> 00:13:44.580
see it. One important thing
that I, we had to

243
00:13:44.610 --> 00:13:48.060
make sure we kept in
mind was holler contrast. A

244
00:13:48.060 --> 00:13:51.510
lot of the times the
people think that just changing

245
00:13:51.510 --> 00:13:54.300
the color of something is
enough of a visual indicator,

246
00:13:54.300 --> 00:13:57.060
but lots of people are
color blind and are able

247
00:13:57.060 --> 00:14:01.110
to perceive that shift in
color. So making sure that

248
00:14:01.110 --> 00:14:05.100
you have some kind of
deep contrast thing, how our

249
00:14:05.100 --> 00:14:08.490
pallets, so that they can
visually see the difference, even

250
00:14:08.490 --> 00:14:10.290
if they can't see the
difference in color, they'll be

251
00:14:10.290 --> 00:14:13.170
able to see the difference
in the shading. So keeping

252
00:14:13.170 --> 00:14:16.440
stuff at mind like that,
where just making sure that

253
00:14:17.100 --> 00:14:19.950
it's always visually, you're always
able to visually perceive the

254
00:14:19.950 --> 00:14:22.380
difference in something, if, even
if it's all in black

255
00:14:22.380 --> 00:14:26.760
and white. So this is
all very modern HTML, modern

256
00:14:26.760 --> 00:14:31.050
CSS. This is this, does
this end up being one

257
00:14:31.230 --> 00:14:34.470
big CSS file? Or are
you using a CSS library

258
00:14:34.470 --> 00:14:40.770
that is generating CSS Several
like dozens of small CSS

259
00:14:40.770 --> 00:14:47.460
files, actually the several small
sauce files. And I are

260
00:14:47.460 --> 00:14:51.890
using a goal slash Webpack
based build system to all

261
00:14:51.890 --> 00:14:55.340
of those files into one
main CSS file, which is

262
00:14:55.340 --> 00:15:00.020
then included into the application.
That was for the main

263
00:15:00.020 --> 00:15:03.050
site, because pantsy was also
used by things that were

264
00:15:03.520 --> 00:15:08.660
outside prod products. I also
use that compile CSS now

265
00:15:09.440 --> 00:15:12.860
the build system within publish
it to the CDN. And

266
00:15:12.860 --> 00:15:14.990
so they would be able,
our engineers would be able

267
00:15:14.990 --> 00:15:17.720
to just pull a link
off the CDN and include

268
00:15:17.720 --> 00:15:21.110
it or any other application
they were using. So our

269
00:15:21.110 --> 00:15:23.690
build system would take all
of my, like dozens of

270
00:15:23.690 --> 00:15:27.200
small CSS files or excuse
me, sass files compiled into

271
00:15:27.200 --> 00:15:31.010
one big CSS file and
then publish them both to

272
00:15:31.340 --> 00:15:34.820
a internal NPM module that
you could then include insider

273
00:15:34.830 --> 00:15:39.320
application or to the an
S three bucket for our

274
00:15:39.320 --> 00:15:42.380
CDN. And then they could
pull it down with just

275
00:15:42.380 --> 00:15:44.600
a link tag. So there's
two different ways that people

276
00:15:44.600 --> 00:15:49.360
would consume pantsuit. Interesting. And
is it possible to test

277
00:15:49.390 --> 00:15:51.700
something like this is maybe
a dumb question, but can

278
00:15:51.700 --> 00:15:53.960
you test CSS without looking
at it, like the way

279
00:15:53.960 --> 00:16:02.260
you unit test? Not really,
there's a thing called visual

280
00:16:02.260 --> 00:16:05.170
regression test, which I never
fully implemented. Cause it just

281
00:16:05.170 --> 00:16:07.510
was kind of out of
the scope of what I

282
00:16:07.510 --> 00:16:10.810
was working on, but to
do something like testing CSS,

283
00:16:11.500 --> 00:16:14.470
I really just do a
visual test. I would do

284
00:16:14.470 --> 00:16:18.970
visual, be bugging using this
thing called pesticide, that IO,

285
00:16:18.970 --> 00:16:22.660
which would essentially just add
an outline to every element

286
00:16:22.660 --> 00:16:25.330
on the page. And you
can kind of see if

287
00:16:25.330 --> 00:16:27.940
your layout is doing something
unexpected or kind of funky.

288
00:16:27.940 --> 00:16:30.250
You can kind of, that
helps you to see what

289
00:16:30.250 --> 00:16:33.250
is happening. But as far
as like automated tests for

290
00:16:33.250 --> 00:16:35.320
CSS, the only thing I
would do is I would

291
00:16:35.320 --> 00:16:39.100
Lynch my CSS based on
some linting rules that I

292
00:16:39.100 --> 00:16:41.470
wrote. And it would just
help with the formatting of

293
00:16:41.470 --> 00:16:43.930
the files itself, but it
didn't really like check to

294
00:16:43.930 --> 00:16:47.560
see if it worked properly
or if it looked properly

295
00:16:47.920 --> 00:16:52.480
with the SAS, with compiling,
if there was a missing

296
00:16:52.750 --> 00:16:55.660
punctuation or something, the file
just wouldn't compile. So you

297
00:16:55.660 --> 00:16:57.880
would notice it was broken
because the no CSS will

298
00:16:57.880 --> 00:17:00.880
be loaded, but that's about
as far as it would

299
00:17:00.880 --> 00:17:06.070
go, can you, could you
Bad CSS out, it would

300
00:17:06.070 --> 00:17:07.510
make it all the way
out to production or like

301
00:17:07.510 --> 00:17:09.190
you said, you'd catch some
of that in the linting

302
00:17:09.190 --> 00:17:12.910
process and it would, it
would literally be, Yeah, I

303
00:17:12.910 --> 00:17:16.870
kind of tested it really
rigorously, just visually speaking because

304
00:17:16.870 --> 00:17:20.110
of that, because so many
different people were using the

305
00:17:20.510 --> 00:17:24.280
finished product that I didn't
want to risk breaking anything

306
00:17:24.280 --> 00:17:27.670
in production. So I did
pretty rigorous testing, just visual,

307
00:17:27.670 --> 00:17:30.790
like testing just by looking
at it. That's about all

308
00:17:30.790 --> 00:17:34.610
I could do. Also we
did version, we did some

309
00:17:34.610 --> 00:17:38.220
for, for pantsuit so that
even if I happen to

310
00:17:38.260 --> 00:17:40.030
cause every once in a
while I would get Annenberg,

311
00:17:40.030 --> 00:17:43.240
we do push a broken
bill to prod, but I

312
00:17:43.240 --> 00:17:45.370
would, it would be versions
so that no one would

313
00:17:45.370 --> 00:17:48.670
actually, it never would make
it to the live site

314
00:17:48.670 --> 00:17:52.620
unless went and manually Updated
that dependencies. So there was

315
00:17:52.620 --> 00:17:55.770
a lot of different safeguards
to try not to push

316
00:17:55.800 --> 00:18:04.640
broken CSS to the site.
But occasionally it happens. We're

317
00:18:04.660 --> 00:18:07.130
saying this is a dumb
question, but I'm realizing that

318
00:18:07.310 --> 00:18:11.210
on the front end, I
am really unfamiliar with how

319
00:18:11.210 --> 00:18:14.420
things work. And when I
was doing CSS, you know,

320
00:18:14.420 --> 00:18:16.430
many years ago when I
was writing my own before

321
00:18:16.430 --> 00:18:19.640
CSS kind of became its
own practice, right. Where you

322
00:18:19.640 --> 00:18:22.610
were, there were professional front
end engineers, right. There was

323
00:18:22.610 --> 00:18:26.930
just so much less formality
to it. Your build system

324
00:18:26.930 --> 00:18:32.550
is really rigorous and, and,
and integrated into the, the,

325
00:18:32.550 --> 00:18:35.540
the build system of the
entire site. Right. I mean,

326
00:18:35.540 --> 00:18:39.740
you're using a strongly typed
language like with SAS that's

327
00:18:39.740 --> 00:18:42.890
catching things and allowing you
to do reuse it's it's

328
00:18:42.890 --> 00:18:46.130
as similar as writing C
or C plus plus, I

329
00:18:46.130 --> 00:18:51.560
mean, it's, it's pretty, pretty
serious stuff. Yeah. I, I

330
00:18:51.560 --> 00:18:53.480
come from a design background.
I used to be a

331
00:18:53.480 --> 00:18:55.670
designer and I S I
slowly Wade my way and

332
00:18:55.670 --> 00:18:58.460
taught myself front end development
or front end engineering. So

333
00:18:58.460 --> 00:19:03.290
I, I use SAS as
kind of like a, I

334
00:19:03.310 --> 00:19:06.410
call it like a, I
guess they start a drug

335
00:19:06.440 --> 00:19:09.800
or like a entryway drug
to program it's as has

336
00:19:09.800 --> 00:19:14.330
a lot of like traditional
programming concepts within it. That

337
00:19:14.510 --> 00:19:18.680
helped me more programming languages.
So it's, I've kind of

338
00:19:19.070 --> 00:19:23.090
gotten, I've just started getting
used to writing CSS in

339
00:19:23.090 --> 00:19:26.810
a way that is much
more, like, much more modular,

340
00:19:26.810 --> 00:19:30.110
much more cleaner and just
more deliberate and just making

341
00:19:30.110 --> 00:19:34.520
sure that I do things,
what I do things in

342
00:19:34.520 --> 00:19:39.140
a way that they are
very intentional. And I just

343
00:19:39.140 --> 00:19:40.400
try not to do anything
for you, but we have

344
00:19:40.400 --> 00:19:43.790
hazard. Cause that's how a
lot of the frustrations with

345
00:19:44.330 --> 00:19:46.940
the traditional frustration people have
with CSS, that's where they

346
00:19:46.940 --> 00:19:48.860
come from is that if
people are a little bit

347
00:19:48.860 --> 00:19:51.650
more haphazard with their name
and conventions or with their

348
00:19:51.650 --> 00:19:56.420
styling, besides assignment logic and
things like that. Yeah, that's

349
00:19:56.420 --> 00:20:00.260
very well said. I liked
that intentional and deliberate because

350
00:20:00.260 --> 00:20:04.160
I know that when I
paid a designer to redesign

351
00:20:04.520 --> 00:20:07.160
my blog, you know, it
was glorious and it was

352
00:20:07.160 --> 00:20:10.520
organized and then I wanted
to change something, you know,

353
00:20:11.390 --> 00:20:13.610
and I throw it at
the end, you know, and

354
00:20:13.610 --> 00:20:16.400
now three years later, I'm
on version five and it's

355
00:20:16.400 --> 00:20:20.870
10% garbage and 90% glorious.
And the garbage is entirely

356
00:20:20.870 --> 00:20:25.460
my fault because I didn't
think about the pyramid and

357
00:20:25.460 --> 00:20:29.600
the like, like you point
out the alterations of components

358
00:20:29.600 --> 00:20:32.210
as it works its way
down the, or up the

359
00:20:32.210 --> 00:20:35.180
pyramid, depending on how you
look at it. Yeah. And

360
00:20:35.180 --> 00:20:39.830
like I said, the it
CSS that is really smart,

361
00:20:39.860 --> 00:20:43.910
really well thought out methodology.
And I think that it

362
00:20:43.910 --> 00:20:50.080
solves a lot of people's
with CSS and that it

363
00:20:50.110 --> 00:20:53.410
helps you think about it
in much more deliberate fashion,

364
00:20:56.470 --> 00:20:59.460
The build system. And it's
not just, you're not just

365
00:20:59.460 --> 00:21:02.280
building the CSS and the
website, but one of the

366
00:21:02.280 --> 00:21:06.210
things that, that separates a
style guide from just some

367
00:21:06.210 --> 00:21:09.870
CSS is documentation. This is
a system like bootstrap is

368
00:21:09.880 --> 00:21:13.590
a system. It is, there's
a whole series of documentation

369
00:21:13.590 --> 00:21:16.710
behind this for people to
sit down and immediately become

370
00:21:16.710 --> 00:21:21.990
productive. Yeah. That was part
of my deliberate deliverable when

371
00:21:21.990 --> 00:21:25.110
I finished this project because
this system that I built

372
00:21:25.110 --> 00:21:27.210
didn't really do anyone in
need go to, they didn't

373
00:21:27.210 --> 00:21:31.100
know how to use it.
So I had to, I

374
00:21:31.140 --> 00:21:34.980
kind of try to document,
as I would make this,

375
00:21:35.070 --> 00:21:36.750
as I was building the
system, as I was building

376
00:21:36.750 --> 00:21:42.390
components, I used this CSS
notation called I'm KSS node.

377
00:21:42.750 --> 00:21:45.660
And what it would do
is it parses through comments

378
00:21:45.660 --> 00:21:48.210
that I would make inside
my sass files and use

379
00:21:48.210 --> 00:21:54.270
those comments to generate static
pages that were showcasing and

380
00:21:54.270 --> 00:21:58.350
documenting the components I was
making. So it made it,

381
00:21:58.650 --> 00:22:02.700
it had a twofold result
while the documentation itself lived

382
00:22:02.730 --> 00:22:05.490
inside of the killer base.
So if someone was just

383
00:22:05.490 --> 00:22:08.100
looking through the code base,
they would be able to

384
00:22:08.100 --> 00:22:12.300
read the documentation that way,
but also it helped. It

385
00:22:12.300 --> 00:22:15.780
helped me to kind of
automate the documentation of it

386
00:22:15.780 --> 00:22:19.470
pretty metaphorically quickly, because whenever
I would make a change

387
00:22:19.500 --> 00:22:23.070
inside of ACSS file, I
could quickly update the, the

388
00:22:23.070 --> 00:22:26.220
comments next to it. And
I would have my occupation

389
00:22:26.220 --> 00:22:29.250
just read, render, and update
that way. And one of

390
00:22:29.250 --> 00:22:32.820
the things I heard from
my fellow engineers on the

391
00:22:32.820 --> 00:22:36.960
team was that how well
documented this was. And it

392
00:22:36.960 --> 00:22:39.480
really had the effect that
people were able to kind

393
00:22:39.480 --> 00:22:41.850
of jump in and get
going very quickly. And they

394
00:22:41.850 --> 00:22:44.130
didn't have to ask, combined
me to ask a lot

395
00:22:44.130 --> 00:22:45.690
of, a lot of questions
about how to use it.

396
00:22:45.690 --> 00:22:48.630
It was just kind of
there and it made it

397
00:22:48.630 --> 00:22:51.750
so that our project, our
timelines move much, much faster.

398
00:22:52.770 --> 00:22:57.090
Interesting. So a documentation syntax
for CSS. So it's embedded

399
00:22:57.090 --> 00:23:00.990
within the comments within the
CSS itself. Yeah. I would

400
00:23:00.990 --> 00:23:03.060
just write 'em in SAS
that are this thing called

401
00:23:03.060 --> 00:23:06.720
silent comments where they, they
don't the comments themselves. Don't

402
00:23:06.720 --> 00:23:09.990
get out, put it to
the actual compile CSS, but

403
00:23:09.990 --> 00:23:14.070
they live inside the sass
files and this notation would

404
00:23:14.910 --> 00:23:19.530
use those comments and generate
the HTML markup that was

405
00:23:19.530 --> 00:23:24.060
needed to both present the,
the UI component. But also

406
00:23:24.060 --> 00:23:26.940
it would spit out the
raw Marcos where people could

407
00:23:26.940 --> 00:23:28.830
just copy and paste the
markup into their own app.

408
00:23:29.910 --> 00:23:32.790
Okay, interesting. So then that
means that it's not just,

409
00:23:32.850 --> 00:23:35.070
you know, taking some markdown
or some files as, you

410
00:23:35.070 --> 00:23:37.260
know, some texts out of
comments, but you're actually seeing

411
00:23:37.260 --> 00:23:40.020
the button next to the
here's the slide, here's the

412
00:23:40.020 --> 00:23:43.620
style to use to get
that button. Yeah. It's, it's

413
00:23:43.620 --> 00:23:46.640
actual, alive and living a
living and breathing style guide

414
00:23:46.640 --> 00:23:50.330
where you can see and
interact with the components themselves,

415
00:23:50.330 --> 00:23:52.640
as well as seeing the,
the markup, you would need

416
00:23:52.640 --> 00:23:54.800
to recreate that in your
own app. So it was,

417
00:23:55.250 --> 00:23:58.280
it had kind of a
twofold of showing people what

418
00:23:58.340 --> 00:24:01.010
it should look like. So
if that, for whatever reason

419
00:24:01.010 --> 00:24:03.380
they were using it and
it didn't look quite like

420
00:24:03.380 --> 00:24:05.300
they were expecting, they could
kind of go back to

421
00:24:05.300 --> 00:24:09.230
the documentation and see like
what happened and maybe figure

422
00:24:09.230 --> 00:24:12.110
out where they went wrong.
But also it just, it

423
00:24:12.110 --> 00:24:14.000
was a way for people
to like, just really kind

424
00:24:14.000 --> 00:24:18.980
of see how these things
live outside of the context

425
00:24:18.980 --> 00:24:24.700
of a larger app. Now
you organized a conference called

426
00:24:24.700 --> 00:24:27.760
the front porch conference, kind
of a front end developer.

427
00:24:28.780 --> 00:24:32.410
Yeah. I'm one of the
co-organizers Chris Williams. One of

428
00:24:32.410 --> 00:24:35.440
my good friends down in
Dallas, he started the conference

429
00:24:35.500 --> 00:24:40.240
and I helped him organize
two, two different years, not

430
00:24:40.240 --> 00:24:42.820
last year. Cause obviously I
was a little preoccupied, but

431
00:24:43.600 --> 00:24:47.710
I worked with him to
run this conference for two

432
00:24:47.710 --> 00:24:50.860
different for two weeks, the
past two years. And yeah,

433
00:24:51.070 --> 00:24:54.500
we just tried to build
a community in front of

434
00:24:54.550 --> 00:24:57.430
developer community in Dallas and
kind of show that there

435
00:24:57.430 --> 00:25:01.150
is this, this texting there
and we just wanted a

436
00:25:01.150 --> 00:25:03.880
way to like, you know,
share knowledge and, you know,

437
00:25:03.890 --> 00:25:08.110
promote what we were learning
to our fellow developers and

438
00:25:08.110 --> 00:25:12.520
valves community. So where would
you, what would you say

439
00:25:12.520 --> 00:25:15.550
to someone like me who,
Well, I know what HTML

440
00:25:15.550 --> 00:25:17.020
is and I know what
CSS is. I know what

441
00:25:17.020 --> 00:25:20.800
JavaScript is, but the, when
you call it front end

442
00:25:20.800 --> 00:25:24.550
development and you talk to
me about things like KSS

443
00:25:24.550 --> 00:25:27.670
and nunchucks and assemble and,
and, and I, I, my

444
00:25:27.670 --> 00:25:29.800
brain starts to go, ah,
it's too much. And then

445
00:25:29.800 --> 00:25:33.040
you add SAS and it's
like, well, I guess I'll

446
00:25:33.040 --> 00:25:35.920
just keep hacking it together.
Where do I go to

447
00:25:36.070 --> 00:25:38.410
if I'm not a designer,
but I want to understand

448
00:25:38.410 --> 00:25:40.000
the world of the front
end developer to try to

449
00:25:40.000 --> 00:25:42.100
get my head around this
because it's moving so fast.

450
00:25:43.690 --> 00:25:49.600
So you're saying, where should
I direct? I would say

451
00:25:50.380 --> 00:25:54.460
just what I learned was
I would read, I would

452
00:25:54.460 --> 00:25:58.330
read a blog post and
read mainly CSS-Tricks honestly like

453
00:25:58.330 --> 00:26:01.900
that kind of is what
got me really to understand

454
00:26:01.900 --> 00:26:05.380
how CSS works. And it's
not, it doesn't just talk

455
00:26:05.380 --> 00:26:07.460
about CSS talks about pretty
much everything to do with

456
00:26:07.460 --> 00:26:09.820
front end. So that was
one place that I've gone

457
00:26:09.820 --> 00:26:12.250
that I've, I've learned a
little bit, I've learned a

458
00:26:12.250 --> 00:26:16.030
lot about how to do
front end development, but also

459
00:26:16.270 --> 00:26:21.340
a front end is kind
of by default open source.

460
00:26:21.340 --> 00:26:23.170
Cause you have, the browser
has to be able to

461
00:26:23.170 --> 00:26:26.080
see the code, unlike, you
know, back in applications. I

462
00:26:26.080 --> 00:26:28.180
have to be compiled on
the server. Like you can

463
00:26:28.810 --> 00:26:32.050
have access to the CSS,
the HTML and the JavaScript

464
00:26:32.080 --> 00:26:35.230
in your browser. So I,
how I got into is

465
00:26:35.230 --> 00:26:38.350
I would just see something
cool on someone's website. I

466
00:26:38.350 --> 00:26:41.470
would inspect the element. I
would view the source and

467
00:26:41.470 --> 00:26:43.470
kind of just start to
dig in and see was

468
00:26:43.470 --> 00:26:46.950
happening. So I just learned
by like playing around and

469
00:26:48.000 --> 00:26:52.230
dissecting other people's code. So
I guess my, what I

470
00:26:52.230 --> 00:26:55.740
would say is just, if
you see something, you like

471
00:26:55.770 --> 00:26:58.110
try to dig into it
and figure out how it's

472
00:26:58.110 --> 00:27:02.330
being done. So if I
see a CSS, you know,

473
00:27:02.330 --> 00:27:04.340
system being used, I'm going
to see it in view

474
00:27:04.340 --> 00:27:07.280
source and then really dig
into an Explorer and say,

475
00:27:07.280 --> 00:27:09.980
well, you know, wow, this
site that I respect or

476
00:27:09.980 --> 00:27:13.100
this company that I respect
is using library foo or

477
00:27:13.100 --> 00:27:17.190
CSS style system bar, why
are they doing that? What

478
00:27:17.280 --> 00:27:20.030
would the decisions behind it?
And then start exploring those

479
00:27:20.030 --> 00:27:22.130
people's blogs. And I assume
they would talk about it

480
00:27:22.130 --> 00:27:27.140
on places like CSS tricks.
Yeah. CSS-Tricks also a book

481
00:27:27.140 --> 00:27:31.850
apart has a great series
of very small, like easily

482
00:27:31.850 --> 00:27:36.860
digestible books about front end.
And they are geared towards

483
00:27:37.550 --> 00:27:39.980
beginners and people who don't
necessarily know a lot about

484
00:27:39.980 --> 00:27:42.470
the topic they're talking about.
So I think those books

485
00:27:42.470 --> 00:27:45.890
are actually a really good
way to get the, to

486
00:27:45.890 --> 00:27:48.710
get started learning a little
bit more about this and

487
00:27:48.710 --> 00:27:50.870
it doesn't cut. They're so
small. They're very easy to

488
00:27:50.870 --> 00:27:52.190
read. You can read them
in like a couple of

489
00:27:52.190 --> 00:27:55.040
hours. And I think that
those, they actually help to

490
00:27:55.520 --> 00:27:57.560
get you started. And they
don't require a lot of

491
00:27:57.560 --> 00:28:00.710
like upfront, like diving in
and like commitment to it.

492
00:28:02.480 --> 00:28:06.440
Now about a year ago
you made a GitHub project

493
00:28:06.440 --> 00:28:08.680
and it's, I went to
your GitHub and it's, it's

494
00:28:08.690 --> 00:28:11.150
so much greener than mine.
It has this lovely green

495
00:28:11.150 --> 00:28:14.900
graph of all your contributions.
You made a project called

496
00:28:14.900 --> 00:28:19.760
sassy starter. Is that a
good, That's a good place

497
00:28:19.760 --> 00:28:22.670
to start if you want
to build like a static

498
00:28:22.670 --> 00:28:26.330
site pretty quickly. Essentially, I
made that because I, when

499
00:28:26.330 --> 00:28:29.690
I started creating new front
end projects, I would always

500
00:28:30.050 --> 00:28:33.770
use a similar structure, a
similar like file system. And

501
00:28:33.770 --> 00:28:36.260
I just wanted to not
have to create the same

502
00:28:36.260 --> 00:28:39.050
thing multiple times. So I've
made it into a repo

503
00:28:39.050 --> 00:28:40.730
and I put it up
there. I thought someone else

504
00:28:40.730 --> 00:28:43.070
might enjoy it, but that's
probably, that's a good way

505
00:28:43.070 --> 00:28:45.080
for you to get started.
It's like at the very

506
00:28:45.080 --> 00:28:48.440
least you can see the
kind of way I structure

507
00:28:48.740 --> 00:28:51.830
my CSS. Cause it includes
the file structure there for

508
00:28:51.830 --> 00:28:53.210
you. So you can kind
of get an idea of

509
00:28:53.210 --> 00:28:57.410
like how that, how that
is structured and also includes

510
00:28:57.410 --> 00:28:59.650
a very simple, like gold
built systems. You can get

511
00:28:59.650 --> 00:29:02.210
kind of get your feet
wet with how that particular

512
00:29:02.210 --> 00:29:05.090
system might work. So yeah,
it's a very good place

513
00:29:05.090 --> 00:29:08.660
to kind of like, just
start playing around with like

514
00:29:08.660 --> 00:29:15.590
running code. Very cool. So
people can find you@meena.codes. M

515
00:29:15.590 --> 00:29:18.890
I N a.codes. And from
there they can see you're

516
00:29:18.890 --> 00:29:21.410
speaking, you've spoken all over.
They can see your work.

517
00:29:22.030 --> 00:29:24.530
You're in New York now. Yeah.
I live in Brooklyn now.

518
00:29:25.190 --> 00:29:28.490
Very cool. And you're available.
If people are looking for

519
00:29:28.490 --> 00:29:30.860
a front end designer, who's
done big stuff with the

520
00:29:30.860 --> 00:29:34.100
amazing technologies. I really appreciate
you taking the time to

521
00:29:34.100 --> 00:29:39.320
chat with me today. This
has been another episode of

522
00:29:39.320 --> 00:29:49.340
Hansel minutes and we'll see
you again next week. <inaudible>.

