WEBVTT FILE

1
00:00:12.090 --> 00:00:17.400
From hanselminutes.com. It's Hansel minutes,
all weekly discussion with web

2
00:00:17.400 --> 00:00:22.230
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.230 --> 00:00:28.920
number three 71 recorded live
Thursday, May 9th, 2013. Support for Hansel

4
00:00:28.920 --> 00:00:32.280
minutes is provided by Tellerik
offering the best in developer

5
00:00:32.280 --> 00:00:41.760
tools and support online@telerikdotcomandbyfranklins.net makers
of gesture pad, a powerful

6
00:00:41.760 --> 00:00:45.720
gesture, recording and recognition system
for Microsoft connect for windows

7
00:00:45.720 --> 00:00:52.710
developers details@gesturepak.com. In this episode,
Scott talks with Brian Pew

8
00:00:53.160 --> 00:00:58.800
about integrating office and the
open web. Hi, this is

9
00:00:58.800 --> 00:01:01.080
Scott Hanselman. This is another
episode of Hansel minutes, and

10
00:01:01.080 --> 00:01:03.480
I've got Brian Pew on
the phone from lucid chart.

11
00:01:03.480 --> 00:01:07.770
How are you? I'm doing
well. Thanks. Lucid chart. I

12
00:01:07.770 --> 00:01:10.650
think I installed this, actually.
This is a, a flow

13
00:01:10.650 --> 00:01:14.390
charting application. I have this
in my Google apps, Correct?

14
00:01:14.480 --> 00:01:18.200
Yeah. So lucid chart is
a online diagramming tool, which

15
00:01:18.200 --> 00:01:21.350
means your audience is probably
most familiar with Microsoft Vizio

16
00:01:21.350 --> 00:01:24.260
as a competitor of ours.
So we do flowcharts spend

17
00:01:24.260 --> 00:01:29.900
diagrams, UML ERD, UI mockups
for websites, for mobile, both

18
00:01:30.020 --> 00:01:34.460
Android and iPhone, all the
same kind of functionality you

19
00:01:34.460 --> 00:01:37.610
would expect from Microsoft Vizio.
What makes lucid chart a

20
00:01:37.610 --> 00:01:39.380
little bit more unique is
it's also a web based

21
00:01:39.380 --> 00:01:43.010
app. That means we get
collaboration real time collaboration it's

22
00:01:43.310 --> 00:01:46.310
you can comfortably have 10
20 people working on the

23
00:01:46.310 --> 00:01:49.130
same diagram at the same
time. It's very easy to

24
00:01:49.130 --> 00:01:51.110
share. You don't have to
keep track of versions of

25
00:01:51.110 --> 00:01:53.810
files or have a shared
drive where you're trying to

26
00:01:53.810 --> 00:01:57.080
collaborate with other people. And
it's integrated with the web.

27
00:01:57.170 --> 00:01:59.990
We integrate with a lot
of different applications that are

28
00:01:59.990 --> 00:02:03.020
on the web, the Atlassian
tools like confluence and JIRA,

29
00:02:03.710 --> 00:02:07.760
jive, Google apps, Google drive
box. And of course Microsoft

30
00:02:07.760 --> 00:02:09.170
word, which is kind of
what we're going to talk

31
00:02:09.170 --> 00:02:12.380
about today. Yeah, yeah. I'm
looking at it right now.

32
00:02:12.670 --> 00:02:17.030
I'm in Chrome and I
can go, you know, looks

33
00:02:17.030 --> 00:02:19.160
like a, it looks like
Vizio file save as I

34
00:02:19.160 --> 00:02:20.930
can save it as a
video file, but I can

35
00:02:20.930 --> 00:02:25.910
also do JPEGs and PNGs
and it it's kind of

36
00:02:25.910 --> 00:02:30.230
creepy because it is really
full featured. Yeah. So we've

37
00:02:30.230 --> 00:02:32.030
been working on the feature
set for a couple of

38
00:02:32.030 --> 00:02:36.590
years now and really trying
to make it the experience

39
00:02:36.590 --> 00:02:38.660
where you can get the
job done as quickly and

40
00:02:38.660 --> 00:02:41.600
easily as possible. You can
get in, get your diagram,

41
00:02:41.900 --> 00:02:44.930
get looking beautiful and get
out. So it looks like

42
00:02:44.930 --> 00:02:48.770
it's done by a great
graphic designer, but user experience

43
00:02:48.770 --> 00:02:50.450
has been a focus of
ours for the last couple

44
00:02:50.450 --> 00:02:55.010
of years. And it's, it's
doing things on the web

45
00:02:55.040 --> 00:02:57.590
that, you know, I'm always
surprised that the open web

46
00:02:57.800 --> 00:03:00.070
can do what it's doing,
but I'm a box around

47
00:03:00.070 --> 00:03:03.340
I'm in this demo called
how I, how can I

48
00:03:03.340 --> 00:03:06.730
make friends online? And it's
a big flow chart, really

49
00:03:06.730 --> 00:03:10.510
big. I mean, there's, you
know, 50 boxes here and

50
00:03:10.510 --> 00:03:13.420
they're all connected by these
kind of Bezier curves. And

51
00:03:13.420 --> 00:03:15.310
then as I pick a
box up and move it,

52
00:03:15.790 --> 00:03:19.960
because these are connectors, it's
kind of automatically figuring out

53
00:03:19.960 --> 00:03:23.610
the way that those curves
should be drawn. Right. And

54
00:03:23.610 --> 00:03:26.220
it is amazing what you
can do with browsers nowadays.

55
00:03:26.220 --> 00:03:28.710
And that's, that's what got
us excited. If you go

56
00:03:28.710 --> 00:03:31.650
back to 2008, when we
very first started having the

57
00:03:31.650 --> 00:03:34.110
idea for lucid chart, it
was really Ben Dilts our

58
00:03:34.110 --> 00:03:37.470
CTO who had been working
at another startup. He had

59
00:03:37.470 --> 00:03:40.260
been using Vizio at that
startup and they had some

60
00:03:40.260 --> 00:03:42.120
frustrations with what they were
doing. And he kind of

61
00:03:42.120 --> 00:03:44.220
looked around for something that
would work in a collaborative

62
00:03:44.220 --> 00:03:48.480
environment, found he didn't see
a lot there, but it

63
00:03:48.480 --> 00:03:50.430
was right about the time
when browse has really started

64
00:03:50.430 --> 00:03:53.010
to expand what could be
done with JavaScript and HTML.

65
00:03:53.460 --> 00:03:55.140
So he decided to kind
of take his nights and

66
00:03:55.140 --> 00:03:57.600
weekends and see if he
couldn't make something real out

67
00:03:57.600 --> 00:03:59.670
of that. And spent a
lot of time working with

68
00:03:59.670 --> 00:04:04.560
canvas and eventually decided this
is something that he could

69
00:04:04.560 --> 00:04:06.870
really run with and started
to form formed a company.

70
00:04:06.870 --> 00:04:09.540
And here we are a
couple of years later, but

71
00:04:09.750 --> 00:04:12.870
a lot of effort went
into that initially and to

72
00:04:12.870 --> 00:04:14.640
get the kind of performance
that you want from a

73
00:04:14.640 --> 00:04:18.060
native application on the web
and with the way browsers,

74
00:04:18.510 --> 00:04:21.780
whether it be Safari Chrome,
I E Firefox, they're all

75
00:04:22.050 --> 00:04:25.710
significantly improving the performance of
their JavaScript engines every year.

76
00:04:26.040 --> 00:04:27.720
And that's been fantastic for
us because it means we

77
00:04:27.720 --> 00:04:29.520
can keep adding more and
more features and do the

78
00:04:29.520 --> 00:04:32.130
kinds of things that you're
describing, where we're recalculating, Bezier

79
00:04:32.160 --> 00:04:35.340
curves on the fly in
the browser, on the open

80
00:04:35.340 --> 00:04:38.520
web. Yeah. I'm just amazed
by this. I've opened up

81
00:04:38.550 --> 00:04:43.470
Chrome developer tools. And even
though I'm not trying to,

82
00:04:43.560 --> 00:04:47.070
to, to, to, to kiss
up to you or anything,

83
00:04:47.070 --> 00:04:50.580
but even the, the, the
Dom is very organized. It's

84
00:04:50.580 --> 00:04:52.650
like, you know how you
expect to like hit a

85
00:04:52.650 --> 00:04:55.890
view source and just go,
Oh no, what are you

86
00:04:55.890 --> 00:04:59.250
guys doing? You know, but
it's got like doc panel

87
00:04:59.250 --> 00:05:02.280
and UI drag. Well, it's
all very kind of organized

88
00:05:02.280 --> 00:05:06.240
and, and thoughtful. Even the
markup is clean. We spent

89
00:05:06.240 --> 00:05:08.400
some time to really make
sure that we had it

90
00:05:08.430 --> 00:05:12.390
clean. So we've got North
of 200,000 lines of JavaScript

91
00:05:12.390 --> 00:05:15.090
to make this application run.
So when you get to

92
00:05:15.090 --> 00:05:17.640
that scale for a web
app, you know, most web

93
00:05:17.640 --> 00:05:19.920
apps, when people talk about
JavaScript, it seems like most

94
00:05:19.920 --> 00:05:22.980
people are talking about small
amounts of JavaScript to manipulate

95
00:05:22.980 --> 00:05:25.800
a form, things like that.
But here we're talking about

96
00:05:26.100 --> 00:05:29.340
doing serious mathematical operations, having
a full model and a

97
00:05:29.340 --> 00:05:33.060
view, and it's a full
application built in JavaScript. So

98
00:05:33.060 --> 00:05:34.680
we did spend some time
making sure that we had

99
00:05:34.680 --> 00:05:37.800
an organization, both in terms
of the Dom and the

100
00:05:37.800 --> 00:05:41.250
CSS, and especially in terms
of the JavaScript itself and

101
00:05:41.250 --> 00:05:43.710
how we organize our JavaScript
code so that it can

102
00:05:43.710 --> 00:05:47.580
be maintainable. And we can
continue to add features at

103
00:05:47.580 --> 00:05:51.300
a reasonable pace. And so
this is, you said 200,000

104
00:05:51.300 --> 00:05:54.400
lines of JavaScript and is
what is the backend? And

105
00:05:54.690 --> 00:05:57.830
what's the kind of the
ratio between what works happening

106
00:05:57.830 --> 00:05:59.960
in the backhand versus what
work is just sitting in,

107
00:05:59.960 --> 00:06:03.370
JavaScript on my, in my
browser. So most of the

108
00:06:03.370 --> 00:06:05.860
work is happening in that
front end, in the browser,

109
00:06:06.430 --> 00:06:10.000
essentially all, all the calculations,
any of the math that

110
00:06:10.000 --> 00:06:14.350
needs to happen, that's all
happening in JavaScript. And it

111
00:06:14.380 --> 00:06:16.270
just kind of, as a
side note, we were even

112
00:06:16.270 --> 00:06:18.250
able to get it. If
you pulled this up on

113
00:06:18.250 --> 00:06:21.310
an iPad or an Android
tablet, we have touched line

114
00:06:21.310 --> 00:06:23.020
where you could draw a
square and it would turn

115
00:06:23.020 --> 00:06:25.990
that into a process block.
So you would touch a

116
00:06:25.990 --> 00:06:28.720
square literally, and it would
recognize that's a square. Or

117
00:06:28.720 --> 00:06:30.880
if you do like a
little person that would recognize

118
00:06:30.880 --> 00:06:35.650
that as a UML use
case. So even pattern recognition

119
00:06:35.710 --> 00:06:37.540
of what people are drying
were able to do in

120
00:06:37.540 --> 00:06:41.470
the browser in JavaScript with
currently we support Android and

121
00:06:41.500 --> 00:06:44.350
iPhone, but these JavaScript engines
are getting so powerful that

122
00:06:44.350 --> 00:06:47.110
you can do amazing things
using the open web. Wow.

123
00:06:48.070 --> 00:06:50.050
Starting into the rest of
your question on the backend

124
00:06:50.560 --> 00:06:54.640
we're using. So Linux is
they're all Linux servers. We

125
00:06:54.640 --> 00:06:56.860
use some PHP and we've
moved a lot of our

126
00:06:56.860 --> 00:07:00.220
things from sort of a
monolithic PHP application to a

127
00:07:00.220 --> 00:07:03.490
services oriented architecture. And we're
writing those new services all

128
00:07:03.490 --> 00:07:06.070
in Scala, which if people
aren't familiar with Scala, it's

129
00:07:06.070 --> 00:07:09.400
a language that runs on
the JVM. So if you

130
00:07:09.400 --> 00:07:12.430
can take advantage of the
full Java ecosystem, but it's,

131
00:07:13.000 --> 00:07:16.090
it's described as a more
modern language for the JVM,

132
00:07:17.050 --> 00:07:20.620
but we do use my
SQL Mongo, Apache kind of

133
00:07:20.620 --> 00:07:24.220
a standard stack there for,
well, the standard stack outside

134
00:07:24.220 --> 00:07:26.080
the Microsoft world. We don't
have a lot from the

135
00:07:26.080 --> 00:07:29.230
Microsoft world that we've done
in the past. So the

136
00:07:29.230 --> 00:07:31.300
front end is all JavaScript,
and you're doing this in

137
00:07:31.300 --> 00:07:35.680
a non Microsoft stack. And
are you using like Ember

138
00:07:35.680 --> 00:07:39.490
or angular or is this
your own framework? We're using

139
00:07:39.490 --> 00:07:42.850
the Google closure library? So
when we initially wrote the

140
00:07:42.850 --> 00:07:45.070
app, when Ben started it,
he kind of rolled his

141
00:07:45.070 --> 00:07:47.860
own JavaScript and all, he
went to Google I E

142
00:07:47.980 --> 00:07:49.870
IO a few years ago
and heard about the Google

143
00:07:49.870 --> 00:07:54.190
closure library, which is what
Google used for Google calendar

144
00:07:54.220 --> 00:07:56.860
Gmail. And they open source
that a few years ago

145
00:07:56.860 --> 00:07:59.590
at Google IO. And we
were really impressed with what

146
00:07:59.590 --> 00:08:01.870
they had there. So it
took some time and kind

147
00:08:01.870 --> 00:08:04.840
of rewrote it and integrated
the Google closure library into

148
00:08:04.840 --> 00:08:07.870
our JavaScript code base. And
that gave us a lot

149
00:08:07.870 --> 00:08:11.140
of what we needed to
keep a well organized maintainable,

150
00:08:11.140 --> 00:08:15.520
large JavaScript code base. You
get namespaces handled well. Magnifications

151
00:08:15.520 --> 00:08:20.320
handled well dead code removal
as well as typing. So

152
00:08:20.350 --> 00:08:23.890
our code base currently is
about 88% typed in JavaScript.

153
00:08:23.920 --> 00:08:27.760
So you can put annotations
in comments on any of

154
00:08:27.760 --> 00:08:30.610
your types in the JavaScript.
And the closure compiler is

155
00:08:30.610 --> 00:08:33.340
pretty good about following those
types through and letting you

156
00:08:33.340 --> 00:08:35.740
know if you've got any
type errors. So it's helped

157
00:08:35.740 --> 00:08:37.480
us to have that class
of air is taken care

158
00:08:37.480 --> 00:08:40.780
of as well by the
closure compiler. Hmm. So your

159
00:08:40.780 --> 00:08:43.030
intro, you might be interested
in things like TypeScript, this,

160
00:08:43.090 --> 00:08:45.070
this idea of type JavaScript
is not foreign to you.

161
00:08:45.700 --> 00:08:47.950
No, we're, like I said,
our code base is currently

162
00:08:47.950 --> 00:08:51.880
about 80%, 88% typed. And
we found that to be

163
00:08:51.880 --> 00:08:54.460
very useful. And especially as
you get a larger and

164
00:08:54.460 --> 00:08:56.640
larger code base and more
and more people coming in

165
00:08:56.640 --> 00:08:59.490
to work on it. And
it helps both for the

166
00:08:59.490 --> 00:09:02.820
readability as well as what
it catches before we hit

167
00:09:02.820 --> 00:09:06.350
production. Oh, so this is
this, you're the second person

168
00:09:06.350 --> 00:09:10.160
to say that if something
gets too big, you really

169
00:09:10.160 --> 00:09:12.590
want typing. Some people say
that you can make up

170
00:09:12.590 --> 00:09:14.480
for lack of typing with
just a lot of tests,

171
00:09:15.230 --> 00:09:17.510
but other people insist that
when you have a large

172
00:09:17.510 --> 00:09:21.140
enough code base, you really
need this typing. Well, the

173
00:09:21.140 --> 00:09:24.260
way I look at it
is that with typing, there

174
00:09:24.260 --> 00:09:27.110
is a class of errors
that I can feel guaranteed.

175
00:09:27.110 --> 00:09:29.240
I don't have that doesn't
mean I don't need to

176
00:09:29.240 --> 00:09:30.590
write tests and there may
be a whole lot of

177
00:09:30.590 --> 00:09:33.110
other errors in my code
base, but there's at least

178
00:09:33.110 --> 00:09:36.650
a class of errors that
I have essentially approved that

179
00:09:36.650 --> 00:09:39.260
I don't have those particular
areas in my code base.

180
00:09:39.470 --> 00:09:41.270
So I find it really,
really helpful, but it's a

181
00:09:41.270 --> 00:09:44.390
set of tests that I
don't have to write because

182
00:09:44.390 --> 00:09:49.190
I've got that guarantee from
a compiler. Very cool. Well,

183
00:09:49.190 --> 00:09:52.100
one of the things that
surprised me about lucid chart

184
00:09:52.100 --> 00:09:53.660
was not just that it's
kind of cool and it's

185
00:09:53.660 --> 00:09:55.640
written in JavaScript and it
does everything in the browser,

186
00:09:56.090 --> 00:10:00.170
but was the level of
integration with other stuff. And

187
00:10:00.500 --> 00:10:03.800
I remember integrating it with
Google, Google apps. I think

188
00:10:03.800 --> 00:10:06.560
I have a free signup.
So I was able to

189
00:10:06.560 --> 00:10:09.620
log into Google apps and
just kind of appears within

190
00:10:10.070 --> 00:10:12.350
Google as its own as
its own thing. So it's

191
00:10:12.350 --> 00:10:16.820
in the Google apps store.
Correct. But what really kind

192
00:10:16.820 --> 00:10:20.060
of freaked me out was
that that office apparently has

193
00:10:20.060 --> 00:10:23.990
an app store. Correct. So
we've seen it as kind

194
00:10:23.990 --> 00:10:27.080
of one of our differentiators
is that we can be

195
00:10:27.290 --> 00:10:29.420
part of the open web
that we are a SAS

196
00:10:29.420 --> 00:10:33.650
application. We're on the web,
we're all just JavaScript, HTML

197
00:10:33.650 --> 00:10:35.750
five. And as part of
that, it makes it really

198
00:10:35.750 --> 00:10:39.440
easy for us to integrate
with other applications that people

199
00:10:39.440 --> 00:10:42.530
need as part of their
productive work environment. I think

200
00:10:42.530 --> 00:10:45.380
I mentioned earlier, some of
those like the lasting products,

201
00:10:45.800 --> 00:10:48.410
but you bring up Google.
We are in the Chrome

202
00:10:48.410 --> 00:10:52.040
web store. So you can
install directly from Chrome. We're

203
00:10:52.040 --> 00:10:54.470
also in the Google apps
marketplace. So if you use

204
00:10:54.470 --> 00:10:58.340
Google apps for domains, you
can manage your lucid chart

205
00:10:58.340 --> 00:11:02.420
team from within Google ass
most recently. And what you

206
00:11:02.420 --> 00:11:05.360
just alluded to is we've
also integrated with Microsoft word.

207
00:11:05.750 --> 00:11:09.470
So Microsoft approached us about
a year ago and they

208
00:11:09.470 --> 00:11:12.380
actually approached us and told
us about, they had this

209
00:11:12.380 --> 00:11:14.060
idea that they were going
to make an app store

210
00:11:14.090 --> 00:11:17.600
for office products. And to
be totally honest, when they

211
00:11:17.600 --> 00:11:21.080
first approached us, we were
pretty skeptical. We were, I

212
00:11:21.080 --> 00:11:24.380
was kind of concerned from
multiple avenues. One, we're not

213
00:11:24.380 --> 00:11:26.420
a Microsoft shop. We don't
have a lot of experience

214
00:11:26.420 --> 00:11:29.540
with Microsoft products. And I
was imagining having to get

215
00:11:29.540 --> 00:11:32.330
visual studio on everybody's machines
and, you know, dive into

216
00:11:32.330 --> 00:11:35.120
another whole ecosystem that we
would need to become familiar

217
00:11:35.120 --> 00:11:38.660
with. But I was also
a little concerned because we're

218
00:11:38.660 --> 00:11:42.080
obviously competitor to Vizio. I
also had this concern that

219
00:11:42.560 --> 00:11:44.630
I'm going to go build
an app, do all this

220
00:11:44.630 --> 00:11:46.970
work. And then at the
last second, Microsoft may say,

221
00:11:47.390 --> 00:11:49.750
Oh, maybe we don't want
a competitor because you have

222
00:11:49.750 --> 00:11:53.000
to be in the store.
Right? Yeah. So after they,

223
00:11:53.440 --> 00:11:55.980
us, we talked with them
quite a bit. And frankly,

224
00:11:56.230 --> 00:11:58.840
at one point we just
got real clear and said

225
00:11:58.840 --> 00:12:00.640
to them, you know, you
do realize that we are

226
00:12:00.640 --> 00:12:03.730
a direct competitor with Vizio.
How can we feel comfortable

227
00:12:03.730 --> 00:12:06.220
that this is really going
to happen? But in talking

228
00:12:06.220 --> 00:12:07.660
with them, we were able
to get some guarantees that

229
00:12:07.660 --> 00:12:11.620
made us comfortable to move
forward. And they asked me

230
00:12:11.620 --> 00:12:13.660
to come up to Redmond
and spend some time to

231
00:12:13.660 --> 00:12:16.690
learn more about what their
approach was going to be

232
00:12:16.690 --> 00:12:21.160
for office office applications. So
I got up there learned

233
00:12:21.160 --> 00:12:23.710
about what they were doing
and immediately was really, really

234
00:12:23.710 --> 00:12:26.200
impressed and really happy to
see the direction that Microsoft

235
00:12:26.200 --> 00:12:30.340
was headed, the new approach
at the time they were

236
00:12:30.340 --> 00:12:33.370
calling them a GABA. It's
now they're called apps for

237
00:12:33.370 --> 00:12:35.710
office, but they, we went
up there and they started

238
00:12:35.710 --> 00:12:37.720
telling me about these goggles.
And what they were describing

239
00:12:37.720 --> 00:12:41.170
is that you could write
plugins for office using the

240
00:12:41.170 --> 00:12:45.130
open web, as opposed to
it being, you know, VVA

241
00:12:45.130 --> 00:12:48.040
or, you know, active X
controls or anything. Like none

242
00:12:48.040 --> 00:12:49.870
of that was even mentioned
the whole time I was

243
00:12:49.870 --> 00:12:52.660
up there at this training
session. And they had, it

244
00:12:52.660 --> 00:12:55.090
was all about the open
web, which got me as

245
00:12:56.020 --> 00:12:58.420
somebody providing a SAS product
really excited because I knew

246
00:12:58.420 --> 00:12:59.920
that there would be a
lot of potential for us

247
00:12:59.920 --> 00:13:02.170
there. It was interesting because
most of the other people

248
00:13:02.170 --> 00:13:04.300
who were up there had
been working in the Microsoft

249
00:13:04.300 --> 00:13:06.640
ecosystem quite a bit and
had been creating things for

250
00:13:06.640 --> 00:13:09.520
office. And as I've talked
to people at lunch sessions

251
00:13:09.520 --> 00:13:11.710
and things, most of them
looked at it and were

252
00:13:11.710 --> 00:13:13.780
a little bit freaked out
by what Microsoft was saying.

253
00:13:13.780 --> 00:13:15.610
They were kind of saying,
well, what is Microsoft doing?

254
00:13:15.610 --> 00:13:17.830
This is a huge change.
And I was looking at

255
00:13:17.830 --> 00:13:20.230
it saying, this is fantastic.
I love the direction they're

256
00:13:20.230 --> 00:13:22.000
going. So I felt a
little bit like a fish

257
00:13:22.000 --> 00:13:23.410
out of water up there.
I was the one who

258
00:13:23.800 --> 00:13:26.410
really was embracing what Microsoft
was saying. It seemed, this

259
00:13:26.410 --> 00:13:28.060
is, this is the way
I like to see the

260
00:13:28.060 --> 00:13:30.310
web go as a whole.
And it's great for me

261
00:13:30.310 --> 00:13:34.090
as a startup, you know,
in the SAS space that

262
00:13:34.090 --> 00:13:37.630
I can integrate my application
into office in a really

263
00:13:37.630 --> 00:13:40.840
seamless way. And without having
to retrain my whole engineering

264
00:13:40.840 --> 00:13:44.940
staff, Right, exactly like active
ex at the time was,

265
00:13:44.970 --> 00:13:49.560
was great and was a
way to, to distribute software,

266
00:13:49.560 --> 00:13:52.140
to update software, you know,
to bring software from point

267
00:13:52.140 --> 00:13:53.760
a to point B and
to get it running on

268
00:13:53.760 --> 00:13:56.400
your machine without really thinking
about installing, you know, and

269
00:13:56.400 --> 00:13:59.430
it was a way to
run in process and bring

270
00:13:59.430 --> 00:14:03.540
something in integrate and compose,
you know, an application out

271
00:14:03.540 --> 00:14:06.900
of, out of its composite
parts. But that's what the

272
00:14:06.900 --> 00:14:10.710
web does really well. And,
you know, I'm just like,

273
00:14:10.710 --> 00:14:15.420
literally I go up to
the office store, I click,

274
00:14:15.650 --> 00:14:20.280
I find a lucid chart
here. I say, ad it's

275
00:14:20.280 --> 00:14:24.050
marked as free. Then I
go into office. So I'm

276
00:14:24.060 --> 00:14:25.650
on the web here. I
click add. Then I go

277
00:14:25.650 --> 00:14:27.390
over in the office, which
is not on the web.

278
00:14:27.960 --> 00:14:30.510
I go to the insert
menu. And then there's a

279
00:14:30.720 --> 00:14:33.990
thing that says apps for
office. So I click on

280
00:14:33.990 --> 00:14:36.060
this apps for office thing
and there was, there said,

281
00:14:36.060 --> 00:14:38.580
there's nothing. And I was
like, okay, I clicked add,

282
00:14:38.580 --> 00:14:40.680
and there's nothing I hit
refresh. And then lucid chart

283
00:14:40.680 --> 00:14:45.030
just appeared inside of the
apps for office box inside

284
00:14:45.030 --> 00:14:49.350
of word. So then I'm
going to click insert, and

285
00:14:49.350 --> 00:14:53.660
then this, this, what do
you call this? This, this

286
00:14:53.690 --> 00:14:58.570
pain opens up on the
right hand side. And that's

287
00:14:58.570 --> 00:15:00.370
what I mean, you're getting
that kind of what I

288
00:15:00.370 --> 00:15:03.850
really was impressed with about
the architecture of the apps

289
00:15:03.850 --> 00:15:07.990
for office initiative that they
had, which is that it's

290
00:15:07.990 --> 00:15:11.260
based on the open web.
You just install. What I

291
00:15:11.260 --> 00:15:15.100
provide to Microsoft is essentially
a manifest file. So what

292
00:15:15.100 --> 00:15:16.960
that means is I give
them a file. That's an

293
00:15:16.960 --> 00:15:20.140
XML file that just has
some basic information. It's got

294
00:15:20.140 --> 00:15:22.930
a URL, which is going
to be used initialize my

295
00:15:22.930 --> 00:15:27.400
application, some metadata for the
store listing the type of

296
00:15:27.400 --> 00:15:30.280
application that I'm going to
be creating. And we can

297
00:15:30.280 --> 00:15:32.380
talk in a minute about
what those are as well

298
00:15:32.380 --> 00:15:34.870
as what permissions my app's
going to need. That's really

299
00:15:34.870 --> 00:15:37.210
about all I need to
give to Microsoft. And then

300
00:15:37.210 --> 00:15:40.060
Microsoft can list it in
their store without metadata that

301
00:15:40.060 --> 00:15:43.480
I provided. And when you
just installed that into word,

302
00:15:44.290 --> 00:15:46.090
and then you said, you
know, I want to run

303
00:15:46.120 --> 00:15:49.390
the lucid chart app. It
opened a task pain because

304
00:15:49.390 --> 00:15:51.250
we said we want to
be a task pane app,

305
00:15:51.280 --> 00:15:53.260
which means you were, as
you were describing over to

306
00:15:53.260 --> 00:15:55.660
the right hand side and
the task pane came up,

307
00:15:55.720 --> 00:15:58.870
lucid chart as an app.
And what came up was

308
00:15:58.870 --> 00:16:01.360
the URL that I had
provided in that manifest style

309
00:16:01.480 --> 00:16:04.180
file that I gave to
Microsoft. So it basically hit

310
00:16:04.180 --> 00:16:07.240
my URL, went over to
the lucid chart servers. What

311
00:16:07.240 --> 00:16:09.670
we've got there in that
task pane is just an

312
00:16:09.670 --> 00:16:12.910
embedded instance of internet Explorer.
So it is truly the

313
00:16:12.910 --> 00:16:16.030
web that's running right there
inside of Microsoft word. It's

314
00:16:16.030 --> 00:16:20.320
just internet Explorer, they're loading
a URL. And what I

315
00:16:20.320 --> 00:16:22.570
love about that is just
how loosely coupled that is.

316
00:16:22.930 --> 00:16:26.110
I we've done integrations, as
you mentioned earlier, with a

317
00:16:26.110 --> 00:16:30.010
lot of different third parties.
And in some cases we

318
00:16:30.010 --> 00:16:31.870
have to do a lot
of work, like write a

319
00:16:31.900 --> 00:16:34.330
bunch of code maybe in
Java or JavaScript or something

320
00:16:34.330 --> 00:16:37.510
that runs on somebody else's
servers. And that introduces a

321
00:16:37.510 --> 00:16:40.480
lot of friction for me
as a developer, because if

322
00:16:40.480 --> 00:16:42.040
I want to update, if
I got a bug fix

323
00:16:42.040 --> 00:16:44.080
or a new feature that
I want to add, I

324
00:16:44.080 --> 00:16:46.180
have to coordinate with whoever
that third party is. I

325
00:16:46.180 --> 00:16:48.850
need to create a new
code, packaged it up, send

326
00:16:48.850 --> 00:16:50.560
it over to them. And
in some cases, they go

327
00:16:50.560 --> 00:16:53.920
through a QA process and
eventually they listed on whatever

328
00:16:53.920 --> 00:16:56.830
store or marketplace they've got.
And eventually it gets to

329
00:16:56.830 --> 00:17:00.430
my users. But with this
model that Microsoft has, I

330
00:17:00.430 --> 00:17:04.450
give them that manifest file
essentially one time, if I've

331
00:17:04.450 --> 00:17:06.970
got a bug fix, a
new feature to add, I

332
00:17:06.970 --> 00:17:10.840
just add that on my
servers, because ultimately when you

333
00:17:10.840 --> 00:17:13.180
opened that lucid chart app
inside of word, it just

334
00:17:13.180 --> 00:17:16.930
hit my servers. So the
friction to adding value to

335
00:17:16.930 --> 00:17:19.810
my customers has gone way
down. It's, it's fantastic because

336
00:17:19.810 --> 00:17:22.630
Microsoft and I aren't tied
at the hip they've, they've

337
00:17:22.630 --> 00:17:24.700
got the URL. I make
whatever changes I need to

338
00:17:24.700 --> 00:17:28.480
make and just go through
the QA process. Myself and

339
00:17:28.480 --> 00:17:30.970
users can immediately start benefiting
from any bug fixes I

340
00:17:30.970 --> 00:17:34.080
have. And the new features
that we add. So you're,

341
00:17:34.080 --> 00:17:39.640
you're in control, total control,
I'm in total control. And

342
00:17:39.640 --> 00:17:42.340
there's just very little friction
for me getting the value

343
00:17:42.340 --> 00:17:45.700
to my customers as early
and often as possible. Right.

344
00:17:45.700 --> 00:17:48.490
Cause if you had to,
you know, resubmit to the

345
00:17:48.490 --> 00:17:50.760
store time, you did something,
then you wouldn't be a

346
00:17:50.760 --> 00:17:55.820
web application anymore. Exactly, exactly.
And with, with some of

347
00:17:55.820 --> 00:17:57.590
the integrations that we've worked
on, that's kind of the

348
00:17:57.590 --> 00:17:59.990
model we have is, you
know, you've, there's a, there's

349
00:17:59.990 --> 00:18:03.470
another code base for that
integration. And we work on

350
00:18:03.470 --> 00:18:05.720
that code base to add
new features or fix bugs

351
00:18:05.720 --> 00:18:08.060
and then throw it over
the wall to another group,

352
00:18:08.340 --> 00:18:10.790
third party. And like I
said, in some cases they

353
00:18:10.790 --> 00:18:13.040
want to do a whole
QA process themselves. So you

354
00:18:13.040 --> 00:18:16.670
end up at weeks to
get a new feature or

355
00:18:16.670 --> 00:18:18.860
a bug fix out, as
opposed to, in some cases,

356
00:18:18.860 --> 00:18:20.930
if there's a serious bug,
I can have it fixed

357
00:18:20.930 --> 00:18:22.670
in a matter of hours
for one of my customers

358
00:18:23.420 --> 00:18:25.430
with this model where it's
open and I have full

359
00:18:25.430 --> 00:18:28.610
control over the application because
it's running on my servers.

360
00:18:28.910 --> 00:18:32.930
Okay. So the pain opens
up and you're running in

361
00:18:32.930 --> 00:18:36.680
there, you're running in the
browser integrated. How do you

362
00:18:36.680 --> 00:18:39.260
know that you're inside word
and not just in the

363
00:18:39.260 --> 00:18:42.410
browser? So in our case,
what we did is in

364
00:18:42.410 --> 00:18:46.070
that manifest file, we gave
them a specific URL, which

365
00:18:46.070 --> 00:18:49.310
would indicate to us that
we're running inside of word.

366
00:18:49.580 --> 00:18:52.760
So that, that URL is
not just lucid chart.com. It's

367
00:18:52.760 --> 00:18:57.230
a specific URL. It's just
lucidchart.com/office. I remember. Right. But

368
00:18:57.890 --> 00:19:00.260
in that we know, and
we can see with a

369
00:19:00.260 --> 00:19:02.450
few other things that Microsoft
will pass them, the headers,

370
00:19:02.960 --> 00:19:05.690
just to confirm it. But
we know that we're in

371
00:19:05.690 --> 00:19:08.870
that browser, which allows us
to do things like th

372
00:19:08.930 --> 00:19:11.780
that view that you're seeing
there we're leveraging most of

373
00:19:11.780 --> 00:19:14.390
the JavaScript that we have
for our main application. It's

374
00:19:14.390 --> 00:19:16.970
that same code, you know,
80% of it, maybe even

375
00:19:16.970 --> 00:19:19.700
90% of it is the
same code. As if you

376
00:19:19.700 --> 00:19:23.660
went to lucid chart.com/documents, you
would see the same code

377
00:19:23.660 --> 00:19:26.870
being executed. It's just a
little bit of different sugar

378
00:19:26.870 --> 00:19:30.740
in the CSS and in
the JavaScript to paint it

379
00:19:30.740 --> 00:19:33.260
in a way that fits
a little bit better inside

380
00:19:33.260 --> 00:19:35.900
of a word than where
I have the full stream

381
00:19:35.940 --> 00:19:38.480
to, to paint my list
of diagrams that you can

382
00:19:38.480 --> 00:19:42.020
edit. So again, another huge
benefit is I'm not duplicating

383
00:19:42.020 --> 00:19:46.880
code. It's not 80, 90%,
the same JavaScript for our

384
00:19:46.880 --> 00:19:50.480
main lucid chart.com website, as
for what's running inside of

385
00:19:50.480 --> 00:19:53.120
word. Cause it, is it
a different instance? Like, is

386
00:19:53.120 --> 00:19:55.370
it a different version or
fork and you just maintain

387
00:19:55.370 --> 00:19:57.920
it that way and how,
what kinds of things are

388
00:19:57.920 --> 00:19:59.750
different? You said a little
bit of CSS to make

389
00:19:59.750 --> 00:20:03.290
it look more officey, A
little bit of CSS. And

390
00:20:03.530 --> 00:20:06.050
when I have the full
screen, generally, when I'm showing

391
00:20:06.050 --> 00:20:08.570
the first thing you arrive
at, when you open our

392
00:20:08.570 --> 00:20:11.720
off our application and get
logged in is the list

393
00:20:11.720 --> 00:20:14.750
of diagrams that you can
add it or insert into

394
00:20:14.750 --> 00:20:18.470
your word document. When we,
on our main website where

395
00:20:18.470 --> 00:20:21.290
we have the full screen,
we have fairly large thumbnails

396
00:20:21.290 --> 00:20:24.350
that we show for each
one of those diagrams where

397
00:20:24.350 --> 00:20:26.750
we're inside of word. We
don't have the same amount

398
00:20:26.750 --> 00:20:28.520
of real estate. So instead
we make kind of a

399
00:20:28.520 --> 00:20:32.000
smaller tree view. And if
you click on any particular

400
00:20:32.030 --> 00:20:34.400
element in that tree view,
we show a little preview

401
00:20:34.400 --> 00:20:38.570
of that particular diagram below
it. So just because of

402
00:20:38.570 --> 00:20:40.430
the real estate is quite
a bit different. We have

403
00:20:40.430 --> 00:20:42.500
a lot less real estate
inside of word than when

404
00:20:42.500 --> 00:20:45.920
we're in the browser with
the full stream. We just

405
00:20:46.040 --> 00:20:48.640
changed the way that UI
a little bit. So the

406
00:20:48.640 --> 00:20:51.340
fundamental logic of what's, you
know, how you're pulling all

407
00:20:51.340 --> 00:20:54.760
that data, how you're processing
it, the data structures underneath

408
00:20:54.760 --> 00:20:58.390
it are all exactly the
same, but the actual painting

409
00:20:58.390 --> 00:21:01.360
of the Dom, the UI,
the CSS is a little

410
00:21:01.360 --> 00:21:04.620
bit different. Okay. So I
see that it says log

411
00:21:04.620 --> 00:21:08.520
into to lose a charge.
So that's appeared within my

412
00:21:08.520 --> 00:21:11.490
word document right now. It
says it wants me to

413
00:21:11.490 --> 00:21:13.710
log in with Google, but
theoretically I would log, I

414
00:21:13.710 --> 00:21:17.220
could log in with my
office account someday. Yeah. And

415
00:21:17.220 --> 00:21:19.410
once you do log in,
even if you, if you

416
00:21:19.410 --> 00:21:23.340
create a lucid chart account
now and come in through

417
00:21:23.340 --> 00:21:26.040
office, we are able to
do single sign on. If

418
00:21:26.040 --> 00:21:28.650
you're logged into office, they'll
pass us on a token

419
00:21:28.650 --> 00:21:30.240
and we'll keep a mapping
and we can log you

420
00:21:30.240 --> 00:21:33.960
directly in from them from
then on. So you could

421
00:21:33.960 --> 00:21:36.660
create, you could log in
with sync, with open ID

422
00:21:36.660 --> 00:21:39.570
using Google or Yahoo. You
could just log in with

423
00:21:39.570 --> 00:21:42.720
a normal username or password.
And once we link that

424
00:21:42.720 --> 00:21:46.770
account, once we get that
request from the browser, that's

425
00:21:46.770 --> 00:21:48.630
running inside of word, we'll
get in there in some

426
00:21:48.630 --> 00:21:50.400
headers, we'll get an idea
that will allow us to

427
00:21:50.400 --> 00:21:51.810
kind of do a mapping.
And we'll say, Oh, I

428
00:21:51.810 --> 00:21:54.570
know that this is coming
from Scott. So I'm going

429
00:21:54.570 --> 00:21:56.610
to log Scott in. Cause
I've got that mapping. And

430
00:21:56.610 --> 00:21:59.370
I know which account that
exists as there's a chart.

431
00:21:59.820 --> 00:22:01.650
So you will get some
single sign on it. Well,

432
00:22:01.740 --> 00:22:03.510
and I can see, this
is kind of funny. So

433
00:22:03.540 --> 00:22:05.100
remember I said that I
had set this up on

434
00:22:05.100 --> 00:22:08.040
Google apps a while back.
I can see a network

435
00:22:08.040 --> 00:22:10.500
diagram that I have, I
have, I created at some

436
00:22:10.500 --> 00:22:12.510
point in the, in the
past with lucid chart, I

437
00:22:12.510 --> 00:22:16.920
used your, your free lucid
chart to make a network

438
00:22:16.920 --> 00:22:19.440
diagram for a blog post
that I did on about

439
00:22:19.440 --> 00:22:24.720
a Synology. So I can,
I can click insert. And

440
00:22:24.750 --> 00:22:29.430
it says inserting, and it's
suddenly that diagram, that diagram

441
00:22:29.430 --> 00:22:34.470
from the web based flow
training app is inside of

442
00:22:34.500 --> 00:22:37.890
word, which is still freaking
me out. So let me

443
00:22:37.890 --> 00:22:39.930
describe a little bit what's
going on there. So this

444
00:22:39.930 --> 00:22:41.790
gets to the second aspect,
you know, I talked about

445
00:22:41.790 --> 00:22:45.690
the first thing that impressed
me about the Microsoft architecture

446
00:22:45.690 --> 00:22:48.120
for these apps was that
it was so loosely, coupled,

447
00:22:48.120 --> 00:22:50.850
that was just as manifest
file. The second thing that

448
00:22:50.850 --> 00:22:53.280
I really liked is that
it's a pure JavaScript API.

449
00:22:53.880 --> 00:22:56.610
So at the end point
that I mentioned where we

450
00:22:56.610 --> 00:23:02.070
have our individual app for
word, we include some Java

451
00:23:02.400 --> 00:23:06.810
from Microsoft site. It gives
us access to an API

452
00:23:07.050 --> 00:23:11.550
to insert things into Microsoft
word from JavaScript. So what

453
00:23:11.560 --> 00:23:14.100
just happened there, but what
the scenario you just described,

454
00:23:14.100 --> 00:23:15.750
as you know, you clicked
on a diagram that you

455
00:23:15.750 --> 00:23:20.280
had, you clicked on that
insert button. And we made

456
00:23:20.280 --> 00:23:23.520
a JavaScript API call to
the office, Java strip using

457
00:23:23.520 --> 00:23:28.890
the API that's provided by
Microsoft. And it, it actually

458
00:23:28.890 --> 00:23:32.070
inserted, we went to our
servers, got a PNG of

459
00:23:32.070 --> 00:23:37.440
that diagram and then created
open XML that represents inserting

460
00:23:37.440 --> 00:23:41.850
that PNG and insert at
the current cursor position in

461
00:23:41.850 --> 00:23:46.450
the word document. So we
have a API that Microsoft

462
00:23:46.490 --> 00:23:51.140
providing to say, insert at
the current cursor position discontent.

463
00:23:51.530 --> 00:23:54.830
And we created the open
XML for the content. That

464
00:23:54.830 --> 00:23:57.260
means a image that we
had pulled down from our

465
00:23:57.260 --> 00:24:00.370
servers. Right. Right. And then
if I click on the

466
00:24:00.370 --> 00:24:05.920
diagram, hit edit. Now I'm
running in the browser and

467
00:24:05.920 --> 00:24:08.170
here's the Lucia chart that
I, that I know. And

468
00:24:08.170 --> 00:24:11.140
here's my app. I make
a small change. And then

469
00:24:11.140 --> 00:24:12.910
there's a button up here
at the top that says

470
00:24:12.910 --> 00:24:17.860
return to office. Right. So,
and that kind of gets

471
00:24:17.860 --> 00:24:19.270
at the third thing that
I'd say that I really

472
00:24:19.270 --> 00:24:22.390
like about their architecture. We
talked about this loosely, loosely,

473
00:24:22.390 --> 00:24:25.570
coupled at the pure JavaScript
API and is really based

474
00:24:25.570 --> 00:24:27.790
on the web. So because
when you were in that

475
00:24:27.790 --> 00:24:30.640
task pane inside of word,
you were inside of it.

476
00:24:31.090 --> 00:24:34.810
So any cookies that you
wrote down, it is the,

477
00:24:34.930 --> 00:24:37.030
it is the web. And
all we really did when

478
00:24:37.030 --> 00:24:39.520
you clicked on that button
to edit your diagram is

479
00:24:39.520 --> 00:24:42.250
we opened. We just had
a link with a target

480
00:24:42.700 --> 00:24:45.790
that opened that diagram in
I E in full screen

481
00:24:45.790 --> 00:24:48.100
mode. So now we're, we've
broken out of office and

482
00:24:48.280 --> 00:24:52.420
internet Explorer is running as
its own standalone process URL

483
00:24:52.420 --> 00:24:55.000
we gave, it was the
URL to the diagram that

484
00:24:55.000 --> 00:24:59.020
you chose to edit. And
because you had already logged

485
00:24:59.020 --> 00:25:02.380
in and these two sessions
are sharing the same cookies.

486
00:25:02.380 --> 00:25:04.000
You're, you're already logged in.
You didn't have to log

487
00:25:04.000 --> 00:25:08.350
in again. And you just
immediately landed at the, a

488
00:25:08.440 --> 00:25:11.470
lucid chart editor where you
could change the diagram, make

489
00:25:11.470 --> 00:25:14.290
any changes you want. And
as you mentioned, we put

490
00:25:14.290 --> 00:25:16.360
a up in the top,
a little button that says

491
00:25:16.360 --> 00:25:20.410
return to office, which is
essentially going to close that

492
00:25:20.410 --> 00:25:24.220
IAE instance and enlist a
chart. We save automatically all

493
00:25:24.220 --> 00:25:26.140
the time. So all your
changes are always being saved.

494
00:25:26.560 --> 00:25:29.350
So it'll close that instance,
the focus is going to

495
00:25:29.350 --> 00:25:33.220
go back to office and
then inside of office, the

496
00:25:33.220 --> 00:25:36.790
task pane will refresh itself.
We send a notification to

497
00:25:36.790 --> 00:25:38.740
ourselves. We have some long
polling going on there so

498
00:25:38.740 --> 00:25:41.110
that we know that changes
have happened. It will refresh

499
00:25:41.110 --> 00:25:45.280
itself to have any modifications
that you made while you

500
00:25:45.280 --> 00:25:47.650
were out in that IEP
session, making changes to your

501
00:25:47.650 --> 00:25:50.740
diagram. So if you had
added a brand new diagram,

502
00:25:50.800 --> 00:25:53.140
it would show up in
your list. If you had

503
00:25:53.140 --> 00:25:56.650
changed something about an existing
diagram, the little thumbnail preview

504
00:25:56.650 --> 00:25:59.350
you have of that diagram
would also change without you

505
00:25:59.350 --> 00:26:02.560
doing without you clicking on
anything. Because we have an

506
00:26:02.560 --> 00:26:06.850
event system that's notifying the
application inside of word that,

507
00:26:06.850 --> 00:26:08.860
Hey, you need to refresh
yourself and get the latest

508
00:26:08.860 --> 00:26:11.440
and greatest from us. Right.
I just hit return to

509
00:26:11.440 --> 00:26:15.340
office. I moved something I
closed. And then there's a,

510
00:26:15.580 --> 00:26:19.030
a heartbeat of a moment.
And then the thumbnail changed

511
00:26:19.030 --> 00:26:22.830
itself. Exactly. And then I
think about when I, when

512
00:26:22.830 --> 00:26:24.730
I look at experiences like
this, I think about my,

513
00:26:24.790 --> 00:26:28.150
my wife, because we're, we're
breaking down the technical details

514
00:26:28.150 --> 00:26:31.990
about how this happens. And
I just gave her a

515
00:26:31.990 --> 00:26:34.450
new laptop with windows eight
and, you know, I'm in

516
00:26:34.450 --> 00:26:36.130
there every once in a
while, fighting with it and

517
00:26:36.130 --> 00:26:39.370
trying to get her to,
to not downgrade to windows

518
00:26:39.370 --> 00:26:43.060
seven. And, and then she's
finally kind of figured it,

519
00:26:44.040 --> 00:26:48.150
but when things aren't intuitive
and just work, people get

520
00:26:48.600 --> 00:26:53.790
frustrated. And this is exactly
how embedding in the active

521
00:26:53.790 --> 00:26:57.780
X kind of world of
word worked. You would say

522
00:26:57.780 --> 00:27:00.060
insert, and you'd bring an
app in and you'd go

523
00:27:00.060 --> 00:27:01.740
off and you'd just do
stuff and then you'd close

524
00:27:01.740 --> 00:27:06.720
it and then update. And
that's, that's exactly. Basically what

525
00:27:06.720 --> 00:27:09.270
I'm saying is lucid chart
is running exactly as it

526
00:27:09.270 --> 00:27:11.340
should. You know what I
mean? It's, it's the, the

527
00:27:11.470 --> 00:27:17.840
path of least user surprise.
Yeah. Well, we've been, I

528
00:27:17.840 --> 00:27:19.700
went, like I said, I
was a bit skeptical a

529
00:27:19.700 --> 00:27:21.440
year ago when I first
went up there because I

530
00:27:21.440 --> 00:27:24.140
was wondering what kind of
sass application like lucid chart

531
00:27:24.140 --> 00:27:28.310
really do inside of a
natively installed application like office,

532
00:27:28.790 --> 00:27:31.040
but the way it was
architected, it gave us a

533
00:27:31.040 --> 00:27:33.260
lot of flexibility so that
you really can do that.

534
00:27:33.260 --> 00:27:35.360
You can do the single
sign on, you can do

535
00:27:35.600 --> 00:27:39.350
real time updates inside of
office. As I'm changing it

536
00:27:39.350 --> 00:27:42.800
over in this window to
the other side, it really

537
00:27:42.800 --> 00:27:44.540
did give us the flexibility
to do those kinds of

538
00:27:44.540 --> 00:27:47.000
things. So we've been really
quite happy with the way

539
00:27:47.000 --> 00:27:49.460
things have turned out. Did
you end up installing visual

540
00:27:49.460 --> 00:27:53.240
studio everywhere? We did not.
In fact, we built most

541
00:27:53.240 --> 00:27:55.490
of this, the truth is
we built most of this

542
00:27:55.490 --> 00:27:58.310
and we weren't even inside
of word, because again, we're

543
00:27:58.310 --> 00:28:01.010
just building another kind of
web app. So most of

544
00:28:01.010 --> 00:28:04.010
our developers have done their
most familiar working in Chrome

545
00:28:04.010 --> 00:28:07.400
and using the dev tools
of Chrome. So when we

546
00:28:07.400 --> 00:28:09.440
initially started working on this,
we knew we wanted, I

547
00:28:09.440 --> 00:28:11.390
described, we wanted a little
bit of different UI with

548
00:28:11.390 --> 00:28:14.390
a different kind of tree.
And, you know, previewing, what

549
00:28:14.390 --> 00:28:16.280
we did is we had
the basic structure there and

550
00:28:16.280 --> 00:28:19.670
had the basic thing working
inside of word. And then

551
00:28:19.670 --> 00:28:21.080
we just kind of went
off and just said, look,

552
00:28:21.080 --> 00:28:23.210
let me just open that
end point directly in Chrome.

553
00:28:23.390 --> 00:28:25.690
And just mock out the
call where I call the

554
00:28:26.420 --> 00:28:29.930
office JavaScript API, and then
people can go off and

555
00:28:29.930 --> 00:28:32.330
work and build the whole
thing, using exactly the tools

556
00:28:32.330 --> 00:28:35.210
that they were used to.
And then once they had

557
00:28:35.210 --> 00:28:37.520
it all comfortable and ready
to go, they had opened

558
00:28:37.520 --> 00:28:40.550
it up in word and
try it. And pretty trivially.

559
00:28:40.550 --> 00:28:42.200
We were able to get
it working inside of work.

560
00:28:42.500 --> 00:28:46.760
So I would say 60%,
70% of the development was

561
00:28:46.760 --> 00:28:52.250
done. A not nobody ever
even installed visual studio, no

562
00:28:52.250 --> 00:28:54.980
one's running visual studio. Nobody's
even running visual studio. We

563
00:28:54.980 --> 00:28:57.020
never even installed it. The
only thing that was Microsoft

564
00:28:57.020 --> 00:29:00.080
specific is that manifest file,
which is just a handful

565
00:29:00.080 --> 00:29:03.920
of XML tags. It, we
spent maybe 10 minutes, you

566
00:29:03.920 --> 00:29:06.860
know, handwriting the XML instead
of having something generated for

567
00:29:06.860 --> 00:29:10.190
us, but literally 10, 15
minutes. And we had that

568
00:29:10.190 --> 00:29:14.120
manifest file ready to go.
And beyond that, you're working

569
00:29:14.120 --> 00:29:15.980
in the open web and
you can use whatever tools

570
00:29:15.990 --> 00:29:19.070
you're familiar with. And we'd
never even so much as

571
00:29:19.070 --> 00:29:21.740
installed visual studio and didn't
run into any real problems

572
00:29:22.070 --> 00:29:26.030
working outside that Microsoft ecosystem
to build an app for

573
00:29:26.030 --> 00:29:30.140
office. Because this seems to
me like now I'm just

574
00:29:30.140 --> 00:29:32.150
realizing how many web apps
I have. Like, I'm looking

575
00:29:32.150 --> 00:29:36.200
at my, my task bar
and I've got like Trello

576
00:29:36.530 --> 00:29:39.440
and I'm thinking, I'm not
going to be satisfied unless

577
00:29:39.440 --> 00:29:41.950
my web apps can do
this now. You know what

578
00:29:41.950 --> 00:29:42.970
I mean? Like I know
it might not be an

579
00:29:42.970 --> 00:29:45.370
obvious example of like Trello,
but I want my swim

580
00:29:45.370 --> 00:29:48.280
lanes and I want my
Kanban board to be able

581
00:29:48.280 --> 00:29:50.200
to integrate it into word.
You know, like I realized

582
00:29:50.200 --> 00:29:52.030
I could take a screenshot,
but I'm just trying to

583
00:29:52.030 --> 00:29:54.790
think about other things that
I want in my inward

584
00:29:54.790 --> 00:29:58.780
now, because office is like
the last great application that

585
00:29:58.780 --> 00:30:00.040
is not on the web.
You know what I mean?

586
00:30:00.750 --> 00:30:04.320
Right. Well, and that's, I
mean, that is the beauty

587
00:30:04.320 --> 00:30:07.680
of the open web, right?
Is that you can, you

588
00:30:07.680 --> 00:30:09.750
can choose best of breed.
You can, you can, it's

589
00:30:09.750 --> 00:30:13.050
fairly easy for vendors like
ourselves in different SAS applications

590
00:30:13.050 --> 00:30:15.210
to integrate with each other.
So I don't have to

591
00:30:15.210 --> 00:30:17.250
eat everything. I don't have
to choose one vendor and

592
00:30:17.250 --> 00:30:19.290
I'm going to get everything
from that one vendor. I

593
00:30:19.290 --> 00:30:21.000
can choose the best of
breed and say, Hey, I

594
00:30:21.000 --> 00:30:24.600
think for email, Google is,
is the best thing out

595
00:30:24.600 --> 00:30:27.720
there. But I think for
office documents, I would rather

596
00:30:27.720 --> 00:30:30.150
use Microsoft word, but I'm
not going to lose lucid

597
00:30:30.150 --> 00:30:33.720
chart, which is integrated with
both Google apps and Microsoft

598
00:30:33.720 --> 00:30:35.430
word. I can kind of
pick and choose best of

599
00:30:35.430 --> 00:30:39.120
breed. So long as vendors
who are great. Well, as

600
00:30:39.120 --> 00:30:42.480
long as the SAS companies
out there like ourselves integrate

601
00:30:42.720 --> 00:30:45.060
with these big platforms that
are out there and that's

602
00:30:45.060 --> 00:30:47.190
been, you know, as I've
mentioned, a few times, that's

603
00:30:47.190 --> 00:30:50.370
been core to our strategy
is finding what are the

604
00:30:50.640 --> 00:30:53.220
applications out there? What are
the web apps out there

605
00:30:53.640 --> 00:30:55.800
that are really key to
our customers and how can

606
00:30:55.800 --> 00:30:58.890
we make their lives really
easy so that they don't

607
00:30:58.890 --> 00:31:00.960
feel like they have to
keep switching contexts as they

608
00:31:00.960 --> 00:31:03.210
go from one thing to
another. It's just a continuous,

609
00:31:03.900 --> 00:31:06.750
nice workflow as they go
from writing in my word

610
00:31:06.750 --> 00:31:10.860
document to inserting a diagram,
writing some more, going back

611
00:31:10.860 --> 00:31:13.320
to the diagram and clicking,
edit, and making a few

612
00:31:13.320 --> 00:31:17.910
tweaks to it, drop back
in there and just a

613
00:31:17.910 --> 00:31:21.180
nice smooth flow. Yeah. I
totally think my wife would

614
00:31:21.180 --> 00:31:24.120
dig this. This is really
cool. So people can go

615
00:31:24.120 --> 00:31:27.150
to lucid chart.com and they
can play with this and

616
00:31:27.150 --> 00:31:30.330
work on that. They can
go into word and go

617
00:31:30.360 --> 00:31:33.540
insert and then go to
the office store and get

618
00:31:33.550 --> 00:31:37.110
loose chart directly from there.
They've got Google apps you've

619
00:31:37.110 --> 00:31:40.200
got for your premium stuff.
You integrate with confluence and

620
00:31:40.200 --> 00:31:45.210
JIRA, which is cool. Yup.
As well as jive. If

621
00:31:45.210 --> 00:31:48.420
people don't have Vizio licenses,
we have a Vizio viewer

622
00:31:48.450 --> 00:31:51.420
that is right inside of
box. If you're using box.net,

623
00:31:51.420 --> 00:31:53.490
they, and you have a
video file that you can't

624
00:31:53.490 --> 00:31:55.500
open. You just, you lose
a chart will show up

625
00:31:55.500 --> 00:31:57.420
as an option. It'll just
open a read only copy

626
00:31:57.420 --> 00:32:01.860
of that video file inside
of lucid chart. Gemini is

627
00:32:01.860 --> 00:32:04.860
another project management tool that
has integrated with lucid chart,

628
00:32:05.430 --> 00:32:07.440
Google drive. If you want
to store all of your

629
00:32:07.950 --> 00:32:11.640
lucid chart documents out on
drive that use that sharing

630
00:32:11.670 --> 00:32:14.700
facility. So I think I
may interrupt because I want

631
00:32:14.700 --> 00:32:16.200
to make sure that this
I'm not trying to sell

632
00:32:16.200 --> 00:32:18.240
anyone anything, but just do
this. Go to lucid chart,

633
00:32:18.270 --> 00:32:22.050
click examples, and then below
the little flash player, then

634
00:32:22.050 --> 00:32:23.880
a little movie click on
one of the examples. Cause

635
00:32:23.880 --> 00:32:27.360
the little, the little pictures
there actually links to live

636
00:32:27.360 --> 00:32:29.220
documents and that's, I thought
that was pretty cool. So

637
00:32:29.220 --> 00:32:31.050
two clicks and you don't
have to install anything. You

638
00:32:31.060 --> 00:32:33.780
have to sign up for
anything. Or even from the

639
00:32:33.780 --> 00:32:35.760
homepage, if you're on the
Alyssa chart homepage, you can

640
00:32:35.760 --> 00:32:37.440
just try a demo document.
You don't have to sign

641
00:32:37.440 --> 00:32:40.640
up or anything. Say it,
started it, try it now

642
00:32:40.880 --> 00:32:42.800
and it'll open it up
and you can play around

643
00:32:42.800 --> 00:32:44.000
with it a little bit.
And if you decide you

644
00:32:44.000 --> 00:32:46.760
like what you have there,
you can always save it

645
00:32:46.760 --> 00:32:48.590
and create an account so
that you don't lose what

646
00:32:48.590 --> 00:32:51.850
you played with. But Yes,
I was encouraging people to

647
00:32:51.850 --> 00:32:54.250
go to examples because the,
try it now. And this

648
00:32:54.250 --> 00:32:57.270
is, here's a little advice
for you, Brian. It's, it's,

649
00:32:57.270 --> 00:32:59.410
it's very basic. Like this
is a start now and

650
00:32:59.410 --> 00:33:02.230
there's nothing there. What would
impressed me was when I

651
00:33:02.230 --> 00:33:05.320
went to examples, I, and
I was like, okay, it's

652
00:33:05.320 --> 00:33:07.810
a flow chart, go to
examples. And I clicked on

653
00:33:07.870 --> 00:33:10.000
like, I think I clicked
on work together. And it

654
00:33:10.000 --> 00:33:12.130
was just like, Holy crap,
this is complicated. Like it

655
00:33:12.130 --> 00:33:15.910
was a big thing. Like
it just, for some reason,

656
00:33:16.180 --> 00:33:20.980
opening a really complex multi-page
app, multi page document rather

657
00:33:21.040 --> 00:33:22.630
is so much more impressive
to me. And then I

658
00:33:22.630 --> 00:33:25.990
started moving stuff around. Right.
I dunno, I'm geeking out

659
00:33:25.990 --> 00:33:29.050
over this stuff. This is
really cool. I think that

660
00:33:29.110 --> 00:33:31.780
what you've done is really,
really neat. And I just

661
00:33:31.780 --> 00:33:35.380
love seeing full applications written
in the web. I'd like

662
00:33:35.380 --> 00:33:40.510
to talk more sometime about
the actual, like the debugging

663
00:33:40.540 --> 00:33:44.860
process and the, you know,
I think that people feel

664
00:33:44.860 --> 00:33:48.250
a little helpless doing debugging,
even, even in Google. Chrome's

665
00:33:48.340 --> 00:33:53.020
great developer tools. When JavaScript
errors happen, you can kind

666
00:33:53.020 --> 00:33:57.130
of find yourself stuck, Right?
Yeah. We can talk through

667
00:33:57.130 --> 00:33:59.620
some of that and how
we, and, and I could

668
00:33:59.620 --> 00:34:02.140
even bring in, I mentioned
Ben, who's our CTO. Who's

669
00:34:02.140 --> 00:34:05.560
been really the visionary around
how you get that JavaScript.

670
00:34:05.590 --> 00:34:08.860
How do you make a
application as large and complex

671
00:34:08.860 --> 00:34:12.490
as a diagramming application is
that is purely JavaScript and

672
00:34:12.490 --> 00:34:14.980
HTML five. It runs on
an iPad. It runs on

673
00:34:15.370 --> 00:34:17.620
an Android tablet that runs
in Chrome. It runs on

674
00:34:17.620 --> 00:34:21.820
IIE nine and above. How
do you do that? We

675
00:34:21.820 --> 00:34:24.010
could, we could talk through,
that's a whole nother subject

676
00:34:24.010 --> 00:34:25.810
that you could spend another
half an hour on it.

677
00:34:26.470 --> 00:34:28.630
Yeah, let's totally do that.
That's fantastic. Well, thanks so

678
00:34:28.630 --> 00:34:31.000
much, Brian Pew for talking
with me today. Thank you.

679
00:34:31.000 --> 00:34:33.640
I appreciate the time. This
has been another episode of

680
00:34:33.640 --> 00:34:35.980
Hanselminutes and we'll see you
again next week.

