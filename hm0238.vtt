WEBVTT FILE

1
00:00:12.090 --> 00:00:16.920
From Hanselman it's dot com.
It's Hanselman. It's a weekly

2
00:00:16.920 --> 00:00:21.090
discussion with web developer and
technologists. Scott Hanselman. This is

3
00:00:21.090 --> 00:00:27.090
Lawrence Ryan announcing show number two
38. Recorded live Wednesday, October 27th, 2010.

4
00:00:27.900 --> 00:00:30.930
Support from Hanselman it's is
provided by Tellerik. Our AP

5
00:00:30.930 --> 00:00:34.560
controls, the most comprehensive suite
of components for windows forms

6
00:00:34.560 --> 00:00:43.110
and asp.net web applications online@wwwdottelerik.com.
In this episode, Scott talks

7
00:00:43.110 --> 00:00:47.340
with Phil hack about asp.net,
NBC three RC, and the

8
00:00:47.340 --> 00:00:51.440
new get package. Hi, this
is Scott Hanselman and this

9
00:00:51.440 --> 00:00:53.240
is another episode of Hansel
minutes and I'm here at

10
00:00:53.240 --> 00:00:56.120
PDC on the Microsoft campus
and we're hidden in a

11
00:00:56.120 --> 00:00:58.550
room and studio E because
that was the only place

12
00:00:58.550 --> 00:01:00.350
we could find a quiet
room. And my guest is

13
00:01:00.350 --> 00:01:02.630
Phil hack. Hi Scott. How
you doing? How's it going,

14
00:01:02.630 --> 00:01:08.570
sir? Good. What are we
releasing? So we're releasing asp.net

15
00:01:08.570 --> 00:01:13.940
MVC three release candidate. Cool.
Among a bunch of other

16
00:01:13.940 --> 00:01:19.640
products that we're releasing asp.net,
web pages, what matrix? All

17
00:01:19.640 --> 00:01:22.940
kinds of stuff. Okay. So
NBC is marching on pretty

18
00:01:22.940 --> 00:01:24.500
fast. I mean, I'm sure
that there are people who

19
00:01:24.500 --> 00:01:27.530
are still on NBC one,
we're working on that. Maybe

20
00:01:27.530 --> 00:01:29.960
skip the NBC to train,
you know, is it going

21
00:01:29.960 --> 00:01:32.360
to keep going this fast
three, four or five? Are

22
00:01:32.360 --> 00:01:34.970
you trying to get to
NBC nine when I eat

23
00:01:34.970 --> 00:01:41.450
nine chips? Yeah. That that's
the grand vision all along

24
00:01:41.450 --> 00:01:44.660
to hit that alignment there.
Right. So, yeah, I mean,

25
00:01:44.690 --> 00:01:47.240
right now I'd like to
get back at least to

26
00:01:47.240 --> 00:01:50.810
a yearly cadence and at
maximum, I don't know if

27
00:01:50.810 --> 00:01:53.540
I can survive continuing to
keep this pace up, but

28
00:01:54.470 --> 00:01:57.050
yeah, I mean, there's always
something to do. There's always

29
00:01:57.830 --> 00:02:00.500
great feedback coming from the
community. So I think a

30
00:02:00.500 --> 00:02:02.750
yearly cadence is kind of
a sweet spot. And so

31
00:02:02.750 --> 00:02:05.810
that's kind of what we've
been on. Other, I feels

32
00:02:05.810 --> 00:02:07.910
like this time around, we're
almost a little bit accelerated

33
00:02:07.910 --> 00:02:13.010
with the release candidate schedule,
but I think that's kind

34
00:02:13.010 --> 00:02:14.720
of a sweet spot where
people feel like there's a

35
00:02:14.720 --> 00:02:18.530
momentum, but that we're not
completely inundating them. Although, you

36
00:02:18.530 --> 00:02:20.510
know, the people who are
still on.net, one, one do

37
00:02:20.510 --> 00:02:23.210
kind of feel left behind.
Sure. Is it hard to

38
00:02:23.210 --> 00:02:25.030
upgrade it to Oh, sights
to three? Oh, like what's,

39
00:02:25.190 --> 00:02:28.010
what's the involvement in doing
that? No, it's not going

40
00:02:28.010 --> 00:02:29.900
to be that hard. We'll
have a tool like we

41
00:02:29.900 --> 00:02:33.650
did for upgrading embassy one
Timothy two. The question is

42
00:02:33.650 --> 00:02:35.630
really, do you want to
upgrade to the new view

43
00:02:35.630 --> 00:02:38.180
engine, the razor view engine?
If you want to do

44
00:02:38.180 --> 00:02:41.450
that, then yeah. There's going
to be a considerable amount

45
00:02:41.450 --> 00:02:44.120
of work to do. If
you are content with the

46
00:02:44.120 --> 00:02:45.830
web forms view engine, you
want to stay with that,

47
00:02:46.100 --> 00:02:49.190
then the upgrade scenario should
be relatively painless. Okay. So

48
00:02:49.190 --> 00:02:50.930
let's back up for a
second and talk to people

49
00:02:50.930 --> 00:02:54.020
who maybe aren't on NBC.
What is a view engine?

50
00:02:54.380 --> 00:02:57.500
What does a view engine?
So a view engine and

51
00:02:57.500 --> 00:03:00.340
NBC is the part of
the framework that takes your

52
00:03:00.340 --> 00:03:03.340
model that you've see, you
know, request comes in through

53
00:03:03.340 --> 00:03:07.150
routing hits a controller and
a controller action that action

54
00:03:07.150 --> 00:03:09.970
might query your database or
your object models, business logic,

55
00:03:09.970 --> 00:03:13.870
web services, and then formulates
a, you know, this model

56
00:03:13.870 --> 00:03:16.090
for the view that, what,
what are you, what exactly

57
00:03:16.090 --> 00:03:17.710
are you going to display
to the end user? And

58
00:03:17.710 --> 00:03:19.750
so you send that off
to the view engine and

59
00:03:19.750 --> 00:03:25.270
the view engine will render
that in HTML typically, and

60
00:03:25.540 --> 00:03:27.910
it will use one of
the registered view engines to

61
00:03:27.910 --> 00:03:31.180
do that. So it's a
pluggable infrastructure, so an extensible

62
00:03:31.180 --> 00:03:34.150
infrastructure. And so as part
of that rendering, you know,

63
00:03:35.080 --> 00:03:37.960
the view engine is responsible
for generating market based on

64
00:03:37.960 --> 00:03:41.170
some sort of template file.
Now, by default, we used

65
00:03:41.440 --> 00:03:43.840
ASP X files or web
forms, a web form view

66
00:03:43.840 --> 00:03:47.200
engine that was in MVC
one and MC two, but

67
00:03:47.200 --> 00:03:50.800
an MC three, we have
a new option. So that

68
00:03:50.800 --> 00:03:55.030
new option is the razor
view engine. And so you

69
00:03:55.030 --> 00:03:57.160
can, when you start a
new MC three project, you

70
00:03:57.160 --> 00:04:00.460
can choose between one or
the other. And it provides

71
00:04:00.460 --> 00:04:05.650
a nice, really clean, streamlined
syntax for doing, for doing

72
00:04:05.680 --> 00:04:09.150
view generation. Okay. So the,
the language that I'm writing

73
00:04:09.150 --> 00:04:12.120
my view in it, this
is going to be a

74
00:04:12.120 --> 00:04:13.980
little subtle, but I want
to make this point to

75
00:04:13.980 --> 00:04:16.860
people who maybe haven't dug
into it. I'm not writing

76
00:04:16.860 --> 00:04:19.200
it in HTML or at
least I don't have to,

77
00:04:19.590 --> 00:04:21.840
like the output may be
HTML, but the thing that

78
00:04:21.840 --> 00:04:25.230
I am writing, right, historically
doesn't have to be HTML.

79
00:04:25.530 --> 00:04:28.740
Yeah. And so, you know,
typically with view engines that

80
00:04:28.740 --> 00:04:31.920
we ship, it's a mixture
of code and markup, but

81
00:04:32.100 --> 00:04:35.160
there are third party view
engines out there that completely,

82
00:04:35.160 --> 00:04:38.010
you know, buck the grain,
right. There's a ham and

83
00:04:38.010 --> 00:04:42.030
Hamill N H a M
L and they use a

84
00:04:42.030 --> 00:04:47.190
completely custom domain specific language
for generating HTML that has

85
00:04:47.190 --> 00:04:49.850
no HTML in the language
itself. Right. You use like

86
00:04:49.860 --> 00:04:53.220
the little percent and indentation
to control it. So yeah,

87
00:04:53.730 --> 00:04:57.570
other approaches use very declarative
approaches. So the code you

88
00:04:57.570 --> 00:05:00.210
write doesn't have to be,
but typically like in the

89
00:05:00.210 --> 00:05:04.470
case of razor, it's this
mixture of C-sharp or vb.net

90
00:05:04.470 --> 00:05:08.490
code and HTML And an
asp.net. When I write this,

91
00:05:08.610 --> 00:05:11.340
this view, whether it be
web forms or razor or

92
00:05:11.340 --> 00:05:14.790
web forms on MVC, I'm
writing this mixture of markup

93
00:05:15.060 --> 00:05:19.290
and HTML, assuming markup rather
than code that gets compiled

94
00:05:20.010 --> 00:05:23.640
into some C-sharp. And then
that it is that comp

95
00:05:23.670 --> 00:05:27.460
compiled kind of intermediate file
that then creates the, the

96
00:05:27.480 --> 00:05:31.170
HTML that I want to
render. Yeah. Asp.net has this

97
00:05:31.170 --> 00:05:35.340
whole competency runtime compilation model,
which sounds like an oxymoron,

98
00:05:35.340 --> 00:05:37.800
but it actually works. And
so when you hit a

99
00:05:37.860 --> 00:05:40.830
page or a view, the
first time the asp.net runtime

100
00:05:40.830 --> 00:05:43.470
will compile it. And if
you go to the temporary

101
00:05:43.470 --> 00:05:45.840
internet files and like one
of the tricks you do

102
00:05:45.840 --> 00:05:47.550
is you put a compiler
error in your view and

103
00:05:47.550 --> 00:05:51.590
then have debug on, and
you can view where HP

104
00:05:51.600 --> 00:05:54.270
Donna actually puts the source
code file. So you can

105
00:05:54.270 --> 00:05:55.830
actually go there and you'll
see the code. And it

106
00:05:55.830 --> 00:05:58.010
looks like a bunch of
response rise, you know, maybe

107
00:05:58.010 --> 00:06:00.080
how you might've done it
back in the classic ASP

108
00:06:00.080 --> 00:06:01.900
day or something. So you're
saying that if I go

109
00:06:01.900 --> 00:06:05.260
and write my own page
and I go HTML, a

110
00:06:05.260 --> 00:06:09.400
bold Scott and bold, and
then I do this trick

111
00:06:09.400 --> 00:06:13.510
to see the output, I'll
see response dot, right. HTML

112
00:06:13.510 --> 00:06:18.400
bold. Yup. Okay. Now, when
you say web forms, view

113
00:06:18.400 --> 00:06:20.950
engine, you're not literally meaning
web forms and NBC, I'm

114
00:06:20.950 --> 00:06:24.250
not, it's just the engine
by which you do that

115
00:06:24.250 --> 00:06:28.450
compilation. Yeah, that's correct. So
we went through a lot

116
00:06:28.450 --> 00:06:31.240
of iterations trying to name
it. And so there's the,

117
00:06:31.360 --> 00:06:33.430
what we thought the technically
correct name that no one

118
00:06:33.430 --> 00:06:36.250
would understand was. And then
there's the, what's that, what's

119
00:06:36.250 --> 00:06:40.120
that name? Well, all web
pages and web forms are,

120
00:06:40.390 --> 00:06:42.880
and all user controls, which
you can also use in

121
00:06:43.360 --> 00:06:47.080
MECs views, all derived from
a common template control class.

122
00:06:47.500 --> 00:06:49.480
And so, you know, like
if we want to be

123
00:06:49.480 --> 00:06:52.180
technically accurate, we could say,
well, it's a template control

124
00:06:53.080 --> 00:06:56.350
view engine. Yeah. That would
not go over well, that

125
00:06:56.350 --> 00:06:58.450
wouldn't have went any wards.
You know, not that way

126
00:06:58.450 --> 00:07:01.690
from view engine naming, What
are some things that people

127
00:07:01.690 --> 00:07:04.150
don't like about the web
forms view engine when they're

128
00:07:04.150 --> 00:07:06.310
writing MVC, that would cause
you to go and make

129
00:07:06.310 --> 00:07:12.010
something like razor. So the
web view engine is, you

130
00:07:12.010 --> 00:07:14.950
know, there's a lot of
extra what you might call

131
00:07:14.950 --> 00:07:19.450
syntactic noise or cruft that
goes in there. Code blocks

132
00:07:19.450 --> 00:07:21.850
are all delimited by a
less than percent and percent

133
00:07:21.850 --> 00:07:26.800
greater than you Just to
make sure, cause not everyone

134
00:07:26.800 --> 00:07:29.800
who listens to the show
speaks English as fast as

135
00:07:29.800 --> 00:07:33.370
we do. When you talk
about syntactic cruft, you're talking

136
00:07:33.370 --> 00:07:36.160
about our constraint, tactic noise,
it's all the little things

137
00:07:36.610 --> 00:07:40.510
that are required because of
historical reasons, like less than

138
00:07:40.780 --> 00:07:47.050
percent, my code percent greater
than that. You really just

139
00:07:47.050 --> 00:07:50.050
care about outputting my code.
And here I have four

140
00:07:50.050 --> 00:07:54.610
or five, six extra characters
along for the ride for

141
00:07:54.610 --> 00:07:57.850
no other reason than historical
reasons. A lot of that

142
00:07:57.850 --> 00:08:00.110
kind of thing. And also
there's, you know, the, the

143
00:08:00.190 --> 00:08:02.860
issue of like what the
power of the view engine

144
00:08:02.890 --> 00:08:06.340
to express certain things like,
for example, let's say you

145
00:08:06.340 --> 00:08:08.200
want to write a method
that returns a bit of

146
00:08:08.200 --> 00:08:10.630
HTML. So in C sharp,
you can do it, but

147
00:08:10.630 --> 00:08:13.870
you have to concatenate this
really the string. Right. And

148
00:08:14.170 --> 00:08:16.570
you know, like if I
do input type equals text

149
00:08:16.570 --> 00:08:21.040
box, right, you do return
double quotes, input type equals,

150
00:08:21.310 --> 00:08:24.490
and now you need to
escape that quote. And, and

151
00:08:24.490 --> 00:08:26.830
then in order to do
the quote for the attribute

152
00:08:26.830 --> 00:08:29.020
value, and then when you
get to the value, you

153
00:08:29.020 --> 00:08:31.900
need to call HTML that
Incode or whatever it is.

154
00:08:32.500 --> 00:08:36.130
So Basically saying that in
that instance, I just want

155
00:08:36.130 --> 00:08:40.270
to output some HTML, but
then she sharps syntactic baggage

156
00:08:40.540 --> 00:08:43.240
gets in the way because
of things like escaping quotes.

157
00:08:43.240 --> 00:08:46.690
So all these different kinds
of languages that I'm using

158
00:08:47.440 --> 00:08:51.160
get in the way What's
really cool about razor is

159
00:08:51.160 --> 00:08:57.150
that it has a really
nice clean syntax that kind

160
00:08:57.150 --> 00:08:59.130
of gets out of your
way, helps you express what

161
00:08:59.130 --> 00:09:01.470
it is you want to
do. You almost feel like

162
00:09:01.470 --> 00:09:04.170
it just flows out. And,
and part of that comes

163
00:09:04.170 --> 00:09:08.190
from it's the fact that
it actually understands sort of

164
00:09:08.190 --> 00:09:11.790
the structure of HTML and
code. And it has a

165
00:09:11.790 --> 00:09:16.920
very powerful way of interpreting
code and markup together. And

166
00:09:16.920 --> 00:09:21.900
by that, I mean, things
like if you do, you

167
00:09:21.900 --> 00:09:25.500
can have helper methods where
instead of returning a string

168
00:09:25.500 --> 00:09:28.440
that you can catenate together,
you just return. And then

169
00:09:28.440 --> 00:09:31.200
you start, you know, less
than input type and start

170
00:09:31.200 --> 00:09:35.490
writing markup and almost like
a, a template within your

171
00:09:35.490 --> 00:09:38.520
code for returning HTML. And
within that markup, if you

172
00:09:38.520 --> 00:09:40.800
say value equals quote, and
then you use the app

173
00:09:40.800 --> 00:09:42.960
sign, which, which is your
way of switching back to

174
00:09:42.960 --> 00:09:46.380
code, do at sign, you
know, my value and then

175
00:09:46.440 --> 00:09:49.620
double quote and continue with
the rest of the markup

176
00:09:50.100 --> 00:09:53.390
that, that transition there is
really seamless. So I think

177
00:09:53.390 --> 00:09:55.910
we've, that was interesting to
me and I was nodding,

178
00:09:55.910 --> 00:09:57.980
but I'm sure that people
who are listening in their

179
00:09:57.980 --> 00:10:00.860
cars completely lost that. So
let's try this cause it's

180
00:10:00.860 --> 00:10:02.660
a podcast and it's hard
to talk about code in

181
00:10:02.660 --> 00:10:04.760
a podcast, but let's say
I had a variable called

182
00:10:04.760 --> 00:10:07.550
Fu yeah. And it's got
a word in it and

183
00:10:07.550 --> 00:10:10.970
I'm going to say at
Fu and let's see at

184
00:10:10.970 --> 00:10:13.100
the end, I put an
exclamation point. So I've got

185
00:10:13.160 --> 00:10:18.500
at Fu exclamation point where
the exclamation point is butted

186
00:10:18.500 --> 00:10:21.200
up. It's shoved up right
against Fu in the, in

187
00:10:21.200 --> 00:10:23.180
the past, that would be
kind of a challenging thing.

188
00:10:23.180 --> 00:10:25.730
How does that work in
razor? So in razor that

189
00:10:25.730 --> 00:10:28.280
would work in that at
Fu we go to the

190
00:10:28.280 --> 00:10:31.190
next character and we say,
is that a valid expression?

191
00:10:31.430 --> 00:10:34.070
Is it part of the
code expression? And we'll have,

192
00:10:34.130 --> 00:10:35.960
we may have to look
at the, even the next

193
00:10:35.960 --> 00:10:39.200
character because you know, let's
say it's at food dot,

194
00:10:39.230 --> 00:10:42.370
right? Meaning that I'm going
to say the end of

195
00:10:42.380 --> 00:10:45.440
a sentence, like Abu and
then period That's example, I

196
00:10:45.440 --> 00:10:49.670
have a variable name, first
name, and then I print

197
00:10:49.670 --> 00:10:53.630
out, you know, big, bold
tag, you know, slash BS

198
00:10:53.660 --> 00:10:58.790
and slash high at first
name dot. So I want

199
00:10:58.790 --> 00:11:01.550
to say, hi Phil, heck
period. Yeah. So what razor

200
00:11:01.550 --> 00:11:03.290
can do is they can
figure out that that period

201
00:11:03.290 --> 00:11:05.270
is meant to be part
of the text and markup

202
00:11:05.300 --> 00:11:07.580
and not part of your
expression because it looks at

203
00:11:07.580 --> 00:11:10.100
the next character and says,
well, that next character is

204
00:11:10.520 --> 00:11:13.760
a space or a less
than, or something that couldn't

205
00:11:13.760 --> 00:11:17.570
possibly be valid for code.
So in that case, we

206
00:11:17.570 --> 00:11:19.670
know that we're back in
markup mode and then we

207
00:11:19.670 --> 00:11:21.920
do the right thing. And
there's a lot of cases

208
00:11:21.920 --> 00:11:25.190
where razor just does the
right thing. And you know,

209
00:11:25.550 --> 00:11:27.500
when you don't, when you're
just doing it, you realize,

210
00:11:27.530 --> 00:11:29.270
Oh, you know, whatever. But
when you think about it,

211
00:11:29.270 --> 00:11:31.850
you're like, wow, how did
that work? Right. It's interesting.

212
00:11:31.850 --> 00:11:35.090
When I started learning razor,
my first impression was this

213
00:11:35.090 --> 00:11:37.040
is really confusing. I have
to know all of these

214
00:11:37.040 --> 00:11:39.500
rules, but then when I
started working on it for

215
00:11:39.500 --> 00:11:42.320
my talk here at PDC,
I started realizing that the

216
00:11:42.320 --> 00:11:45.770
less you think about it,
the better, and it will

217
00:11:45.770 --> 00:11:48.680
usually do the right. My
favorite example that I show

218
00:11:48.680 --> 00:11:51.230
people is I have this
list of objects. I have

219
00:11:51.230 --> 00:11:54.880
an array and I want
to generate a, an unordered

220
00:11:54.880 --> 00:11:58.090
list and HTML. So with
the web form view engine,

221
00:11:58.090 --> 00:12:00.700
you did less than percent
for each, you know, VAR

222
00:12:00.700 --> 00:12:04.240
item and whatever, and then
percent close. And then, you

223
00:12:04.240 --> 00:12:06.130
know, you do the LA
tags in the middle, and

224
00:12:06.130 --> 00:12:08.700
then you closed, you have
to, Right. So to translate

225
00:12:08.700 --> 00:12:11.100
that you make a four
loop and you have your

226
00:12:11.100 --> 00:12:13.380
list item, your list item,
but you're going in and

227
00:12:13.380 --> 00:12:15.720
out and in and out
of code view and Mark

228
00:12:15.720 --> 00:12:18.000
up and code. Yeah. In
and around the, for each

229
00:12:18.000 --> 00:12:19.650
block, you have to have
code nuggets and on the

230
00:12:19.650 --> 00:12:22.260
closing code nuggets, is that
what they're called? Yeah. Less

231
00:12:22.260 --> 00:12:25.830
than percent percent greater than
code nugget. Yeah. So you

232
00:12:25.830 --> 00:12:27.390
don't want to leave these
code nuggets all over the

233
00:12:27.390 --> 00:12:30.240
place. Right. But so, but
then you need the code

234
00:12:30.240 --> 00:12:33.540
nugget just for the closing
curly brace, right? Oh, you

235
00:12:33.540 --> 00:12:37.020
need more. Yeah. You need
less than percent curly race

236
00:12:37.380 --> 00:12:39.150
and then percent less. So
you need like, what does

237
00:12:39.150 --> 00:12:43.560
that five characters? Yeah. Five.
Just, just to say, I'm

238
00:12:43.560 --> 00:12:45.540
done now, I'm done with
this code block or this

239
00:12:45.540 --> 00:12:47.550
code block. So this gets
back to what I mentioned

240
00:12:47.550 --> 00:12:51.570
earlier about razor being a
razor, understanding the structure of

241
00:12:51.570 --> 00:12:53.820
code and Martin. So what
you do in razors, you

242
00:12:53.820 --> 00:12:58.470
do add for each VAR
foo in whatever open. Oh,

243
00:12:58.480 --> 00:13:00.540
wait a second. So you
say, add, and you just

244
00:13:00.540 --> 00:13:02.670
start writing code, you just
start writing code. There's no

245
00:13:02.670 --> 00:13:06.570
parentheses or brackets or anything
to put around it. Exactly.

246
00:13:06.630 --> 00:13:09.420
You just start writing code.
And when you're ready to

247
00:13:09.600 --> 00:13:12.630
start emitting markup, you just
use a less than, okay.

248
00:13:12.690 --> 00:13:14.550
Use a, you know, you
just use a, you just

249
00:13:14.550 --> 00:13:17.670
start writing markup. So do
add for each bar, foo

250
00:13:17.670 --> 00:13:21.930
in whatever, you know, close
the four loop, open the

251
00:13:21.930 --> 00:13:24.900
curly brace for the four
block. And then I would

252
00:13:24.900 --> 00:13:28.020
type like slash L R
less than L I greater

253
00:13:28.020 --> 00:13:30.390
than, you know, You go
at, you start writing C

254
00:13:30.390 --> 00:13:33.060
sharp in the way that
you stop and like start

255
00:13:33.060 --> 00:13:35.040
writing markup, which is you
just start writing, Writing markup.

256
00:13:35.070 --> 00:13:37.380
Exactly. You don't need to
close that for, you know,

257
00:13:37.410 --> 00:13:39.030
when do you close the
whole four loop at the

258
00:13:39.030 --> 00:13:42.780
end when you do the
closing curly brace? Because, Because

259
00:13:42.780 --> 00:13:44.610
that's not markup now, what
if I wanted a curly

260
00:13:44.610 --> 00:13:47.370
brace, then you have ways
of escaping it. I see,

261
00:13:49.350 --> 00:13:51.600
hi, this is Scott coming
to you from another place

262
00:13:51.600 --> 00:13:54.720
in time. Are you using
agile practices to manage your

263
00:13:54.720 --> 00:13:57.000
software development? There's lots of
tools in the market that

264
00:13:57.000 --> 00:13:58.980
manage the steps of a
project, but most of them

265
00:13:58.980 --> 00:14:02.220
focus on individual roles. Get
ready for a solution that

266
00:14:02.220 --> 00:14:04.650
caters for the success of
the whole team. Guys at

267
00:14:04.650 --> 00:14:08.760
Tellerik introduced team pulse. It's
an agile project management tool.

268
00:14:08.820 --> 00:14:12.150
That'll help you gather ideas,
estimate plan, track progress in

269
00:14:12.150 --> 00:14:15.990
a common workspace. Finally, companies,
regardless of their size can

270
00:14:15.990 --> 00:14:17.910
use a lightweight and convenient
tool that makes all the

271
00:14:17.910 --> 00:14:21.270
stakeholders work as a United
team. Even if they're in

272
00:14:21.270 --> 00:14:24.820
different countries by combining intuitive
user interface and the power

273
00:14:24.850 --> 00:14:27.690
server light team poles removes
the roadblocks that you typically

274
00:14:27.690 --> 00:14:30.810
face and applying agile in
an effective manner, no more

275
00:14:30.810 --> 00:14:34.770
lost data, no disparate systems,
no lack of critical analytics

276
00:14:35.040 --> 00:14:38.400
regarding the health and philosophy
project. See if yourself, you

277
00:14:38.400 --> 00:14:41.040
get a free copy for
five users in one project

278
00:14:41.040 --> 00:14:47.700
at tellerik.com/team pulse. And please
do thank Tellerik for supporting

279
00:14:47.700 --> 00:14:52.100
Hansel minutes on their Facebook
fan page, facebook.com T L

280
00:14:52.310 --> 00:14:56.270
E R I K Tellerik.
We do appreciate it. There

281
00:14:56.270 --> 00:14:58.340
wouldn't be a Hansel minutes.
If there wasn't, Tellerik helping

282
00:14:58.340 --> 00:15:01.370
us. Now, a lot of
people who may be into

283
00:15:01.370 --> 00:15:05.150
NBC might think that this
sounds a lot like spark

284
00:15:05.390 --> 00:15:08.150
and people have made comparisons
between the spark view engine,

285
00:15:08.570 --> 00:15:11.870
which is a very HTML,
markup focused view engine. And

286
00:15:11.870 --> 00:15:15.020
they've said, well, spark seems
a lot like, like razor,

287
00:15:15.380 --> 00:15:18.260
if you dig into it,
they're actually quite different. But

288
00:15:18.260 --> 00:15:21.880
why do you think those
comparisons are initially made? Because

289
00:15:22.480 --> 00:15:25.210
spark is very popular among
those who keep track of

290
00:15:25.210 --> 00:15:29.470
these things. And it's a
very clean view engine as

291
00:15:29.470 --> 00:15:31.600
well. And so there's sort
of this comparison of, Oh,

292
00:15:31.630 --> 00:15:36.910
both of these approaches are
very clean Louis Hardin, or I

293
00:15:36.910 --> 00:15:41.500
always get, I think it's
Louis D Jarden Lewis, but

294
00:15:41.500 --> 00:15:43.240
I always pronounce it like
he's French. And I say,

295
00:15:43.240 --> 00:15:45.940
Louis, these are, which is
totally wrong because I think

296
00:15:45.940 --> 00:15:47.740
he's from like the Midwest
somewhere. Yeah. Well, I think

297
00:15:47.740 --> 00:15:49.900
his name is French, but
anyways, really, really He is

298
00:15:49.900 --> 00:15:53.740
not French, but he's not
French indeed. Okay then, but

299
00:15:53.740 --> 00:15:56.470
he's a very smart guy.
And so he's Regardless of

300
00:15:56.470 --> 00:16:00.250
being friends or not, he's
brilliant Lewis. He's a brilliant

301
00:16:00.250 --> 00:16:03.280
guy. And he joined Microsoft
and he was, you know,

302
00:16:03.280 --> 00:16:05.980
involved in some of the
design and, you know, discussions

303
00:16:05.980 --> 00:16:08.860
around this. And he had
a really interesting insight. He

304
00:16:08.860 --> 00:16:12.040
felt that what razor is,
is really taking this code

305
00:16:12.040 --> 00:16:16.180
driven approach to doing templating
where spark is very markup

306
00:16:16.180 --> 00:16:19.990
driven and declarative approach to
doing templating. So there's sort

307
00:16:19.990 --> 00:16:22.480
of like two different sides
of the same coin in

308
00:16:22.480 --> 00:16:24.280
terms of, you know, do
you want your code to

309
00:16:24.280 --> 00:16:26.800
drive this or do you
want a markup to drive

310
00:16:26.800 --> 00:16:31.000
it? So when, when you
answer the question, why didn't

311
00:16:31.000 --> 00:16:34.420
I, why didn't we Microsoft
just use spark as it

312
00:16:34.420 --> 00:16:39.250
was? Why? So that, that
goes back to sort of

313
00:16:39.250 --> 00:16:41.830
the overall web strategy where
we have this new offering

314
00:16:41.830 --> 00:16:45.970
called asp.net web pages, which
targets a more beginner audience

315
00:16:46.180 --> 00:16:48.640
initially. And so the idea
here is that, you know,

316
00:16:48.640 --> 00:16:52.720
we wanted to have this
very simple, streamlined, very imperative

317
00:16:52.720 --> 00:16:56.950
model for developing simple web
pages. And, but that the

318
00:16:56.950 --> 00:16:59.830
knowledge that you learned doing
that you could graduate up

319
00:17:00.040 --> 00:17:03.790
to asp.net MVC. And we
felt that keeping the same

320
00:17:03.790 --> 00:17:07.300
syntax for both models made
sense. And we felt that

321
00:17:07.300 --> 00:17:10.750
this syntax really worked well,
especially for those who are

322
00:17:10.750 --> 00:17:13.990
coming from, you know, let's
say PHP or classic ASP

323
00:17:13.990 --> 00:17:17.020
background, or have heard of
those things. They really, you

324
00:17:17.020 --> 00:17:19.420
know, they would be familiar
with this model of doing

325
00:17:19.450 --> 00:17:22.420
a web development, But I
would definitely encourage listeners to

326
00:17:22.420 --> 00:17:25.480
go back into the Hansel
minutes archives and listen to

327
00:17:25.480 --> 00:17:29.320
the show I did with
Louie Louis on spark. And

328
00:17:29.320 --> 00:17:30.970
he gets more into the
details of that. And I

329
00:17:30.970 --> 00:17:33.580
assume that we can choose
any of these, like, just

330
00:17:33.580 --> 00:17:36.790
because razor is the default
I could use spark, or

331
00:17:36.790 --> 00:17:38.620
if I like web forms,
I can use that. Can

332
00:17:38.620 --> 00:17:40.510
I mix and match them
in my am I saying,

333
00:17:40.870 --> 00:17:43.780
am I saying a project?
Yeah. So a part of

334
00:17:43.780 --> 00:17:45.820
the work we're doing for
MVC three is to make,

335
00:17:46.840 --> 00:17:49.090
to put other view engines
on more of an equal

336
00:17:49.650 --> 00:17:53.100
platform. So for example, you
will be able to plug

337
00:17:53.100 --> 00:17:57.990
in into the file, new
project dialogue. There's two choices

338
00:17:57.990 --> 00:18:01.050
you're given a razor is
the first choice web forms

339
00:18:01.050 --> 00:18:04.680
is the second. And then
you can hook in other

340
00:18:04.680 --> 00:18:06.390
view engines in there. If
you want spark in there,

341
00:18:06.390 --> 00:18:08.730
you can put it in
there also in the add

342
00:18:08.730 --> 00:18:13.470
view dialogue, which has this
ability to scaffold your model.

343
00:18:14.100 --> 00:18:16.560
You can choose which view
engine you want the scaffold

344
00:18:16.560 --> 00:18:19.770
to be created with. And
then, so you can put

345
00:18:19.770 --> 00:18:21.810
spark in there and we'll
be working with Lou and

346
00:18:21.810 --> 00:18:24.810
his team and the spark
team to help them have

347
00:18:24.810 --> 00:18:27.050
that ready. Hopefully by the
time we are TM, Okay.

348
00:18:27.380 --> 00:18:31.820
RTM released to manufacturing or
RTW. Yeah. Our team has

349
00:18:31.820 --> 00:18:36.110
kind of a anachronism for
that. And if you want

350
00:18:36.110 --> 00:18:38.210
to mix and match, you
can have partial views, for

351
00:18:38.210 --> 00:18:41.000
example, in one view engine,
but the main view in

352
00:18:41.000 --> 00:18:43.550
another. So if you were
doing some kind of transition

353
00:18:43.550 --> 00:18:45.830
over from one view engine
to another, and you just

354
00:18:45.830 --> 00:18:49.700
wanted to call this existing
partial, that was ESPN, That

355
00:18:49.700 --> 00:18:52.220
will just work. So it's
really about picking the tool

356
00:18:52.220 --> 00:18:54.350
for the job. Like I've
even seen people take view

357
00:18:54.350 --> 00:18:58.880
engines and use them to
render HTML email. Like you

358
00:18:58.880 --> 00:19:01.670
might have an application that
makes an email, you could

359
00:19:01.910 --> 00:19:04.520
do all of your main
pages in razor, and you

360
00:19:04.520 --> 00:19:07.490
could say maybe spark is
more appropriate for your email

361
00:19:07.490 --> 00:19:10.910
generation or Yeah. And in
fact, razor is actually going

362
00:19:10.910 --> 00:19:12.410
to be very good for
those kinds of scenarios as

363
00:19:12.410 --> 00:19:15.680
well, because much like spark
it's a fully hosted will.

364
00:19:15.980 --> 00:19:17.750
And by that, I mean,
you can write a console

365
00:19:17.750 --> 00:19:21.830
app that makes use of
razor and Andrew nurse. The

366
00:19:22.100 --> 00:19:25.640
developer on razor has I
think a really great blog

367
00:19:25.670 --> 00:19:27.860
posts that he needs to
update, but for the latest

368
00:19:27.860 --> 00:19:29.870
version, but he has a
blog post about how you

369
00:19:29.870 --> 00:19:33.800
could like use a razor
template to generate, you know,

370
00:19:33.800 --> 00:19:37.550
something using a console app.
So not tied to asp.net

371
00:19:37.580 --> 00:19:42.140
to too tightly In the
past. Microsoft doesn't really make

372
00:19:42.140 --> 00:19:45.140
things that component, like just
that scenario, like the idea

373
00:19:45.140 --> 00:19:46.220
that, Oh yeah. And I
might want to do this

374
00:19:46.220 --> 00:19:50.170
outside, you know, in kind
of classic asp.net. And in

375
00:19:50.200 --> 00:19:52.690
the old days, it's not
quite that, that component. Is

376
00:19:52.700 --> 00:19:55.070
that something that you are
pushing as the feature PM

377
00:19:55.070 --> 00:19:57.920
or is there like an
idea virus that's finally reached

378
00:19:57.920 --> 00:20:02.300
inside of Microsoft? That's saying
make stuff reusable. I think,

379
00:20:02.360 --> 00:20:04.010
I think it's a little
bit of both. I'd like

380
00:20:04.010 --> 00:20:06.020
to take credit for all
of that, but I think

381
00:20:06.050 --> 00:20:10.850
the, I think that idea
was already there. I think

382
00:20:10.850 --> 00:20:13.550
that idea had kind of
started to take hold and

383
00:20:13.940 --> 00:20:15.620
I think that's why people
like me were brought in

384
00:20:15.620 --> 00:20:19.010
to kind of perpetuate that
idea right. And to push

385
00:20:19.010 --> 00:20:21.410
for that, the ability and
a lot of that is

386
00:20:21.410 --> 00:20:24.770
driven by simple little things.
Like we want people to

387
00:20:24.770 --> 00:20:26.870
be able to write unit
tests of their code, right?

388
00:20:26.870 --> 00:20:30.680
You just like, you know,
Values, you're expressing a value

389
00:20:30.680 --> 00:20:33.530
like that as a team,
we value these things, Hey,

390
00:20:33.530 --> 00:20:36.590
this, our customers value TDD
and they want to be

391
00:20:36.590 --> 00:20:39.410
able to do it without
too much friction. Right. So

392
00:20:39.410 --> 00:20:41.330
when you have those values,
then these things kind of

393
00:20:41.330 --> 00:20:44.420
fall out of it. Right?
Well, I can't write a

394
00:20:44.450 --> 00:20:47.120
unit test of my view
code if my view code

395
00:20:47.410 --> 00:20:50.230
these deep hooks into the
runtime that have to be

396
00:20:50.230 --> 00:20:53.380
present in order for that
code to even run. And

397
00:20:53.380 --> 00:20:55.540
that's what, that's the situation
you find yourself in with

398
00:20:55.930 --> 00:20:59.890
web form view engines, unfortunately
for legacy reasons. And so

399
00:20:59.890 --> 00:21:03.250
with razor though, we don't
have that legacy baggage as

400
00:21:03.250 --> 00:21:05.710
much of that legacy baggage.
So we can take a

401
00:21:05.710 --> 00:21:07.600
look and say, well, can
we make this more of

402
00:21:07.600 --> 00:21:11.080
a library that's callable from
any context, rather than having

403
00:21:11.080 --> 00:21:18.090
this deep coupling between asp.net
and razor. So switching gears

404
00:21:18.090 --> 00:21:22.370
a little bit, speaking of
reuse, I'm thinking the, the,

405
00:21:22.370 --> 00:21:25.650
the previously the, what was
called the new pack project

406
00:21:25.800 --> 00:21:29.100
and has now been renamed
to new get, and you

407
00:21:29.110 --> 00:21:32.280
G T and we'll hopefully
have all that updated new

408
00:21:32.280 --> 00:21:35.550
get.org, and that'll redirect you
to the appropriate places. Yep.

409
00:21:35.730 --> 00:21:40.260
Is that is shipping in
NBC or so New is

410
00:21:40.260 --> 00:21:42.900
really interesting in terms of
how it shipping. It will

411
00:21:42.900 --> 00:21:46.290
be included as part of
MVC three in the sense

412
00:21:46.290 --> 00:21:49.920
that when you install asp.net,
MVC three, you will have

413
00:21:49.950 --> 00:21:55.380
a new pack installed. You'll
get new, get gotcha. Yeah.

414
00:21:55.410 --> 00:21:57.780
We had to rename it
because there's a group at

415
00:21:57.780 --> 00:22:01.590
Caltech that has a nucleic
acid package. And while we

416
00:22:01.590 --> 00:22:04.560
didn't think that they really
conflicted, they do conflict. Cause

417
00:22:04.560 --> 00:22:07.230
they're both software packages and
they made a very kind

418
00:22:07.230 --> 00:22:09.840
request. And we were, you
know, since this is the

419
00:22:09.840 --> 00:22:12.300
beginning of something, the outer
curve foundation that owns the

420
00:22:12.300 --> 00:22:15.120
new pack name said, let's
switch that over. Yeah. So

421
00:22:15.660 --> 00:22:17.580
Provide context for those who
don't know what the heck

422
00:22:17.580 --> 00:22:19.560
is a good point. What
are we talking about? The

423
00:22:19.560 --> 00:22:22.160
outer curve foundation. Yeah. It's
not the outer space foundation.

424
00:22:22.170 --> 00:22:24.090
Yes. So there's a bunch,
a bunch of weird naming

425
00:22:24.090 --> 00:22:28.110
stuff going on code. I
always thought copex.com was where

426
00:22:28.110 --> 00:22:31.650
you put your source and
copex.org for organization as the

427
00:22:31.650 --> 00:22:35.070
organization. I thought that was
crystal clear. Apparently I'm the

428
00:22:35.070 --> 00:22:37.620
only guy who thinks that
crystal clear that that using

429
00:22:37.620 --> 00:22:40.680
a top level domain is
you can't see this, but

430
00:22:40.680 --> 00:22:43.530
I'm shaking my head. Yeah.
I know. So code plex.org,

431
00:22:43.560 --> 00:22:46.410
the foundation for open source,
which has not a Microsoft

432
00:22:46.410 --> 00:22:50.340
thing, it's a separate organization,
renamed themselves to the outer

433
00:22:50.490 --> 00:22:53.190
curve foundation, outer curve. Say
what you like about the

434
00:22:53.190 --> 00:22:57.050
name? That's what they renamed.
Coincidentally at the, in a,

435
00:22:57.050 --> 00:22:59.310
in a similar timeframe within
a couple of weeks, the

436
00:22:59.550 --> 00:23:01.470
guys at Caltech were like,
Hey, we have a thing

437
00:23:01.470 --> 00:23:02.940
called new pack. We've had
it for five or six

438
00:23:02.940 --> 00:23:05.340
years. You know, I know
you think it doesn't conflict.

439
00:23:05.340 --> 00:23:07.770
We think it does. And
then we had just started

440
00:23:08.340 --> 00:23:11.340
new pack, the package management
system. We said, well, we'll

441
00:23:11.340 --> 00:23:13.590
change. It did a bunch
of votes. A lot of

442
00:23:13.590 --> 00:23:16.410
different names went by and
we changed it to new,

443
00:23:16.410 --> 00:23:20.010
get new, get. Yep. What
about new guests? That's really,

444
00:23:20.010 --> 00:23:22.800
I think interesting is that
new get is a fully

445
00:23:22.800 --> 00:23:25.530
open source project. We assigned
it over to the outer

446
00:23:25.530 --> 00:23:30.330
curve foundation and that means
we can accept contributions. So

447
00:23:30.420 --> 00:23:33.050
unlike, you know, ESPN MC,
which, you know, not w

448
00:23:33.050 --> 00:23:35.970
we can't accept contributions, you
know, code contribution from people

449
00:23:35.970 --> 00:23:40.200
yet, but with new pack
as new, get how this

450
00:23:40.200 --> 00:23:42.660
is gonna take a long
time. I know I wanted

451
00:23:42.660 --> 00:23:45.830
to call it like Phil
get or hack pack. I

452
00:23:45.830 --> 00:23:50.020
like tack pack backpack. Some
people said a goop pack.

453
00:23:50.830 --> 00:23:53.530
Yeah. Yeah. Cause, cause that's
the legend that anything that

454
00:23:53.530 --> 00:23:55.840
we release got goo wrote
on an airplane the day

455
00:23:55.840 --> 00:23:58.360
before, but I pointed out,
it sounds like boop, boop,

456
00:23:58.390 --> 00:24:01.060
goop Peck now. Okay. So
new get is an open

457
00:24:01.060 --> 00:24:03.790
source project. Yeah. Open source
projects. We accept contributions from

458
00:24:03.790 --> 00:24:07.990
the community and yes, we
have core features as well.

459
00:24:08.440 --> 00:24:11.230
So we've had real features
implemented that will ship. And

460
00:24:11.230 --> 00:24:13.930
here's the best part. This
is we'll ship within visual

461
00:24:13.930 --> 00:24:16.540
studio at some point. That's
cool. Yeah. It's interesting. I

462
00:24:16.540 --> 00:24:19.690
upgraded to a new build
last night and noticed that

463
00:24:19.690 --> 00:24:21.580
one of the main dialogue
boxes like, Oh, you know,

464
00:24:21.580 --> 00:24:24.430
a whole feature within tools,
options inside of visual studio

465
00:24:24.550 --> 00:24:27.430
had changed. So I chatted
one of the guys who

466
00:24:27.430 --> 00:24:30.370
is my Microsoft developer working
on the project and congratulated

467
00:24:30.370 --> 00:24:32.020
him. And he said, no,
no, a guy in the

468
00:24:32.020 --> 00:24:35.050
community did all that. And
that's going to take awhile

469
00:24:35.050 --> 00:24:37.030
getting used to, I know
that we're a little bit,

470
00:24:37.240 --> 00:24:39.340
Microsoft is a little bit
late to the open source

471
00:24:39.340 --> 00:24:42.970
game, but I hope that
this is going to represent

472
00:24:43.030 --> 00:24:46.150
a whole new opening of
open source, you know, at

473
00:24:46.150 --> 00:24:49.360
Microsoft, You know, there, there,
there are those who will

474
00:24:49.360 --> 00:24:51.760
criticize well, you know, Microsoft's
coming really late to the

475
00:24:51.760 --> 00:24:53.890
open source game, but at
the same time, you know,

476
00:24:53.920 --> 00:24:55.840
it is Microsoft. And the
fact that they're coming at

477
00:24:55.840 --> 00:24:58.060
all is I think a
good thing. And the fact

478
00:24:58.060 --> 00:25:00.430
that we're pushing it forward.
I mean, when I joined

479
00:25:00.460 --> 00:25:03.130
almost nothing was open source
at Microsoft at the same

480
00:25:03.130 --> 00:25:06.940
time. Yeah. Roughly, yeah. You're
three months, Three years. I'm

481
00:25:06.950 --> 00:25:10.600
three years this month. So
I was three years sober.

482
00:25:10.780 --> 00:25:14.860
You're more than no October 15th.
You're right. I joined three

483
00:25:14.860 --> 00:25:17.530
years last week and I
joined in July. So I'm

484
00:25:17.540 --> 00:25:19.810
three years in some change
and some change. Yep. Okay.

485
00:25:19.810 --> 00:25:22.390
Yeah. And we were trying
to turn, turn this giant

486
00:25:22.570 --> 00:25:25.780
battleship around as long as
with other people like Lynn

487
00:25:25.780 --> 00:25:29.020
block and, and Garrett Surak
and lots and lots of

488
00:25:29.020 --> 00:25:32.230
different people, but we're all
little people trying to turn

489
00:25:32.230 --> 00:25:35.470
this thing around. It's, it's
a, you know, it's, I

490
00:25:35.470 --> 00:25:38.710
think what really helps is
that we have a big

491
00:25:38.710 --> 00:25:41.190
gun, you know, who's, who's
interested in seeing this happen.

492
00:25:41.230 --> 00:25:43.960
Right, Right. More and more
bosses, at least within our

493
00:25:43.960 --> 00:25:47.320
division, get it, get it
before it's like just the

494
00:25:47.320 --> 00:25:49.570
lowly people. And then it's
the general manager and then

495
00:25:49.570 --> 00:25:52.180
it's the vice president and
you just spread that idea

496
00:25:52.180 --> 00:25:54.040
virus around. And now that
we've got what we call

497
00:25:54.040 --> 00:25:57.790
an at Microsoft air cover,
right. Air cover means that

498
00:25:58.300 --> 00:26:00.400
someone who's really high up
at the company thinks what

499
00:26:00.400 --> 00:26:02.920
you're doing is a good
idea. Now that we all

500
00:26:02.920 --> 00:26:05.560
have air cover. I hope
that we see more opensource.

501
00:26:05.560 --> 00:26:08.200
Yep. Yeah. And I think
new get really fits well

502
00:26:08.200 --> 00:26:11.530
into this movement. And what
new get does is let's

503
00:26:11.530 --> 00:26:16.090
say, let's say I have
a I'm building, I'm developing

504
00:26:16.090 --> 00:26:19.150
a project, a web application,
and I want to get

505
00:26:19.210 --> 00:26:21.700
a really cool library. I
heard about, you know, Elma

506
00:26:21.790 --> 00:26:24.970
is one example, right? Delegating
error, logging modules, and handlers

507
00:26:25.060 --> 00:26:30.040
Elma, Very creatively named. And
so there's a lot of

508
00:26:30.040 --> 00:26:32.800
steps. Just incorporate that library
into my project. You know,

509
00:26:32.800 --> 00:26:34.450
I need to put it
in some folder. I need

510
00:26:34.450 --> 00:26:37.540
to find it, download it.
You know, if I download

511
00:26:37.540 --> 00:26:42.130
it with IE or Chrome,
unblock it, you know, put

512
00:26:42.130 --> 00:26:45.150
the DLL in a known
location at a project reference

513
00:26:45.150 --> 00:26:47.070
to that. And if I'm
a web app, I need

514
00:26:47.070 --> 00:26:49.650
to add some config sections
to my web dot config

515
00:26:49.680 --> 00:26:53.610
file for a library like
fluent and hibernate. There's even

516
00:26:53.610 --> 00:26:56.880
more steps where fluent and
hibernate itself has dependencies on

517
00:26:56.880 --> 00:27:01.170
other libraries, which may themselves
have dependencies. So we have,

518
00:27:01.350 --> 00:27:03.450
so, you know, you have
to track all these dependencies

519
00:27:03.480 --> 00:27:06.660
and then, then you run
into the situation where that

520
00:27:06.660 --> 00:27:08.550
I run to working on
an open source project called

521
00:27:08.550 --> 00:27:12.120
Subutex, where now that I'm
using 15 of these third

522
00:27:12.120 --> 00:27:16.080
party, open source libraries, and
I'm ready to release the

523
00:27:16.080 --> 00:27:19.050
next version of my project.
How to, how the heck

524
00:27:19.050 --> 00:27:21.420
do I know which ones
need to be updated? Right.

525
00:27:21.660 --> 00:27:23.280
Like I go to, what
I used to do is

526
00:27:23.280 --> 00:27:24.930
I go to each one,
I, I searched for the

527
00:27:24.930 --> 00:27:27.300
project page and I try
to find, Oh yeah, there's

528
00:27:27.300 --> 00:27:29.940
a new one. Okay. I'll
grab it. Oh, well, how

529
00:27:29.940 --> 00:27:32.280
does that change? My dependency
change and all that. Right.

530
00:27:32.490 --> 00:27:36.590
So new games Is going
to new guests Attempts to

531
00:27:36.590 --> 00:27:39.590
solve this problem. The lack
of a dotnet package manager

532
00:27:39.590 --> 00:27:41.960
has been a huge problem
for years. And there's been

533
00:27:41.960 --> 00:27:44.810
a number of attempts in
the community before new get

534
00:27:44.810 --> 00:27:47.450
like end jam and horn
and different things, as well

535
00:27:47.450 --> 00:27:50.270
as new a project that
was doing the same thing

536
00:27:50.270 --> 00:27:53.000
with Ruby gems. And then
also now open wrap, which

537
00:27:53.000 --> 00:27:56.630
can consume new get feeds.
So there's a lot of

538
00:27:56.630 --> 00:27:59.120
interesting work happening in package
management right now, and a

539
00:27:59.120 --> 00:28:01.160
lot of collaboration and we're
going to be hosting a

540
00:28:01.160 --> 00:28:05.390
feed of all of this
stuff. Yup. Yup. And hopefully

541
00:28:05.390 --> 00:28:06.970
in the next few months,
we'll see that kind of

542
00:28:07.160 --> 00:28:10.370
more details emerge. Yep. So
currently we have a temporary

543
00:28:10.370 --> 00:28:12.080
fee that you can go
to and you can put

544
00:28:12.080 --> 00:28:14.330
your packages up there to
test them out and you

545
00:28:14.330 --> 00:28:18.140
can download these things, but
there's a separate project that's

546
00:28:18.140 --> 00:28:22.220
underway that will produce a
full fledged gallery for packages.

547
00:28:22.520 --> 00:28:25.610
And that gallery source code
we'll be hosting our gallery,

548
00:28:25.660 --> 00:28:29.180
our official new get gallery.
But that source code will

549
00:28:29.180 --> 00:28:31.400
also be given out as
an open source project. So

550
00:28:31.400 --> 00:28:33.590
anyone who wants to host
their own feed can make

551
00:28:33.590 --> 00:28:35.660
use of it. Cool. And
of course you can also

552
00:28:35.660 --> 00:28:39.050
make a gallery of your
own inside your company on

553
00:28:39.050 --> 00:28:41.090
a, on a file share
somewhere and just say, there's

554
00:28:41.090 --> 00:28:44.390
all the packages. That's correct.
So, which is a really

555
00:28:44.390 --> 00:28:45.920
nice feature of new pack
is that you can just

556
00:28:46.130 --> 00:28:49.340
drop, take a folder, share,
drop a few files in

557
00:28:49.340 --> 00:28:54.140
there and a new pack
again, new get caught me.

558
00:28:54.440 --> 00:28:56.630
Yeah. So you drop some
files in there and then

559
00:28:56.630 --> 00:29:01.940
you just add in the
new, get dialogue options, dialog,

560
00:29:01.970 --> 00:29:04.730
you can add a set
of packaged sources, right. And

561
00:29:04.730 --> 00:29:07.430
that source can be a
URL like HB, colon, whatever.

562
00:29:07.460 --> 00:29:10.970
Yeah. Or it can be,
you know, C colon slash

563
00:29:10.970 --> 00:29:14.300
packages on your local machine
or slash slash you know,

564
00:29:14.300 --> 00:29:17.900
computer name slash. So even
internally at your own company,

565
00:29:17.900 --> 00:29:21.680
you could share closed source
packages that your enterprise shares.

566
00:29:21.710 --> 00:29:24.980
If you felt like it,
I've already known. The big

567
00:29:24.980 --> 00:29:26.930
enterprise has moved into that
direction where they have a

568
00:29:26.930 --> 00:29:29.720
lot of like internal libraries
that are very specific to

569
00:29:29.720 --> 00:29:34.370
their projects and that they're
now moving to using new

570
00:29:34.370 --> 00:29:41.590
get to. Okay, cool. So
NVC three release candidate we'll

571
00:29:41.590 --> 00:29:45.130
include part Of this and
then they can go and

572
00:29:45.130 --> 00:29:47.250
get it themselves at code
plus. Yup. You can go

573
00:29:47.250 --> 00:29:49.680
to covid.com and you can
build from source. And we'll

574
00:29:49.680 --> 00:29:53.070
also put out the leases
updates to the visual studio

575
00:29:53.070 --> 00:29:55.350
extension gallery. Okay. And then
in the future, at some

576
00:29:55.350 --> 00:29:57.780
point when all the ducks
are in a row, this

577
00:29:57.780 --> 00:30:01.260
will be available for visual
studio in some future update.

578
00:30:01.590 --> 00:30:04.770
Yeah. So it will be
when it will roll into

579
00:30:04.770 --> 00:30:08.220
visual studio is when the
next version of MVC rolls

580
00:30:08.220 --> 00:30:12.390
into visuals. CDO. Alright. Very
cool. Thank you, Phil. Thank

581
00:30:12.390 --> 00:30:14.880
you. Alright, let's go. It's
PDC a week here at

582
00:30:14.880 --> 00:30:17.130
the Microsoft campus. So let's
go do our meet and

583
00:30:17.130 --> 00:30:18.720
greet and have some pizza.
Cause that's what we're doing

584
00:30:18.720 --> 00:30:20.760
right now. All right. Let's
do it. This has been

585
00:30:20.760 --> 00:30:23.580
another episode of Hansel minutes.
I'll see you again next

586
00:30:23.580 --> 00:30:23.820
week.

