WEBVTT FILE

1
00:00:12.150 --> 00:00:16.680
From Hanselman it's dot com.
It's Hanselman. It's a weekly

2
00:00:16.680 --> 00:00:20.760
discussion with web developer and
technologist and Scott Hanselman hosted

3
00:00:20.760 --> 00:00:25.230
by Carl Franklin. This is Lauren's
Ryan announcing show number one

4
00:00:25.230 --> 00:00:31.680
41. Recorded live Thursday, December 4th, 2008.
Support for Hanselman it's just

5
00:00:31.680 --> 00:00:36.060
provided by Tellerik rad controls.
The most comprehensive suite of

6
00:00:36.060 --> 00:00:45.990
components for windows forms and
asp.net web applications. online@wwwdottelerik.com. Support

7
00:00:45.990 --> 00:00:49.680
is also provided by document
developers journal the world's leading.net

8
00:00:49.690 --> 00:00:56.460
developer magazine online at www
dot <inaudible> dot com. In

9
00:00:56.460 --> 00:00:59.850
this episode, Scott talks coding
for fun with Dan Fernandez

10
00:00:59.880 --> 00:01:04.620
and Brian peak. Hi, this
is Scott Hanselman and this

11
00:01:04.620 --> 00:01:07.410
is another episode of Hansel
minutes. And in this very

12
00:01:07.410 --> 00:01:10.080
special episode of Hansel minutes,
we're talking to Dan Fernandez,

13
00:01:10.080 --> 00:01:12.480
my good buddy from coding
for fun and from channel

14
00:01:12.480 --> 00:01:15.600
nine and Brian peak. How's
it going guys? Hey, how's

15
00:01:15.600 --> 00:01:20.820
it going? So you have
taken the coding for fun,

16
00:01:20.850 --> 00:01:24.870
the sweeping the nation, and
you have squeezed it and

17
00:01:24.870 --> 00:01:27.750
turned it into a book
for fun and profit. Hopefully

18
00:01:27.750 --> 00:01:30.050
you're gonna make piles of
money on this thing. Yeah,

19
00:01:30.050 --> 00:01:33.260
we're, we're looking at tens
and hundreds of dollars, potentially

20
00:01:33.950 --> 00:01:38.150
Hundreds of dollars, a Chipotle
coupon out of this as

21
00:01:38.750 --> 00:01:41.360
some kind of a gift
card writing a book does

22
00:01:41.360 --> 00:01:45.050
not make a lot of
money. Correct. So, so Dan

23
00:01:45.530 --> 00:01:48.740
coding for fun is a,
was a site on MSDN.

24
00:01:48.740 --> 00:01:50.990
And now it's more of
a blog. When did this

25
00:01:50.990 --> 00:01:53.570
start? This was a couple
of years ago. Yeah. So

26
00:01:53.570 --> 00:01:57.140
this was a, a couple
of years ago, Brian Keller and

27
00:01:57.140 --> 00:02:01.190
I started coding for fun
duck and McKenzie used to

28
00:02:01.190 --> 00:02:04.760
have an article dedicated to
coding for fun. And it,

29
00:02:04.780 --> 00:02:08.990
it really is okay. We're,
we're done at developers. What

30
00:02:08.990 --> 00:02:11.750
ways, what are the interesting
ways that we can use

31
00:02:11.990 --> 00:02:17.390
our.net skills to build interesting
applications? So that, that would

32
00:02:17.390 --> 00:02:20.840
be things like, wow, could
I actually hack, you know,

33
00:02:20.840 --> 00:02:23.750
world of Warcraft and, and
make it such that I

34
00:02:23.750 --> 00:02:27.140
can input data in BB
or C-sharp or what could

35
00:02:27.140 --> 00:02:32.300
I do to actually borrow
videos from YouTube using by

36
00:02:32.300 --> 00:02:35.660
downloading them and converting them
from flashed video into a

37
00:02:35.670 --> 00:02:38.900
MP4, and then, you know,
interfacing with the iTunes, which

38
00:02:38.900 --> 00:02:43.040
is one of the projects
in the book. It's again,

39
00:02:43.040 --> 00:02:46.460
it's fun, cool things that
you can do. And the

40
00:02:46.460 --> 00:02:48.470
simpler all in BB and
C sharp in the book,

41
00:02:48.470 --> 00:02:51.920
but it's it that's really
the, the, the thinking behind

42
00:02:51.920 --> 00:02:54.080
coding for fun. The site
is how do we do

43
00:02:54.080 --> 00:02:56.240
like the killer stuff? The
things that you watch on,

44
00:02:56.300 --> 00:03:00.340
on YouTube, whether it's the
remote videos that are really

45
00:03:00.340 --> 00:03:04.260
popular, et cetera. And this
is not just for professional

46
00:03:04.800 --> 00:03:08.400
programmers, but this is for,
for hobbyists, for anyone, Right?

47
00:03:08.400 --> 00:03:12.390
Exactly. It's people that have
a passion for building fun,

48
00:03:12.390 --> 00:03:18.720
cool stuff, or, you know,
interfacing with games, hardware, building

49
00:03:18.720 --> 00:03:22.950
cool utility or productivity applications,
or, or even doing April

50
00:03:22.950 --> 00:03:26.310
fool's day pranks. Now, who
do you pull from when,

51
00:03:26.580 --> 00:03:29.670
as source material from, for
the coding for fun blog,

52
00:03:29.700 --> 00:03:34.260
you just, will you take
articles from anyone We do.

53
00:03:35.070 --> 00:03:39.570
We probably get, I'd say
a five or 10 articles

54
00:03:39.600 --> 00:03:43.050
a year from people. I
think the challenge is with

55
00:03:43.080 --> 00:03:45.330
a lot of people is
they have the ideas, but

56
00:03:45.330 --> 00:03:49.170
their projects always sort of
50% complete and they never

57
00:03:49.170 --> 00:03:53.220
get around to actually finishing
the project and publishing an

58
00:03:53.220 --> 00:03:56.070
article about it. But yeah,
we do take external authors

59
00:03:56.070 --> 00:04:00.000
as well as regular contributors,
like Brian peek and Clint

60
00:04:00.000 --> 00:04:03.240
Rutgers. And you used to
be one as well. Yeah,

61
00:04:03.240 --> 00:04:04.440
I did. I did a
bunch of them, but we

62
00:04:04.560 --> 00:04:07.050
had a thing called some
assembly required, but I think

63
00:04:07.050 --> 00:04:08.760
that you just called out
the point that I had

64
00:04:08.760 --> 00:04:10.200
trouble with is that I
could always get things to

65
00:04:10.200 --> 00:04:13.380
50%. I mean, I'm, I'm
looking at a laptop that

66
00:04:13.380 --> 00:04:16.830
is attached to a Roomba
with a rubber band on

67
00:04:16.830 --> 00:04:18.720
the Roomba. I actually got
from you out of storage

68
00:04:19.260 --> 00:04:21.390
and it's about 50% there.
You know, it goes forward

69
00:04:21.390 --> 00:04:24.690
and backwards, but there's, there's
just issues. And I haven't

70
00:04:24.690 --> 00:04:27.090
quite had the, you know,
the weekend or however long

71
00:04:27.090 --> 00:04:30.630
it's gonna take to dedicate
myself to finishing that thing.

72
00:04:30.630 --> 00:04:33.450
It's just so easy to
get it to halfway right

73
00:04:33.870 --> 00:04:36.000
now that the book though,
the book are complete, these

74
00:04:36.000 --> 00:04:40.320
are all totally complete. You
can build these yourself kind

75
00:04:40.320 --> 00:04:44.370
of projects. Yeah, exactly. And
the projects are available. You

76
00:04:44.370 --> 00:04:47.220
know, they're open stores, they're
either on code plaques or

77
00:04:47.220 --> 00:04:50.190
our book site, which is
C the number four F

78
00:04:50.550 --> 00:04:54.420
book.com. You can just download,
even if you didn't like

79
00:04:54.420 --> 00:04:56.910
the book, you can actually
download the projects and play

80
00:04:56.910 --> 00:05:00.210
with them. And there's Okay.
So what are some of

81
00:05:00.210 --> 00:05:02.520
the more difficult projects that
you've got in the book?

82
00:05:05.940 --> 00:05:07.470
I'll talk about some of
the ones that I've worked

83
00:05:07.470 --> 00:05:09.510
on, and then I'll let
Brian peak talked about some

84
00:05:09.510 --> 00:05:12.060
of the ones he had.
So one of the ones

85
00:05:12.060 --> 00:05:14.670
I was working on his
inner tube, and it's the

86
00:05:14.670 --> 00:05:17.910
one where I explained earlier,
I love YouTube. I want

87
00:05:17.910 --> 00:05:20.250
to be able to download
videos, but not just download

88
00:05:20.250 --> 00:05:22.070
one at a time. Cause
that that's pretty easy. And

89
00:05:22.070 --> 00:05:24.540
there are tools I actually
want to download entire feeds

90
00:05:24.540 --> 00:05:27.510
of videos. Like what are
the top videos this week,

91
00:05:27.780 --> 00:05:30.240
top rated videos? What are
the most favorited videos? What

92
00:05:30.240 --> 00:05:32.850
are the most shared? Let
me download all of those.

93
00:05:32.880 --> 00:05:36.780
And, you know, the actual
downloading of the stuff we're

94
00:05:36.780 --> 00:05:39.420
using link for XML to
get the data and then

95
00:05:39.420 --> 00:05:42.750
to actually download the videos.
Well, a YouTube video is,

96
00:05:42.780 --> 00:05:46.140
you know, about 10 megs
say on average, but if

97
00:05:46.140 --> 00:05:49.770
you have three feeds and
each of those has 25

98
00:05:49.770 --> 00:05:54.660
videos, then you're downloading, you
know, 750 megabytes onto your

99
00:05:54.660 --> 00:05:57.380
drive. So there's a number
of things that had to

100
00:05:57.380 --> 00:06:00.500
do using a utility called
the smart thread pool to

101
00:06:00.500 --> 00:06:06.980
actually download those asynchronously and
download every single thumbnail image.

102
00:06:07.010 --> 00:06:10.910
And, and the behavior of
their performance is actually different

103
00:06:10.910 --> 00:06:14.030
where you want to use
less threads for downloading the

104
00:06:14.030 --> 00:06:16.430
thumbnails cause they're relatively small.
And you actually do a

105
00:06:16.430 --> 00:06:19.790
lot of context switching versus
using more threads that download

106
00:06:19.790 --> 00:06:23.450
the videos. And even once
you have 750 megabytes of

107
00:06:23.450 --> 00:06:25.910
those videos, those are flash
videos. You need to convert

108
00:06:25.910 --> 00:06:30.710
them to WMV, to play
them, say in Zune and

109
00:06:30.710 --> 00:06:34.310
to iTunes, you need to
convert them to MP4. So

110
00:06:34.310 --> 00:06:39.080
then you're converting another 750
megabytes videos into, you know,

111
00:06:39.080 --> 00:06:43.010
1.5 gigabytes videos and then
deleting the other flash videos

112
00:06:43.010 --> 00:06:46.070
and doing this all asynchronously
in the background and being

113
00:06:46.070 --> 00:06:48.620
able to do it was
really, really large files. And

114
00:06:48.620 --> 00:06:51.440
think about the, the threading
was some of the fun

115
00:06:51.440 --> 00:06:55.240
challenges that we had. And
this is just trying to

116
00:06:55.240 --> 00:06:58.510
do this whole thing. One
button simple, right? Exactly. It's

117
00:06:58.720 --> 00:07:01.630
at a feed and then
click download now. And obviously

118
00:07:01.630 --> 00:07:05.320
it does take some time,
but once you download the

119
00:07:05.320 --> 00:07:07.000
flash video, we see if
it's already there. So it

120
00:07:07.000 --> 00:07:09.370
doesn't read, download the video
and it checks kind of

121
00:07:09.370 --> 00:07:12.340
what part you are in
the steps. So even if

122
00:07:12.340 --> 00:07:15.370
you do need to disconnect,
it's sort of smart about

123
00:07:16.060 --> 00:07:17.950
restarting it again. It's not
going to force you to

124
00:07:17.950 --> 00:07:21.370
download all those videos again,
That doesn't YouTube. Try to

125
00:07:21.370 --> 00:07:23.740
keep you from doing that.
Doesn't that qualify as leaching

126
00:07:23.740 --> 00:07:27.370
or not necessarily not necessarily
stealing. I mean, I guess

127
00:07:27.370 --> 00:07:29.740
watching a video, isn't really
no different than downloading it,

128
00:07:29.740 --> 00:07:32.200
but don't, they have some
authorization to prevent you from

129
00:07:32.200 --> 00:07:35.200
doing this. Yeah. That was
some of the other fun

130
00:07:35.200 --> 00:07:37.990
stuff is, is how do
you work around the limitation?

131
00:07:38.000 --> 00:07:41.410
So it turns out if
you actually go to a

132
00:07:41.410 --> 00:07:44.080
feed to download the flash
video by itself, the URL,

133
00:07:44.110 --> 00:07:47.670
it doesn't actually work. What
happens is you need a,

134
00:07:47.670 --> 00:07:49.930
an authentication token. And we
talked about this in the

135
00:07:49.930 --> 00:07:52.300
book, how to do it,
but literally we had to

136
00:07:52.300 --> 00:07:55.540
do a screen scrape of
a, of an HTML page

137
00:07:55.570 --> 00:07:58.660
look where they're building the
flash video in an object

138
00:07:58.660 --> 00:08:04.750
tag and read in JavaScript
variables in C-sharp just by

139
00:08:04.750 --> 00:08:08.740
doing some text parsing, read
out that, that JavaScript authentication

140
00:08:08.740 --> 00:08:11.290
token, then that same URL
to download the video will

141
00:08:11.290 --> 00:08:13.360
actually work as long as
you pass in the token

142
00:08:13.360 --> 00:08:16.840
as well. Okay. So you're
really simulating the same interaction

143
00:08:16.840 --> 00:08:19.780
that happens when someone hits
it with their browser. Right.

144
00:08:19.780 --> 00:08:23.980
Exactly. Very cool. Okay. And
how long did that take

145
00:08:23.980 --> 00:08:29.490
you? You know, I had
probably a 50% version in

146
00:08:29.890 --> 00:08:31.930
2004 and then I just
started to go a little

147
00:08:31.930 --> 00:08:37.510
crazy on the features and
probably a couple of weeks,

148
00:08:38.350 --> 00:08:40.630
especially in terms of writing
and some of the visual

149
00:08:40.630 --> 00:08:43.360
basic porting and some of
the other stuff that, that

150
00:08:43.750 --> 00:08:46.180
didn't make it into the
book just for length. But

151
00:08:46.660 --> 00:08:48.580
for example, one of the
things we have and it'll

152
00:08:48.580 --> 00:08:50.320
be available as a download
is how to use the

153
00:08:50.320 --> 00:08:52.900
windows scheduler. So that way
you almost have like a

154
00:08:52.900 --> 00:08:55.440
TiVo, rather than you needing
to launch inner tube, press

155
00:08:55.440 --> 00:08:58.110
a button, you can use
the windows scheduler and actually

156
00:08:58.110 --> 00:09:00.660
schedule that application to run
and to download the video.

157
00:09:00.670 --> 00:09:03.120
So that way you'll have
the videos, you know, you're

158
00:09:03.120 --> 00:09:06.330
about to get on a
plane, you know, Scott's going

159
00:09:06.330 --> 00:09:08.970
to South Africa, wouldn't it be
great if he had all

160
00:09:08.970 --> 00:09:12.990
his favorite YouTube videos are
automatically downloaded without him having

161
00:09:12.990 --> 00:09:16.430
to press the button. That's
cool. That's cool. Of course,

162
00:09:16.830 --> 00:09:18.830
after you go to all
this work, they'll like, they'll

163
00:09:18.830 --> 00:09:21.440
go and build this into
like the Zune software iTunes,

164
00:09:21.440 --> 00:09:24.320
and it'll just work automatically.
But until then I can

165
00:09:24.320 --> 00:09:26.600
have this delivered directly to
my, to my MP three

166
00:09:26.600 --> 00:09:29.030
player just by running your
stuff as a scheduled task

167
00:09:29.030 --> 00:09:32.990
and, and synchronizing when I
sync my player. Yeah, exactly.

168
00:09:32.990 --> 00:09:36.380
And, and we also show
how iTunes actually has their

169
00:09:36.380 --> 00:09:41.300
own SDK and you can
automate iTunes within BB or

170
00:09:41.300 --> 00:09:45.980
C-sharp code. You literally just
add their Tom object. And

171
00:09:45.980 --> 00:09:48.440
even in the iTunes, SDK
includes VB and C sharp

172
00:09:48.440 --> 00:09:50.630
samples. So we can show
you, like, if you just

173
00:09:50.630 --> 00:09:53.330
wanted to, to have that
application and know how to

174
00:09:53.360 --> 00:09:56.840
hack iTunes or automate iTunes,
you can do that as

175
00:09:56.840 --> 00:10:01.650
well. Rock on. Cool. So
what kind of hardware did,

176
00:10:01.940 --> 00:10:07.080
did you work on Brian
Chapters that deal with the

177
00:10:07.220 --> 00:10:09.650
moat? So a one chapter
allows you to build a

178
00:10:09.650 --> 00:10:12.680
remote controlled car, which he
can drive around your house.

179
00:10:12.710 --> 00:10:17.750
I don't know everybody. Mmm.
The Johnny Chung Lee with

180
00:10:17.750 --> 00:10:21.680
his Waymo. Hi, this is
Scott Hanselman with a word

181
00:10:21.680 --> 00:10:23.930
from our sponsor. Do you
know how to build web

182
00:10:23.960 --> 00:10:28.100
2.0 Ajax applications with web
1.0 components? You really can't.

183
00:10:28.160 --> 00:10:30.140
If you want to do
the next generation web applications

184
00:10:30.470 --> 00:10:33.110
you'll need next generation components.
Just like the ones that

185
00:10:33.110 --> 00:10:35.780
our friends at Telerik have
got their rad controls for

186
00:10:35.780 --> 00:10:38.720
ESPN and Ajax. It's a
huge pack of web controls

187
00:10:38.720 --> 00:10:43.010
built on top of asp.net,
Ajax that lab previously impossible

188
00:10:43.010 --> 00:10:46.970
performance interactivity to your next
project. The new controls mirror,

189
00:10:46.970 --> 00:10:50.930
the Ajax API from asp.net.
So development is really straightforward.

190
00:10:51.650 --> 00:10:54.020
The client scripture shared. So
loading time is not a

191
00:10:54.020 --> 00:10:56.420
problem. If you just set
a couple of properties and

192
00:10:56.420 --> 00:10:58.690
you'll be able to automatically
bind a web services for

193
00:10:58.700 --> 00:11:03.050
really efficient operation, the new
rad editor from ESPN Ajax,

194
00:11:03.050 --> 00:11:06.440
Telerik loads up to four
times faster than before. And

195
00:11:06.440 --> 00:11:08.930
the new rad grid handles
thousands of records and just

196
00:11:08.930 --> 00:11:12.110
milliseconds, but as always, it's
best to try for yourself.

197
00:11:12.740 --> 00:11:15.740
So you can visit <inaudible>
dot com slash ASP, net

198
00:11:15.740 --> 00:11:21.110
Ajax, and download a trial.
Thanks a lot. Now I

199
00:11:21.110 --> 00:11:23.570
know who Johnny Chung Lee
is, but for those listeners

200
00:11:23.570 --> 00:11:26.990
that aren't aware of the,
the godlike figure and the

201
00:11:27.000 --> 00:11:30.050
shed long shadow that Johnny
Chung Lee casts on us

202
00:11:30.050 --> 00:11:34.340
all who is Johnny Chung.
Lee Is a, is actually

203
00:11:34.340 --> 00:11:37.460
just a, a, I think
he was a master student

204
00:11:39.080 --> 00:11:42.960
PhD. Was he a PhD?
Okay. Yeah. Actually, no Microsoft,

205
00:11:44.000 --> 00:11:50.090
No way. Yes. We hired
John Shanley. Yes, dude. Who

206
00:11:50.090 --> 00:11:52.670
does it Applied? Sciences team.
Talk about a win, huh?

207
00:11:53.080 --> 00:11:56.640
Wow. I did Not know
that. Yes. True story. Excellent.

208
00:11:56.790 --> 00:12:00.870
That's awesome. He, he created
a couple of videos, a

209
00:12:00.870 --> 00:12:05.250
couple of projects that used
the remote essentially backwards from

210
00:12:05.250 --> 00:12:07.260
the way it's supposed to
be used. So we most

211
00:12:07.260 --> 00:12:09.120
got a little IRR sensor
on the front of it,

212
00:12:09.120 --> 00:12:11.370
which you point at your
television. And there's that little

213
00:12:11.370 --> 00:12:13.320
bar that you sit on
top of your TV. And

214
00:12:13.740 --> 00:12:16.560
it can kind of determine
where the we mode is.

215
00:12:16.620 --> 00:12:20.220
You know, what direction it's
pointing at the television set.

216
00:12:21.510 --> 00:12:22.890
And what he decided to
do was to take the

217
00:12:22.890 --> 00:12:26.100
we mode and put that
essentially on top of the

218
00:12:26.100 --> 00:12:32.400
television set and then move
around IRR LEDs. So his

219
00:12:32.400 --> 00:12:35.550
two examples of this is
one is putting IRR LEDs,

220
00:12:35.580 --> 00:12:38.910
essentially on glasses with a
piece of software running on

221
00:12:38.910 --> 00:12:40.830
the television so that when
you move your head around,

222
00:12:40.830 --> 00:12:44.550
you're actually getting a head
tracking. So you can actually

223
00:12:44.550 --> 00:12:47.520
see the targets in his
example, that screen move around

224
00:12:47.520 --> 00:12:49.860
as your head moves around,
which gives this really interesting

225
00:12:49.860 --> 00:12:53.550
3d perspective on what's happening
on the screen. Now, if

226
00:12:53.550 --> 00:12:55.200
I remember correctly, the, one
of the things that he

227
00:12:55.200 --> 00:12:57.900
did was really creative was
that he took the remote.

228
00:12:57.990 --> 00:12:59.620
He lashed it to the
top of the screen, and

229
00:12:59.620 --> 00:13:01.770
then he got an IRR.
He built an array of

230
00:13:01.770 --> 00:13:05.520
IRR, like an IRI emitter
array by going to radio

231
00:13:05.520 --> 00:13:07.280
shack and getting like, I
don't remember what it was.

232
00:13:07.290 --> 00:13:09.930
There's like 30 little IRR
deals. You made like a

233
00:13:09.930 --> 00:13:14.220
donut stuck the remote through
it so that the IRA

234
00:13:14.220 --> 00:13:18.960
would shoot towards you. The
person reflect off of you.

235
00:13:18.960 --> 00:13:21.870
And then back into the
we mode. Yes, He did

236
00:13:21.870 --> 00:13:25.860
a, almost like it was,
it was a multitouch without

237
00:13:25.860 --> 00:13:27.780
touch where you kind of
have to have a little

238
00:13:27.930 --> 00:13:30.240
reflectors on your fingers that
would, that would reflect that

239
00:13:30.240 --> 00:13:33.420
I light being shined at
you. So you can actually

240
00:13:33.420 --> 00:13:35.580
manipulate objects on the screen
using your hands kind of

241
00:13:35.580 --> 00:13:39.360
like a minority report style
interface. Yeah. So, so he

242
00:13:39.360 --> 00:13:42.450
did this by interfacing with
the remote, which speaks Bluetooth.

243
00:13:42.450 --> 00:13:45.560
How do you talk to
a wee mode Is, is

244
00:13:45.570 --> 00:13:49.770
a, an almost 100% compatible
Bluetooth device. It doesn't support

245
00:13:49.770 --> 00:13:52.920
everything that Bluetooth does. So
it's a little awkward to

246
00:13:52.920 --> 00:13:55.830
get connected to your, to
your PC sometimes. But the

247
00:13:55.830 --> 00:13:57.450
fact that it is Bluetooth
does allow you to pair

248
00:13:57.450 --> 00:13:59.810
it with a PC. And
I don't know, buddy you're

249
00:13:59.810 --> 00:14:01.560
year and a half ago,
I wrote a library called

250
00:14:01.590 --> 00:14:04.290
remote live, which is up
on code flex that allows

251
00:14:04.290 --> 00:14:08.430
you to use the remote
from any dotnet application. So

252
00:14:08.430 --> 00:14:11.640
it's a little C-sharp and
DB source code that provides

253
00:14:11.640 --> 00:14:14.550
a pretty simple API. And
it's an event based API

254
00:14:14.550 --> 00:14:18.120
that will notify you anytime.
Anything changes on the remote,

255
00:14:18.120 --> 00:14:20.340
any state. And it works
with all the extension controllers

256
00:14:20.340 --> 00:14:23.730
and the balance board. So
you can use it to

257
00:14:23.730 --> 00:14:26.100
do some cool stuff like
Johnny did. Now, why is

258
00:14:26.100 --> 00:14:28.500
it almost, what's the, what's
the trick when you say

259
00:14:28.530 --> 00:14:32.640
almost compatible, that means, you
know, totally incompatible. I mean,

260
00:14:32.760 --> 00:14:36.660
if it's 99% compatible, then
it's 1% completely incompatible. What

261
00:14:36.660 --> 00:14:41.070
kind of issues They're like,
if you have like a,

262
00:14:41.070 --> 00:14:43.350
like a Bluetooth headset and
you turn off your phone

263
00:14:43.350 --> 00:14:45.210
and turn off the headset
and you turn everything back

264
00:14:45.210 --> 00:14:49.050
on everything, repairs, nicely, the
Waymo doesn't support a mechanism

265
00:14:49.050 --> 00:14:50.400
like that. I mean, it's,
it's kind of part of

266
00:14:50.400 --> 00:14:53.630
Bluetooth, but it's, it's not
there on the, we mode.

267
00:14:54.770 --> 00:14:57.410
There are also some other
lower level type things where

268
00:14:57.410 --> 00:14:59.960
you should be able to
ask the controller what things

269
00:14:59.960 --> 00:15:03.440
it supports and get back
these hid reports and whatnot.

270
00:15:03.440 --> 00:15:05.900
And they're, they're mostly complete,
but it doesn't, they're not

271
00:15:05.900 --> 00:15:08.720
quite following the standard because
the only thing that we

272
00:15:08.720 --> 00:15:10.400
mowed ever needs to connect
to is a, is a

273
00:15:10.400 --> 00:15:12.860
we and Nintendo controls both
sides of that. So they

274
00:15:12.860 --> 00:15:17.030
don't really need to implement
the standard fully, but enough

275
00:15:17.060 --> 00:15:19.760
reverse engineering work has been
done such that we can

276
00:15:19.760 --> 00:15:22.070
get around those limitations and
actually use it on a

277
00:15:22.070 --> 00:15:25.480
PC. Pretty cool that, that,
that, that they've got, they

278
00:15:25.480 --> 00:15:27.010
at least use an open
standard to the point where

279
00:15:27.010 --> 00:15:30.930
we could do something. Absolutely.
So what, what API is,

280
00:15:30.940 --> 00:15:32.680
are you using in your
library? Are you, are you

281
00:15:32.920 --> 00:15:36.000
kind of sinking into the
Bluetooth stack or what, what

282
00:15:36.010 --> 00:15:37.120
do you have to do
if I want to set

283
00:15:37.120 --> 00:15:40.420
this up today, It's actually
the, it remains pretty much

284
00:15:40.420 --> 00:15:43.060
entirely outside of Bluetooth when
after, after you pair the

285
00:15:43.060 --> 00:15:45.490
Bluetooth after, after you paired
the remote to your PC,

286
00:15:45.910 --> 00:15:48.790
it'll show up as an
hid compliant via human interface

287
00:15:48.790 --> 00:15:53.980
device. So using the hid
APIs that are built into

288
00:15:53.980 --> 00:15:57.820
windows, you can essentially enumerate
through all the hid devices

289
00:15:57.820 --> 00:16:00.310
that are on the PC,
find the one that is

290
00:16:00.310 --> 00:16:03.760
the remote, and then you
essentially open a, a, a

291
00:16:03.790 --> 00:16:06.970
file handle to it. And
it's a matter of writing

292
00:16:06.970 --> 00:16:09.850
bytes to it and reading
bytes from it, asynchronously and

293
00:16:09.850 --> 00:16:13.180
converting those packets of data
into something usable. So you

294
00:16:13.180 --> 00:16:15.160
mean like, like when you
say a file handle, you're

295
00:16:15.160 --> 00:16:18.250
saying that you're going and
using the standard file, open

296
00:16:18.250 --> 00:16:21.220
APIs, and you're saying, I
think it's like backslash backslash,

297
00:16:21.250 --> 00:16:25.360
backslash dot something, something, yep.
It's a user create file

298
00:16:25.360 --> 00:16:27.340
to a, to open a
handle to it. And it's

299
00:16:27.340 --> 00:16:31.210
got a very, very long
pad name, which is, which

300
00:16:31.210 --> 00:16:34.480
is the hardware ID, according
to the according to windows.

301
00:16:35.680 --> 00:16:39.790
Wow. And you've, you've taken
this all in and encapsulated

302
00:16:39.790 --> 00:16:41.140
it in your SDK so
that I don't have to

303
00:16:41.140 --> 00:16:43.600
think about that. Now, The
only thing, if you, you

304
00:16:43.600 --> 00:16:46.120
need to pair your remote
and create an instance of

305
00:16:46.120 --> 00:16:48.340
the object and called connect,
and then you hook up

306
00:16:48.370 --> 00:16:50.650
one event and that event
gives you every bit of

307
00:16:50.650 --> 00:16:53.830
information about the remote. Wow.
Now, how hard is that

308
00:16:53.830 --> 00:16:55.960
to think about? I know
that I'm a person where

309
00:16:55.960 --> 00:16:57.610
X and Y makes a
lot of sense, but then

310
00:16:57.610 --> 00:17:01.330
you start talking about pitch
and yaw. What do I

311
00:17:01.330 --> 00:17:03.100
need to study and learn
about in order to be

312
00:17:03.100 --> 00:17:05.830
able to effectively make the
we mode? Let me use

313
00:17:05.830 --> 00:17:09.910
it in like quake or
something. Not a whole lot.

314
00:17:09.910 --> 00:17:13.120
I mean, there's, there's, there
are two important, well, actually

315
00:17:13.150 --> 00:17:15.340
three important pits of data
that come back to you

316
00:17:15.340 --> 00:17:19.570
every a hundred times a
second, essentially, there's the, if

317
00:17:19.570 --> 00:17:21.430
you have the IRR camera
turned on, it's the X

318
00:17:21.430 --> 00:17:24.310
and Y position of up
to four IRR LEDs that

319
00:17:24.310 --> 00:17:28.960
it sees. So it's just
standard two dimensional coordinates. You've

320
00:17:28.960 --> 00:17:31.210
got the accelerometer data, which
is going to be a

321
00:17:31.210 --> 00:17:35.140
value between negative one and
one a that's not actually

322
00:17:35.140 --> 00:17:36.640
true. Cause you can actually
add what the is between

323
00:17:36.640 --> 00:17:38.800
negative one and one when
only the Earth's gravity is

324
00:17:38.800 --> 00:17:40.600
acting upon it. But if
you start to, to actually

325
00:17:40.600 --> 00:17:43.660
pro you know, provide motion
to it and throw it

326
00:17:43.660 --> 00:17:45.970
and move it around, you're
accelerating it. And so the,

327
00:17:45.970 --> 00:17:48.370
the gravity becomes higher and
so you'll get higher values,

328
00:17:48.370 --> 00:17:50.520
but you're going to get,
you know, three numbers and

329
00:17:50.520 --> 00:17:53.190
X and Y and Z.
So you can determine which

330
00:17:53.190 --> 00:17:58.320
way it's tilted, because if
it's lying flat, the, the

331
00:17:58.350 --> 00:18:00.660
pitch will be zero. And
as you tilt it up

332
00:18:00.660 --> 00:18:02.700
to a vertical position, the
pitch will go from zero

333
00:18:02.700 --> 00:18:04.320
to one. And then as
you move it around, you'll

334
00:18:04.320 --> 00:18:06.090
start to get higher values.
And that way you can

335
00:18:06.090 --> 00:18:11.220
determine if it's being shaped,
she can shake, shook the

336
00:18:11.220 --> 00:18:17.460
past tense to shake, right?
Not with a huge deal

337
00:18:17.460 --> 00:18:19.380
of accuracy, but you can,
you know, at least 10

338
00:18:19.380 --> 00:18:22.680
configure out in which direction
it's moving. And the third

339
00:18:22.680 --> 00:18:24.150
bit that you get, or
just the state of the

340
00:18:24.150 --> 00:18:26.280
button. So, you know, is
the a button being held

341
00:18:26.280 --> 00:18:28.710
down or is the D
pad, you know, up being

342
00:18:28.710 --> 00:18:33.060
pressed down. So you're going
to get float values back

343
00:18:33.060 --> 00:18:36.080
into your values back and
bullying's back. So Now, which

344
00:18:36.170 --> 00:18:38.750
there are two remote projects,
there's a remote control car

345
00:18:38.750 --> 00:18:41.900
and then a virtual earth
one, No, there's the Waymo

346
00:18:42.110 --> 00:18:45.560
car. And the Johnny Lee. He
actually wrote the chapter. It's

347
00:18:45.570 --> 00:18:50.600
the, his whiteboard, Oh, really
A third project that he

348
00:18:50.600 --> 00:18:52.130
did, which is up on
his side that allows you

349
00:18:52.130 --> 00:18:56.720
to take a and modify
a, a dry erase board

350
00:18:56.720 --> 00:18:59.390
marker and put an IRR
led in the end of

351
00:18:59.390 --> 00:19:02.060
it. And you shine a
wee mote and a projector

352
00:19:02.060 --> 00:19:05.660
at a screen. And then
you, your marker has a

353
00:19:05.660 --> 00:19:07.460
little led on it. You
push the button, it turns

354
00:19:07.460 --> 00:19:10.070
the led on and the
remote can then track where

355
00:19:10.070 --> 00:19:12.470
it is on the screen.
And at the same time,

356
00:19:12.470 --> 00:19:15.350
the PC is projecting the
image onto that screen. So

357
00:19:15.350 --> 00:19:18.320
you can, you know, paint
on the screen or click

358
00:19:18.920 --> 00:19:22.220
buttons, move the mouse, cursor,
et cetera. Wow. Now how

359
00:19:22.220 --> 00:19:24.680
practical are these things? I
mean, they're, they're fun. And

360
00:19:24.680 --> 00:19:26.840
I watched them on, on
YouTube. And I think this

361
00:19:26.840 --> 00:19:29.690
is amazing, but is this
to the point where somebody

362
00:19:29.690 --> 00:19:31.490
who's listening could go and
build one of these and

363
00:19:31.490 --> 00:19:34.430
suddenly changed the way they,
they, they work at their,

364
00:19:34.640 --> 00:19:36.350
maybe they have a software
company and they, they really

365
00:19:36.680 --> 00:19:39.200
want to a whiteboard, but
they don't want to spend

366
00:19:39.200 --> 00:19:43.850
$10,000 for it. With people
that have taken Johnny's base

367
00:19:43.850 --> 00:19:46.190
ID and his original source
code and turned them into

368
00:19:46.190 --> 00:19:52.700
pretty fully functional. We emote
whiteboards, electronic whiteboards fuel expanded

369
00:19:52.700 --> 00:19:55.610
it to use multiple remotes.
So in case you wind

370
00:19:55.610 --> 00:19:57.740
up standing in front of
it and blocking the camera

371
00:19:58.340 --> 00:20:00.710
a second or third or
fourth, Waymo will pick up

372
00:20:00.710 --> 00:20:03.080
the Slack and determine, you
know, where things are on

373
00:20:03.080 --> 00:20:07.070
spring and keep it all
in sync left, right? Middle

374
00:20:07.100 --> 00:20:13.670
button mouse, clicking special software
for, for, it's just, I

375
00:20:13.670 --> 00:20:16.040
I've, I've seen some, some
amazing leaders, something there's one

376
00:20:16.510 --> 00:20:19.250
boon gin is his name,
create something called the remote

377
00:20:19.250 --> 00:20:22.760
smooth board, which is one
of the better implementations of

378
00:20:22.760 --> 00:20:24.800
the whiteboard. And he actually
contributed a bit to the

379
00:20:24.800 --> 00:20:27.080
book with his smoothing algorithms
and whatnot. So you can

380
00:20:27.080 --> 00:20:30.220
actually get nice, beautiful curves
as you're drawing with your,

381
00:20:30.220 --> 00:20:35.180
your IRR light pen. And
I, I bought a friend

382
00:20:35.180 --> 00:20:38.060
of mine. He had, and
I'm trying to remember what

383
00:20:38.060 --> 00:20:41.180
college he is at, but
they actually took this and

384
00:20:41.180 --> 00:20:43.490
integrate it with a piece
of software they have for

385
00:20:44.360 --> 00:20:48.430
doing mind mapping or any
of great Creek flowcharts and

386
00:20:48.430 --> 00:20:50.680
link ideas together and whatnot.
So as you're standing in

387
00:20:50.680 --> 00:20:52.540
a meeting, as people are
throwing out ideas, you can

388
00:20:52.540 --> 00:20:54.520
write them up on the
board and connect them in

389
00:20:54.520 --> 00:20:57.580
ways using this as an
electronic whiteboard. So the whole

390
00:20:57.580 --> 00:20:59.920
audience can see it at
once and we're actually interacting

391
00:20:59.920 --> 00:21:02.820
with the stuff on the
screen. Very cool. And all

392
00:21:02.840 --> 00:21:05.200
the source is in the
book. What else is in

393
00:21:05.200 --> 00:21:08.140
the book that someone would
get that they couldn't find

394
00:21:08.140 --> 00:21:11.670
on the web? There's a
number of projects that, that

395
00:21:11.880 --> 00:21:15.690
aren't on coding for fun
now. And don't have the,

396
00:21:15.690 --> 00:21:18.930
how tos, like inner tubes,
a good example. Another one

397
00:21:18.930 --> 00:21:22.350
we had done, which was
peer cast, which is using

398
00:21:22.400 --> 00:21:26.760
a windows protocol called peer
name, resolution protocol P NRP.

399
00:21:27.180 --> 00:21:30.000
And what it allows you
to do is actually join

400
00:21:30.000 --> 00:21:34.110
an ad hoc peer network,
almost like a custom mesh,

401
00:21:34.110 --> 00:21:37.800
if you will, and exchange
information. So like you want

402
00:21:37.800 --> 00:21:39.960
to be able to stream
videos that you recorded on

403
00:21:39.960 --> 00:21:43.050
your windows media center. You
install a peer cast on

404
00:21:43.050 --> 00:21:45.420
there, and then you from
anywhere in the world can

405
00:21:45.420 --> 00:21:48.630
connect up on the, on
the internet. Assuming you have

406
00:21:48.660 --> 00:21:51.000
a network that supports P
and RP, which is probably

407
00:21:51.060 --> 00:21:54.780
the big part, and actually
watch your videos anywhere in

408
00:21:54.780 --> 00:21:59.640
the world. Very cool. And
this is Through firewalls because

409
00:21:59.640 --> 00:22:04.440
that's one of the things
that PNR piece, Huh? Other

410
00:22:04.440 --> 00:22:08.970
ones are, we have probably
a less sophisticated one, but

411
00:22:08.970 --> 00:22:11.760
it's using pop fly and
building a two D game.

412
00:22:12.060 --> 00:22:16.650
It turns out Lego has
this software called Lego digital

413
00:22:16.650 --> 00:22:19.500
designer. And what it allows
you to do is actually

414
00:22:19.500 --> 00:22:23.300
build custom Lego models and
you can then export them

415
00:22:23.550 --> 00:22:28.680
as images. And we actually
use build silver light characters

416
00:22:28.740 --> 00:22:32.310
in pop fly and build
a, to do game we're

417
00:22:32.320 --> 00:22:36.210
actually sort of battling underground
facilities to destroy an evil

418
00:22:36.210 --> 00:22:45.150
scientist. Exactly. So, so a
number of the projects, the

419
00:22:45.150 --> 00:22:48.750
only way to get the
contacts is with, with the

420
00:22:48.750 --> 00:22:51.090
book and even then the
other ones, like I'd say,

421
00:22:51.750 --> 00:22:54.990
Johnny's, there's a number of
different updates. And we know

422
00:22:54.990 --> 00:23:00.360
the source code works and
drawings, and we explanations of

423
00:23:00.360 --> 00:23:02.130
not only how the code
works, but how to set

424
00:23:02.130 --> 00:23:04.260
up the project. And a
number of them, the ones

425
00:23:04.260 --> 00:23:07.500
Bryan's have done are, are
step-by-step. So if you've never

426
00:23:07.500 --> 00:23:11.820
say built an X and
a game, it actually shows

427
00:23:11.820 --> 00:23:13.950
you step by step for
building your first X and

428
00:23:13.950 --> 00:23:16.810
a No X. And a
of course is the, is

429
00:23:16.810 --> 00:23:19.620
the game is the, the,
the graphics library for that,

430
00:23:19.770 --> 00:23:23.220
for the X-Box right. It's
for PC X-Box and Zune

431
00:23:23.340 --> 00:23:27.810
at the moment. Okay, cool.
Yep. The book it is.

432
00:23:28.050 --> 00:23:30.090
So the game was just,
I mean, it's a simple

433
00:23:30.090 --> 00:23:32.910
little, two dimensional space, invaders
clown, cause since a game

434
00:23:32.910 --> 00:23:36.330
that probably everyone recognizes, but
take you step by step

435
00:23:36.330 --> 00:23:40.110
on how to build the
entire game, you know, manage

436
00:23:40.110 --> 00:23:44.910
game state, manage your title,
screen, manage input sound for

437
00:23:44.930 --> 00:23:49.400
ethics, explosions, collision detection all
the way from beginning to

438
00:23:49.400 --> 00:23:51.740
end to create this simple
little game that runs on

439
00:23:51.740 --> 00:23:56.120
<inaudible> with all the graphics
and sound files and everything

440
00:23:56.120 --> 00:23:59.450
you need in order to
get started briefly. What are

441
00:23:59.450 --> 00:24:03.530
a couple of other projects
that you guys didn't work

442
00:24:03.530 --> 00:24:05.360
on personally, but that are
still in the book. There's

443
00:24:05.360 --> 00:24:09.770
Twitter vote, Twitter vote. That
was one. We all contributed

444
00:24:09.770 --> 00:24:11.990
to that one, but yeah,
we did it in some

445
00:24:11.990 --> 00:24:14.000
way, but that's the one
that was Clinton. Rutgers had

446
00:24:14.000 --> 00:24:18.650
started his primary project there,
which is a, a voting

447
00:24:18.650 --> 00:24:23.900
system for Twitter, where you
can use Twitter to pose

448
00:24:23.900 --> 00:24:26.630
a question to everyone that's
listening to you, and then

449
00:24:26.630 --> 00:24:29.690
they can reply back to
you, their answers to the

450
00:24:29.690 --> 00:24:31.640
poll that you've asked them,
for example, like what, what's

451
00:24:31.640 --> 00:24:33.740
your favorite video game console?
And you can give the

452
00:24:33.740 --> 00:24:37.910
options of, we PlayStation Xbox
three 60 and then everyone

453
00:24:37.910 --> 00:24:40.700
that's watching you on Twitter
can reply back with their

454
00:24:40.700 --> 00:24:44.720
answer. And we use a
pop fly to create a

455
00:24:44.720 --> 00:24:48.800
nice, pretty Silverlight graph that
displays the results. Anytime you

456
00:24:48.800 --> 00:24:51.950
want to view them. And
we actually use that in

457
00:24:51.950 --> 00:24:57.530
our coding for fun session
at a PBC, which can

458
00:24:57.530 --> 00:25:02.840
be downloaded. Right. I think
Scott, when the poll there

459
00:25:02.840 --> 00:25:07.190
too, unfortunately he did. I
voted for myself like 20

460
00:25:07.190 --> 00:25:11.000
times. Cool. All right. Well,
you can get the book

461
00:25:11.000 --> 00:25:22.370
at tiny url.com/website. Thank you
very much for talking to

462
00:25:22.370 --> 00:25:28.190
me about, this has been
another episode of Hanselminutes and

463
00:25:28.190 --> 00:25:29.210
we'll see you again next
week.

