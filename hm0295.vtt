WEBVTT FILE

1
00:00:12.120 --> 00:00:17.730
From hanselminutes.com. It's Hansel minutes.
Oh, weekly discussion with web

2
00:00:17.730 --> 00:00:22.710
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.710 --> 00:00:29.010
number two 95. Recorded live
Thursday, December 1st, 2011. Support for Hansel

4
00:00:29.010 --> 00:00:32.220
minutes is provided by teller
a D controls, the most

5
00:00:32.220 --> 00:00:35.640
comprehensive suite of components for
windows forms and asp.net web

6
00:00:35.640 --> 00:00:44.310
applications online@wwwdottelerik.com. In this episode
of the framework series, Scott

7
00:00:44.310 --> 00:00:50.330
talks with Rob Reynolds about
the Chuck Norris framework. Hi,

8
00:00:50.330 --> 00:00:52.010
this is Scott Hanselman, and
this is another episode of

9
00:00:52.010 --> 00:00:54.770
Hansel minutes. And today we're
kicking off another series. We

10
00:00:54.770 --> 00:00:57.710
did the startup series and
certainly as you have startups

11
00:00:57.710 --> 00:00:59.690
in them to me, but
I want to talk about

12
00:00:59.690 --> 00:01:02.630
frameworks. I wanna talk about
different people designing different frameworks.

13
00:01:02.630 --> 00:01:04.400
How do you know when
a framework's done? How do

14
00:01:04.400 --> 00:01:06.590
you know when a framework
is good? And how do

15
00:01:06.590 --> 00:01:08.750
you know when it's a
framework? So kicking off our

16
00:01:08.750 --> 00:01:11.780
framework series, we're going to
talk to Rob Reynolds. And

17
00:01:11.900 --> 00:01:14.210
he's also speaking on behalf
of drew sellers, his partner

18
00:01:14.210 --> 00:01:16.490
in crime, and they have
created something that they call

19
00:01:16.490 --> 00:01:19.910
the Chuck Norris framework. How's
it going? Rob, John Gray. How

20
00:01:19.910 --> 00:01:21.920
are you doing I'm very
well, thanks a lot for

21
00:01:21.920 --> 00:01:26.810
coming on the show up
at github.com/chuck Norris. And of

22
00:01:26.810 --> 00:01:28.010
course, I want to know
what you're going to do.

23
00:01:28.010 --> 00:01:30.380
When Chuck Norris tells you
not to use his name,

24
00:01:30.620 --> 00:01:34.100
I'm going to switch to
another famous Kung Fu artists

25
00:01:34.130 --> 00:01:36.380
is gonna become the jet
Lee framework or what's the

26
00:01:36.380 --> 00:01:40.190
flyer. And that's a good
question though. He's high, he's

27
00:01:40.190 --> 00:01:44.180
hardcore with the, with the
social media you watch after

28
00:01:44.180 --> 00:01:45.890
this talk chocolate be on
the phone with you. It's

29
00:01:45.890 --> 00:01:52.880
going to be awesome. If
he allows you to live,

30
00:01:52.880 --> 00:01:57.770
then I consider that a
win up at github.com/chuck Norris.

31
00:01:57.770 --> 00:01:59.750
You've got a thing called
the Chuck Norris framework, and

32
00:01:59.750 --> 00:02:01.820
it's kind of a, it
appears to be kind of

33
00:02:01.820 --> 00:02:06.320
a loosely Confederated group of
utilities that solve a bunch

34
00:02:06.320 --> 00:02:10.190
of different problems within the.net
ecosystem. It's all open source

35
00:02:10.190 --> 00:02:13.370
and they're all named after
different things that, that Chuck

36
00:02:13.370 --> 00:02:16.820
Norris would do like headlock
counterpunch roundhouse drop house drop,

37
00:02:16.820 --> 00:02:20.150
kick, and upper cut and
things like that. How did

38
00:02:20.150 --> 00:02:22.250
this, how did this start?
Take me back to when

39
00:02:22.250 --> 00:02:33.800
the initial concept came up
versus something you're just doing

40
00:02:33.800 --> 00:03:00.520
for yourself, drop build, but
not in the bad Sense.

41
00:03:03.100 --> 00:03:05.500
You basically, you bring in
stuff, you open up a

42
00:03:05.500 --> 00:03:08.830
settings file, you make a
couple of edits. And if

43
00:03:08.830 --> 00:03:11.680
you, the rest of the
file has your conventions in

44
00:03:11.680 --> 00:03:13.750
it. He closed that down
and you have yourself an

45
00:03:13.750 --> 00:03:17.010
automated bill. So it's not,
it's not like a cruise

46
00:03:17.010 --> 00:03:20.070
control or a team city,
but it's not like ms.

47
00:03:20.070 --> 00:03:23.820
Build, right. Is it set
between them? It's kind of

48
00:03:23.820 --> 00:03:27.480
like the ms. Build, right?
It's actually, it's, it's built

49
00:03:27.480 --> 00:03:32.130
on Nat. Oh, okay. So,
so Nat of course, people

50
00:03:32.130 --> 00:03:34.230
may or may not remember,
but Nat was the dotnet

51
00:03:34.230 --> 00:03:36.420
port of ant and Nant
is a build system that

52
00:03:36.420 --> 00:03:41.040
was used, you know, 2003
to 2006, really, really fervently

53
00:03:41.040 --> 00:03:45.570
and kind of no pun
intended and kind of when

54
00:03:45.660 --> 00:03:47.310
Emma's build came out, a
lot of people felt Emma's

55
00:03:47.310 --> 00:03:50.010
built killed Nant, but there's
still a lot of people

56
00:03:50.010 --> 00:03:52.920
using it. Cause it's an,
a very useful way to

57
00:03:52.920 --> 00:03:55.740
create a bill file. So
yours you're issuing and I

58
00:03:55.740 --> 00:04:00.180
spelled completely, right. There's no
EMIS build In this building.

59
00:04:01.230 --> 00:04:02.910
Of course, when you compile,
you always got to go

60
00:04:02.910 --> 00:04:06.030
down to like ms. Bill.
Okay. So you're not calling

61
00:04:06.030 --> 00:04:10.950
the compiler. Yes, No, no.
Somebody could get into that

62
00:04:11.010 --> 00:04:13.710
particular step, that compile step
and actually do a, an

63
00:04:13.710 --> 00:04:17.100
extension and replace it and
then just call CSC or

64
00:04:17.580 --> 00:04:20.940
VBC. I believe it is,
But why would I want

65
00:04:20.940 --> 00:04:22.560
to use, why would I
want to use something like

66
00:04:22.560 --> 00:04:24.750
this? If, if does, what
does this do to ms.

67
00:04:24.760 --> 00:04:27.810
Bill doesn't do, because whenever
someone is deciding to choose

68
00:04:27.810 --> 00:04:31.320
a framework, you know, they
have to figure out what

69
00:04:31.320 --> 00:04:34.890
kind of I would, I
was going to use the

70
00:04:34.890 --> 00:04:37.470
word ego, but, you know,
with any, with any open

71
00:04:37.470 --> 00:04:39.570
source software, there's ego involved.
And I don't mean like

72
00:04:39.570 --> 00:04:42.690
major capital ego, like, you
know, we're awesome. Use our

73
00:04:42.690 --> 00:04:45.450
framework, but there has to
be at least enough. We're

74
00:04:45.450 --> 00:04:50.100
awesome. Use our framework. That
is that, that, that, that

75
00:04:50.100 --> 00:04:52.950
justifies the existence of the
framework itself. Right? So you

76
00:04:52.950 --> 00:04:55.290
saw a problem that was
big enough that you said

77
00:04:55.380 --> 00:04:57.900
me and drew can solve
this. So you don't, you

78
00:04:57.900 --> 00:05:00.330
don't think ms. Bill by
itself does what you needed

79
00:05:00.330 --> 00:05:01.980
to do. So what does
this add on to that?

80
00:05:02.880 --> 00:05:06.030
Ms. Bill really is, it
gives you the idea of

81
00:05:06.030 --> 00:05:09.870
you have a compilation. So
in one sense of the

82
00:05:09.870 --> 00:05:12.090
word of Venice building, the
other sense is that you

83
00:05:12.090 --> 00:05:13.740
could use them as build
and you can write the

84
00:05:13.740 --> 00:05:17.190
project files and you can
set up your building. That's

85
00:05:17.190 --> 00:05:19.020
a very customized bill and
you're saying, I want to

86
00:05:19.380 --> 00:05:21.570
build it. I want to
run the test. I want

87
00:05:21.570 --> 00:05:23.460
to package it up really
nicely. Oh, well, I also

88
00:05:23.460 --> 00:05:27.000
want to do a version
of assembly, all right, here

89
00:05:27.000 --> 00:05:30.540
in this script. What if
we took that idea and

90
00:05:30.540 --> 00:05:32.850
we kind of a third
party that whole side. Right?

91
00:05:32.910 --> 00:05:34.830
And so I just bring
it in and all that

92
00:05:34.830 --> 00:05:37.200
stuff is already there. So
I don't have to rewrite

93
00:05:37.200 --> 00:05:41.850
the wheel every single time
I can just drop in

94
00:05:41.850 --> 00:05:45.060
the update. So I'm actually
upgrading my bill. And if

95
00:05:45.060 --> 00:05:47.760
I'm doing all my customizations
over here to the side,

96
00:05:47.790 --> 00:05:50.580
for that particular bill, then
I can really upgrade my

97
00:05:50.580 --> 00:05:54.960
ability to take advantage of
newer things really quickly. Okay.

98
00:05:54.960 --> 00:05:57.410
So is it like a
Boyce of boilerplate it's best

99
00:05:57.410 --> 00:06:02.210
practices it's builds in the
real world encapsulated into a

100
00:06:02.210 --> 00:06:08.020
series of best practices and
conventions, Right? And of course,

101
00:06:08.020 --> 00:06:12.190
yes, every framework we work
on is pretty much opinionated.

102
00:06:13.990 --> 00:06:17.560
Some we call that in
ego involved. Of course. So,

103
00:06:22.390 --> 00:06:24.400
yeah, if you, if you
don't have an opinion, you

104
00:06:24.400 --> 00:06:27.520
should probably not be writing
a framework, but I mean,

105
00:06:27.550 --> 00:06:30.250
there are very open frameworks
that allow you to build

106
00:06:30.250 --> 00:06:34.480
up your own opinions or
your own conventions. And there's

107
00:06:34.480 --> 00:06:37.300
definitely a place for that
in this build. Those are

108
00:06:37.300 --> 00:06:40.420
what I consider frameworks, but
they don't really have opinions

109
00:06:40.420 --> 00:06:42.460
on them. You kind of
add those in as you

110
00:06:42.460 --> 00:06:45.220
go. And so every kid
has kind of let's, let's

111
00:06:45.220 --> 00:06:49.180
put an opinion on something
and, you know, people do

112
00:06:49.180 --> 00:06:51.850
the same thing you do.
They run their bills, they

113
00:06:51.850 --> 00:06:54.760
run their tests, they run
any other type of analyzers.

114
00:06:54.820 --> 00:06:57.850
Then they start packaging up
that content and then, you

115
00:06:57.850 --> 00:07:00.790
know, have it prepared so
that they can actually deploy

116
00:07:00.790 --> 00:07:03.700
it. And it kind of
takes all that process for

117
00:07:03.700 --> 00:07:06.730
you. So you can just
focus on code. You don't

118
00:07:06.730 --> 00:07:10.990
have to focus on the
automated build as much also

119
00:07:10.990 --> 00:07:14.590
because it provides the build
dot bat file. Right? You

120
00:07:14.590 --> 00:07:19.270
can easily hook that into
Jenkins or TeamCity or cruise

121
00:07:19.270 --> 00:07:23.050
control. I think you've brought
up an interesting point in

122
00:07:23.050 --> 00:07:26.920
that you're, you're juxtaposing the
difference between a framework that

123
00:07:26.920 --> 00:07:29.770
exists, but doesn't impose its
opinions are really kind of,

124
00:07:31.210 --> 00:07:33.430
you know, wallow in them
and really declare we have

125
00:07:33.430 --> 00:07:35.320
lots of opinions and this
is what we think you

126
00:07:35.320 --> 00:07:39.670
should do. You gave a
couple of examples of frameworks

127
00:07:39.670 --> 00:07:41.440
without opinions. What are, what
are some others? I mean,

128
00:07:41.440 --> 00:07:43.060
do you think that something
like new get is an

129
00:07:43.060 --> 00:07:45.340
opinionated framework or it's just
kind of passive and then

130
00:07:45.340 --> 00:07:47.140
it allows you to build
your conventions on top of

131
00:07:47.140 --> 00:07:53.380
it? I think it's slightly
opinionated. I mean, the, the

132
00:07:53.380 --> 00:07:55.150
one, the one thing that
came out with new get

133
00:07:55.180 --> 00:07:57.940
when we brought that out
is everybody wanted to be

134
00:07:57.940 --> 00:08:01.840
able to change the law,
the packages folder and make

135
00:08:01.840 --> 00:08:04.450
it the live folder. Right?
So there was an opinion

136
00:08:04.450 --> 00:08:06.610
there saying, well, we really
want it to be this.

137
00:08:07.810 --> 00:08:11.110
And so I do think
it is a bit opinionated,

138
00:08:12.520 --> 00:08:15.490
but that said, I think
the opinions helped to set

139
00:08:15.490 --> 00:08:20.890
standards, right. That in that
development itself, I think is,

140
00:08:20.930 --> 00:08:23.860
is a little lacking in
like standards of, Hey, how

141
00:08:23.860 --> 00:08:26.830
do I, how do I,
you know, set up my

142
00:08:26.830 --> 00:08:29.170
source control? Do I put
a source folder here? Or

143
00:08:29.170 --> 00:08:31.480
do I just start putting
in projects all at this

144
00:08:31.480 --> 00:08:34.810
level, right. Where I think
other languages that are a

145
00:08:34.810 --> 00:08:37.690
little bit more opinionated and
they actually have a standard

146
00:08:37.690 --> 00:08:39.940
for how you set up
your, you know, your structure.

147
00:08:42.160 --> 00:08:43.780
Yeah. That's a really good,
that's a really good point.

148
00:08:43.780 --> 00:08:48.160
I've actually mentioned before that
I felt that the.net itself

149
00:08:48.190 --> 00:08:51.190
and the diamond framework, the
base class library, I thought

150
00:08:51.190 --> 00:08:53.920
was very opinionated. Then there
was a lot of thought

151
00:08:53.920 --> 00:08:56.400
put into the design of
the, although not everyone agrees

152
00:08:56.400 --> 00:08:58.800
with it, but for the,
for the, for the build

153
00:08:58.800 --> 00:09:01.350
system and the project references.
And like you said, even

154
00:09:01.350 --> 00:09:03.900
something as simple as where
do I put my files?

155
00:09:04.290 --> 00:09:09.210
There's really nothing. There's no
guidance. There's no, there's no

156
00:09:09.210 --> 00:09:12.120
opinion at all. Does that
exist in the Java world?

157
00:09:12.180 --> 00:09:14.010
I don't remember when I
was working in Java in

158
00:09:14.010 --> 00:09:16.380
the late nineties and the
early two thousands. I don't

159
00:09:16.380 --> 00:09:20.820
remember Java telling me where
to put stuff that that

160
00:09:20.820 --> 00:09:24.770
may have changed. I don't
know that I could speak

161
00:09:24.770 --> 00:09:28.130
intelligently on Java per se.
But what, what I understand

162
00:09:28.130 --> 00:09:30.650
is like, is it Maven
that will force you to

163
00:09:30.650 --> 00:09:33.650
put that in a certain
structure? Oh, a Maven is

164
00:09:33.650 --> 00:09:40.160
very, certainly Maven is very,
very opinionated, but Maven isn't

165
00:09:40.160 --> 00:09:42.920
Java and you know, it
wasn't all Maven didn't always

166
00:09:42.920 --> 00:09:45.320
exist, but of course that's
the sign of a good

167
00:09:45.320 --> 00:09:47.810
framework is one that comes
up and becomes ubiquitous. And

168
00:09:47.810 --> 00:09:49.460
then everyone thinks of it
as being one in the

169
00:09:49.460 --> 00:09:55.280
same. Yes, Absolutely. So is
all of the Chuck Norris

170
00:09:55.280 --> 00:09:58.160
framework, very opinionated or does,
is it just a just

171
00:09:58.160 --> 00:10:01.460
round house, not round house,
rather uppercut, sorry. I'm confusing.

172
00:10:01.460 --> 00:10:04.640
My Kung Fu or my
karate A drop kick is

173
00:10:04.640 --> 00:10:09.980
probably the least opinionated just
because it is the deployment

174
00:10:09.980 --> 00:10:13.460
framework and we're not going
to predispose to know how

175
00:10:13.460 --> 00:10:15.470
you're going to deploy your
code and how you're going

176
00:10:15.470 --> 00:10:18.200
to need, you know, everything
set up in your environment.

177
00:10:18.530 --> 00:10:20.660
And so we leave that
one as the most open,

178
00:10:22.220 --> 00:10:25.220
you may want to use
roundhouse and roundhouse is the

179
00:10:25.280 --> 00:10:27.680
database migrations from, if you
want to use your own,

180
00:10:28.040 --> 00:10:30.500
you know, migrations framework and
drop, cake's going to leave

181
00:10:30.500 --> 00:10:33.860
that wide open for you
to make that decision. You

182
00:10:33.860 --> 00:10:36.020
may want to, you know,
clean out all your code

183
00:10:36.020 --> 00:10:39.410
before you dump the new
stuff on. So you kind

184
00:10:39.410 --> 00:10:42.980
of build up your conventions
and in a deployment plan.

185
00:10:44.960 --> 00:10:47.360
Okay. So let's, let's, let's
go through the list a

186
00:10:47.360 --> 00:10:50.150
little bit. So we've got,
we've got uppercut, which is

187
00:10:50.150 --> 00:10:53.030
the build system. You have,
let me get this correct.

188
00:10:53.030 --> 00:10:56.750
The, the opinionated build system,
and then there's packages that

189
00:10:56.750 --> 00:10:59.030
could be plugged into uppercut.
So you can make it

190
00:10:59.030 --> 00:11:02.060
as opinionated as you want,
take it even farther in

191
00:11:02.060 --> 00:11:05.270
the direction that you want.
Then there's roundhouse, which is

192
00:11:05.270 --> 00:11:09.620
a migration tool that deals
with database migrations using SQL

193
00:11:09.620 --> 00:11:12.500
files and then kind of
versions of that. And it

194
00:11:12.740 --> 00:11:15.110
has to be reasonably opinionated
because it's setting up an

195
00:11:15.110 --> 00:11:21.530
entire way of doing database
migrations, right. Then there's drop

196
00:11:21.530 --> 00:11:24.320
kick. And that is a
deployment framework. So that's, once

197
00:11:24.320 --> 00:11:26.570
you've got your stuff built
and you're ready to deploy,

198
00:11:27.470 --> 00:11:28.910
that's what drop kick it.
And then you said that

199
00:11:28.910 --> 00:11:33.860
was the least. Yeah. Because
deployments are so different. I

200
00:11:33.860 --> 00:11:36.710
mean, everyone wants to do
things a different way. Yes,

201
00:11:37.250 --> 00:11:41.330
absolutely. Okay. And then there's
a couple of, of other

202
00:11:41.330 --> 00:11:46.460
smaller projects. Counterpunch headlock scheduling
tools, and then there's just

203
00:11:46.460 --> 00:11:50.420
base class library called Chuck,
how new is Chuck? And

204
00:11:50.420 --> 00:11:53.030
is that something that, that
you knew needed to exist?

205
00:11:53.170 --> 00:11:55.480
You started designing the framework
or did you kind of

206
00:11:55.900 --> 00:11:58.030
discover it and then realize
you needed to go and

207
00:11:58.030 --> 00:12:00.810
put some abstractions and stuff
up there? Actually, that was

208
00:12:00.810 --> 00:12:02.850
brought up by drew. As
we started to see an

209
00:12:02.850 --> 00:12:07.020
evolution of these tools, having
some of the same underlying

210
00:12:07.050 --> 00:12:09.570
items, we said, you know,
we really need like a

211
00:12:09.570 --> 00:12:13.470
base framework. That could be
the it. So if you

212
00:12:13.470 --> 00:12:16.950
think of like, what Nant
is, if you say that's

213
00:12:16.950 --> 00:12:18.810
just a library of a
whole bunch of tasks that

214
00:12:18.810 --> 00:12:21.780
somebody threw down, right. You
can think of chat the

215
00:12:21.780 --> 00:12:23.820
same way is that's just
a whole library. We just

216
00:12:23.820 --> 00:12:25.920
throw all the tasks, the
low level tasks that we

217
00:12:25.920 --> 00:12:28.650
do in there. And then
these frameworks build up on

218
00:12:28.650 --> 00:12:33.000
top of that. And so
what we've said, or what

219
00:12:33.000 --> 00:12:35.820
we've noted is that when,
when these frameworks reach a

220
00:12:35.850 --> 00:12:38.670
2.0 status, some of them
aren't even one point yet

221
00:12:39.030 --> 00:12:41.670
that they will use the
chug DLL. But until that

222
00:12:41.670 --> 00:12:44.580
time they they're welcome to
use what they're using. Now

223
00:12:46.050 --> 00:12:48.330
with the framework, we kind
of split out, you know,

224
00:12:49.590 --> 00:12:51.480
three works on several of
them and I worked on

225
00:12:51.480 --> 00:12:53.550
several of them. And then
we get together on some

226
00:12:53.550 --> 00:12:57.030
of them and pair together
to do some work on

227
00:12:57.030 --> 00:13:00.150
some of the frameworks. How
important do you think it

228
00:13:00.150 --> 00:13:02.640
is when someone designs a
framework to have a partner

229
00:13:02.640 --> 00:13:05.730
or a peer programmer that
really sees things the way

230
00:13:05.730 --> 00:13:08.760
that they see, because I've
always seen you and drew

231
00:13:08.760 --> 00:13:11.670
working together? Is that just
a coincidence because you work

232
00:13:11.670 --> 00:13:14.520
at the same company, or
did you find your, your

233
00:13:14.520 --> 00:13:18.690
soulmate in the coding world?
You know, I think drew

234
00:13:18.690 --> 00:13:21.780
seller's soulmate is Chris Patterson.
They worked together on the

235
00:13:21.780 --> 00:13:25.410
mass transit project, but the,
no, I think the coincidence

236
00:13:25.410 --> 00:13:28.770
there is we did work
together for probably three to

237
00:13:28.770 --> 00:13:34.050
four years. And I kinda
considered drew a mentor, really

238
00:13:34.050 --> 00:13:37.530
helped me kind of get
some, some great perspective on

239
00:13:37.530 --> 00:13:40.500
things that I probably wouldn't
have had. Otherwise it's really

240
00:13:40.500 --> 00:13:43.470
good. It's a great to
have a different perspective. So

241
00:13:44.040 --> 00:13:46.380
I think that when it
comes to frameworks, you have

242
00:13:46.380 --> 00:13:48.810
your perspective. Hopefully you can
get the perspective of the

243
00:13:48.810 --> 00:13:52.020
community as they start using
it, but it's really good

244
00:13:52.020 --> 00:13:54.120
to also be able to
just bounce ideas back and

245
00:13:54.120 --> 00:13:56.580
forth off of somebody. I
was gonna say a lot

246
00:13:56.580 --> 00:13:59.460
of these ideas, so like
counterfactual pretty much vaporware, but

247
00:13:59.460 --> 00:14:02.220
we've talked about it. It
was meant as a replacement

248
00:14:02.460 --> 00:14:05.400
for a scheduling tool that
we had a lot of

249
00:14:05.430 --> 00:14:07.530
pain and suffering in. And
a lot of the tools

250
00:14:07.530 --> 00:14:09.270
that we built is because
we had some pain or

251
00:14:09.270 --> 00:14:12.990
suffering problems to solve with
the chat North framework. I

252
00:14:12.990 --> 00:14:16.560
think the biggest thing for
us in the company that

253
00:14:16.560 --> 00:14:19.830
we worked together and was
that we had basically five

254
00:14:19.830 --> 00:14:22.860
levels of auditors and we
had to answer auditing questions

255
00:14:23.370 --> 00:14:25.590
and we needed tools that
could help us meet all

256
00:14:25.590 --> 00:14:30.330
these Sarbanes Oxley requirements. So
that's kind of where it

257
00:14:30.330 --> 00:14:32.460
came from the idea that
we could also make it

258
00:14:32.460 --> 00:14:37.050
fun and we can make
it very, very developer friendly

259
00:14:37.950 --> 00:14:42.090
and simple, simple was always
the goal Very, very briefly

260
00:14:42.120 --> 00:14:45.390
maybe mentioned what Sarbanes Oxley
is because it there's a

261
00:14:45.390 --> 00:14:50.220
constraint implied within frameworks like
that, like Sarbanes, Oxley, and

262
00:14:50.220 --> 00:14:54.350
other kind, federal guidelines for
doing things that could potentially

263
00:14:54.350 --> 00:14:56.930
inspire one to go and
make a framework. And I

264
00:14:56.930 --> 00:15:01.910
want to explore when, when
you might find yourself doing

265
00:15:01.910 --> 00:15:07.900
a framework because of some
unusual constraint at work Sarbanes-Oxley

266
00:15:08.170 --> 00:15:12.880
is really controls and auditing.
And it's trying to figure

267
00:15:12.880 --> 00:15:15.760
out who did what, when
and why. Right. And did

268
00:15:15.760 --> 00:15:17.380
they know what they were
doing when they did it?

269
00:15:17.650 --> 00:15:19.990
I guess that's the biggest
summary of that. I think

270
00:15:20.020 --> 00:15:22.390
the intent and that could
be wrong, but I think

271
00:15:22.390 --> 00:15:24.970
that's the biggest summary of
the intent for Sarbanes Oxley.

272
00:15:26.860 --> 00:15:29.410
And this is part of
your, the company that you

273
00:15:29.410 --> 00:15:31.360
work at. And I was
going to ask you when

274
00:15:31.360 --> 00:15:37.990
you're making a framework Since
moved on, Drew's also moved

275
00:15:37.990 --> 00:15:43.720
on to another position, but
yeah, look back fondly on

276
00:15:43.720 --> 00:15:49.060
the experience, of course, This
episode of Hansel minutes is

277
00:15:49.060 --> 00:15:51.190
brought to you by careers
2.0 and our friends at

278
00:15:51.190 --> 00:15:54.490
stack overflow careers, 2.0 is
the only career site dedicated

279
00:15:54.490 --> 00:15:57.640
to matching great developers with
great jobs and post your

280
00:15:57.640 --> 00:16:01.480
open dev positions on careers.
2.0 today, reach the entire

281
00:16:01.480 --> 00:16:05.800
development community, all 15 million monthly
visitors on stack overflow. The

282
00:16:05.800 --> 00:16:08.770
best part is you receive
exceptional candidates, not that massive

283
00:16:08.770 --> 00:16:11.440
pile of unqualified resumes that
you're used to waiting through

284
00:16:11.830 --> 00:16:14.350
will save you tons of
time and headaches. When you

285
00:16:14.350 --> 00:16:16.360
post your job, you can
even choose to receive a

286
00:16:16.360 --> 00:16:19.930
career candidates, careers profile, instead
of just their resume, making

287
00:16:19.930 --> 00:16:22.810
your candidates sorting even easier.
And the guys over at

288
00:16:22.810 --> 00:16:24.880
stack overflow believe in their
product so much that if

289
00:16:24.880 --> 00:16:27.490
you're not incredibly happy, they'll
refund your money. No questions

290
00:16:27.490 --> 00:16:30.460
asked. And to top it
off as a valued Hansel

291
00:16:30.460 --> 00:16:33.220
minutes listener, you'll get a
free stack overflow. T-shirt when

292
00:16:33.220 --> 00:16:36.010
you purchase a job listing
to get your free, t-shirt

293
00:16:36.010 --> 00:16:39.190
use the code Hansel minutes
and check it out on

294
00:16:39.190 --> 00:16:43.780
careers dot stack overflow.com. Once
again, that URL careers dot

295
00:16:43.780 --> 00:16:48.160
stack overflow.com. How much of
the framework was, was created

296
00:16:48.160 --> 00:16:51.010
based on the things that
we're trying to be imposed

297
00:16:51.010 --> 00:16:55.060
upon you by different regulations
is I trying to understand

298
00:16:55.060 --> 00:16:59.530
is they say necessity is
the mother of invention. You

299
00:16:59.530 --> 00:17:04.400
know, have you found that,
that you needed the, the

300
00:17:04.420 --> 00:17:07.450
pressure, the outside pressure and
the intense constraint from these

301
00:17:07.450 --> 00:17:11.050
different different systems to cause
you to create your own

302
00:17:11.050 --> 00:17:12.280
framework? Or do you think
you would have made your

303
00:17:12.280 --> 00:17:17.530
own framework? You know, I,
it's hard to say a

304
00:17:17.530 --> 00:17:19.960
lot of times we as
developers do things because we

305
00:17:19.960 --> 00:17:24.130
find an interesting problem area,
but sometimes, and probably most

306
00:17:24.130 --> 00:17:25.810
of the time we do
things because we're trying to

307
00:17:25.810 --> 00:17:29.590
meet some problem that we
have. Right. And so, you

308
00:17:29.590 --> 00:17:32.590
know, you'll find yourself if
you work on multiple frameworks,

309
00:17:32.590 --> 00:17:36.670
like I do, okay. I
need to concentrate here because

310
00:17:36.670 --> 00:17:38.890
it's going to solve this
need that I have now.

311
00:17:39.100 --> 00:17:41.890
Right. And so it's kind
of a prioritization thing. I

312
00:17:41.900 --> 00:17:44.920
really like to do that,
but this is more important.

313
00:17:44.920 --> 00:17:46.930
It's going to get me
to the point where I

314
00:17:46.930 --> 00:17:51.690
can solve this concern that
I have. And you both

315
00:17:51.690 --> 00:17:53.460
worked at the same company
when you started this. Right.

316
00:17:53.640 --> 00:17:56.460
And that was the company
that it had the unusual

317
00:17:56.460 --> 00:18:02.160
requirements. Yes. When, when you're
working for a company and

318
00:18:02.160 --> 00:18:06.630
you're making your framework in
response to some of the

319
00:18:06.630 --> 00:18:10.800
constraints around that company, I've
always wondered if the bosses,

320
00:18:10.800 --> 00:18:15.000
if the suits care or
understand that you are opinionated.

321
00:18:15.570 --> 00:18:19.230
Because I wonder sometimes when
I see really opinionated, frameworks

322
00:18:19.230 --> 00:18:21.000
and frameworks that have a
lot of breadth, I think

323
00:18:21.000 --> 00:18:23.220
the Chuck Norris framework has
the potential to have a

324
00:18:23.220 --> 00:18:28.470
lot of breadth because it's,
it's basically codified the, you

325
00:18:28.470 --> 00:18:31.620
know, both of your guys's
opinions and, and you're kind

326
00:18:31.620 --> 00:18:34.530
of spackling over, or puttying
over things in the dominant

327
00:18:34.530 --> 00:18:37.290
framework ecosystem that you don't
like. But if you were

328
00:18:37.290 --> 00:18:39.420
a suit or some kind
of business person at your

329
00:18:39.420 --> 00:18:42.540
last job, you might have
no idea. You just take,

330
00:18:43.080 --> 00:18:46.020
you take the technical guys
word for it. You're like,

331
00:18:46.020 --> 00:18:48.630
yeah. You know, the build
system.net sucks. We're going to

332
00:18:48.630 --> 00:18:50.340
write our own, you know,
it doesn't have anything to

333
00:18:50.340 --> 00:18:51.930
do with our business, but
we're going to do it.

334
00:18:53.090 --> 00:18:56.030
Oh, absolutely. This actually, we
had a reason we had

335
00:18:56.030 --> 00:19:00.770
a 98 builds or 98
source control repositories we needed

336
00:19:00.770 --> 00:19:04.280
to get built on. And
so we actually had to

337
00:19:04.310 --> 00:19:07.250
put a convention in and
when we first did it,

338
00:19:07.400 --> 00:19:10.880
it wasn't, I would say
very good. It was, it

339
00:19:10.880 --> 00:19:13.820
was good enough to meet
the, the need, but as

340
00:19:13.820 --> 00:19:15.860
we were going through and
we were doing this really,

341
00:19:15.920 --> 00:19:18.080
Oh, we could do this
and Oh, we can do

342
00:19:18.080 --> 00:19:21.620
this other thing, which should
actually save us time. And

343
00:19:21.980 --> 00:19:23.840
at some point we got
to the point where we

344
00:19:23.840 --> 00:19:26.600
said, okay, so now we
have what I would consider

345
00:19:26.600 --> 00:19:29.780
a framework. What do we
do with this? And so

346
00:19:30.700 --> 00:19:33.320
at that point, it became
less about working on it

347
00:19:33.320 --> 00:19:35.660
at work and more about
working on it at home.

348
00:19:36.320 --> 00:19:39.200
Because, you know, when you
open source or work on

349
00:19:39.200 --> 00:19:41.270
open source, sometimes you have
to have the approval of

350
00:19:41.270 --> 00:19:43.970
the business. You got to
worry that, you know, maybe

351
00:19:43.970 --> 00:19:46.760
the business isn't going to
like this or something, or

352
00:19:47.450 --> 00:19:52.670
want to own it when
you're done. Did you have

353
00:19:52.670 --> 00:19:56.000
any pushback from the, from
the suits that this was

354
00:19:56.000 --> 00:19:57.740
a problem? Or did they
have any sense that you

355
00:19:57.740 --> 00:20:02.720
were off doing something that
wasn't necessarily moving the business

356
00:20:02.720 --> 00:20:04.910
forward in a strict, strict
sense? Or is that, is

357
00:20:04.910 --> 00:20:08.780
that not a consideration when
creating a framework? Yeah. It's

358
00:20:08.780 --> 00:20:11.120
always a consideration. Cause you
want to keep your job.

359
00:20:13.840 --> 00:20:16.130
You just, you gotta be
up front and you gotta

360
00:20:16.130 --> 00:20:19.280
say, Hey, look, you know,
I see something here. And

361
00:20:19.280 --> 00:20:23.600
if you've built that good
relationship with the people that

362
00:20:23.600 --> 00:20:26.960
you're working with, then you've
built up a sense of

363
00:20:26.960 --> 00:20:31.070
trust. Right? I think we
had that. And I think

364
00:20:31.070 --> 00:20:34.670
that once we open sourced
it, we actually, the business

365
00:20:34.670 --> 00:20:37.370
benefited. It's huge. And I
think that's kind of a

366
00:20:37.370 --> 00:20:42.080
misnomer with maybe some businesses.
They think that you using

367
00:20:42.080 --> 00:20:44.630
open source is bad in
some way, or, you know,

368
00:20:44.640 --> 00:20:47.590
it could potentially open up
some problems. But a lot

369
00:20:47.590 --> 00:20:50.080
of times what I've seen
is when the business kind

370
00:20:50.080 --> 00:20:53.320
of allows for that to
happen, they actually, the products

371
00:20:53.320 --> 00:20:57.580
that they use become better.
So there's definitely a mutual

372
00:20:57.580 --> 00:21:02.400
benefit aspect of it. When
you move to the new,

373
00:21:03.180 --> 00:21:06.030
the new company, you guys
kind of parted ways with

374
00:21:06.030 --> 00:21:08.760
the place that inspired you
to need to make the

375
00:21:08.760 --> 00:21:11.700
framework, did the framework's direction
change at all, or did

376
00:21:11.700 --> 00:21:16.050
you detect that? It did.
Absolutely. And probably the best

377
00:21:16.050 --> 00:21:19.530
example of that is an
uppercut. When we were at

378
00:21:19.530 --> 00:21:22.650
the company, they're fine. You
know, checking everything in, you

379
00:21:22.650 --> 00:21:25.680
know, it's, it's kind of
a heavy framework itself because,

380
00:21:26.100 --> 00:21:27.510
you know, you gotta have
Nat, you gotta have in

381
00:21:27.510 --> 00:21:29.280
unit, you gotta have, you
know, if he's in a

382
00:21:29.280 --> 00:21:31.440
few station, you gotta have,
you know, the ops you

383
00:21:31.440 --> 00:21:35.580
cater, but you gotta have
all these libraries in. We

384
00:21:35.580 --> 00:21:37.230
just check it all on
the source control and because

385
00:21:37.230 --> 00:21:40.680
everything was local and we
were using this version and

386
00:21:40.680 --> 00:21:43.110
it wasn't that big a
deal going to a new

387
00:21:43.110 --> 00:21:45.540
company, the kind of balls
that are like, you know,

388
00:21:45.540 --> 00:21:50.070
I'd really rather all these
tools not actually reset with

389
00:21:50.100 --> 00:21:53.820
the, the actual, you know,
in source control. Cause I

390
00:21:53.820 --> 00:21:56.160
want to keep source control
very, very small. Hmm. So

391
00:21:56.160 --> 00:21:59.940
you're saying that their, their
concern about being opinionated was

392
00:21:59.940 --> 00:22:01.920
with all the things that
it brought along with it,

393
00:22:02.490 --> 00:22:04.590
not necessarily the opinions that
it brought, but all of

394
00:22:04.590 --> 00:22:09.030
the required under underlying stuff
to enable that opinion. No,

395
00:22:09.030 --> 00:22:11.230
there was a little bit
with the opinions of the

396
00:22:11.280 --> 00:22:15.210
frame itself. I mean, we
try to follow the conventions

397
00:22:15.210 --> 00:22:19.320
and we make those conventions
configurable. Right. And so where

398
00:22:19.320 --> 00:22:22.200
there was differences that tool
already had the ability to

399
00:22:22.200 --> 00:22:23.970
say, okay, well we can
do it this way for

400
00:22:23.970 --> 00:22:26.840
this piece. Right. And that's
kind of where I liked

401
00:22:26.840 --> 00:22:30.120
the idea of convention over
configuration is that there is

402
00:22:30.120 --> 00:22:33.090
a convention for the tool,
but please allow me to

403
00:22:33.090 --> 00:22:36.420
override that roundhouse really does
a fantastic job of that.

404
00:22:36.990 --> 00:22:42.990
It has really just one
required parameter, but a lot

405
00:22:42.990 --> 00:22:45.840
of the settings are all
configurable and they all have

406
00:22:45.840 --> 00:22:48.300
to fall. And when I
went to the new company,

407
00:22:48.300 --> 00:22:50.310
they had a lot of,
a lot of ideas on

408
00:22:50.310 --> 00:22:51.990
how to change some of
that or make it better,

409
00:22:52.200 --> 00:22:55.440
you know? And so, yeah,
definitely I think going to

410
00:22:55.440 --> 00:22:58.740
a new company actually brings
about more perspective for you

411
00:22:58.740 --> 00:23:00.870
as a person so that
you can actually take your,

412
00:23:01.500 --> 00:23:03.780
this framework that you have
and see how you can

413
00:23:03.780 --> 00:23:08.130
evolve it. So it actually
meets more scenarios. Did you

414
00:23:08.130 --> 00:23:10.940
end up having to go
and remove some stuff when,

415
00:23:10.940 --> 00:23:12.180
when you brought, when you
brought it to the new

416
00:23:12.180 --> 00:23:15.510
company? No. Never really had
a problem with having to

417
00:23:15.510 --> 00:23:19.980
remove anything now, not saying
that couldn't happen. What we've

418
00:23:19.980 --> 00:23:21.930
seen is they liked it
and then they wanted to

419
00:23:21.930 --> 00:23:25.770
do some other things as
well. And so I guess

420
00:23:25.770 --> 00:23:27.420
that brings up a really
interesting point is how do

421
00:23:27.420 --> 00:23:30.420
you, how do you gauge
what is just for this

422
00:23:30.420 --> 00:23:35.910
business versus what could benefit
a community, right? And say,

423
00:23:36.390 --> 00:23:38.040
this is just going to
be something that you guys

424
00:23:38.040 --> 00:23:40.170
do versus this is going
to be something that benefits

425
00:23:40.170 --> 00:23:44.460
everybody. And so I guess
one particular example was know

426
00:23:44.460 --> 00:23:47.360
with roundhouse, I really need
those assemblies to be signed

427
00:23:47.600 --> 00:23:50.690
so that I could actually
incorporate it into visual studio

428
00:23:50.690 --> 00:23:54.770
and an extension. And that
thing actually benefits the entire

429
00:23:54.770 --> 00:23:57.890
community. So that was a
pretty much a slam dunk.

430
00:23:58.670 --> 00:24:01.670
But another concern was they
really don't want log for

431
00:24:01.670 --> 00:24:05.180
net to be required as
the logging tool. I would

432
00:24:05.180 --> 00:24:07.370
rather have it be open
so I could just plug

433
00:24:07.370 --> 00:24:09.650
in my own water. So
I have to carry around

434
00:24:09.650 --> 00:24:15.230
this extra DLL when using
the, the, the library version

435
00:24:15.230 --> 00:24:18.380
of it, the executable it's
all brought together as just

436
00:24:18.380 --> 00:24:22.840
one file. Right? And you've
actually, you you've, you've actually

437
00:24:23.290 --> 00:24:26.830
caught me. I was leading
you a certain, a certain

438
00:24:26.830 --> 00:24:33.760
direction and where that was
is your opinions shaped it

439
00:24:33.760 --> 00:24:36.940
initially, but the requirements of
the business that you were

440
00:24:36.940 --> 00:24:42.040
in, kind of where the
primary driver of your, of

441
00:24:42.040 --> 00:24:44.770
your framework, the thing that
you're looking at in front

442
00:24:44.770 --> 00:24:46.360
of you, the thing that's
in front of your face

443
00:24:46.690 --> 00:24:50.110
ultimately is the number one
influencer of your framework. Then

444
00:24:50.110 --> 00:24:53.110
you move to another company,
you introduced the framework, but

445
00:24:53.320 --> 00:24:55.690
at the same time, simultaneously
the framework is becoming more

446
00:24:55.690 --> 00:25:02.470
and more popular. So then
how do you know who

447
00:25:02.470 --> 00:25:05.470
your primary choice of requirements
should be? Right? Is it,

448
00:25:05.710 --> 00:25:08.500
is it the community that
appreciates it and uses it

449
00:25:08.500 --> 00:25:10.540
and doesn't work at your
company? It doesn't care about

450
00:25:11.140 --> 00:25:14.620
Sarbanes Oxley or whatever the
new, you know, requirement of

451
00:25:14.620 --> 00:25:17.650
the day is, how do
you serve your day job

452
00:25:17.680 --> 00:25:20.470
and the community at the
same time when designing a

453
00:25:20.470 --> 00:25:25.360
framework Best I can say
is try to incorporate configuration

454
00:25:25.750 --> 00:25:28.060
so that when there is
the idea that you could

455
00:25:28.060 --> 00:25:30.760
change, know, frameworks should be
a little bit more open

456
00:25:30.780 --> 00:25:33.910
and the ability to configure
things or be at least

457
00:25:33.910 --> 00:25:36.220
extensible so that when you
run into stuff like this,

458
00:25:36.220 --> 00:25:38.680
you can step in and
actually put in, you know,

459
00:25:38.980 --> 00:25:42.670
that particular company, if you
don't, then you, that you

460
00:25:42.670 --> 00:25:44.110
kind of got to draw
a hard line in the

461
00:25:44.110 --> 00:25:46.300
sand. And luckily I haven't
had to do this yet,

462
00:25:47.290 --> 00:25:48.880
but I found the need
to have to do this

463
00:25:50.170 --> 00:25:52.300
because in the end, if
the company says, you know,

464
00:25:52.300 --> 00:25:53.980
we're going to go a
different direction, they just don't

465
00:25:53.980 --> 00:25:58.030
use your framework. And that's
kind of the, cause they

466
00:25:58.030 --> 00:26:00.580
don't own the framework. They're
kind of a consumer. I

467
00:26:00.580 --> 00:26:03.070
know. Yeah. They have one
of the primary maintainers that

468
00:26:03.070 --> 00:26:06.370
are there and they can
yes. Influence that guy or

469
00:26:06.370 --> 00:26:10.000
gal. But in the end,
that is to me, at

470
00:26:10.000 --> 00:26:14.650
least I'm here. And that
is a, what's the term

471
00:26:14.650 --> 00:26:18.130
I'm looking for this kind
of a, it's nice to

472
00:26:18.130 --> 00:26:22.060
have that, but if we're
going to use it for

473
00:26:22.060 --> 00:26:24.970
our business and we're going
to do that, and that's

474
00:26:24.970 --> 00:26:27.160
why we brought that person
on and we want to

475
00:26:27.160 --> 00:26:28.990
change that framework. I think
that should be a new

476
00:26:28.990 --> 00:26:33.700
framework or something internal where
they just fork the project

477
00:26:33.700 --> 00:26:37.990
and go a different way.
Right. But how does your,

478
00:26:38.650 --> 00:26:41.530
it was getting back to
ego and how, you know,

479
00:26:41.770 --> 00:26:45.090
all these different things drive
a framework requirements, the requirements

480
00:26:45.090 --> 00:26:48.330
that are currently there, that
requirements that are coming, job

481
00:26:48.360 --> 00:26:51.810
requirements, ego requirements, when you
are going from job to

482
00:26:51.810 --> 00:26:55.230
job, theoretically, let's say that,
that you start pouring more

483
00:26:55.230 --> 00:26:59.010
and more of your personality
and Drew's personality into this

484
00:26:59.010 --> 00:27:02.040
framework and you carry it
from job to job. Would

485
00:27:02.040 --> 00:27:04.110
you be able to go
to a job that already

486
00:27:04.110 --> 00:27:08.160
had a framework or maybe
didn't use one at all?

487
00:27:08.160 --> 00:27:09.990
It didn't feel the need
for an opinion framework and

488
00:27:09.990 --> 00:27:12.780
say, all right, I guess
I'm not going to be

489
00:27:12.780 --> 00:27:16.430
working on Chuck Norris at
this job. Oh yeah. You

490
00:27:16.430 --> 00:27:18.530
know, we'll always be working
on Chuck North on the

491
00:27:18.530 --> 00:27:21.800
side, but you know, if
the company decides that they

492
00:27:21.800 --> 00:27:23.330
already have something and they
don't want to use it,

493
00:27:23.330 --> 00:27:25.730
that's not, no, for no
reason it shouldn't be a

494
00:27:25.730 --> 00:27:28.010
stop or maybe it's a
good time to see if

495
00:27:28.010 --> 00:27:30.380
there's anybody else in the
community wants to step up

496
00:27:30.530 --> 00:27:34.070
and continue being very active
in the contributions where you

497
00:27:34.070 --> 00:27:36.140
kind of take a, maybe
a little bit of a

498
00:27:36.140 --> 00:27:40.700
backseat role with Dropkick. We
actually did this drew what

499
00:27:40.700 --> 00:27:43.910
to accompany where they're, they're
using something different and they're

500
00:27:43.910 --> 00:27:46.610
not going to be using
Dropkick. And so I kind

501
00:27:46.610 --> 00:27:49.760
of took over as the
primary maintainer and actually stepping

502
00:27:49.760 --> 00:27:52.670
into the new company, they
had a huge need for,

503
00:27:52.850 --> 00:27:55.730
you know, the deployment, a
deployment framework. And so a

504
00:27:55.730 --> 00:27:59.720
lot of stuff was added
in to answer the needs

505
00:27:59.720 --> 00:28:04.280
of this business. But So
you wouldn't feel bad if

506
00:28:04.280 --> 00:28:06.140
you presented this at a
company and they were just

507
00:28:06.140 --> 00:28:07.880
like, you know, not so
much, we've got our own

508
00:28:07.880 --> 00:28:11.180
thing. No, I actually ran
into some opposition with that,

509
00:28:11.720 --> 00:28:13.400
with one of them. And
that was kind of, well,

510
00:28:13.430 --> 00:28:18.890
you know, two out of
three ain't bad. Did you,

511
00:28:18.920 --> 00:28:21.440
did you expect that you
would, you would come in

512
00:28:21.440 --> 00:28:23.120
and present this and say,
all right here, Hey, by

513
00:28:23.120 --> 00:28:25.340
the way, you know, hired
me and here's this awesome

514
00:28:25.340 --> 00:28:27.020
thing that I, that I've
got, you know, you get

515
00:28:27.020 --> 00:28:29.630
me and you get this
great framework. You don't really,

516
00:28:29.630 --> 00:28:33.020
that's not usually like the,
the thing I stepped into

517
00:28:33.020 --> 00:28:35.360
an interview. It's just like,
you know, here I am,

518
00:28:36.230 --> 00:28:39.230
here's all the problems I
solved at this last business.

519
00:28:39.260 --> 00:28:41.570
It's not really about the
frameworks, you know, at that

520
00:28:41.570 --> 00:28:45.970
point. So you don't. Okay.
Well, that's interesting. I, I've

521
00:28:46.040 --> 00:28:49.160
always wondered though. Like when,
when someone, when you hire

522
00:28:49.160 --> 00:28:51.980
someone, how, how much are
you bringing their, you bring

523
00:28:51.980 --> 00:28:55.160
their emotional baggage, but you
also bring their technical baggage.

524
00:28:55.430 --> 00:28:58.220
You know, and I have
spoken to people who have

525
00:28:58.220 --> 00:29:00.560
brought their frameworks with them.
And then I have spoken

526
00:29:00.560 --> 00:29:03.440
to people who write a
new framework or, you know,

527
00:29:03.470 --> 00:29:06.830
on a, on a case
by case basis. And I

528
00:29:06.830 --> 00:29:08.930
think that's a good point.
I think that it can

529
00:29:08.930 --> 00:29:12.290
be, if you decided that,
you know, this is totally

530
00:29:12.290 --> 00:29:15.740
different than what I was
doing. You don't try to

531
00:29:15.740 --> 00:29:19.370
take that framework that the
community is not using and

532
00:29:19.790 --> 00:29:22.940
reshape it to something that
you now need. That to

533
00:29:22.940 --> 00:29:27.110
me, that seems kind of
bad. If you can't mold

534
00:29:27.110 --> 00:29:29.900
the business into a way
that actually works with your

535
00:29:29.900 --> 00:29:32.540
framework, then yeah. Maybe it's
a good time to explore

536
00:29:32.540 --> 00:29:37.490
writing a new framework. What
is a, what is next

537
00:29:37.490 --> 00:29:40.220
for what is next for
Chuck Norris though? You've got

538
00:29:40.220 --> 00:29:42.670
some things that have been
half started and some things

539
00:29:42.670 --> 00:29:45.790
that are really, really going
full on. I'm curious what

540
00:29:45.860 --> 00:29:48.480
what's planned for the future.
I think the plan for

541
00:29:48.480 --> 00:29:50.010
the future is just, you
know, see what, how the

542
00:29:50.010 --> 00:29:54.420
community wants to take these
tools and see, see where

543
00:29:54.420 --> 00:29:57.750
they want to go. I
mean, roundhouse got Oracle way

544
00:29:57.750 --> 00:29:59.970
back in the beginning because
a couple of guys looked

545
00:29:59.970 --> 00:30:02.580
at all the other frameworks
and said, we want this

546
00:30:02.580 --> 00:30:05.460
one and we can make
this a better framework. And

547
00:30:05.460 --> 00:30:08.130
so they came in, they
helped with roundhouse, they got

548
00:30:08.130 --> 00:30:12.240
Oracle running. And then from
there we started something where

549
00:30:12.240 --> 00:30:14.460
we had all these multiple
database types to be able

550
00:30:14.460 --> 00:30:16.920
to hook in. And new
database type is very simple.

551
00:30:17.460 --> 00:30:19.950
It takes, you know, somebody's
knowledge of how do you

552
00:30:19.950 --> 00:30:23.100
create the database? How do
you restore a database? How

553
00:30:23.100 --> 00:30:26.220
do you create these tables
and then put data in

554
00:30:26.220 --> 00:30:29.370
these tables? And of course,
how do you run a

555
00:30:29.370 --> 00:30:31.020
migration? You know, how do
you, how do you run

556
00:30:31.020 --> 00:30:35.280
all of these different items?
But because of that, I

557
00:30:35.280 --> 00:30:37.320
mean, we got a lot
of community contributions here on

558
00:30:37.320 --> 00:30:39.630
this last release. And we
added actually three new database

559
00:30:39.630 --> 00:30:42.240
types coming in this last
release. And two of them

560
00:30:42.240 --> 00:30:47.460
came from external sources, which
I thought was awesome. But

561
00:30:47.670 --> 00:30:50.970
like I said, you know,
none of these tools would

562
00:30:50.970 --> 00:30:53.730
be what they are today.
If it was just my

563
00:30:53.730 --> 00:30:56.790
ego or Drew's ego and
not listening to the community

564
00:30:56.790 --> 00:31:00.570
and what they need and
trying to see if we

565
00:31:00.570 --> 00:31:04.530
could shape the tool in
that way. So really good

566
00:31:04.530 --> 00:31:06.840
advice, I guess, for anybody
that works on open sources,

567
00:31:07.620 --> 00:31:11.640
don't push away, you know,
possible contributors just because their

568
00:31:11.640 --> 00:31:14.880
ideas are different than yours.
Because when you do that,

569
00:31:15.120 --> 00:31:18.270
you're closing a door and
you're possibly opening another door

570
00:31:18.270 --> 00:31:22.950
to competition the competition that
actually probably could've helped out

571
00:31:22.950 --> 00:31:25.800
your project. I think that
that's extremely good advice to

572
00:31:25.800 --> 00:31:27.840
anyone who's creating a framework,
not only not make it

573
00:31:27.840 --> 00:31:31.650
in a, in a vacuum,
but really think about what

574
00:31:31.650 --> 00:31:34.170
are your motivations, think about
who your audience is, listen

575
00:31:34.170 --> 00:31:36.390
to your audience, whether it
be the job that you're

576
00:31:36.390 --> 00:31:38.370
working out of the community.
But if someone is using

577
00:31:38.370 --> 00:31:42.780
your framework, you should be
listening to them. People can

578
00:31:42.780 --> 00:31:47.070
check out the Chuck Norris
framework@gethub.com slash Chuck Norris. There's

579
00:31:47.070 --> 00:31:49.410
lots of stuff there. And
you certainly, you don't have

580
00:31:49.410 --> 00:31:51.030
to take the entire framework
if you don't want to,

581
00:31:51.030 --> 00:31:52.860
you can take just the
pieces that make you happy.

582
00:31:53.250 --> 00:31:56.190
And as you can tell,
from what Rob said, both

583
00:31:56.190 --> 00:31:58.920
Robin drew are listening and
are definitely excited to have

584
00:31:58.920 --> 00:32:01.080
you or opinions about their
framework. And I appreciate you

585
00:32:01.080 --> 00:32:03.870
Rob kicking off the framework
series. You're on the show.

586
00:32:04.290 --> 00:32:07.830
Thanks. This has been another
episode of Hansel minutes and

587
00:32:07.830 --> 00:32:09.240
we'll see you again next
week.

