WEBVTT FILE

1
00:00:04.370 --> 00:00:17.210
<inaudible> from Hansel minutes.com. It's
Hanselman it's Oh, weekly discussion

2
00:00:17.210 --> 00:00:20.960
with web developer and technologists
and Scott Hanselman. This is

3
00:00:20.960 --> 00:00:25.730
Lawrence Ryan announcing show number two
79. Recorded live Thursday, August

4
00:00:25.730 --> 00:00:30.830
11, 2011. Support for Hanselman
is provided by Telerik rad

5
00:00:30.830 --> 00:00:34.670
controls, the most comprehensive suite
of components for windows forms

6
00:00:34.670 --> 00:00:43.550
and asp.net web applications. online@wwwdottelerik.com.
In this episode, Scott talks

7
00:00:43.550 --> 00:00:49.190
with Rafael Rivera. Hi, this
is Scott Hanselman and this

8
00:00:49.190 --> 00:00:51.380
is another episode of Hansel
minutes. And today I am

9
00:00:51.380 --> 00:00:54.470
talking to Rafael Rivera. How's
it going, sir? Hey, how's

10
00:00:54.470 --> 00:00:57.320
it going? And I'm not
too bad. So your blog

11
00:00:57.320 --> 00:01:02.870
is within windows.com and it's
like an, it's like an

12
00:01:02.870 --> 00:01:06.650
internals hacker, you know, user
you're like a user, you're

13
00:01:06.650 --> 00:01:09.050
a developer. I mean, it's,
it's, it's a delight. It's

14
00:01:09.050 --> 00:01:12.620
almost as if Chris Parillo
knew how to really program

15
00:01:12.620 --> 00:01:17.990
and debug. Yeah. It's a,
it's a brain dump. It's

16
00:01:17.990 --> 00:01:21.410
a brain dump of really
interesting things. And I think

17
00:01:21.410 --> 00:01:23.990
what's happening is you blog
about the stuff that we

18
00:01:23.990 --> 00:01:26.990
all wish we had time
to do, you know, like

19
00:01:27.020 --> 00:01:29.570
you have a post right
here. That's just like classic.

20
00:01:29.870 --> 00:01:34.040
What I would call classic
within windows where an application

21
00:01:34.040 --> 00:01:35.900
didn't do what you wanted
it to do. It didn't

22
00:01:35.900 --> 00:01:38.120
behave the way you expected
it to behave. So you

23
00:01:38.120 --> 00:01:41.320
said rather than complaining about
it or going up on

24
00:01:41.540 --> 00:01:44.090
a forum and you know,
just lighting into the developers,

25
00:01:44.150 --> 00:01:47.350
you fixed it. So what's
the story with splinter cell

26
00:01:47.360 --> 00:01:49.340
and the splinter cell series
and your obsession with it.

27
00:01:50.450 --> 00:01:57.500
Right? So long ago, steam,
that platform, that great digital

28
00:01:57.530 --> 00:02:02.420
delivery of games, they had
a sale. I purchased the

29
00:02:02.420 --> 00:02:05.810
latest splinter cell conviction. I
believe it's called. And I'm

30
00:02:05.810 --> 00:02:07.880
like, wait, I can't play
this. I need to go

31
00:02:07.880 --> 00:02:10.310
play all the older ones.
They've released like five or

32
00:02:10.310 --> 00:02:14.120
six older games. And to
catch up on the story,

33
00:02:14.120 --> 00:02:17.930
I decided, okay, let me
start with one. So I

34
00:02:17.930 --> 00:02:20.420
played one too. I mean,
these are games that came

35
00:02:20.420 --> 00:02:25.820
out what, 10 years ago
and they're classics. Yeah, definitely.

36
00:02:25.820 --> 00:02:31.490
And I loaded these up.
First one went surprisingly. Well,

37
00:02:32.050 --> 00:02:33.770
it kind of hiccup on
the fact that I had

38
00:02:33.770 --> 00:02:37.760
a wide screen monitor, but
it ran pretty well. You

39
00:02:37.760 --> 00:02:41.330
know, two, three, I'm getting
through these things over the

40
00:02:41.330 --> 00:02:46.430
weekend. And then this, this
recent one lender sell double

41
00:02:46.430 --> 00:02:52.040
agent. I loaded up. It's
clearly made by a different

42
00:02:52.040 --> 00:02:55.190
team of developers. So it's
a, it's a completely different

43
00:02:55.190 --> 00:02:58.730
app, a different app. In
this case, fire it up.

44
00:02:59.950 --> 00:03:03.730
The screen starts spasming out.
I thought it was a

45
00:03:03.730 --> 00:03:07.390
widescreen issue, but then like
the posts outlines those much

46
00:03:07.390 --> 00:03:10.990
deeper, but the screen, so
spasming out, you start running

47
00:03:10.990 --> 00:03:14.740
into these games. You don't
have shadows, which I think

48
00:03:14.740 --> 00:03:17.140
some of our splinter cell
people out there will know.

49
00:03:17.140 --> 00:03:21.130
That's crucial to playing splinter
cell. You need to know

50
00:03:21.130 --> 00:03:22.660
if you're in a shadow
or not. If someone can

51
00:03:22.660 --> 00:03:26.160
see you, you know, is
it a shadow driven? I

52
00:03:26.160 --> 00:03:28.020
mean, it's, it's, it's the
whole point of the game

53
00:03:28.020 --> 00:03:31.380
is stealth. And you've got
this really evocative split-screen before

54
00:03:31.380 --> 00:03:34.890
and after where there's a
guy walking on grace. No.

55
00:03:35.160 --> 00:03:37.080
And then when you turn
the shadows and the lighting

56
00:03:37.080 --> 00:03:39.450
on suddenly it's, it's clear
that he's out in the

57
00:03:39.450 --> 00:03:43.680
open with a light shining
on him. Somebody completely configured

58
00:03:43.680 --> 00:03:46.140
this wrong, but I don't
understand how this is happening.

59
00:03:46.140 --> 00:03:50.580
And in 2010, 2011. Yeah.
So, so this was an

60
00:03:50.580 --> 00:03:54.420
unreal based game and I
did some searching on the

61
00:03:54.420 --> 00:03:56.940
internet, see if someone fixed
this and that's, I think

62
00:03:56.940 --> 00:03:59.100
that's where we all begin.
Right? We go to Google

63
00:03:59.100 --> 00:04:02.580
or go to being, and
run a search. Everyone complaining

64
00:04:02.580 --> 00:04:05.130
about the same issue. They
have these tweaks, they kind

65
00:04:05.130 --> 00:04:08.250
of work. They kind of
don't and I'm sitting here

66
00:04:08.250 --> 00:04:11.100
like, okay, I have this
game, I've purchased it and

67
00:04:11.100 --> 00:04:15.420
I can't play it. And
that's extremely frustrating. I could,

68
00:04:15.600 --> 00:04:18.270
I guess, fire up XP,
put on a laptop and

69
00:04:18.270 --> 00:04:21.630
play it there, but you
know, no one, no one

70
00:04:21.630 --> 00:04:26.040
wants to use XP anymore.
So I took it apart.

71
00:04:26.340 --> 00:04:27.570
I was like, okay, let
me, let me see what's

72
00:04:27.570 --> 00:04:31.620
going on here. I figured
out the, the widescreen issues,

73
00:04:31.620 --> 00:04:34.020
that was pretty easy. I
just replaced all their M

74
00:04:34.020 --> 00:04:40.140
game videos with blank ones.
It's interesting though, because one

75
00:04:40.140 --> 00:04:42.360
time I was talking to
someone about some tech support

76
00:04:42.360 --> 00:04:44.730
issues that they had. And
I got kind of went

77
00:04:44.730 --> 00:04:47.520
off on a rant about
how the computer is not

78
00:04:47.520 --> 00:04:49.890
a black box. And you
know, we always have these

79
00:04:49.890 --> 00:04:51.930
jokes about how there's two
kinds of people in computers.

80
00:04:51.930 --> 00:04:54.210
And you can just pick
any two different kinds of

81
00:04:54.210 --> 00:04:57.360
people. But ultimately there are
the people who feel empowered

82
00:04:57.870 --> 00:05:00.030
by the existence of the
computer. And there are those

83
00:05:00.030 --> 00:05:03.360
who feel oppressed by it.
What I like about you

84
00:05:03.360 --> 00:05:08.610
and your style is here's
a problem. Your solution is

85
00:05:08.790 --> 00:05:11.490
let's crack this thing open.
Like there are so many

86
00:05:11.490 --> 00:05:14.670
people who won't even go
into the splinter cell folder

87
00:05:14.940 --> 00:05:18.630
and open up the splinter
cell dot INI file and

88
00:05:18.630 --> 00:05:21.450
just start flipping bits around,
right? What is it, what

89
00:05:21.450 --> 00:05:24.660
does this do? What does
that do? They just give

90
00:05:24.660 --> 00:05:26.840
up and they complain. And
this same thing is, this

91
00:05:26.850 --> 00:05:30.060
is the case with programmers.
I mean, dot net's not

92
00:05:30.060 --> 00:05:32.430
hiding anything from you. There's
no directory on your machine

93
00:05:32.430 --> 00:05:35.850
that you can't see. So
why do people feel like

94
00:05:35.880 --> 00:05:38.970
the computer is against them?
In this instance, here's a

95
00:05:38.970 --> 00:05:41.160
game that didn't work. Now.
I'm not making an excuse

96
00:05:41.160 --> 00:05:43.020
for the game networking. It
sucks that it didn't work,

97
00:05:43.050 --> 00:05:47.250
but you just went in
and started flipping bits around

98
00:05:48.240 --> 00:05:50.790
until you got the solution,
which makes you wonder why

99
00:05:50.790 --> 00:05:54.480
they didn't ship it that
way. Yeah. I'm not sure

100
00:05:56.070 --> 00:05:59.090
I was doing some around.
And it turns out this

101
00:05:59.090 --> 00:06:03.410
game was, it was rushed,
rushed out the door and

102
00:06:03.530 --> 00:06:07.520
the graphics configuration subsystem in
the game, you know, basically

103
00:06:07.520 --> 00:06:10.790
you go to options, graphics,
and you see a list

104
00:06:10.790 --> 00:06:15.410
of resolutions and a bunch
of options that menu doesn't

105
00:06:15.740 --> 00:06:21.710
really work, which is embarrassing
really, even on, even on

106
00:06:21.710 --> 00:06:25.490
the platform, it was designed
for XP. These options didn't

107
00:06:25.490 --> 00:06:29.030
work, you'll see threads out
there. People complaining anti-aliasing for

108
00:06:29.030 --> 00:06:34.830
examples broken. And, and it's
funny because the, the, the

109
00:06:34.840 --> 00:06:38.600
file backing that that interface
is this INI you're talking

110
00:06:38.600 --> 00:06:40.520
about. It's just, it's just
a plain text file. You

111
00:06:40.520 --> 00:06:45.370
go flip some bits and
everything starts working. And did

112
00:06:45.370 --> 00:06:47.340
you get it running basically
the, what you expected, did

113
00:06:47.340 --> 00:06:50.020
you feel by hacking this
game together? You got your

114
00:06:50.020 --> 00:06:55.420
money's worth, then Finally. Yeah.
I'm still playing it. Now

115
00:06:56.650 --> 00:06:59.500
this game I must admit
is probably the worst in

116
00:06:59.500 --> 00:07:04.870
this series, but I'm still
excited that I can actually

117
00:07:04.870 --> 00:07:09.250
play and enjoy the story.
So, so this is an

118
00:07:09.250 --> 00:07:12.010
easy example where, you know,
this is kind of an

119
00:07:12.010 --> 00:07:14.350
example. Like I, I find
myself doing this where I

120
00:07:14.350 --> 00:07:16.660
download an application and I
run it and it says,

121
00:07:16.690 --> 00:07:19.390
Oh, it's not 64 bits.
So I have to right

122
00:07:19.390 --> 00:07:22.810
click on it and say,
running compatibility mode, or maybe

123
00:07:22.810 --> 00:07:25.840
an advanced kind of handsome,
an example would be, I

124
00:07:25.840 --> 00:07:29.650
run core flags dot exe
core core flags is one

125
00:07:29.650 --> 00:07:32.170
of those things where if
you know it exists, you're

126
00:07:32.170 --> 00:07:34.930
your head and tails above
90% of the planet. So

127
00:07:34.930 --> 00:07:37.150
if you want to listeners,
if you want to impress

128
00:07:37.390 --> 00:07:40.390
friends and neighbors learn how
to use core flags to

129
00:07:40.390 --> 00:07:45.400
forcibly change the bitterness on,
in any CPU, compiled.net application,

130
00:07:45.400 --> 00:07:47.170
and force it to run
in an x86 mode and

131
00:07:47.170 --> 00:07:50.020
then fix things left and
right. And then also wonder

132
00:07:50.020 --> 00:07:52.990
why it wasn't shipped that
way. That's definitely a trick

133
00:07:53.140 --> 00:07:55.390
that you can do. But
you had a situation where

134
00:07:55.390 --> 00:07:59.110
someone gave you this, hello,
kitty, figuring this is like

135
00:07:59.110 --> 00:08:02.470
a piece of hardware and
that's where my abilities end.

136
00:08:02.470 --> 00:08:04.570
Right. I can twiddle bits
and right click and go

137
00:08:04.570 --> 00:08:08.020
to compatibility. But you had
a piece of hardware that

138
00:08:08.020 --> 00:08:09.940
didn't do what you wanted
it to do. What was

139
00:08:09.940 --> 00:08:12.790
the story there? So, so
before we get into that,

140
00:08:12.790 --> 00:08:16.750
I wanted to touch on
the core flag stuff, please.

141
00:08:17.080 --> 00:08:20.230
And you know, Scott's absolutely
right here, you learn core

142
00:08:20.230 --> 00:08:24.340
flags. You'll probably be able
to fix like half the

143
00:08:24.340 --> 00:08:28.120
issues, application, compatibility issues you
have right off the bat.

144
00:08:29.020 --> 00:08:30.640
I already have, I think
I have two or three

145
00:08:30.640 --> 00:08:34.390
issues on the blog. If
you do a search where

146
00:08:34.450 --> 00:08:40.780
developers develop their application, using
the, any flags dropdown in

147
00:08:40.780 --> 00:08:45.550
visual studio, Any CPU saying
application, right. They're saying the.net

148
00:08:45.550 --> 00:08:49.780
application runs on x86 or
X 64. Right. But then

149
00:08:49.900 --> 00:08:53.770
they tie into some native
code that's x86 only. Right?

150
00:08:53.830 --> 00:08:55.890
So then when you run
this on an X platform,

151
00:08:55.890 --> 00:08:59.040
it blows up and you
see this across the board

152
00:08:59.040 --> 00:09:01.290
too. It's it's from little
developers all the way up

153
00:09:01.290 --> 00:09:05.010
to Yahoo and ATI. I
mean, Yahoo messenger came out

154
00:09:05.010 --> 00:09:06.990
one day and I had
to fix that using that

155
00:09:06.990 --> 00:09:12.150
simple tweak. So, so yeah,
we definitely wanted to highlight

156
00:09:12.150 --> 00:09:15.140
that. Yeah, absolutely. I think
that there's two ways to

157
00:09:15.140 --> 00:09:19.520
think two ways to remember
one, always test an X

158
00:09:19.550 --> 00:09:22.670
64, but even better from
my perspective. And this might

159
00:09:22.670 --> 00:09:25.760
be a little bit out
there, but I think if

160
00:09:25.760 --> 00:09:29.210
you're not going to use
all that memory space, then

161
00:09:29.210 --> 00:09:32.210
just compile your stuff x86.
There's just no reason to.

162
00:09:33.110 --> 00:09:35.600
Yeah. Yeah. And I think,
I think even Microsoft admitted

163
00:09:35.600 --> 00:09:40.940
this with the whole office,
2010 discussion back then we

164
00:09:40.940 --> 00:09:42.830
said, look, if you're not
going to be using Excel

165
00:09:42.830 --> 00:09:46.070
with billions of records or
pages, right. You don't really

166
00:09:46.070 --> 00:09:51.800
need office 64 bit. Exactly.
So hello, kitty. So, yeah.

167
00:09:51.920 --> 00:09:58.070
Hello kitty. So, so Jenny,
my girlfriend, the, her, her

168
00:09:58.070 --> 00:10:01.040
sister had purchased this, this
toy from me like a

169
00:10:01.040 --> 00:10:03.410
yard sale, or she picked
it up somewhere third hand.

170
00:10:04.190 --> 00:10:07.790
And you know, it's the
classic case of you plug

171
00:10:07.810 --> 00:10:10.310
in a device into your
PC. And either you don't

172
00:10:10.310 --> 00:10:13.190
have drivers for it, for
the drivers that are out

173
00:10:13.190 --> 00:10:16.340
there, do you not work
on the platform you're on,

174
00:10:18.680 --> 00:10:22.220
this is a very angering
scenario. And, and most times

175
00:10:22.220 --> 00:10:26.300
you can't fix it because
the drivers are low level

176
00:10:26.300 --> 00:10:28.940
enough to you. You just
can't hack it like a

177
00:10:28.940 --> 00:10:31.460
32 bit kernel driver. You
can't be hacked to work

178
00:10:31.460 --> 00:10:34.070
an X 64. There's just
nothing you can do there.

179
00:10:36.620 --> 00:10:38.960
But in this case, and
I was, I was taking

180
00:10:38.960 --> 00:10:42.080
it apart and this is
all outlined on the blog

181
00:10:42.080 --> 00:10:44.960
post listeners, but I was
taking it apart. And I

182
00:10:44.960 --> 00:10:47.930
realized, well, there are no
real drivers here. It's just

183
00:10:48.410 --> 00:10:51.770
user mode software. So once
I, once I take apart

184
00:10:51.770 --> 00:10:55.000
something and realize it's all
on the user side, it's

185
00:10:55.010 --> 00:10:57.230
exciting. Cause it's like, Oh,
okay, this can actually be

186
00:10:57.230 --> 00:11:00.200
fixed. This is, this is
not a Well let's, let's

187
00:11:00.200 --> 00:11:02.990
pause for a second because
I think that, that, and

188
00:11:02.990 --> 00:11:04.970
I've, I've actually teased you
about this in person that

189
00:11:05.150 --> 00:11:07.550
I think you forget that
not everyone is smart as

190
00:11:07.550 --> 00:11:10.070
you are. So let's, let's
back up for a second

191
00:11:10.070 --> 00:11:12.470
and make sure the listeners
are following. Why do I,

192
00:11:12.680 --> 00:11:15.710
if I get a hello
kitty device, it would make

193
00:11:15.710 --> 00:11:19.520
sense that I would assume
there's a device driver involved

194
00:11:19.520 --> 00:11:21.950
somewhere and I might plug
it in. And I might

195
00:11:21.950 --> 00:11:24.320
say, Oh, this is too
old. This came out before

196
00:11:24.320 --> 00:11:27.350
windows seven. It'll never work.
Now. You just said that

197
00:11:27.620 --> 00:11:30.530
when I discover it runs
in user mode, that that's

198
00:11:30.530 --> 00:11:32.720
a wonderful thing in a
time to rejoice. What does

199
00:11:32.720 --> 00:11:34.400
that really mean? What does
it mean that this is

200
00:11:34.400 --> 00:11:37.250
just a user mode piece
of software that runs the

201
00:11:37.250 --> 00:11:43.040
hello kitty figure. Right? So,
so yeah, I've misspoke there

202
00:11:43.370 --> 00:11:46.790
a little bit. This, this
device, when you plug it

203
00:11:46.790 --> 00:11:50.630
into the PC windows, windows
has a set of basic

204
00:11:50.630 --> 00:11:54.400
drivers for pretty much every
device out there. For example,

205
00:11:54.400 --> 00:11:56.800
you plug in a printer,
it will at minimum install

206
00:11:56.800 --> 00:12:01.120
a basic printer driver. If
you, you know, same thing

207
00:12:01.120 --> 00:12:05.110
with keyboards, mice, monitors, et
cetera, this is why back

208
00:12:05.110 --> 00:12:07.300
then you plug in a
monitor and it switches to

209
00:12:07.300 --> 00:12:10.210
VGA mode and awful graphics.
But Hey, it worked at

210
00:12:10.210 --> 00:12:16.960
least in this case, the
hello kitty toy was masquerading

211
00:12:16.960 --> 00:12:21.310
as a human interface device.
Just generic, just a generic

212
00:12:21.310 --> 00:12:25.030
kid, a device like a
keyboard or a mouse. Yup.

213
00:12:25.690 --> 00:12:29.260
Yup. So you plugged it
in. It says, Hey, windows

214
00:12:29.260 --> 00:12:33.400
has found a user, you
know, a human interactive device

215
00:12:33.730 --> 00:12:36.610
and installing the basic drivers
for it. And then poof

216
00:12:37.360 --> 00:12:41.740
pop-up goes away and nothing
happens. It just it's just

217
00:12:41.740 --> 00:12:47.890
installed. So in this case,
the software bundle that it

218
00:12:47.890 --> 00:12:52.630
came with was simply a
piece of client software that

219
00:12:52.630 --> 00:12:56.240
communicated with the bare bones
windows driver. Right? That's what

220
00:12:56.250 --> 00:12:57.990
you mean by user mode
in the sense that it

221
00:12:57.990 --> 00:13:00.240
didn't come with a piece
of software that loaded itself

222
00:13:00.240 --> 00:13:03.540
into kernel space. It's just
an app like any other

223
00:13:03.540 --> 00:13:08.070
app. And it's calling into
user 32 doing its thing.

224
00:13:08.460 --> 00:13:12.300
Yep. It's calling into the
human interface device API, well

225
00:13:12.300 --> 00:13:16.020
documented on MSDN and it
does its little thing there.

226
00:13:16.380 --> 00:13:18.180
I can open up any
file and I can make

227
00:13:18.180 --> 00:13:20.160
splinter cell work and I
can right. Click on something.

228
00:13:20.160 --> 00:13:22.530
But what do you do
when you get down into,

229
00:13:22.530 --> 00:13:24.780
well, there's a DLL. How
do I even know what

230
00:13:24.780 --> 00:13:26.640
the DLL is doing? How
do I look at the

231
00:13:26.640 --> 00:13:29.670
functions? It's kind of, Oh,
see, that's, that's the fun

232
00:13:29.670 --> 00:13:35.160
part. So, so in these
scenarios, you first you'd want

233
00:13:35.160 --> 00:13:38.160
to see this thing in
action, right? There's no sense

234
00:13:38.160 --> 00:13:40.470
in trying to disassemble something,
if a, you don't know

235
00:13:40.470 --> 00:13:43.110
it works and B you
don't know how it works.

236
00:13:43.800 --> 00:13:48.090
So I took this thing
and put it in a

237
00:13:48.120 --> 00:13:52.680
virtual machine with windows XP.
And have you read the

238
00:13:52.680 --> 00:13:54.510
little, read me, it came
with it. It was actually

239
00:13:54.510 --> 00:13:58.470
targeted for windows 95 and
up, which is, which is

240
00:13:58.470 --> 00:14:03.180
scary. It's just awesome. But
so I said, okay, let

241
00:14:03.180 --> 00:14:04.980
me start with XP. And
maybe I'll work my way

242
00:14:04.980 --> 00:14:07.140
backwards. Hope to God. I
don't have to go any

243
00:14:07.140 --> 00:14:12.740
further by fired up XP,
plugged it in it, it

244
00:14:12.750 --> 00:14:15.600
worked, it spun around, made
noise, it trapped all my

245
00:14:15.600 --> 00:14:19.170
keys by trap keys. I
mean, you push keys on

246
00:14:19.170 --> 00:14:21.240
the keyboard and actually lights
up kind of like a

247
00:14:21.240 --> 00:14:27.780
key logger without the malicious
intent. And so I was

248
00:14:27.780 --> 00:14:30.300
like, okay, so this thing
definitely does work and it

249
00:14:30.300 --> 00:14:33.180
works on XP. So now
I can focus on what

250
00:14:33.180 --> 00:14:36.990
changed between windows XP and
windows seven, or even windows

251
00:14:36.990 --> 00:14:44.850
Vista as a stepping stone.
So this is where we

252
00:14:44.850 --> 00:14:48.450
get a little more complex.
I, I take the various

253
00:14:48.450 --> 00:14:53.030
components and just throw them
into what's called a, and

254
00:14:53.660 --> 00:14:56.360
that basically takes the machine
language or the, you know,

255
00:14:56.360 --> 00:14:59.480
the bytes in the file
and converts them into a

256
00:14:59.930 --> 00:15:05.840
more readable assembly language. And
the tools that you use

257
00:15:05.840 --> 00:15:08.270
out there. The one I
use in particular is called

258
00:15:08.300 --> 00:15:12.970
Ida pro, which is an
expensive item. Really? It's not

259
00:15:12.970 --> 00:15:15.580
something you can get a
community free version of. No,

260
00:15:15.580 --> 00:15:19.180
they, well, they do have
a freeware version that this

261
00:15:19.180 --> 00:15:23.230
assembles x86 only binaries. And
it it's really, really, really

262
00:15:23.230 --> 00:15:25.630
bare bones. But if you
wanted to get your feet

263
00:15:25.630 --> 00:15:29.140
wet, definitely get the Ida
pro freeware version. But wouldn't

264
00:15:29.140 --> 00:15:31.810
you say that this is
where the managed business developer,

265
00:15:31.810 --> 00:15:37.750
the, the, the grid dragging
tree dragging, you know, developer,

266
00:15:38.200 --> 00:15:41.920
who's doing text boxes over
data where that person basically

267
00:15:41.920 --> 00:15:46.330
parts ways with the, with
the unmanaged code developer, like

268
00:15:46.330 --> 00:15:50.460
you said, I threw it
into a disassembler. Right, right.

269
00:15:50.470 --> 00:15:52.990
And of course, immediately my
brain exploded and began to

270
00:15:52.990 --> 00:15:55.060
leak out of my ears
while you were just like,

271
00:15:55.060 --> 00:15:56.920
yeah. You know, I just
started to smile. My favorite

272
00:15:56.920 --> 00:15:59.470
disassembler one of many disassembles
I have in my arsenal.

273
00:16:00.430 --> 00:16:02.320
Where does it manage? How
does it manage to develop

274
00:16:02.320 --> 00:16:03.970
or start even thinking about
that? I mean, I think

275
00:16:03.970 --> 00:16:07.570
most manage developers get, as
far as, you know, calling

276
00:16:07.840 --> 00:16:10.540
into export at DLL functions,
maybe using P invoke. And

277
00:16:10.540 --> 00:16:12.610
that's about as far as
it goes, maybe we maybe

278
00:16:12.610 --> 00:16:15.700
we've, we've all forgotten our
assembly language from, from college.

279
00:16:15.700 --> 00:16:20.290
It sounds like you have
not. Yeah. So, you know,

280
00:16:20.290 --> 00:16:23.560
as, as the developers started
to evolve or not developers,

281
00:16:23.560 --> 00:16:26.350
the languages started to evolve.
I I've actually been working

282
00:16:26.350 --> 00:16:28.990
my way backwards. You know,
C sharp came out. I

283
00:16:28.990 --> 00:16:31.780
kind of learned that. And
then I started learning C

284
00:16:31.780 --> 00:16:38.860
plus plus C you know,
assembly. And, but I think

285
00:16:38.860 --> 00:16:41.170
a good way to look
at this is that in

286
00:16:41.320 --> 00:16:46.090
managed code, you would normally
fire up reflector, right? You

287
00:16:46.090 --> 00:16:48.220
take your binary, throw it
in reflector and it converts

288
00:16:48.220 --> 00:16:51.070
it into a readable source
code that you can almost

289
00:16:51.070 --> 00:16:53.770
kind of compile. This is,
it's the same thing here.

290
00:16:53.770 --> 00:16:56.980
Ida pro has come so
far that it will produce

291
00:16:58.090 --> 00:17:03.940
almost compilable C plus plus
code. Yeah. So of course

292
00:17:03.940 --> 00:17:07.480
that's not a, it's not
a cheap product, but it

293
00:17:07.480 --> 00:17:10.240
produces something that's completely readable
and you don't really have

294
00:17:10.240 --> 00:17:15.520
to know assembly language at
that point. Hi, this is

295
00:17:15.520 --> 00:17:18.130
Scott coming to you from
another place in time. Are

296
00:17:18.130 --> 00:17:21.430
you using agile practices to
manage your software development? There's

297
00:17:21.430 --> 00:17:23.440
lots of tools in the
market that manage the steps

298
00:17:23.440 --> 00:17:25.660
of a project, but most
of them focus on individual

299
00:17:25.660 --> 00:17:28.480
roles, get ready for a
solution that caters for the

300
00:17:28.480 --> 00:17:31.600
success of the whole team.
Guys at Tellerik introduced team

301
00:17:31.600 --> 00:17:34.930
pulse. It's an agile project
management tool. That'll help you

302
00:17:34.930 --> 00:17:38.620
gather ideas, estimate plan, track
progress in a common workspace.

303
00:17:39.610 --> 00:17:42.280
Finally, companies, regardless of their
size can use a lightweight

304
00:17:42.280 --> 00:17:44.410
and convenient tool that makes
all the stakeholders work as

305
00:17:44.410 --> 00:17:48.340
a United team. Even if
they're in different countries by

306
00:17:48.340 --> 00:17:51.450
combining user interface and the
power of server light team

307
00:17:51.450 --> 00:17:54.240
poles removes the roadblocks that
you typically face and applying

308
00:17:54.240 --> 00:17:57.300
agile in an effective manner,
no more lost data, no

309
00:17:57.320 --> 00:18:01.530
disparate systems, no lack of
critical analytics regarding the health

310
00:18:01.530 --> 00:18:04.950
and philosophy project. See if
yourself get a free copy

311
00:18:05.040 --> 00:18:10.890
for five users in one
project at tellerik.com/team poles. And

312
00:18:10.890 --> 00:18:14.160
please do thank Tellerik for
supporting Hanselman it's on their

313
00:18:14.160 --> 00:18:21.090
Facebook fan page, facebook.com/t L
E R I K. We

314
00:18:21.090 --> 00:18:22.980
do appreciate it. There wouldn't
be a Hansel minutes. If

315
00:18:22.980 --> 00:18:26.940
there wasn't, Tellerik helping us.
So when you poke around

316
00:18:26.940 --> 00:18:29.400
on this hello, kitty application,
you have the exe and

317
00:18:29.400 --> 00:18:31.770
then you start figuring out,
well, it looks like there's

318
00:18:31.770 --> 00:18:34.470
actually this exe. And then
there's this DLL. You take

319
00:18:34.470 --> 00:18:36.390
a look at the DLL
and you find out that

320
00:18:36.390 --> 00:18:40.170
it has what's called export
functions. You find out that

321
00:18:40.170 --> 00:18:43.950
it's using its presenting functions
out to the world, and

322
00:18:43.950 --> 00:18:46.140
then you poke around inside
that and figure out what

323
00:18:46.140 --> 00:18:48.510
those functions use. So it's
basically like layers. You're looking

324
00:18:48.510 --> 00:18:52.200
at the call stack, the
executable calls this DLL, like

325
00:18:52.200 --> 00:18:54.900
read buffer and write buffer.
And then that read buffer,

326
00:18:54.900 --> 00:18:57.270
for example, then goes off
and starts poking around. And

327
00:18:57.270 --> 00:19:01.080
what you had mentioned before
the human interface device well-documented

328
00:19:01.080 --> 00:19:03.630
stuff, are you saying that
Ida pro shows you that,

329
00:19:03.660 --> 00:19:06.870
Oh, it's calling the foo
function. I know about that

330
00:19:06.870 --> 00:19:12.110
function on windows. Yeah, absolutely.
So you point Ida to

331
00:19:13.070 --> 00:19:15.770
the DLL, you go ahead
and just simply double click

332
00:19:16.520 --> 00:19:20.060
the exported function in this
case device INI, which stands

333
00:19:20.060 --> 00:19:23.210
for device initialization. You just
double click that and it

334
00:19:23.210 --> 00:19:27.230
will show you an assembly
listing, but you know, intermingled

335
00:19:27.230 --> 00:19:30.770
with that, this assembly are
actual human readable comments and

336
00:19:30.770 --> 00:19:33.950
say, Hey, this is a
call to windows function, a

337
00:19:34.010 --> 00:19:37.610
windows function B here are
the parameters. And are those

338
00:19:37.610 --> 00:19:40.100
written by real developers or
is this written generated by

339
00:19:40.100 --> 00:19:47.210
the Completely generated? Wow, it's
really smart stuff. So it

340
00:19:47.210 --> 00:19:50.510
kind of makes the reverse
engineering process a lot easier.

341
00:19:50.930 --> 00:19:53.460
Yeah. It sounds like a
very mature product. I mean,

342
00:19:53.460 --> 00:19:55.010
like back in the day,
we didn't have any of

343
00:19:55.010 --> 00:19:57.200
these things we just to,
Yeah. Back in the day

344
00:19:57.200 --> 00:19:59.640
you just run a disassembler
and it spits out raw

345
00:19:59.640 --> 00:20:02.750
ism and good luck, Honestly,
looking at that raw ASM.

346
00:20:02.750 --> 00:20:04.760
I think that when you
see that, that scene in

347
00:20:04.760 --> 00:20:07.160
the matrix where they're looking
at the matrix code that's

348
00:20:07.160 --> 00:20:09.350
falling and the guy's like,
yeah, I've been looking at

349
00:20:09.350 --> 00:20:12.290
this so long. I just
see blonde, brunette, redhead. That's

350
00:20:12.290 --> 00:20:14.900
literally what it feels like
when you know your assembler

351
00:20:14.900 --> 00:20:17.630
and, you know, 20 years
ago, I was that guy

352
00:20:17.660 --> 00:20:21.680
I have since overwritten all
of those bites with, you

353
00:20:21.680 --> 00:20:25.340
know, Microsoft light switch or
different things like that. Okay.

354
00:20:25.340 --> 00:20:27.590
So this thing goes and
calls create files. So you

355
00:20:27.590 --> 00:20:29.690
trace it all the way
down to something obvious, a

356
00:20:29.690 --> 00:20:34.040
nice basic API call it,
create file that's then failing.

357
00:20:35.330 --> 00:20:41.090
Yep. So the, basically the
device was opening up a

358
00:20:41.180 --> 00:20:44.720
communication channel with the device
to kind of tell it,

359
00:20:44.720 --> 00:20:49.360
Hey, look, light up and
spin please. And I using

360
00:20:49.360 --> 00:20:52.900
a debugger, I set a
break point on that so

361
00:20:52.900 --> 00:20:54.970
I can run through the
execution and it will stop

362
00:20:54.970 --> 00:20:58.420
there. And I can see
exactly what parameters it's calling

363
00:20:58.420 --> 00:21:02.110
with. Jot them down on
my piece of paper. And

364
00:21:02.890 --> 00:21:05.650
I stepped over it and
it's like, Hey, access denied.

365
00:21:05.710 --> 00:21:09.140
It's like, well, wait a
minute. What? So if you

366
00:21:09.160 --> 00:21:12.520
can repeat this process in
the production environment, the windows

367
00:21:12.520 --> 00:21:16.300
XP VM I talked about
and see it succeed. So

368
00:21:16.840 --> 00:21:20.020
that's our first, that's our
first error that we need

369
00:21:20.020 --> 00:21:23.530
to figure out. And you
kind of repeat this process

370
00:21:23.530 --> 00:21:26.430
until the thing works. I
need to specialize on this

371
00:21:26.430 --> 00:21:29.220
stuff where in my experience
kind of reading your blog

372
00:21:29.250 --> 00:21:32.010
over the last year or
so you seem to specialize

373
00:21:32.010 --> 00:21:36.360
in the, something has changed
someone like, like if, if

374
00:21:36.360 --> 00:21:38.550
I may be so bold,
like when you don't like

375
00:21:38.550 --> 00:21:41.310
something, it's because someone moved
your cheese, you know what

376
00:21:41.310 --> 00:21:43.800
I mean? You really don't
like that. And this is

377
00:21:43.800 --> 00:21:46.740
like an example where a
DLL function that worked two

378
00:21:46.740 --> 00:21:49.620
versions ago doesn't anymore. I
have no insight into the

379
00:21:49.620 --> 00:21:53.880
change, but I can demonstrably
show. This is not working

380
00:21:53.880 --> 00:21:59.400
like it used to. Right.
And, and to highlight actually

381
00:21:59.400 --> 00:22:03.330
I just forgot what she
said earlier, but I was

382
00:22:03.330 --> 00:22:05.040
going to highlight a particular
phrase you said, and I

383
00:22:05.040 --> 00:22:10.890
forgot it already. But the
part that bugs me the

384
00:22:10.890 --> 00:22:16.050
most though, is that it
it's hard to find. Well,

385
00:22:16.080 --> 00:22:21.210
that's annoying too, but finding
documentation on what changed is,

386
00:22:22.380 --> 00:22:25.500
is impossible. In this case,
I can not find any

387
00:22:25.500 --> 00:22:29.430
documentation that showed, Hey, breaking
changes from XP to seven

388
00:22:29.430 --> 00:22:34.740
or Vista create file on
hid devices may fail, blah,

389
00:22:34.740 --> 00:22:38.220
blah, blah. There's nowhere. You
will find that probably internally

390
00:22:38.220 --> 00:22:42.000
in Microsoft, you have some
cool change log that says

391
00:22:42.000 --> 00:22:46.680
that, but that's not available
to us. You really don't

392
00:22:46.680 --> 00:22:48.720
like that. I mean, I
think that other people, the

393
00:22:48.720 --> 00:22:50.640
other thing that people will
learn by reading your blog

394
00:22:50.670 --> 00:22:56.130
is that you really don't
like secrets Right. At all.

395
00:22:56.910 --> 00:22:59.190
Yeah. And I, and another
thing that annoys me is

396
00:22:59.520 --> 00:23:06.510
arbitrary limitations. And Microsoft's really
good at implementing arbitrary limitations.

397
00:23:07.350 --> 00:23:10.440
Now I say that, but
then when you actually dig

398
00:23:10.470 --> 00:23:14.070
deeper, it's usually because of
some legal reason or support

399
00:23:14.310 --> 00:23:16.650
reason, and there's, there are
reasons behind it. And I'm

400
00:23:16.650 --> 00:23:19.740
not saying Microsoft is trying
to be malicious, but I

401
00:23:19.740 --> 00:23:23.160
still hate the notion of
having an arbitrary limitation. For

402
00:23:23.160 --> 00:23:25.230
example, you'll run an app
and it says, Hey, I

403
00:23:25.230 --> 00:23:31.050
don't work on XP, get
windows server. And I think,

404
00:23:31.110 --> 00:23:35.940
I think that's how Mark
Russinovich started down his, a

405
00:23:36.000 --> 00:23:39.690
little hacking route with his
registry changed. Yeah. He made

406
00:23:39.690 --> 00:23:43.230
that little bit flip and
turned into workstations to server.

407
00:23:43.470 --> 00:23:50.000
Same thing. He basically started
by saying this this black

408
00:23:50.000 --> 00:23:53.390
box should not be black.
It should be transparent. So

409
00:23:53.570 --> 00:23:56.090
it's not. And therefore I
am going to blow the

410
00:23:56.090 --> 00:24:00.200
doors off of this box,
but you do that not

411
00:24:00.200 --> 00:24:03.050
only in software, but you
do that in, you do

412
00:24:03.050 --> 00:24:06.830
that with drivers, you do
that with websites, you'll, you

413
00:24:06.830 --> 00:24:10.310
you'll have cookies to see
things like any time that

414
00:24:10.310 --> 00:24:12.650
there's a preview or a
beta or a gate in

415
00:24:12.650 --> 00:24:15.080
your way, you will find
a way. But what's nice

416
00:24:15.080 --> 00:24:17.630
is that you don't, you
not only bust open the

417
00:24:17.630 --> 00:24:21.350
gate for yourself, but also
for other people, have you

418
00:24:21.350 --> 00:24:23.840
ever gotten in trouble or
really upset someone at Microsoft

419
00:24:23.840 --> 00:24:28.960
for opening something that shouldn't
have been opened? Yeah, several

420
00:24:28.960 --> 00:24:33.190
times mainly because I, I
did it, I did it

421
00:24:33.190 --> 00:24:36.190
in a public manner. And
then I didn't really sit

422
00:24:36.190 --> 00:24:40.900
down and analyze the impact
of it. One of the,

423
00:24:40.960 --> 00:24:42.970
one of the most recent
items was this Bing thing,

424
00:24:43.780 --> 00:24:47.860
you know, being rolled out
a, a preview to various

425
00:24:47.860 --> 00:24:51.400
people. I don't know the
exact scope of that. However,

426
00:24:51.400 --> 00:24:53.380
I, I shared one of
these cookies. I'm like, Hey,

427
00:24:53.380 --> 00:24:56.170
look, if you share this
cookie with everybody, you get

428
00:24:56.170 --> 00:25:00.400
the new homepage, everyone loved
it. But then we found

429
00:25:00.400 --> 00:25:04.150
out later on that everyone
that used the cookie is

430
00:25:04.150 --> 00:25:09.460
also sharing their search history,
this huge privacy issue. So

431
00:25:09.460 --> 00:25:12.760
then I started seeing searches
for various adult topics in

432
00:25:12.760 --> 00:25:16.960
my browser phone numbers, emails,
you'd be amazed at what

433
00:25:16.960 --> 00:25:20.320
people type into their search
engines, Even things about yourself

434
00:25:20.320 --> 00:25:22.720
and what fans that were
of you Absolutely is it

435
00:25:22.720 --> 00:25:25.270
started getting really personal. I
was like, Oh God, People

436
00:25:25.270 --> 00:25:30.070
who are searching for, for
you. So this was basically

437
00:25:30.070 --> 00:25:34.570
a, you enabled hijacking of
a session by virtue of

438
00:25:34.570 --> 00:25:36.760
the fact that you gave
away what was effectively a

439
00:25:36.760 --> 00:25:40.090
session key. Right? It was
exactly a session key. So

440
00:25:41.080 --> 00:25:44.050
I emailed the beam team
immediately and look, guys, I

441
00:25:44.080 --> 00:25:47.080
screwed up here. I shared
this key and you somehow

442
00:25:47.080 --> 00:25:49.210
block this on your end.
So this doesn't spin on

443
00:25:49.210 --> 00:25:52.120
a control. And they're like,
Oh God, what did you

444
00:25:52.120 --> 00:25:54.730
do? But Now do they
know you? I mean, is

445
00:25:54.730 --> 00:25:56.620
this like a thing? Like,
I mean, if you show

446
00:25:56.620 --> 00:26:00.340
up and you're like, yeah,
good news and bad news,

447
00:26:01.180 --> 00:26:02.950
the good news is where
there's no good news. Just

448
00:26:02.950 --> 00:26:05.560
bad news that they like,
Oh Ralph, what have you

449
00:26:05.560 --> 00:26:08.050
done again? I mean, you
you're building a relationship with

450
00:26:08.050 --> 00:26:11.020
people. Do you feel that
you're building like, are they

451
00:26:11.020 --> 00:26:13.090
really mad when this happens?
Or are they like, Oh,

452
00:26:13.100 --> 00:26:16.330
you know, thanks. Thanks. Thanks
for caring about the product.

453
00:26:16.720 --> 00:26:20.350
Like one perspective would be,
he cares. So that's awesome.

454
00:26:21.100 --> 00:26:23.440
Right. And another one would
be like, man, what's your,

455
00:26:23.620 --> 00:26:27.910
what's your deal? Stop doing
that. Yeah. Yeah. Usually the

456
00:26:28.240 --> 00:26:35.980
first several emails or phone
calls found somewhat negative, but

457
00:26:35.980 --> 00:26:38.980
then when you actually, you
know, dig deeper and talk

458
00:26:38.980 --> 00:26:40.660
to these guys and maybe
some other folks on the

459
00:26:40.660 --> 00:26:43.080
team, they're like, look guys,
I'm a big fan. I

460
00:26:43.080 --> 00:26:46.110
love when you hack this
stuff, you know, it's really

461
00:26:46.110 --> 00:26:48.570
creative. So it's like, okay,
I feel a little better

462
00:26:48.570 --> 00:26:52.230
there. Yeah. That's what happened
with the windows phone stuff.

463
00:26:52.260 --> 00:26:55.110
For example, what happened with
that? What's the story there?

464
00:26:56.190 --> 00:27:00.930
So with the man, we,
we opened up like three

465
00:27:00.930 --> 00:27:02.900
topics here and we haven't
been That's okay, we'll get

466
00:27:02.900 --> 00:27:08.810
there. We'll get there. So
I'm a part of, what's

467
00:27:08.810 --> 00:27:12.140
called the Chevron WP seven
group, a group of lung

468
00:27:12.140 --> 00:27:18.770
Zang, Chris Walsh, and myself.
And we basically opened up

469
00:27:18.770 --> 00:27:22.490
the phone to Homebrew development,
which is basically, you know,

470
00:27:22.490 --> 00:27:24.020
you write your own code
and you deploy it to

471
00:27:24.020 --> 00:27:26.450
the phone. It doesn't go
through the marketplace or its

472
00:27:26.450 --> 00:27:32.030
approval process in the process
of doing that. We, so

473
00:27:32.030 --> 00:27:36.860
we worked around the developer
unlock requirement. Basically Microsoft has

474
00:27:36.860 --> 00:27:42.440
imposed a $99 fee an
unlocking your phone for development

475
00:27:42.440 --> 00:27:45.530
purposes. Now, of course, that
fee covers other things like

476
00:27:45.530 --> 00:27:50.630
deploying applications. We have the
marketplace and support and, and

477
00:27:50.630 --> 00:27:54.860
some other stuff, but we
worked around that requirement and

478
00:27:54.860 --> 00:28:01.130
let people deploy code on
the phone. So you basically

479
00:28:01.160 --> 00:28:06.980
enabled Homebrew brew. Yup. Homebrew,
custom, whatever you want to

480
00:28:06.980 --> 00:28:09.860
call it. I don't want
to say the word jailbreak

481
00:28:09.880 --> 00:28:16.250
because we didn't gain additional
privileges. We simply averted the

482
00:28:16.250 --> 00:28:20.120
$99 requirement. I mean, Microsoft,
Microsoft puts out a tool

483
00:28:20.570 --> 00:28:24.440
that does this very thing.
If you pay 99 bucks,

484
00:28:25.040 --> 00:28:29.000
we just did it for
free. So it's not a,

485
00:28:29.000 --> 00:28:33.530
it's not a jail break
in the traditional sense. The

486
00:28:33.530 --> 00:28:39.020
way we got around that.
And Brandon Watson messaged us and

487
00:28:39.020 --> 00:28:43.790
called us. And that, that
started a whole relationship with

488
00:28:43.790 --> 00:28:48.920
the windows phone guys that
we're, we're still working on

489
00:28:48.920 --> 00:28:54.050
today. And do you, do
you guys see eye to

490
00:28:54.050 --> 00:28:57.290
eye or is this an
issue where you're always going

491
00:28:57.290 --> 00:28:59.780
to be poking the edges
of what they think is

492
00:28:59.780 --> 00:29:02.240
okay and you, you know,
like, is it a love,

493
00:29:02.240 --> 00:29:08.600
hate relation? It was initially,
but they've, they've come around

494
00:29:08.780 --> 00:29:12.920
and they see the value
in Homebrew development to the

495
00:29:12.920 --> 00:29:16.850
point where they're now letting
us deploy an official unlocking

496
00:29:16.850 --> 00:29:22.580
solution in the next month
or so it won't be

497
00:29:22.580 --> 00:29:26.570
free, but it'll be much
cheaper than 99 bucks. Yep.

498
00:29:27.290 --> 00:29:29.690
There'll be, I think about
nine bucks, you'll be able

499
00:29:29.690 --> 00:29:32.270
to plug in your phone,
unlock it, write whatever code

500
00:29:32.270 --> 00:29:35.990
you want and test it
out. Then at some point,

501
00:29:35.990 --> 00:29:38.390
if you want to deploy
that application on the marketplace

502
00:29:39.260 --> 00:29:43.330
at that time, you can
purchase real account and deploy

503
00:29:43.330 --> 00:29:47.280
it that way. That's interesting.
Do you think that this,

504
00:29:47.550 --> 00:29:49.710
are you forcing them to
do stuff like that and

505
00:29:49.710 --> 00:29:56.100
go, go outside the comfort
zone? Yeah. I mean like,

506
00:29:56.670 --> 00:29:57.990
is this a good thing?
Are you doing everyone in

507
00:29:57.990 --> 00:30:02.670
service because you are getting
people to you're pushing the

508
00:30:02.670 --> 00:30:05.610
envelope and then forcing Microsoft
to accept that the envelope

509
00:30:05.610 --> 00:30:08.880
is now been reset. Yeah,
I would definitely think so.

510
00:30:10.840 --> 00:30:15.090
Yeah. Are you doing, why,
why Microsoft? Why not Apple

511
00:30:15.090 --> 00:30:17.220
or Google or Facebook? It's
just a matter of, is

512
00:30:17.220 --> 00:30:19.980
this just a thing where
you're a fan? So as

513
00:30:19.980 --> 00:30:22.710
a fan, this is how
you show your love. Yeah.

514
00:30:22.710 --> 00:30:26.040
I've, I've been using, you
know, windows since it first

515
00:30:26.040 --> 00:30:31.980
started. Right. My birthdate shares.
I share a birthday with,

516
00:30:32.010 --> 00:30:38.100
with Microsoft windows. So yeah,
I've just been using windows

517
00:30:38.100 --> 00:30:41.250
forever. I know it in
and out and kinda what

518
00:30:41.250 --> 00:30:44.430
I stick to. And how
long have you been doing

519
00:30:44.430 --> 00:30:46.650
this? Like I can say
you are a low level

520
00:30:46.650 --> 00:30:50.190
guy. Have you always been
low level? Yeah. Well, I've

521
00:30:50.190 --> 00:30:55.830
always been working backwards. Everyone's
moving to HTML five C-sharp

522
00:30:56.310 --> 00:31:00.240
link. What's next? How much
lower can you get? Yeah,

523
00:31:00.240 --> 00:31:03.510
I don't, I really want
to learn electronics and hardware.

524
00:31:04.170 --> 00:31:09.900
That's been a, that's a
very hard, I know people

525
00:31:09.900 --> 00:31:13.080
out there that, you know,
for example, the iPhone hacker

526
00:31:13.080 --> 00:31:17.010
guy, I forget his name,
which is embarrassing, but you

527
00:31:17.010 --> 00:31:19.680
know, they, they, they plug
these USB things in there

528
00:31:19.680 --> 00:31:22.140
and they start finding all
these USB exploits and it's

529
00:31:22.140 --> 00:31:25.320
like, wow, I wish I
could know all that. But

530
00:31:25.680 --> 00:31:29.640
yeah, yeah, that might be
too low. I'm not sure

531
00:31:31.890 --> 00:31:33.570
What's next. What do you,
what's a, what's the next

532
00:31:33.570 --> 00:31:35.040
big hack for you? That
will be on your blog.

533
00:31:37.260 --> 00:31:39.930
I got to finish the
hello kitty stuff, because believe

534
00:31:39.930 --> 00:31:43.170
it or not, I didn't
finish that. I, people are

535
00:31:43.170 --> 00:31:49.170
watching, I got it to
spin up and make, or

536
00:31:49.170 --> 00:31:51.570
the lights came on when
I pushed keys on my

537
00:31:51.570 --> 00:31:54.270
keyboard, nothing happens. And it
turns out it's a very,

538
00:31:54.270 --> 00:32:01.140
very complicated issue with our
favorite technologies, UAC and the

539
00:32:01.140 --> 00:32:05.910
lesser known UI PAI, which
is a user interface privilege.

540
00:32:06.840 --> 00:32:09.960
Escalation. I probably screwed that
up, but Okay. Some other

541
00:32:09.960 --> 00:32:15.270
security thing. Yeah. User interface,
privilege isolation. So basically it

542
00:32:15.270 --> 00:32:20.070
prevents lower, lower privilege apps
from communicating with higher privileged

543
00:32:20.070 --> 00:32:22.740
apps on your desktop. This
is the reason why you

544
00:32:22.740 --> 00:32:26.760
can't cut and paste between
an admin elevated process and

545
00:32:26.760 --> 00:32:31.080
a normal one. Yeah. So
yeah, the introduction of all

546
00:32:31.080 --> 00:32:35.280
those technologies really screwed up
the way this hello kitty

547
00:32:35.280 --> 00:32:40.220
app was capturing keystrokes probably
for good. It's a tragedy.

548
00:32:42.170 --> 00:32:44.870
What are we going to
do? So there was actually

549
00:32:45.020 --> 00:32:49.250
a supported way of getting
that all working, which would

550
00:32:49.250 --> 00:32:51.650
be really interesting. I got
to finish up that blog

551
00:32:51.650 --> 00:32:56.900
post. Let's see what else
I'm still, we're still cranking

552
00:32:56.900 --> 00:33:02.180
on the Chevron WP seven
official unlock solution. I'm trying

553
00:33:02.180 --> 00:33:04.460
to finish this remote effects
stuff. I don't know if

554
00:33:04.460 --> 00:33:06.890
you've heard of that. Yeah,
real briefly. We were running

555
00:33:06.890 --> 00:33:10.040
out of time. Okay. So,
so remote effects is that,

556
00:33:10.670 --> 00:33:14.090
is that, that of the
technologies that kind of sits

557
00:33:14.090 --> 00:33:16.340
on top of RDP that
lets you do really cool

558
00:33:16.340 --> 00:33:21.890
things. Service side, for example,
play direct decks, accelerated games,

559
00:33:21.890 --> 00:33:25.790
or use the applications Silverlight
and flash full motion, video,

560
00:33:25.790 --> 00:33:30.740
USB devices, et cetera, et
cetera. This was demoed at

561
00:33:30.740 --> 00:33:33.170
a partner conference, I think
last year or maybe a

562
00:33:33.170 --> 00:33:38.960
while ago where HP was
on a thin client, bare

563
00:33:38.960 --> 00:33:43.970
bones, hardware playing crisis over
RDP. Now some of the

564
00:33:43.970 --> 00:33:47.270
folks out there that have
used RDP and have accidentally

565
00:33:47.270 --> 00:33:50.210
stumbled on a flash page,
know how slow RDP can

566
00:33:50.210 --> 00:33:53.990
be and to see someone
playing crisis over it at

567
00:33:54.410 --> 00:33:59.510
a fully playable speed is
amazing. And you're working on

568
00:33:59.510 --> 00:34:02.240
this or you're just working
to explore the area. It's

569
00:34:02.240 --> 00:34:05.210
primarily a servers technology, but
I've been trying to bring

570
00:34:05.210 --> 00:34:09.440
it into the consumer space
because I find it interesting

571
00:34:09.440 --> 00:34:12.470
that you can buy a
heavy duty servers, stick it

572
00:34:12.470 --> 00:34:15.260
into your closet and have
all these thin clients at

573
00:34:15.260 --> 00:34:17.990
home and never have to
keep upgrading all these machines.

574
00:34:19.280 --> 00:34:21.830
You can just upgrade the
server every now and then

575
00:34:23.270 --> 00:34:27.110
delegate all that, that box.
So I've been, I've been

576
00:34:27.110 --> 00:34:30.860
running a series on that.
It's a little delayed right

577
00:34:30.860 --> 00:34:35.080
now, cause I'm trying to
hack around some limitations. Cool.

578
00:34:35.080 --> 00:34:38.620
So people can check out
your blog at, within windows.com.

579
00:34:39.160 --> 00:34:41.020
Yep. Or if they want
to follow me on Twitter

580
00:34:41.020 --> 00:34:46.270
and hear all my complaints
within Rafael. All right. Very

581
00:34:46.270 --> 00:34:48.250
cool. We'll put all that
information in the show notes.

582
00:34:48.730 --> 00:34:52.060
Okay. Alright. Thanks for hanging
out. Thanks Scott. This has

583
00:34:52.060 --> 00:34:55.510
been another episode of Hansel
minutes. See you again next

584
00:34:55.510 --> 00:34:55.750
week.

