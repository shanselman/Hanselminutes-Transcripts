WEBVTT FILE

1
00:00:12.120 --> 00:00:17.520
From hanselminutes.com. It's Hansel minutes,
a weekly discussion with web

2
00:00:17.520 --> 00:00:22.260
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.260 --> 00:00:28.470
number three 67. Recorded live
Thursday, April 11, 2013. Support

4
00:00:28.470 --> 00:00:31.740
for Hanselman it's is provided
by Tellerik offering the best

5
00:00:31.740 --> 00:00:40.380
in developer tools and support
online@telerikdotcomandbyfranklins.net makers of gesture pack

6
00:00:40.500 --> 00:00:43.890
a powerful gesture, recording and
recognition system for Microsoft connect

7
00:00:44.040 --> 00:00:51.000
for windows developers details@gesturepak.com. In
this episode, Scott talks with

8
00:00:51.030 --> 00:00:54.810
Christian Heilmann about the new
Firefox OSTP and the open

9
00:00:54.810 --> 00:01:00.270
mobile web. Hi, this is
Scott Hanselman. This is another

10
00:01:00.270 --> 00:01:03.180
episode of Hansel minutes, and
I'm here in Las Vegas

11
00:01:03.180 --> 00:01:05.520
at the MGM grand at
the very first angle brackets

12
00:01:05.520 --> 00:01:07.680
conference. We've just come out
of the keynote with Christian

13
00:01:07.680 --> 00:01:11.100
Heilmann from Mozilla. How are
you? I'm good. Rather tired,

14
00:01:11.130 --> 00:01:13.680
but other than good, you
are jet setting all over

15
00:01:13.680 --> 00:01:16.230
the planet. Yes. And it's
quite bizarre when you fly

16
00:01:16.230 --> 00:01:18.000
with bread with American airlines
to do you have to

17
00:01:18.000 --> 00:01:20.130
always go through Dallas, no
matter where you go, it's

18
00:01:20.130 --> 00:01:23.010
a requirement. Yeah. That's part
of America. You have to

19
00:01:23.010 --> 00:01:25.770
go through Dallas and every,
anytime you fly anywhere, you

20
00:01:25.770 --> 00:01:27.150
got to go through Dallas.
Well, that's good to know.

21
00:01:27.180 --> 00:01:30.240
So now I know my
way around the airport. Cool.

22
00:01:30.240 --> 00:01:32.250
So you, in your keynote,
you talked about something called

23
00:01:32.250 --> 00:01:35.730
the vanilla web diet. Yes.
And I've, I've heard of

24
00:01:35.760 --> 00:01:40.110
vanilla JS, which is a,
a web library in air

25
00:01:40.110 --> 00:01:42.420
quotes that I talk about
in my, in my talks.

26
00:01:42.660 --> 00:01:44.460
Talk to me about the
vanilla web diet. Well, the

27
00:01:44.460 --> 00:01:46.650
vanilla web diet was an
idea that originally wanted to

28
00:01:46.650 --> 00:01:48.420
bring out as a book,
which I'm running out of

29
00:01:48.420 --> 00:01:50.280
time right now to do,
but we'll see what we

30
00:01:50.280 --> 00:01:51.420
can do with it. It's
probably going to be a

31
00:01:51.420 --> 00:01:54.330
chapter in another book. I
just find it done right

32
00:01:54.330 --> 00:01:57.360
now that we're fleeing into
abstraction a lot. We've we've

33
00:01:57.360 --> 00:01:59.670
we have so many wonderful
things in browsers and newer

34
00:01:59.670 --> 00:02:02.130
browsers, and we could use
all of that and a

35
00:02:02.130 --> 00:02:03.930
few lines of code. We
can create lots of, lots

36
00:02:03.930 --> 00:02:06.300
of effects, but instead of
doing that, we just include

37
00:02:06.300 --> 00:02:09.300
five 50 libraries and 12
different widgets. So we can

38
00:02:09.300 --> 00:02:11.730
actually get that effect. And
the reason is that we

39
00:02:11.730 --> 00:02:13.920
want to give the same
effect to every browser out

40
00:02:13.920 --> 00:02:16.920
there. So with the vanilla
website, what I'm actually explaining

41
00:02:16.920 --> 00:02:19.260
is how to use Webster
nerds and how to use

42
00:02:19.260 --> 00:02:23.040
a progressive enhancement approach to
make sure that newest browsers

43
00:02:23.070 --> 00:02:25.920
get the coolest, newest things
in a fashion that doesn't

44
00:02:25.920 --> 00:02:30.000
actually empty your battery, or
slow down your computer and

45
00:02:30.000 --> 00:02:32.790
odor browsers kits, things that
just work. So instead of

46
00:02:32.790 --> 00:02:35.160
just building for the newest
and then complaining that old

47
00:02:35.160 --> 00:02:37.650
browsers out there, which is,
should build things that are

48
00:02:37.650 --> 00:02:40.950
based on HTML with some
CSS and JavaScript on top

49
00:02:40.950 --> 00:02:43.800
and getting better and better,
according to what the hardware

50
00:02:43.800 --> 00:02:45.720
it's running on and what
the browser it's run in

51
00:02:45.720 --> 00:02:48.120
can do. And a lot
of people forget this by

52
00:02:48.120 --> 00:02:50.160
now. I mean, when I
was spending, when we started

53
00:02:50.160 --> 00:02:52.320
on the web, we just
had nothing else. We basically

54
00:02:52.410 --> 00:02:55.170
had to learn HTML to
make it work. And nowadays

55
00:02:55.170 --> 00:02:57.660
we just start with like
different frameworks and we started

56
00:02:57.660 --> 00:02:59.590
with different build scripts and
we have a lot of

57
00:02:59.590 --> 00:03:01.570
code that we don't know
what it does. And to

58
00:03:01.570 --> 00:03:03.520
me, that sounds a bit
dangerous in an environment where

59
00:03:03.520 --> 00:03:06.190
everything is just in time
compiling and running in a

60
00:03:06.190 --> 00:03:09.400
browser that I can't control.
So I think it's, it's

61
00:03:09.400 --> 00:03:11.080
wonderful to see that when
you gave to, when I

62
00:03:11.080 --> 00:03:13.900
gave this talk this morning,
that people it's shocking to

63
00:03:13.900 --> 00:03:15.850
see, but at the same
time, interesting to see that

64
00:03:15.880 --> 00:03:18.940
you can inspire people by
showing them an nth child

65
00:03:18.940 --> 00:03:22.510
selector in CSS, for example,
that they've never used before,

66
00:03:22.510 --> 00:03:25.480
because they've been told about
three years ago that internet

67
00:03:25.480 --> 00:03:28.120
Explorer so-and-so cannot run it.
So they will never use

68
00:03:28.120 --> 00:03:30.610
it. People don't understand that
the web is now changing

69
00:03:30.610 --> 00:03:33.610
every six weeks. So our
technologies are available to us

70
00:03:33.850 --> 00:03:36.250
if we just dare to
use them. And there's no

71
00:03:36.250 --> 00:03:38.170
way that you can actually
build a new product that

72
00:03:38.170 --> 00:03:40.270
you say you're going to
release next year and you

73
00:03:40.270 --> 00:03:42.640
shouldn't build it on the
current state of technology, but

74
00:03:42.640 --> 00:03:45.520
on the coming state of
technology, otherwise you will always

75
00:03:45.520 --> 00:03:48.610
build outdated material that just
gets bigger and bigger. The

76
00:03:48.610 --> 00:03:50.860
longer we go there, that's
where the diet thing comes

77
00:03:50.860 --> 00:03:54.220
in. A lot of products
start to grow because people

78
00:03:54.220 --> 00:03:56.470
don't know how to maintain
them or maintain us. Just

79
00:03:56.470 --> 00:03:58.420
add more code onto it
because they don't even want

80
00:03:58.420 --> 00:04:00.610
to look at the old
stuff anymore. So from the

81
00:04:00.610 --> 00:04:03.750
very beginning, thinking lean makes
better products. You know, I

82
00:04:03.750 --> 00:04:07.290
just, literally two weeks ago
pulled out some JavaScript. I

83
00:04:07.300 --> 00:04:10.080
was a jQuery call that
looked at odd and even

84
00:04:10.080 --> 00:04:13.860
table rows and made them
alternating colors. And I just

85
00:04:13.860 --> 00:04:14.970
looked at that and was
like, wait a second. I

86
00:04:14.970 --> 00:04:17.790
think we have that now.
Yes. It's just, it was

87
00:04:17.790 --> 00:04:20.730
almost like refactoring via subtraction,
just pulling stuff out and

88
00:04:20.730 --> 00:04:22.620
say, Oh, we have that.
We have that. So let

89
00:04:22.620 --> 00:04:24.360
me ask you this. Should
I feel guilty if I

90
00:04:24.360 --> 00:04:28.050
put jQuery in my website?
No, you shouldn't. It's all

91
00:04:28.050 --> 00:04:30.600
about the use case of
it. You should feel guilty

92
00:04:30.600 --> 00:04:33.420
if you use jQuery in
a very wrong way. jQuery

93
00:04:33.420 --> 00:04:37.260
is a very powerful tool
to access the Dom. Anything

94
00:04:37.260 --> 00:04:39.630
to slow down a mobile
interface is a lot of

95
00:04:39.630 --> 00:04:42.060
access to the dome. So
a lot of, a lot

96
00:04:42.060 --> 00:04:44.700
of Jake very look short
and looks very simple, but

97
00:04:44.700 --> 00:04:47.100
actually does horrible, horrible things
to the browser under the

98
00:04:47.100 --> 00:04:50.260
hood. So the usage of
Jake very may make it,

99
00:04:50.260 --> 00:04:53.490
the problem making shake very,
your start is actually not

100
00:04:53.490 --> 00:04:56.730
about idea because it actually
gives you the, it gives

101
00:04:56.730 --> 00:05:00.030
you the same across all
device, across all our browsers.

102
00:05:00.240 --> 00:05:01.920
The issue that you have
is as soon as you

103
00:05:01.920 --> 00:05:04.500
go into a mobile environment,
then you might actually have

104
00:05:04.500 --> 00:05:07.530
realized that jQuery slows you
down a lot. And it's

105
00:05:07.530 --> 00:05:11.700
another HTTP request. Your basically
your functionality doesn't work until

106
00:05:11.700 --> 00:05:14.340
the library has loaded and
on a mobile device, this

107
00:05:14.340 --> 00:05:16.470
can be a crucial five
seconds that will lose you

108
00:05:16.470 --> 00:05:20.640
a, an end user. Is
it primarily the CSS selector

109
00:05:20.670 --> 00:05:23.580
that is the value added
by J crew? Like, is

110
00:05:23.810 --> 00:05:26.190
it kind of, puttied over,
it's spackled over all of

111
00:05:26.190 --> 00:05:29.310
these problems with early browsers,
but now we can go

112
00:05:29.310 --> 00:05:32.250
in and do CSS selectors.
So do we even need

113
00:05:32.250 --> 00:05:34.830
it at all? I think
it did what it did

114
00:05:34.830 --> 00:05:37.680
is actually it made it
easier for a Dom access.

115
00:05:37.680 --> 00:05:40.290
It made easier to use
events because there was a

116
00:05:40.290 --> 00:05:42.900
lot of differences between browsers
there as well. And it

117
00:05:42.900 --> 00:05:45.240
made it actually, it had
a different approach to web

118
00:05:45.240 --> 00:05:48.780
development and basically said, instead
of just writing things and

119
00:05:48.780 --> 00:05:52.080
then writing code again, everything
is about accessing the dome

120
00:05:52.220 --> 00:05:56.730
and interacting with HTML elements.
So that allowed people who

121
00:05:56.730 --> 00:05:59.450
don't know about programming at
all to make animations, to

122
00:05:59.450 --> 00:06:02.780
make beautiful things, come from,
decide and go out from

123
00:06:02.930 --> 00:06:05.360
the top. But the issue
with it is it that

124
00:06:05.360 --> 00:06:07.970
all of it is actually
animated in Java script. And

125
00:06:07.970 --> 00:06:10.670
all of it is actually
generated for you. So you

126
00:06:10.670 --> 00:06:13.580
don't know how to control
it. And right now, when

127
00:06:13.580 --> 00:06:16.130
I do a, when I
do an animation in Java

128
00:06:16.130 --> 00:06:18.710
script, I actually do everything
on the main processor, which

129
00:06:18.710 --> 00:06:20.420
on a phone is slow.
But if I do a

130
00:06:20.420 --> 00:06:22.760
CSS animation, I do it
on the video chip, which

131
00:06:22.760 --> 00:06:25.250
is actually much faster and
doesn't drain as much battery.

132
00:06:25.730 --> 00:06:28.640
So the main issue with
that we, that people learned

133
00:06:28.640 --> 00:06:31.820
from, from jQuery is that
interaction with the HTML and

134
00:06:31.820 --> 00:06:34.370
JavaScript should happen all the
time. When in reality, you

135
00:06:34.370 --> 00:06:37.610
want to make that as
few interactions as possible. You

136
00:06:37.610 --> 00:06:39.830
just want to flush them
out in one go, but

137
00:06:39.830 --> 00:06:41.750
a lot of people just
ride. Jacob was saying like,

138
00:06:41.930 --> 00:06:44.570
do this, change, this, do
this change does and force

139
00:06:44.580 --> 00:06:47.690
the browser to rerender every
single time. And reflow every

140
00:06:47.690 --> 00:06:50.480
single time. So a lot
of bad in a battery

141
00:06:50.480 --> 00:06:54.200
lagging interfaces because people don't
understand the impact that using

142
00:06:54.200 --> 00:06:57.370
those five lines or this
plugin has. That's really interesting.

143
00:06:57.370 --> 00:06:58.780
Let's try to dig into
that a little bit. So

144
00:06:58.780 --> 00:07:01.210
you're saying if I go
and say, you know, dollar

145
00:07:01.210 --> 00:07:05.110
sign, I always say open
Resig, and then say like

146
00:07:05.110 --> 00:07:10.510
during then close Racich dot
fade, fade in that's a

147
00:07:10.510 --> 00:07:14.500
procedural animation. It's, it's a,
it's a tight loop. Yes.

148
00:07:14.500 --> 00:07:17.410
I'm going, It's basically, it's
basically going to the element

149
00:07:17.410 --> 00:07:20.890
and changing the opacity on
with a set timeout, every

150
00:07:20.890 --> 00:07:23.800
20 milliseconds or something like
that, or 20 milliseconds or

151
00:07:23.800 --> 00:07:26.770
something like that. Whereas the
browser doesn't render every 200

152
00:07:26.770 --> 00:07:29.470
milliseconds. It weights every time
when there is a new,

153
00:07:29.590 --> 00:07:31.840
when there's a new, a
60 frame of 60 Hertz

154
00:07:31.840 --> 00:07:35.920
frame to be rendered. So
what I'm working with with

155
00:07:35.950 --> 00:07:38.110
Jake very right now, as
well, and jQuery too, is

156
00:07:38.110 --> 00:07:40.900
thinking about this as well
as using a request animation

157
00:07:40.900 --> 00:07:44.110
frame to make that animation
better. And also to test

158
00:07:44.110 --> 00:07:47.170
if CSS animations are available
and then just generate a

159
00:07:47.170 --> 00:07:50.050
CNS CSS animation on the
fly, rather than doing the

160
00:07:50.050 --> 00:07:53.470
procedural direct access to the
dome and changing the element.

161
00:07:54.390 --> 00:07:57.250
Other, other libraries like Steptoe
do that already. That's why

162
00:07:57.250 --> 00:07:59.020
they are used on mobile
and much more than Jake

163
00:07:59.020 --> 00:08:01.150
barriers. Hmm. So you think
that we need to kind

164
00:08:01.150 --> 00:08:04.630
of remind ourselves or rediscover
the web and a lot

165
00:08:04.630 --> 00:08:07.390
of the declarative things that
we can do. I mean,

166
00:08:07.390 --> 00:08:09.370
there's a whole bunch of
power in CSS that will

167
00:08:09.370 --> 00:08:13.330
run on the graphics chip
that will be friendlier faster,

168
00:08:13.330 --> 00:08:18.310
smoother. Yeah. We have much
more to gain now by

169
00:08:18.310 --> 00:08:21.850
actually building things faster and
smaller because the mobile web

170
00:08:21.880 --> 00:08:24.220
is there. People are using
the tablets. People are using

171
00:08:24.220 --> 00:08:27.040
their, their mobile phones and
all of them are different.

172
00:08:27.040 --> 00:08:29.590
You cannot expect somebody to
have the newest iPhone five

173
00:08:29.590 --> 00:08:32.350
and only runs smoothly on
that one. People have really

174
00:08:32.350 --> 00:08:35.650
rubbish older phones and let
get phones handed down from

175
00:08:35.650 --> 00:08:38.740
their parents or their siblings.
So we have a whole

176
00:08:38.740 --> 00:08:42.790
new market out there that
needs very performing web products.

177
00:08:42.790 --> 00:08:46.090
And especially as people are
saying like that, that, that

178
00:08:46.120 --> 00:08:48.400
native is better than the
web. So we have to

179
00:08:48.400 --> 00:08:51.850
really be better than better
than native by beating them

180
00:08:51.850 --> 00:08:54.130
in a market or in
a way that they can't

181
00:08:54.130 --> 00:08:57.000
cover. So a web app
can actually work on an

182
00:08:57.000 --> 00:08:58.980
iPhone, can work on an
Android, can work on a

183
00:08:58.980 --> 00:09:02.670
tablet, can work on a
desktop in HTML five. I

184
00:09:02.670 --> 00:09:05.370
have to build them natively
for all the other platforms

185
00:09:05.370 --> 00:09:07.050
and they can never be
the same. They're much more

186
00:09:07.050 --> 00:09:09.880
fixed in the, in the
specifications of the hardware and

187
00:09:09.880 --> 00:09:12.240
the specification of the size
of screen. Whereas with the

188
00:09:12.240 --> 00:09:15.420
web, I actually have to
build it flexible from the

189
00:09:15.420 --> 00:09:18.900
very start we right now,
we B just released Firefox.

190
00:09:18.900 --> 00:09:21.540
So us, and that one
is a 320 by 480

191
00:09:21.540 --> 00:09:24.420
pixel phone. That will be,
that will be sold in

192
00:09:24.600 --> 00:09:26.280
two months time. I think
the first one gets sold

193
00:09:26.280 --> 00:09:29.130
in Poland. And then we
go to South America and

194
00:09:29.130 --> 00:09:33.000
other markets. So we actually
bringing web connectivity on mobiles

195
00:09:33.030 --> 00:09:36.030
to markets that cannot afford
iPhones or Androids and cannot

196
00:09:36.030 --> 00:09:38.550
get them. They're also going
to be, they're also going

197
00:09:38.550 --> 00:09:40.860
to be billing with the
telephone bill, so you don't

198
00:09:40.860 --> 00:09:43.350
need to have a credit
card. So there's billions of

199
00:09:43.350 --> 00:09:46.830
new web users on mobile
technology coming this year to

200
00:09:46.830 --> 00:09:49.050
us. But we actually have
to make that run on

201
00:09:49.050 --> 00:09:51.900
a one gigahertz machine with
256 Meg of Ram. And

202
00:09:51.900 --> 00:09:54.270
we cannot do that if
we just put 15 libraries

203
00:09:54.270 --> 00:09:56.460
in there and just look
at things on a desktop

204
00:09:56.460 --> 00:09:58.110
and say like, well, that's
smooth, it's gotta be smooth

205
00:09:58.140 --> 00:10:01.100
everywhere. Right. Hmm. Okay. So
if I, you know, I

206
00:10:01.100 --> 00:10:04.880
have apps with 15 JavaScript
files and I have jQuery

207
00:10:05.150 --> 00:10:07.280
tight loops and things like
that. If I bring this

208
00:10:07.280 --> 00:10:09.320
on a, on a lower
end phone, it's going to

209
00:10:09.320 --> 00:10:11.060
just be awful. It's going
to be slow. It's going

210
00:10:11.060 --> 00:10:13.520
to be Laggy. It's going
to be a, it might

211
00:10:13.520 --> 00:10:15.140
actually even break. I mean,
like if you look at

212
00:10:15.140 --> 00:10:18.590
blackberries, for example, low-end blackberries.
After a while, they, when,

213
00:10:18.610 --> 00:10:21.770
when, when a certain JavaScript
takes too long to load,

214
00:10:21.770 --> 00:10:24.230
it just stops rendering. Well,
there is a great talk

215
00:10:24.230 --> 00:10:26.630
about, about these kinds of
things that a five second

216
00:10:26.630 --> 00:10:29.570
rule that people stop after
five seconds to actually reload

217
00:10:29.570 --> 00:10:31.610
your page rather than waiting
for the loading on a

218
00:10:31.610 --> 00:10:34.780
mobile device and these kinds
of things. It's just, it's,

219
00:10:34.780 --> 00:10:38.150
it's just incredible. How much,
how much less patient we

220
00:10:38.150 --> 00:10:40.580
are on a mobile device.
I always love it when

221
00:10:40.580 --> 00:10:42.560
people go around with their
maps and like, Oh my

222
00:10:42.620 --> 00:10:45.220
God, it confined me. And
you're like, well, you're aware

223
00:10:45.230 --> 00:10:47.270
this goes to space for
you. And back, this is

224
00:10:47.270 --> 00:10:49.820
science fiction in your pocket,
right? But we feel like

225
00:10:49.850 --> 00:10:51.920
we, we paid so much
money for that phone. We

226
00:10:51.920 --> 00:10:54.110
pay so much every month
we should get a better

227
00:10:54.110 --> 00:10:57.830
service. Is that a belief
of, we should get better

228
00:10:57.830 --> 00:10:59.870
from that. You've seen that
you've seen the Louis C

229
00:10:59.870 --> 00:11:03.140
K bit about how everything
is amazing and no one

230
00:11:03.140 --> 00:11:06.140
is happy. Yeah, exactly. Yeah.
I actually gave a keynote

231
00:11:06.140 --> 00:11:08.800
at HTMO Def con last
week about this, where I

232
00:11:08.830 --> 00:11:11.570
straight said that the web
and native cannot be compared

233
00:11:11.570 --> 00:11:14.750
at all because native is
based on the principle of

234
00:11:14.780 --> 00:11:18.650
building obsolescence, which was written
in 1955, which basically was

235
00:11:18.710 --> 00:11:22.430
initially initiated back down in
a journal of retailing saying

236
00:11:22.430 --> 00:11:24.530
that the economy in America
can only survive. If we

237
00:11:24.530 --> 00:11:26.990
build products that break after
a year, we have to

238
00:11:26.990 --> 00:11:29.990
keep people constantly buying new
products and products have to

239
00:11:30.200 --> 00:11:32.720
have to be outdated. And
then they shifted it even

240
00:11:32.720 --> 00:11:34.970
further a year later, what
it said, it's going to

241
00:11:34.970 --> 00:11:36.950
be, it's going to look
outdated. It doesn't have to

242
00:11:36.950 --> 00:11:39.380
break, but it has to
be, you have to feel,

243
00:11:39.380 --> 00:11:41.480
not be part of the
cool in-crowd. If you don't

244
00:11:41.480 --> 00:11:43.760
have the newest product. And
that's what all of advertising

245
00:11:43.760 --> 00:11:47.420
is around. And that's why
native applications are actually built

246
00:11:47.450 --> 00:11:50.870
to sell the next level
of hardware. It's not necessarily

247
00:11:50.870 --> 00:11:53.890
about the application itself. It's
a, it's a new, cool

248
00:11:53.890 --> 00:11:56.500
game coming out that only
runs on iPhone six, seven,

249
00:11:56.500 --> 00:11:59.980
eight, we'll sell six, seven,
eight, but people will not

250
00:11:59.980 --> 00:12:02.650
actually say, ah, I want
to actually get it for

251
00:12:02.650 --> 00:12:05.290
the older devices. And that's
what really annoys me also

252
00:12:05.290 --> 00:12:07.540
that they don't sync. I
don't, I play temple run

253
00:12:07.540 --> 00:12:09.280
on my, on my, on
my tablet and on my

254
00:12:09.280 --> 00:12:11.080
mobile phone. And I have
to play it on both

255
00:12:11.080 --> 00:12:12.870
of them. And cause they
don't sync at all. I

256
00:12:12.870 --> 00:12:16.200
don't play angry birds anymore
because I've got six versions

257
00:12:16.200 --> 00:12:18.270
of angry birds and none
of them know what level

258
00:12:18.270 --> 00:12:20.280
I'm on. Yeah. And I
thought that was the promise

259
00:12:20.280 --> 00:12:22.710
of the cloud. Yeah. And
I mean like with native

260
00:12:22.710 --> 00:12:25.290
apps, it can't be because
you have the problem that

261
00:12:25.290 --> 00:12:27.870
you either go into a
third party service, like score

262
00:12:27.870 --> 00:12:31.020
loop of things like that.
Or you just don't don't

263
00:12:31.020 --> 00:12:33.540
do the sinking because it
is an, it is a

264
00:12:33.540 --> 00:12:36.480
binary code, it's it? It
cannot just sync with others.

265
00:12:36.690 --> 00:12:39.330
Yeah. Well you have to
run a backend service then

266
00:12:39.330 --> 00:12:41.580
and be responsible for that
backend service and own that

267
00:12:41.580 --> 00:12:43.530
data and all those things.
That's why things like parse

268
00:12:43.530 --> 00:12:46.770
and mobile services exist. Well,
that's general. I mean, native

269
00:12:46.770 --> 00:12:49.350
apps are basically much harder
to upgrade because we have

270
00:12:49.350 --> 00:12:52.080
to upgrade them as a
whole bunch. Whereas an HTML

271
00:12:52.080 --> 00:12:55.110
five application, you can only
upgrade the routine parts that

272
00:12:55.110 --> 00:12:57.270
you want to upgrade. And
to me that makes a

273
00:12:57.270 --> 00:13:00.240
lot more sense to download
like 20 K over a

274
00:13:00.240 --> 00:13:03.300
connection and download 23 mega
over connection. I wrote a

275
00:13:03.300 --> 00:13:05.910
blog That got some play
last year where I said

276
00:13:05.910 --> 00:13:09.570
that apps and app stores
feel like CD ROMs did

277
00:13:09.570 --> 00:13:11.730
in the nineties where you
would, you know, something would

278
00:13:11.730 --> 00:13:13.650
be sent to you and
you'd get the CD and

279
00:13:13.650 --> 00:13:16.170
then you'd go on and
you download the patch for

280
00:13:16.170 --> 00:13:18.270
that CD. And then you'd
always have this update. You'd

281
00:13:18.460 --> 00:13:21.990
get like 600 megs of
binary and then you'd have

282
00:13:21.990 --> 00:13:23.490
to get the patch for
it. Like you go and

283
00:13:23.490 --> 00:13:26.670
get 'em remember the seventh
guest. Right. And you got

284
00:13:26.670 --> 00:13:29.910
to go get seventh guest's
1.0 0.2 and make sure

285
00:13:29.910 --> 00:13:31.830
you have the latest, this
and the latest drivers and

286
00:13:31.830 --> 00:13:35.220
things like that, that, that
constant tension between native apps

287
00:13:35.250 --> 00:13:38.010
and web apps has been
a frustration for me because

288
00:13:38.010 --> 00:13:41.040
I'm not sure what's right.
I mean, sometimes it should

289
00:13:41.040 --> 00:13:43.470
be a native app, like,
you know, world of Warcraft

290
00:13:44.040 --> 00:13:46.470
or I don't know, maybe
Microsoft word, but then you

291
00:13:46.470 --> 00:13:49.260
see something like word in
the cloud and you go,

292
00:13:49.260 --> 00:13:51.660
wow. That's, that's like 80%
of word. I mean, it's

293
00:13:51.780 --> 00:13:53.820
pretty much it, you know,
I mean like HTML five

294
00:13:53.820 --> 00:13:57.990
version of word and Excel
look pretty fine. Yeah. We

295
00:13:57.990 --> 00:14:02.580
just released together with the
game show in San Francisco.

296
00:14:02.580 --> 00:14:06.120
We just ported the unreal
3d engine to web GL.

297
00:14:06.540 --> 00:14:08.670
And that one is amazing.
I mean like, but it's

298
00:14:08.670 --> 00:14:10.260
only for desktop, but it's
not gonna not going to

299
00:14:10.260 --> 00:14:13.440
happen on any level on
any tablets anytime soon. But

300
00:14:13.440 --> 00:14:15.780
I totally love that you
can convert C plus plus

301
00:14:15.780 --> 00:14:17.910
to JavaScript now. Cause you
kind of go to somebody

302
00:14:17.910 --> 00:14:20.700
like a, like a electronic
arts and say like, Hey,

303
00:14:20.700 --> 00:14:22.830
how about you write everything
in HTML five and fire

304
00:14:22.830 --> 00:14:25.320
those 20 C plus plus
guys you have, right. It's

305
00:14:25.320 --> 00:14:27.600
it makes much more sense
to allow people a foot

306
00:14:27.600 --> 00:14:29.670
in the door and actually
come in sideways into the

307
00:14:29.670 --> 00:14:34.350
web. And I think the
D D the other description

308
00:14:34.350 --> 00:14:37.740
that I always find is
like, I remember like download.com

309
00:14:37.740 --> 00:14:40.260
or to cows or fresh
meat and all of these

310
00:14:40.260 --> 00:14:42.750
look like now look like
shopping modes. After the Samba

311
00:14:42.750 --> 00:14:45.530
attack, there's like nothing in
there is updated any longer.

312
00:14:45.690 --> 00:14:47.040
Well, I think, and the
only way we can get

313
00:14:47.040 --> 00:14:50.700
people to download crap is
by putting sidecar crap in

314
00:14:50.700 --> 00:14:54.890
that. So like I recommended
this DVD burner program because

315
00:14:54.890 --> 00:14:56.990
windows eight pulled the DVD
burner out. So I said,

316
00:14:57.020 --> 00:14:59.690
Oh, go get DVD styler.
And this worked great for

317
00:14:59.690 --> 00:15:02.870
six months. And then I
start getting complaints from people

318
00:15:02.870 --> 00:15:04.850
who read my blog and
they're like, this installed a

319
00:15:04.850 --> 00:15:08.960
toolbar. And now it installs
for toolbars and some spyware.

320
00:15:08.990 --> 00:15:11.750
And that's the only way
that they can get, they

321
00:15:11.750 --> 00:15:14.840
can justify that model by,
you know, cause they're providing

322
00:15:14.840 --> 00:15:16.460
useful third service, but no
one wants to pay for

323
00:15:16.460 --> 00:15:20.630
it is to put all
of this evil barnacles attached

324
00:15:20.630 --> 00:15:23.410
to it and download those.
Isn't that part. That's part

325
00:15:23.410 --> 00:15:24.730
of the problem of the
web as well. Isn't it?

326
00:15:24.730 --> 00:15:27.340
I mean, so many people
basically complain about ads being

327
00:15:27.340 --> 00:15:29.020
in stuff and they want,
we wanted free at the

328
00:15:29.020 --> 00:15:30.700
same time. I mean the
money has to come from

329
00:15:30.700 --> 00:15:33.190
somewhere. I like to pay
for my stuff. If I

330
00:15:33.190 --> 00:15:35.200
get good service, I mean,
I use Pinboard for my

331
00:15:35.200 --> 00:15:38.530
links. I use flicker. I
use Dropbox, I pay for

332
00:15:38.530 --> 00:15:41.350
GitHub. I just don't want
these things to go away

333
00:15:41.350 --> 00:15:43.420
because they're just too useful.
And if you don't pay

334
00:15:43.420 --> 00:15:45.850
for it, they will go
away sooner or later. It's

335
00:15:45.850 --> 00:15:49.090
interesting that I find the
a, the closed market places.

336
00:15:49.150 --> 00:15:52.780
Exactly. Like dad liked it,
downloaded common, the two cars.com

337
00:15:52.780 --> 00:15:55.450
and things like that. Especially
as they can pull content

338
00:15:55.450 --> 00:15:58.780
without asking you or saying
like, okay, well here's your

339
00:15:58.780 --> 00:16:00.790
business model gone because your
app is not available any

340
00:16:00.790 --> 00:16:04.150
longer. Right? One really cool
thing. I found about what

341
00:16:04.150 --> 00:16:06.550
we're doing in Firefox as
well. This is not advertising.

342
00:16:06.550 --> 00:16:10.420
I'm just getting very excited
about this. That model needs

343
00:16:10.420 --> 00:16:12.670
to be broken. What we
have is a system called

344
00:16:12.670 --> 00:16:15.310
dynamic app search, which is
getting a snazzy name sooner

345
00:16:15.310 --> 00:16:18.160
or later. It's basically you
enter the name of a

346
00:16:18.160 --> 00:16:20.320
band and it shows you
apps that have to do

347
00:16:20.320 --> 00:16:22.060
with that band. It shows
you a video app. It

348
00:16:22.060 --> 00:16:24.430
shows you a music app.
It shows you Wikipedia. It

349
00:16:24.430 --> 00:16:26.350
shows you a ticket app
where you can buy tickets.

350
00:16:26.770 --> 00:16:29.080
And that way we bring
the use case to the

351
00:16:29.080 --> 00:16:31.150
app run and the app
to the use case, right

352
00:16:31.150 --> 00:16:34.310
now we spent millions of
dollars making people in, in

353
00:16:34.390 --> 00:16:37.840
traditional advertising, aware of what
your app is called. It's

354
00:16:37.840 --> 00:16:40.390
the web distinct is already
crawlable. So why would we

355
00:16:40.390 --> 00:16:42.670
have to do that? Right?
So with that dynamic app

356
00:16:42.670 --> 00:16:45.040
search, I can now enter,
for example, YouTube, I find

357
00:16:45.040 --> 00:16:46.900
group shock. I click on
glue shock. I get the

358
00:16:46.900 --> 00:16:49.900
mobile interface, the mobile HTML
face interface of group shock

359
00:16:50.470 --> 00:16:52.360
and listen to a song.
When I like groove shock,

360
00:16:52.360 --> 00:16:54.370
I go back to the
search results, do a long

361
00:16:54.370 --> 00:16:56.860
click on it and then
install it. And if they

362
00:16:56.860 --> 00:16:59.890
build the manifest file that
we expect, then you actually

363
00:16:59.890 --> 00:17:01.870
pull all the offline data
and you get the real

364
00:17:01.870 --> 00:17:04.270
full application rather than just
a mobile view of it.

365
00:17:04.750 --> 00:17:08.560
So your mobile view becomes
the, becomes the advertising for

366
00:17:08.560 --> 00:17:10.780
your app. And that's just
how the web works. This

367
00:17:10.780 --> 00:17:14.830
is like a Yahoo directory
versus Google search. It's a

368
00:17:14.830 --> 00:17:17.200
natural conclusion that we have
to come to. Okay. But

369
00:17:17.200 --> 00:17:18.820
let me, let me push
back and ask you this.

370
00:17:18.820 --> 00:17:22.300
Like when Google web, when
Chrome web store came out,

371
00:17:22.840 --> 00:17:24.730
everyone's like, this is it.
This is it. The app

372
00:17:24.730 --> 00:17:27.310
store to end all app
stores. And then people said,

373
00:17:27.340 --> 00:17:30.040
Oh, this is just a
bookmark. It's a bookmark. I

374
00:17:30.040 --> 00:17:32.440
have like, even now I've
got like, I dunno, I've

375
00:17:32.440 --> 00:17:34.510
got like random bookmarks to
stuff. Like, you know, when

376
00:17:34.510 --> 00:17:36.580
I found the Google web
store came out, I hit

377
00:17:36.580 --> 00:17:39.610
control T I installed, I
installed, I'm saying that in

378
00:17:39.610 --> 00:17:44.380
quotes again, because I made
a bookmark to angry birds.

379
00:17:44.380 --> 00:17:46.180
Right. And it's still there,
like on my browser, like

380
00:17:46.180 --> 00:17:48.790
four years later, it's a,
it's a link to a

381
00:17:48.870 --> 00:17:51.900
website. No, it's, It is.
But at the same time,

382
00:17:51.900 --> 00:17:53.520
if the app is written
the right way, then you

383
00:17:53.520 --> 00:17:55.860
have to hold up cash
going. You have a 50

384
00:17:55.860 --> 00:17:59.640
Meg in index DB. You
can put everything offline. It's

385
00:17:59.640 --> 00:18:01.920
not just a bookmark. All
of these things work on

386
00:18:01.920 --> 00:18:04.530
your, on your device then.
And in Firefox for us,

387
00:18:04.530 --> 00:18:06.690
the benefit is that they
can actually access the whole

388
00:18:06.690 --> 00:18:09.300
hardware as well. So you've
got access to the vibration.

389
00:18:09.300 --> 00:18:12.240
You've got access to the
accelerometer. You can take pictures

390
00:18:12.840 --> 00:18:16.620
via JavaScript. API is open
standard Java script APIs that

391
00:18:16.620 --> 00:18:20.120
also have been implemented in
other browsers, But Google web

392
00:18:20.300 --> 00:18:21.620
store. I don't know if
it's fair to call it

393
00:18:21.620 --> 00:18:23.150
a failure, but it is
fair to call it a

394
00:18:23.150 --> 00:18:26.630
pile of bookmarks. It is
a pile of bookmarks because

395
00:18:26.690 --> 00:18:31.070
1% of those apps has
cash manifest. And 1% of

396
00:18:31.070 --> 00:18:32.990
those users heart, when the
rest of them are just

397
00:18:33.020 --> 00:18:36.530
bookmarks. Somebody threw together an
app manifest, tossed it in

398
00:18:36.530 --> 00:18:39.110
the store to make a
bookmark to their website. I

399
00:18:39.110 --> 00:18:42.050
think the problem there was
that there was no interest

400
00:18:42.050 --> 00:18:45.200
in it because it was
desktop apps. If, if, if

401
00:18:45.200 --> 00:18:49.250
Chrome had been Android and
every phone would actually run

402
00:18:49.250 --> 00:18:52.760
these things, it would have
been completely different. The DFD

403
00:18:52.760 --> 00:18:56.480
in-fight inside Google, between Android
and Chrome is very, very

404
00:18:56.480 --> 00:18:59.030
annoying to me. Cause I,
I don't think it's necessary.

405
00:18:59.840 --> 00:19:02.630
It's, it's, it's obvious that
Android is a great success

406
00:19:02.630 --> 00:19:05.780
and Chrome has to battle
that somehow. But I find

407
00:19:05.780 --> 00:19:08.000
it. I find it sad
that it actually, that it

408
00:19:08.000 --> 00:19:11.360
actually became that way. And
we had a few attempts

409
00:19:11.360 --> 00:19:13.520
to make that cross-browser and
I really want it to

410
00:19:13.520 --> 00:19:16.130
be cross-browser. I don't have
to. Why would I install

411
00:19:16.130 --> 00:19:18.770
a Chrome app and need
Chrome and Firefox app, but

412
00:19:18.770 --> 00:19:22.010
need Firefox and then opera
and opera app, it's an

413
00:19:22.010 --> 00:19:24.560
HTML five app. We should
be able to install this

414
00:19:24.560 --> 00:19:27.230
and run this on any
of the browsers and get

415
00:19:27.230 --> 00:19:29.810
different access to the hardware,
according to what browsers allow

416
00:19:29.810 --> 00:19:33.320
us to do. But right
now we're still doing all

417
00:19:33.320 --> 00:19:35.420
our loans, our own little
things, because we want to

418
00:19:35.420 --> 00:19:37.920
keep the branding on there
and selling people are rather

419
00:19:37.960 --> 00:19:41.420
think At that point then
with my iPhone, when, when

420
00:19:41.420 --> 00:19:44.480
Firefox O S comes out,
what will that mean to

421
00:19:44.480 --> 00:19:46.220
me? Will I be able
to go into your store

422
00:19:46.220 --> 00:19:49.760
and get your app? Yes,
you can install a lot

423
00:19:49.760 --> 00:19:51.650
of the apps, but I
don't think you got access

424
00:19:51.650 --> 00:19:55.070
to the hardware. Cause it's,
that's what Apple's terms and

425
00:19:55.070 --> 00:19:57.020
conditions don't allow us to
do. We cannot run the

426
00:19:57.020 --> 00:20:01.010
Firefox engine on, on iOS.
And that's the big problem

427
00:20:01.010 --> 00:20:02.750
there, But it's open web
though, right? I mean, I

428
00:20:02.750 --> 00:20:04.700
should be able to get
up to some point. Yes,

429
00:20:04.910 --> 00:20:06.620
you can. You can do
the things that Safari can

430
00:20:06.620 --> 00:20:09.980
do and, and all the
things that Safari can do

431
00:20:09.980 --> 00:20:12.500
and actually allows you to
do is find my dad,

432
00:20:12.620 --> 00:20:14.540
but you don't get access
to a vibration alarm. You

433
00:20:14.540 --> 00:20:16.760
don't get access to the
things that we define these

434
00:20:16.760 --> 00:20:20.480
new web APIs until Safari
implements them, which they're at,

435
00:20:20.480 --> 00:20:22.820
which are very much invited
to do because Chrome and

436
00:20:22.820 --> 00:20:25.040
opera are doing and Microsoft
are doing in some of

437
00:20:25.040 --> 00:20:28.010
them as well. Battery API,
for example, geolocation came from

438
00:20:28.010 --> 00:20:31.400
us as well. So I
think it's very important that

439
00:20:31.400 --> 00:20:35.090
people understand that, that the
browser choice should not be

440
00:20:35.090 --> 00:20:37.490
up for us. I find
it sad that that the

441
00:20:37.490 --> 00:20:41.000
iPhone went the way it
went because Steve jobs was

442
00:20:41.000 --> 00:20:43.670
on stage and basically said
like, Hey, this is no

443
00:20:43.670 --> 00:20:45.950
SDK. You don't need an
SDK. There's no native code.

444
00:20:45.980 --> 00:20:48.250
This is the web Safari,
the best breast browser out

445
00:20:48.250 --> 00:20:50.890
there. It has all the
things that was in 2007.

446
00:20:51.630 --> 00:20:52.860
The first thing he was
like, this is the app

447
00:20:52.860 --> 00:20:56.040
store is the web. Yeah.
And then basically he got

448
00:20:56.040 --> 00:20:59.460
pushback from internally and from
developers as well. That basically

449
00:20:59.800 --> 00:21:02.850
native developers were just like,
Oh, that's not good enough.

450
00:21:03.270 --> 00:21:06.030
And I think we missed
a big part there as

451
00:21:06.030 --> 00:21:08.190
to web community, not to
step into this and say

452
00:21:08.190 --> 00:21:09.960
like, well, thank you. Here's
what you do. But a

453
00:21:09.960 --> 00:21:11.760
lot of it was like,
ah, this is just one

454
00:21:11.760 --> 00:21:14.220
browser. This will not work.
So a lot of times

455
00:21:14.220 --> 00:21:16.140
do you do people that
want to want to like

456
00:21:16.140 --> 00:21:17.910
the web, I want to
help the web are actually

457
00:21:17.910 --> 00:21:21.020
hurting it by being too
close minded about close products.

458
00:21:21.020 --> 00:21:24.540
So Adobe are doing amazing
stuff in HTML five right

459
00:21:24.570 --> 00:21:26.250
now. But a lot of
people don't give them credit

460
00:21:26.250 --> 00:21:28.020
for it because it's Adobe.
Those was the guys that

461
00:21:28.020 --> 00:21:30.780
gave us flash. Yeah. Well,
exactly. Well, and, and I

462
00:21:30.780 --> 00:21:34.050
think everyone is suspicious of
everyone. Like I'm hearing you

463
00:21:34.230 --> 00:21:36.630
say Firefox OS and I'm
thinking, okay, cool. There'll be

464
00:21:36.630 --> 00:21:38.670
some new low end phones
that will be really powerful

465
00:21:38.670 --> 00:21:40.680
and do some really cool
stuff. And I say powerful,

466
00:21:40.680 --> 00:21:43.800
not by their raw power,
but by their ability. Okay.

467
00:21:43.830 --> 00:21:45.450
And I'm like, that's going
to be great more people

468
00:21:45.450 --> 00:21:49.470
with smartphones, with color screens,
with HTML five. But then

469
00:21:49.470 --> 00:21:52.130
you're saying Firefox app store
and things like that. And

470
00:21:52.290 --> 00:21:53.940
I don't think I'm a
little suspicious. I'm like, what

471
00:21:53.940 --> 00:21:55.560
are you trying to do?
Are you, is this going

472
00:21:55.560 --> 00:21:57.810
to make everyone use your
stuff? We needed an app

473
00:21:57.810 --> 00:22:01.530
store because people expected and
partners wanted to have them

474
00:22:01.530 --> 00:22:03.300
on the phone as well.
We got 18 different mobile

475
00:22:03.300 --> 00:22:05.700
partners. We got four different
hardware partners that are releasing

476
00:22:05.700 --> 00:22:08.550
the phones with us. And
without a marketplace, they don't

477
00:22:08.550 --> 00:22:12.060
think it's a smartphone. In
essence, if a D D

478
00:22:12.060 --> 00:22:15.480
marketplace is built on another
web API, it's another app.

479
00:22:15.510 --> 00:22:18.810
Another JavaScript API that is
open. So partners can build

480
00:22:18.810 --> 00:22:21.420
their own web stores as
well, but you can also

481
00:22:21.420 --> 00:22:24.210
install apps from your server,
so you don't have to

482
00:22:24.210 --> 00:22:26.010
go through to market. So
you can just go to

483
00:22:26.010 --> 00:22:29.820
hanselman.com and get the, yes,
You put a manifest file

484
00:22:29.820 --> 00:22:31.800
in there. You put a
JavaScript call on a button

485
00:22:31.800 --> 00:22:34.530
that says less Mazda installed
point to the manifest file.

486
00:22:34.740 --> 00:22:37.230
And then I can install
it both on Firefox for

487
00:22:37.230 --> 00:22:41.280
us and on Android devices
that have Firefox installed. So

488
00:22:41.280 --> 00:22:44.100
basically this is, this is
a usable across the board.

489
00:22:44.130 --> 00:22:46.260
And that's what really gets
me excited because waiting for

490
00:22:46.290 --> 00:22:48.420
Firefox as test phone was
a long time. So I

491
00:22:48.420 --> 00:22:51.270
can test it on my
Android as well. Let me

492
00:22:51.480 --> 00:22:52.680
put words in your mouth
and you tell me if

493
00:22:52.680 --> 00:22:57.390
I'm wrong. You're sneaking the
open web past the carriers

494
00:22:57.390 --> 00:23:00.360
and past the handset makers
in the guise of an

495
00:23:00.360 --> 00:23:03.150
app store. They're thinking, all
right, cool check app store.

496
00:23:03.180 --> 00:23:05.850
We got that. But in
the process, they're going to

497
00:23:05.850 --> 00:23:08.490
have this great browser and
HTML five and the ability

498
00:23:08.490 --> 00:23:10.830
to do really anything on
the open. I think that's

499
00:23:10.860 --> 00:23:15.630
it, things like that. Unnecessary,
like we, we try to

500
00:23:15.630 --> 00:23:19.170
play in a market that
thrives on being competitive and

501
00:23:19.170 --> 00:23:22.470
thrives on secrecy. Like everything
in the mobile mobile market

502
00:23:22.470 --> 00:23:25.440
is about like Payton's and
about like keeping your thing

503
00:23:25.440 --> 00:23:28.290
to yourself. That's why every
phone provider had their own

504
00:23:28.290 --> 00:23:31.170
marketplace and failed with them
three years ago, Vodafone in

505
00:23:31.170 --> 00:23:33.690
England was massive. And like
they paid lots of developers

506
00:23:33.690 --> 00:23:35.160
to build lots of apps
that never saw the light

507
00:23:35.160 --> 00:23:38.040
of day. Right. And I
think we could go up

508
00:23:38.040 --> 00:23:41.160
there and they basically preached
from the, from the tower

509
00:23:41.160 --> 00:23:42.900
and say like, this is
the web and everything is

510
00:23:42.900 --> 00:23:44.970
free and will be wonderful
and nice to each other,

511
00:23:45.050 --> 00:23:47.360
nothing would happen, right. Or
we could give them what

512
00:23:47.360 --> 00:23:49.640
they want. And at the
same time, make them realize

513
00:23:49.640 --> 00:23:53.030
that stare. The other main
differentiator that we found whilst

514
00:23:53.030 --> 00:23:57.110
at our partners are not
only to giving us the

515
00:23:57.110 --> 00:23:59.330
money or building our handsets,
but they're actually writing the

516
00:23:59.330 --> 00:24:02.210
code. So from the very
beginning, Bluetooth echo to the

517
00:24:02.210 --> 00:24:05.120
engine of Firefox for us
is space was basically open

518
00:24:05.120 --> 00:24:08.990
source. So a Telefonica, Dodger,
Telekom, and other partners have

519
00:24:09.020 --> 00:24:12.260
engineers on the project full
time engineers that work with

520
00:24:12.260 --> 00:24:14.840
us in the system rather
than us just like, Oh

521
00:24:14.840 --> 00:24:16.580
yeah, we like it. We
put it on our phones

522
00:24:16.580 --> 00:24:18.920
and please give us new
ones. So it has a

523
00:24:18.920 --> 00:24:21.410
much more of a vested
interest. The other interesting bit

524
00:24:21.410 --> 00:24:23.720
is that there is carrier
billing. So that was interesting

525
00:24:23.720 --> 00:24:26.720
for a lot of mobile
providers. So basically they can

526
00:24:26.720 --> 00:24:30.380
now get people to buy
apps on the telephone bill

527
00:24:30.380 --> 00:24:32.000
for the end of the
month. So they don't need

528
00:24:32.000 --> 00:24:34.910
an extra credit card or
market for that. So a

529
00:24:34.910 --> 00:24:37.220
lot of people who don't
have credit cards can now

530
00:24:37.250 --> 00:24:39.140
have apps the same way.
You can buy a SIM

531
00:24:39.140 --> 00:24:40.910
card with like $50 on
it and give it to

532
00:24:40.910 --> 00:24:43.910
your kid and they can
buy games for food $50.

533
00:24:43.910 --> 00:24:46.340
And that's it. So there's
no shock next morning, when

534
00:24:46.340 --> 00:24:48.730
your credit card has been
maxed out In, in, in

535
00:24:48.730 --> 00:24:53.350
South Africa and Zimbabwe minutes are
used as currency, and you

536
00:24:53.350 --> 00:24:55.600
can text someone and say,
send me some minutes and

537
00:24:55.600 --> 00:24:57.250
you can send a short
code and say, I want

538
00:24:57.250 --> 00:24:59.860
to send this many minutes
to this place. Yeah. So

539
00:24:59.860 --> 00:25:02.470
you're absolutely right. The ability
to buy apps with minutes

540
00:25:02.950 --> 00:25:05.050
that you bought, you know,
with cash and you, you,

541
00:25:05.060 --> 00:25:07.240
you loaded onto your phone
is a really great idea.

542
00:25:07.630 --> 00:25:09.610
It's very creative. What's happening
in Africa and the mobile

543
00:25:09.640 --> 00:25:13.390
space, especially everything running on
text messaging. And we just

544
00:25:13.390 --> 00:25:15.250
think this is a dead
technology, but Oh my God,

545
00:25:15.250 --> 00:25:18.220
the micro landing stuff, that's
happening down there. It's empowering

546
00:25:18.220 --> 00:25:20.860
so many people. It's just
wondering. Yeah. There's whole eBay

547
00:25:20.860 --> 00:25:24.250
type, but barter systems done
entirely on short codes. Yeah,

548
00:25:24.430 --> 00:25:28.630
yeah. Yeah. You were talking
about writing JavaScript that affects

549
00:25:29.230 --> 00:25:32.080
power. You mentioned that early
on, almost as a throwaway

550
00:25:32.080 --> 00:25:35.680
comment, this idea that I
could have a website that

551
00:25:35.680 --> 00:25:39.520
sucked my battery. Yes. And
not even realize it. Yeah.

552
00:25:39.580 --> 00:25:41.650
Is there a way to
let the user know that's

553
00:25:41.650 --> 00:25:43.540
happening? What if my favorite
website? What if I went

554
00:25:43.540 --> 00:25:45.760
to that guy? I go
to the verge.com all the

555
00:25:45.760 --> 00:25:48.340
time. But if I learned
the verge was the problem

556
00:25:48.340 --> 00:25:50.620
with my iPhone's battery. I
might not go there all

557
00:25:50.620 --> 00:25:54.370
the time. Oh yeah. I
mean like there's in terms

558
00:25:54.370 --> 00:25:58.600
of iPhone, I don't know.
But yeah. Developer tools actually

559
00:25:58.600 --> 00:26:01.330
tell your dad. I mean,
you can just, you can

560
00:26:01.330 --> 00:26:04.390
just navigate a battery is
on every browser right now.

561
00:26:04.390 --> 00:26:05.830
And it gives you the
current state of the battery,

562
00:26:05.830 --> 00:26:08.350
how much it has, has,
has stopped and these kinds

563
00:26:08.350 --> 00:26:10.810
of things. So you could
ride yourself a bookmarklet when

564
00:26:10.810 --> 00:26:13.090
you start the verge and
then after surfing fire for

565
00:26:13.090 --> 00:26:15.880
now, and then realize just
how much it actually sucked

566
00:26:15.880 --> 00:26:18.640
out of it. And what
happened there. And developer tools

567
00:26:18.640 --> 00:26:20.830
in Chrome have lots and
lots of ways to actually

568
00:26:20.830 --> 00:26:24.250
see where the performance goes,
whether rendering goes so there's

569
00:26:24.670 --> 00:26:29.050
detailed, detailed screencasts out there
about every single millisecond that's

570
00:26:29.050 --> 00:26:33.190
happening in your browser. And
what we found in testing

571
00:26:33.760 --> 00:26:38.530
a lot was basically that
social plugins and like Facebook,

572
00:26:38.530 --> 00:26:41.110
like button things, and these
kinds of things are the

573
00:26:41.110 --> 00:26:43.500
ones that suck a lot
of battery life out of

574
00:26:43.500 --> 00:26:46.440
the, out of the thing,
because it's just constantly trying

575
00:26:46.440 --> 00:26:48.570
to load new comments and
things like that in the

576
00:26:48.570 --> 00:26:51.600
background. And it's just very
annoying because these could just

577
00:26:51.600 --> 00:26:55.380
be links, like just putting
extra JavaScript libraries in there,

578
00:26:55.380 --> 00:26:57.600
just to say, I want
to like this on Facebook

579
00:26:57.600 --> 00:26:59.220
or send a Twitter there.
And you're like, I can

580
00:26:59.220 --> 00:27:01.230
copy and paste your L's.
It's not hard to do.

581
00:27:01.320 --> 00:27:05.900
Right. It's funny. This is
not thinking about constraint. I

582
00:27:05.900 --> 00:27:08.360
think about constrained bandwidth and
slow machines. And we think

583
00:27:08.360 --> 00:27:12.290
about overseas and we think
about non Western countries, but

584
00:27:12.290 --> 00:27:16.130
my brother lives in the
country. Yep. Okay. He lives

585
00:27:16.130 --> 00:27:18.590
on a farm and he
has an old computer and

586
00:27:18.590 --> 00:27:20.990
he has a three G
modem. He has no, it's

587
00:27:20.990 --> 00:27:22.550
the closest thing to having
dial up. And there's still

588
00:27:22.550 --> 00:27:23.750
a lot of dial up
in the, in the U

589
00:27:23.750 --> 00:27:26.360
S and he only has
five gigs a month and

590
00:27:26.360 --> 00:27:28.850
he kept bumping up against
it every month. And he

591
00:27:28.850 --> 00:27:31.430
couldn't figure out why it's
like, I'm paying for that

592
00:27:31.430 --> 00:27:32.950
extra 10 bucks at the
end of every month. And

593
00:27:32.950 --> 00:27:35.420
I don't know why. So
we put on flash block

594
00:27:35.900 --> 00:27:38.960
and ad block in a,
in the browser and Firefox,

595
00:27:39.770 --> 00:27:42.140
and I figured it would,
it would buy him that

596
00:27:42.140 --> 00:27:44.720
extra couple hundred megs that
was going to get him

597
00:27:44.900 --> 00:27:47.060
to the end of the
month without paying it cut

598
00:27:47.060 --> 00:27:51.620
his traffic in half. The
ads were more than you.

599
00:27:51.770 --> 00:27:53.960
We're half to more than
half of the traffic that

600
00:27:53.960 --> 00:27:56.540
he was pushing around. And
I can only imagine he

601
00:27:56.540 --> 00:27:59.240
said, and he says, it's
so much faster. Now it's

602
00:27:59.240 --> 00:28:01.670
so much faster. Now Lord
knows what those ads are

603
00:28:01.670 --> 00:28:04.520
doing. We have to cheat
it though. Isn't it shouldn't

604
00:28:04.520 --> 00:28:07.030
be, be clever enough to
have ad systems that don't

605
00:28:07.070 --> 00:28:10.190
train batteries and actually make
the web slower. I mean,

606
00:28:10.190 --> 00:28:13.220
Google did a good job
with their, with their updating

607
00:28:13.220 --> 00:28:16.340
their Google analytics to be
deferred and everything. So that's

608
00:28:16.340 --> 00:28:18.710
much better now than it
was before. But when I

609
00:28:18.710 --> 00:28:21.650
did security audits of, of
ad code, when I worked

610
00:28:21.650 --> 00:28:24.560
in Yahoo, it's just horrible,
horrible code for the reason

611
00:28:24.560 --> 00:28:27.190
that it has to work
everywhere. They jumped through hoops

612
00:28:27.200 --> 00:28:29.360
in every single line of
their code to actually make

613
00:28:29.360 --> 00:28:31.880
it work in Netscape for
on a, on an old

614
00:28:31.940 --> 00:28:34.730
windows and T machine and
things like that. And it's

615
00:28:34.730 --> 00:28:38.300
just, I think it's just
it's time to revamp the

616
00:28:38.300 --> 00:28:41.450
whole idea of ads on
the web, especially thinking about

617
00:28:41.450 --> 00:28:44.870
responsive design and having fixed
ad sizes is just not

618
00:28:44.870 --> 00:28:48.140
working together at all. And
actually we're, we're all over

619
00:28:48.140 --> 00:28:51.110
in this podcast. This is
great fun. Thinking about responsive,

620
00:28:51.350 --> 00:28:53.630
responsive design. You, we talked
a little bit at the

621
00:28:53.630 --> 00:28:57.890
beginning about the idea that
JavaScript libraries bring a lot

622
00:28:57.890 --> 00:28:59.750
of weight with them and
that we might want to

623
00:28:59.750 --> 00:29:01.790
get back to the basics
and really understand what's happening

624
00:29:01.790 --> 00:29:04.880
in JavaScript. The same thing
applies to CSS. I wanted

625
00:29:04.880 --> 00:29:07.970
to go and put just
for this show, actually, for

626
00:29:07.970 --> 00:29:09.890
people who are listening, who
haven't visited the site lately,

627
00:29:09.890 --> 00:29:11.900
go to Hanselman it's dot
com and go to archives.

628
00:29:12.230 --> 00:29:14.780
There's faces of all of
the people now. And I

629
00:29:14.780 --> 00:29:17.960
said to myself, Oh, I'll
go get a masonry or

630
00:29:17.960 --> 00:29:19.940
I'll go get this CSS
or that CSS. And I

631
00:29:19.940 --> 00:29:21.200
started looking at it and
I was like, do I

632
00:29:21.200 --> 00:29:24.920
really need 20 K of
CSS and a grid system

633
00:29:25.520 --> 00:29:27.680
to put a bunch of
faces in boxes in a

634
00:29:27.680 --> 00:29:31.400
responsive way? And I realized
that if I don't know

635
00:29:31.400 --> 00:29:34.850
what's going on, yes, I
do need that. Yes. It's

636
00:29:34.850 --> 00:29:37.430
all about knowing what you
do. And I remember it

637
00:29:37.430 --> 00:29:40.490
was wonderful at the HX
at media HX in London,

638
00:29:40.490 --> 00:29:42.910
years and years ago, there
was a Dion on my

639
00:29:42.910 --> 00:29:45.640
RN, Ben Galbraith, where we're
giving the keynote and they

640
00:29:45.640 --> 00:29:49.300
were talking about the grid,
a few of YouTube, I

641
00:29:49.300 --> 00:29:51.670
think. And they were actually
saying like, okay, and we

642
00:29:51.670 --> 00:29:53.860
need a Java script for
this cause CSS can't do

643
00:29:53.860 --> 00:29:56.350
that. And I was a
cocky young person back then.

644
00:29:56.350 --> 00:29:59.590
So I basically, during the
keynote, I wrote a CSS

645
00:29:59.590 --> 00:30:01.690
example to do exactly that
and showed it as the

646
00:30:01.690 --> 00:30:05.560
first slide of my talk.
So, and that made me,

647
00:30:05.590 --> 00:30:07.960
that made them actually contact
me. And I became a

648
00:30:07.960 --> 00:30:10.900
blogger for a Jackson with
them because of that. But

649
00:30:10.900 --> 00:30:13.570
yeah, it's, it's really, I
think it's about collaboration as

650
00:30:13.570 --> 00:30:16.720
well. If it's we as
developers, we're prone to try

651
00:30:16.720 --> 00:30:19.630
to do everything ourselves, rather
than just partnering with somebody

652
00:30:19.630 --> 00:30:22.690
who cares. Like if I
don't have field much love

653
00:30:22.690 --> 00:30:26.530
for, for CSS, then don't
do CSS partner with somebody

654
00:30:26.530 --> 00:30:29.050
who loves CSS. And you're
both gonna do something really,

655
00:30:29.050 --> 00:30:31.930
really good together rather than
doing something half baked on

656
00:30:31.930 --> 00:30:34.180
your own. But instead what
we do is we go

657
00:30:34.180 --> 00:30:36.490
to Twitter and complained that
CSS has broken because we

658
00:30:36.490 --> 00:30:40.170
don't want to understand it.
Yeah. Yeah. It's, I, I

659
00:30:40.170 --> 00:30:42.360
really knew what I wanted
my new, my new website

660
00:30:42.360 --> 00:30:44.760
to look like, and I
just relaunched the redesign, but

661
00:30:44.760 --> 00:30:46.560
I knew I didn't have
the CSS skills to do

662
00:30:46.560 --> 00:30:48.900
it and I could try
and fake it or I

663
00:30:49.200 --> 00:30:51.960
hire a designer. Well, it's
also a matter of like

664
00:30:51.960 --> 00:30:54.300
how much traffic you have,
how much, how much will

665
00:30:54.300 --> 00:30:56.370
you actually, what your audience
is. I mean, that's a

666
00:30:56.370 --> 00:30:58.770
podcast for web developers. You
can expect a lot of

667
00:30:58.770 --> 00:31:02.180
things from your audience already.
So it's, it's very, it

668
00:31:02.190 --> 00:31:04.950
fascinates me when you see
a lot of performance talks

669
00:31:04.950 --> 00:31:07.410
or performance blog posts that
say like, Oh, this is

670
00:31:07.410 --> 00:31:09.900
very important for the Gmail
interface. And you're like, that's

671
00:31:09.900 --> 00:31:12.600
good, but that doesn't apply
to my blog. Yeah. So

672
00:31:12.600 --> 00:31:16.200
it's our performance things. And
our optimization things are always

673
00:31:16.200 --> 00:31:18.720
for, depending on the use
case and depending on the

674
00:31:18.720 --> 00:31:22.440
context, and we're very, very
prone to throw our truisms

675
00:31:22.440 --> 00:31:24.570
right now and say like,
everybody has to do this.

676
00:31:24.960 --> 00:31:26.910
I was at edge con
in London. And we talked

677
00:31:26.910 --> 00:31:29.490
about a lot of like
performance things. And it was

678
00:31:29.490 --> 00:31:32.520
about really bleeding edge stuff.
And the Chrome team was

679
00:31:32.520 --> 00:31:34.590
there with all my friends,
from the Chrome team and

680
00:31:34.590 --> 00:31:36.450
every single answer more or
less was like, Oh, the

681
00:31:36.450 --> 00:31:39.090
Chrome dev tools can do
that. And I'm like, yes,

682
00:31:39.090 --> 00:31:41.040
they can. But at the
same time, you cannot tell

683
00:31:41.040 --> 00:31:43.020
me that I can test
the performance of a web

684
00:31:43.050 --> 00:31:45.840
view in iOS with the
developer tools in Chrome, because

685
00:31:45.840 --> 00:31:49.620
they cannot reach it. So
there is no one solution

686
00:31:49.620 --> 00:31:51.780
for everything you should look
at Glimpse. Have you ever

687
00:31:51.780 --> 00:31:55.140
heard of the glimpse tools?
No. So glimpse glimpse a

688
00:31:55.140 --> 00:31:59.310
is a, is a imagine
the web tools as implemented

689
00:31:59.310 --> 00:32:04.710
entirely in jQuery and JavaScript.
And, and so you, you,

690
00:32:05.030 --> 00:32:07.560
you add some JavaScript to
your site, you hit the

691
00:32:07.560 --> 00:32:10.320
site and then this, this,
it looks like when people

692
00:32:10.320 --> 00:32:11.760
look at it and go,
Oh, look, it's F 12

693
00:32:11.760 --> 00:32:15.270
tools. No, it's actually a
div. And then the way

694
00:32:15.270 --> 00:32:18.420
that you connect it to
the iPhone is you type

695
00:32:18.420 --> 00:32:21.420
in a bookmarklet and you
put in a collaboration ID.

696
00:32:22.200 --> 00:32:24.480
So you say, you know,
set cookie, whatever, and you

697
00:32:24.480 --> 00:32:28.350
put in, you know, Fu
and then on the, on

698
00:32:28.350 --> 00:32:31.350
the desktop browser, you have
the same collaboration ID. So

699
00:32:31.350 --> 00:32:35.190
you basically remotely connect to
that instance. And then the

700
00:32:35.190 --> 00:32:38.670
JavaScript on the iPhone is
sending all of that information

701
00:32:38.670 --> 00:32:41.330
back to server and then
bringing it back up into

702
00:32:41.330 --> 00:32:43.430
the desktop. There's still a
bit of latency in there.

703
00:32:43.460 --> 00:32:45.350
There is, there is latency,
but it's just this idea

704
00:32:45.350 --> 00:32:47.960
that, that you collect all
the information on the, on

705
00:32:47.960 --> 00:32:50.030
the, on the remote device
and the tiny device. And

706
00:32:50.030 --> 00:32:53.500
then you display all that
tracing information on it. I

707
00:32:53.500 --> 00:32:56.860
mean, it's a tricky thing
for developers anyways, isn't it

708
00:32:56.920 --> 00:32:59.800
nowadays? I mean, have you
heard about the open device

709
00:32:59.800 --> 00:33:03.910
labs and lab? It's gorgeous.
It's basically a new foundation

710
00:33:03.910 --> 00:33:06.580
that a few people in
Adobe and other pro other

711
00:33:06.580 --> 00:33:09.190
parties have started. And we
have one running in Mo

712
00:33:09.190 --> 00:33:12.100
in Mozilla, in London. It's
basically where we collect hardware

713
00:33:12.100 --> 00:33:14.770
and developers can come in
and actually test our things

714
00:33:14.770 --> 00:33:18.520
on different phones and different
platforms. And we're partnering with

715
00:33:18.730 --> 00:33:21.970
different hardware providers to actually
donate us hardware and give

716
00:33:21.970 --> 00:33:25.060
a, have a, like a
security lock and everything. So

717
00:33:25.060 --> 00:33:28.660
your hardware just doesn't get
collected and gets lost. And

718
00:33:28.780 --> 00:33:31.180
people can just basically send
emails in and say like,

719
00:33:31.180 --> 00:33:32.830
I want to comment on
for an hour and test

720
00:33:32.830 --> 00:33:35.530
my app on these different
devices, which is perfect for

721
00:33:35.530 --> 00:33:38.260
freelancers and people that cannot
afford all the devices that

722
00:33:38.260 --> 00:33:40.210
they want to test on.
So there's a whole new

723
00:33:40.210 --> 00:33:43.090
movement called open device labs,
and it's going to get

724
00:33:43.090 --> 00:33:44.770
big. There's a few in
Berlin. There's a few in

725
00:33:44.770 --> 00:33:47.410
San Francisco. There's a few
in London. And I think

726
00:33:47.410 --> 00:33:49.570
it was like 37 worldwide
by now. That's great. I

727
00:33:49.570 --> 00:33:51.970
think every city would want
that. I love that idea

728
00:33:51.970 --> 00:33:54.730
because it's just, I feel,
it feels silly that as

729
00:33:54.730 --> 00:33:56.680
a developer, I have to
buy all this hardware. Yeah,

730
00:33:56.680 --> 00:33:58.600
it's ridiculous. I know people,
I think we've seen these

731
00:33:58.600 --> 00:34:01.450
Adobe examples where they have
everything synchronized and the guy's

732
00:34:01.450 --> 00:34:05.170
got 12 devices. You've seen
pictures and you see like

733
00:34:05.170 --> 00:34:06.940
John <inaudible> and like, here's
the work we're doing on

734
00:34:06.940 --> 00:34:10.030
jQuery mobile. And he's got
like 50 phones all, and

735
00:34:10.240 --> 00:34:12.310
that's a lot of work.
Not everyone can do that.

736
00:34:12.640 --> 00:34:14.650
Let me ask you one
last thing, just cause it's

737
00:34:15.430 --> 00:34:16.900
something that I had to
deal with lately and I

738
00:34:16.900 --> 00:34:18.730
solved it with jQuery and
now you're making me feel

739
00:34:18.730 --> 00:34:22.120
like I'm a bad person
on the, on the archives.

740
00:34:22.420 --> 00:34:25.720
There's 360 shows. And I
wanted to present them as

741
00:34:25.720 --> 00:34:28.420
an infinite list or at
least enlist, that goes a

742
00:34:28.420 --> 00:34:31.720
hundred to 360. And I
went and I've got all

743
00:34:31.720 --> 00:34:33.520
the faces and I made
the grid and everything's great

744
00:34:33.520 --> 00:34:36.040
and it's responsive. And I
put it up. And then

745
00:34:36.040 --> 00:34:38.110
I got a bill from
my cloud provider saying that

746
00:34:38.110 --> 00:34:40.210
I was pushing too much
traffic. And I forgot that

747
00:34:40.300 --> 00:34:43.840
I was pushing out basically
eight megabytes of images. Every

748
00:34:43.840 --> 00:34:46.690
time someone hit the page,
regardless of whether they looked

749
00:34:46.690 --> 00:34:49.540
at all of the images.
So I, I said, I

750
00:34:49.540 --> 00:34:53.350
wish that low source existed
still like image, low sources,

751
00:34:53.410 --> 00:34:55.700
Right? It does with a
data attribute, you can fake

752
00:34:56.410 --> 00:34:58.780
Data dash source. And I
faked it and I used

753
00:34:58.810 --> 00:35:02.860
jQuery lazy load. Yep. And
then I wanted, I wanted

754
00:35:03.190 --> 00:35:06.850
sorting and filtering. So I
put in list JS and

755
00:35:06.850 --> 00:35:09.970
then had to fight with
list JS and the events

756
00:35:10.240 --> 00:35:14.170
and a lazy load, because
what was happening was lazy

757
00:35:14.170 --> 00:35:16.990
load will, will show things
on the scroll event if

758
00:35:16.990 --> 00:35:20.740
they enter the viewport, but
lists JS filters things and

759
00:35:20.740 --> 00:35:22.780
brings them into the viewport
with no event firing at

760
00:35:22.780 --> 00:35:25.390
all. So all of these
gray squares would hop to

761
00:35:25.390 --> 00:35:28.840
the top. But the point
is that what I wanted

762
00:35:28.840 --> 00:35:33.010
was don't go and get
these images if no one's

763
00:35:33.010 --> 00:35:35.680
ever going to look at
it like that business problem

764
00:35:36.170 --> 00:35:38.700
seemed simple. Don't show me
an image Unless it enters

765
00:35:38.700 --> 00:35:42.330
the viewport. Yeah. I heard
an image loader for that

766
00:35:42.330 --> 00:35:44.100
for a long, long time
now. And a lot of,

767
00:35:44.430 --> 00:35:46.830
a lot of things have
to, I'm very wary about

768
00:35:46.830 --> 00:35:49.080
things to do things on
scroll because they don't perform

769
00:35:49.080 --> 00:35:54.060
well on, on tablets a
lot. And I think, I

770
00:35:54.060 --> 00:35:55.980
mean, you've done the right
thing because you've used the

771
00:35:55.980 --> 00:35:58.050
tools that you had and
it basically works. It's, that's

772
00:35:58.050 --> 00:35:59.640
fine. But it's a, it's
a great solution that works

773
00:35:59.640 --> 00:36:02.130
perfectly, that I feel guilty
about. Yes, but that's okay.

774
00:36:02.130 --> 00:36:04.230
I mean, like it, it
can happen sometimes you have

775
00:36:04.230 --> 00:36:06.870
to, you have to bite
the bullet in your case.

776
00:36:06.870 --> 00:36:09.510
What I would do instead
is just use a use

777
00:36:09.510 --> 00:36:12.900
local storage and index DB
to store that images. Oh,

778
00:36:12.900 --> 00:36:15.290
okay. If you used something
like if he was indexed

779
00:36:15.290 --> 00:36:18.990
DB on, on Chrome and
Firefox or web sequel, I

780
00:36:18.990 --> 00:36:21.810
think on others does a
great library funding of a

781
00:36:21.810 --> 00:36:23.850
library, but it's a really
small one called lawn chair

782
00:36:24.290 --> 00:36:26.610
launcher. And if you use
lawn chair and you basically,

783
00:36:26.610 --> 00:36:29.340
you store these images in
a, in a, in index

784
00:36:29.340 --> 00:36:31.650
DB or on these things,
I wouldn't, I do some

785
00:36:31.650 --> 00:36:33.720
long caching or use the
web itself. Like isn't the

786
00:36:33.720 --> 00:36:35.280
web supposed to be smart
about these things. You can

787
00:36:35.280 --> 00:36:36.500
do that as well. If
you do a, if you

788
00:36:36.510 --> 00:36:38.250
do a long expire on
the images, it should do

789
00:36:38.250 --> 00:36:40.280
the same thing. But if
you have the minute in

790
00:36:40.350 --> 00:36:42.690
a database and you can
upgrade them and you're actually

791
00:36:42.690 --> 00:36:45.180
in control of which ones
is actually being changed, I

792
00:36:45.180 --> 00:36:47.370
feel like you were saying
reject the web and then

793
00:36:47.370 --> 00:36:50.640
roll my own database caching
system for images. No, because

794
00:36:50.640 --> 00:36:53.160
you already want, if you
want control over the images,

795
00:36:53.170 --> 00:36:55.170
then yes. If you don't
turn, if you don't care,

796
00:36:55.170 --> 00:36:56.940
if you think like, as
long as they're cashed, I'm

797
00:36:56.940 --> 00:36:59.790
good. That's fine. But what
if one of these images

798
00:36:59.790 --> 00:37:01.680
were wanting to speak assessed?
Like I look horrible on

799
00:37:01.680 --> 00:37:03.870
this one and I now
change gender. Can you please

800
00:37:03.870 --> 00:37:06.540
change my image? I can't
can't control that five. Yeah,

801
00:37:06.570 --> 00:37:08.730
but you could, but you
can't do really do that

802
00:37:08.730 --> 00:37:11.160
on the web that easily
instead of having it in

803
00:37:11.160 --> 00:37:14.220
a database. Yeah, exactly. All
right. Well, thanks so much

804
00:37:14.220 --> 00:37:16.650
for chatting with me today.
You're welcome. You'll put up,

805
00:37:16.710 --> 00:37:18.660
we'll put up links to
the vanilla web diet and

806
00:37:18.810 --> 00:37:21.360
Christian on Twitter and his
blog as well. And you

807
00:37:21.360 --> 00:37:25.230
can learn all about a
new Firefox iOS. Lovely. This

808
00:37:25.230 --> 00:37:27.630
has been another episode of
Hanselminutes and we'll see you

809
00:37:27.630 --> 00:37:28.470
again next week.

