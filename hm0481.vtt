WEBVTT FILE

1
00:00:00.990 --> 00:00:04.110
Hi, this is Scott. I
really appreciate our sponsors because

2
00:00:04.110 --> 00:00:07.410
they make the show possible.
Today's show is sponsored by

3
00:00:07.410 --> 00:00:11.700
Tellerik create compelling app experiences
across any screen with the

4
00:00:11.700 --> 00:00:16.560
Tellerik platform Telerx end to
end platform. Uniquely combines industry

5
00:00:16.560 --> 00:00:20.250
leading UI tools with cloud
services to simplify the entire

6
00:00:20.250 --> 00:00:24.720
app development cycle Tellerik offers
everything.net developers need to build

7
00:00:24.720 --> 00:00:34.140
quality apps faster. Try it
free at tellerik.com/platform that's tellerik.com/platform.

8
00:00:35.520 --> 00:00:37.620
One more thing. Let me
tell you about a new

9
00:00:37.620 --> 00:00:41.400
sponsor Ray gun. If you're
wanting to detect and diagnose

10
00:00:41.400 --> 00:00:44.460
errors and crashes in your
software, even find problems that

11
00:00:44.460 --> 00:00:47.970
you didn't know existed to
improve your software and Reagan

12
00:00:47.970 --> 00:00:50.130
might be perfect for you.
You had a few lines

13
00:00:50.130 --> 00:00:52.620
of code your application, and
in minutes, you'll get real

14
00:00:52.620 --> 00:00:55.590
time error reports with all
the information that you need

15
00:00:55.590 --> 00:00:58.350
to fix bugs fast, you
can even hook it up

16
00:00:58.350 --> 00:01:02.730
to your team chat, bug
tracking development, workflow tools, Reagan

17
00:01:02.730 --> 00:01:07.500
covers all major web and
mobile programming languages, including.net, the

18
00:01:07.500 --> 00:01:11.100
full Xamarin stack JavaScript, and
many more go check out

19
00:01:11.100 --> 00:01:16.590
Reagan today@reagan.io. I use this
myself on my little startup

20
00:01:16.980 --> 00:01:20.010
and I really, really recommend
this product. It is a

21
00:01:20.040 --> 00:01:42.570
great, great product. Check it
out. Ray gun@reagandotiofromhanselminutes.com. It's Hansel

22
00:01:42.570 --> 00:01:46.980
minutes, a weekly discussion with
web developer and technologist Scott

23
00:01:46.980 --> 00:01:51.030
Hanselman. This is Lawrence Ryan amounts
in show number four 81.

24
00:01:51.840 --> 00:01:55.860
In this episode, Scott talks
with Kelsey. Brisman about making

25
00:01:55.860 --> 00:02:02.850
the internet of things with
JavaScript. Hi, this is Scott

26
00:02:02.850 --> 00:02:05.640
Hanselman. This is another episode
of Hansel minutes. And today

27
00:02:05.640 --> 00:02:07.830
I'm talking with Kelsey brakeman.
She's one of the creators

28
00:02:08.160 --> 00:02:11.730
of TESL and Tesla is
a really exciting platform for

29
00:02:11.730 --> 00:02:13.770
making stuff and you know,
that I'm excited about making.

30
00:02:13.770 --> 00:02:16.580
So I'm really excited to
chat with you today. I'm

31
00:02:16.580 --> 00:02:20.270
excited to be on here.
Thanks. Now I was looking

32
00:02:20.270 --> 00:02:23.840
you up and doing all
my research and you have

33
00:02:23.840 --> 00:02:27.200
a degree in neural engineering,
which is about the coolest

34
00:02:27.200 --> 00:02:30.290
sounding degree ever. Did you
make that or how does

35
00:02:30.290 --> 00:02:32.060
that work? What does that
do? What is neural engineering?

36
00:02:33.200 --> 00:02:36.920
Yeah, so I made up
that major, but it's based

37
00:02:36.920 --> 00:02:41.810
on my interest in how
the human brain basically learns

38
00:02:41.810 --> 00:02:44.090
and grows. And I wanted
to kind of approach this,

39
00:02:44.510 --> 00:02:47.210
this field that has quite
a lot that we don't

40
00:02:47.210 --> 00:02:50.360
know in it with with
a pretty hard science sort

41
00:02:50.360 --> 00:02:53.630
of, how do we get
something out of this kind

42
00:02:53.630 --> 00:02:57.140
of approach and that's that's
engineering. So I'm interested in

43
00:02:57.140 --> 00:02:59.770
how we can use that
sort of stuff for and

44
00:02:59.770 --> 00:03:07.540
for, well, honestly, for super
powers based on building building

45
00:03:07.540 --> 00:03:10.810
devices that can work with
the way that we think

46
00:03:10.810 --> 00:03:15.370
and interact with our world,
even electrically without making us

47
00:03:15.430 --> 00:03:18.580
have to interact with more
devices than we wanted to.

48
00:03:19.110 --> 00:03:21.670
Yeah, it's interesting. It's sometimes
feels like, you know, you,

49
00:03:21.720 --> 00:03:23.970
you think something, but it
still has to go through

50
00:03:23.970 --> 00:03:27.090
your fingers into a keyboard
and, you know, you get

51
00:03:27.090 --> 00:03:29.040
to the point where you
can type as fast as

52
00:03:29.070 --> 00:03:31.770
you can possibly type, but
you're still going outside your

53
00:03:31.770 --> 00:03:34.370
body. And then in order
to get back inside and,

54
00:03:34.370 --> 00:03:37.470
and, and change something, it's
an interesting topic for me

55
00:03:37.470 --> 00:03:41.430
because I'm a diabetic and
I'm a type one diabetic,

56
00:03:41.430 --> 00:03:43.170
and I have a number
of devices attached to me.

57
00:03:44.220 --> 00:03:46.140
I'd love to be able
to control those in some

58
00:03:46.140 --> 00:03:48.060
way. So I'm always thinking
about the internet of things

59
00:03:48.060 --> 00:03:50.550
as it relates to those
devices, but there's always an

60
00:03:50.550 --> 00:03:53.350
interface. There's always a button.
There's something isn't there. Yeah.

61
00:03:53.430 --> 00:03:55.440
I mean, so you're already
a bit of a cyborg

62
00:03:55.440 --> 00:03:58.320
and that's, that's really cool
because it's just another way

63
00:03:58.440 --> 00:04:01.800
that we can use engineering
to make the world reacts

64
00:04:01.810 --> 00:04:05.010
to us in a way
that's responsive rather than us

65
00:04:05.010 --> 00:04:07.680
having to go out and
do something. And do you

66
00:04:07.680 --> 00:04:09.660
think of this as something
where I'm going to take

67
00:04:09.660 --> 00:04:12.270
a device and put a
helmet on my head, or

68
00:04:12.270 --> 00:04:14.910
how am I going to
interact with devices in a

69
00:04:14.910 --> 00:04:17.590
world that is smart about,
you know, the, the way

70
00:04:17.590 --> 00:04:21.240
that the mind works in
a neural sense? Well, actually,

71
00:04:21.240 --> 00:04:24.180
so I'm interested in this
concept of ubiquitous computing. That's

72
00:04:24.180 --> 00:04:27.390
born out of a Xerox
park in the nineties and

73
00:04:27.390 --> 00:04:33.660
Mark wiser. Basically the idea
is that you don't have

74
00:04:33.660 --> 00:04:37.740
to notice that there's a
device. The world just responds

75
00:04:37.740 --> 00:04:39.930
to you. If, if it's,
if it's acting appropriately and

76
00:04:39.930 --> 00:04:42.750
one, one low tech example
of that is just a

77
00:04:42.750 --> 00:04:44.520
conference room that has a
window in it. So you

78
00:04:44.520 --> 00:04:46.800
can walk by and know
if that's there's something in

79
00:04:46.800 --> 00:04:50.010
there that shouldn't be disturbed,
but a higher tech sort

80
00:04:50.010 --> 00:04:53.460
of implementation of that. I
actually gave a Ted talk

81
00:04:53.460 --> 00:04:59.420
about a year ago today
at solid con about how,

82
00:04:59.420 --> 00:05:01.620
how to make this stuff
happen. And one of the

83
00:05:01.620 --> 00:05:06.210
things was I had hooked
up Hugh lights to a

84
00:05:06.210 --> 00:05:09.150
Twitter API, so that during
my talk, I could get

85
00:05:09.150 --> 00:05:11.880
live feedback on sentiment and
they would turn red or

86
00:05:11.880 --> 00:05:15.150
green based on how the
audience was tweeting about me.

87
00:05:16.770 --> 00:05:18.780
So that sort of thing
where, where, yeah, where I

88
00:05:18.780 --> 00:05:20.520
don't have to go out
of my way to interact

89
00:05:20.520 --> 00:05:22.770
with it. But suddenly I
have more information about the

90
00:05:22.770 --> 00:05:27.030
environment that I'm in. Those,
those kinds of experiences work

91
00:05:27.060 --> 00:05:29.670
amazingly until they don't work
at all. Like there doesn't

92
00:05:29.670 --> 00:05:31.770
seem to Zoho is that
there's like an uncanny Valley

93
00:05:31.800 --> 00:05:34.500
of ubiquitous computing where, you
know, you walk into a

94
00:05:34.500 --> 00:05:36.210
room, the light goes on,
you leave the room, light

95
00:05:36.210 --> 00:05:37.650
goes off, but if you
walk in the room and

96
00:05:37.650 --> 00:05:40.260
you're waving your arms around,
or we've all been in

97
00:05:40.260 --> 00:05:42.810
a conference room late at
night and the light goes

98
00:05:42.810 --> 00:05:47.790
out and you're like, seriously.
Yeah, absolutely. And that's very

99
00:05:47.790 --> 00:05:52.260
much something that, that, well,
a lot of us are

100
00:05:52.260 --> 00:05:54.600
exploring right now. I mean,
if you look at the

101
00:05:54.600 --> 00:05:58.460
nest thermostat, I used to
use it as my canonical.

102
00:05:58.460 --> 00:06:00.680
This is a perfect example
of a vigorous computing. It's

103
00:06:00.680 --> 00:06:03.290
a thing that learns, it's
a, it's a device that

104
00:06:03.290 --> 00:06:04.970
sits on your wall and
you don't interact with it

105
00:06:05.780 --> 00:06:07.880
based on having talked to
people about it though, I've

106
00:06:07.880 --> 00:06:10.130
learned, and I don't have
one myself. I learned that

107
00:06:10.730 --> 00:06:12.950
you have one, so maybe
you can, maybe you can

108
00:06:12.950 --> 00:06:14.750
give your take on this
too, but from what I've

109
00:06:14.750 --> 00:06:17.330
heard, it's too cool. A
piece of technology and people

110
00:06:17.330 --> 00:06:18.980
just pull out their phone
all the time and interact

111
00:06:18.980 --> 00:06:22.070
with it thermostat. Whereas previously,
like, even though it was

112
00:06:22.070 --> 00:06:26.660
much harder, people just kind
of ignored it before, but

113
00:06:26.660 --> 00:06:29.950
in theory it's a big
bonus. Yes, absolutely. It is

114
00:06:29.950 --> 00:06:33.040
the, it is the iPhone
of thermostats. I mean, it

115
00:06:33.040 --> 00:06:36.610
is a beautiful device. It
turns on and glows when

116
00:06:36.610 --> 00:06:39.640
you walk by and it
doesn't just turn on it

117
00:06:39.640 --> 00:06:42.880
kind of like, you know,
pulses like, Oh, there you

118
00:06:42.880 --> 00:06:46.030
are. Hello, I'm nest. It's,
it's, it's, it's something that

119
00:06:46.030 --> 00:06:49.000
you desperately want to interact
with just because it's so

120
00:06:49.000 --> 00:06:52.270
pretty. And it's so well
designed. It is, I would

121
00:06:52.270 --> 00:06:55.060
have to say from an
IOT perspective, the canonical perfect

122
00:06:55.060 --> 00:06:57.520
example of an amazing and
fun device to use, I

123
00:06:57.520 --> 00:07:02.260
have had exactly zero problems
with it, But although it

124
00:07:02.260 --> 00:07:05.050
doesn't fit in my, my,
my, quite the model that

125
00:07:05.050 --> 00:07:06.820
I'm thinking of for a
bit, but it's computing because

126
00:07:06.820 --> 00:07:09.490
you do actually want to
interact with it. And ideally

127
00:07:09.940 --> 00:07:12.340
it would just, you wouldn't
even remember you had one

128
00:07:14.350 --> 00:07:15.850
and it just be one
less thing that you ever

129
00:07:15.850 --> 00:07:18.730
think about. Does that mean
that a really good, you

130
00:07:18.730 --> 00:07:20.980
know, a good device or
a good IOT thing? Like

131
00:07:21.130 --> 00:07:23.080
a good example of ubiquitous
computing would be something that

132
00:07:23.080 --> 00:07:25.690
is embedded somewhere in the
fridge and the wall in

133
00:07:25.690 --> 00:07:28.660
the, in the floor. And
I don't even think about

134
00:07:28.660 --> 00:07:30.850
it. Maybe I change the
batteries every 10 years, but

135
00:07:31.510 --> 00:07:34.600
it just makes my life
better. Yeah. It just, it

136
00:07:34.600 --> 00:07:36.970
just changes your life in
a way that you just

137
00:07:36.970 --> 00:07:42.670
completely forget about. I mean,
think about modern convenience, conveniences,

138
00:07:42.670 --> 00:07:47.620
such as having the availability
of internet or electricity or

139
00:07:48.400 --> 00:07:51.790
running water. It's the kind
of thing that you just

140
00:07:51.790 --> 00:07:53.860
kind of assume it's there,
it works. You don't think

141
00:07:53.860 --> 00:07:57.460
about it ever, unless you
go camping and then suddenly

142
00:07:57.460 --> 00:08:00.100
you realize, Oh, I need
a flashlight at night. Oh,

143
00:08:00.100 --> 00:08:03.400
I need to go find
some water like that sort

144
00:08:03.400 --> 00:08:07.570
of stuff. And ideally in
the ubiquitous computing comes to

145
00:08:07.570 --> 00:08:11.260
pass the way that I
someday hope it will. We'll

146
00:08:11.260 --> 00:08:14.590
end up with exactly that
sort of interactions with all

147
00:08:14.590 --> 00:08:18.460
of the objects around us.
Things will just react or

148
00:08:18.460 --> 00:08:20.380
just things will just be
available when we need them.

149
00:08:20.380 --> 00:08:23.440
Things will just react to
the way that that we

150
00:08:23.440 --> 00:08:26.950
feel. So like the lights
turning off as the perfect

151
00:08:26.950 --> 00:08:31.180
example of, of something that's
not quite there yet, the

152
00:08:31.210 --> 00:08:35.290
motion activated lights, but in
theory, you should be able

153
00:08:35.290 --> 00:08:37.030
to walk into a room,
have the lights when you

154
00:08:37.030 --> 00:08:39.580
need them, have them know
when you don't want them

155
00:08:39.580 --> 00:08:42.040
on. Even if you're in
the room, have them save

156
00:08:42.040 --> 00:08:46.330
energy when you're not there,
there's obvious potential there. And

157
00:08:46.330 --> 00:08:49.330
that's of course why we
have them, but yeah, we're

158
00:08:49.330 --> 00:08:53.350
not quite there yet. Interesting.
So if I may then

159
00:08:53.350 --> 00:08:56.700
ubiquitous computing would be the,
of what everyone's excited about

160
00:08:56.700 --> 00:08:59.040
right now, which is virtual
reality and augmented reality where

161
00:08:59.040 --> 00:09:02.010
people want to put us
into a computer. This is

162
00:09:02.010 --> 00:09:07.220
more about prosthetics for able
bodied people. Well, I mean,

163
00:09:07.220 --> 00:09:09.710
also just in the sense
of things that you don't

164
00:09:09.710 --> 00:09:12.890
put on yourself, but yeah,
I'm, I'm personally not a

165
00:09:12.890 --> 00:09:16.190
huge fan of virtual reality
and augmented reality. I do

166
00:09:16.190 --> 00:09:18.650
think there's some cool possibility
there, but it's not something

167
00:09:18.650 --> 00:09:20.930
that I get excited about.
I'm much more excited about

168
00:09:21.320 --> 00:09:25.940
how can we live in
our lives, augmented by technology.

169
00:09:26.780 --> 00:09:30.200
That that just gets completely
out of the way. Okay.

170
00:09:30.440 --> 00:09:32.750
So I probably shouldn't use
the word press thesis because

171
00:09:32.750 --> 00:09:36.920
you're talking about, there's a
computer in your mirror in

172
00:09:36.920 --> 00:09:40.490
the bathroom, and maybe it
knows that you need to

173
00:09:40.490 --> 00:09:42.890
take your pill and it
just knows somehow, and you

174
00:09:42.890 --> 00:09:45.110
don't wear anything, right? You
don't have anything on your

175
00:09:45.110 --> 00:09:49.190
body, Right? Yeah. Cause the
moment you have to start

176
00:09:49.190 --> 00:09:53.390
putting stuff on yourself, that's
a whole nother problem, which

177
00:09:53.390 --> 00:09:58.220
is actually, it's interesting because
there's different devices that exist

178
00:09:58.250 --> 00:10:00.530
that you do in fact
put on and carry around.

179
00:10:00.770 --> 00:10:02.900
And a smartwatch, for example,
would be the hot topic

180
00:10:02.900 --> 00:10:04.850
right now, or the fact
that you now carry a

181
00:10:04.850 --> 00:10:08.270
cell phone. And before you
never would have, if it

182
00:10:08.270 --> 00:10:14.750
affords enough convenience, people are
willing to augment themselves with

183
00:10:14.750 --> 00:10:17.480
an extra device. But if
you look at stuff like

184
00:10:17.480 --> 00:10:21.230
Google glass, something that you
would have to wear and

185
00:10:21.230 --> 00:10:23.390
ideally not have to have
a computer or a phone

186
00:10:23.390 --> 00:10:28.370
around, that's what was exciting
about that? Even though that

187
00:10:28.370 --> 00:10:30.350
particular one might not be
the best example of a

188
00:10:30.350 --> 00:10:33.830
success. Right. But there is
an example of something that

189
00:10:33.980 --> 00:10:36.650
augmented my life or improved
my life in some way,

190
00:10:36.830 --> 00:10:38.900
but not so much so
that I would be willing

191
00:10:38.900 --> 00:10:43.640
to look like a huge
dork. Yeah. Yeah. So, but

192
00:10:43.670 --> 00:10:48.140
yeah, so there's, there's an
interesting balance between, I guess

193
00:10:48.140 --> 00:10:52.850
it's in, it's in the
realm of retrofitting re retrofitting

194
00:10:52.850 --> 00:10:55.280
this kind of device to
the current world, which doesn't

195
00:10:55.280 --> 00:10:59.630
have all these kinds of
conveniences. And right now you

196
00:10:59.630 --> 00:11:01.370
would have to carry around
the device with you to

197
00:11:01.370 --> 00:11:04.400
have the, to have the
experience. But in theory, a

198
00:11:04.400 --> 00:11:10.460
future world should have, you
know, municipal devices reacting to,

199
00:11:10.870 --> 00:11:13.430
to people walking down the
street, all that sort of

200
00:11:13.430 --> 00:11:15.860
stuff. This is a, this
is a far future vision,

201
00:11:16.940 --> 00:11:18.920
But we need to start
building it. This is great

202
00:11:18.920 --> 00:11:21.200
because this gets us into,
what's what I wanted to

203
00:11:21.200 --> 00:11:24.470
talk to you about, which
is a TESL and a,

204
00:11:24.480 --> 00:11:28.040
the TESL to coming. If
I wanted to build these

205
00:11:28.040 --> 00:11:30.230
things or even get involved
in all of the great

206
00:11:30.230 --> 00:11:33.170
stuff that you've just been
talking about. I feel like

207
00:11:33.170 --> 00:11:35.240
maybe three to five years
ago, it would have been

208
00:11:35.540 --> 00:11:37.880
out of my reach as
a, as a developer. I

209
00:11:37.880 --> 00:11:39.710
mean, I'm an, I'm a
regular web developer. I know

210
00:11:39.710 --> 00:11:43.490
JavaScript, I know C sharp
and I would look upon

211
00:11:44.060 --> 00:11:48.380
hardware, people as being just
super advanced beyond, you know,

212
00:11:48.440 --> 00:11:52.730
like that's just another religion
that I can't be a

213
00:11:52.730 --> 00:11:56.230
part. Talk to me about
why, you know, what the

214
00:11:56.230 --> 00:12:00.780
Tesla is. Yeah. So in
fact, that's, that's exactly the

215
00:12:00.780 --> 00:12:04.140
sort of reputation of electrical
engineering that, that we created

216
00:12:04.140 --> 00:12:09.900
tussle to try and circumvent.
So tussle, if you haven't

217
00:12:09.900 --> 00:12:14.190
heard of it, it's, it's
a microcontroller that runs JavaScript

218
00:12:14.190 --> 00:12:16.980
and node directly on it.
The new one should have

219
00:12:16.980 --> 00:12:20.760
some rest and Python capabilities
as well, and it's got

220
00:12:20.760 --> 00:12:24.240
wifi built into it. And
those are just features. The

221
00:12:24.240 --> 00:12:28.500
real idea is say you
are a web developer or

222
00:12:28.500 --> 00:12:31.920
somebody who doesn't even know
programming. JavaScript is a relatively

223
00:12:31.920 --> 00:12:38.130
accessible language. And you don't
really want to think about

224
00:12:38.130 --> 00:12:40.560
all the levels of implementation
at the outset. You have

225
00:12:40.560 --> 00:12:42.240
an idea of a thing
that you want to make

226
00:12:43.980 --> 00:12:46.890
Tesla's design so that you
can get from that idea

227
00:12:47.100 --> 00:12:50.880
to having a working version
of that thing as quickly

228
00:12:50.880 --> 00:12:55.050
as you can, or as
quickly as possible. So what

229
00:12:55.050 --> 00:12:58.680
we've done is we've tried
to make it as modular

230
00:12:58.680 --> 00:13:05.640
and abstracted as, as make
sense. I think in the,

231
00:13:05.730 --> 00:13:09.330
in the sense of the
electrical engineering components. So we

232
00:13:09.330 --> 00:13:13.470
know that a web developer,
most web developers are kind

233
00:13:13.470 --> 00:13:17.160
of thrown off by the
idea of building hardware. Electrical

234
00:13:17.160 --> 00:13:19.650
engineering is scary because things
can burn up and you

235
00:13:19.650 --> 00:13:22.950
don't know what's happening. And
there's invisible things moving around

236
00:13:22.950 --> 00:13:27.300
in the wires that are
obviously very important. And unless

237
00:13:27.300 --> 00:13:30.180
you actually have some, some
grounding in it and maybe

238
00:13:30.180 --> 00:13:33.480
a year or four of
study, you're probably going to

239
00:13:33.480 --> 00:13:38.220
be a bit nervous. So
we looked at the existing

240
00:13:38.220 --> 00:13:43.620
solutions, Arduino and raspberry PI
are the two obvious contenders,

241
00:13:43.620 --> 00:13:46.350
but there's other options out
there in the space. And

242
00:13:46.380 --> 00:13:49.830
they're quite cool. And it's
much easier than, than, you

243
00:13:49.830 --> 00:13:55.200
know, 15 years ago, electrical
engineering, but you still have

244
00:13:55.200 --> 00:14:00.240
to have this, the step
where you buy components and

245
00:14:00.240 --> 00:14:07.710
you plug in wires and
you, you have to know

246
00:14:07.710 --> 00:14:10.860
a little bit about, well,
does it need this amount

247
00:14:10.860 --> 00:14:15.600
of voltage, this amount of
amperage when the signal comes

248
00:14:15.600 --> 00:14:19.050
back, what kind of numbers
am I looking for? Is

249
00:14:19.050 --> 00:14:22.080
this just a voltage change?
Is it trying to talk

250
00:14:22.080 --> 00:14:28.170
over some protocol? It gets
much more complicated than, than

251
00:14:28.170 --> 00:14:33.810
it really has to in,
in the modern time. So

252
00:14:33.840 --> 00:14:38.400
we have this concept of
modules, which are, if, if

253
00:14:38.400 --> 00:14:42.330
you're a node programmer, it's,
they're literally NPM modules as

254
00:14:42.330 --> 00:14:45.000
well as being physical components.
So there's a one to

255
00:14:45.000 --> 00:14:48.450
one mapping Of an NPM
module to the mat, to

256
00:14:48.450 --> 00:14:53.150
the physical module. Yes, that's
correct. In fact, so we've

257
00:14:53.150 --> 00:14:55.670
got first party ones in
community, community created ones, and

258
00:14:55.670 --> 00:14:57.860
I'll go into the community
once a bit later, but

259
00:14:58.580 --> 00:15:01.970
the first party ones that
we've made ourselves, yeah. It's

260
00:15:01.970 --> 00:15:04.610
a little red board to
match a little red tussle.

261
00:15:05.390 --> 00:15:11.270
It's got a standardized 10
pin layout of, of all

262
00:15:11.270 --> 00:15:14.510
the different protocols, which from
an electrical engineering perspective is

263
00:15:14.510 --> 00:15:16.610
interesting, but let's assume that
you don't care about that.

264
00:15:17.450 --> 00:15:20.240
It means that it plugs
in and it's pretty obvious

265
00:15:20.240 --> 00:15:24.710
how it plugs in and
printed right onto that circuit

266
00:15:24.710 --> 00:15:27.980
board is the name of
the NPM module. So say

267
00:15:27.980 --> 00:15:32.570
you want a camera? It
says, camera dash V C

268
00:15:32.570 --> 00:15:37.010
zero seven zero six, right
on it. And if you

269
00:15:37.010 --> 00:15:40.460
NPM install camera dash zero
seven zero six, and NPM

270
00:15:40.460 --> 00:15:44.360
require that module, you've got
a first party library that

271
00:15:44.360 --> 00:15:47.840
says, yeah, you can just
do camera dot, take picture.

272
00:15:47.840 --> 00:15:50.330
And, and in your callback,
it'll return a buffer of

273
00:15:50.330 --> 00:15:55.160
your image. And it's, I
mean, it's that simple at

274
00:15:55.160 --> 00:15:57.730
that point, He makes you
wonder why kind of it,

275
00:15:57.730 --> 00:16:00.670
wasn't always that simple. Like
when I started playing with

276
00:16:00.670 --> 00:16:04.210
Arduino, I would put shields
together and I would think

277
00:16:04.210 --> 00:16:06.640
that, okay, a shield, you
know, there'd be a library

278
00:16:06.640 --> 00:16:09.340
for each shield and there
is, but then you start

279
00:16:09.340 --> 00:16:11.860
having to think about pins.
And when you stack shields,

280
00:16:11.860 --> 00:16:14.440
you have to think about,
are those pins touching each

281
00:16:14.440 --> 00:16:18.610
other? You know, you, the,
the concepts of voltage and

282
00:16:18.610 --> 00:16:23.050
amperage still leak out. Yeah,
exactly. And it's not a

283
00:16:23.050 --> 00:16:25.300
bad thing to have to
learn a bit about voltage.

284
00:16:25.390 --> 00:16:27.700
Well, okay. It's not a
bad thing to learn about

285
00:16:27.700 --> 00:16:31.180
voltage and amperage and how
electronics work. But I do

286
00:16:31.180 --> 00:16:32.860
think it is a bad
thing to be forced to

287
00:16:32.860 --> 00:16:35.440
learn it when you're trying
to do something else entirely

288
00:16:38.320 --> 00:16:40.660
On the, on the website.
And the website is TESL,

289
00:16:40.660 --> 00:16:44.650
T E S S E
l.io. It's probably one of

290
00:16:44.650 --> 00:16:46.900
the best homepages I've seen
for a project in a

291
00:16:46.900 --> 00:16:49.600
long, long time. It's just
so well designed. It does

292
00:16:49.600 --> 00:16:53.260
some, some scroll jacking that
is really, really cool, but

293
00:16:53.290 --> 00:16:55.450
scroll, I would encourage people
who are listening to scroll

294
00:16:55.450 --> 00:16:57.600
down to the bottom because
the part that I liked

295
00:16:57.600 --> 00:17:00.010
the best and here's a
compliment to you is you've

296
00:17:00.010 --> 00:17:04.030
got these two columns and
one's called the knitty and

297
00:17:04.030 --> 00:17:06.790
one's called the gritty. And
it is just perfect. I

298
00:17:06.790 --> 00:17:10.300
think everyone should do this.
So the nitty says programmable

299
00:17:10.300 --> 00:17:13.900
and JavaScript, you know, support
for rust coming, deploy over

300
00:17:13.900 --> 00:17:16.750
wifi support, you know, all
the nitty, all the stuff

301
00:17:16.750 --> 00:17:18.340
that you want. And for
people who don't have English

302
00:17:18.340 --> 00:17:22.450
as a, as a, a,
a first language, and they

303
00:17:22.450 --> 00:17:24.340
might find the nitty gritty
to be a little confusing,

304
00:17:24.340 --> 00:17:26.920
but the gritty has all
of the specs that you

305
00:17:26.920 --> 00:17:30.220
want in like eight quick
sentences. This is a really

306
00:17:30.310 --> 00:17:36.430
surprisingly powerful little device. You've
got a 580 megahertz processor

307
00:17:36.430 --> 00:17:42.640
on this thing. Yeah. So
actually, so we really wanted

308
00:17:42.640 --> 00:17:46.060
to upgrade from TESL one
when we made tussle to,

309
00:17:47.560 --> 00:17:52.290
and one of the, one
of the major issues with

310
00:17:52.350 --> 00:17:55.170
the original Tesla was that
though it's cool that it

311
00:17:55.170 --> 00:17:57.420
has wifi built into it
at the time that we

312
00:17:57.420 --> 00:18:01.230
built it. The technology for
putting for fruiting wifi on

313
00:18:01.230 --> 00:18:05.610
boards was not as great
as we'd hoped. It was,

314
00:18:06.750 --> 00:18:08.610
there was a chip, the
CC 3000 that a lot

315
00:18:08.610 --> 00:18:11.790
of people got really excited
about. And a number of,

316
00:18:12.330 --> 00:18:15.420
of companies started doing really
interesting things with it. And

317
00:18:15.420 --> 00:18:18.150
then that particular chip didn't
deliver in the way that

318
00:18:18.150 --> 00:18:21.000
most of us had hoped.
And so we ended up

319
00:18:21.000 --> 00:18:26.520
with wifi that worked most
of the time. So actually

320
00:18:26.520 --> 00:18:28.440
one of the, one of
the things that we've done

321
00:18:28.530 --> 00:18:31.980
with tussle too, is we
said, well, first of all,

322
00:18:32.490 --> 00:18:37.650
the original Tesla was $75.
And that's pretty reasonable for

323
00:18:37.650 --> 00:18:40.050
what it costs to build
it, but pretty unreasonable. If

324
00:18:40.050 --> 00:18:41.610
you want to buy 50
of those and teach a

325
00:18:41.610 --> 00:18:47.790
class or, or for whatever
purpose, to be honest, or

326
00:18:47.790 --> 00:18:50.250
actually near and dear to
my heart, if you wanted

327
00:18:50.250 --> 00:18:53.400
to embed it in something,
that's a lot. So we,

328
00:18:53.460 --> 00:18:55.050
so we said, well, what's
a way that we can

329
00:18:55.050 --> 00:18:58.890
make this both cheaper and
better. And so we started

330
00:18:58.890 --> 00:19:03.870
trying to investigate well where,
where our wifi chips used

331
00:19:03.870 --> 00:19:06.810
a ton because economies of
scale is, is the only

332
00:19:06.810 --> 00:19:10.620
thing that really drives down
price. So we actually ended

333
00:19:10.620 --> 00:19:12.930
up with this media tech
tech chip that you can

334
00:19:12.930 --> 00:19:16.740
find in routers. So the
hardware on Tesla two is

335
00:19:16.740 --> 00:19:19.590
literally a router chip, and
you can actually use it

336
00:19:19.590 --> 00:19:24.330
as a router and it's
got the processor embedded and

337
00:19:24.330 --> 00:19:27.630
it's a full processor. So
it can actually, it actually,

338
00:19:27.810 --> 00:19:31.500
in this case runs Linux
though. I hate to say

339
00:19:31.500 --> 00:19:35.580
that actually up front, because
it should feel exactly like

340
00:19:35.580 --> 00:19:37.680
Tesla one, you shouldn't feel
like you're running a Linux

341
00:19:37.680 --> 00:19:41.090
box. It should. It's, it's
completely abstracted away. I see.

342
00:19:41.090 --> 00:19:43.880
So you could, I mean,
I suppose you could theoretically

343
00:19:43.880 --> 00:19:45.320
break in there and mess
with it if you want

344
00:19:45.320 --> 00:19:47.060
it to, but knowing that
it runs, it is an

345
00:19:47.060 --> 00:19:49.010
appliance, right. I don't want
to think about that. It

346
00:19:49.010 --> 00:19:51.170
runs Linux. I know that
it runs node and IO.

347
00:19:51.590 --> 00:19:55.760
Yes, absolutely. So we're actually
using the same API and

348
00:19:55.760 --> 00:20:00.620
the same command line tools
with some improvements on them,

349
00:20:00.620 --> 00:20:05.270
because why not? When you're
given the chance as the

350
00:20:05.270 --> 00:20:08.660
Tesla one, even though the
implementation is totally different and,

351
00:20:08.660 --> 00:20:13.610
and the main command line
tools are the original, you

352
00:20:13.610 --> 00:20:16.010
would say, we kind of
stole this from Heroku his

353
00:20:16.010 --> 00:20:20.150
idea, because it's, it's brilliant.
It just says Tesla push

354
00:20:20.180 --> 00:20:22.790
my code and then that
code lives on your device.

355
00:20:23.180 --> 00:20:26.000
Ah, so, okay. So yeah,
it's just like get push

356
00:20:26.010 --> 00:20:29.810
and push you. Just put,
that's a really nice metaphor.

357
00:20:30.500 --> 00:20:32.930
Yeah. And it's, and it's
very intuitive to web developers

358
00:20:32.930 --> 00:20:35.750
and non web developers alike.
Cause it's just, it's just

359
00:20:35.750 --> 00:20:39.470
doing exactly what you say
to do. And so that,

360
00:20:39.470 --> 00:20:42.870
that will still be happening
on TESL too. And this

361
00:20:42.870 --> 00:20:45.560
is, this is already implemented
where we're putting together the

362
00:20:45.560 --> 00:20:48.100
CLI right now. And you're
welcome. Check out the repose.

363
00:20:50.470 --> 00:20:53.350
So you can, you can
Tesla run code and it's

364
00:20:53.620 --> 00:20:56.560
yeah. Index tussle, push index
dot JS. And it starts,

365
00:20:56.620 --> 00:20:58.840
you know, in the hello
world example, blinking your lights

366
00:20:59.400 --> 00:21:02.040
Before you run away from
the wifi thing. I did

367
00:21:02.040 --> 00:21:04.620
have one last question about
the wifi, because there's a,

368
00:21:04.890 --> 00:21:07.770
there's an unusual blade looking
design on the, on two

369
00:21:07.770 --> 00:21:10.110
of the edges of the
TESL. Is that related to

370
00:21:10.110 --> 00:21:12.900
the wifi? Is that an
antenna of some kind? Yes.

371
00:21:12.900 --> 00:21:17.190
Those are both antennas. And
you'd have to ask our

372
00:21:17.190 --> 00:21:20.460
head electrical engineer, Eric, about
more details on that, but

373
00:21:20.460 --> 00:21:23.100
that's, that's to make sure
that the wifi is very

374
00:21:23.100 --> 00:21:26.520
stable. Okay. So that's good.
It's interesting because there's so

375
00:21:26.520 --> 00:21:28.950
many devices out there where
you have to, you get

376
00:21:28.950 --> 00:21:30.480
the device, you're like, okay,
I'm ready to do something

377
00:21:30.480 --> 00:21:32.670
with this device. And then,
Oh, I need a wifi

378
00:21:32.700 --> 00:21:35.910
thing. You know, you always
have to add wifi to

379
00:21:35.910 --> 00:21:37.590
stuff. It's so nice that
it's finally coming out of

380
00:21:37.590 --> 00:21:40.470
the box on more devices.
Well, right. And actually that's

381
00:21:40.470 --> 00:21:42.630
one of the things that
we thought was really frustrating

382
00:21:42.630 --> 00:21:46.590
about electrical engineering that we
wanted to fix is when

383
00:21:46.590 --> 00:21:50.370
you're doing an electrical engineering
project, you get your microcontroller

384
00:21:50.370 --> 00:21:52.860
and then you say, okay,
now what? And a lot

385
00:21:52.860 --> 00:21:55.290
of people leave their, their
pies in the Arduinos sitting

386
00:21:55.290 --> 00:21:58.770
in drawers because they thought
it was cool. And then

387
00:21:58.950 --> 00:22:00.630
they didn't come up with
an idea. And even if

388
00:22:00.630 --> 00:22:04.830
they did come up with
an idea, they need a

389
00:22:04.830 --> 00:22:06.840
couple of wires or a
couple of resistors of a

390
00:22:06.840 --> 00:22:12.390
specific value. And we wanted
to make sure that you

391
00:22:12.390 --> 00:22:14.310
could just get it and
go. So if you, if

392
00:22:14.310 --> 00:22:17.430
you get the server module,
for example, it's not just

393
00:22:17.910 --> 00:22:24.210
the servo module, physical thing.
It also includes a servo

394
00:22:24.480 --> 00:22:27.300
what to plug into it.
And it also includes a

395
00:22:27.330 --> 00:22:29.910
five volt power adapter so
that you can run your

396
00:22:29.910 --> 00:22:33.900
servo. And so it all
comes in the box together.

397
00:22:33.900 --> 00:22:36.120
And the idea is you
don't, you don't have to

398
00:22:36.120 --> 00:22:37.920
wait around, you get your
thing and you make it.

399
00:22:39.210 --> 00:22:41.430
That's really slick. Yeah. I'm
looking at the servo model

400
00:22:41.460 --> 00:22:43.380
module here. And that's one
of the hardest things I've

401
00:22:43.380 --> 00:22:45.840
found in getting involved in
this stuff is hooking up

402
00:22:46.320 --> 00:22:48.810
servos. It's easy to get
a button and an led

403
00:22:48.810 --> 00:22:50.070
to work, but then it's
like, all right, I want

404
00:22:50.070 --> 00:22:53.340
to move them or move
a motor around, figuring out

405
00:22:53.580 --> 00:22:57.570
the power that runs the
board and being separate from

406
00:22:57.570 --> 00:23:00.720
the power that runs the
motors. And in this case

407
00:23:00.720 --> 00:23:04.080
here, you've, you've separated that.
Right. It's separate. So that,

408
00:23:04.200 --> 00:23:06.240
yeah, so that you don't
have to worry about drawing

409
00:23:06.240 --> 00:23:08.640
too much power off the
board itself. You don't have

410
00:23:08.640 --> 00:23:11.910
to worry about how you're
powering the board because usually

411
00:23:11.910 --> 00:23:13.980
you're going to be powering
it over USB, which is

412
00:23:13.980 --> 00:23:17.070
five volts, but we can't
depend on that. Tesla one

413
00:23:17.070 --> 00:23:21.360
actually could take anything between
3.3 and 12 volts and

414
00:23:21.360 --> 00:23:25.080
still work. But so yeah,
we wanted to make sure

415
00:23:25.080 --> 00:23:27.960
the service had a consistent
power supply. And then this,

416
00:23:27.990 --> 00:23:31.470
the API for it is
dead simple. And I was

417
00:23:31.470 --> 00:23:34.020
part of designing this. You
want to serve at a

418
00:23:34.020 --> 00:23:38.880
move it's servo dot move
As well as it should

419
00:23:38.880 --> 00:23:41.160
be. You know what I
mean? I mean, even complicated

420
00:23:41.880 --> 00:23:44.900
things are easy when you
do it like that. Yeah.

421
00:23:45.080 --> 00:23:48.170
The, and that's exactly the
point And that's, that's honestly,

422
00:23:48.590 --> 00:23:51.650
my favorite thing about tussle
is that it's, it's very

423
00:23:51.650 --> 00:23:54.110
simple when you look at
the code, even if you're

424
00:23:54.110 --> 00:23:57.260
not much of a programmer
and I've, I've done this

425
00:23:57.260 --> 00:24:00.490
with teaching people to code,
I've used tussle to, to

426
00:24:00.500 --> 00:24:03.290
teach, like, this is what
JavaScript is workshops. And I

427
00:24:03.290 --> 00:24:05.420
have people read through it
and say, so what do

428
00:24:05.420 --> 00:24:06.920
you think this line does?
And what do you think

429
00:24:06.920 --> 00:24:09.260
this line does? And they
read through the, you know,

430
00:24:09.260 --> 00:24:13.520
10 or 20 lines of
the example and they can

431
00:24:13.520 --> 00:24:15.770
usually tell me, yeah, okay.
This is the part where

432
00:24:16.100 --> 00:24:20.720
Tesla's saying that the modules
connected on port a, and

433
00:24:20.720 --> 00:24:22.850
this is the part where
it's saying, okay, we'll wait

434
00:24:22.850 --> 00:24:25.910
until the servo module says
that it's ready. Okay. Now

435
00:24:25.910 --> 00:24:30.950
move it to this position.
And it it's meant to

436
00:24:30.950 --> 00:24:36.020
read like planning, Lish, and
it's meant to work well

437
00:24:36.410 --> 00:24:39.320
for node programmers. It's nice
that it's in that same

438
00:24:39.320 --> 00:24:44.000
callback and or promise format.
The, that kind of makes

439
00:24:44.000 --> 00:24:48.220
sense in terms of when
things happen. I think that

440
00:24:48.490 --> 00:24:51.460
also in the context of
teaching people, if you sit

441
00:24:51.460 --> 00:24:54.400
down with like a, you
know, a teenager and you

442
00:24:54.400 --> 00:24:57.790
show them how to write,
alert, whatever, and run it

443
00:24:57.790 --> 00:25:01.060
in a webpage and they
go, okay, that's basic programming.

444
00:25:01.060 --> 00:25:02.860
And then you say, well,
let's do some hardware now.

445
00:25:02.890 --> 00:25:05.830
And you make that transition
from people who were born

446
00:25:05.830 --> 00:25:09.520
on the web and they're
going from web programming on

447
00:25:09.520 --> 00:25:12.040
something that they know the
browser. And now suddenly they're

448
00:25:12.520 --> 00:25:15.520
putting something out on an
led screen. They're going to,

449
00:25:15.700 --> 00:25:18.430
I think that's magic. They're
going to think that's completely

450
00:25:18.430 --> 00:25:20.560
natural. Of course, you know,
why wouldn't you do it

451
00:25:20.560 --> 00:25:23.620
that way. Right. And it's,
it's actually really cool because,

452
00:25:25.240 --> 00:25:30.010
because yeah, I don't, I
don't know. I I've done,

453
00:25:30.040 --> 00:25:32.710
I've taught people, I've gone
and done like workshop for

454
00:25:32.710 --> 00:25:35.020
high school girls. Who'd never
programmed before. And I sat

455
00:25:35.020 --> 00:25:37.930
them down and I made
sure, so our start experience

456
00:25:37.930 --> 00:25:40.870
starts with the installation step,
but there's a little link

457
00:25:40.870 --> 00:25:42.640
at the top of that
that says, if you're new

458
00:25:42.640 --> 00:25:45.010
to web development, take a
step back and learn the

459
00:25:45.010 --> 00:25:47.110
basics. And it says, this
is what a command line

460
00:25:47.110 --> 00:25:49.720
is. And it gives you
a little workshop that says,

461
00:25:49.720 --> 00:25:51.700
okay, you should get comfortable
with this. Okay. Now we

462
00:25:51.700 --> 00:25:57.100
can go into let's install
tussle. And I sit them

463
00:25:57.100 --> 00:26:00.340
down with that and, and
they go through it and

464
00:26:00.340 --> 00:26:02.350
they, they try the command
line and they get the

465
00:26:02.350 --> 00:26:05.080
concept of, Oh, I'm manipulating
files on my computer. That's

466
00:26:05.080 --> 00:26:07.630
cool. And then they go
through and they install node

467
00:26:07.630 --> 00:26:12.970
and that works out better
than you'd expect. And then,

468
00:26:13.270 --> 00:26:16.150
yeah, they, they, by the
end of, you know, half

469
00:26:16.150 --> 00:26:18.910
an hour, an hour, they've
made a couple things in

470
00:26:18.910 --> 00:26:22.090
hardware, even though it's their
first time ever using JavaScript.

471
00:26:22.090 --> 00:26:25.180
And I think because, because
we intentionally made tussle to

472
00:26:25.180 --> 00:26:29.230
be the exact same tools
and flow as web development,

473
00:26:29.560 --> 00:26:31.090
it would then be really
easy for one of them

474
00:26:31.090 --> 00:26:32.740
to say, okay, now I'm
going to build a website

475
00:26:32.740 --> 00:26:35.650
to interact with, to interact
with hardware or just a

476
00:26:35.650 --> 00:26:40.060
website on its own. And
they already have node installed.

477
00:26:40.060 --> 00:26:42.790
They already understand what the
CLI is. They already understand

478
00:26:42.790 --> 00:26:46.200
the editor and they maybe
have sublime or Adam, they're

479
00:26:46.200 --> 00:26:49.850
good to go. Yeah. And
this is flexible. Like with

480
00:26:49.850 --> 00:26:53.360
some systems, you'll add some
modules and then you'll round

481
00:26:53.360 --> 00:26:55.250
of modules, like, okay, that's
all the modules. We got

482
00:26:55.670 --> 00:26:57.620
a, but I'm looking at
one here where someone has

483
00:26:57.620 --> 00:27:02.300
taken an old Nokia, 51,
10 black and white, you

484
00:27:02.300 --> 00:27:06.860
know, LCD screen, like the
classic Nokia screen and got

485
00:27:06.860 --> 00:27:09.920
to talking to a TESL
with this DIY board. And,

486
00:27:09.980 --> 00:27:11.870
you know, I'm kind of
digging into this and you

487
00:27:11.870 --> 00:27:15.650
can go all the way
down into exactly what code

488
00:27:15.650 --> 00:27:18.830
he used. He ported someone
else's driver for this screen

489
00:27:18.830 --> 00:27:22.040
and then wrote, you know,
Nokia 51, 10 dot print.

490
00:27:22.070 --> 00:27:24.600
And he's putting it out
there. I mean, that's, that's

491
00:27:24.620 --> 00:27:27.260
amazing. I could, I could
teach my kids kind of

492
00:27:27.260 --> 00:27:29.780
the basic concepts and they
would feel like, Oh, this

493
00:27:29.780 --> 00:27:32.780
is what's inside a cell
phone, you know? Yeah. Well,

494
00:27:32.780 --> 00:27:34.850
and it's actually, so this
is kind of a, one

495
00:27:34.850 --> 00:27:39.560
of my favorite things is
I spent a lot of

496
00:27:39.560 --> 00:27:43.670
time working with working with
a fellow Kevin to, to

497
00:27:43.670 --> 00:27:49.190
write documentation for the DIY
module because you know, developers

498
00:27:49.190 --> 00:27:51.500
know what they're doing in
terms of protocols. Like that's,

499
00:27:51.580 --> 00:27:54.560
that's a concept that is
well understood. It's just that

500
00:27:54.560 --> 00:27:58.850
hardware has different protocols. And
so we've written actually documentation.

501
00:27:58.850 --> 00:28:02.630
So that it's quite easy
to understand what is spy.

502
00:28:02.630 --> 00:28:08.840
You aren't ITC standard protocols
for hardware communication. So we

503
00:28:08.840 --> 00:28:13.160
actually built this DIY module
and with it released some

504
00:28:13.160 --> 00:28:16.790
documentation on, if you're just
getting started with, with hardware,

505
00:28:17.210 --> 00:28:20.090
don't worry. It's not a
big deal. This is what

506
00:28:20.090 --> 00:28:24.050
I to see is here's
how you use it. And

507
00:28:24.950 --> 00:28:28.100
well, it it's, it sounds,
it looks much simpler than

508
00:28:28.100 --> 00:28:30.470
it sounds when I say
it out loud, but check

509
00:28:30.470 --> 00:28:33.680
out that documentation, if you
find that interesting. But the

510
00:28:33.680 --> 00:28:37.040
whole idea is even that,
even at that level, we've

511
00:28:37.040 --> 00:28:39.860
tried to abstract that to
JavaScript and make it quite

512
00:28:39.860 --> 00:28:43.310
simple. So normally you would
have to do this whole

513
00:28:43.310 --> 00:28:48.320
rigmarole of setting a, a
bod rate to communicate over

514
00:28:48.320 --> 00:28:53.420
and setting like a certain
pin high for a certain

515
00:28:53.420 --> 00:28:57.200
amount to wake it up.
All of this nonsense, we've

516
00:28:57.200 --> 00:29:01.310
actually made abstracted API APIs
for a TESL, such that

517
00:29:01.310 --> 00:29:04.340
you can say, okay, I'm
making this thing. I read

518
00:29:04.340 --> 00:29:08.240
on the data data sheet
that it needs the speed

519
00:29:08.240 --> 00:29:14.840
of communication and you set
it up and go, and

520
00:29:14.850 --> 00:29:20.150
it's, it's just not that
complicated. And actually well, so,

521
00:29:20.150 --> 00:29:22.580
so you were looking at
the community modules, which is

522
00:29:22.580 --> 00:29:29.480
actually on tesl.io/modules, which is
actually, I, I, I love

523
00:29:29.480 --> 00:29:31.730
that we're able to do
this to have a community

524
00:29:31.730 --> 00:29:36.590
that is excited about contributing
these, these NPM libraries for,

525
00:29:36.610 --> 00:29:40.940
for hardware. So the community
modules is a, is a

526
00:29:41.380 --> 00:29:48.970
for people to contribute well.
So Arduino and raspberry PI

527
00:29:49.000 --> 00:29:54.010
have created this really wonderful
ecosystem and marketplace for, for

528
00:29:54.010 --> 00:29:58.000
hardware modules. They're just not
the same four factors are

529
00:29:58.000 --> 00:30:01.330
hardware modules. So you end
up with like an Arduino

530
00:30:01.330 --> 00:30:05.260
heart rate sensor or an
Arduino Nokia screen, as you

531
00:30:05.260 --> 00:30:08.770
mentioned. And it's very simple
to go out and buy

532
00:30:08.770 --> 00:30:14.170
those. And there's Arduino libraries
for them already. And so

533
00:30:14.200 --> 00:30:17.800
we've made it fairly simple
to take that Arduino library

534
00:30:17.800 --> 00:30:20.890
and poured it over to
JavaScript and release it as

535
00:30:20.890 --> 00:30:23.740
a node module. And then
the community libraries are for

536
00:30:23.740 --> 00:30:27.400
anyone who's done that or,
or built a node module

537
00:30:27.400 --> 00:30:32.590
from scratch and released it
with an API that's documented

538
00:30:32.620 --> 00:30:36.370
and just images of how
to wire it up so

539
00:30:36.370 --> 00:30:39.880
that anybody could repeat it.
And then even though it

540
00:30:39.880 --> 00:30:44.710
does involve a few wires,
it is just about as

541
00:30:44.710 --> 00:30:46.960
simple as plugging in one
of the first party modules

542
00:30:46.960 --> 00:30:48.580
to the side. Cause all
you have to do is

543
00:30:48.580 --> 00:30:51.100
plug it in where it
shows, plugging it in and

544
00:30:51.100 --> 00:30:56.410
a NPM install again. And
that's extensible pretty much indefinitely.

545
00:30:57.750 --> 00:31:00.000
Yeah. This looks like I'm
just looking around here. There's

546
00:31:00.050 --> 00:31:01.770
there's, I'm trying to think
about how I can take

547
00:31:01.770 --> 00:31:03.570
some of the sensors that
I already have and I

548
00:31:03.570 --> 00:31:06.390
can plug them into the
DIY board. Everything is 3.3

549
00:31:06.390 --> 00:31:10.440
volts. It looks pretty straightforward.
Yeah. And that's, that's the

550
00:31:10.440 --> 00:31:13.530
hope. And if we get
excited about this too, so

551
00:31:13.530 --> 00:31:16.230
if somebody posts on the
forums and says, Hey, I'm

552
00:31:16.230 --> 00:31:17.970
trying to figure out how
to do this, but I'm

553
00:31:17.970 --> 00:31:21.840
new to, to hardware. And
they have a question like

554
00:31:21.870 --> 00:31:23.850
we're always really happy to
jump in and say, Oh,

555
00:31:23.850 --> 00:31:25.740
this is, this is the
thing you should look out

556
00:31:25.740 --> 00:31:30.360
for. This is, have you
tried it this way? One

557
00:31:30.360 --> 00:31:32.340
of the last things, and
I don't mean to put

558
00:31:32.340 --> 00:31:34.050
you on the spot, but
as we, as we end

559
00:31:34.050 --> 00:31:36.930
the show here, is it
true that you made a

560
00:31:37.200 --> 00:31:41.910
CNC machine into a cake
decorator? Yes. That was a

561
00:31:41.910 --> 00:31:46.230
college project. My school Olin
college of engineering has this

562
00:31:46.230 --> 00:31:50.400
class called principles of engineering,
which is basically an entire

563
00:31:50.400 --> 00:31:54.780
semester devoted to design build.
So you pick something outlandish

564
00:31:54.810 --> 00:31:57.570
and then you form a
team of about, I think

565
00:31:57.570 --> 00:31:59.940
ours was six and then
you spend the whole semester

566
00:32:00.180 --> 00:32:03.210
making it from scratch. So
we built a, we were

567
00:32:03.210 --> 00:32:05.340
all learning Python at the
time. So we built a

568
00:32:05.340 --> 00:32:09.060
Python where you could draw
like in paint. And then

569
00:32:10.440 --> 00:32:12.600
one of our team members
was really into machining. So

570
00:32:12.600 --> 00:32:15.600
he got some raw aluminum
blocks and built out the,

571
00:32:16.130 --> 00:32:20.490
the mechanical assembly. And yeah,
we made a cake decorator

572
00:32:20.490 --> 00:32:24.510
that could, if you wrote
something in cursive, on, in,

573
00:32:24.510 --> 00:32:27.090
in our Python, gooey and
then hit print to cake,

574
00:32:27.690 --> 00:32:30.030
it would, it would look
exactly like your handwriting on

575
00:32:30.030 --> 00:32:33.450
the top of the cake.
Where, where is the auto

576
00:32:33.450 --> 00:32:40.550
frost currently? Can we visit
it probably in someone's Garage?

577
00:32:42.310 --> 00:32:44.170
What a shame, what a
shame. That's a really amazing

578
00:32:44.170 --> 00:32:46.300
thing. You can, I will
put links in the show

579
00:32:46.300 --> 00:32:50.920
notes, not only to Tesla,
but also to your instructables.com

580
00:32:51.520 --> 00:32:55.620
profile. So people can see
the YouTube video and be

581
00:32:55.630 --> 00:32:58.720
excited about making as much
as you are. Oh yeah,

582
00:32:58.750 --> 00:33:02.410
absolutely. Thanks so much for
chatting with me today. Thanks

583
00:33:02.410 --> 00:33:05.470
for taking the time. This
has been another episode of

584
00:33:05.470 --> 00:33:07.720
Hansel minutes and we'll see
you again next week.

