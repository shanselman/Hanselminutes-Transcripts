WEBVTT FILE

1
00:00:12.090 --> 00:00:17.850
From hanselminutes.com. It's Hansel minutes.
Oh, weekly discussion with web

2
00:00:17.850 --> 00:00:22.920
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.920 --> 00:00:29.640
number two 61 recorded live
Thursday, April 7th, 2011. Support for Hanselman

4
00:00:29.640 --> 00:00:32.340
it's. This provided by Tellerik
R a D control the

5
00:00:32.340 --> 00:00:36.210
most comprehensive suite of components
for windows forms and asp.net

6
00:00:36.210 --> 00:00:45.360
web applications online@wwwdottelerik.com. In this
episode, Scott talks with Phil

7
00:00:45.360 --> 00:00:48.030
hack about the new releases
and the web platform and

8
00:00:48.030 --> 00:00:52.770
tools division. Hi, this is
Scott Hanselman, and this is

9
00:00:52.770 --> 00:00:55.740
another episode of Hansel minutes,
and this is the Hansel

10
00:00:55.740 --> 00:00:59.130
minutes mixed keynote edition by
that, I mean that if

11
00:00:59.130 --> 00:01:02.040
you're listening to this, it
is after the mixer keynote

12
00:01:02.160 --> 00:01:06.060
and Scott goo has said
something on stage and Phil

13
00:01:06.060 --> 00:01:07.620
hack is here to talk
to me about it. How's

14
00:01:07.620 --> 00:01:13.110
it going? Phil chilling, chilling.
What did we release today?

15
00:01:13.110 --> 00:01:17.990
My friend in the web
platform and tools division, We

16
00:01:17.990 --> 00:01:20.600
released a whole bunch of
products, the ones near and

17
00:01:20.600 --> 00:01:26.090
dear to me, our asp.net,
NBC three tools update, which

18
00:01:26.090 --> 00:01:29.630
includes new get 1.2. But
I believe we also released

19
00:01:29.630 --> 00:01:34.790
the new versions of rice
express and a ESPN at

20
00:01:34.790 --> 00:01:41.930
webpages. And what matrix? I
can't even listen 4.1. The

21
00:01:41.930 --> 00:01:46.040
whole, all the web stack
of love is, is complete.

22
00:01:48.380 --> 00:01:50.720
Exactly. We've been working real
hard on that and a

23
00:01:50.810 --> 00:01:56.540
pretty tired. Yep, absolutely. So
ASP net MVC three, but

24
00:01:56.540 --> 00:01:58.760
you said tools refresh and
you said it really slowly,

25
00:01:58.760 --> 00:02:01.400
like it was important. What
does that mean? What is

26
00:02:01.400 --> 00:02:04.880
the tools refresh? Well, we're
calling it a tools update,

27
00:02:04.880 --> 00:02:08.330
but you know, same thing,
right? What it means is

28
00:02:08.330 --> 00:02:11.990
that the runtime has not
changed at all. So this

29
00:02:11.990 --> 00:02:18.020
is, we just released asp.net
MVC three in January, and

30
00:02:18.020 --> 00:02:22.040
that, you know, releasing that
was kind of a quick

31
00:02:22.040 --> 00:02:25.880
release from embassy to less
than a year away. And

32
00:02:25.880 --> 00:02:28.670
a lot of times people,
you know, have this tension

33
00:02:28.670 --> 00:02:30.380
when we release a new
version of the framework, cause

34
00:02:30.380 --> 00:02:33.050
it's something new to learn
know, do they need to

35
00:02:33.050 --> 00:02:37.430
upgrade all their existing systems?
People need to write books

36
00:02:37.430 --> 00:02:41.300
or articles about it and
so on. And so releasing

37
00:02:41.300 --> 00:02:45.410
a framework to often can,
you know, a fully RTM

38
00:02:45.560 --> 00:02:48.170
supportive framework too often can
often cause tension. So we

39
00:02:48.170 --> 00:02:50.960
wanted to make it clear
that this release is not

40
00:02:50.960 --> 00:02:53.630
a new version of the
NBC runtime, the MPC framework.

41
00:02:53.930 --> 00:02:55.640
Instead, what we did is
we took all the great

42
00:02:55.640 --> 00:02:58.160
tooling that we had and
we improved it and we

43
00:02:58.160 --> 00:03:01.660
added things like scaffolding into
the, in the box, into

44
00:03:01.660 --> 00:03:05.260
the NBC three tooling. So
now if you go in

45
00:03:05.260 --> 00:03:08.890
and add controller and you
select one of your model

46
00:03:08.890 --> 00:03:12.190
types, we can scaffold the
data access code, assuming entity

47
00:03:12.190 --> 00:03:14.830
framework code first, which is
also in the box now

48
00:03:15.460 --> 00:03:18.460
and build out, you know,
your, all your crud, your

49
00:03:18.460 --> 00:03:22.800
create, read, update, and delete
views. Okay. So, so there's

50
00:03:22.800 --> 00:03:25.110
the stuff that happens at
runtime. And that's what you

51
00:03:25.110 --> 00:03:27.180
call the MVC runtime. Those
are the bits that you

52
00:03:27.180 --> 00:03:30.240
install on your server, and
then there's the stuff that

53
00:03:30.240 --> 00:03:33.600
happens before you compile. So
this is a refreshed, all

54
00:03:33.600 --> 00:03:37.920
that stuff that happens before
you compile dialogue boxes, right?

55
00:03:37.920 --> 00:03:42.390
Click menus and all that
stuff. You said scaffolding. I

56
00:03:42.390 --> 00:03:45.540
did a demo at PDC
where I took some stuff

57
00:03:45.540 --> 00:03:47.880
that David Debow and David Fowler
did and kind of wrote

58
00:03:47.880 --> 00:03:51.240
some scaffolding and with T
four and that command line.

59
00:03:51.330 --> 00:03:53.820
And I know that then
Steve Sanderson joined the team.

60
00:03:54.690 --> 00:03:57.120
And the first thing that
Steve Sanderson did was work

61
00:03:57.120 --> 00:04:00.450
on scaffolding. Was that like
part of a larger master

62
00:04:00.450 --> 00:04:03.660
plan that span centuries, or
was that one of those

63
00:04:03.660 --> 00:04:06.600
things where something that, you
know, you as the, as

64
00:04:06.600 --> 00:04:09.240
the PM for MVC said,
Hey, this would be cool.

65
00:04:09.240 --> 00:04:12.060
Let's take this thing that
Ebo and Fowler and those

66
00:04:12.060 --> 00:04:14.010
guys are messing with and
just make it in the

67
00:04:14.010 --> 00:04:16.290
product or were they doing
it because it was part

68
00:04:16.290 --> 00:04:20.310
of the master plan. A
little of both, I'd say,

69
00:04:20.340 --> 00:04:22.980
I think the master plan
all along has always been

70
00:04:22.980 --> 00:04:25.980
to have scaffolding in the
product, right? And I could

71
00:04:25.980 --> 00:04:29.670
show balsamic mockups of that
from years ago. And it

72
00:04:29.670 --> 00:04:32.670
was just a matter of,
you know, timing and other

73
00:04:32.670 --> 00:04:36.570
priorities coming up and wanting
to get the framework to

74
00:04:36.570 --> 00:04:40.140
a good point where we
felt as recently baked. And

75
00:04:40.140 --> 00:04:43.500
then, you know, the time
is right now to bring

76
00:04:43.500 --> 00:04:46.200
in scaffolding. What the part
that I think is a

77
00:04:46.200 --> 00:04:50.820
little more serendipity is how
nougat figures into it. So

78
00:04:50.820 --> 00:04:53.640
we released nougat and suddenly
people were writing all these

79
00:04:53.640 --> 00:04:58.800
really cool packages like Fowler
and Sanderson, where they added

80
00:04:58.800 --> 00:05:01.290
really cool commands to the
PowerShell console that new gear

81
00:05:01.320 --> 00:05:04.650
brings into visual studio, right?
So a package like NBC

82
00:05:04.650 --> 00:05:07.050
scaffolding, you can install it.
And it, as these really

83
00:05:07.050 --> 00:05:10.770
cool new commands like scaffold
controller. And then we had

84
00:05:10.770 --> 00:05:15.960
this thought of what, if
we built scaffolding into the

85
00:05:15.960 --> 00:05:19.140
product and we give you
a default scaffolding experience, but

86
00:05:19.140 --> 00:05:22.770
you could extend that experience
by installing new, get packages

87
00:05:23.130 --> 00:05:26.370
such as MPC scaffolding. And
so that's a real cool

88
00:05:26.370 --> 00:05:29.220
thing is if you right
click app controller and you

89
00:05:29.230 --> 00:05:31.740
look at the drop down
of the different scaffold templates,

90
00:05:32.520 --> 00:05:34.650
there's three of them by
default, there's like the empty

91
00:05:34.650 --> 00:05:36.840
one, which is kind of
like what you have before

92
00:05:36.900 --> 00:05:41.970
this update. There's the scaffold,
your, you know, crud with

93
00:05:42.000 --> 00:05:46.320
entity framework code first. And
then there's a Scud, some

94
00:05:46.410 --> 00:05:52.440
empty placeholder ones, sorry, scaffold
some empty it's ought to

95
00:05:52.440 --> 00:05:56.010
be the new word for
that Crud and scaffolding is

96
00:05:56.010 --> 00:05:59.480
now Scott. I think that
don't make the missiles might

97
00:05:59.480 --> 00:06:03.070
disagree. Oh yeah. It was
a Scud missile. Remember that?

98
00:06:03.400 --> 00:06:07.450
I remember that. So the,
so the scaffolding is the

99
00:06:07.450 --> 00:06:11.230
IX is a, is a
concept it's, there's, there's two

100
00:06:11.230 --> 00:06:14.440
separate pieces though. There's the
stuff that's built in. That's

101
00:06:14.470 --> 00:06:17.380
underneath the dialog box that
ships with it. And then

102
00:06:17.380 --> 00:06:21.610
there's the extensibility because almost
every dropdown box in MVC

103
00:06:21.610 --> 00:06:24.700
three's tooling is extensible. Right?
That's been something that you've

104
00:06:24.700 --> 00:06:28.240
been talking about since MVC
one, the testing dropped down,

105
00:06:28.600 --> 00:06:31.870
the views dropped down and
now the controller scaffolding dropped

106
00:06:31.870 --> 00:06:34.810
down. That's right. That's right.
So what happens when you

107
00:06:34.810 --> 00:06:39.730
install MVC scaffolding, that new
get package, we add new

108
00:06:39.790 --> 00:06:42.970
templates, new scaffolding templates in
there. So then you'll get

109
00:06:42.970 --> 00:06:47.380
the option for example, to
scaffold your model and controller

110
00:06:47.380 --> 00:06:53.410
and views with a repository
pattern. Now, someone else can

111
00:06:53.410 --> 00:06:56.170
go out there and write
their own new, get package

112
00:06:56.170 --> 00:06:59.230
that will add templates in
there to scaffold entity framework

113
00:06:59.260 --> 00:07:02.740
or a subsonic. Or now
there's a new one called

114
00:07:02.770 --> 00:07:06.640
dapper. So, you know, you
could, whatever framework, data, access

115
00:07:06.640 --> 00:07:10.240
technology, you like, you can
write a T a T

116
00:07:10.240 --> 00:07:12.790
for template for it that
will integrate into our ad

117
00:07:12.790 --> 00:07:15.430
controller dialogue. And you can
get it into there by

118
00:07:15.430 --> 00:07:18.100
using new get. So it's
kind of this nice, you

119
00:07:18.100 --> 00:07:21.940
know, all around story there
In the past, we we've

120
00:07:21.940 --> 00:07:25.150
shown people stuff like the
test dropped down and said,

121
00:07:25.150 --> 00:07:27.010
you can put, you know,
you could put something in

122
00:07:27.010 --> 00:07:29.260
here and we've shown them
the F the views dropped

123
00:07:29.260 --> 00:07:31.360
down, but I haven't felt
like those things really kind

124
00:07:31.360 --> 00:07:34.510
of exploded. They never really
became huge, like four or

125
00:07:34.510 --> 00:07:38.170
five really big projects got
in those dropdowns, you know,

126
00:07:38.170 --> 00:07:40.900
like, and unit and things
like an MBA unit. And

127
00:07:40.960 --> 00:07:46.000
on the, on the view
side, things like spark. Do

128
00:07:46.000 --> 00:07:48.010
you, but do you think
that's because of the nature

129
00:07:48.010 --> 00:07:51.310
of the things that were
extensible, like testing frameworks and

130
00:07:51.310 --> 00:07:54.310
views that caused those not
to like fill up with

131
00:07:54.310 --> 00:07:56.770
a hundred different options and
do you think this will

132
00:07:56.770 --> 00:08:00.430
be different? Yeah, I think
it is a nature of

133
00:08:00.430 --> 00:08:03.130
those things. Like there, there
aren't a hundred different unit

134
00:08:03.130 --> 00:08:06.260
test frameworks, right. And there's
only very few so that

135
00:08:06.610 --> 00:08:08.650
in a way that the
people who would write a

136
00:08:08.710 --> 00:08:12.580
custom unit test dialogue are
very few. And also we

137
00:08:12.580 --> 00:08:16.120
haven't really made the experience
super easy yet. You know,

138
00:08:16.120 --> 00:08:19.480
we figured that's more of
an advanced and case, but

139
00:08:19.480 --> 00:08:23.740
even with the test dialogue,
I do see good uses

140
00:08:23.770 --> 00:08:27.030
of the average person like
the non, you know, I

141
00:08:27.040 --> 00:08:28.840
don't, I'm not a person
who writes the unit test

142
00:08:28.840 --> 00:08:32.620
frameworks, but I can take
the existing test framework, add

143
00:08:32.620 --> 00:08:34.630
in my own test libraries
into there. And now I

144
00:08:34.630 --> 00:08:37.540
have a new custom one
in my mix talk, I'm

145
00:08:37.540 --> 00:08:39.670
planning to show an example.
One of the other things

146
00:08:39.670 --> 00:08:43.750
that's extensible is when you
click new MVC three project,

147
00:08:44.020 --> 00:08:47.230
you actually get a list
view of different project types.

148
00:08:47.650 --> 00:08:49.150
And then the tools that
they, we added a new

149
00:08:49.150 --> 00:08:52.390
one called intranet project. And
I always tell people, you

150
00:08:52.390 --> 00:08:55.000
can put your own custom
project templates in there. So

151
00:08:55.110 --> 00:08:57.960
my talk, I'm going to
actually show you how, because

152
00:08:57.960 --> 00:08:59.880
that's one of the things
that's been missing is, Oh

153
00:08:59.880 --> 00:09:01.890
yeah, you can put something
in there, but I don't

154
00:09:01.890 --> 00:09:03.720
have time to show you
how to do it. So

155
00:09:03.720 --> 00:09:05.400
this time we'll show you
how to do it. And

156
00:09:05.400 --> 00:09:08.220
then things like with scaffolding,
I think you will see

157
00:09:08.220 --> 00:09:10.650
a little more cause people
have strong opinions of how

158
00:09:10.650 --> 00:09:14.480
code the code to get
January. Yeah. There's a lot

159
00:09:14.480 --> 00:09:16.340
of white space in that
dialogue box. It'd be nice

160
00:09:16.340 --> 00:09:19.490
to start putting stuff in
there. Yeah. And we're slowly

161
00:09:19.490 --> 00:09:22.700
doing that over time. Right.
When we introduced it. And

162
00:09:22.700 --> 00:09:24.740
then we see three, there
was two. Now with the

163
00:09:24.740 --> 00:09:27.890
tools update, there's three. Maybe
if we release a tools,

164
00:09:27.890 --> 00:09:31.340
update, update, there'll be four
or five. Well, that would

165
00:09:31.340 --> 00:09:35.080
be releasing a tool update
update would be incredibly Microsoft

166
00:09:35.090 --> 00:09:37.670
EFS to do, we'd have
to call it the September

167
00:09:37.670 --> 00:09:40.280
refresh tool. I think if
we did that, I, it

168
00:09:40.280 --> 00:09:43.970
would probably drive me to
my desk bed. Now, why

169
00:09:43.970 --> 00:09:47.630
didn't you call it NBC
3.1? You know, we thought

170
00:09:47.630 --> 00:09:52.010
about that, but the, we
received a lot of feedback

171
00:09:52.010 --> 00:09:54.500
when we kind of ran
that by insiders and MVPs,

172
00:09:54.530 --> 00:09:57.320
that it made them feel
tense, kind of what I

173
00:09:57.320 --> 00:10:00.770
was talking about earlier, it
made them feel like it's

174
00:10:00.770 --> 00:10:03.590
a revision to the framework.
And thus, now it's something

175
00:10:03.590 --> 00:10:06.650
more that they're going to
get asked about and people

176
00:10:06.650 --> 00:10:08.900
are going to have confusion
about, Oh, what framework am

177
00:10:08.900 --> 00:10:11.390
I on? You know, I
deployed NBC three to the

178
00:10:11.390 --> 00:10:13.820
frame, to my server. Are
you on three? Are you

179
00:10:13.820 --> 00:10:17.000
on 3.1? And we're like,
well, no, 3.1 is the

180
00:10:17.000 --> 00:10:19.730
same framework. Oh, I didn't
know that. You know, like,

181
00:10:19.730 --> 00:10:22.100
so we wanted to avoid
that situation. So we call

182
00:10:22.100 --> 00:10:25.640
it tools, update to make
it crystal clear. At least

183
00:10:25.640 --> 00:10:29.720
we hope crystal clear that
there's no runtime changes. So

184
00:10:30.170 --> 00:10:32.840
we hope nobody ever asked
the question, Oh, what do

185
00:10:32.840 --> 00:10:34.460
you have on your server?
Do you have NBC three

186
00:10:34.460 --> 00:10:38.480
or embassy three tools update
because it's the same server

187
00:10:38.900 --> 00:10:42.230
assembly. No, I noticing that
there's lots of, there's lots

188
00:10:42.230 --> 00:10:44.000
of new stuff coming out.
And I've been using this

189
00:10:44.000 --> 00:10:47.870
metaphor lately about Lego pieces.
Right. And how before we

190
00:10:47.870 --> 00:10:50.000
used to release these big
Lego pieces and just kind

191
00:10:50.000 --> 00:10:52.400
of like drop them on
you and be like, here's

192
00:10:52.400 --> 00:10:57.200
SharePoint, you know, virus SharePoint
is more like a fully

193
00:10:57.470 --> 00:11:01.280
constructed yeah. Fully completed model,
right. Blew together. But you

194
00:11:01.280 --> 00:11:03.380
know, but lately though, with,
you know, with old data,

195
00:11:03.380 --> 00:11:06.800
with these smaller pieces, new
get eyes express, equal Compaq

196
00:11:06.800 --> 00:11:09.800
and any framework, there's a,
there's something that's happening. Things

197
00:11:09.800 --> 00:11:12.410
are happening out of band
right out of band is

198
00:11:12.410 --> 00:11:14.600
what we mean when we
say not at the same

199
00:11:14.600 --> 00:11:17.300
time as visual studio, remember
visual studio 2010 came out.

200
00:11:17.810 --> 00:11:21.860
Was it last October? Yeah.
So that was not very

201
00:11:21.860 --> 00:11:25.190
long ago. So visual studio,
2010 came out last year,

202
00:11:25.190 --> 00:11:28.760
right? That's the cooler last
April. It's been a year

203
00:11:30.110 --> 00:11:34.670
that's October, October. Anyway, the
point is, this is true.

204
00:11:34.670 --> 00:11:38.590
The 2010 came out and
stuff keeps coming out. So

205
00:11:38.750 --> 00:11:41.750
I think that there's two
interesting things about that one,

206
00:11:41.990 --> 00:11:46.550
which is the, what is
the public's ability to absorb

207
00:11:46.850 --> 00:11:50.000
this much stuff. Right. You
know, is there too much

208
00:11:50.000 --> 00:11:54.220
too fast? And then there's
also the, the idea that

209
00:11:54.490 --> 00:11:56.800
I don't know what version
of, what thing fits together

210
00:11:56.800 --> 00:11:58.600
and works together and what
version of what thing I

211
00:11:58.600 --> 00:12:04.120
have. Cause there's SQL compact
for entity framework 4.1, NVC

212
00:12:04.120 --> 00:12:07.300
three. Do you think that
there's a need to like

213
00:12:07.300 --> 00:12:10.000
draw a circle around it
and name it or are

214
00:12:10.000 --> 00:12:13.900
people already used to using
stacks that are not Microsoft

215
00:12:13.960 --> 00:12:18.660
that have all different versions
and all different names? That's

216
00:12:18.660 --> 00:12:22.560
sort of a good question.
I kinda like a little

217
00:12:22.560 --> 00:12:26.700
bit of both. I sorta
group products into different types

218
00:12:26.700 --> 00:12:28.950
of things. You know, like
the, you could call it

219
00:12:28.950 --> 00:12:32.130
the angst level, right? When
a new version of a

220
00:12:32.130 --> 00:12:36.120
browser comes out, the anx
level is relatively low because

221
00:12:36.120 --> 00:12:38.220
it's just something you use.
Right? You don't have mission

222
00:12:38.220 --> 00:12:42.660
critical systems deployed on a
browser in the same way

223
00:12:42.660 --> 00:12:44.880
you would on a framework
version. So the new framework

224
00:12:44.880 --> 00:12:52.050
version comes out. Okay. You
can give me that example.

225
00:12:52.380 --> 00:12:54.480
So I don't like Chrome
updating every week, because what

226
00:12:54.480 --> 00:12:58.140
if it breaks my intranet
site? Okay, good, good point.

227
00:12:58.140 --> 00:13:04.740
I'm thinking more along the
lines of, yeah. Chrome comes

228
00:13:04.740 --> 00:13:08.010
out every month, right. And
nobody like, you know, loses

229
00:13:08.010 --> 00:13:12.600
a wink of sleep about
that. But, but if the

230
00:13:12.600 --> 00:13:14.610
new, if a new version
of windows came out every

231
00:13:14.610 --> 00:13:17.550
month, you would lose a
lot of sleep because everything

232
00:13:17.550 --> 00:13:20.190
runs on it. Right? Like
your, your, your web server

233
00:13:20.190 --> 00:13:23.850
runs on it now, internet,
internet issue aside, what an

234
00:13:23.850 --> 00:13:26.460
intranet typically would do is
just ignore those releases. Right.

235
00:13:26.460 --> 00:13:31.050
And say, we're on this
version. Yeah. And they roll

236
00:13:31.060 --> 00:13:33.030
it out. So ignore all
these other ones. We don't

237
00:13:33.030 --> 00:13:38.310
care. But, But there's a
test. There's a testing burden

238
00:13:38.310 --> 00:13:41.040
there. Right? I mean, Chrome
does come out every month

239
00:13:41.070 --> 00:13:44.280
or depending on what branch
you're on every week. And

240
00:13:44.310 --> 00:13:48.300
UHIN two comes out every
six months like clockwork, you

241
00:13:48.300 --> 00:13:50.220
know, windows seems to be
coming out every year or

242
00:13:50.220 --> 00:13:53.340
two, three, depending on how
you want to look at

243
00:13:53.340 --> 00:13:56.190
it. There's service packs and
stuff. But like new get,

244
00:13:56.220 --> 00:13:58.650
you guys are releasing new
versions of new, get monthly,

245
00:14:00.270 --> 00:14:02.170
you know, there's a couple
of things to deal with.

246
00:14:03.780 --> 00:14:05.820
I say, give or take
a week, a couple of

247
00:14:05.820 --> 00:14:08.670
weeks here and there. But
yeah, that's, that's what we'd

248
00:14:08.670 --> 00:14:13.320
like to do for the,
for now. Hi, this is

249
00:14:13.320 --> 00:14:15.930
Scott coming to you from
another place in time. Are

250
00:14:15.930 --> 00:14:19.260
you using agile practices to
manage your software development? There's

251
00:14:19.260 --> 00:14:21.240
lots of tools in the
market that manage the steps

252
00:14:21.240 --> 00:14:23.460
of a project, but most
of them focus on individual

253
00:14:23.460 --> 00:14:26.310
roles. Get ready for a
solution that caters for the

254
00:14:26.310 --> 00:14:29.400
success of the whole team.
Guys at Tellerik introduced team

255
00:14:29.400 --> 00:14:32.760
pulse. It's an agile project
management tool. That'll help you

256
00:14:32.760 --> 00:14:36.420
gather ideas, estimate plan, track
progress in a common workspace.

257
00:14:37.410 --> 00:14:40.080
Finally companies, regardless of their
size can use a lightweight

258
00:14:40.080 --> 00:14:42.240
and convenient tool that makes
all the stakeholders work as

259
00:14:42.240 --> 00:14:46.170
a United team. Even if
they're in different countries by

260
00:14:46.170 --> 00:14:49.260
combining intuitive energy interface and
the power server light team

261
00:14:49.260 --> 00:14:52.520
poles removes the roadblocks that
you typically and applying agile

262
00:14:52.520 --> 00:14:55.550
in an effective manner, no
more lost data, no disparate

263
00:14:55.550 --> 00:14:59.410
systems, no lack of critical
analytics regarding the health and

264
00:14:59.410 --> 00:15:03.020
philosophy project. See if yourself
get a free copy for

265
00:15:03.020 --> 00:15:09.140
five users in one project
at tellerik.com/team pulse. And please

266
00:15:09.440 --> 00:15:12.380
do thank Tellerik for supporting
Hanselman it's on their Facebook

267
00:15:12.380 --> 00:15:18.890
fan page, facebook.com/t L E
R I K coloring. We

268
00:15:18.890 --> 00:15:20.660
do appreciate it. They wouldn't
be a handsome and it's,

269
00:15:20.670 --> 00:15:23.600
if there wasn't, Tellerik helping
us. So there's a couple

270
00:15:23.600 --> 00:15:26.900
of things to deal with.
There there's the public has

271
00:15:26.900 --> 00:15:31.880
to understand what version they're
on or people might argue

272
00:15:31.880 --> 00:15:34.010
in the, in the instance
of things like Chrome, they

273
00:15:34.010 --> 00:15:37.610
don't right. If your, if
your update system is absolutely

274
00:15:37.610 --> 00:15:41.300
effective in that everyone gets
updated, then you can bury

275
00:15:41.300 --> 00:15:44.420
the version number. Do you
hope to get things like

276
00:15:44.420 --> 00:15:47.960
new, get that are more
kind of utilities to the

277
00:15:47.960 --> 00:15:51.470
point where they'll automatically update
themselves and, and, and people

278
00:15:51.470 --> 00:15:55.000
won't even think about it.
Yeah. Yeah. So that's a

279
00:15:55.330 --> 00:15:58.030
really good example of like
new you get compared to

280
00:15:58.030 --> 00:16:01.180
NBC, right? NBC, we, I
don't think we would release

281
00:16:01.180 --> 00:16:03.670
an RTM version every month,
right. Because that would just

282
00:16:03.670 --> 00:16:07.240
drive people nuts. You know,
like what version am I

283
00:16:07.240 --> 00:16:08.770
on? Like, that's the kind
of thing that you kind

284
00:16:08.770 --> 00:16:10.990
of have to know and
people wouldn't want the production

285
00:16:10.990 --> 00:16:14.650
servers automatically updating to the
latest monthly release of NBC.

286
00:16:14.950 --> 00:16:17.440
Whereas new get is as
you kind of, as you

287
00:16:17.440 --> 00:16:21.130
succinctly put it is before
the compile, right. NBC is

288
00:16:21.130 --> 00:16:24.070
after the compile and you
get before the compile. So

289
00:16:24.070 --> 00:16:26.020
things that happen before the
compile, you have a little

290
00:16:26.020 --> 00:16:28.510
more leeway and releasing often.
And so one of the

291
00:16:28.510 --> 00:16:30.910
things we're looking at in
new Nuka is for the

292
00:16:30.910 --> 00:16:32.470
next version and you get,
we're going to put in

293
00:16:32.470 --> 00:16:36.040
our own check to make
sure that, to tell you

294
00:16:36.040 --> 00:16:37.870
whether you're on the latest
version or not. So we're

295
00:16:37.870 --> 00:16:39.550
going to make it a
little more in your face

296
00:16:39.550 --> 00:16:41.710
that you notice it, but
we're not at the point

297
00:16:41.710 --> 00:16:46.900
where we feel comfortable auto
updating you simply because people

298
00:16:46.900 --> 00:16:49.420
might have new get integrated
into their build systems. And

299
00:16:49.420 --> 00:16:52.570
they might want to kind
of like with the internet,

300
00:16:52.810 --> 00:16:54.850
they might want to lock
on a particular version for

301
00:16:54.850 --> 00:16:57.250
a period of time. But
most developers who are just,

302
00:16:57.250 --> 00:16:59.260
you know, coding on open
source projects at home or

303
00:16:59.260 --> 00:17:02.080
their own projects or, or
working in small shops may

304
00:17:02.080 --> 00:17:04.630
want to just always take
the latest version. And there's

305
00:17:04.630 --> 00:17:07.180
a lot of benefits to
taking the latest version. For

306
00:17:07.180 --> 00:17:11.230
example, sometimes we introduce new
features in, into packages themselves.

307
00:17:11.740 --> 00:17:13.840
So if you build a
package, for example, with new,

308
00:17:13.840 --> 00:17:16.390
get 1.2 and you use
one of the new features

309
00:17:16.390 --> 00:17:18.820
of new, get 1.2 in
your package, right? You can't

310
00:17:18.820 --> 00:17:22.060
install that package with 1.1.
Oh, I see. I see.

311
00:17:22.060 --> 00:17:24.580
So the package at the
time you try to install

312
00:17:24.580 --> 00:17:27.070
it, you'll say, sorry, this
has a feature that uses

313
00:17:27.220 --> 00:17:31.480
one too. You need to
upgrade. Exactly. Exactly. Yeah. And

314
00:17:31.480 --> 00:17:34.030
there's different models for upgrades.
Like there's the Xbox model

315
00:17:34.030 --> 00:17:36.460
where it basically it's forced,
right? You're all on the

316
00:17:36.460 --> 00:17:39.820
latest version. And then there's
the windows that they model

317
00:17:39.820 --> 00:17:41.860
where you get to choose,
but they try to push

318
00:17:41.860 --> 00:17:44.440
it on you. And then
there's the different types of

319
00:17:44.440 --> 00:17:47.080
like, you know, Firefox extension
modules, where we'll just nag

320
00:17:47.080 --> 00:17:50.520
you about the extension about
the update. And we're kind

321
00:17:50.520 --> 00:17:54.060
of trying to figure out
what's the best one, which

322
00:17:54.060 --> 00:17:57.930
one will users be okay
with? And right now we

323
00:17:57.930 --> 00:18:00.480
think we'll try this thing
where we make it a

324
00:18:00.480 --> 00:18:05.100
little more noticeable and hope
that people will be and

325
00:18:05.490 --> 00:18:08.160
continue to provide compelling features.
So that you'll really want

326
00:18:08.160 --> 00:18:11.810
to upgrade to the latest
version. Right? Speaking of updates,

327
00:18:12.110 --> 00:18:14.870
the, the web platform installer
came out version three, a

328
00:18:14.870 --> 00:18:17.750
little while back. And one
of the things that was

329
00:18:17.750 --> 00:18:20.690
a little bit interesting about
this last kind of this

330
00:18:20.690 --> 00:18:23.510
bundle release that we've got
here, right, is if you

331
00:18:23.510 --> 00:18:27.080
go to like to the
asp.net website and you go

332
00:18:27.080 --> 00:18:30.920
to the downloads page, we
released actually a new refreshed

333
00:18:30.920 --> 00:18:33.980
version of the asp.net website.
We'll be updating the styles

334
00:18:33.980 --> 00:18:37.520
and making it prettier in
the future. But we redesigned

335
00:18:37.520 --> 00:18:42.410
the MVC web pages and
web form learning centers on

336
00:18:42.410 --> 00:18:45.530
them are links to download
this stuff. And this is

337
00:18:45.530 --> 00:18:48.140
something that I think is
interesting about this bundle is

338
00:18:48.140 --> 00:18:51.590
that there's really no easy
way to kind of get

339
00:18:51.590 --> 00:18:53.990
it all. Or at least
there isn't an obvious one,

340
00:18:55.040 --> 00:18:57.230
maybe because we're not telling
enough people, but it turns

341
00:18:57.230 --> 00:18:59.900
out that the best way
to get all of this

342
00:18:59.900 --> 00:19:03.470
stuff is web platform installer.
I think a lot of

343
00:19:03.470 --> 00:19:05.090
people thought it was going
to be in service pack

344
00:19:05.090 --> 00:19:07.670
one, but there was going
to like, like we call

345
00:19:07.670 --> 00:19:10.610
it slipstreaming right. It was
going to you install service

346
00:19:10.610 --> 00:19:13.520
pack one of visual studio
and you get all this

347
00:19:13.520 --> 00:19:15.920
stuff. And there were a
lot of discussions back and

348
00:19:15.920 --> 00:19:18.000
forth about whether that was
a good idea. Right. Do,

349
00:19:18.000 --> 00:19:20.540
do you give them all
the new stuff in a

350
00:19:20.540 --> 00:19:23.690
service pack or do you
fix the bugs primarily? And

351
00:19:23.690 --> 00:19:25.610
then they go and they
hunt the new stuff down.

352
00:19:26.810 --> 00:19:29.060
And I don't know. I
mean, in, in windows, as

353
00:19:29.060 --> 00:19:31.370
we had gotten at three,
five S P one, we

354
00:19:31.370 --> 00:19:35.060
imposed new stuff upon them
because it came along for

355
00:19:35.060 --> 00:19:37.100
the ride, but it also
made for a very large

356
00:19:37.100 --> 00:19:40.640
surface pack. Yeah. I'm, I'm
kind of in the camp

357
00:19:40.730 --> 00:19:42.590
and this is just my
personal opinion. I don't get

358
00:19:42.590 --> 00:19:45.680
to make those decisions way
above my pay grade, but

359
00:19:45.680 --> 00:19:47.990
I'm, I'm in the camp
that service pack should focus

360
00:19:47.990 --> 00:19:50.690
mostly on bug fixes. You
know, it might have a

361
00:19:50.690 --> 00:19:54.020
little bit of new stuff,
like maybe especially like improvements

362
00:19:54.020 --> 00:19:57.260
to existing user experiences. I
really don't like cramming a

363
00:19:57.260 --> 00:20:00.200
bunch of features in because
those features then made themselves

364
00:20:00.200 --> 00:20:02.900
have bugs that would have,
would be passionate the future

365
00:20:02.900 --> 00:20:06.500
service pack. Right. And I'd
rather have the full on

366
00:20:06.500 --> 00:20:10.700
versions, have the new stuff.
And then in between ship

367
00:20:10.710 --> 00:20:13.010
stuff, out of band, Right,
right. The more stuff you

368
00:20:13.010 --> 00:20:14.900
sneak into a service pack,
the more stuff the next

369
00:20:14.900 --> 00:20:18.170
service pack has to fix,
if there's a problem, but

370
00:20:18.740 --> 00:20:20.600
on the, on the asp.net
website, if you click on

371
00:20:20.600 --> 00:20:24.140
that big button, what it'll
do is it'll launch web

372
00:20:24.140 --> 00:20:27.740
platform installer, and this is
actually a new, what they

373
00:20:27.740 --> 00:20:30.410
call a new application ID.
It's a new bundle that

374
00:20:30.410 --> 00:20:34.010
we released today. This is
custom. And what this will

375
00:20:34.010 --> 00:20:37.790
do is if you have
nothing on your machine, it

376
00:20:37.790 --> 00:20:40.850
will give you the free
version of visual studio, all

377
00:20:40.850 --> 00:20:43.280
of these tools and service
pack one all at once.

378
00:20:44.240 --> 00:20:47.620
But if you do have
visual studio one, right, this

379
00:20:47.620 --> 00:20:50.080
is a custom builder, the
pro pack. Before you had

380
00:20:50.080 --> 00:20:54.400
to pick visual studio express
or pro you had to

381
00:20:54.400 --> 00:20:56.710
tell them, and sometimes people
would end up like I

382
00:20:56.710 --> 00:20:59.950
have on my machine right
now, both visual studio express,

383
00:20:59.950 --> 00:21:03.940
the free version and visual
studio ultimate because visual studio

384
00:21:03.940 --> 00:21:08.950
express got installed. One time
when I ran a link

385
00:21:09.280 --> 00:21:11.980
from the asp.net website, I
said, Oh, I want the

386
00:21:11.980 --> 00:21:13.930
free tools. And I got
a bunch of stuff I

387
00:21:13.930 --> 00:21:17.440
didn't want. So we have
a new, a new link

388
00:21:17.440 --> 00:21:20.350
on the page that will
automatically do the right thing.

389
00:21:20.950 --> 00:21:23.530
It'll update you to service
pack one, give you all

390
00:21:23.530 --> 00:21:26.410
the latest tools. That means
I as express compact edition

391
00:21:26.410 --> 00:21:30.640
for tools for that NBC
three, a new tools, new

392
00:21:30.640 --> 00:21:35.290
get in the framework, everything.
And it won't automatically put

393
00:21:35.350 --> 00:21:39.160
visual studio expression, your machine,
unless you explicitly want it.

394
00:21:40.090 --> 00:21:43.570
Oh, that's good. That's good.
Yeah. Then they're calling it

395
00:21:43.570 --> 00:21:45.910
kind of the pro pack.
You know, I call it

396
00:21:45.910 --> 00:21:49.630
the web platform of love,
but the point is it's

397
00:21:50.370 --> 00:21:53.370
Naming our products. I like
your names better, Dude. If

398
00:21:53.370 --> 00:21:57.660
we seriously, if Microsoft named
stuff like magic unicorn and

399
00:21:57.660 --> 00:22:01.080
the entity framework, the web
stack of love, we should,

400
00:22:01.350 --> 00:22:02.910
Oh my goodness. At least
we got new. Get, that

401
00:22:02.910 --> 00:22:05.910
was something that could have
been a, it could have

402
00:22:05.910 --> 00:22:10.200
been like.net pack or something.
Lame Could have been Microsoft

403
00:22:10.350 --> 00:22:15.960
package manager for the.net framework.
Yeah. I mean, I don't

404
00:22:15.960 --> 00:22:19.260
know why they didn't go
with, you know, awesome addition

405
00:22:19.680 --> 00:22:22.560
and then said, they said,
I S express. But if

406
00:22:22.560 --> 00:22:24.120
they never listened to us,
as you said, it's so

407
00:22:24.120 --> 00:22:26.640
much higher above our pay
grade, We need to work

408
00:22:26.640 --> 00:22:30.480
harder here at, at getting
planning, these ideas in people's

409
00:22:30.480 --> 00:22:35.670
heads, you know? Yeah. Definitely
Old men trying to make

410
00:22:35.670 --> 00:22:39.090
things happen. Well, you know,
we're, we're pushing slowly and

411
00:22:39.090 --> 00:22:41.040
like, like you and I
have always talked about if

412
00:22:41.040 --> 00:22:43.860
we can't, if we fail
to get Microsoft to change,

413
00:22:43.890 --> 00:22:46.110
if we push as hard
as we can and we've

414
00:22:46.110 --> 00:22:47.790
pushed as hard and that's
it, it's not going to

415
00:22:47.790 --> 00:22:49.800
change any more than we'll
quit. We'll do something else

416
00:22:53.400 --> 00:22:57.210
to Seattle right now. I
know what you mean. I

417
00:22:57.210 --> 00:22:59.100
was thinking, like I just
said, we're old and I

418
00:22:59.100 --> 00:23:00.540
know you're going to have
colleagues are going to say,

419
00:23:00.570 --> 00:23:03.660
you're not old. I was
started programming with a slide

420
00:23:03.660 --> 00:23:06.210
rule and someone else would
call in and say, I

421
00:23:06.210 --> 00:23:10.770
was pair programming with Archimedes.
But as hard as we've

422
00:23:10.770 --> 00:23:13.320
been working lately to get
this stack of love out

423
00:23:13.320 --> 00:23:16.050
there, you know, I feel
like I've aged a year

424
00:23:16.050 --> 00:23:18.690
in the past, you know,
three months between NBC three

425
00:23:18.690 --> 00:23:22.380
RTM and this tools update.
It's interesting to watch your

426
00:23:22.380 --> 00:23:26.790
gray hair develop just as
a guy watching, you know

427
00:23:26.790 --> 00:23:28.590
what I mean, from the
outside here and watching your

428
00:23:28.590 --> 00:23:32.520
hair turn gray slowly Before
and after pictures of presidents,

429
00:23:32.520 --> 00:23:36.480
right? Yeah, yeah, yeah, exactly.
It's interesting because you, you

430
00:23:36.480 --> 00:23:38.730
so want it to succeed.
You know what I mean?

431
00:23:38.760 --> 00:23:42.750
We want this stuff to
go over well and you

432
00:23:42.750 --> 00:23:45.890
know, every decision that someone
tweets about, Oh, this sucks.

433
00:23:45.950 --> 00:23:47.900
Why don't you do that?
You know, there's a story

434
00:23:47.900 --> 00:23:51.290
behind it. There's a process
behind it. There's the good

435
00:23:51.290 --> 00:23:54.500
and the bad there's know
meetings with Scott GU and

436
00:23:54.500 --> 00:23:56.330
meetings with legal and all
this kind of stuff to

437
00:23:56.330 --> 00:23:57.950
get, you know, even to
get a button or a

438
00:23:57.950 --> 00:24:01.580
checkbox. And we keep trying
to change the processes within

439
00:24:01.580 --> 00:24:06.340
Microsoft, but it's slow, Slow.
And also there's all that

440
00:24:06.340 --> 00:24:09.370
extra time you put in,
like, there's, there's two levels,

441
00:24:09.370 --> 00:24:11.980
right? There's good enough to
ship. And then there's how

442
00:24:11.980 --> 00:24:14.650
I want it to be
where I think customers will

443
00:24:14.650 --> 00:24:17.230
be really excited about it.
So like, I could, I

444
00:24:17.230 --> 00:24:19.450
could design a feature and
then say, yeah, that's good

445
00:24:19.450 --> 00:24:22.870
enough that'll ship. But then
most of the time I'd

446
00:24:22.870 --> 00:24:24.280
like to go to the
extra effort and say, Oh,

447
00:24:24.280 --> 00:24:26.440
we need to, you know,
really think through how people

448
00:24:26.440 --> 00:24:28.660
are gonna use this. Let's
talk to the customers. Obviously

449
00:24:28.660 --> 00:24:30.940
like w w what I
love about working on new

450
00:24:30.940 --> 00:24:33.490
get is because it's truly
an open source project. We

451
00:24:33.490 --> 00:24:38.290
accept external contributions. We have
all of our discussions on

452
00:24:38.530 --> 00:24:42.640
Plex. I can really, you
know, get feedback really early

453
00:24:42.640 --> 00:24:44.940
from people who are out
there in the trenches doing,

454
00:24:44.980 --> 00:24:47.410
using it and using it
in ways I had never

455
00:24:47.410 --> 00:24:51.190
anticipated because as many different
ways as there are to

456
00:24:51.220 --> 00:24:54.520
write software, there's just as
many different ways to build

457
00:24:54.520 --> 00:24:57.190
it. And by build, I
mean, like build systems and,

458
00:24:57.360 --> 00:24:59.500
and what you're trying to
automate and what you're trying

459
00:24:59.500 --> 00:25:01.840
to do that, you know,
I always thought, Oh, I

460
00:25:01.840 --> 00:25:04.210
have a lot of experience
building software. I know how

461
00:25:04.480 --> 00:25:06.400
most people build it, but
as I'm going through these

462
00:25:06.400 --> 00:25:09.460
discussions with people, they're coming
up with diff, they have

463
00:25:09.790 --> 00:25:13.030
such different range of scenarios
and things that they're trying

464
00:25:13.030 --> 00:25:15.970
to do that I had
never even anticipated. So it's

465
00:25:15.970 --> 00:25:19.180
been a really great learning
process. And I hope, you

466
00:25:19.180 --> 00:25:21.520
know, two things, one that
the community feels like they're

467
00:25:21.520 --> 00:25:24.370
really involved. And if they're
not, it's so easy, just

468
00:25:24.370 --> 00:25:27.070
get into our discussion, start
telling us, you know, what

469
00:25:27.100 --> 00:25:29.200
you think we should do.
And two, I hope that

470
00:25:30.010 --> 00:25:34.460
we're agile enough and iterating
enough that we're solving the,

471
00:25:34.460 --> 00:25:37.570
the vast majority of those
pain points and, and creating

472
00:25:37.570 --> 00:25:42.580
really great experiences for our
customers. That's kind of what

473
00:25:42.580 --> 00:25:46.060
makes me motivated in the
morning to get back to

474
00:25:46.060 --> 00:25:50.410
work. You know, How, how
much, when you're building the

475
00:25:50.420 --> 00:25:53.260
stack of love, how much
do you think about any

476
00:25:53.260 --> 00:25:55.030
more now? That's cause you,
cause you didn't, you did

477
00:25:55.030 --> 00:26:00.400
move from LA up to
Seattle about becoming a Microsoft,

478
00:26:00.430 --> 00:26:02.110
you know, the Borg, how
much do you worry about

479
00:26:02.110 --> 00:26:06.000
that? Do you ever catch
yourself thinking, thinking too, too

480
00:26:06.010 --> 00:26:09.550
much like a classic kind
of stereotypical Microsoft person. And

481
00:26:09.550 --> 00:26:11.830
do you, do you count
on, you know, your friends

482
00:26:11.920 --> 00:26:15.400
like me or whoever to
tell you, Hey, failure, you're

483
00:26:15.400 --> 00:26:17.770
assimilated. You just said that
you were super excited about

484
00:26:17.770 --> 00:26:21.370
something, or do you not
think about that? That's a

485
00:26:21.370 --> 00:26:24.730
really Interesting question. I'll have
to process that and make

486
00:26:24.730 --> 00:26:29.170
an ask of my manager
to see if No, but

487
00:26:29.170 --> 00:26:31.450
you know, it's an honest
question though, because sometimes I

488
00:26:31.450 --> 00:26:33.520
feel like when a Microsoft
person says, you know, I'm

489
00:26:33.520 --> 00:26:37.480
really excited to provide customer
value. They mean it sincerely,

490
00:26:38.020 --> 00:26:41.020
but it comes off as
Microsoft. It comes off slimy.

491
00:26:43.260 --> 00:26:46.230
I'm not saying I worry
about it to some degree,

492
00:26:46.230 --> 00:26:48.450
but I mean, I feel
like I, I, I try

493
00:26:48.450 --> 00:26:50.670
hard to keep to my
roots. I mean, I feel

494
00:26:50.670 --> 00:26:53.430
like I'm still a customer
because I'm still working on

495
00:26:53.430 --> 00:26:56.820
these projects that are my
own. The only problem is

496
00:26:56.820 --> 00:26:58.620
I'm so busy at work.
I don't get to work

497
00:26:58.620 --> 00:27:01.380
on them all that often
like Subutex, but I still

498
00:27:01.380 --> 00:27:03.000
work on it. And when
I work on that, I

499
00:27:03.000 --> 00:27:05.430
feel I put my I'm
back in the customer hat.

500
00:27:05.650 --> 00:27:08.400
I'm looking at things that
are, Hey, this is painful.

501
00:27:08.460 --> 00:27:12.150
You know, this, and, and
in many respects, like my

502
00:27:12.150 --> 00:27:16.320
motivation isn't, you know, like
while I do want to

503
00:27:16.320 --> 00:27:19.170
increase customer value, blah, blah,
blah, the marketing side. But

504
00:27:19.170 --> 00:27:21.480
there's also that side where
I feel like all these

505
00:27:21.480 --> 00:27:24.420
guys are my, all these
people are my peers, right?

506
00:27:24.450 --> 00:27:27.030
These customers, you know, we
call them, but they're my

507
00:27:27.030 --> 00:27:29.370
peers and I'm on Twitter
with them. And I'm in,

508
00:27:29.400 --> 00:27:31.740
you know, on the block
in the blogosphere, if you

509
00:27:31.740 --> 00:27:34.980
want to still call it
that with them. And I

510
00:27:34.980 --> 00:27:39.360
noticed when they're, when they're
giving me flack, right. I

511
00:27:39.360 --> 00:27:43.380
noticed when they're complaining about
our technologies. And so in

512
00:27:43.380 --> 00:27:47.070
many ways, that's part of
the motivation is like getting

513
00:27:47.070 --> 00:27:51.090
the respect from your peers
that, yeah, you're doing a

514
00:27:51.090 --> 00:27:53.550
good job there. You're, you're
building pretty cool products. You

515
00:27:53.550 --> 00:27:55.200
know, I may disagree with
some of the things you're

516
00:27:55.200 --> 00:27:58.800
doing, but I think you
guys are building great products.

517
00:27:58.800 --> 00:28:00.420
And when I, when I
hear that kind of feedback,

518
00:28:00.420 --> 00:28:06.290
that that's really, it makes
me feel good. How is,

519
00:28:06.410 --> 00:28:09.140
how has feedback? This is
kind of a little egotistical

520
00:28:09.140 --> 00:28:10.880
question, just cause I always
wondered, and I never had

521
00:28:10.880 --> 00:28:12.860
the opportunity to ask you,
but what do you think

522
00:28:12.860 --> 00:28:15.260
about the feedback that I
give you when I go

523
00:28:15.260 --> 00:28:16.520
out? I mean, I'm always
in the community and I'm

524
00:28:16.520 --> 00:28:18.590
talking to people and I'm
doing Skype calls all day

525
00:28:18.590 --> 00:28:20.270
and I'm doing screen sharing
all day and I'm trying

526
00:28:20.270 --> 00:28:22.130
to figure out, you know,
I talked to a half

527
00:28:22.130 --> 00:28:24.470
dozen open source projects a
week and I come back

528
00:28:24.470 --> 00:28:27.440
and I say, Phil, and
I'm usually, I'm usually, you

529
00:28:27.440 --> 00:28:29.390
know, excited about it. So
I'm like, this is a

530
00:28:29.390 --> 00:28:32.630
nightmare. Hey, you have to
click twice. Instead of once,

531
00:28:32.630 --> 00:28:34.640
you know, what the hell
are you guys doing over

532
00:28:34.640 --> 00:28:38.630
there? What is feedback from
me or from the field

533
00:28:38.630 --> 00:28:41.030
or from people who were
community, people who are trying

534
00:28:41.030 --> 00:28:43.940
to make it better. How
often do you get frustrated

535
00:28:43.940 --> 00:28:47.150
with me? Where I have
unreasonable expectations? Like, you know

536
00:28:47.150 --> 00:28:48.470
what I'm saying? I think
you know where I'm coming

537
00:28:48.470 --> 00:28:51.410
with them. Yeah. Yeah. Usually
when we get an email

538
00:28:51.410 --> 00:28:53.510
from you, we roll our
eyes and we forward amongst

539
00:28:53.510 --> 00:28:56.720
ourselves and Kevin, a little
snicker. Oh no. Another Hanselman

540
00:28:56.730 --> 00:29:01.400
firestorm. No, I'm, I'm kidding.
Well, we find it really

541
00:29:01.670 --> 00:29:06.080
what, you're only kidding a
little bit. Well, so sometimes

542
00:29:06.080 --> 00:29:10.550
the level of drama, you
know, might be my, my

543
00:29:10.580 --> 00:29:14.120
catch us off guard, but
we definitely, once we cut

544
00:29:14.120 --> 00:29:16.970
through the initial, like, Oh
my God, it's a disaster

545
00:29:16.970 --> 00:29:19.520
and we're all going to
die. And we look at

546
00:29:19.520 --> 00:29:23.030
what the core issue you're
bringing up. I mean, most

547
00:29:23.030 --> 00:29:24.770
of the time we go
and we address it, right.

548
00:29:24.770 --> 00:29:26.540
Or we try to address
it, or we at least

549
00:29:26.540 --> 00:29:28.940
come up with the reason
why we can't yet. And

550
00:29:28.940 --> 00:29:31.370
it's, it's challenging because most
of the times I, you

551
00:29:31.370 --> 00:29:33.650
know, I think you're right.
Or we think, yeah, that

552
00:29:33.650 --> 00:29:36.650
is an issue. And then
there's all these weird circumstances

553
00:29:36.650 --> 00:29:39.470
that prevent us from maybe
fixing it right away or

554
00:29:39.680 --> 00:29:43.150
fixing it ever that you
don't see from the outside.

555
00:29:43.240 --> 00:29:45.370
And, and they're not, they're
things that are out of

556
00:29:45.370 --> 00:29:47.650
our control. And it's not
so much that I want

557
00:29:47.650 --> 00:29:50.800
to make excuses. Right. Like
if I could fix them,

558
00:29:50.830 --> 00:29:53.410
even if it costs a
lot of my time, I'd

559
00:29:53.410 --> 00:29:56.350
go do it. But you
know, let's say it impinges

560
00:29:56.350 --> 00:29:58.240
on some other teams and
then I'd have to deal

561
00:29:58.240 --> 00:30:01.360
with their VP and then,
or, you know, like crazy

562
00:30:01.360 --> 00:30:04.350
things can happen. An example
of something. I, I, I

563
00:30:04.350 --> 00:30:06.480
can't remember exactly what it
was, but it was, it

564
00:30:06.480 --> 00:30:10.920
was literally a subtle interaction
between the ASP net tooling,

565
00:30:11.160 --> 00:30:14.730
T4, PowerShell, comm visuals, duty
out that. And it was

566
00:30:14.730 --> 00:30:17.130
like, it was a subtle
interaction about how all those

567
00:30:17.130 --> 00:30:22.590
things behaved. And it literally
was like, how PowerShell talk

568
00:30:22.590 --> 00:30:25.230
to calm, talk to visual
studio and something would block

569
00:30:25.230 --> 00:30:27.330
for a middle. And I
was just like, this is

570
00:30:27.330 --> 00:30:30.420
an awful experience. And you're
like, Hey man, that's a

571
00:30:30.420 --> 00:30:34.740
bug. That's like, so deep
inside of more door that,

572
00:30:35.040 --> 00:30:36.960
you know, when it gets
done, it gets done. You

573
00:30:36.960 --> 00:30:41.220
know what I mean? And
that's like, that's actually a

574
00:30:41.220 --> 00:30:45.060
great example because sometimes there's
a bug that's in windows

575
00:30:45.060 --> 00:30:48.030
or sometimes it's a bug
in the.net framework. And unfortunately

576
00:30:48.030 --> 00:30:50.610
on the outside, not everyone
understands these what we call

577
00:30:50.700 --> 00:30:54.840
ship trains right there. There's
my Microsoft. Right. We have

578
00:30:54.840 --> 00:30:57.240
these ship trains and some
of them go out every

579
00:30:57.240 --> 00:30:59.250
two years. Some of them
go out every three years.

580
00:30:59.250 --> 00:31:02.460
Some of them go out
every a year. And the

581
00:31:02.460 --> 00:31:05.340
problem is like, people don't
understand why I can't fix

582
00:31:05.340 --> 00:31:07.030
a bug and robbing. Cause
they think, Oh, Radix is

583
00:31:07.030 --> 00:31:09.000
part of the NBC. And
you ship that every year.

584
00:31:09.180 --> 00:31:10.940
Why didn't you fix this
bug? And routing? It was

585
00:31:10.940 --> 00:31:14.610
like, well, routing is actually
part of core asp.net, which

586
00:31:14.610 --> 00:31:16.980
is part of the.net framework.
And that ship when it

587
00:31:16.980 --> 00:31:20.790
shifts and no amount of
me cajoling, anyone will change

588
00:31:20.790 --> 00:31:23.400
that. Right. Like I could,
you know, like I just,

589
00:31:23.640 --> 00:31:26.700
there's nothing I can do.
And that, that's what I

590
00:31:26.700 --> 00:31:29.910
get when I get all
angsty and kind of dramatic,

591
00:31:29.910 --> 00:31:33.510
like, you know what I
mean? But, but, but at

592
00:31:33.510 --> 00:31:35.640
the same time it happens
everywhere. I mean, like I

593
00:31:35.640 --> 00:31:37.140
was T I was talking
to me, I was talking

594
00:31:37.140 --> 00:31:39.840
to Miguel a couple of
months ago about sound drivers.

595
00:31:39.840 --> 00:31:41.160
And I was like, I
finally had a new Boone

596
00:31:41.160 --> 00:31:44.910
to machine that worked completely
perfect. And then they completely

597
00:31:44.910 --> 00:31:48.150
deprecated the sound system. Right.
So the way that they

598
00:31:48.150 --> 00:31:50.610
did sound in a wound
to changed, and then suddenly

599
00:31:50.610 --> 00:31:52.770
my sound card driver wasn't
supported and I haven't had

600
00:31:52.770 --> 00:31:56.580
sound ever since. And it's
like, yeah, it's a little

601
00:31:56.580 --> 00:31:58.350
comforting. I'm not in any
way. Try to have some

602
00:31:58.350 --> 00:32:00.900
shed in Florida against a
boon too. I'm just saying

603
00:32:00.900 --> 00:32:04.680
that everybody's shipped software in
a set a certain certain

604
00:32:04.680 --> 00:32:08.880
way and things break and
you know, maybe, Hey, my

605
00:32:08.880 --> 00:32:11.820
applique, your application sucks. Your
application doesn't have sound well,

606
00:32:11.820 --> 00:32:15.810
actually the core system changed
six months ago. You know

607
00:32:15.810 --> 00:32:17.310
what I mean? But it
does. It does sound like

608
00:32:17.310 --> 00:32:22.380
an equivocation sometimes. Yes, software's
hard and we're constantly trying

609
00:32:22.380 --> 00:32:26.220
to make it better. Right.
And so some of the

610
00:32:26.220 --> 00:32:30.450
things that of having these
monolithic framework releases, imposes its

611
00:32:30.450 --> 00:32:33.120
own problems. And so, you
know, maybe some of the

612
00:32:33.120 --> 00:32:35.460
things that's kind of why
we're going more towards the

613
00:32:35.460 --> 00:32:38.010
out of band model, it
solves some of the problems,

614
00:32:38.040 --> 00:32:41.870
but it can't solve all
Well. That's cool. Well, thanks

615
00:32:41.870 --> 00:32:43.850
so much for, for hanging
out with me today, Phil

616
00:32:43.850 --> 00:32:46.910
and folks can go up
to asp.net. They can click

617
00:32:46.910 --> 00:32:49.940
on downloads. They can get
ASP net MVC three with

618
00:32:49.940 --> 00:32:53.510
the new tooling, NVC scaffolding
is going to be kind

619
00:32:53.510 --> 00:32:55.070
of baked in there. They
can get the new stuff

620
00:32:55.070 --> 00:32:57.410
from Steve Sandestin on new,
get you're going to get

621
00:32:57.410 --> 00:33:00.710
new. Get I asked express
equal compact edition for entity

622
00:33:00.710 --> 00:33:05.690
framework 4.1 code first magic
unicorn edition. You can even

623
00:33:05.690 --> 00:33:08.180
get, you know, jQuery updates
and stuff using new get

624
00:33:08.180 --> 00:33:10.730
now because of some of
the features, we didn't actually

625
00:33:10.730 --> 00:33:13.700
get a chance to talk
about an MVC where when

626
00:33:13.700 --> 00:33:16.790
you go file new project,
there's, pre-installed new get packages.

627
00:33:16.790 --> 00:33:19.670
So updating your scripts as
you can. That's really cool.

628
00:33:21.980 --> 00:33:24.320
It real quick, go ahead
and end on that end.

629
00:33:24.320 --> 00:33:28.900
Why that's such an interesting
thing. Okay. So basically it's

630
00:33:28.900 --> 00:33:32.230
this in MEC summary, we
included jQuery and you know,

631
00:33:32.230 --> 00:33:35.320
where I got this push
to include third party, open

632
00:33:35.320 --> 00:33:38.170
source, JavaScript libraries and, and
work with community on that.

633
00:33:38.470 --> 00:33:40.690
But the problem is by
the time we ship J

634
00:33:40.690 --> 00:33:43.840
queers on a monthly schedule,
by the time NBC ships,

635
00:33:44.470 --> 00:33:46.840
the jQuery library is in
the scripts folder already out

636
00:33:46.840 --> 00:33:49.540
of date. So what we
realize is it would be

637
00:33:49.540 --> 00:33:52.180
really cool if instead of
just copying those things into

638
00:33:52.180 --> 00:33:55.090
the project templates, we have
them as you get packages

639
00:33:55.270 --> 00:33:57.940
and we install them. So
when you create a new

640
00:33:57.940 --> 00:34:02.140
MVC three tools update project,
you'll get those, you'll get

641
00:34:02.350 --> 00:34:04.720
an outdated version of jQuery
in there, but it will

642
00:34:04.720 --> 00:34:06.490
be installed as a new
get package. So if you

643
00:34:06.490 --> 00:34:08.710
launch new, get, and then
you go to the click

644
00:34:08.710 --> 00:34:11.080
on the updates tab, it
will be as easy as

645
00:34:11.080 --> 00:34:13.690
clicking update to go ahead
and update those libraries to

646
00:34:13.690 --> 00:34:16.450
the latest version and down
the road. When all of

647
00:34:16.450 --> 00:34:18.640
them are out of date,
you can, you can easily

648
00:34:18.640 --> 00:34:20.920
update them. And what it
saves you from doing is

649
00:34:20.920 --> 00:34:23.020
having to go look at
the list of script files

650
00:34:23.020 --> 00:34:25.420
and look at the list
of assemblies. We included in

651
00:34:25.420 --> 00:34:28.750
the project template and go
searching, souring the web for

652
00:34:28.750 --> 00:34:31.150
all the new versions and
figuring out have they been

653
00:34:31.150 --> 00:34:33.640
updated? Oh, they're updated. How
do I get them? You

654
00:34:33.640 --> 00:34:35.260
know, where do I download
it? Where to copy it.

655
00:34:35.590 --> 00:34:37.420
You just go in and
click update and it'll update

656
00:34:37.420 --> 00:34:40.750
it for you. So that's
really cool and pretty excited

657
00:34:40.750 --> 00:34:44.890
about that. Very cool. All
right. Well, we're going to

658
00:34:44.890 --> 00:34:47.380
check out all the blogs.
I'm sure Scott guru's keynote

659
00:34:47.380 --> 00:34:49.840
stuff is online by now
and you can go up

660
00:34:49.840 --> 00:34:53.440
and watch it all again.
This has been another episode

661
00:34:53.440 --> 00:34:55.630
of Hansel minutes. We'll see
you again next week.

