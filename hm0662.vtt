WEBVTT FILE

1
00:00:00.090 --> 00:00:04.350
Today's show is sponsored by
Datadog a modern full-stack monitoring

2
00:00:04.350 --> 00:00:09.210
platform for cloud infrastructure, applications
and logs. Datadog provides end

3
00:00:09.210 --> 00:00:11.940
to end visibility into the
health and performance of modern

4
00:00:11.940 --> 00:00:15.990
applications in the cloud on
premises in containers or wherever

5
00:00:15.990 --> 00:00:20.370
they run. Visualize key metrics,
set alerts to identify anomalies

6
00:00:20.400 --> 00:00:23.370
and collaborate with your team
to troubleshoot and fix issues

7
00:00:23.370 --> 00:00:27.180
fast. Try it yourself by
starting a free 14 day

8
00:00:27.210 --> 00:00:33.540
trial today at bitly.com/data dog
shirt, listeners of this podcast

9
00:00:33.540 --> 00:00:37.530
will receive that free Datadog
shirt. That's Bitly bit L

10
00:00:37.530 --> 00:00:56.460
y.com/data dog shirt. <inaudible>. Hi,
this is Scott Hanselman, this

11
00:00:57.330 --> 00:01:00.000
Hansel minutes. And today I'm
talking with Tanja Jones. She

12
00:01:00.000 --> 00:01:03.150
is the senior developer advocate
at Apple tools. How are

13
00:01:03.150 --> 00:01:06.500
you? I'm great, Scott, how
are you? Good. I just

14
00:01:06.500 --> 00:01:09.260
realized that I talked to
you two years ago. It's

15
00:01:09.260 --> 00:01:12.530
been just about two years
since our show number five

16
00:01:12.530 --> 00:01:17.090
59, where we talked about
including automation in your definition

17
00:01:17.090 --> 00:01:21.260
of done and things have
changed. Yes. Wow. Two years

18
00:01:21.260 --> 00:01:24.710
ago, things were a lot
different for me. I, that

19
00:01:24.710 --> 00:01:30.200
was probably like my first
talk and public appearance around

20
00:01:30.200 --> 00:01:35.180
that time. So since then
my career has changed drastically.

21
00:01:35.180 --> 00:01:39.470
I'm speaking all over the
globe. Now I've changed jobs

22
00:01:39.500 --> 00:01:42.680
a couple of times the
tech has changed as well.

23
00:01:42.680 --> 00:01:45.800
So thanks for having me
back. Yeah, absolutely. Yeah. I've

24
00:01:45.800 --> 00:01:48.350
seen you at Oz con
and you know, I thought

25
00:01:48.440 --> 00:01:51.590
I traveled a lot, but
you seem to be somewhere

26
00:01:51.620 --> 00:01:54.590
every month. How did you
find that balance? Like you

27
00:01:54.590 --> 00:01:57.740
were working at Twitter for
a while doing, doing automated

28
00:01:57.740 --> 00:02:01.040
testing, but also it seemed
like you were somewhere every

29
00:02:01.040 --> 00:02:03.590
couple of weeks, it must
have been difficult to balance

30
00:02:03.980 --> 00:02:07.610
the doing and the talking
about doing it. Yes, that's

31
00:02:07.610 --> 00:02:11.300
exactly correct. So I would
find myself like off in

32
00:02:11.300 --> 00:02:15.440
Europe, somewhere speaking, and I
might do like an eight

33
00:02:15.440 --> 00:02:20.210
hour workshop on test automation
somewhere, and then I would

34
00:02:20.810 --> 00:02:24.740
be gone so frequently sometimes
even like three weeks within

35
00:02:24.740 --> 00:02:28.460
a month. So of course
I needed to do the

36
00:02:28.460 --> 00:02:31.340
job that Twitter was paying
before as well. So that

37
00:02:31.340 --> 00:02:34.460
required me to go back
to my hotel room after

38
00:02:34.460 --> 00:02:37.070
that eight hour workshop and
then put in eight hours

39
00:02:37.070 --> 00:02:39.980
doing my Twitter work as
well. So it was becoming

40
00:02:39.980 --> 00:02:44.630
really draining and really difficult
to balance. Sometimes people think

41
00:02:44.630 --> 00:02:47.540
that my job is like
evangelist, which is a word

42
00:02:47.540 --> 00:02:50.570
I don't like or developer
advocate. I really I'm a

43
00:02:50.570 --> 00:02:55.790
community manager@microsoftandiworkonvisualstudioon.net, but it's not
really my job to go

44
00:02:55.790 --> 00:02:59.000
out and give talks. And
I've never really kind of

45
00:02:59.020 --> 00:03:02.500
had that job because I'm
always nervous about the balance

46
00:03:02.500 --> 00:03:05.590
between the doing and the
talking about doing, but at

47
00:03:05.590 --> 00:03:09.100
the same time, people always
ask what makes the personality

48
00:03:09.100 --> 00:03:12.130
type of an advocate or
an evangelist. And I've always

49
00:03:12.130 --> 00:03:15.310
said that it's just, you're
overflowing with enthusiasm over your

50
00:03:15.310 --> 00:03:17.680
topic that you just have
to give talks. Is that,

51
00:03:17.740 --> 00:03:20.910
is that how you work
as well? That's true. And

52
00:03:20.910 --> 00:03:27.030
I'm really into helping the
greater community. So I find

53
00:03:27.030 --> 00:03:30.960
myself not just working within
whatever company I'm working for,

54
00:03:30.990 --> 00:03:35.580
but also working with test
automation, engineers everywhere, and just

55
00:03:35.580 --> 00:03:39.600
trying to help level this
field. It's a space where

56
00:03:39.600 --> 00:03:43.170
there's a really great demand
for test automation, engineers, but

57
00:03:43.170 --> 00:03:47.730
not a lot of people
to feel the roles and

58
00:03:47.730 --> 00:03:51.450
feel that demand. So that's
where I try to contribute,

59
00:03:51.480 --> 00:03:55.140
not just leveling up myself,
but helping to level up

60
00:03:55.380 --> 00:03:59.580
automation, engineers everywhere. I really
liked that, that, that, that

61
00:03:59.580 --> 00:04:03.780
term level up, I definitely
like dig that we went

62
00:04:03.780 --> 00:04:07.380
and did Thanksgiving a couple
of days ago and my

63
00:04:07.380 --> 00:04:10.260
parents were complaining about their
network or whatever. And I

64
00:04:10.260 --> 00:04:12.180
was like, Oh, have you
heard about mesh networks? And

65
00:04:12.180 --> 00:04:14.580
then it was just like
butter. And like, everyone's like,

66
00:04:14.580 --> 00:04:18.420
wow, you're really excited about
this router. And I'm like,

67
00:04:18.420 --> 00:04:20.850
yeah, but you don't understand,
you know, I, I think

68
00:04:20.850 --> 00:04:23.610
that people who are into
something, whether it be something

69
00:04:23.610 --> 00:04:25.680
as simple, Oh, if you
got a backup strategy for

70
00:04:25.680 --> 00:04:29.010
your, for your photos, like
you get excited, like how

71
00:04:29.460 --> 00:04:31.320
it's almost like those people
that are like, have you

72
00:04:31.320 --> 00:04:34.680
heard the news? You know,
and you're out there saying,

73
00:04:34.680 --> 00:04:36.750
have you heard the news
about automated visual UI testing?

74
00:04:38.370 --> 00:04:40.710
And everyone else is like,
okay, that's kind of weird

75
00:04:40.710 --> 00:04:45.000
Angie, Right? Like how are
you all doing automation over

76
00:04:45.000 --> 00:04:47.310
there? What strategies are you
using? What tools are you

77
00:04:47.310 --> 00:04:52.050
using? Exactly. So now you're
at Applitools and you all

78
00:04:52.050 --> 00:04:56.040
are launching like a university
for test automation. We are

79
00:04:56.040 --> 00:04:59.490
a test automation. You, Okay,
so this is test automation,

80
00:04:59.490 --> 00:05:03.390
you.com. And then at the
time of this podcast, it's

81
00:05:03.390 --> 00:05:06.030
just getting started, but you're
launching quite a few lessons

82
00:05:06.570 --> 00:05:12.030
to start with. We are,
so we have 11 courses

83
00:05:12.060 --> 00:05:15.600
that will be available at
the start of the new

84
00:05:15.600 --> 00:05:19.860
year, new year's resolution and
all that jazz. And we

85
00:05:19.860 --> 00:05:24.360
have stuff around foundational test
automation. We have stuff around

86
00:05:24.600 --> 00:05:28.200
test automation for real world
problems and looking at how

87
00:05:28.200 --> 00:05:31.410
other companies are doing test
automation. Everyone always wants to

88
00:05:31.410 --> 00:05:34.140
know how other companies are
doing things, you know, and

89
00:05:34.140 --> 00:05:37.290
then we'll of course have
some things around visual testing

90
00:05:37.290 --> 00:05:42.510
as well. Okay. So visual
testing, I have, I'm thinking

91
00:05:42.510 --> 00:05:44.880
about this podcast and I
have a website that it

92
00:05:44.880 --> 00:05:48.840
has a bunch of tests.
I've got unit tests that

93
00:05:48.840 --> 00:05:51.240
are like, they're headless cause
they're invisible. Right. They just

94
00:05:51.300 --> 00:05:53.400
check to see if a
function works. I've got some

95
00:05:53.400 --> 00:05:55.740
integration tests where I kind
of add the database in

96
00:05:56.400 --> 00:06:00.350
after you and talked, I
got more into selenium and

97
00:06:00.350 --> 00:06:02.750
I built a sleigh in
front of the front end,

98
00:06:03.710 --> 00:06:05.570
Scott. I was so proud
of you. Yeah. Thank you.

99
00:06:05.570 --> 00:06:07.280
I feel pretty good about
that now. I'm not quite

100
00:06:07.280 --> 00:06:09.230
to the point where I
have it headless. Cause when

101
00:06:09.230 --> 00:06:11.570
I, when I do my
unit test, I can see

102
00:06:11.780 --> 00:06:15.710
Chrome launch with like a
little warning that says Chrome

103
00:06:15.710 --> 00:06:19.010
is being like, has puppet
strings on it. So I

104
00:06:19.010 --> 00:06:21.560
need to get into the
headless browser testing, but visual

105
00:06:21.560 --> 00:06:23.750
testing, is that just making
sure that this button is

106
00:06:23.750 --> 00:06:26.890
the right color A little
bit more glamorous than that,

107
00:06:26.890 --> 00:06:31.180
but yeah, it's relatively new
concept where in addition to

108
00:06:31.180 --> 00:06:38.350
your UI functional automation, you
also add this visual verification

109
00:06:38.350 --> 00:06:42.100
component to this. And what
I love about visual validation

110
00:06:42.100 --> 00:06:44.980
is that you added on
top of whatever you already

111
00:06:44.980 --> 00:06:48.660
have. So if you're working
with selenium or Cypress or

112
00:06:48.670 --> 00:06:52.960
whatever, protractor, you just add
this with it and then

113
00:06:52.960 --> 00:06:57.490
you have additional coverage. So
my example of this is

114
00:06:57.520 --> 00:07:00.790
I was going to Raleigh.
I used to live in

115
00:07:00.790 --> 00:07:03.160
Raleigh probably last time we
talked, I was in Raleigh,

116
00:07:03.160 --> 00:07:07.240
North Carolina. And so I was
headed back there not too

117
00:07:07.240 --> 00:07:10.750
long ago, maybe a month
ago for all things open.

118
00:07:11.140 --> 00:07:12.880
And I wanted to meet
up with a bunch of

119
00:07:12.880 --> 00:07:15.850
my friends. So I was
going to schedule a dinner

120
00:07:15.850 --> 00:07:20.680
reservation at this barbecue joint
that I love. So I

121
00:07:20.680 --> 00:07:26.590
went on open table to
schedule the reservation and on

122
00:07:26.590 --> 00:07:30.880
open table there, I selected
the date and then it

123
00:07:30.880 --> 00:07:32.710
asks me like the time
there were a bunch of

124
00:07:32.710 --> 00:07:35.350
selections for the time that
I wanted. So when I

125
00:07:35.350 --> 00:07:40.030
chose the time that I
wanted, there was like a

126
00:07:40.030 --> 00:07:43.480
modal that kind of popped
up, but it was, it

127
00:07:43.480 --> 00:07:48.940
was all misconfigured. So there
were like two ugly unaligned

128
00:07:48.940 --> 00:07:52.180
buttons in the upper right
corner. There was no texts

129
00:07:52.210 --> 00:07:55.450
that was visible to me.
And so I didn't know

130
00:07:55.450 --> 00:08:00.220
like what these buttons were
for now because I do

131
00:08:00.220 --> 00:08:03.490
work in tech. I was
able to like inspect this

132
00:08:03.490 --> 00:08:07.210
and go into dev tools
in Chrome and kind of

133
00:08:07.210 --> 00:08:09.880
figure out what they were
doing and find the text,

134
00:08:09.880 --> 00:08:12.550
which was actually all the
way in the upper left

135
00:08:12.700 --> 00:08:16.150
and figure out what was
going on. But I was

136
00:08:16.150 --> 00:08:20.020
thinking about this from a
test automation perspective, maybe like

137
00:08:20.200 --> 00:08:23.770
a year ago, I could
have written an automated test

138
00:08:23.770 --> 00:08:27.400
for this and it would
pass I'm sure open table

139
00:08:27.430 --> 00:08:30.910
probably has automated tests for
this that are running in

140
00:08:30.910 --> 00:08:34.990
CGI and they're passing every
day because technically the functionality

141
00:08:34.990 --> 00:08:37.810
is there. Those buttons are
there, the text is there,

142
00:08:38.080 --> 00:08:41.110
but visually it was horrible.
It was, it was actually

143
00:08:41.170 --> 00:08:45.280
unusable from a customer's perspective.
And so these are the

144
00:08:45.280 --> 00:08:51.130
types of bugs that visual
validation catches. Okay. So if

145
00:08:51.130 --> 00:08:53.740
I went and wrote some
selenium tests that said, you

146
00:08:53.740 --> 00:08:56.220
know, grab the button with
this, text, the button with

147
00:08:56.220 --> 00:08:59.130
this class, even if the
button was white text on

148
00:08:59.130 --> 00:09:01.860
a white background and totally
invisible, the test would have

149
00:09:01.860 --> 00:09:05.540
passed because it grabbed that
thing. Exactly, exactly. So it

150
00:09:05.540 --> 00:09:10.220
exists in the Dom and
it's clickable. And so with

151
00:09:10.220 --> 00:09:13.670
selenium and a whatever assertion
tool you're using that looks

152
00:09:13.670 --> 00:09:17.990
great. Yep. Works great. Like
a charm pass, but in

153
00:09:17.990 --> 00:09:22.100
real life, this is unusable.
Okay. But if I I've

154
00:09:22.100 --> 00:09:25.760
seen, like, for example, if
you are on GitHub and

155
00:09:25.760 --> 00:09:29.300
you check in like a
PNG and change it, they

156
00:09:29.300 --> 00:09:32.600
have like a visual diff
tool for PNGs and it'll

157
00:09:32.600 --> 00:09:34.580
show you that like a
pixel changed or whatever. And

158
00:09:34.580 --> 00:09:36.590
it's kind of a nice,
and I sort of diff

159
00:09:36.850 --> 00:09:39.140
the way that we diff
texts. Right. But if I

160
00:09:39.140 --> 00:09:43.310
went and built like a
visual diff thing to like,

161
00:09:43.310 --> 00:09:45.740
say here's the baseline and
here's how it actually ended

162
00:09:45.740 --> 00:09:49.670
up looking one or two
pixels off, or even like

163
00:09:49.670 --> 00:09:52.940
some weird, weird compression artifacts
might, might give me false

164
00:09:52.940 --> 00:10:00.260
positives. Right. Right. So in
Apple tools, they allow for

165
00:10:00.650 --> 00:10:04.700
this smart comparison. So they're
actually using AI to be

166
00:10:04.700 --> 00:10:08.120
able to get around a
lot of those types of

167
00:10:08.120 --> 00:10:11.120
things and be able to
only catch things that our

168
00:10:11.120 --> 00:10:16.430
human eye cares about. So
even launching the same website

169
00:10:16.430 --> 00:10:20.180
on different operating systems or
different browsers on the same

170
00:10:20.180 --> 00:10:23.030
OSTP can look a little
bit different. Like the fonts

171
00:10:23.030 --> 00:10:26.450
can be rendered slightly different,
maybe a little larger, or

172
00:10:26.450 --> 00:10:29.780
like said just a pixel
difference that you don't even

173
00:10:29.780 --> 00:10:33.650
care about. And so with
Applitools, all of that stuff

174
00:10:33.680 --> 00:10:36.800
is ignored and it's only
going to flag the things

175
00:10:36.800 --> 00:10:39.830
that we care about as
humans. I see. So it's

176
00:10:39.830 --> 00:10:45.650
the AI equivalent of it.
Close enough. Yeah. Yeah. Okay.

177
00:10:45.650 --> 00:10:48.410
That makes sense. So yeah,
the, the, the, the example

178
00:10:48.410 --> 00:10:50.180
that you just gave, if
I launch it on a,

179
00:10:50.490 --> 00:10:52.610
on a Mac or I
launch it on a, on

180
00:10:52.610 --> 00:10:54.650
windows, it might be a
little bit different cause of

181
00:10:54.650 --> 00:10:56.180
fonts or whatever, but I'm
not going to go and

182
00:10:56.180 --> 00:10:58.790
flag it as being utterly
different because of different fonts

183
00:10:58.790 --> 00:11:02.660
or whatever. Like it's, it's
I guess you and our

184
00:11:02.660 --> 00:11:06.140
last show, we talked about
the definition of done this

185
00:11:06.140 --> 00:11:09.320
moves now into the definition
of correct. And what is

186
00:11:09.320 --> 00:11:13.640
correct visually, and you can
use that. Okay. So you

187
00:11:13.640 --> 00:11:15.500
said that you, you, you
sit stuff like this, this

188
00:11:15.500 --> 00:11:19.520
AI smart visual differences sits
on top of tools that

189
00:11:19.520 --> 00:11:21.230
I already have. So I
already have some sledding and

190
00:11:21.230 --> 00:11:24.110
taps tests, so I could
put visual tests on top.

191
00:11:24.440 --> 00:11:27.680
And if I accidentally like
regressed or broke something, then

192
00:11:27.680 --> 00:11:30.320
I would get a heads
up. Right. Exactly. So you

193
00:11:30.320 --> 00:11:33.380
couple this with what you
have, what I love about

194
00:11:33.590 --> 00:11:37.790
it is that it helps
me to write less selenium

195
00:11:37.790 --> 00:11:41.300
code as well. So I
don't know if you experienced

196
00:11:41.300 --> 00:11:43.970
this, but I think we
talked about like your page

197
00:11:43.970 --> 00:11:45.410
ops and I was like,
Scott, you need to have

198
00:11:45.710 --> 00:11:49.820
page objects. And here's the
page object model design pattern.

199
00:11:49.880 --> 00:11:53.530
We've done that yet because
it was so COVID right.

200
00:11:53.710 --> 00:11:55.810
But That's the great thing
about this. So some of

201
00:11:55.810 --> 00:11:59.980
your functional assertions can be
removed as well. For example,

202
00:12:00.220 --> 00:12:03.760
let's say that you had
something in your shopping cart

203
00:12:03.790 --> 00:12:06.460
that you wanted to assert
against. Well, it's one thing

204
00:12:06.460 --> 00:12:09.640
to make sure that thing
is there, but the subtotal

205
00:12:09.640 --> 00:12:12.220
right. Is the total price,
right? It's the name, right?

206
00:12:12.220 --> 00:12:14.590
It's the thumbnail, right? All
of these things. And you

207
00:12:14.590 --> 00:12:18.010
probably wouldn't add all of
those assertions functionally, because a

208
00:12:18.010 --> 00:12:20.830
lot of us are just
lazy like that. But with

209
00:12:20.830 --> 00:12:24.040
the visual validation, you can
essentially just say, this is

210
00:12:24.040 --> 00:12:27.010
what my, my cart should
look like. And you get

211
00:12:27.010 --> 00:12:30.760
all of those assertions for
free, which means less code

212
00:12:30.760 --> 00:12:34.140
to maintain. Okay. So let
me think. I, I finally

213
00:12:34.140 --> 00:12:37.320
figured this out. Then I
could look at it myself

214
00:12:37.320 --> 00:12:41.820
onscreen and then write 20,
30, 40 different Dom specific

215
00:12:41.820 --> 00:12:44.220
tests to assert all the
things that I care about.

216
00:12:44.700 --> 00:12:47.370
But what I really want
is a smoke test that

217
00:12:47.370 --> 00:12:50.010
my eyeballs can do. Why
am I writing 30 tests,

218
00:12:50.040 --> 00:12:52.860
20 tests to do what
my eyeballs can be for

219
00:12:53.520 --> 00:12:56.190
now, we're doing AI. And
that is my new eyeballs

220
00:12:56.190 --> 00:12:59.400
is my computer vision eyeballs.
I dig that. That's pretty

221
00:12:59.400 --> 00:13:03.330
cool. First a word about
net app, that app gives

222
00:13:03.330 --> 00:13:07.110
developers common tools across any
environment and any cloud, but

223
00:13:07.110 --> 00:13:09.660
more than that, NetApp lets
developers take care of their

224
00:13:09.660 --> 00:13:12.540
own infrastructure with a new
service developed with Microsoft for

225
00:13:12.540 --> 00:13:15.900
the Azure portal, Azure net
app files is the only

226
00:13:15.900 --> 00:13:19.170
Azure offering that lets you
move Linux SAP and other

227
00:13:19.170 --> 00:13:23.520
enterprise file share workloads to
the cloud in minutes, registered

228
00:13:23.520 --> 00:13:25.680
today and learn how you
can get Azure net app

229
00:13:25.710 --> 00:13:32.880
files for yourself@www.net app that's
any T a P p.com/azure

230
00:13:32.880 --> 00:13:39.030
preview that's net app.com/azure preview.
So you, you're doing a

231
00:13:39.030 --> 00:13:42.150
lot of speaking and talking
about stuff like this, how

232
00:13:42.150 --> 00:13:43.710
do you stay frosty? You
know what I mean? Like

233
00:13:43.710 --> 00:13:45.270
how do you stay up
on this? If you're out

234
00:13:45.270 --> 00:13:49.770
talking about how excited you
are about visual testing, what

235
00:13:49.770 --> 00:13:51.990
about things that happen in
the testing community that you

236
00:13:51.990 --> 00:13:54.450
might miss out on? Right,
right, right. That was a

237
00:13:54.450 --> 00:13:59.310
really important consideration for me.
When I went from my

238
00:13:59.310 --> 00:14:04.500
automation engineer role at Twitter
to this now developer advocate

239
00:14:04.500 --> 00:14:08.670
role at Applitools, I didn't
want to lose my technical

240
00:14:08.670 --> 00:14:11.310
skills. And it was really
important to stay abreast of

241
00:14:11.310 --> 00:14:15.540
what's going on in test
automation in general. Fortunately, I

242
00:14:15.540 --> 00:14:21.480
had really long conversations with
Applitools before taking this position

243
00:14:21.510 --> 00:14:27.030
in essentially letting them know
that my focus is on

244
00:14:27.030 --> 00:14:31.890
test automation in general, and
they are totally cool with

245
00:14:31.890 --> 00:14:34.950
that. I've seen them in
the community before joining this.

246
00:14:34.950 --> 00:14:38.850
So I felt pretty good
about their commitment to enhance

247
00:14:38.850 --> 00:14:42.720
in this space in general
and not just shoving visual

248
00:14:42.720 --> 00:14:48.060
validation down everyone's throats. So
they do allow the space

249
00:14:48.060 --> 00:14:55.250
for me to continue helping
with their projects. Also talking

250
00:14:55.250 --> 00:14:59.690
about the foundational aspects of
test automation in general, how

251
00:14:59.690 --> 00:15:03.110
do you build a automation
framework? How do you architect

252
00:15:03.110 --> 00:15:05.960
this correctly? And so I
do a lot of hands

253
00:15:05.960 --> 00:15:09.530
on work, helping people that
way. I also do a

254
00:15:09.530 --> 00:15:15.260
lot of workshops as well,
and my workshops are very

255
00:15:15.260 --> 00:15:18.860
hands on where coding for
eight hours. And so this

256
00:15:18.860 --> 00:15:22.450
is my way of staying
technical. Yeah. One of the

257
00:15:22.450 --> 00:15:24.760
other things that I noticed,
and I'm curious what you

258
00:15:24.760 --> 00:15:26.830
think about this. Cause again,
I work at Microsoft, but

259
00:15:26.830 --> 00:15:30.280
also I focus on open
source. Are there aspects of

260
00:15:30.280 --> 00:15:33.310
Applitools that are open source?
Because I noticed that it

261
00:15:33.340 --> 00:15:36.130
integrates with basically everything there's
like GitHub and Jenkins and

262
00:15:36.130 --> 00:15:38.500
TeamCity and like on and
on. And it's this interesting

263
00:15:38.500 --> 00:15:42.100
balance between things that are
open source, like selenium and

264
00:15:42.160 --> 00:15:45.580
JIRA. And, but then there
are, there are companies that

265
00:15:45.580 --> 00:15:49.030
either provide a service like
sauce labs that are not

266
00:15:49.030 --> 00:15:51.870
open store, they're open source
as a service. And then

267
00:15:51.870 --> 00:15:56.500
there's just open source projects,
like protractor, protractor, test.org. How

268
00:15:56.500 --> 00:15:59.680
do you balance that? Like
what's open source. What's not

269
00:15:59.680 --> 00:16:03.100
whether you're pro business or
pro open source. Right, right,

270
00:16:03.100 --> 00:16:09.490
right. So Apple tools has
done a pretty good job

271
00:16:09.550 --> 00:16:13.690
of contributing to the open
source space in some way,

272
00:16:13.690 --> 00:16:19.780
for example, selenium, we have
contributors that are Applitools employees,

273
00:16:19.810 --> 00:16:24.790
but they contribute to the
selenium project. Yeah. And we

274
00:16:24.790 --> 00:16:30.640
also we're a commercial project,
but we do allow for

275
00:16:30.640 --> 00:16:37.450
open source projects to use
our application for free. We

276
00:16:37.450 --> 00:16:39.760
also, we really allow everyone
to use it for free,

277
00:16:39.760 --> 00:16:42.220
you know, up until a
certain amount. So everyone gets

278
00:16:42.220 --> 00:16:44.830
like a certain amount of
validations. They can use a

279
00:16:44.830 --> 00:16:49.510
month, but for open source
projects, we increased that drastically.

280
00:16:49.660 --> 00:16:55.120
I'm over here at applitools.com/tutorials.
And I'm like not to

281
00:16:55.120 --> 00:16:58.090
like gush a little bit,
but I, I usually figured

282
00:16:58.090 --> 00:16:59.620
that'd be like, Oh, okay.
Here's like, you know, the

283
00:16:59.620 --> 00:17:02.980
JavaScript SDK and the C
sharp SDK, there's like 40

284
00:17:02.980 --> 00:17:08.770
SDKs. It's pretty stupid. You
have to scroll like multiple

285
00:17:08.770 --> 00:17:11.170
times. There's so many different
things. And I think that's

286
00:17:11.170 --> 00:17:16.450
really the strength of open
source is even though, like

287
00:17:16.450 --> 00:17:18.880
you said that the product
isn't open source, it's sitting

288
00:17:18.880 --> 00:17:20.950
on top of so many
things and using plugins, you've

289
00:17:20.950 --> 00:17:24.910
got the Salinium C-sharp web
STK, you've got the storybook

290
00:17:24.940 --> 00:17:27.310
angular and like on and
on and on. And it

291
00:17:27.310 --> 00:17:30.700
does both web and mobile,
which is pretty cool. Yup.

292
00:17:30.760 --> 00:17:33.760
Yup. Yeah. I'm looking at,
I'm trying to dig into

293
00:17:33.760 --> 00:17:38.110
the, the SDKs. The docs
are really actually very good

294
00:17:38.110 --> 00:17:40.570
and you bring in the
Applitools selenium stuff as new

295
00:17:40.780 --> 00:17:44.110
I'm a.net person. So there
are new get packages, which

296
00:17:44.110 --> 00:17:47.650
is exactly what I would've
expected them to be. Do

297
00:17:47.650 --> 00:17:49.410
you get to work on
those? Are you writing of

298
00:17:49.410 --> 00:17:53.630
these SDKs or helping with
those? I'm not, but I

299
00:17:53.690 --> 00:17:57.980
also always look at these
before they go out. So

300
00:17:58.010 --> 00:18:03.770
this helps me like keep
my testing muscles strengthened and

301
00:18:04.040 --> 00:18:06.920
make sure to play with
them and everything and, and

302
00:18:06.950 --> 00:18:11.060
provide feedback to our development
team on, as an automation

303
00:18:11.060 --> 00:18:13.820
engineer, here's what I would
want. So I become like

304
00:18:13.820 --> 00:18:17.030
this inhouse customer as well.
That's interesting. That's actually funny

305
00:18:17.030 --> 00:18:19.220
that you say that because
I'm kind of similar at,

306
00:18:19.300 --> 00:18:23.150
at Microsoft. I feel sometimes
like I'm customer zero. I'm

307
00:18:23.480 --> 00:18:27.650
constantly trying to flex the,
the application from end to

308
00:18:27.650 --> 00:18:30.050
end and make sure that
we don't drop something, which

309
00:18:30.210 --> 00:18:32.840
is interesting because that makes
me then a manual tester,

310
00:18:34.240 --> 00:18:36.290
where is the role of
the manual test or in

311
00:18:36.290 --> 00:18:38.900
a world where we have
AI testing our UI visually.

312
00:18:39.410 --> 00:18:42.290
That's a really interesting question.
And it's a really hot

313
00:18:42.320 --> 00:18:46.040
topic in the testing community
right now. So everyone is

314
00:18:46.040 --> 00:18:51.710
talking about these tools that
are utilizing AI and how

315
00:18:51.710 --> 00:18:54.440
they'll be able to help
us with our job. And

316
00:18:54.440 --> 00:18:57.200
a common question is will
AI replace me as a

317
00:18:57.200 --> 00:19:01.340
tester? And most folks are
saying, no, not anytime soon.

318
00:19:01.340 --> 00:19:04.190
There's so much for you
to cover. And these AI

319
00:19:04.190 --> 00:19:07.340
tools, or just help you,
for example, with Applitools, we

320
00:19:07.340 --> 00:19:12.110
don't even Mark a test
as failed by default, if

321
00:19:12.150 --> 00:19:15.230
it's incorrect. Right. And so
what we're doing is just

322
00:19:15.230 --> 00:19:20.030
providing you the results and
it's marked as unresolved initially.

323
00:19:20.390 --> 00:19:23.540
And it's for you, the
tester to go in and

324
00:19:23.570 --> 00:19:27.020
actually look at that to
see, Hmm, is this really

325
00:19:27.020 --> 00:19:31.100
a failure or a, has
my baseline changed in some

326
00:19:31.100 --> 00:19:34.100
way and make that decision?
So I look at just

327
00:19:34.100 --> 00:19:36.560
that, that whole action. And
I think that's a lot

328
00:19:36.560 --> 00:19:39.770
of what we'll see. I've
been doing a lot of

329
00:19:39.770 --> 00:19:44.180
talking lately about not just
how AI will assist us

330
00:19:44.180 --> 00:19:48.110
as testers, but we're looking
at products that are employing

331
00:19:48.110 --> 00:19:52.290
AI, like Netflix, Twitter, you
know, all of these are

332
00:19:52.350 --> 00:19:57.140
employing machine learning And how
do we test This type

333
00:19:57.140 --> 00:19:59.660
of stuff? Right. How do
you know if the recommendations

334
00:19:59.660 --> 00:20:02.300
you see on your Netflix
page are actually correct? So

335
00:20:02.300 --> 00:20:06.170
there's a whole Avenue there
just for testing the machine

336
00:20:06.170 --> 00:20:09.020
learning itself. Interesting. That is
a good point. I mean,

337
00:20:09.050 --> 00:20:12.200
you can't do anything without
a trained model and ultimately

338
00:20:12.200 --> 00:20:14.540
it's the manual tester that
makes those kinds of decisions.

339
00:20:15.590 --> 00:20:21.380
So hopefully we'll never be
replaced hopefully. So the test

340
00:20:21.380 --> 00:20:24.950
automation, you.com is out, it's
getting started. You said that

341
00:20:24.950 --> 00:20:27.320
you're starting with 11, you're
going to have more in

342
00:20:27.320 --> 00:20:30.200
the, and the new year
though, but is this going

343
00:20:30.200 --> 00:20:32.720
to become kind of like
a Khan Academy for test

344
00:20:32.720 --> 00:20:35.450
automation? And will you include
people from the community as

345
00:20:35.450 --> 00:20:41.240
well to give courses? Yes.
So this was actually a

346
00:20:41.240 --> 00:20:46.250
dream come true of mine.
So like we discuss really

347
00:20:46.250 --> 00:20:50.080
hectic trying to help the
community, but also work a

348
00:20:50.080 --> 00:20:53.110
full time job as an
automation engineer somewhere. So I

349
00:20:53.110 --> 00:20:57.610
would always get questions from
community members about courses. Can

350
00:20:57.610 --> 00:21:00.730
you do a course? Can
you record a course on

351
00:21:00.730 --> 00:21:02.860
this and that and the
other, right. And I could

352
00:21:02.860 --> 00:21:06.310
never find time for it.
Now that I've moved to

353
00:21:06.310 --> 00:21:09.100
this developer advocate role, this
is my job. Now I

354
00:21:09.100 --> 00:21:11.590
get to do this sort
of thing as my day

355
00:21:11.590 --> 00:21:16.270
work. So Applitools was kind
enough to sponsor this initiative.

356
00:21:16.270 --> 00:21:21.460
So it's totally free for
users. And we will have

357
00:21:21.490 --> 00:21:25.090
courses around test automation, like
you said, the Khan Academy

358
00:21:25.090 --> 00:21:28.720
or the plural site of
test automation. And so we'll

359
00:21:28.720 --> 00:21:34.540
have courses there around automation
in general and allow people

360
00:21:34.540 --> 00:21:37.420
to come and get this
content. Now it's not just

361
00:21:37.420 --> 00:21:42.550
me, cause I can't cover
everything myself. So I have

362
00:21:42.910 --> 00:21:48.190
reached out to our industry
experts and test automation and

363
00:21:48.190 --> 00:21:53.080
have 10 other people on
board already who are going

364
00:21:53.080 --> 00:21:56.220
to provide courses as well.
Yeah. I'm looking on the

365
00:21:56.220 --> 00:21:58.560
online here. There's like a
list of different people. You've

366
00:21:58.560 --> 00:22:01.740
got courses on like that
are really, they don't sound

367
00:22:01.740 --> 00:22:04.260
technical. They're actually kind of
more philosophical, which is nice,

368
00:22:04.260 --> 00:22:06.810
like the whole team approach
to continuous testing. Like how

369
00:22:06.810 --> 00:22:10.800
do you get everyone on
board for, for doing continuous

370
00:22:10.800 --> 00:22:14.310
testing and like setting a
foundation kind of organizationally for

371
00:22:14.310 --> 00:22:18.660
successful test automation, which isn't
the, isn't the bits and

372
00:22:18.660 --> 00:22:21.000
the bites of it. It's
really the people part. Exactly.

373
00:22:21.000 --> 00:22:23.910
So people come at this
from all different levels. Like

374
00:22:23.910 --> 00:22:27.900
I mentioned before, there's high
demand and not enough trained

375
00:22:27.900 --> 00:22:30.900
people. So we're going to
have people who are complete

376
00:22:30.900 --> 00:22:35.670
newbies who need to understand
the foundational principles about test

377
00:22:35.670 --> 00:22:38.640
automation before they start dabbling
in any code, you know,

378
00:22:38.970 --> 00:22:43.080
and there's other people who
are doing test automation much

379
00:22:43.110 --> 00:22:47.400
differently. So that course about
the whole team approach, Lizzie

380
00:22:47.400 --> 00:22:51.270
hock, she is a great
speaker up and coming speaker

381
00:22:51.300 --> 00:22:56.460
and she doesn't do test
automation full time and neither

382
00:22:56.460 --> 00:22:59.490
does anyone else on her
team. And so she talks

383
00:22:59.490 --> 00:23:02.970
about how everyone kind of
pitches in with whatever they're

384
00:23:02.970 --> 00:23:06.270
good at and they figure
out test automation together and

385
00:23:06.270 --> 00:23:09.030
get something done. So I
think that's a really viable

386
00:23:09.030 --> 00:23:11.760
option for a lot of
people as well. I was

387
00:23:11.760 --> 00:23:14.580
chatting with someone recently on
the show and we talked

388
00:23:14.580 --> 00:23:17.760
about the fear, the inherent
fear that we have of

389
00:23:17.760 --> 00:23:21.270
our code. And someone said
that you are, if you

390
00:23:21.270 --> 00:23:23.580
don't have good tests, you're
always going to be afraid

391
00:23:23.610 --> 00:23:25.860
of your code and you're
gonna be afraid of releases

392
00:23:26.190 --> 00:23:30.450
in general. Yes, that is
so true. And I think

393
00:23:30.450 --> 00:23:32.970
that's why there's such a,
a big demand and a

394
00:23:32.970 --> 00:23:36.990
push to have test automation
kind of shifted a bit

395
00:23:36.990 --> 00:23:40.230
more left. So I've been
doing this for a long

396
00:23:40.230 --> 00:23:42.810
time. And when I first
started, we would write the

397
00:23:42.810 --> 00:23:45.530
test and we would just
run these things on our

398
00:23:45.530 --> 00:23:48.200
machine. And you know, some
of them are passed. Some

399
00:23:48.200 --> 00:23:52.100
of them won't, you'll triage
the failures and you'll give

400
00:23:52.100 --> 00:23:55.970
someone a summary maybe in
a day or two that

401
00:23:55.970 --> 00:24:01.490
doesn't work anymore. Now, now
we're in the era of

402
00:24:01.490 --> 00:24:05.870
DevOps and continuous, distant, continuous
fat. And so we need

403
00:24:05.870 --> 00:24:08.690
automation to be running as
part of these continuous integration

404
00:24:08.690 --> 00:24:12.980
and continuous deployment pipelines. And
so they have to be

405
00:24:12.980 --> 00:24:18.770
much stronger, much more stable,
less flaky. So there's really

406
00:24:18.800 --> 00:24:22.130
a demand for this and
to be able to do

407
00:24:22.130 --> 00:24:24.730
it right. Yeah. I think
the do it right. Part

408
00:24:24.730 --> 00:24:27.070
is the tricky is the
tricky bit. But if I

409
00:24:27.340 --> 00:24:30.700
can get enough unit test
enough coverage, both unit tests,

410
00:24:30.700 --> 00:24:32.470
integration tests, and all the
way up to selenium and

411
00:24:32.470 --> 00:24:36.580
then hopefully in the future,
some, some visual, a visual

412
00:24:36.580 --> 00:24:39.100
testing and get some AI
involved. And I won't feel

413
00:24:39.100 --> 00:24:43.870
afraid of my podcast site.
I am, I want to

414
00:24:43.870 --> 00:24:46.630
be able to like commit
and walk away. And I

415
00:24:46.630 --> 00:24:49.330
want to know, like, we
always joke about committing to

416
00:24:49.330 --> 00:24:53.650
production on, on Friday afternoons,
right? Yeah, yeah, yeah. But

417
00:24:53.650 --> 00:24:57.070
arguably, if I have the
system set up right, then

418
00:24:57.070 --> 00:24:58.960
all my tests would fail
and it would never make

419
00:24:58.960 --> 00:25:01.270
it to production. Right. That's
true. If you, if you

420
00:25:01.270 --> 00:25:05.170
do this correctly, then when
you're test fail, you know,

421
00:25:05.170 --> 00:25:08.680
that they're failing for just
cause and it's, you can

422
00:25:08.680 --> 00:25:12.250
have them gate, your deployments,
but a lot of teams

423
00:25:12.250 --> 00:25:15.220
are not there yet. Even
the ones who have test

424
00:25:15.220 --> 00:25:19.060
automation as part of their
continuous integration or continuous deployment

425
00:25:19.090 --> 00:25:22.930
pipelines, they don't really trust
the test because you know,

426
00:25:22.930 --> 00:25:26.470
they're still flaky. And sometimes
they're feeling when they shouldn't

427
00:25:26.470 --> 00:25:30.310
have. And so there is
a lot that we can

428
00:25:30.310 --> 00:25:32.950
do as an industry to
strengthen those tests so that

429
00:25:32.950 --> 00:25:35.200
we could deploy on a
Friday and feel good about

430
00:25:35.200 --> 00:25:38.830
it. Interesting. So do you
think that that's a goal?

431
00:25:38.860 --> 00:25:40.660
Like we like it, that
could be like an organizational

432
00:25:40.660 --> 00:25:42.250
goal for someone to say,
all right, we want to

433
00:25:42.250 --> 00:25:45.100
get to the point where
you all can, can not

434
00:25:45.100 --> 00:25:48.400
live in fear, just commit
the code and walk away

435
00:25:48.400 --> 00:25:52.360
and not be called back
into work a late Friday.

436
00:25:52.360 --> 00:25:54.580
Because if, if you do
trust your, if you do

437
00:25:54.580 --> 00:25:58.570
trust your grades, I mean,
it seems like Right. And

438
00:25:58.590 --> 00:26:01.330
then everything else will work
itself out. Absolutely. This can

439
00:26:01.330 --> 00:26:04.810
be a goal, Huh? Okay.
I dig it. So now

440
00:26:05.170 --> 00:26:08.080
we need to teach people
how to go from, you

441
00:26:08.080 --> 00:26:10.690
know, move their way up
to testing automation stack. Right.

442
00:26:10.690 --> 00:26:13.090
They do need unit tests
and a framework to start

443
00:26:13.090 --> 00:26:17.290
with. Have you ever, have
you ever instituted visual tests

444
00:26:17.320 --> 00:26:20.440
at a place with no
testing experience at all? I'm

445
00:26:20.440 --> 00:26:21.940
wondering if, is it something
you have to do in

446
00:26:21.940 --> 00:26:25.420
order? No, no, no. So
there are some of our

447
00:26:25.420 --> 00:26:28.150
customers who they use it
almost as like a smoke

448
00:26:28.150 --> 00:26:30.730
test kind of thing. So
we haven't started with test

449
00:26:30.730 --> 00:26:34.690
automation yet, but we're gonna
write a little simple script.

450
00:26:34.690 --> 00:26:38.530
That's going to essentially load
all of our important pages

451
00:26:38.830 --> 00:26:42.010
and then take the screenshots
of those and compare them.

452
00:26:43.470 --> 00:26:45.510
Okay. So they Have no
unit testing. They take a

453
00:26:45.510 --> 00:26:47.850
screenshot of what a baseline
is and then they go

454
00:26:47.850 --> 00:26:52.010
from there, Right? So some
people are starting their automation

455
00:26:52.010 --> 00:26:55.100
journey there. And you know,
they have hopes of eventually

456
00:26:55.100 --> 00:26:57.920
maturing and get into the
point where they're going to

457
00:26:57.920 --> 00:27:03.200
add unit tests and integration
tests and things like this.

458
00:27:03.200 --> 00:27:05.930
But yeah, some of, some,
some of our customers use

459
00:27:05.930 --> 00:27:09.320
this as a base point.
Do you think that people

460
00:27:09.320 --> 00:27:13.820
get for lack of a
better word paralyzed when, when

461
00:27:13.820 --> 00:27:17.660
faced with the distance between
the ideal and where they

462
00:27:17.660 --> 00:27:20.930
are currently, and then they
just do nothing. I really

463
00:27:20.930 --> 00:27:26.630
do. And I see people
try to start and they

464
00:27:26.630 --> 00:27:30.170
fail after like a month
or two or realize, wow,

465
00:27:30.170 --> 00:27:33.080
there's so much about this,
that we don't know that

466
00:27:33.080 --> 00:27:36.530
they also get paralyzed and
they just don't continue and

467
00:27:36.530 --> 00:27:38.900
they put it on the
shelf. So hopefully we can

468
00:27:38.900 --> 00:27:42.260
address a lot of these
issues with test automation. You,

469
00:27:42.650 --> 00:27:46.130
Yeah. That, that analysis paralysis
is something that is just

470
00:27:46.130 --> 00:27:48.470
overwhelming when faced with the
problem. You just stare at

471
00:27:48.470 --> 00:27:50.310
it and you just like,
ah, I don't even, Yeah.

472
00:27:50.310 --> 00:27:52.790
Yeah. I don't know. I
don't know. And I don't

473
00:27:52.790 --> 00:27:55.580
have time to figure it
out. Isn't that the thing

474
00:27:55.580 --> 00:27:57.170
though, right? They don't have
time to figure it out,

475
00:27:57.170 --> 00:27:59.540
but they do have time
to do it manually. Right.

476
00:27:59.570 --> 00:28:04.920
Which, which takes much longer,
you know? And, and, and

477
00:28:04.930 --> 00:28:08.000
actually that's a good plug
for your previous podcast with

478
00:28:08.000 --> 00:28:11.150
me, where we talked about
the definition of done, which

479
00:28:11.150 --> 00:28:13.910
I think is still valid
today. You have to ask

480
00:28:13.910 --> 00:28:17.120
yourself, when is this project
done? When is this testing

481
00:28:17.120 --> 00:28:19.790
done? And without any kind
of automation, it's hard to

482
00:28:19.790 --> 00:28:22.670
do, Right? How do we
close this feature out without

483
00:28:22.910 --> 00:28:27.320
testing in place for it?
Right. Who's gonna regress this

484
00:28:27.320 --> 00:28:32.150
stuff. So I'm looking over@angiejones.tech.
You've got a ton of

485
00:28:32.150 --> 00:28:36.170
talks up online at Tom
ton of upcoming events and

486
00:28:36.170 --> 00:28:40.670
places that you're going to
speak. And it looks like

487
00:28:40.700 --> 00:28:42.980
you've got a bunch of
stuff going you're pretty busy

488
00:28:42.980 --> 00:28:46.790
next year. It looks like,
Yes, I am have a

489
00:28:46.790 --> 00:28:51.770
bunch of stuff all over
some stuff in Europe and

490
00:28:52.430 --> 00:28:56.540
some stuff in the States.
So yeah. Angie jones.tech, I'm

491
00:28:56.540 --> 00:29:00.740
coming to events, I'm excited.
I'm excited. There's definitely a

492
00:29:00.740 --> 00:29:04.820
demand for help with test
automation. And I'm so glad

493
00:29:04.820 --> 00:29:07.550
that I'm able to help
the community in this way.

494
00:29:07.940 --> 00:29:09.770
Very cool. Well, thanks so
much for chatting with me

495
00:29:09.770 --> 00:29:13.790
today. Thank you, Scott. It's
good to talk to you.

496
00:29:14.210 --> 00:29:18.200
You can check out test
automation, you.com and Angie jones.tech.

497
00:29:18.650 --> 00:29:21.350
This has been another episode
of Hanselminutes and we'll see

498
00:29:21.350 --> 00:29:43.040
you again next week. <inaudible>.

