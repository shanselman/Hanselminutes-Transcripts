WEBVTT FILE

1
00:00:12.030 --> 00:00:17.520
From hanselminutes.com. It's Hanselman. It's
a weekly discussion with web

2
00:00:17.520 --> 00:00:22.350
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.350 --> 00:00:29.070
number three 43. Recorded live
Thursday, October 25th, 2012. This episode is

4
00:00:29.070 --> 00:00:32.040
brought to you by Tellerik
offering the best in developer

5
00:00:32.040 --> 00:00:41.550
tools and support online@telprikdotcomandbyfranklins.net training
developers to work smarter and

6
00:00:41.550 --> 00:00:45.030
now offering gesture pack a
powerful gesture, recording and recognition

7
00:00:45.030 --> 00:00:51.420
system for Microsoft connect for
windows developers details@gesturepak.com. In this

8
00:00:51.420 --> 00:00:54.720
episode, Scott talks with Phil
Williams and creator of draw

9
00:00:54.750 --> 00:00:58.170
a stick man and John
peppers lead developer for apps

10
00:00:58.170 --> 00:01:03.530
at hits sets. Hi, this
is Scott Hanselman. This is

11
00:01:03.530 --> 00:01:06.380
another episode of Hansel minutes.
And today we're talking about

12
00:01:06.380 --> 00:01:10.160
motto and cross-platform gaming with
Phil Williams, the creator of

13
00:01:10.160 --> 00:01:12.500
draw a stick man, and
the new game. Draw a

14
00:01:12.500 --> 00:01:15.530
stick, man, Epic along with
John peppers. Who's the lead

15
00:01:15.530 --> 00:01:19.220
developer for apps. Thanks guys
for talking to me. Thanks

16
00:01:19.220 --> 00:01:23.480
for having us on. So
Phil, if I remember correctly,

17
00:01:23.480 --> 00:01:25.850
draw a stick, man was
something that was on the

18
00:01:25.850 --> 00:01:29.060
web a couple of the
year ago, 2011. It was

19
00:01:29.060 --> 00:01:34.010
an HTML five game. Yes,
that's correct. I designed it

20
00:01:34.140 --> 00:01:36.170
a little over a year
ago and we launched it

21
00:01:36.170 --> 00:01:40.220
about, about a year ago
and it, it initially was

22
00:01:40.220 --> 00:01:45.770
just a website. It was
an interactive web game and

23
00:01:45.770 --> 00:01:51.170
we wrote it all using
a JavaScript and SVG to

24
00:01:51.170 --> 00:01:54.410
do all the graphics. And
it's just a five minute

25
00:01:54.440 --> 00:01:59.570
animated game, but it went
viral and we had millions

26
00:01:59.570 --> 00:02:01.880
and millions of views in
a very short period of

27
00:02:01.880 --> 00:02:07.280
time. And you wrote this
in HTML five. Well, just

28
00:02:07.460 --> 00:02:10.850
a couple of weeks ago,
people are saying HTML five

29
00:02:10.850 --> 00:02:15.290
is not ready to do
anything. Well, actually I looked

30
00:02:15.290 --> 00:02:17.960
into doing HTML five and
most people who look at

31
00:02:17.960 --> 00:02:22.490
the site think it's HTML
five. It's actually written using

32
00:02:22.490 --> 00:02:29.630
SVG and VML wow. To
do the graphics. And that

33
00:02:29.630 --> 00:02:32.980
way it will run on
very old browsers. And I

34
00:02:32.990 --> 00:02:35.930
did that just because a
year ago, HTML five really

35
00:02:35.930 --> 00:02:40.610
wasn't widespread enough to really
seem like that was going

36
00:02:40.610 --> 00:02:44.720
to be an option that
the majority of our users

37
00:02:44.720 --> 00:02:47.870
would have been able to
play. So it is really

38
00:02:47.870 --> 00:02:49.970
neat because it doesn't use
any plugins at all and

39
00:02:49.970 --> 00:02:55.010
it'll run on pretty much
any browser, make sure that

40
00:02:55.010 --> 00:02:58.910
folks understand. When I say
HTML five people usually think

41
00:02:59.170 --> 00:03:03.340
CSS, A certain level of
JavaScript support canvas, which has

42
00:03:03.340 --> 00:03:06.040
the ability to slap pixels
up on the screen. And

43
00:03:06.040 --> 00:03:10.690
you used SVG, scalable vector
graphics and in VML vector

44
00:03:10.690 --> 00:03:14.290
markup language for I E
and then you manipulated those

45
00:03:14.290 --> 00:03:21.090
vectors with JavaScript. That's exactly
right. Yes. And the extra

46
00:03:21.090 --> 00:03:24.690
level of complexity on top
of that, I knew to

47
00:03:24.690 --> 00:03:27.300
be able to do that
kind of animation, I was

48
00:03:27.300 --> 00:03:29.640
going to need some kind
of design tool. So I

49
00:03:29.640 --> 00:03:34.230
actually wrote a program that
would take flash animation and

50
00:03:34.620 --> 00:03:38.070
convert it into a, into
a format, into a Jaison

51
00:03:38.070 --> 00:03:41.820
format that I could then
read in and animate using

52
00:03:42.180 --> 00:03:45.750
vectors in SVG and VML.
So I actually created the

53
00:03:45.750 --> 00:03:49.170
initial animation in flash, and
then it ran it through

54
00:03:49.170 --> 00:03:52.770
a lot of conversion to
make it all happen. That's

55
00:03:52.770 --> 00:03:55.260
clever. Cause I was immediately
thinking, you know, SVG is

56
00:03:55.260 --> 00:03:57.630
one of these technologies that
everyone loves to talk about

57
00:03:57.630 --> 00:03:59.670
how wonderful it is. But
then when you say, well,

58
00:03:59.670 --> 00:04:02.310
show me the really great
SVG editor that you're using.

59
00:04:03.080 --> 00:04:04.710
They always say, well, I
write it in illustrator. And

60
00:04:04.710 --> 00:04:09.540
then I export it. Exactly.
Yeah. That's the big problem

61
00:04:10.290 --> 00:04:13.620
to, to develop something with
that much animation, you have

62
00:04:13.620 --> 00:04:18.060
to have some kind of
development tool. And that's why

63
00:04:18.300 --> 00:04:20.760
I had to write this
conversion program to begin with.

64
00:04:22.200 --> 00:04:23.820
Okay. So break it down
for me. I have my

65
00:04:23.820 --> 00:04:25.590
kids play it, but I
want to understand, let's talk

66
00:04:25.590 --> 00:04:28.350
about like the, the general
concept behind stick men, and

67
00:04:28.350 --> 00:04:32.100
then we'll dig into the
tech. Okay. So you go

68
00:04:32.100 --> 00:04:34.110
to this website and it
asks you to draw a

69
00:04:34.110 --> 00:04:37.050
stick man. And so you
draw this stick, man. And

70
00:04:37.080 --> 00:04:39.390
then he comes to life
and he starts going on

71
00:04:39.390 --> 00:04:42.360
this adventure and he starts
walking across the screen and

72
00:04:42.360 --> 00:04:45.510
asking you to draw various
things, to help him in

73
00:04:45.510 --> 00:04:48.420
this adventure. So he'll ask
you to draw a key,

74
00:04:48.420 --> 00:04:51.750
to open a box and
he eventually fights the dragon

75
00:04:51.750 --> 00:04:54.630
and you have to draw
a sword. And it just

76
00:04:54.630 --> 00:04:58.050
has a lot of different
surprises. But the fascinating thing

77
00:04:58.050 --> 00:05:00.690
about it is that the
objects that you draw, the

78
00:05:00.690 --> 00:05:02.790
Sikh man will use in
this kind of lifelike manner

79
00:05:03.220 --> 00:05:05.640
and he'll actually move around.
So, so the neat thing

80
00:05:05.640 --> 00:05:08.670
is seeing your drawings come
to life through this adventure.

81
00:05:10.440 --> 00:05:14.070
I play this with my
kids and it's funny because

82
00:05:14.070 --> 00:05:16.560
I was completely blown away.
Cause they, they draw a

83
00:05:16.560 --> 00:05:18.990
man and then his feet
start moving and he starts

84
00:05:18.990 --> 00:05:22.260
walking around and you know,
I'm freaking out and they're

85
00:05:22.260 --> 00:05:24.390
like, yeah, you know, that's
of course that's how it

86
00:05:24.390 --> 00:05:31.080
should work. Yeah. It's been
neat. Seeing the different react

87
00:05:31.080 --> 00:05:36.120
in a different people. We,
we definitely get from, from,

88
00:05:36.600 --> 00:05:39.480
from developers, we really get
this fascination with, how did

89
00:05:39.480 --> 00:05:41.130
it happen? How did you
actually do this kind of

90
00:05:41.130 --> 00:05:46.800
thing from more artsy type
people? They're, they're more saying,

91
00:05:46.800 --> 00:05:48.540
well, that, that is how
it should work, but they're

92
00:05:48.540 --> 00:05:50.400
really excited about it because
it's sort of their dream

93
00:05:50.400 --> 00:05:52.320
come true. This is, this
is the way life should

94
00:05:52.320 --> 00:05:53.730
be, where you can draw
things and they come into

95
00:05:53.730 --> 00:05:58.190
life. But then we really
never even it for kids.

96
00:05:59.210 --> 00:06:01.730
But we have a huge
following of course with kids

97
00:06:01.760 --> 00:06:05.240
because it it's something that
the kids love to do

98
00:06:05.270 --> 00:06:06.980
just to be able to
draw things and see them

99
00:06:07.220 --> 00:06:09.740
come to life. So it's
really become a huge market

100
00:06:09.740 --> 00:06:12.650
for us, even though that's
never what we had in

101
00:06:12.650 --> 00:06:16.030
mind to begin with. Do
you think this is a,

102
00:06:16.030 --> 00:06:17.730
is this a game for
adults? I mean, like, I

103
00:06:18.400 --> 00:06:20.620
think it's funny that we
have all of these like

104
00:06:21.070 --> 00:06:24.220
30 year old, 35 year
old professionals playing angry birds.

105
00:06:24.280 --> 00:06:25.960
And it seems to me
like it's a game for

106
00:06:26.050 --> 00:06:27.940
12 year olds, but then
it starts to ratchet up

107
00:06:27.940 --> 00:06:31.300
the difficulty. And then I
realized that I'm not smart

108
00:06:31.300 --> 00:06:34.450
enough to play angry. Birds
is this is Epic stick

109
00:06:34.450 --> 00:06:36.760
man. Get pretty or stick
man, Epic rather get pretty

110
00:06:37.060 --> 00:06:39.130
hardcore towards the end there.
Or is it all very

111
00:06:39.190 --> 00:06:43.900
accessible? It does get pretty
difficult towards the end. We

112
00:06:43.900 --> 00:06:47.650
did design it with, with
adults in mind. We believe

113
00:06:47.650 --> 00:06:51.310
it will have a big
appeal to kids, but we

114
00:06:51.310 --> 00:06:53.770
did actually design it more
as a, as a game

115
00:06:53.860 --> 00:06:58.660
for adults. So that that's
kind of our target market.

116
00:07:00.250 --> 00:07:03.010
So when you have a
game that is those vectors

117
00:07:03.010 --> 00:07:06.100
and SVG, then I assume
that, is there some bitmap,

118
00:07:06.100 --> 00:07:08.110
like when he's walking around
in the forest, is that

119
00:07:08.110 --> 00:07:09.970
a big giant PNG? And
then you're just floating that

120
00:07:09.970 --> 00:07:14.470
around or is that also
a SVG? That's correct. It's

121
00:07:15.130 --> 00:07:18.820
it is a bit map
image on, on the website.

122
00:07:19.090 --> 00:07:22.030
The stuff that you draw
will is vectors, but everything

123
00:07:22.030 --> 00:07:24.760
else is actually PNG images.
And we did that for

124
00:07:24.760 --> 00:07:29.080
performance. You can obviously draw
a P and G to

125
00:07:29.080 --> 00:07:31.420
the screen much faster than
you can draw a series

126
00:07:31.420 --> 00:07:35.020
of vector lines and there's
really no need to display

127
00:07:35.020 --> 00:07:37.030
anything else in vectors besides
the stick man, and the

128
00:07:37.030 --> 00:07:42.340
objects that you draw, This
would be interesting if it

129
00:07:42.340 --> 00:07:44.950
were just a website and
you can go to draw

130
00:07:44.950 --> 00:07:47.230
a stick man and learn
about it. But what I

131
00:07:47.230 --> 00:07:49.810
think is interesting, why I
wanted to have you on

132
00:07:49.810 --> 00:07:52.060
the phone and, and John
peppers has been so kind

133
00:07:52.060 --> 00:07:54.700
as to sit quietly for
a moment here is that

134
00:07:55.180 --> 00:07:58.300
if you go to, you
know, Epic dot drastic man.com

135
00:07:58.300 --> 00:08:01.240
and scroll down a little
bit, it says devices and

136
00:08:01.240 --> 00:08:04.540
it says iPhone, iPad, Android,
Android, tablet, windows, eight desktop

137
00:08:04.540 --> 00:08:08.440
windows. They tell it you've
got this running everywhere. And

138
00:08:08.440 --> 00:08:11.710
that went from being Oh,
interesting. He's written something in

139
00:08:11.710 --> 00:08:15.760
HTML 4.9, which I'm going
to, I've just decided to

140
00:08:15.760 --> 00:08:18.370
call that what you did,
HTML 4.9, by the way,

141
00:08:18.580 --> 00:08:21.040
we'll see if we can
make that catch on drawing

142
00:08:21.040 --> 00:08:24.550
everything in SPG and VML.
It's just one, one smaller

143
00:08:24.550 --> 00:08:28.810
than HTML five. You've poured
it over basically everywhere. So

144
00:08:28.810 --> 00:08:32.230
you're actually gonna L you
you've launched on windows eight

145
00:08:32.230 --> 00:08:35.950
and iPhone at the exact
same time, which seems impossible

146
00:08:35.950 --> 00:08:39.070
to me. You, you reached
out to John or do

147
00:08:39.070 --> 00:08:41.350
you work at the same
company? We work at the

148
00:08:41.350 --> 00:08:50.530
same company and my department
we've been using that. And

149
00:08:50.530 --> 00:08:53.620
so we're pretty familiar with
mobile platforms and using C

150
00:08:53.620 --> 00:08:59.070
sharp cross-platform apps. And so
our first step was to

151
00:08:59.070 --> 00:09:02.400
take, you know, Phil's workflow
where he can design things

152
00:09:02.400 --> 00:09:05.460
in flash and export it,
and then write a quick

153
00:09:05.460 --> 00:09:08.040
little C-sharp game engine that
loads that up and then

154
00:09:08.040 --> 00:09:13.260
can animate everything. So he's
got the same, same workflow

155
00:09:13.270 --> 00:09:16.230
you had before, but, you
know, we have several animators

156
00:09:16.230 --> 00:09:20.070
and designers who can lay
out levels. They can animate

157
00:09:20.130 --> 00:09:24.360
enemies to walk around even
layout positions where here's where

158
00:09:24.360 --> 00:09:27.000
this enemy can get hurt
or here's what this enemy

159
00:09:27.000 --> 00:09:31.440
can hurt and your stick
man and so forth. So

160
00:09:31.440 --> 00:09:35.150
that's the, just, that's how
it works. Okay. I'm trying

161
00:09:35.150 --> 00:09:36.920
to break down in my
mind. Like, of course, whenever

162
00:09:36.920 --> 00:09:38.900
you see a game and
you're a programmer, you're trying

163
00:09:38.900 --> 00:09:40.910
to like write it in
your head as you look

164
00:09:40.910 --> 00:09:44.030
at it. So you've got,
you've got stick, man. And

165
00:09:44.030 --> 00:09:46.550
I'm imagining that he's in
a rectangle and that there's

166
00:09:46.550 --> 00:09:50.120
a mesh applied to him.
That indicates how you're going

167
00:09:50.120 --> 00:09:52.370
to distort him to make
it look like he's walking

168
00:09:52.370 --> 00:09:57.260
around. Yes. And it's kind
of interesting how we animate

169
00:09:57.260 --> 00:10:00.590
drawings in the new game.
What Phil does is he

170
00:10:00.590 --> 00:10:04.100
lays out a a hundred
by a hundred square and

171
00:10:04.100 --> 00:10:06.680
flash. And what we do
is we treat that as

172
00:10:06.680 --> 00:10:10.820
a percentage to apply to
all the points within the

173
00:10:10.820 --> 00:10:13.910
drawing. So he has a
nice little fire animation and

174
00:10:13.910 --> 00:10:17.900
it kinda kind of looked
like a fire flickering and

175
00:10:17.900 --> 00:10:22.340
the stick man's walk is
the same way. So you

176
00:10:22.340 --> 00:10:25.010
apply that over, you take
it that you take the

177
00:10:25.010 --> 00:10:28.040
vector and you out, you
know, are you, are you

178
00:10:28.040 --> 00:10:29.900
turning it into a raster?
Are you doing everything as

179
00:10:29.900 --> 00:10:32.960
a vector? Even manipulating it
in memory as a vector?

180
00:10:34.520 --> 00:10:36.740
Yeah. In the game. It
is. Yeah, just basically a

181
00:10:36.740 --> 00:10:40.610
list of vectors. And we
kind of draw lines between

182
00:10:40.610 --> 00:10:45.290
each point. And so that
list of vectors, we, we

183
00:10:45.290 --> 00:10:50.630
apply this distortion, every frame
as defined and flash. And

184
00:10:50.630 --> 00:10:54.470
so that gives him the
whole walking animation. In addition

185
00:10:54.470 --> 00:10:56.960
to some, we might have
some other manual code tweaks

186
00:10:56.960 --> 00:10:59.170
to make him look better,
but that's the gist of

187
00:10:59.170 --> 00:11:02.420
it. So then there's other
things that you draw and

188
00:11:02.420 --> 00:11:04.700
then, you know what the
user's going to draw. You're

189
00:11:04.700 --> 00:11:07.940
kind of taking a guess
as to, you know, I

190
00:11:07.940 --> 00:11:09.860
hope that their stick man
looks human. Like if I

191
00:11:09.860 --> 00:11:11.390
do a stick, man that
looked like a horse, it

192
00:11:11.510 --> 00:11:15.530
might move kind of weird.
Yeah. There is an algorithm

193
00:11:15.530 --> 00:11:20.480
to find his feet and
his hands, which is all

194
00:11:20.480 --> 00:11:23.090
done in C sharp. That's
not something on the design

195
00:11:23.090 --> 00:11:26.180
end, but it seems to
work pretty well. As long

196
00:11:26.180 --> 00:11:31.250
as you don't draw something
very strange. I think that

197
00:11:31.250 --> 00:11:34.670
the negative testing would be
an interesting and interesting thing

198
00:11:34.670 --> 00:11:39.230
to experiment with in this
game. Right. So then he's

199
00:11:39.230 --> 00:11:43.010
walking around against these PNGs,
but can he, he can't

200
00:11:43.010 --> 00:11:46.130
walk through trees. Are you
keeping track of the positions

201
00:11:46.130 --> 00:11:48.650
of all the different obstacles
to make sure that he's,

202
00:11:48.650 --> 00:11:51.980
even though he's walking up
on a bitmap, you've got

203
00:11:51.980 --> 00:11:56.610
a path laid out for
him. That's correct. In, in

204
00:11:56.610 --> 00:11:59.940
the, in the flash portion
of, of designing the game,

205
00:12:00.060 --> 00:12:04.110
let's say they're creating a
tree. They'll have here's the

206
00:12:04.110 --> 00:12:06.510
state when the tree is
about to burn, or here's

207
00:12:06.510 --> 00:12:09.810
a state where the tree
is normal in each of

208
00:12:09.810 --> 00:12:14.040
those States, there's a list
of collision boxes that get

209
00:12:14.040 --> 00:12:17.610
applied with any enemy or,
or the player, or, you

210
00:12:17.610 --> 00:12:21.810
know, so forth. And it,
an enemy's walls will have

211
00:12:21.810 --> 00:12:25.080
other things like that. Will
they move this far on

212
00:12:25.080 --> 00:12:30.780
this frame and that kind
of thing. Do things ever

213
00:12:30.780 --> 00:12:35.070
get out of sync? You've
got the flash animations, you've

214
00:12:35.070 --> 00:12:39.000
got the SVG generated stuff.
You've got all of this

215
00:12:39.000 --> 00:12:42.330
feeding from his original animations.
And now into a cross

216
00:12:42.330 --> 00:12:45.630
platform game written in C
sharp, how do you keep

217
00:12:45.630 --> 00:12:48.300
things in sync? Both from
an engine's perspective and from

218
00:12:48.300 --> 00:12:53.370
a behavioral perspective and an
artistic one Use the same

219
00:12:53.370 --> 00:12:56.580
source control repository, which I
think helps that we have

220
00:12:56.580 --> 00:12:59.580
that. So even the designers,
you know, they saved their

221
00:12:59.580 --> 00:13:02.700
flash projects in there. And
then at some point when

222
00:13:02.700 --> 00:13:05.790
they decide it's ready, they
they'll export that. And in

223
00:13:05.790 --> 00:13:09.810
our format, and that gets
committed as well. So when

224
00:13:09.810 --> 00:13:11.400
we make a bill that
is kind of a big

225
00:13:11.400 --> 00:13:14.010
deal, we have to make
sure we got everything, latest,

226
00:13:14.010 --> 00:13:17.250
everything you had to play
through every level, make sure

227
00:13:17.250 --> 00:13:20.730
everything's okay. So I know
down the road updates are

228
00:13:20.730 --> 00:13:25.530
going to be interesting to
see how that goes. Did

229
00:13:25.530 --> 00:13:28.800
you take existing frameworks to
go and write this? I

230
00:13:28.800 --> 00:13:31.170
mean, we hear about Moto
and those of us who,

231
00:13:31.530 --> 00:13:33.810
who have played with it
like it, but I don't

232
00:13:33.810 --> 00:13:37.050
think that it's obvious maybe
to the listener, how they

233
00:13:37.050 --> 00:13:39.300
would suddenly start writing a
game in motto. They might

234
00:13:39.300 --> 00:13:41.640
be familiar with things like
the X and a framework,

235
00:13:42.330 --> 00:13:44.940
but how does mano enable
me to write a game

236
00:13:44.940 --> 00:13:50.700
that runs anywhere Taking advantage
of a open source project

237
00:13:50.700 --> 00:13:55.110
called mano game? And what
it is is basically the

238
00:13:55.110 --> 00:13:59.820
X and a API, but
implemented on all the platforms.

239
00:14:00.240 --> 00:14:04.830
So on iOS, they have,
they provide this X and

240
00:14:04.830 --> 00:14:08.070
a API, but under the
hood, it runs open GL.

241
00:14:09.240 --> 00:14:13.560
And so for windows eight,
for example, they provided an,

242
00:14:13.560 --> 00:14:17.640
an X and an implementation,
even though Microsoft hasn't. So,

243
00:14:18.240 --> 00:14:20.310
you know, they've kind of
implemented X and a to

244
00:14:20.310 --> 00:14:26.940
work for Metro, which is
not. But the implication is

245
00:14:27.060 --> 00:14:32.010
that you could ride an
exit game on windows and

246
00:14:32.460 --> 00:14:35.940
very quickly put that game
to iOS and you might

247
00:14:35.940 --> 00:14:39.150
have to change how input
works or, or tweak a

248
00:14:39.150 --> 00:14:42.000
few things. But for the
most part, it is very

249
00:14:42.000 --> 00:14:47.440
straightforward for different platforms. So
does this mean that this

250
00:14:47.440 --> 00:14:49.800
is a series of interfaces
I can count on or

251
00:14:49.800 --> 00:14:52.550
a series of classes that
can count on being there?

252
00:14:53.300 --> 00:14:55.250
And I just change namespaces
or is it a matter

253
00:14:55.250 --> 00:14:58.960
of just swapping references? Yeah.
Well, it's not even a

254
00:14:58.960 --> 00:15:02.050
change of namespaces an X
and a, you have a

255
00:15:02.050 --> 00:15:06.070
game class and a Sprite
batch class. Those are kind

256
00:15:06.070 --> 00:15:09.340
of the building blocks along
with vector too, and some

257
00:15:09.340 --> 00:15:14.800
other objects, but those are
implemented exactly the same as

258
00:15:14.800 --> 00:15:18.880
Microsoft did for X and
a. So you can expect

259
00:15:18.880 --> 00:15:22.120
everything to work the same
and the API is, are

260
00:15:22.120 --> 00:15:25.750
the same. So that's really
what gets you the power

261
00:15:25.750 --> 00:15:28.390
to go across platform because
you don't have to rewrite

262
00:15:28.390 --> 00:15:33.100
any code other than, you
know, input or minor things

263
00:15:33.100 --> 00:15:36.340
like how you save your
game files and so forth.

264
00:15:38.320 --> 00:15:40.360
Hey, this is Scott and
I am really excited about

265
00:15:40.360 --> 00:15:42.760
these guys. This is a
special offer from our friends

266
00:15:42.760 --> 00:15:47.200
at DN simple, true story.
Carl reached out to Dan

267
00:15:47.200 --> 00:15:49.810
simple to ask them if
they wanted to advertise with

268
00:15:49.810 --> 00:15:52.570
Hansel minutes, because we liked
them that much. I was

269
00:15:52.570 --> 00:15:54.070
a kind of a funny
thing. They didn't come to

270
00:15:54.070 --> 00:15:56.380
us. We went to them
because we think DNSimple is

271
00:15:56.380 --> 00:15:59.170
great. It's a hosted DNS
service that you use to

272
00:15:59.170 --> 00:16:02.560
manage your domain names. Prices
started about $3 a month

273
00:16:02.560 --> 00:16:05.890
for up to 10 managed
domains. You can also use

274
00:16:05.890 --> 00:16:09.880
DNS simple to register domain
names, purchase SSL certificates. All

275
00:16:09.880 --> 00:16:12.370
of my domains have been
moved off of GoDaddy and

276
00:16:12.370 --> 00:16:15.160
are now at DN simple.
I like it because there's

277
00:16:15.160 --> 00:16:17.950
an application on my iPhone.
I can manage my DNS

278
00:16:17.950 --> 00:16:20.830
from there. There's an API
that you can use. The

279
00:16:20.830 --> 00:16:23.590
best part actually is these
one click services. So you

280
00:16:23.590 --> 00:16:25.870
can register a domain, get
it up and running in

281
00:16:25.870 --> 00:16:28.270
a couple of minutes and
then go in and apply

282
00:16:28.450 --> 00:16:31.300
services to it. So you
can say this domain is

283
00:16:31.300 --> 00:16:33.640
for Google apps and this
domain is forget. Hub pages

284
00:16:33.640 --> 00:16:36.910
in this domain is preposterous,
and they know the DNS

285
00:16:36.910 --> 00:16:39.970
records and set them up
for you. Even for something

286
00:16:39.970 --> 00:16:42.820
as complicated as Google apps,
there's like 11 different settings.

287
00:16:42.820 --> 00:16:45.250
You need to create, they
handle it all for you.

288
00:16:45.550 --> 00:16:48.670
So here's the deal. They've
got a special 30 day

289
00:16:48.670 --> 00:16:52.060
trial. You can cancel at
any time, but Hansel minutes

290
00:16:52.060 --> 00:16:56.200
listeners get three months of
free DNS service. So you've

291
00:16:56.200 --> 00:17:02.170
got a DN, simple.com/h M
special deal for Hansel minutes.

292
00:17:02.170 --> 00:17:07.750
Listeners just visit DN simple.com/h
M Hanselman. His listeners get

293
00:17:07.750 --> 00:17:11.290
three months of free DNS
service love these guys. They're

294
00:17:11.290 --> 00:17:18.250
so nice. DN, simple hosted
DNS, check them out. So

295
00:17:18.250 --> 00:17:21.760
this reminds me of, of
wine and the idea behind

296
00:17:21.760 --> 00:17:25.510
wine, the wine is not
an emulator. It's the windows

297
00:17:26.830 --> 00:17:30.460
kind of thunking layer over
for, for Linux. So you

298
00:17:30.460 --> 00:17:35.980
can run some windows applications
on, you know, unchanged on

299
00:17:35.980 --> 00:17:40.990
a Linux machine because it
translates at real time. You

300
00:17:40.990 --> 00:17:43.990
know, the calls that a
wind 32 developer would make

301
00:17:43.990 --> 00:17:46.300
into an appropriate Linux calls.
So you're saying that you're

302
00:17:46.300 --> 00:17:49.830
making X and a direct
X calls and it's them

303
00:17:49.830 --> 00:17:56.930
into open jail. And so
they, they, of course, mano

304
00:17:56.930 --> 00:18:01.160
game has, you know, a
wide range of, of code

305
00:18:01.160 --> 00:18:04.460
changes between each platform, but
they provide the same API

306
00:18:05.390 --> 00:18:11.780
to the developer using Monica,
which is amazing. How much

307
00:18:11.810 --> 00:18:15.680
code are you able to
reuse? I've heard people writing,

308
00:18:16.760 --> 00:18:19.700
you know, what I call
text boxes, over data type

309
00:18:19.700 --> 00:18:23.930
business applications in, in Moto
and going from platform to

310
00:18:23.930 --> 00:18:27.020
platform. And they, they always
talk about reusing the view

311
00:18:27.020 --> 00:18:30.080
model, which is kind of
the lowest common denominator. You

312
00:18:30.080 --> 00:18:33.080
know, here's a bunch of
structures I can reuse those.

313
00:18:33.080 --> 00:18:35.540
So you might get 20,
30% reuse, but what kind

314
00:18:35.540 --> 00:18:36.890
of reuse are you guys
getting? Cause you have a

315
00:18:36.890 --> 00:18:40.700
lot of platforms to support,
Right? We're actually getting around

316
00:18:40.700 --> 00:18:45.950
95% and the, the different
code is, are things like,

317
00:18:46.700 --> 00:18:49.700
Oh, we have a upgrade
to pro button here. So

318
00:18:49.700 --> 00:18:53.120
the link is different or,
you know, an iOS, we

319
00:18:53.210 --> 00:18:57.440
saved the game in a
completely different place when our

320
00:18:57.440 --> 00:19:01.850
T for example. And so
like, if, if it was

321
00:19:01.850 --> 00:19:04.130
just a regular windows app,
we might save the game

322
00:19:04.130 --> 00:19:07.250
in my documents or someplace,
you know, you would expect,

323
00:19:07.430 --> 00:19:10.700
well, iOS has a built
in way to save settings

324
00:19:10.700 --> 00:19:12.620
for apps that we want
to take advantage of that

325
00:19:12.620 --> 00:19:15.860
where we can, it also
backs up to iCloud that

326
00:19:15.860 --> 00:19:20.960
way. That seems almost impossible
if I, if do I,

327
00:19:21.020 --> 00:19:22.490
can I look at this
in visual studio? And I

328
00:19:22.490 --> 00:19:27.020
would see a solution Explorer
with like a core engine

329
00:19:27.230 --> 00:19:30.020
that is like a, for
lack of a better phrase,

330
00:19:30.020 --> 00:19:32.480
a portable library, a mano
library, and then the rest

331
00:19:32.480 --> 00:19:36.050
of it would be targets.
Well, it's, it's a little

332
00:19:36.050 --> 00:19:40.430
more complicated. There is a
core library. And then for

333
00:19:40.430 --> 00:19:44.900
each platform, there is a,
a project to run the

334
00:19:44.900 --> 00:19:48.260
game in that platform. But
we do have, we have

335
00:19:48.260 --> 00:19:51.290
to duplicate the core library
and kind of link in

336
00:19:51.290 --> 00:19:54.890
the different files. So, you
know, like we might have

337
00:19:54.890 --> 00:19:57.080
an, an X and a
one where all the files

338
00:19:57.080 --> 00:20:00.140
are actually kept. Well, the
iOS one would have the

339
00:20:00.140 --> 00:20:04.160
core library and linked to
all the files. That way

340
00:20:04.160 --> 00:20:06.710
you don't commit the file
multiple times. And you can,

341
00:20:07.250 --> 00:20:11.060
you can use a preprocessor
statements to do things on

342
00:20:11.060 --> 00:20:14.540
different platforms, if you need
to, which for the most

343
00:20:14.540 --> 00:20:17.420
part, it hasn't been, we
haven't had to do that

344
00:20:17.420 --> 00:20:22.280
a whole lot. So this
is not binary reuse in

345
00:20:22.280 --> 00:20:25.730
the sense of, I compiled
the stick man dot Corp,

346
00:20:25.730 --> 00:20:28.280
and everyone just talks to
that DLL, this is its

347
00:20:28.280 --> 00:20:31.700
source level reuse. It's still
95%, but this allows you

348
00:20:31.700 --> 00:20:35.840
to kind of if Def
your way around things. And

349
00:20:35.840 --> 00:20:39.050
part of the reason for
that is on iOS monitor

350
00:20:39.200 --> 00:20:43.790
actually compiled down the same
way an objective C app

351
00:20:43.790 --> 00:20:48.400
would. So you can't use
a straight net library just

352
00:20:48.400 --> 00:20:53.200
on iOS. You do need
to recompile it, but some

353
00:20:53.200 --> 00:20:55.120
of the other platforms would
be able to reuse it.

354
00:20:55.120 --> 00:20:59.080
Like if it was just
a windows standard windows app,

355
00:21:00.640 --> 00:21:04.270
it could reference the, when
our T library, for example,

356
00:21:06.840 --> 00:21:09.900
There was a conference a
couple of weeks ago that

357
00:21:10.200 --> 00:21:13.980
used to be called space
and was renamed to monkey

358
00:21:13.980 --> 00:21:17.580
space. And it's, it's an,
it's a cross platform, an

359
00:21:17.580 --> 00:21:24.240
opensource.net conference. And it's, it's
organized by a nonprofit called

360
00:21:24.240 --> 00:21:27.450
monkey square and in an
interest of full disclosure, I'm

361
00:21:27.450 --> 00:21:33.360
on the board of the
monkey square nonprofit organization, which

362
00:21:33.360 --> 00:21:34.890
is not related to why
you guys are on the

363
00:21:34.890 --> 00:21:40.710
show. It's coincidence at monkey
space. Miguel de Caza said,

364
00:21:41.280 --> 00:21:44.490
he thought it was really
cool. That C-sharp is basically

365
00:21:44.490 --> 00:21:48.690
the only core only language
that lets you target all

366
00:21:48.690 --> 00:21:52.020
the app stores. And I
thought what a good quote

367
00:21:52.020 --> 00:21:54.450
and what a, what a
strong statement. What do you,

368
00:21:54.450 --> 00:21:55.980
what do you think about
that? The idea that this

369
00:21:55.980 --> 00:21:58.140
language is how you target
every app store that is

370
00:21:58.140 --> 00:22:03.900
out there. Yeah. I agree
with that. Even in just

371
00:22:03.900 --> 00:22:07.230
making like a line of
business application, you can like,

372
00:22:07.230 --> 00:22:09.900
we've been able to reuse
around 50% of the code

373
00:22:11.570 --> 00:22:14.880
that is all dependent on
how many, how complicated your

374
00:22:14.880 --> 00:22:18.390
UI is, because you do
have to reuse, rewrite the

375
00:22:18.390 --> 00:22:23.550
UI on each platform, but
using C sharp. I mean,

376
00:22:23.550 --> 00:22:27.810
you can share so much
code and every line of

377
00:22:27.810 --> 00:22:29.790
code that is shared, you
don't have to write three

378
00:22:29.790 --> 00:22:34.980
times. Cause every day we
have a new platform coming

379
00:22:34.980 --> 00:22:39.840
out. We have windows eight,
Metro, we have desktop app,

380
00:22:40.980 --> 00:22:44.760
we have Android iOS and,
and who knows down the

381
00:22:44.760 --> 00:22:49.800
road, what will happen When,
when you're writing a game

382
00:22:49.800 --> 00:22:51.690
you're throwing, you're kind of
throwing pixels up on a

383
00:22:51.690 --> 00:22:54.570
screen. So really screen size,
I think would be the

384
00:22:54.570 --> 00:22:56.430
hardest once you've got the
pixel on the screen, it's

385
00:22:56.430 --> 00:22:58.740
really just a matter of
dealing with, with screen size,

386
00:22:59.070 --> 00:23:01.080
with a business app, you
know, you really kind of

387
00:23:01.080 --> 00:23:04.830
are rewriting the UI. You
don't want to write something

388
00:23:05.130 --> 00:23:06.930
and you can't really write
a UI that would look

389
00:23:06.930 --> 00:23:08.940
the same on an iPad
versus an Android, unless you

390
00:23:08.940 --> 00:23:14.400
were using some, cross-platform a
set of widgets. Otherwise then

391
00:23:14.400 --> 00:23:17.220
you're back in the Java
days where you, you write

392
00:23:17.220 --> 00:23:21.480
it once and it looks
like Java everywhere, Right? So

393
00:23:21.480 --> 00:23:24.510
you want to be able
to take advantage of the

394
00:23:24.510 --> 00:23:29.580
native controls that each platform
support. So on iOS, you

395
00:23:29.580 --> 00:23:31.770
want to use all the
UI kit controls, the nice

396
00:23:32.070 --> 00:23:35.310
table views and buttons and
everything that feels like iOS,

397
00:23:36.120 --> 00:23:37.860
but you want to do
that on Android as well.

398
00:23:38.280 --> 00:23:42.960
So I think this really
is the best sharp is

399
00:23:42.960 --> 00:23:47.420
the best solution for using
native controls and sharing code

400
00:23:47.420 --> 00:23:50.020
at the same time. Do
you know of any other

401
00:23:50.410 --> 00:23:52.810
game developers in your kind
of like, I assume you

402
00:23:52.810 --> 00:23:54.850
guys all hang out, like,
I, I imagine it's like

403
00:23:54.850 --> 00:23:57.250
top gun and then after
work, you all go to

404
00:23:57.490 --> 00:24:00.160
the game developer bar and
you hang out with all

405
00:24:00.160 --> 00:24:02.470
the other game developers and
then like, there is like

406
00:24:02.470 --> 00:24:06.630
the ice man and there's
goose and everybody. And do

407
00:24:06.640 --> 00:24:08.470
you talk to these other
game developers and they go,

408
00:24:08.470 --> 00:24:10.450
Hey, you guys are using
C sharp, your bunch of

409
00:24:10.450 --> 00:24:17.860
punches. Well, we are traditionally
just a custom software company

410
00:24:17.860 --> 00:24:24.580
here. So this is our
first foray into gaming. Now

411
00:24:24.580 --> 00:24:27.280
we do, we do talk
a lot with Xamarin guide,

412
00:24:29.200 --> 00:24:33.610
but that is, they're not
necessarily game developers. So I

413
00:24:33.610 --> 00:24:36.610
don't know if we really
have heard much from guys

414
00:24:36.610 --> 00:24:39.040
saying, Oh, you gotta do
it in C plus plus,

415
00:24:39.040 --> 00:24:41.440
or how can you make
a game and see if

416
00:24:41.440 --> 00:24:45.550
we haven't really met anyone
who had that opinion yet?

417
00:24:47.200 --> 00:24:48.940
Well, I understand that that
there's a lot of push

418
00:24:48.940 --> 00:24:52.990
towards doing C plus plus,
and that windows eight has

419
00:24:52.990 --> 00:24:59.470
a renewed, it has renewed
interest in native development and

420
00:24:59.680 --> 00:25:02.350
they're making, you know, making
C plus plus more accessible.

421
00:25:02.350 --> 00:25:05.860
And I wonder if given
that you've got objective C

422
00:25:05.860 --> 00:25:08.500
on the iOS devices, how
are people porting all these

423
00:25:08.500 --> 00:25:10.300
games from place to place?
You know, I'm kind of

424
00:25:10.300 --> 00:25:14.110
imagining in my mind, like,
okay, she'll someone wrote angry

425
00:25:14.110 --> 00:25:17.680
birds in iOS, and now
it's on, on out's on

426
00:25:17.680 --> 00:25:22.030
windows. That's going to be
somebody rewrote that thing. Well,

427
00:25:22.030 --> 00:25:23.590
you guys are gonna be
able to move faster, I

428
00:25:23.590 --> 00:25:26.260
assume, and even add levels
to your stuff in a

429
00:25:26.260 --> 00:25:30.880
pretty easy, pretty easy way.
Right? Yeah. I think traditional

430
00:25:30.880 --> 00:25:33.940
games, they do have to
rewrite most of the game

431
00:25:33.940 --> 00:25:36.940
on each platform. Like I
think some of them do

432
00:25:36.940 --> 00:25:40.450
take advantage of scripting. Like
they might use Lula for

433
00:25:40.450 --> 00:25:44.230
example, some of the logic
and the levels and so

434
00:25:44.230 --> 00:25:46.990
forth, but they would still
have to rewrite the engine

435
00:25:46.990 --> 00:25:50.050
for each platform so that
they would have a job

436
00:25:50.170 --> 00:25:54.310
one on Android and an
objective C one on iOS.

437
00:25:55.180 --> 00:25:57.340
And it is a lot
of work to go that

438
00:25:57.340 --> 00:26:01.480
route. Yeah. It does seem
like that idea of a

439
00:26:01.510 --> 00:26:04.660
core engine that speaks a
scripting language kind of started

440
00:26:04.660 --> 00:26:09.970
with that, a scum S
C U M M Lucas

441
00:26:09.970 --> 00:26:13.540
arts kind of style and
things like King's quest where

442
00:26:13.540 --> 00:26:15.670
you've got all of these
assets and then you've got

443
00:26:15.670 --> 00:26:17.740
this core engine and then
you want to make it

444
00:26:17.740 --> 00:26:21.520
really easy to describe interactions.
Do you have any other

445
00:26:21.520 --> 00:26:25.210
languages other than C sharp
in the application? It's just

446
00:26:25.210 --> 00:26:28.660
the sharp, if, if you
would consider everything we define

447
00:26:28.660 --> 00:26:33.010
and slash as a language,
it is, it is more

448
00:26:33.010 --> 00:26:36.100
of like a big blob
of data, like, you know,

449
00:26:38.350 --> 00:26:42.310
right, right. But yeah, C
sharp is really the only

450
00:26:42.310 --> 00:26:46.860
language we're to use down
the road. We might consider

451
00:26:46.860 --> 00:26:51.000
writing a JavaScript engine to
just run this game in

452
00:26:51.000 --> 00:26:55.490
the browser normally, which that
is definitely a possibility. So

453
00:26:55.490 --> 00:26:57.590
the separation is that clear,
like you could have the

454
00:26:57.590 --> 00:27:00.860
asset blob and then have
an engine bring that down

455
00:27:00.860 --> 00:27:04.430
and it could conceivably start
using canvas rather than <inaudible>.

456
00:27:05.480 --> 00:27:10.220
Yeah, that's correct. When, when
you guys were working on,

457
00:27:10.220 --> 00:27:12.590
on, on windows, and this
is just my own curiosity,

458
00:27:12.590 --> 00:27:14.810
because I, I have an
Android, like I don't have

459
00:27:14.810 --> 00:27:17.030
an Android. I have an
HP touchpad that I routed.

460
00:27:17.690 --> 00:27:19.880
I have an iPad. So
I'm familiar with Android and

461
00:27:20.150 --> 00:27:23.780
iOS. I'm just now getting
familiar with windows eight. I've

462
00:27:23.780 --> 00:27:25.250
done a couple videos on
how to use it and

463
00:27:25.250 --> 00:27:26.720
stuff, but I don't know
a lot about it from

464
00:27:26.720 --> 00:27:30.290
a gaming perspective. And I've
heard that people say, when

465
00:27:30.290 --> 00:27:31.790
you're in full screen, you
know, when you're in a

466
00:27:31.790 --> 00:27:35.240
windows store app, rather than
a desktop app, there's concern

467
00:27:35.240 --> 00:27:37.670
about not having the ability
to do certain things like

468
00:27:37.670 --> 00:27:40.910
you're in some kind of
a sandbox, did you have

469
00:27:40.910 --> 00:27:43.040
to bump up against any
ideas, like any issues like

470
00:27:43.040 --> 00:27:47.900
that? Any, any security or
sandboxing issues where you wanted

471
00:27:47.900 --> 00:27:50.030
to do something, but it
simply wasn't available in the

472
00:27:50.030 --> 00:27:54.680
API. Yeah. For the most
part, you know, this game

473
00:27:54.680 --> 00:27:58.340
doesn't do anything to your
system as far as needing

474
00:27:58.340 --> 00:28:02.300
to, you know, interact with
your desktop. So, you know,

475
00:28:02.300 --> 00:28:05.630
the only thing that is
persistent is saving your safe

476
00:28:05.630 --> 00:28:09.830
game. There is, there are
clear API for saving files

477
00:28:10.540 --> 00:28:14.870
and a windows store app.
So that, that would be

478
00:28:15.200 --> 00:28:18.530
a code that we'd have
to rewrite just the act

479
00:28:18.530 --> 00:28:23.390
of saving our saved game
against the desktop app, which

480
00:28:23.510 --> 00:28:27.890
we would just save a
file somewhere. Basically. I mentioned,

481
00:28:27.890 --> 00:28:30.320
I cried though, do you
save to iCloud on iPad

482
00:28:30.320 --> 00:28:32.420
so that I can move
between iPhone and iPad and

483
00:28:32.420 --> 00:28:37.850
have my level maintained? Yes.
There is a standard settings

484
00:28:37.850 --> 00:28:41.990
API that every app can
take advantage of on iOS.

485
00:28:42.680 --> 00:28:45.470
So we just kind of
stuff, your saved game information

486
00:28:45.470 --> 00:28:48.650
into the iOS settings, which
is kind of backed up

487
00:28:48.650 --> 00:28:52.700
by a cloud and so
forth. Is it backed up

488
00:28:52.700 --> 00:28:54.470
by a cloud? The reason
I ask is that like

489
00:28:54.470 --> 00:28:56.780
angry birds is like the
most popular app on the

490
00:28:56.780 --> 00:29:00.110
planet, except I have to
keep restarting it every time

491
00:29:00.110 --> 00:29:02.420
I moved to a new
device. I wonder if I

492
00:29:02.420 --> 00:29:04.400
could move if there was
a world where I could

493
00:29:04.400 --> 00:29:06.740
move amongst all of these
devices and have my game

494
00:29:06.760 --> 00:29:11.930
stay the same. I think
that's possible the way our

495
00:29:11.930 --> 00:29:15.740
games implemented. I don't, I'm
not sure if your saved

496
00:29:15.740 --> 00:29:20.240
game would pull over just
like angry birds, but That'd

497
00:29:20.240 --> 00:29:21.770
be a cool, well, the
angry birds doesn't do it.

498
00:29:21.770 --> 00:29:27.230
That's why I'm angry about
it either. I'm pretty upset

499
00:29:27.230 --> 00:29:30.410
about it actually. So I
could save a like on

500
00:29:30.410 --> 00:29:32.510
windows eight. I could I
save in the, my saved

501
00:29:32.530 --> 00:29:36.830
game in the, in SkyDrive
in a cloud. Yeah. I

502
00:29:36.830 --> 00:29:41.200
think theoretically you could, I
think that's something we'd have

503
00:29:41.200 --> 00:29:43.720
to add as a feature
To the game. I don't

504
00:29:43.720 --> 00:29:48.730
think there's a straightforward API
for doing that, but I

505
00:29:48.880 --> 00:29:53.080
certainly think that's a great
idea. Yeah, absolutely. So what's

506
00:29:53.080 --> 00:29:56.140
next for you guys? Are
you going to create like

507
00:29:56.170 --> 00:29:58.540
a, I mean, you know,
Phil had this great idea

508
00:29:58.540 --> 00:30:00.430
and you guys have put
it together with this great

509
00:30:00.430 --> 00:30:03.460
team. Now it seems to
me like it's, it's time

510
00:30:03.460 --> 00:30:06.100
to go kind of a
little big planet and start

511
00:30:06.190 --> 00:30:08.320
letting me draw my own
level and then share it

512
00:30:08.320 --> 00:30:19.690
with my friend tossed around
ideas like that. Maybe the

513
00:30:19.690 --> 00:30:25.030
world is still adding some
depth to the game, like

514
00:30:25.030 --> 00:30:27.940
a flat land, a little,
little, little, one dimension, two

515
00:30:27.940 --> 00:30:31.960
dimensional guy finds himself in
the big, big world or

516
00:30:31.960 --> 00:30:35.710
paper Mario. That's a good
example, plays around with dimensions

517
00:30:35.710 --> 00:30:44.490
in that game. Yeah, we
have, we've had, we really

518
00:30:44.490 --> 00:30:47.970
have talked quite a bit
about letting the player design

519
00:30:47.970 --> 00:30:50.940
more of their world and
interact more with it. And

520
00:30:50.940 --> 00:30:55.800
that's really a direction we
would like to go, especially

521
00:30:55.800 --> 00:31:01.110
because the, the stick man
concept just really lends itself

522
00:31:01.110 --> 00:31:04.050
to creation. That's kinda what
it's all about. So that's

523
00:31:04.050 --> 00:31:06.570
really a direction that we've
kind of been talking about

524
00:31:06.570 --> 00:31:09.720
for, especially the last couple
of weeks after we finished

525
00:31:09.720 --> 00:31:11.640
up this game, we've been
kind of talking about what,

526
00:31:11.640 --> 00:31:13.830
where to go next. And
that's been a big discussion

527
00:31:13.830 --> 00:31:18.270
point. I think what's great
about it from a gaming

528
00:31:18.330 --> 00:31:21.300
from freshman, from a gaming
perspective, but from an accessibility

529
00:31:21.300 --> 00:31:25.080
perspective is that it's not
intimidating. Like there's no judgment.

530
00:31:25.080 --> 00:31:26.910
You draw a stick, man.
Everyone can draw a stick,

531
00:31:26.910 --> 00:31:29.400
man. And then you don't
drop him into a world

532
00:31:29.400 --> 00:31:33.900
where everything is perfect, 3d
rendered art. You know what

533
00:31:33.900 --> 00:31:35.910
I mean? It's like, it
feels like other people drew

534
00:31:35.910 --> 00:31:38.220
stick men too. You know,
some of the artists sophisticated,

535
00:31:38.220 --> 00:31:41.370
like the monster, some is
pretty basic like rocks and

536
00:31:41.370 --> 00:31:44.790
things. And you don't feel
like you're being judged as

537
00:31:44.790 --> 00:31:47.880
an artist. So I like
the idea of being able

538
00:31:47.880 --> 00:31:50.190
to either to have multiplayer
stick, man, where you could

539
00:31:50.190 --> 00:31:52.620
have your friends run around
in there. I mean, you

540
00:31:52.620 --> 00:31:54.120
really could go and do
a lot of stuff. You've

541
00:31:54.120 --> 00:31:56.910
got the whole, like the
Sims, you know, the stick

542
00:31:56.910 --> 00:31:59.010
man version of the Sims.
There's a lot of really

543
00:31:59.010 --> 00:32:00.810
fun things you could do.
And being able to do

544
00:32:00.810 --> 00:32:03.210
it across devices is even
better. If I could play

545
00:32:03.210 --> 00:32:06.870
on my windows eight machine
while my kids are simultaneously

546
00:32:06.870 --> 00:32:10.770
on my iPad, that would
be fun. Yeah, absolutely. Yeah.

547
00:32:10.770 --> 00:32:13.500
I think those are definitely
directions that we, we, we

548
00:32:13.500 --> 00:32:15.450
want to go into and
they're definitely directions that we're

549
00:32:15.870 --> 00:32:19.320
researching and looking at right
now. I think the multiplayer,

550
00:32:19.320 --> 00:32:22.590
there's a huge amount of
opportunity. The neat thing about

551
00:32:22.590 --> 00:32:26.310
this is it's just such
a unique concept that everyone

552
00:32:26.310 --> 00:32:31.140
we talk to has, has
all sorts of visions for

553
00:32:31.140 --> 00:32:34.110
it. Just because it is
such a creative thing that

554
00:32:34.110 --> 00:32:35.730
a lot of people have
just never really thought about

555
00:32:35.730 --> 00:32:40.340
or seen before. Was it
important to you To get

556
00:32:40.340 --> 00:32:42.170
this on as many devices
as possible? I mean, a

557
00:32:42.170 --> 00:32:46.370
lot of popular games started
on iPhone and iPad and

558
00:32:46.370 --> 00:32:48.920
then we waited a year
or two as they moved

559
00:32:48.920 --> 00:32:51.860
their way around angry birds
being the obvious example. But

560
00:32:51.860 --> 00:32:54.950
you're launching on everything all
the time, right off the

561
00:32:54.950 --> 00:32:58.280
bat. Was that important? Like
did you say I want

562
00:32:58.280 --> 00:33:02.300
it everywhere. That's been a
big thing with this game.

563
00:33:03.560 --> 00:33:08.420
When we previously launched our,
we created some iOS apps

564
00:33:08.420 --> 00:33:12.560
that basically just showed the
Stickman website in an app

565
00:33:13.040 --> 00:33:15.560
and we just had it
on iOS. And we showed

566
00:33:15.560 --> 00:33:20.630
that at the South by
Southwest conference last year or

567
00:33:20.750 --> 00:33:25.910
the beginning of this year
and a huge number of

568
00:33:25.910 --> 00:33:28.520
people ask us why we
hadn't developed it for Android.

569
00:33:28.520 --> 00:33:31.910
And so that was really,
that's when we started really

570
00:33:31.910 --> 00:33:33.680
thinking about, okay, we need
to make a new game

571
00:33:33.680 --> 00:33:35.390
and we need to make
it where it's going to

572
00:33:35.390 --> 00:33:38.780
be on all the platforms
because that's what the customers

573
00:33:38.780 --> 00:33:42.350
want. That was one of
our biggest goals. When we

574
00:33:42.350 --> 00:33:45.530
started making this game. Did
you talk to the Microsoft

575
00:33:45.530 --> 00:33:47.360
guys at all or work
with them? Was it important

576
00:33:47.360 --> 00:33:50.530
to be on windows eight
at lunchtime? Yeah, we actually

577
00:33:50.530 --> 00:33:56.200
did a, we were reached
out by a developer group

578
00:33:56.200 --> 00:33:59.380
in Chicago. They're kind of
close to where we are,

579
00:33:59.380 --> 00:34:04.390
but basically they wanted to
see if it was possible

580
00:34:04.390 --> 00:34:07.540
to get this game on
launch date for windows eight.

581
00:34:08.320 --> 00:34:11.620
And they've helped us out
as far as making sure

582
00:34:11.620 --> 00:34:15.460
we're ready for the store
assisted maybe with some design

583
00:34:15.460 --> 00:34:19.600
ideas or there are a
few things in windows eight,

584
00:34:19.600 --> 00:34:24.340
they might consider taking advantage
of like there's an app

585
00:34:24.370 --> 00:34:28.180
bar that pops out from
the side so forth, but

586
00:34:28.180 --> 00:34:30.280
you know, they have helped
us in getting ready for

587
00:34:30.280 --> 00:34:34.450
windows. So you're available now
in the, in the store.

588
00:34:34.450 --> 00:34:36.580
People can go up and
check you out and download

589
00:34:36.580 --> 00:34:38.950
you. Now, is there, is
there a trial or what's

590
00:34:38.950 --> 00:34:42.040
the initial pricing? There are
two versions of the game.

591
00:34:42.040 --> 00:34:45.660
There's a, a free version
with three levels and it

592
00:34:45.670 --> 00:34:49.390
does, it is ad supported,
but then the full version

593
00:34:49.690 --> 00:34:54.040
has 14 levels and no
ads or anything. And the,

594
00:34:54.160 --> 00:34:58.900
the full version is 99 cents
for iPhone. But then like

595
00:34:58.900 --> 00:35:04.930
windows eight, an iPad. It's
a dollar 99. Right? Cool.

596
00:35:04.990 --> 00:35:06.610
Well, that's so great. I
wish you guys all the

597
00:35:06.610 --> 00:35:09.790
best. This is exciting. And
I'm hearing kind of underneath

598
00:35:09.790 --> 00:35:11.800
all of this. You're saying
it's ready to go. Mano

599
00:35:11.800 --> 00:35:16.210
game is something that we
can start doing. That's correct

600
00:35:19.240 --> 00:35:21.190
To you guys. And folks
can check this out at

601
00:35:21.730 --> 00:35:24.280
Epic dot draw stick, man.com.
I'm sure that they can

602
00:35:24.730 --> 00:35:26.470
Google their brains out for
draw a stick, man. Cause

603
00:35:26.470 --> 00:35:28.780
you guys are taking over
the world on every platform

604
00:35:28.780 --> 00:35:33.070
available. Thanks for chatting with
me. This has been another

605
00:35:33.070 --> 00:35:35.500
episode of Hanselminutes and we'll
see you again next week.

