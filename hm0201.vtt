WEBVTT FILE

1
00:00:12.090 --> 00:00:17.580
From hanselminutes.com. It's Hanselman. It's
a weekly discussion with web

2
00:00:17.580 --> 00:00:22.560
developer and technologist Scott Hanselman.
This is Lawrence Ryan announcing show

3
00:00:22.560 --> 00:00:27.960
number two Oh one recorded
live Friday, February 12th, 2010. Support for

4
00:00:27.960 --> 00:00:31.560
Hanselman it's just provided by
Tellerik rad controls, the most

5
00:00:31.560 --> 00:00:35.130
comprehensive suite of components for
windows forms and asp.net web

6
00:00:35.130 --> 00:00:44.190
applications online@wwwdottelerik.com. In this episode,
Scott talks with Chris Hardy

7
00:00:44.250 --> 00:00:47.070
about mano touch and the
creation of an iPhone app.

8
00:00:49.190 --> 00:00:51.320
Hi, this is Scott Hanselman
and this is another episode

9
00:00:51.320 --> 00:00:54.020
of Hansel minutes. This is
episode two Oh one beginning

10
00:00:54.020 --> 00:00:55.850
of the next 200 lots
and lots of stuff to

11
00:00:55.850 --> 00:00:59.330
come. And today we're sitting
down with Chris Hardy, who

12
00:00:59.330 --> 00:01:01.580
is in fact calling in
from the UK. How's it

13
00:01:01.580 --> 00:01:07.970
going, Chris? I'm well, now,
Chris, you're an asp.net developer.

14
00:01:08.360 --> 00:01:09.830
You work for a company
in the UK called great

15
00:01:09.830 --> 00:01:13.070
Fridays, and you work on
asp.net MVC. You even have

16
00:01:13.070 --> 00:01:18.590
a weblog at weblogs.asp.net/chris Hardy,
but as I wander around

17
00:01:18.590 --> 00:01:25.610
on your weblogs.asp.net blog, I
see mano touch view, my

18
00:01:25.610 --> 00:01:28.970
motto touch session, mano touch
examples.com. Examples for want to

19
00:01:28.970 --> 00:01:33.500
touch sounds like you have
a night job. Yeah, that's

20
00:01:33.500 --> 00:01:37.250
kind of how it is
at the moment. And we

21
00:01:37.250 --> 00:01:40.850
had Miguel and some of
the folks from mano over

22
00:01:40.850 --> 00:01:42.830
to talk a little bit
about monotone, but maybe for

23
00:01:42.830 --> 00:01:45.590
folks that are not familiar
with that show, just give

24
00:01:45.590 --> 00:01:48.530
us a brief kind of
overview about what mano touch

25
00:01:48.530 --> 00:01:51.530
is and why are you
so passionate about it? Even

26
00:01:51.530 --> 00:01:57.800
though you're in an asp.net
developer by day, Kind of,

27
00:01:58.130 --> 00:02:00.890
I want to do.net development
on a map, and they've

28
00:02:00.890 --> 00:02:03.860
been kind of playing around
with NBC on the map,

29
00:02:03.920 --> 00:02:06.470
but it hasn't really gotten
to a stage where I

30
00:02:06.470 --> 00:02:10.340
really want to use something
that on a mat and

31
00:02:10.340 --> 00:02:13.040
when mountain such came along,
which is, you know, the

32
00:02:13.040 --> 00:02:17.150
open source implementation of, of
mano. And I can use

33
00:02:17.150 --> 00:02:20.150
that with, with the iPhone.
I feel great. It's a

34
00:02:20.150 --> 00:02:23.810
chance to use one map
to do.net work and who

35
00:02:23.810 --> 00:02:25.820
doesn't want to write it.
And I found out, so

36
00:02:25.820 --> 00:02:29.000
I thought that'd be a
good opportunity to start using

37
00:02:29.000 --> 00:02:33.770
my Mac as a, as
a.net machine. So what is

38
00:02:33.770 --> 00:02:36.380
involved to wa walk me
through the bill of lading

39
00:02:36.410 --> 00:02:38.450
of the things that I
would need to go and

40
00:02:38.450 --> 00:02:40.100
write an application and how
much do I need to

41
00:02:40.100 --> 00:02:42.080
know about max stuff and
how much am I really

42
00:02:42.080 --> 00:02:44.420
leveraging? Cause I think what's
interesting about your story is

43
00:02:44.420 --> 00:02:47.390
that you're in a, an
asp.net developer by day in

44
00:02:47.390 --> 00:02:49.130
the sense that that is
your day job, right? You're,

45
00:02:49.130 --> 00:02:53.660
you're not a necessarily a
Mac person. You're a professional

46
00:02:53.660 --> 00:02:57.260
paid dotted programmer. How much
of your skills are really

47
00:02:57.260 --> 00:03:00.850
coming from the.net framework and
knowledge, the managed managed code

48
00:03:00.850 --> 00:03:03.280
and C sharp. And how
much is this coming from?

49
00:03:03.280 --> 00:03:05.770
Some kind of subconscious and
Mack knowledge that you might

50
00:03:05.770 --> 00:03:10.860
have Say we were doing
kind of iPhone development. Lots

51
00:03:10.860 --> 00:03:14.370
of it does come from
knowing.net, but then you've also

52
00:03:14.370 --> 00:03:17.130
kind of got monitor touch
as a, as a kind

53
00:03:17.130 --> 00:03:20.700
of SDK and the, and
the framework that she, you

54
00:03:20.700 --> 00:03:23.100
kind of have to learn
as well as kind of

55
00:03:23.100 --> 00:03:27.480
learning, using your.net skills. So
if I was going from,

56
00:03:27.540 --> 00:03:31.410
so using web forms to
MBC, it's still using C

57
00:03:31.440 --> 00:03:34.080
sharp, but you have to,
then you have to learn

58
00:03:34.080 --> 00:03:36.750
the framework. What is required
to do this? I need

59
00:03:36.750 --> 00:03:39.990
to download what on what
machine walk me through, walk

60
00:03:39.990 --> 00:03:42.420
me through what's necessary. Yeah.
So you need to have

61
00:03:42.420 --> 00:03:45.810
a Intel map to start
off with. So if you've

62
00:03:45.810 --> 00:03:50.790
got power PC knock, unfortunately
what, and that's Apple restriction

63
00:03:50.790 --> 00:03:53.910
that they put on. So
what you first need to

64
00:03:53.910 --> 00:03:57.270
do is you need to
download the, the iPhone SDK

65
00:03:57.690 --> 00:04:01.980
from the Apple store, from
the Apple site, even, and

66
00:04:01.980 --> 00:04:05.790
then you go on the
Nobel website, you download mano

67
00:04:05.970 --> 00:04:09.120
Justin through that 2.6 at
the moment you downloaded mano

68
00:04:09.120 --> 00:04:13.530
develop, which is essentially visual
studio. And then you download

69
00:04:13.530 --> 00:04:16.920
the monitor touch framework, get
that installed. And then your,

70
00:04:17.010 --> 00:04:20.070
you did today. And how
much of this cost me

71
00:04:20.070 --> 00:04:22.860
and how much of this
is open source. So the

72
00:04:22.860 --> 00:04:27.090
open source parts, Manoa, and,
and monitor developed. So you

73
00:04:27.090 --> 00:04:31.950
can use that to create
a web forms sites as

74
00:04:31.950 --> 00:04:38.430
the.net MVC sites, we've monitored.
You either have to pay

75
00:04:38.460 --> 00:04:42.180
for, for a license, or
you can use the evaluation

76
00:04:42.270 --> 00:04:45.690
version, which limits you to,
to some things in terms

77
00:04:45.690 --> 00:04:47.520
of you can't put it
on the device. So you

78
00:04:47.520 --> 00:04:49.410
can, you can at least
develop most of your app

79
00:04:49.890 --> 00:04:54.690
kind of without having to
pay anything upfront. What is

80
00:04:54.690 --> 00:04:57.270
this framework look like? I
mean, is this, is this

81
00:04:57.270 --> 00:05:00.750
file new iPhone app? Or
do I make a WinForms

82
00:05:00.750 --> 00:05:04.380
app? And then add some
references. I want to juxtapose

83
00:05:04.380 --> 00:05:07.230
it to the existing ways
we do stuff Done with,

84
00:05:07.890 --> 00:05:10.560
with one of the developers,
if they've created an iPhone

85
00:05:10.590 --> 00:05:13.980
add in for it. So
you guys file name and

86
00:05:13.980 --> 00:05:16.680
then create a new iPhone
project. And that kind of

87
00:05:17.040 --> 00:05:20.160
puts a lots of, kind
of the underlying code that

88
00:05:20.160 --> 00:05:23.820
you need to load up
the app onto the, onto

89
00:05:23.820 --> 00:05:27.570
the device by default. So
you don't have to kind

90
00:05:27.570 --> 00:05:32.490
of worry about setting that
up from scratch. Is there

91
00:05:32.490 --> 00:05:35.670
a base form or, I
mean, I know that the

92
00:05:35.670 --> 00:05:40.230
iPhone has a number of
UI metaphors that are very

93
00:05:40.230 --> 00:05:42.330
specific. They're the way that
they do their lists, their

94
00:05:42.330 --> 00:05:45.600
sliding panels, or do these,
do these feel like controls?

95
00:05:45.600 --> 00:05:49.020
I pull over from a
toolbox. Yeah. So you, you

96
00:05:49.020 --> 00:05:52.140
probably won't want to use
a toolbox. So there's a,

97
00:05:52.260 --> 00:05:54.900
there's a tool called interface
builder, which if you're an

98
00:05:54.900 --> 00:05:58.250
objective C programmer, you would
use X code, which is

99
00:05:58.250 --> 00:06:01.100
similar to kind of, is
it it's an IDE, so

100
00:06:01.100 --> 00:06:03.860
you can either use the
interface builder and that way

101
00:06:03.860 --> 00:06:07.160
you can kind of clicking
and drag controls onto that,

102
00:06:07.220 --> 00:06:11.450
like a designer surface. So
then you can also just

103
00:06:11.450 --> 00:06:14.000
do that in code if
you really want to. So

104
00:06:14.000 --> 00:06:17.660
what you use is you
basically use the monitoring framework,

105
00:06:18.050 --> 00:06:22.820
which has just basically bound
the objective C libraries that

106
00:06:22.820 --> 00:06:25.580
you had used in normal
life and development. So it

107
00:06:25.580 --> 00:06:30.910
works within a C sharp
in monotone. Okay. So if

108
00:06:30.910 --> 00:06:36.010
I'm understanding this correctly correctly,
I create my, my window,

109
00:06:36.010 --> 00:06:41.200
my zip in the interface
designer that creates the interface

110
00:06:41.200 --> 00:06:44.050
designer is not mano touch
specific. So that's creating objective,

111
00:06:44.050 --> 00:06:46.510
see stuff in the background
that I can choose not

112
00:06:46.510 --> 00:06:50.320
to look at. And then
I hook that up somehow

113
00:06:50.320 --> 00:06:52.660
with managed code. How do
I tell the managed code

114
00:06:52.660 --> 00:06:57.970
about the stuff that the
interface dissenter generated? So by

115
00:06:57.970 --> 00:07:01.120
default, what it will do
is it will, when you

116
00:07:01.120 --> 00:07:06.820
create an new controller view
controller, it will automatically add

117
00:07:06.820 --> 00:07:11.110
in a few methods, which
allow you to, it will

118
00:07:11.230 --> 00:07:15.400
for you, it will call
the VIB that links to

119
00:07:15.970 --> 00:07:18.910
links to your, your view
controller name. So you didn't

120
00:07:18.910 --> 00:07:22.690
have to worry about how
it connects to that zip.

121
00:07:23.500 --> 00:07:25.750
What you do need to
kind of worry about is

122
00:07:26.320 --> 00:07:29.350
how you get the information
that's on the zip lock

123
00:07:29.350 --> 00:07:31.990
into your, into your code.
And you do this by

124
00:07:31.990 --> 00:07:36.030
using outlet, which is kind
of a way of creating

125
00:07:36.030 --> 00:07:38.860
an instance variable was for
a class that you have,

126
00:07:39.730 --> 00:07:41.770
And the word you just
said was outlet. Is that

127
00:07:41.770 --> 00:07:46.090
correct? Our lab? Yeah. So
that's a, an Apple name.

128
00:07:47.350 --> 00:07:52.000
So basically controls are on
your design surface And are

129
00:07:52.210 --> 00:07:55.900
these just shared variables? So
what it will do is

130
00:07:55.900 --> 00:07:59.860
it will create a designer
dot CSS file, and that

131
00:07:59.860 --> 00:08:06.670
will create a partial partial
methods and, and, and your

132
00:08:06.670 --> 00:08:11.050
basically your, your instance, our
troubles for our class, and

133
00:08:11.050 --> 00:08:13.450
that will get generated when
you saved your zip. So

134
00:08:13.450 --> 00:08:15.070
you didn't even have to
write any of the type

135
00:08:15.070 --> 00:08:18.370
code. So if I were
to drop a button on

136
00:08:18.370 --> 00:08:21.400
the page and hook up
a button, click, it just

137
00:08:21.400 --> 00:08:23.090
took up a button click
event, or is it, is

138
00:08:23.090 --> 00:08:24.760
it, is it more than
that? And I just, cause

139
00:08:24.760 --> 00:08:26.590
what I'm used to doing
in.net is I drop a

140
00:08:26.590 --> 00:08:29.260
button. I double click, I
get my button click event,

141
00:08:29.530 --> 00:08:31.750
and then I can refer
to a text box, text

142
00:08:31.750 --> 00:08:34.450
box, one dot text. What's
the same thing look like

143
00:08:34.450 --> 00:08:37.870
in this world. So what
you would, you can either

144
00:08:37.870 --> 00:08:40.030
do it two ways. If
you're going to go down

145
00:08:40.030 --> 00:08:43.690
using, using a zip in
the interface builder, you would

146
00:08:43.720 --> 00:08:46.300
then create a, an action
as a, as a bottom

147
00:08:46.300 --> 00:08:49.300
pressure action. And you would
link that to, to a

148
00:08:49.300 --> 00:08:52.150
type of action that would
happen on a button. And

149
00:08:52.240 --> 00:08:54.490
in, in objective C, this
is known as touch up

150
00:08:54.490 --> 00:08:57.120
inside. So when you let
go of a button, it

151
00:08:57.120 --> 00:09:00.900
will follow this action. What
this does in your, in

152
00:09:00.900 --> 00:09:04.230
your designer file is it
will create a partial method,

153
00:09:04.560 --> 00:09:07.950
which you can then just
use within your view controller

154
00:09:08.520 --> 00:09:12.450
that will get fired whenever
the buttons pressed off. So

155
00:09:12.480 --> 00:09:14.520
you would, you want to,
in your view controller, you

156
00:09:14.530 --> 00:09:18.330
want create a partial method
to kind of get the

157
00:09:18.330 --> 00:09:21.870
action when it, when it's
fired off and on the

158
00:09:21.870 --> 00:09:24.540
contrast, what you can also
do is you can just

159
00:09:24.540 --> 00:09:28.560
write your buttoning code. So
you go, a button equals

160
00:09:29.010 --> 00:09:32.730
a UI button doc from
pipe, and then this way

161
00:09:32.760 --> 00:09:35.430
it will create a, a
default button that you can

162
00:09:35.430 --> 00:09:39.360
use. And then I'll not,
you've got C sharp style

163
00:09:39.540 --> 00:09:43.860
events. So you can just
use a touch up inside,

164
00:09:43.860 --> 00:09:46.650
for example, and then you
can create the delicate method,

165
00:09:46.950 --> 00:09:49.320
which will then fire off
when you click on the

166
00:09:49.320 --> 00:09:51.330
button. So you can do
it to kind of ways

167
00:09:51.950 --> 00:09:54.620
Are these events that are
attached to UI elements, part

168
00:09:54.620 --> 00:09:57.980
of mano touch, or are
they just projections of what's

169
00:09:57.980 --> 00:10:00.770
happening in objective C applied
to monitors? I mean like

170
00:10:00.800 --> 00:10:04.490
a button has a touch
up and a touchdown, but

171
00:10:04.580 --> 00:10:07.430
is that, is that a,
a, an Apple thing or

172
00:10:07.430 --> 00:10:10.490
is that a touch thing?
It's a, a, it's a

173
00:10:10.580 --> 00:10:13.100
more than such thing in
the way that it handles

174
00:10:13.100 --> 00:10:15.920
it. Normally what you would
do is you would create

175
00:10:15.920 --> 00:10:20.240
a delegate for the whole,
for the whole class. And

176
00:10:20.240 --> 00:10:24.320
then that way the, the,
the, the methods we get

177
00:10:24.320 --> 00:10:27.440
cooled for that delegate so
that it would take care

178
00:10:27.440 --> 00:10:30.590
of it. And as a
delegate in, in objective C,

179
00:10:31.040 --> 00:10:34.880
but just kind of ease
of kind of understanding it

180
00:10:34.880 --> 00:10:38.720
from adult in that point
of view, the C shot

181
00:10:38.720 --> 00:10:41.090
found events, but you can
also just create a new

182
00:10:41.090 --> 00:10:47.630
delegate and override methods that
way. Have you found that

183
00:10:47.630 --> 00:10:51.470
this is the easiest way
for a dotnet programmer to

184
00:10:51.470 --> 00:10:53.330
do an app like this?
Or have you ever found

185
00:10:53.330 --> 00:10:56.300
yourself digging into the objective
C and saying, I want

186
00:10:56.300 --> 00:10:59.970
to just do this in,
I don't know, crazy cuckoos

187
00:10:59.970 --> 00:11:04.100
C language. I just started
doing kind of objet to

188
00:11:04.100 --> 00:11:08.600
see before kind of monotypes
was around. And I only

189
00:11:08.600 --> 00:11:10.610
got so far, I managed
to put a button on

190
00:11:11.660 --> 00:11:13.820
so I can click on
it. So then I kinda

191
00:11:13.850 --> 00:11:17.210
got stuck and I found
it very difficult to predict

192
00:11:17.210 --> 00:11:20.840
kind of requests and, and
thinking about that. So in

193
00:11:20.840 --> 00:11:23.280
terms of, if I ever
wanted to do kind of

194
00:11:23.280 --> 00:11:26.780
object to see stuff, then
I don't ever see me

195
00:11:26.780 --> 00:11:29.570
going back in and try
and not just cause it's,

196
00:11:30.550 --> 00:11:33.200
it's, it's different way of
thinking. You still need to,

197
00:11:33.680 --> 00:11:36.710
you need to know the
cocoa touch framework, which is

198
00:11:36.710 --> 00:11:39.050
kind of the underlying, as
you said, there's kind of

199
00:11:39.050 --> 00:11:42.950
table views and things like
this, but you only ever

200
00:11:42.950 --> 00:11:46.790
look at the Apple documentation.
You don't ever need to

201
00:11:46.790 --> 00:11:48.590
go back to a jet
to see and go, how

202
00:11:48.590 --> 00:11:50.210
does this work, I'm going
to do it and object

203
00:11:51.070 --> 00:11:53.770
it. It's pretty seamless in
terms of looking at kind

204
00:11:53.770 --> 00:11:56.740
of object to see code
and translating that over to

205
00:11:57.180 --> 00:12:01.230
see shot really. Cause the
reason I ask is that

206
00:12:01.230 --> 00:12:04.170
I'm trying to get my
head around if this is

207
00:12:04.970 --> 00:12:07.200
a, you know, a clever,
a clever hack and you

208
00:12:07.200 --> 00:12:09.690
know, an interesting bit of
spackle on top of something,

209
00:12:09.690 --> 00:12:13.050
because apparently thousands of developers
are able to figure out

210
00:12:13.050 --> 00:12:16.470
the obscurities of objective C,
which I find visually just

211
00:12:16.470 --> 00:12:19.470
very difficult. I, I just,
I cannot get my brain

212
00:12:19.470 --> 00:12:23.540
cells to fire around objective
C, is this, you know,

213
00:12:23.540 --> 00:12:25.650
a crutch that has been
created or is this really

214
00:12:25.650 --> 00:12:28.590
something interesting? I mean maybe
if you just pushed another

215
00:12:28.590 --> 00:12:30.750
week, you'd be, it'd be
more powerful and you could

216
00:12:30.750 --> 00:12:32.700
do more with objective C.
That's kinda what I'm trying

217
00:12:32.700 --> 00:12:35.970
to, to reconcile. I mean,
you're only really kind of

218
00:12:35.970 --> 00:12:40.830
limited by, what's not bound
to monitor for the jet

219
00:12:40.830 --> 00:12:43.950
to see. So what monitor
does for the most case,

220
00:12:43.950 --> 00:12:48.150
if you're not using.net kind
of classes such as web

221
00:12:48.150 --> 00:12:51.090
client, for instance, if you,
if you're just using kind

222
00:12:51.090 --> 00:12:53.640
of the, the cocoa touch
framework. So you've got a

223
00:12:53.640 --> 00:12:57.510
UI view controller, for example,
all that's doing is calling

224
00:12:57.510 --> 00:13:02.910
objective C behind the scenes.
So you're only limited in

225
00:13:02.910 --> 00:13:06.150
terms of what, what monitor
touch has found and this,

226
00:13:06.180 --> 00:13:08.430
they haven't found it. You
can always go and find

227
00:13:08.430 --> 00:13:12.240
it yourself. So you, you,
you only limited in a

228
00:13:12.240 --> 00:13:14.820
way where you have to
maybe write more code. I

229
00:13:14.820 --> 00:13:18.330
think the clear advantage of
using monitors as a, as

230
00:13:18.330 --> 00:13:22.920
a.net developer is, is code
reuse reality. So what I

231
00:13:22.920 --> 00:13:25.500
can do is I can
create a separate project where

232
00:13:25.860 --> 00:13:28.950
I kind of have proxies
and have separate code in

233
00:13:28.950 --> 00:13:31.350
terms of going off to
get data and receiving data.

234
00:13:32.160 --> 00:13:34.530
And then I'll be able
to either take that and

235
00:13:34.530 --> 00:13:37.890
put it on, on another
app and have it run

236
00:13:37.950 --> 00:13:40.110
pretty much the same, because
it's just on that code.

237
00:13:40.800 --> 00:13:44.550
Or for instance, if you
wanted to use flicker library,

238
00:13:44.550 --> 00:13:49.200
there's flicker.net, which is an
open source library. And I

239
00:13:49.200 --> 00:13:51.960
think there's about eight lines
that you need to change

240
00:13:51.960 --> 00:13:53.880
to get it to what
we monitor. So I can

241
00:13:53.880 --> 00:13:56.640
reuse that thought in that
library within my monitor chap,

242
00:13:56.970 --> 00:14:00.210
that that's pretty powerful. Now,
can you give me an

243
00:14:00.210 --> 00:14:02.820
idea of what kind of
those without, without remembering those

244
00:14:02.820 --> 00:14:04.560
exact date lines, what kind
of stuff would I want

245
00:14:04.560 --> 00:14:07.020
to change? I mean, is
that just one example where

246
00:14:07.020 --> 00:14:10.170
I, where you got lucky
and a really well written

247
00:14:10.170 --> 00:14:13.650
open source app poured it
over nicely, or is it

248
00:14:13.650 --> 00:14:15.570
that complete that you can
really go and say, you

249
00:14:15.570 --> 00:14:18.090
know, flickr.net and move the
Facebook STK and get a

250
00:14:18.090 --> 00:14:22.680
little Twitter action and you
really can use proper desktop

251
00:14:22.680 --> 00:14:26.120
libraries on this, on this
phone. I, I think you're,

252
00:14:26.120 --> 00:14:28.050
you're kind of limited in
terms of, I think, I

253
00:14:28.050 --> 00:14:31.290
think it was much nicer
than thinking about if this

254
00:14:31.290 --> 00:14:35.460
will run on, on kind
of a silver light.net runtime.

255
00:14:35.490 --> 00:14:38.040
I think that's probably the
best way of thinking about

256
00:14:38.040 --> 00:14:42.660
it because apart from using
kind of, kind of reflection

257
00:14:42.670 --> 00:14:45.870
to submit, which you're not
allowed to do, you kind

258
00:14:45.870 --> 00:14:49.890
of only limited in terms
of what mano a mano

259
00:14:49.890 --> 00:14:53.390
exposed as, as, as a,
as a framework, really. So

260
00:14:53.390 --> 00:14:56.030
whatever will work in mano
will pretty much lightly work

261
00:14:56.030 --> 00:15:00.700
with, with monitor such that
it depends on whether you

262
00:15:00.720 --> 00:15:05.560
does use sorts of things
like reflections or Hi. This

263
00:15:05.560 --> 00:15:08.350
is Scott Hanselman from another
parallel universe, gotta tell you

264
00:15:08.350 --> 00:15:10.210
about some of our things
our sponsors are doing. They

265
00:15:10.210 --> 00:15:14.140
make this free podcast possible.
If you're developing a new

266
00:15:14.140 --> 00:15:16.780
line of business application, you've
probably tried the latest version

267
00:15:16.780 --> 00:15:19.270
of server line. Now you
can get even better results

268
00:15:19.270 --> 00:15:22.300
by combining the functionality and
server Lite for beta, with

269
00:15:22.300 --> 00:15:24.280
some of the richness or
the third party controls from

270
00:15:24.280 --> 00:15:27.670
our friends at Tellerik, they're
the first vendors to offer

271
00:15:27.670 --> 00:15:29.740
native support for the server
Lite for beta and their

272
00:15:29.740 --> 00:15:32.890
rad controls. You've got a
new Silverlight for CTP suite

273
00:15:32.890 --> 00:15:35.650
of these controls. They let
you tap into the frameworks,

274
00:15:35.650 --> 00:15:37.900
great potential. You got native
right mouse click and all

275
00:15:37.900 --> 00:15:41.110
the new features of server
line there's 38 controls that

276
00:15:41.620 --> 00:15:43.870
give you all these features.
You can start building those

277
00:15:43.870 --> 00:15:46.930
compelling line of business applications
right away. I encourage you

278
00:15:46.930 --> 00:15:51.850
to check those products out
at tellerik.com/silverlight and, you know,

279
00:15:51.850 --> 00:15:54.880
thank Tellerik for supporting Don
and rock supporting Hansel minutes

280
00:15:54.880 --> 00:15:58.840
on their Facebook fan page
at facebook.com/tellerik. Now back to

281
00:15:58.840 --> 00:16:04.600
the show. So a couple
of months ago, I think,

282
00:16:04.600 --> 00:16:07.210
let me see. I think
it was in November, I

283
00:16:07.210 --> 00:16:10.690
was on Twitter and I,
which is like a typical

284
00:16:10.690 --> 00:16:14.500
Tuesday for me. And someone
said someone had contacted me.

285
00:16:14.500 --> 00:16:15.730
I knew, I don't know
who it was. It was

286
00:16:15.730 --> 00:16:19.150
some slimy marketing person who
said, Hey, we can make

287
00:16:19.150 --> 00:16:23.080
a Hansel minutes podcast Mo
you know, a pot I

288
00:16:23.080 --> 00:16:27.400
touch application or iPod application
for, for a dollar 99.

289
00:16:27.430 --> 00:16:30.280
So basically I would agree
to do this. I'd give

290
00:16:30.280 --> 00:16:33.910
them the graphics. They would
say poof, and I don't

291
00:16:33.910 --> 00:16:37.090
know, some monkeys would start
slapping a keyboard. They had

292
00:16:37.090 --> 00:16:42.010
a, basically a podcast application
construction set of some guy.

293
00:16:42.550 --> 00:16:48.310
They would take like 50%
of the profits. And what

294
00:16:48.310 --> 00:16:52.690
does it, how Apple takes,
how much 30, 30%, maybe

295
00:16:53.920 --> 00:16:57.010
20, 30%, something like that.
So let's, let's say we

296
00:16:57.010 --> 00:17:00.760
sell it for $2 and
then Apple takes, you know,

297
00:17:00.790 --> 00:17:05.380
30, 40 cents. And then the
remaining dollar 60 gets split

298
00:17:05.380 --> 00:17:08.440
up. So I get 80 cents.
Again, the show is not

299
00:17:08.530 --> 00:17:13.600
a, by any means a,
a big profit center at

300
00:17:13.600 --> 00:17:16.210
all. We pay for the
bandwidth. We pay for the,

301
00:17:16.510 --> 00:17:20.410
the producer and the editors.
And, you know, without, without

302
00:17:20.410 --> 00:17:22.630
Tellerik, we would be in
a, in a pickle. So

303
00:17:22.630 --> 00:17:24.820
it wasn't like we were
going to get rich with

304
00:17:24.820 --> 00:17:28.360
this app, but I threw
that on, on, on, on

305
00:17:28.360 --> 00:17:30.250
Twitter. And lots of people
were like, yo, that's slimy.

306
00:17:30.250 --> 00:17:31.540
Don't do that. You're a
sell out. It should be

307
00:17:31.540 --> 00:17:34.720
free. And other people were
like, Oh, it's built in

308
00:17:34.720 --> 00:17:39.130
podcasting features are built into
the iPhone. But most interesting

309
00:17:39.970 --> 00:17:43.030
was a tweet from you.
And you said, I'd rather

310
00:17:43.030 --> 00:17:45.070
it was for free. And
we built it with mano

311
00:17:45.070 --> 00:17:49.410
touch and failing me doing
it. You said, you'd do

312
00:17:49.410 --> 00:17:52.770
it. So of course you
put yourself out there and

313
00:17:52.770 --> 00:17:55.680
I said, let's do it.
And you, you did you,

314
00:17:55.680 --> 00:17:59.520
in fact, built a Hansel
minutes, iPhone app in mano

315
00:17:59.520 --> 00:18:02.640
touch and you went and
put it up on OncoPLEX.

316
00:18:03.210 --> 00:18:08.460
Yep. It looks like it
says zero version 0.01. So

317
00:18:08.460 --> 00:18:12.060
it's very early, but walk
me through what you built,

318
00:18:12.150 --> 00:18:15.720
why it's different and you
know, how hard it is

319
00:18:16.230 --> 00:18:19.500
and where we could potentially
take this, this application. And

320
00:18:19.500 --> 00:18:22.800
also, I want to understand,
would the user ever know

321
00:18:22.800 --> 00:18:25.290
that mano and C sharp
were, were being used to

322
00:18:25.290 --> 00:18:30.260
do this? Okay. So kind
of where I started with

323
00:18:30.260 --> 00:18:35.480
it was I felt, you
know, that's this thought boat

324
00:18:35.480 --> 00:18:37.820
in the iPhone out from,
from stock and what kind

325
00:18:37.820 --> 00:18:40.850
of features that we would
need. And I thought that,

326
00:18:40.910 --> 00:18:43.850
you know, by default, what
we need is kind of,

327
00:18:44.420 --> 00:18:49.220
you can play a cost.
You know? So when I

328
00:18:49.220 --> 00:18:51.560
went with, I think we
discussed the ideas of, of

329
00:18:51.560 --> 00:18:53.210
what we could, we could
do in the, in the

330
00:18:53.210 --> 00:18:56.750
podcast. And those ideas have
kind of stopped playing the

331
00:18:56.750 --> 00:19:00.920
podcast. Then you could, when
you close the app, it

332
00:19:00.920 --> 00:19:04.700
would carry on running. But
unfortunately, because of some iPhone

333
00:19:04.700 --> 00:19:09.020
restrictions, that was impossible. So
what I wanted to do

334
00:19:09.020 --> 00:19:14.600
is simply get to RSS
feed of, of your, of

335
00:19:14.600 --> 00:19:20.390
your podcast and stream them
I've over the iPhone. And

336
00:19:20.900 --> 00:19:23.240
then we would build on
that from, from kind of

337
00:19:23.240 --> 00:19:25.370
a nerdy release and kind
of get out to people,

338
00:19:25.370 --> 00:19:28.250
kind of looked at it,
and then it kind of

339
00:19:28.510 --> 00:19:33.350
hits a it's a wool,
rarely. So streaming on the

340
00:19:33.350 --> 00:19:38.240
iPhone is actually quite difficult.
You have to use audio

341
00:19:38.270 --> 00:19:42.200
cue services and audio buffering
services. And that's just something

342
00:19:42.200 --> 00:19:45.290
I didn't really want to
get into. So as a

343
00:19:45.290 --> 00:19:48.710
kind of hack, I used
the, a web client class,

344
00:19:49.880 --> 00:19:52.700
and this is kind of
dope and I'm kind of

345
00:19:52.760 --> 00:19:56.690
drawn it and was able
to do is download the

346
00:19:56.690 --> 00:20:00.950
data, download a file, which
is the MP three file.

347
00:20:01.340 --> 00:20:04.070
And as soon as it
sounded loaded enough of the,

348
00:20:04.130 --> 00:20:06.620
of the app, it would
just simply stop playing and

349
00:20:06.620 --> 00:20:10.910
be playing the file. And
that's kind of, it was

350
00:20:10.910 --> 00:20:14.090
pretty good. And then the
good thing about playing it

351
00:20:14.090 --> 00:20:15.620
straight from the file is
you're not going to be

352
00:20:15.620 --> 00:20:19.460
constantly calling to the internet
and basically killing the battery

353
00:20:19.460 --> 00:20:23.240
on the iPhone. And I
thought, well, if we're going

354
00:20:23.240 --> 00:20:26.330
to be putting the files
on the, onto the device,

355
00:20:26.810 --> 00:20:29.150
you might as well have
them say, people can play

356
00:20:29.150 --> 00:20:31.850
it on offline. So there's
a bit of code in

357
00:20:31.850 --> 00:20:35.210
there, which basically says, you
know, am I connected to

358
00:20:35.210 --> 00:20:38.540
the internet? Yes. All, no.
And if you are what

359
00:20:38.540 --> 00:20:42.350
to do that will first
save the, the XML file

360
00:20:42.350 --> 00:20:45.740
of your RSS feed, which
is a list of all

361
00:20:45.740 --> 00:20:49.120
the podcasts. And then if
you're offline, it would just

362
00:20:49.120 --> 00:20:51.370
show that, and we'll have
a little tick next to

363
00:20:51.370 --> 00:20:55.480
it, whether you're online or
you're offline. And whether you

364
00:20:55.480 --> 00:20:59.860
found out that the, the,
the podcast previously, and then

365
00:20:59.860 --> 00:21:01.540
there's a little bit of
work in terms of kinda

366
00:21:01.660 --> 00:21:05.290
gonna slide at work and
I'm playing of an audio

367
00:21:05.290 --> 00:21:08.650
on, on the device, but
this is pretty straightforward after

368
00:21:08.650 --> 00:21:13.000
looking at kind of the
Apple documentation and kind of

369
00:21:13.000 --> 00:21:15.000
one of the things that
I kind of fell short

370
00:21:15.010 --> 00:21:19.270
of was trying to find
a way of playing the

371
00:21:19.270 --> 00:21:23.380
audio and having it so
I could stream it was

372
00:21:23.380 --> 00:21:25.720
just, wasn't going to be
an option. So I think

373
00:21:25.720 --> 00:21:30.430
playing it from the devices
a much better idea, this,

374
00:21:30.450 --> 00:21:32.410
this is not just the
coolest problems in terms of,

375
00:21:33.820 --> 00:21:35.830
I was trying to get
it working so much where

376
00:21:36.100 --> 00:21:37.630
you could, you could just
play it and then you

377
00:21:37.630 --> 00:21:40.450
can pull it. It doesn't
even show you kind of

378
00:21:40.570 --> 00:21:43.660
what podcast you're listening to.
So there's plenty of room

379
00:21:43.660 --> 00:21:47.340
for improvement on that side.
This code is up at

380
00:21:47.370 --> 00:21:51.180
Hansel minutes, iphone.covid.com. And we'll
put this on the show

381
00:21:51.180 --> 00:21:54.390
notes, but I'm looking through
some of the code here.

382
00:21:54.390 --> 00:21:57.840
We've got the home view
controller, cause you, it looks

383
00:21:57.840 --> 00:22:02.090
like you've got two zip
files. There's home view controllers.

384
00:22:02.090 --> 00:22:06.000
Zeb is again, is that
interface builder. And then there's

385
00:22:06.000 --> 00:22:09.990
main window. What are the
differences between those two windows?

386
00:22:10.830 --> 00:22:15.390
So the, the, the main
window they've found is it's

387
00:22:15.390 --> 00:22:18.750
kind of like the default
when, when the, when the

388
00:22:18.750 --> 00:22:21.180
iPhone loads up your app,
what it will do is

389
00:22:21.210 --> 00:22:23.370
it'll place always a view
that you ever kind of

390
00:22:23.670 --> 00:22:26.880
see onto a window. So
that's kinda like a base,

391
00:22:27.240 --> 00:22:31.380
a base holder. So to
get it to show volume

392
00:22:31.380 --> 00:22:34.350
view controller, you basically pass
you, you create a new

393
00:22:34.350 --> 00:22:37.020
version of your view controller,
and then you add it

394
00:22:37.020 --> 00:22:40.620
as a sub view. So
that's how that works. So

395
00:22:40.620 --> 00:22:42.990
are you saying that one
of these gets shown immediately

396
00:22:42.990 --> 00:22:44.730
upon launch? And the other
one is the one that

397
00:22:44.730 --> 00:22:46.830
you sit at? I mean,
which one is main window?

398
00:22:46.830 --> 00:22:48.630
The one that we look
at most of the time,

399
00:22:48.630 --> 00:22:50.250
or is home view controller,
the one we look at

400
00:22:50.250 --> 00:22:54.030
most of the time, You
look at home view controller,

401
00:22:54.030 --> 00:22:57.120
which is actually on the
main window, you just added

402
00:22:57.120 --> 00:22:59.430
it as a self view.
So you, you, you only

403
00:22:59.430 --> 00:23:02.130
actually see the home, you
control it. What's the main

404
00:23:02.130 --> 00:23:05.460
window is, is a white
background, which is just expecting

405
00:23:05.490 --> 00:23:08.340
views to be loaded on
top of it. I see

406
00:23:08.370 --> 00:23:12.840
everything hangs off of it.
Yes, that's correct. Okay. So

407
00:23:12.840 --> 00:23:15.600
I'm looking at this code
and I, again, we're talking

408
00:23:15.600 --> 00:23:17.810
about code on an audio
podcast, so there's a little,

409
00:23:17.810 --> 00:23:20.160
you know, I recognize it.
There's a little irony there,

410
00:23:20.160 --> 00:23:22.950
but it just, you know,
public partial class, home view

411
00:23:22.950 --> 00:23:27.120
controller derives from UI view
controller, it looks like a

412
00:23:27.390 --> 00:23:29.640
perfectly reasonable code. And the
part, the things that I'm

413
00:23:29.640 --> 00:23:32.910
immediately struck by, which I
think is probably a Testament

414
00:23:32.910 --> 00:23:34.650
to the cleverness of the
model touch guys. And I'm

415
00:23:34.650 --> 00:23:37.170
interested in your thoughts are
I see where you've got

416
00:23:37.170 --> 00:23:41.730
the, you download our complete
MP3 feed and you say

417
00:23:41.730 --> 00:23:46.460
environment dot, get folder, path,
special folder personal. That's what

418
00:23:46.460 --> 00:23:48.860
you do on windows to
get the, my documents folder.

419
00:23:49.720 --> 00:23:53.080
Yeah. And you're limited on
the, on the device in

420
00:23:53.080 --> 00:23:58.180
terms of where you can
put files once you've, when

421
00:23:58.180 --> 00:24:00.910
you, when you can put
files anywhere, you're limited, you're

422
00:24:00.910 --> 00:24:04.500
in the sandbox. So that
allows you to put files

423
00:24:04.500 --> 00:24:08.950
somewhere, but not kind of
anywhere on the device. I

424
00:24:08.950 --> 00:24:11.110
think that's very clever way
for them to do that.

425
00:24:11.110 --> 00:24:13.840
I mean, why make a
new method when one that

426
00:24:13.840 --> 00:24:20.350
a C sharp programmer will
already understand is available. And

427
00:24:20.350 --> 00:24:22.900
then you've got a few
things like start audio session

428
00:24:22.900 --> 00:24:25.720
where you're basically letting the
system know that you're an

429
00:24:25.720 --> 00:24:29.530
application that's going to play
back and you've got start

430
00:24:29.530 --> 00:24:31.960
internet activity, which is a
little helper function of your

431
00:24:31.960 --> 00:24:35.680
own. And this is interesting
because on an iPhone, when

432
00:24:35.680 --> 00:24:38.350
you're talking to the internet,
there's that little spinner, little

433
00:24:38.350 --> 00:24:41.230
kind of Ajax you spinner.
And in here, you're calling

434
00:24:41.710 --> 00:24:47.380
UI application dot shared application
network activity, indicator visible. So

435
00:24:47.380 --> 00:24:51.370
UI application dot shared application
sounds like a monotonic construct.

436
00:24:51.790 --> 00:24:55.120
That's on top of some
shared resource that iPhones have

437
00:24:55.120 --> 00:24:59.380
available to it. So what
it does is you applications

438
00:24:59.560 --> 00:25:03.370
kind of data that your
application has available to it.

439
00:25:03.370 --> 00:25:06.340
So it's, so what you
can do with, with shared

440
00:25:06.340 --> 00:25:12.010
application is it's really talking
to the main, main iPhone.

441
00:25:12.010 --> 00:25:15.400
So you have network activity
indicate the visible. So that,

442
00:25:15.540 --> 00:25:18.550
that creates that little icon
where it's going connect the

443
00:25:18.550 --> 00:25:21.220
internet, but you also have
stuff kind of like a

444
00:25:21.910 --> 00:25:26.260
batch batch number or something
like that, application icon, badge

445
00:25:26.260 --> 00:25:29.080
number. So that's a way
where you can set the

446
00:25:29.080 --> 00:25:32.770
badge number with a little
red, red number on the

447
00:25:32.770 --> 00:25:36.220
badge. One of the things
I thought was particularly interesting

448
00:25:36.220 --> 00:25:38.230
as I was reading through
the source here is not

449
00:25:38.230 --> 00:25:40.630
only that you were using
API, that I know how

450
00:25:40.630 --> 00:25:46.390
to use like web client
and, and using basically metaphors

451
00:25:46.390 --> 00:25:49.330
I was familiar with. But
when you were going through

452
00:25:49.360 --> 00:25:54.880
the feed, the, the XML
feed you were using what

453
00:25:54.880 --> 00:26:00.670
appear to be linked to
XML. Yeah, that's correct. Yeah.

454
00:26:00.700 --> 00:26:05.020
So it's just an easy
way of kind of, Creighton's

455
00:26:05.090 --> 00:26:09.220
a list of a list
of a podcast really from,

456
00:26:09.220 --> 00:26:12.790
from the feed. So don't
have to think of a

457
00:26:12.790 --> 00:26:16.870
new way of creating a
new list of, of podcasts

458
00:26:16.870 --> 00:26:20.530
really. So I can just
reuse kind of the ability.

459
00:26:21.910 --> 00:26:23.980
Would you, would you even
know how to do that

460
00:26:24.040 --> 00:26:26.800
on a regular iPhone, how
to parse XML, do they

461
00:26:26.800 --> 00:26:28.150
have their own way to
do that kind of thing?

462
00:26:29.380 --> 00:26:32.920
I think what they tried
it, and it's actually really

463
00:26:32.920 --> 00:26:38.120
horrible XML pausing on the,
on the iPhone and objective

464
00:26:38.120 --> 00:26:42.070
C it's basically event driven.
So it tells you when

465
00:26:42.340 --> 00:26:44.340
you reach a new and
when you finish a note

466
00:26:44.730 --> 00:26:46.920
and then you have to
kind of work out everything

467
00:26:46.920 --> 00:26:51.500
in between, that was a
pain. Sounds like the old

468
00:26:51.500 --> 00:26:55.610
style XML reader. Yeah. Yeah.
It's, it's, it's it, wasn't

469
00:26:55.610 --> 00:26:59.360
very nice. And I did
do it once and never

470
00:26:59.360 --> 00:27:04.100
again. So, And you were
able to use link everywhere.

471
00:27:04.100 --> 00:27:06.470
You even had a line
here when you're just about

472
00:27:06.470 --> 00:27:09.770
ready to terminate the application
where you say for each

473
00:27:09.770 --> 00:27:12.980
file in document dot where,
and then you have a

474
00:27:12.980 --> 00:27:16.670
Lambda to say contains partial
that MP3 basically it's your

475
00:27:17.330 --> 00:27:20.990
let's tidy up and any
partially downloaded MP3 files, which

476
00:27:20.990 --> 00:27:22.340
I thought was kind of
interesting and you get it

477
00:27:22.340 --> 00:27:24.440
up, just using a nice
little bit of link, an

478
00:27:24.440 --> 00:27:27.110
extension method and a Lambda,
which makes me think that

479
00:27:27.140 --> 00:27:31.580
there's really everything that we're
familiar with as, as.net programmers

480
00:27:31.580 --> 00:27:34.760
is available in this, in
this model touch. Yeah. I

481
00:27:34.760 --> 00:27:37.340
think, I think for kind
of the base cost library

482
00:27:37.340 --> 00:27:40.640
and things like that, I
think you can pretty much

483
00:27:40.640 --> 00:27:43.340
reuse most of the stuff.
I mean, you're kind of

484
00:27:43.340 --> 00:27:46.520
limited in terms of, if
you're going to be displaying

485
00:27:47.000 --> 00:27:50.030
data onto a, onto a
VA, you're going to have

486
00:27:50.030 --> 00:27:53.780
to use the, the constructs
that kind of the Apple

487
00:27:53.960 --> 00:27:59.210
cocoa touch framework provides. So
in terms of displaying and

488
00:27:59.840 --> 00:28:02.660
actually viewing data, I think
if you're going to move

489
00:28:02.660 --> 00:28:05.330
it to another platform, you
can have to rewrite that

490
00:28:05.330 --> 00:28:08.800
stuff. Then tell us a
building up or objects. You

491
00:28:08.900 --> 00:28:11.540
kind of, you've got all
that code that you can

492
00:28:11.540 --> 00:28:15.620
reuse Know. It's interesting that
you say that because, you

493
00:28:15.620 --> 00:28:19.460
know, I'm, I'm, I'm excited
about windows, windows, mobile phone,

494
00:28:19.460 --> 00:28:21.710
or windows, phone seven, whatever
it is that they're coming

495
00:28:21.710 --> 00:28:24.680
out with the next version
of windows phones, cause you

496
00:28:24.680 --> 00:28:27.500
know, one, everyone wants the
new exciting thing. So, you

497
00:28:27.500 --> 00:28:28.880
know, whatever we're going to
come out with, at least

498
00:28:28.880 --> 00:28:30.770
it will be new and
fun and people will get

499
00:28:30.770 --> 00:28:33.710
excited about it. And I'm
thinking, I was thinking to

500
00:28:33.710 --> 00:28:35.900
myself, wow, okay. Can I
write an app? That'll run

501
00:28:35.900 --> 00:28:39.770
on both of these, but
it seems like the metaphor,

502
00:28:39.770 --> 00:28:42.500
once you get out of
the, the abstract, once you

503
00:28:42.500 --> 00:28:46.100
get, once you get out
of the non UI world,

504
00:28:46.580 --> 00:28:49.520
it gets pretty hairy in
this application. I mean the,

505
00:28:51.080 --> 00:28:53.870
the basics, the manipulating of
data, the retrieving of data,

506
00:28:53.870 --> 00:28:56.330
it's all exactly like you'd
ride any.net app, you know,

507
00:28:56.330 --> 00:28:58.850
go get some XML parse
through it, manage the file

508
00:28:58.850 --> 00:29:02.810
system where things start going
crazy in this particular application

509
00:29:02.810 --> 00:29:06.260
is when you start poking
around in UI table view

510
00:29:06.260 --> 00:29:10.850
cells and NS index paths
and well, it's C sharp.

511
00:29:10.880 --> 00:29:14.060
It's just really inscrutable. And
that's pretty much that that's

512
00:29:14.060 --> 00:29:16.700
this particular UI table that
you're working with. Is that

513
00:29:16.700 --> 00:29:21.430
what's going on there? Yeah,
that's correct. Yeah. So this

514
00:29:21.510 --> 00:29:24.860
is where I kind of
need to stop looking at

515
00:29:24.860 --> 00:29:28.160
kind of either the Apple
documentation or information that you

516
00:29:28.160 --> 00:29:32.300
find on the web about
how you like UI table

517
00:29:32.300 --> 00:29:36.350
views and UI table view
cells work. It's, it's quite

518
00:29:36.350 --> 00:29:39.170
a different mindset. So as
I said, the kind of,

519
00:29:39.560 --> 00:29:42.370
if you use a web,
I go to NBC it's,

520
00:29:42.970 --> 00:29:45.430
it's kind of like that
you can understand and you

521
00:29:45.430 --> 00:29:50.050
can reach out, but the
underlying framework is slightly different.

522
00:29:50.620 --> 00:29:52.680
Are there any other applications
that are in the app

523
00:29:52.680 --> 00:29:59.460
store, other than this iPhone
application? My company actually cooked

524
00:29:59.460 --> 00:30:04.620
great. Friday's Christmas 2009. Sorry.
Yeah. Christmas-y as you might

525
00:30:04.620 --> 00:30:08.490
expect. And that was kind
of very different in terms

526
00:30:08.490 --> 00:30:10.980
of what I was literally
doing was kind of showing

527
00:30:10.980 --> 00:30:14.490
a video and that involved
a lot more kind of

528
00:30:14.490 --> 00:30:16.770
working out kind of how
to build an iPhone app

529
00:30:16.770 --> 00:30:21.230
using monitor, touch as kind
of the bindings to objective,

530
00:30:21.230 --> 00:30:24.570
to see, rather than I
can reuse all my dotnet

531
00:30:24.570 --> 00:30:27.900
skills. So I could have
probably easily wrote the app

532
00:30:27.950 --> 00:30:30.100
in an object to see,
but it was, it was

533
00:30:30.150 --> 00:30:32.100
good to play around with
kind of monitor and kind

534
00:30:32.100 --> 00:30:34.650
of, I can understand things
easier cause it was going

535
00:30:34.650 --> 00:30:37.110
to see shop and it
was easier to read. So

536
00:30:37.110 --> 00:30:39.270
you think that you'll do
all of your iPhone development

537
00:30:39.270 --> 00:30:41.090
and this year you're pretty
much sold on montage. Do

538
00:30:41.090 --> 00:30:42.990
you think it's ready? It's
ready to go. It's been

539
00:30:42.990 --> 00:30:46.230
in production. Your users will
never know. You'll just feel

540
00:30:46.230 --> 00:30:48.990
that you're more productive and
for mobile phone development on

541
00:30:48.990 --> 00:30:54.510
the iPhone, this is the
way to go. Well, you

542
00:30:54.510 --> 00:30:58.320
know, the team are great
in terms of saying, okay,

543
00:30:59.190 --> 00:31:01.650
if you, if you give
us feedback and say this

544
00:31:01.650 --> 00:31:05.070
isn't working and show, test
case challenges, I'll be fixed

545
00:31:05.250 --> 00:31:09.600
that day. You really can't
be the level of support

546
00:31:09.600 --> 00:31:13.590
that monitors kind of give,
give back to the customers.

547
00:31:14.220 --> 00:31:16.440
And yeah, I don't, I
don't see going back to

548
00:31:16.440 --> 00:31:20.340
objective C as, as, as
a, an option really just

549
00:31:20.340 --> 00:31:24.030
due to, I can understand
C sharp and you know,

550
00:31:24.030 --> 00:31:27.810
if Apple started a way
that they stop, they said

551
00:31:27.810 --> 00:31:30.000
to you, okay, we can't
use any C sharp apps

552
00:31:30.780 --> 00:31:33.750
on the app store. And
there's no reason there's a

553
00:31:33.750 --> 00:31:35.700
reason why they should say
that. But in case that

554
00:31:35.700 --> 00:31:37.770
was the case. I mean
the rapport they can, they

555
00:31:37.770 --> 00:31:39.150
can do what they want
when it comes to the

556
00:31:39.150 --> 00:31:41.820
app store. I think you've
kind of got a good

557
00:31:41.820 --> 00:31:44.940
base in terms of you've
been using C sharp like

558
00:31:44.940 --> 00:31:48.270
stuff. And if you've been
using UI view controller, if

559
00:31:48.270 --> 00:31:49.890
you happen to go back
to get to see you

560
00:31:49.890 --> 00:31:52.800
go, well, I know how
that works within C sharp,

561
00:31:53.320 --> 00:31:55.860
understand it much better using
C sharp, and you can

562
00:31:56.400 --> 00:31:58.740
probably go back and apply
it subjects to see if

563
00:31:58.740 --> 00:32:01.940
you really have to, but
now I'm sold on, on

564
00:32:01.950 --> 00:32:05.670
a search. Very cool. Well,
I'm really glad. Do you

565
00:32:05.670 --> 00:32:09.240
think that you'll continue with
the podcast application if maybe

566
00:32:09.240 --> 00:32:11.190
some of the listeners jump
in and want to get

567
00:32:11.190 --> 00:32:17.670
involved The sources there, so
feel free to go download

568
00:32:17.670 --> 00:32:21.960
it other moment. I've been
pretty busy not doing any

569
00:32:21.960 --> 00:32:26.650
kind of public facing stuff.
So I'm actually writing a

570
00:32:26.670 --> 00:32:30.690
monitored book for rocks. So
we're doing that with a

571
00:32:30.690 --> 00:32:37.200
few guys like Wally Rory
blast involved, Martin bowling, and

572
00:32:37.230 --> 00:32:39.590
I'm Craig Dunn, who there
were a lot of blog

573
00:32:39.620 --> 00:32:43.850
posts in terms of getting
started with monitor. So we've

574
00:32:43.850 --> 00:32:45.500
been kind of writing that
book and hope. Hopefully that'd

575
00:32:45.500 --> 00:32:49.550
be out kind of summertime,
some kind of raring to

576
00:32:49.550 --> 00:32:53.300
get back to writing some
proper apps actually, and, and

577
00:32:53.300 --> 00:32:56.830
carry on working on, on
the podcast app. Very cool.

578
00:32:56.830 --> 00:32:59.530
Well, certainly don't feel pressured
at all to finish our

579
00:32:59.530 --> 00:33:01.660
podcast app and put it
on, put it in your

580
00:33:01.660 --> 00:33:04.240
book. I think that'd be
an awesome sample. I say

581
00:33:04.240 --> 00:33:06.700
that selfishly only because we
don't have a podcast app

582
00:33:06.700 --> 00:33:08.860
yet. I'd love to get
that to help you get

583
00:33:08.860 --> 00:33:11.890
that into the app store.
Yeah. I mean, there's still

584
00:33:11.890 --> 00:33:14.710
tends to be a tendency
to do on, on the,

585
00:33:14.740 --> 00:33:17.680
on the app in terms
of like, what we would

586
00:33:17.680 --> 00:33:21.520
like is to be able
to at least carry on

587
00:33:22.390 --> 00:33:25.210
leaving comments and stuff. It'd
be nice to have some

588
00:33:25.210 --> 00:33:28.330
integration with kind of either
like the channel nine videos

589
00:33:28.330 --> 00:33:31.030
that you do. So there's
still lots of, lots of

590
00:33:31.030 --> 00:33:33.880
things to improve on and
kind of add features, which

591
00:33:33.880 --> 00:33:35.560
make it a little bit
richer in terms of, you

592
00:33:35.560 --> 00:33:39.610
know, you can go on
the iTunes store and download

593
00:33:39.610 --> 00:33:42.580
your podcasts from that. Why
do I need an app?

594
00:33:42.940 --> 00:33:45.040
So you're trying to make
it richer and more powerful.

595
00:33:45.910 --> 00:33:47.950
Right? I think it would
be fun to be able

596
00:33:47.950 --> 00:33:50.870
to read the comments that
are on the website and,

597
00:33:50.870 --> 00:33:53.650
and, and have discussions on
the phone that are the

598
00:33:53.650 --> 00:33:56.230
same discussions people having on
the web and all sorts

599
00:33:56.230 --> 00:33:59.170
of things like that. Yeah.
Are you thinking about the

600
00:33:59.170 --> 00:34:01.900
iPod as well? I think
the thing that's interesting about

601
00:34:01.900 --> 00:34:03.910
the iPad is the size
of the screen that someone

602
00:34:03.910 --> 00:34:06.250
could potentially listen to the
show, run it in the

603
00:34:06.250 --> 00:34:08.230
background, or push it off
in the corner and then

604
00:34:08.230 --> 00:34:11.590
browse. I think that being
able to have a link

605
00:34:11.620 --> 00:34:15.520
pop up as a guest
mentions, it would be, Yeah.

606
00:34:15.970 --> 00:34:20.200
I mean, we can always
integrate a web browser experience

607
00:34:20.470 --> 00:34:24.880
into the app for the
iPad version, for example. And

608
00:34:24.880 --> 00:34:27.940
then the great thing about
Moana touch as well, the

609
00:34:28.030 --> 00:34:31.930
iPads, a new, new thing
that the SDK still under

610
00:34:31.990 --> 00:34:35.140
NDA, and no one really
knows about what's happening with

611
00:34:35.140 --> 00:34:39.130
it. And 24 hours after
the STK was out there

612
00:34:39.130 --> 00:34:42.970
was already monitored support. So
that's something that if people

613
00:34:42.970 --> 00:34:46.030
are worried about, you know,
when, when I phone, no

614
00:34:46.030 --> 00:34:48.160
asphalt comes out, I want
to touch, it's going to

615
00:34:48.160 --> 00:34:50.680
be out. Date shorts is
all, they probably have it

616
00:34:50.680 --> 00:34:54.760
bound within 24 hours, 48
hours. So that's something that

617
00:34:54.760 --> 00:34:57.520
you don't have to worry
about as well. That's great.

618
00:34:57.880 --> 00:35:00.940
Selfishly, as a dotnet programmer,
I think that if I

619
00:35:00.940 --> 00:35:03.400
can make mobile applications, whether
it's on the Apple platform

620
00:35:03.400 --> 00:35:06.310
or the Microsoft platform, if
I'm using the stuff that

621
00:35:06.310 --> 00:35:07.690
I already know, and it
allows me to get it

622
00:35:07.690 --> 00:35:10.870
done faster, that that's what
I'm excited about. So it'd

623
00:35:10.870 --> 00:35:13.270
be interesting to see when
the, when the very, when

624
00:35:13.270 --> 00:35:17.320
the windows phone seven stuff
comes out, we'll, you know,

625
00:35:17.320 --> 00:35:20.080
who's the first person to
come up with a, an

626
00:35:20.080 --> 00:35:22.480
app that runs in both
places. And how much code

627
00:35:22.480 --> 00:35:24.820
actually gets shared. Is it
10%? Or can you share

628
00:35:24.820 --> 00:35:27.760
20, 30, 40% of the
libraries for, for doing, like

629
00:35:27.760 --> 00:35:30.340
you said, law logic for
parsing and non UI related

630
00:35:30.340 --> 00:35:33.550
work. Yeah. I'm, I'm hoping
that Craig and I are

631
00:35:33.550 --> 00:35:37.260
going to have something around
mixed time about that, but

632
00:35:37.700 --> 00:35:42.560
we'll see, We'll watch for
that. I'll put again your

633
00:35:42.560 --> 00:35:46.100
blog and the application up
on, up in the show

634
00:35:46.100 --> 00:35:48.560
notes and thanks a lot
for taking the time to

635
00:35:48.560 --> 00:35:52.130
chat with us today. And
anytime it's great. This has

636
00:35:52.130 --> 00:35:54.530
been another episode of Hansel
minutes and I'll see you

637
00:35:54.530 --> 00:35:55.400
again next week.

