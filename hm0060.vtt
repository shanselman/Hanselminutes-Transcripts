WEBVTT FILE

1
00:00:12.030 --> 00:00:17.520
From Hansel minutes.com it's Hansel
minutes or weekly discussion with

2
00:00:17.520 --> 00:00:22.560
web developer and technologists. Scott
Hanselman hosted by Carl Franklin. This

3
00:00:22.560 --> 00:00:28.860
is Lawrence Ryan announcing show number
60 quoted Wednesday, April 18th, 2007. Support

4
00:00:28.860 --> 00:00:32.850
for Hanselman it's as provided
by Tellerik already control the

5
00:00:32.850 --> 00:00:36.270
most comprehensive suite of components
for windows forms and asp.net

6
00:00:36.270 --> 00:00:46.320
web applications. online@wwwdottelerik.com. Support is
also provided by slash end

7
00:00:46.320 --> 00:00:50.370
software red carpet subscriptions. The
most comprehensive solution for adding

8
00:00:50.370 --> 00:00:55.260
connectivity to your.net and asp.net
application with components for every

9
00:00:55.260 --> 00:01:05.550
major internet protocol online@wwwdotnsoftwaredotcomandby.net developers
journal the world's leading.net developer

10
00:01:05.550 --> 00:01:12.240
magazine online at www dot
<inaudible> dot com. In this

11
00:01:12.240 --> 00:01:17.820
episode, Scott and crawled discussed
silver light. Hi, this is

12
00:01:17.820 --> 00:01:21.630
Carl Franklin. You're listening to Hansel
minutes from Hansel minutes.com. I'm

13
00:01:21.630 --> 00:01:23.700
here with Scott Hanselman as
I am every week. Hi

14
00:01:23.700 --> 00:01:26.070
Scott, how are you, sir?
Okay. Well, not every week,

15
00:01:26.100 --> 00:01:28.740
once in a while I
go away, but anyway, this

16
00:01:28.740 --> 00:01:32.520
show is about a silver
light, right? Silver light, the

17
00:01:32.520 --> 00:01:37.080
return or the renaming, the
rebranding of WP Effie. And

18
00:01:37.080 --> 00:01:40.050
this is a sort of
a making it right show

19
00:01:40.110 --> 00:01:43.470
because there are 46 show
he did on WP Effie.

20
00:01:43.470 --> 00:01:45.270
I guess you had some
comments on your blog about

21
00:01:45.270 --> 00:01:47.850
it. Well, this was the,
that was the show when

22
00:01:47.850 --> 00:01:50.640
I had had food poisoning,
like the day before I,

23
00:01:50.650 --> 00:01:52.770
right now, I'm not necessarily
saying that it was the

24
00:01:52.770 --> 00:01:55.080
bad teriyaki that caused the
show to be bad. But

25
00:01:55.590 --> 00:01:57.450
I would say that of
the 60 shows we've done,

26
00:01:57.450 --> 00:01:59.910
it was not the best
show and people in the,

27
00:02:00.450 --> 00:02:03.120
in the comments on my
blog said so, and I

28
00:02:03.120 --> 00:02:05.820
agree with them. You can
read the comments on my

29
00:02:05.820 --> 00:02:12.030
blog about show 46 at
shrinks.com/oh three P okay, this

30
00:02:12.030 --> 00:02:15.420
is show 60. So this
is a 14 better than

31
00:02:15.420 --> 00:02:19.800
that show, right? We're going
to fix this. Okay. So,

32
00:02:19.800 --> 00:02:22.860
so WPF fee, I was
a little confused last time

33
00:02:22.860 --> 00:02:25.500
and I, I mixed up
some of my information between

34
00:02:25.500 --> 00:02:28.440
WPF and WFE. So let's
talk about it. So now

35
00:02:28.440 --> 00:02:31.440
it's called silver light and
it's going to be a,

36
00:02:31.500 --> 00:02:35.190
a browser plugin. It's going
to support Firefox I E

37
00:02:35.760 --> 00:02:38.760
and Safari. So we're talking
about Mac here, this going

38
00:02:38.760 --> 00:02:41.760
to work on the Mac.
Now, before we had talked

39
00:02:41.760 --> 00:02:43.980
about WPF and I mixed
things up a little bit,

40
00:02:43.980 --> 00:02:48.570
but WPF, right, is the
managed presentation layer that you

41
00:02:48.570 --> 00:02:52.860
can use to write applications
that run outside the browser

42
00:02:52.860 --> 00:02:56.280
natively. Well, I wouldn't say
they're managed applications, but I

43
00:02:56.280 --> 00:02:59.710
mean, they're not native applications.
They run in. That's a

44
00:02:59.710 --> 00:03:01.720
good point, But they, they
run outside the browser, I

45
00:03:01.720 --> 00:03:04.050
guess. That's. Yeah. So use
the terms outside of the

46
00:03:04.050 --> 00:03:07.320
browser and inside the browser.
Good enough. Okay. So WPF

47
00:03:07.650 --> 00:03:13.110
uses XAML X, a M
L. This is the markup.

48
00:03:13.740 --> 00:03:17.550
That is a Microsoft's markup.
That's like a, you can

49
00:03:17.550 --> 00:03:21.210
say things like canvas rectangles,
she can do shapes. And

50
00:03:21.360 --> 00:03:25.530
it's basically a complete markup
for describing an interface, but

51
00:03:25.530 --> 00:03:30.390
it also includes animation and
you can hook up events

52
00:03:30.780 --> 00:03:33.480
to code behind. So it's,
it's a complete way of

53
00:03:33.810 --> 00:03:37.440
describing a And interface, right?
It's like ASP net for

54
00:03:37.440 --> 00:03:40.440
desktop applications. It's the way
I like to say it.

55
00:03:40.650 --> 00:03:42.510
Okay. Yeah. You could, you
could say that. Yeah. It's

56
00:03:42.510 --> 00:03:46.380
markup Exactly. Do you? I
markup and it's very deep.

57
00:03:46.590 --> 00:03:48.180
There's a great book. Chris
sells. He's got a great

58
00:03:48.180 --> 00:03:50.190
book. I'm not sure if
it's quite out yet. I've

59
00:03:50.190 --> 00:03:52.020
been reading some previews of
it, but it's a it's

60
00:03:52.020 --> 00:03:55.230
on XAML and also Charles
Petzold has got a book

61
00:03:55.230 --> 00:03:58.590
on doing WPF. Oh, that's
gotta be good. Right. So

62
00:03:58.590 --> 00:04:00.900
yeah, pet soul is, is
the man. I read his

63
00:04:00.900 --> 00:04:05.220
book code. Just fantastic. Me
too. Yeah. Okay. So there's

64
00:04:05.220 --> 00:04:06.690
a couple different ways you
can do this, right? You

65
00:04:06.690 --> 00:04:11.250
can run desktop applications, just
run them, but WPF not

66
00:04:11.250 --> 00:04:14.100
WPF. Right? You can do
click once and then you

67
00:04:14.100 --> 00:04:17.850
can run things inside the
browser frame as an X

68
00:04:17.850 --> 00:04:21.480
bap, X be a P.
This is like using what

69
00:04:21.480 --> 00:04:22.890
I used to call. What
I used to do was

70
00:04:22.890 --> 00:04:26.970
just called 'em active X
documents. We used to call

71
00:04:26.970 --> 00:04:31.380
them VPs. So ex bap
is an actual managed application

72
00:04:31.500 --> 00:04:34.380
with the full framework required
running inside the browser. Is

73
00:04:34.380 --> 00:04:37.650
that what you're saying? Exactly.
So ex bap is WPF

74
00:04:37.680 --> 00:04:42.540
running as the browser using
being its frame. Okay. Right

75
00:04:42.840 --> 00:04:48.780
now, WP Effie. Now Silverlight
so Silverlight also reads XAML

76
00:04:49.290 --> 00:04:53.460
Parsa. XAML at runtime render
XAML itself, but it is

77
00:04:53.460 --> 00:05:00.090
its own XAML rendered Silverlight
is not WPF. Right? And

78
00:05:00.090 --> 00:05:03.720
there's not, it's not managed
code. It is its own

79
00:05:03.720 --> 00:05:07.260
demo parser. And it happens
to be a slightly smaller

80
00:05:07.260 --> 00:05:09.300
subset of SAML. There are
things that you can do

81
00:05:09.300 --> 00:05:11.880
in WPF that you can't
do. And to be PFE

82
00:05:12.830 --> 00:05:15.870
Some of the framework functions
as well, haven't they? Oh,

83
00:05:15.870 --> 00:05:17.670
well this is, this is
where it gets. Cause we

84
00:05:17.670 --> 00:05:19.820
don't know this yet because
they're going to announce this

85
00:05:20.030 --> 00:05:24.390
in mix. So I can
only refer to things that

86
00:05:24.390 --> 00:05:26.250
I know on the net.
So I can only refer

87
00:05:26.250 --> 00:05:29.010
to things that people have
said publicly. Well, I've heard

88
00:05:29.010 --> 00:05:32.220
publicly that. Talk about that.
Yeah. I've actually listed all

89
00:05:32.220 --> 00:05:33.510
the things you can say.
So I don't want to

90
00:05:33.510 --> 00:05:36.600
speculate on mics because I'm
under NDA so I can

91
00:05:36.600 --> 00:05:38.310
speak to what I know
on the net. So here's

92
00:05:38.310 --> 00:05:40.620
some quotes on the net,
right? Yeah. And these are

93
00:05:40.620 --> 00:05:43.440
the ones you're referring to.
So to my car, she's

94
00:05:43.440 --> 00:05:45.840
one of the PM's on
silver light, a set on

95
00:05:45.840 --> 00:05:50.550
his blog in March of
2006, he said, and I

96
00:05:50.550 --> 00:05:56.190
quote, the WPF package will
contain a small cross-platform subset

97
00:05:56.190 --> 00:05:59.870
of the CLR that run
C-sharp and vb.net. Yes. We

98
00:05:59.870 --> 00:06:03.020
are bringing C-sharp programming to
the Mac. Yes. That's what

99
00:06:03.020 --> 00:06:06.080
I've heard as well. Exactly.
Now Rory interviewed Scott goo.

100
00:06:06.200 --> 00:06:09.830
Right? And he said, also,
this is interesting. Is there

101
00:06:09.830 --> 00:06:12.320
any possibility of having the
framework that runs outside the

102
00:06:12.320 --> 00:06:16.370
browser? And Scott said, well,
that's something that we're looking

103
00:06:16.370 --> 00:06:19.220
into. We call it the
in-browser experience. And the outer

104
00:06:19.230 --> 00:06:22.190
browser experience Rory then said,
well, is this secret? I

105
00:06:22.190 --> 00:06:25.040
don't want to bring up
anything that is secret. Scott

106
00:06:25.040 --> 00:06:27.260
said, no, that's not something
we've talked about publicly, but

107
00:06:27.260 --> 00:06:29.720
it's something we're thinking about.
And he told Rory it

108
00:06:29.720 --> 00:06:32.600
was okay to keep it
in his channel nine video.

109
00:06:32.690 --> 00:06:34.600
And he didn't say Yes.
And he didn't say no.

110
00:06:34.600 --> 00:06:37.330
And he also said, we'll
be talking about that at

111
00:06:37.330 --> 00:06:41.980
mix. Exactly. Exactly. Yeah. Now,
if we look at the

112
00:06:41.980 --> 00:06:45.340
links for this show, Paul Wilson
had a pretty good analysis

113
00:06:45.340 --> 00:06:51.130
of this announcement@shrinkstir.com slash Oh
three R. And he pulled

114
00:06:51.130 --> 00:06:57.040
these things together, including some
information by Joe Stegman. And

115
00:06:57.040 --> 00:07:02.200
Joe segments said, we will
support small cross-platform CLR execution

116
00:07:02.200 --> 00:07:04.360
engine that will run on
both windows. So it's a

117
00:07:04.360 --> 00:07:07.570
different CLR, according to what
Joe Stegman is saying, right.

118
00:07:08.590 --> 00:07:10.750
That it gives the impression
that you'll be doing your

119
00:07:10.750 --> 00:07:13.690
development on windows and then
deploying it. And then the

120
00:07:13.690 --> 00:07:16.210
runtime will, will work fine
on the Mac and on,

121
00:07:17.080 --> 00:07:20.350
on the, on the PC.
So it's a tiny, tiny

122
00:07:20.350 --> 00:07:23.560
cross-platform CLR. Well, this is
what I've heard about silver

123
00:07:23.560 --> 00:07:26.170
light from the beginning, WPF
that there was going to

124
00:07:26.170 --> 00:07:29.650
be a small subset of
the.net framework that will be

125
00:07:29.650 --> 00:07:35.800
managed, that will run for
WPF applications. Right? It seems

126
00:07:35.800 --> 00:07:40.120
that people are saying again,
publicly that there's the tiny

127
00:07:40.120 --> 00:07:43.780
CLR and then a, you
know, chunks of the, of

128
00:07:43.780 --> 00:07:46.960
the BCL that will be
available. The base class library

129
00:07:47.080 --> 00:07:53.260
right now, where do you
fit this into your applications?

130
00:07:53.260 --> 00:07:55.480
And this isn't something that
I think I got a

131
00:07:55.480 --> 00:07:58.930
little confused about in the
last show. So it seems

132
00:07:58.930 --> 00:08:03.370
to me that before I
had thought that one might

133
00:08:03.370 --> 00:08:09.250
want to make a giant
Fullscreen Silverlight application and you

134
00:08:09.250 --> 00:08:10.600
know, the way that people
use a lot of the

135
00:08:10.600 --> 00:08:12.880
Adobe flex applications. Like if
you go to, if you

136
00:08:12.880 --> 00:08:17.050
go to maps.yahoo.com, that is
all flash. Now it's a

137
00:08:17.050 --> 00:08:21.880
big, giant flex application, Adobe
flash flex, which is pretty

138
00:08:21.880 --> 00:08:26.410
cool. You should check out
maps.yahoo.com one Adobe or Macromedia,

139
00:08:26.410 --> 00:08:29.320
I guess even before that
had the flash player, which

140
00:08:29.320 --> 00:08:32.830
ran outside the browser. Yeah.
I remember that exactly. Now

141
00:08:32.950 --> 00:08:35.050
we'll talk about that and
what it means with Apollo.

142
00:08:35.050 --> 00:08:37.750
Cause we're going to be
juxtaposing in, in a browser

143
00:08:37.750 --> 00:08:39.490
and out a browser. So
let's get back to silver

144
00:08:39.490 --> 00:08:44.350
light, right? So Silverlight is
a, is going to be

145
00:08:44.350 --> 00:08:48.520
a plugin that lets you
bring XAML parsing, you know,

146
00:08:48.520 --> 00:08:52.390
a richer parsing and richer
experience than HTML into the

147
00:08:52.390 --> 00:08:58.890
browser, PC and Mac Firefox
Safari. Now the cool part

148
00:08:58.890 --> 00:09:01.260
and the part I didn't
quite figure out last show

149
00:09:01.260 --> 00:09:05.490
or show 46 was that
every single element of XAML,

150
00:09:06.180 --> 00:09:09.300
it can be manipulated using
JavaScript as if it were

151
00:09:09.300 --> 00:09:11.820
just another piece of DHT,
Mel, right? So it's almost

152
00:09:11.820 --> 00:09:15.060
like an extended Dom. You
can reach into this silver

153
00:09:15.060 --> 00:09:19.140
light application and you can
create this XAML dynamically. So

154
00:09:19.140 --> 00:09:20.670
there's a couple of ways
you can get XAML into

155
00:09:20.670 --> 00:09:23.280
this. You can have it
directly on your HTML pages,

156
00:09:23.310 --> 00:09:26.040
like an embedded piece of
XAML like an Island of

157
00:09:26.040 --> 00:09:29.010
SAML. You can have it
come in as a file,

158
00:09:29.010 --> 00:09:31.800
like JavaScript source equal. You
can have the Zam will

159
00:09:31.800 --> 00:09:35.580
come in externally. And the
thing that is generating externally

160
00:09:35.580 --> 00:09:38.250
could actually be creating it.
It could be a static

161
00:09:38.250 --> 00:09:40.260
piece of XAML on the,
on the file system, on

162
00:09:40.260 --> 00:09:43.020
being served by the Brom,
by the server, or you

163
00:09:43.020 --> 00:09:46.110
could have an ASP X
page or a, a, an

164
00:09:46.110 --> 00:09:50.820
HTP handler dynamically generating XAML.
So the creation of XAML

165
00:09:50.820 --> 00:09:52.980
can be done on the
server side. On the client

166
00:09:52.980 --> 00:09:55.860
side, you could have JavaScript
that creates SAML. There's some

167
00:09:55.860 --> 00:09:59.130
good samples up at the
Silverlight SDK that show you

168
00:09:59.130 --> 00:10:03.780
how to on the client
side, retrieve RSS, parse it

169
00:10:04.290 --> 00:10:09.330
and dynamically generate XAML and
inserted into a Silverlight instance.

170
00:10:09.510 --> 00:10:14.640
All in the browser. Now
this use of JavaScript has,

171
00:10:14.700 --> 00:10:18.720
has confused some folks because
a there's a gentleman named

172
00:10:18.750 --> 00:10:22.170
Ted who has a blog
called Ted on flex. He

173
00:10:22.170 --> 00:10:26.970
is a flash evangelists, just
like Microsoft has evangelists, sodas,

174
00:10:27.300 --> 00:10:36.630
Adobe his stuff is@ashrinkstir.com slash
Oh three. You and he

175
00:10:36.630 --> 00:10:42.660
has a, a post about
Silverlight versus flash. And in

176
00:10:42.660 --> 00:10:45.330
that he says that, and
this is a quote he

177
00:10:45.330 --> 00:10:49.650
says, seeing as the CLR
didn't make version one, Oh,

178
00:10:49.650 --> 00:10:53.010
this is a dead loser,
depending on JavaScript to power

179
00:10:53.010 --> 00:10:56.250
Silverlight is a big mistake.
It severely limits high end

180
00:10:56.250 --> 00:10:59.730
potential. Now I can understand
why it's confusing because I

181
00:10:59.730 --> 00:11:01.860
have a feeling that it's
going to take awhile for

182
00:11:01.860 --> 00:11:04.740
this to kind of sink
in what Silverlight is trying

183
00:11:04.740 --> 00:11:06.900
to accomplish. But what I,
what I seem to understand,

184
00:11:07.410 --> 00:11:10.530
what I, what I have
gleaned is that using JavaScript

185
00:11:10.560 --> 00:11:14.940
to interact with Silverlight is
expected in an Ajax application

186
00:11:14.940 --> 00:11:17.820
where you've inserted silver light
as an active part of

187
00:11:17.820 --> 00:11:21.720
the page. But given that
we're gleaning that we're going

188
00:11:21.720 --> 00:11:25.950
to have a CLR running
inside here, a running inside

189
00:11:25.950 --> 00:11:28.080
a silver light instance. They're
not going to be using

190
00:11:28.080 --> 00:11:31.320
JavaScript to power it, but
rather to automate it as

191
00:11:31.320 --> 00:11:33.660
appropriate. So there's going to
be some kind of interesting

192
00:11:33.660 --> 00:11:36.750
design and architectural decisions to
figure out what you're going

193
00:11:36.750 --> 00:11:38.250
to write in C sharp
and what you're going to

194
00:11:38.250 --> 00:11:40.800
write in JavaScript. You know,
the thing that comes to

195
00:11:40.800 --> 00:11:43.380
mind immediately is that there
are more parts to this

196
00:11:43.380 --> 00:11:47.040
than a single simple SWF
file. You know, that's a

197
00:11:47.040 --> 00:11:50.400
really, really good point because
what they're doing is providing

198
00:11:50.430 --> 00:11:54.370
a, a, a thing to
bring together all of the

199
00:11:54.370 --> 00:11:56.590
different pieces that one might
want to use in a

200
00:11:56.590 --> 00:12:00.130
really active application. Like if
you'd like to feel like

201
00:12:00.130 --> 00:12:03.670
if you look at the,
the architecture overview that understand

202
00:12:03.670 --> 00:12:06.400
page is the Silverlight SDK,
is that shrink store slash

203
00:12:06.550 --> 00:12:09.760
Oh four one. And the
architectural overview is at shrink

204
00:12:09.760 --> 00:12:13.390
stir slash Oh four two.
They have this notion of

205
00:12:13.390 --> 00:12:16.150
a content package. This is
one other way that you

206
00:12:16.150 --> 00:12:21.460
could bring an active application
down. So there's, XAML, there's

207
00:12:21.490 --> 00:12:26.320
JavaScript, there's images, potentially some
embedded fonts and then media

208
00:12:26.320 --> 00:12:29.050
like a w a WMF
like a windows media file.

209
00:12:29.410 --> 00:12:32.200
So what you just said
is exactly right. There's, there's

210
00:12:32.200 --> 00:12:34.450
all of your assets that
you might want to use

211
00:12:34.450 --> 00:12:37.120
in an Epic and active
application that can be potentially

212
00:12:37.120 --> 00:12:41.860
packaged up and sent down,
including some information from streaming

213
00:12:41.860 --> 00:12:45.540
media sources. What, how do
you crew, how, I mean,

214
00:12:45.540 --> 00:12:50.550
I'm understanding WPF is created
with, you know, with the

215
00:12:50.550 --> 00:12:53.670
expression blend and all of
this stuff. Do you see

216
00:12:53.670 --> 00:12:58.590
expression blend being able to
create WPF E Absolutely. That's

217
00:12:58.590 --> 00:13:01.350
exactly what they expect you
to do. I see you're

218
00:13:01.350 --> 00:13:03.450
going to, or you can
write them in any number

219
00:13:03.450 --> 00:13:07.290
of applications because the idea
of file save as XAML

220
00:13:07.530 --> 00:13:09.360
is going to be integrated
and more and more design

221
00:13:09.360 --> 00:13:12.630
applications. XAML, I mean, it's
the, the code behind it.

222
00:13:12.630 --> 00:13:15.840
I mean, when you're talking
to WPF fee, where's, you

223
00:13:15.840 --> 00:13:18.390
know, the code is on
the client when you're talking

224
00:13:18.390 --> 00:13:21.570
WPF, it's sort of, you
know, With both of them

225
00:13:21.570 --> 00:13:25.170
as a developer, you're going
to use visual studio and

226
00:13:25.170 --> 00:13:27.000
you're going to use it.
It's in with, with the

227
00:13:27.000 --> 00:13:30.030
expression kind of family of
products. It depends on what

228
00:13:30.030 --> 00:13:32.160
you're trying to accomplish. Right.
You might be using blend

229
00:13:32.160 --> 00:13:35.820
to do Effie or WPF
you might be using, is

230
00:13:35.820 --> 00:13:39.660
it expression designed to actually
create an asset? Yeah. Well,

231
00:13:39.660 --> 00:13:41.670
I mean, what you just
said there, I can't imagine

232
00:13:41.940 --> 00:13:46.560
using visual studio to create
a non-managed any, any kind

233
00:13:46.560 --> 00:13:50.970
of code assembly, Visual studio
has better JavaScript, debugging than

234
00:13:50.970 --> 00:13:53.670
people give it credit for.
Yeah. And of course, with

235
00:13:53.670 --> 00:13:56.880
all of these stuff, like
the IP development toolbar and

236
00:13:57.090 --> 00:14:03.060
Firefox debugging stuff, like Firebug,
you know, JavaScript is becoming

237
00:14:03.060 --> 00:14:06.000
a whole programming world of
its own and the browser

238
00:14:06.000 --> 00:14:10.380
is the IDE. So it
may feel a little fragmented

239
00:14:10.380 --> 00:14:12.390
initially because you're dealing with
a lot of different little

240
00:14:12.390 --> 00:14:15.630
text files and such, but
those text files can be

241
00:14:15.630 --> 00:14:18.090
generated by a number of
different tools. You can use

242
00:14:18.090 --> 00:14:22.620
the WPF plugins for visual
studio to do the editing.

243
00:14:22.800 --> 00:14:25.260
As long as you only
use the subset of XAML,

244
00:14:25.260 --> 00:14:29.570
that Silverlight supports, you can
use asp.net. You can do,

245
00:14:29.610 --> 00:14:32.520
you know, and there's nothing
about asp.net required for, for

246
00:14:32.520 --> 00:14:35.400
several lights. Certainly we're hoping
that people will use this

247
00:14:35.400 --> 00:14:38.130
wherever they want to. Now,
one of the things that's

248
00:14:38.130 --> 00:14:41.790
significant about Silverlight is that
we're talking about windows, media

249
00:14:41.790 --> 00:14:45.900
support and codec support on
the Mac. So they're also

250
00:14:45.900 --> 00:14:48.840
kind of promoting windows media
a little bit more. I

251
00:14:48.840 --> 00:14:52.400
think that just as video
has the, the killer app

252
00:14:52.430 --> 00:14:56.780
for, for flash, with YouTube,
I think that they're hoping

253
00:14:56.780 --> 00:14:59.240
the same thing for silver
light and being able to

254
00:14:59.240 --> 00:15:01.910
have much better codec support
on the Mac is going

255
00:15:01.910 --> 00:15:04.430
to be better. Also, they're
going to have high definition

256
00:15:04.430 --> 00:15:08.450
support for a seven 20
P depending on your CPU.

257
00:15:09.050 --> 00:15:11.500
So that's going to be
pretty cool. No, I'm looking

258
00:15:11.500 --> 00:15:15.880
at the microsoft.com/silverlight page. And
there's a video there that

259
00:15:15.880 --> 00:15:18.460
you can play in. My
first thought was, huh? That's

260
00:15:18.460 --> 00:15:21.070
funny. They're going to have
a flash video to show

261
00:15:21.070 --> 00:15:25.240
Silverlight, but then I clicked
play video and it installed

262
00:15:25.240 --> 00:15:28.780
silver. Yeah. If you, if
you, if you right click

263
00:15:28.780 --> 00:15:30.880
and do a view source,
you can see on the,

264
00:15:30.880 --> 00:15:34.570
on the load there, they
say news Silverlight player, Right?

265
00:15:34.570 --> 00:15:38.800
So, so we're actually watching
a, you know, a lightweight

266
00:15:38.800 --> 00:15:43.270
video Allah flash stream through
this web browser using their

267
00:15:43.270 --> 00:15:46.570
technology. We're not using flash
stream. They're, there's, they're streaming

268
00:15:46.570 --> 00:15:51.880
a WMV, right? This issue
about a flash versus Silverlight

269
00:15:51.880 --> 00:15:54.100
is a, is a contentious
one. I mean, I'm a

270
00:15:54.100 --> 00:15:57.040
Microsoft developer and they've kind
of paid my mortgage for

271
00:15:57.040 --> 00:15:58.780
a number of years, but
I don't want to be

272
00:15:58.780 --> 00:16:01.930
considered a religious zealot. So,
I mean, I'm excited about

273
00:16:01.930 --> 00:16:05.230
silver light, but at the
same time, you have to

274
00:16:05.230 --> 00:16:08.320
ask yourself why aren't more
developers using flash and flex

275
00:16:09.010 --> 00:16:12.580
good point. There's a guy
named Graham Harker. Who's got

276
00:16:12.580 --> 00:16:16.540
a great flex.net blog. And
he asked that question, why

277
00:16:16.540 --> 00:16:20.320
don't more developers use flex?
And I think that it's,

278
00:16:20.650 --> 00:16:23.320
it's part of the, I
would agree with him that

279
00:16:23.320 --> 00:16:26.290
it's, it's, it's part about
this good developer network. I

280
00:16:26.290 --> 00:16:29.110
mean, Microsoft has done a
fine job of releasing just

281
00:16:29.110 --> 00:16:33.760
a ridiculous amount of information
on MSDN and they're MSDN,

282
00:16:33.970 --> 00:16:37.300
universal subscriptions are really, you
know, what, what, it's all

283
00:16:37.300 --> 00:16:41.440
about the fact that they,
they released expression as part

284
00:16:41.470 --> 00:16:45.190
of, or parts of the
expression suite rather to MSDN

285
00:16:45.190 --> 00:16:48.670
subscribers just makes it so
easy because how does a

286
00:16:48.670 --> 00:16:52.720
developer try to get support
for doing something on IFE?

287
00:16:52.720 --> 00:16:54.430
Well, I'm going to go
and download it from my

288
00:16:54.430 --> 00:16:57.550
MSDN subscription, do a prototype,
and I'm going to show

289
00:16:57.550 --> 00:17:01.390
my boss, right? So it's
gotta be just that easy

290
00:17:01.390 --> 00:17:03.490
as well to go and
do the same thing. Right?

291
00:17:04.330 --> 00:17:07.450
So Adobe has a similar
network called the enterprise developer

292
00:17:07.450 --> 00:17:10.780
network, and they're getting a
lot better to woo, a

293
00:17:10.840 --> 00:17:14.770
wooing, the.net developers. You can
go to flex.org and they've

294
00:17:14.770 --> 00:17:17.650
got a whole bunch of
information up there about how

295
00:17:17.650 --> 00:17:20.950
you can talk to a
talk to flex with.net, how

296
00:17:20.950 --> 00:17:24.130
you can get, get onto
their developer network. And they're,

297
00:17:24.150 --> 00:17:26.530
they're doing a much better
job of opening it up,

298
00:17:26.530 --> 00:17:29.290
you know, early versions of
flex required the flex server,

299
00:17:29.290 --> 00:17:32.770
but now the flex two
stuff, you don't need to

300
00:17:32.770 --> 00:17:35.890
have an Adobe server on
the back end. You can

301
00:17:35.890 --> 00:17:40.360
have.net pulling out web services.
Like there's a really great

302
00:17:40.360 --> 00:17:44.410
tutorial on Graham site where
he creates a little.page that

303
00:17:44.410 --> 00:17:48.100
returns some XML and makes
a, a, a dynamic flash

304
00:17:48.130 --> 00:17:51.660
chart using their, their stuff
it's called M X, M

305
00:17:51.660 --> 00:17:56.700
L. So Microsoft has XAML
and Adobe has their MXML.

306
00:17:56.850 --> 00:17:59.190
And it's really simple. I
mean, it's like MX call

307
00:17:59.190 --> 00:18:01.860
an application, you set some
colors, point it to a

308
00:18:01.860 --> 00:18:04.650
service, and you say, MX
call colon line chart. And

309
00:18:04.650 --> 00:18:07.740
in like 15 lines, he's
got a dynamic flash chart.

310
00:18:08.850 --> 00:18:12.720
It's way easier than I
remember doing making Swift files

311
00:18:12.720 --> 00:18:16.530
back in the day. But
the real question is how

312
00:18:16.530 --> 00:18:18.450
are they going to be
able to woo the developers?

313
00:18:18.450 --> 00:18:24.750
Because they've got 97%, 98%
penetration. I mean, that's how

314
00:18:24.750 --> 00:18:28.910
many internet enabled PCs have
flash on it. It's ridiculous.

315
00:18:28.950 --> 00:18:32.640
Ridiculous. And how many have
Silverlight right? Zero. How many

316
00:18:32.640 --> 00:18:37.610
have Java? 87% of jobs,
Right? You don't see any,

317
00:18:37.760 --> 00:18:40.580
it's funny that Java is
completely out of this conversation.

318
00:18:40.580 --> 00:18:43.310
I mean, That's a good
point. It is because people

319
00:18:43.310 --> 00:18:44.990
started to fear it, right?
I mean, you ever get

320
00:18:44.990 --> 00:18:47.540
that, that kind of pause
as you visit a page

321
00:18:47.540 --> 00:18:49.550
that has Java on it.
No. Yeah. You gotta go,

322
00:18:49.760 --> 00:18:53.660
Oh no, you know, everything's
gonna fall apart now because

323
00:18:53.660 --> 00:18:56.000
I've just reached a play
with Joe. Now the problem

324
00:18:56.000 --> 00:18:59.240
with flash is that people
associate it with banner ads

325
00:18:59.270 --> 00:19:04.010
and they associate it with
flashy things. Right? So candy,

326
00:19:04.430 --> 00:19:07.610
I think that there's largely
a perception issue with managing

327
00:19:07.610 --> 00:19:09.170
flash. And then there's also
a little bit of that

328
00:19:09.170 --> 00:19:12.860
confusion between what was flash,
what was shockwave, you know,

329
00:19:12.890 --> 00:19:15.890
early on, I was very
confused about their shockwave and

330
00:19:15.890 --> 00:19:17.480
all the three D stuff
and the games you can

331
00:19:17.480 --> 00:19:19.910
do in shockwave. And that
was a big download. It

332
00:19:19.910 --> 00:19:22.400
was like four or five
megs. And then flash is

333
00:19:22.400 --> 00:19:26.210
just tiny, tiny, tiny, and
it exists everywhere already. So

334
00:19:26.210 --> 00:19:28.130
there's definitely gonna be a,
it's be interesting to see

335
00:19:28.130 --> 00:19:32.360
how Microsoft pushes out this
runtime right now. They're saying

336
00:19:32.360 --> 00:19:34.880
the runtimes going to be
about a megabyte, maybe a

337
00:19:34.880 --> 00:19:37.520
megabyte and a half on
windows, and then a little

338
00:19:37.520 --> 00:19:40.280
bit bigger on the Mac
because the Mac has the,

339
00:19:40.370 --> 00:19:42.920
both the power PC and
the Intel chips, right. So

340
00:19:42.920 --> 00:19:45.590
they have a universal binary
format. So the Mac version

341
00:19:45.590 --> 00:19:48.320
is a little bigger, but
once it comes down, it's,

342
00:19:48.320 --> 00:19:50.750
you know, it's just like
flash. The question is, you

343
00:19:50.750 --> 00:19:52.880
know, how few clicks can
they get it down to?

344
00:19:53.360 --> 00:19:55.250
And then what's the security
story going to be like,

345
00:19:55.910 --> 00:19:58.790
Hey, did you see key
Felder's response to a Rorion

346
00:19:58.790 --> 00:20:04.850
Scott's video? That's that does
shrink stir.com/oh three Z. Yeah.

347
00:20:04.880 --> 00:20:06.800
Yeah. He takes it all
the way to the iPhone

348
00:20:07.160 --> 00:20:11.690
in speculation. Yeah. Now he's
speculating that this could potentially

349
00:20:11.690 --> 00:20:14.540
go to a mobile device,
right. That, you know, if

350
00:20:14.540 --> 00:20:17.150
WP IFE is only a
megabyte and it's a little

351
00:20:17.420 --> 00:20:19.970
tiny CLR, again, you could
get, he calls it mobile

352
00:20:19.970 --> 00:20:23.510
eye candy, you know, and
this, this brings into question

353
00:20:23.510 --> 00:20:27.140
kind of the whole CLR
ecosystem. Now we've got suddenly,

354
00:20:27.140 --> 00:20:30.710
we've had maybe two CLRs
on the, on the desktop,

355
00:20:30.980 --> 00:20:33.440
you know, we've got WPF,
VM, excuse me again, silver

356
00:20:33.440 --> 00:20:35.090
light. So it's going to
take a while for me

357
00:20:35.090 --> 00:20:37.100
to get used to that
still. So we've got Dottin

358
00:20:37.100 --> 00:20:40.130
at three O and then
we've got this tiny runtime,

359
00:20:40.370 --> 00:20:42.290
this tiny thing, and then
also on the Mac now,

360
00:20:42.290 --> 00:20:45.620
but then on the mobile
device, which he's totally speculating,

361
00:20:46.490 --> 00:20:50.260
we've also, we've already got
the compact framework. So it'll

362
00:20:50.260 --> 00:20:54.400
be interesting to see, you
know, which frameworks survive, you

363
00:20:54.400 --> 00:20:56.550
know, have they, have they
written a better framework? Yeah.

364
00:20:56.820 --> 00:20:59.910
Everybody thought show 46 was
confusing. I'm just as confused

365
00:20:59.910 --> 00:21:03.000
today as I was, then
it's a shame. Let's, let's

366
00:21:03.000 --> 00:21:05.190
try that. Let's try Review,
because I'm feeling this is

367
00:21:05.190 --> 00:21:06.930
a little bit spastic and
we still haven't gotten to

368
00:21:06.930 --> 00:21:09.540
talk with me. The fact
is, is that there still

369
00:21:09.540 --> 00:21:12.090
a lot? We don't know,
you know? Well, yeah. And

370
00:21:12.090 --> 00:21:14.520
we're going to find that
at mix, right? Rory and

371
00:21:14.520 --> 00:21:16.890
I filmed a number of
videos for mics that we

372
00:21:16.890 --> 00:21:20.460
should release on channel nine
soon. And I know that

373
00:21:20.460 --> 00:21:21.990
there's going to be stuff
at mix that no one

374
00:21:21.990 --> 00:21:24.330
has. No one knows, no
matter, no matter how much

375
00:21:24.330 --> 00:21:26.340
speculation there is. Right. Richard
and I are going to

376
00:21:26.340 --> 00:21:30.240
be interviewing Brad Abrams during
that same week of the

377
00:21:30.240 --> 00:21:32.670
mix. So we're going to
pick his brain about everything

378
00:21:32.670 --> 00:21:34.590
they're announcing there too. Right.
And I'm going to talk

379
00:21:34.590 --> 00:21:37.110
to Scott Guthrie while I'm down
there as well. So we're,

380
00:21:37.370 --> 00:21:40.080
we're covering it folks. Oh,
it's covered. So let's, let's

381
00:21:40.080 --> 00:21:42.750
try to restart a review
here for a second. Okay.

382
00:21:43.110 --> 00:21:48.390
So WPF, the windows presentation
foundation would be the rich

383
00:21:48.540 --> 00:21:52.950
XAML based replacement for GDI
that runs outside the browser

384
00:21:52.950 --> 00:21:57.420
and requires dotnet three Oh
on Vista runs on XP.

385
00:21:57.840 --> 00:22:03.690
Yep. Okay. WP IFE now
called Silverlight Silverlight is a

386
00:22:04.020 --> 00:22:09.630
tiny about one Meg unmanaged
plugin for browsers it'll run

387
00:22:09.630 --> 00:22:13.380
on Firefox and Safari. So
far they've announced support for

388
00:22:13.380 --> 00:22:16.410
Mac they've announced support for
windows. They're saying they're going

389
00:22:16.410 --> 00:22:18.600
to take it back to
windows 2000, but I don't

390
00:22:18.600 --> 00:22:21.930
know. It'll at least work
on XP and Vista. Nothing

391
00:22:21.930 --> 00:22:25.350
about Linux, huh? Nothing yet
about Linux. I don't know.

392
00:22:25.950 --> 00:22:28.980
But if you remember that
the Mac is Linux. Well,

393
00:22:28.980 --> 00:22:32.090
I, yeah, that's a free
Unix free BSD based. Right?

394
00:22:32.090 --> 00:22:33.900
So The fact that they
got to work in the

395
00:22:33.900 --> 00:22:36.090
Mac is, is, is a
good sign. That's a very

396
00:22:36.090 --> 00:22:38.100
good at the same time.
There's so many flavors of

397
00:22:38.100 --> 00:22:40.860
Lennox and there's so many
different browsers. So it would

398
00:22:40.860 --> 00:22:42.300
be which one do they
do? Would they do a

399
00:22:42.300 --> 00:22:45.900
boon to be true? The
Boone to ensues, which you

400
00:22:45.900 --> 00:22:48.840
know, which brother That's one
of Lennox's big problems. So

401
00:22:48.840 --> 00:22:51.300
back to the review, So
you can embed your Z,

402
00:22:51.320 --> 00:22:55.140
X years AML on HTML
pages, you can fit a

403
00:22:55.140 --> 00:22:59.490
silver light object kind of
seamlessly into an existing asp.net

404
00:22:59.490 --> 00:23:02.430
and an Ajax application. I
don't think it's fair to

405
00:23:02.430 --> 00:23:06.390
say that Silverlight would replace
your application rather. They would

406
00:23:06.390 --> 00:23:08.760
augment it. If you wanted
to add a bit of

407
00:23:08.760 --> 00:23:12.780
activeness to your, to your
site, right? Active charts, active

408
00:23:12.780 --> 00:23:16.500
graphs, new kinds of visualizations,
video, stuff like that, right.

409
00:23:16.770 --> 00:23:18.600
You're going to be using
the tools that you already

410
00:23:18.600 --> 00:23:24.150
use. JavaScript, Ajax, asp.net, or
whatever markup you're used to

411
00:23:24.150 --> 00:23:26.430
using. There's every reason to
believe that it will be

412
00:23:26.430 --> 00:23:30.180
a subset, just like pocket
PC is a subset where

413
00:23:30.180 --> 00:23:34.660
as a, the stuff that's
implemented is backward compatible. Right?

414
00:23:34.900 --> 00:23:38.310
I have a feeling that
people who know C-sharp and

415
00:23:38.310 --> 00:23:41.850
vb.net will find their investments
to be safe. They will.

416
00:23:42.120 --> 00:23:46.340
Okay. Now on, on the,
just, you know, we, we

417
00:23:46.340 --> 00:23:48.500
haven't given them fair time.
We should probably actually interview

418
00:23:48.500 --> 00:23:50.510
a flex guy. We should
actually have someone who knows

419
00:23:50.510 --> 00:23:52.610
flex, give me a call
and we'll, we'll do a

420
00:23:52.610 --> 00:23:54.740
whole show on flex. Right.
And then we gotta talk

421
00:23:54.740 --> 00:23:58.970
about Apollo. Okay. So flex
of course, ha is, is

422
00:23:59.000 --> 00:24:04.700
the flash flex is Adobe's
plugin. Of course they have

423
00:24:04.700 --> 00:24:10.070
98% penetration while Silverlight has
zero people. Often call server

424
00:24:10.070 --> 00:24:12.830
light, the flash killer. We
don't know if that's fair

425
00:24:12.830 --> 00:24:15.800
or not, but it's clearly
getting right into their space.

426
00:24:17.180 --> 00:24:20.450
I think that there is
some really compelling reasons to

427
00:24:20.450 --> 00:24:22.970
take a look at flash.
And I think ubiquity, especially

428
00:24:22.970 --> 00:24:25.880
for public websites is one
of them. I think that

429
00:24:25.880 --> 00:24:30.530
Adobe does kind of a
mediocre job of making.net developers

430
00:24:30.530 --> 00:24:33.170
aware of this stuff, but
that's kind of the job

431
00:24:33.170 --> 00:24:35.180
of the evangelists to spread
the word. I think that

432
00:24:35.180 --> 00:24:38.210
gram site is a good
start. Ted on flex has

433
00:24:38.210 --> 00:24:43.280
a lot of information about
this. Now Apollo Apollo is,

434
00:24:43.690 --> 00:24:45.230
and we've got a link
to that up on the,

435
00:24:45.350 --> 00:24:50.990
on the, the site it's
at shrink stir.com/oh three X.

436
00:24:50.990 --> 00:24:53.000
We've got lots of links.
We haven't mentioned that are

437
00:24:53.000 --> 00:24:55.280
up there. So be sure
to check it out. We've

438
00:24:55.280 --> 00:24:58.880
got screencasts of how to
develop stuff in flex. So

439
00:24:58.880 --> 00:25:00.200
I want to make sure,
you know, again, we're not

440
00:25:00.200 --> 00:25:02.930
able to give Adobe fulltime
on this particular show, but

441
00:25:02.930 --> 00:25:05.360
we'll do a show in
the future. So Apollo is

442
00:25:05.360 --> 00:25:08.090
the out of the browser,
like you referred to flash

443
00:25:08.090 --> 00:25:10.550
player back in the day,
right? This is kind of

444
00:25:10.550 --> 00:25:14.930
like flash player plus plus
plus that's across operating system

445
00:25:14.930 --> 00:25:18.530
runtime for Adobe. So we're
going to work on windows.

446
00:25:18.530 --> 00:25:21.290
And again, on, on Mac,
they're saying it's going to

447
00:25:21.290 --> 00:25:24.440
come out second half of
2007. It's going to work

448
00:25:24.440 --> 00:25:27.530
on Vista and XP service
pack two to work on

449
00:25:27.530 --> 00:25:30.770
both versions of Mac power,
PC and Intel. They're going

450
00:25:30.770 --> 00:25:36.110
to have a support for
a flex flash HTML support

451
00:25:36.110 --> 00:25:37.820
to talk to the file
system so they can have

452
00:25:37.820 --> 00:25:42.050
a security model, JavaScript support.
They're going to have a

453
00:25:42.080 --> 00:25:46.010
partially implemented native windowing API.
So these applications could potentially

454
00:25:46.010 --> 00:25:48.620
look a lot like windows
apps and, and behave like

455
00:25:48.620 --> 00:25:50.780
them, but they will be
running in their own process

456
00:25:50.780 --> 00:25:52.940
space. You can actually go
up and get their alpha

457
00:25:52.940 --> 00:25:57.170
and run a Apollo applications.
Now on the version that

458
00:25:57.170 --> 00:25:59.600
I used, you're sitting in
your browser and you see

459
00:25:59.600 --> 00:26:02.660
a dot air, a I
R extension, and you click

460
00:26:02.660 --> 00:26:04.550
on it. And then it
leaps out into the browser,

461
00:26:04.760 --> 00:26:09.470
almost like a click once
experience out into Apollo. They're

462
00:26:09.470 --> 00:26:11.810
also saying that for one,
Oh, they're going to have

463
00:26:11.810 --> 00:26:15.290
support for PDF and a
transparency and some different kinds

464
00:26:15.290 --> 00:26:18.710
of cool things like that.
Cool. The Apollo runtime they're

465
00:26:18.710 --> 00:26:22.010
saying is going to be
between five and nine megs.

466
00:26:22.010 --> 00:26:26.840
This is from the Apollo
facts. Okay. And then you

467
00:26:26.840 --> 00:26:29.390
can just use HTML JavaScript,
or you can use all

468
00:26:29.390 --> 00:26:32.330
the flex flash and stuff.
So it's, it's a very

469
00:26:32.330 --> 00:26:38.030
similar environment. It's almost like
a Paulo is, is bringing

470
00:26:38.030 --> 00:26:40.700
flood. They're trying to bring
flash as a, as a,

471
00:26:40.700 --> 00:26:43.610
as a complete runtime. Right.
You know, I mean, it's,

472
00:26:43.610 --> 00:26:47.420
it's small O S a
yeah. It's, it's actually getting

473
00:26:47.420 --> 00:26:49.790
more into Java's VM space,
just going to say a

474
00:26:49.790 --> 00:26:53.000
little bit more than it
is getting into a, into

475
00:26:53.000 --> 00:26:57.860
WPF space. Okay. So I
think we pretty much righted

476
00:26:57.860 --> 00:27:00.260
the wrongs and covered the
cross, the cross, the T's

477
00:27:00.260 --> 00:27:02.960
and dotted the I's And
certainly brought up another, another

478
00:27:02.960 --> 00:27:06.260
of new questions that fuse
folks, we've got a whole

479
00:27:06.260 --> 00:27:09.200
pile of links to this
kind of stuff. Right. I

480
00:27:09.200 --> 00:27:11.720
hope we did a decent
job of explaining kind of

481
00:27:11.720 --> 00:27:14.540
how this fits in. I
know that I feel a

482
00:27:14.540 --> 00:27:17.630
little less confused because I
understand now how I would

483
00:27:17.630 --> 00:27:21.680
add support for silver light
into my existing applications. Right.

484
00:27:21.920 --> 00:27:23.960
But I also need to
spend more time looking at

485
00:27:23.960 --> 00:27:28.790
flash and, and weighing the
pros and cons. Cause all

486
00:27:28.790 --> 00:27:31.370
I really want to do
is give a rich experience

487
00:27:31.370 --> 00:27:32.810
to my users and I
want to do it in

488
00:27:32.810 --> 00:27:38.120
the easiest possible way. You
know, 97% penetration or 98%

489
00:27:38.120 --> 00:27:41.780
penetration for flash is pretty
compelling. But a one Meg

490
00:27:41.810 --> 00:27:46.430
download is for, for some
applications is, is reasonable. Especially

491
00:27:46.430 --> 00:27:49.760
if it doesn't require any
existing runtime. Let me say

492
00:27:49.760 --> 00:27:53.360
this before we go. Just
looking at the February CTP

493
00:27:53.360 --> 00:27:57.950
of Silverlight still called WPP
at the time I just

494
00:27:59.120 --> 00:28:03.380
ran a Silverlight sample and
I loaded up sysinternals process

495
00:28:03.380 --> 00:28:06.410
Explorer just to kind of
look inside to see what's

496
00:28:06.410 --> 00:28:08.600
happening. Cause I want to
see what DLLs get loaded.

497
00:28:10.070 --> 00:28:15.230
Exactly. And the WPF stuff.
It's only loading for DLLs

498
00:28:15.880 --> 00:28:20.420
on the version that I've
got. They're all unmanaged. Currently

499
00:28:20.420 --> 00:28:24.710
those DLLs have named like
AIG core and AIG codec

500
00:28:25.130 --> 00:28:30.500
and AGC T R lag
control. Those are the tiny

501
00:28:30.500 --> 00:28:33.560
little DLLs totally unmanaged code.
I kind of tried to

502
00:28:33.560 --> 00:28:36.580
reflect into them. I called,
I used a tool called

503
00:28:37.070 --> 00:28:40.910
dump bin comes with a
windows SDK, you go dump

504
00:28:40.910 --> 00:28:46.130
in slash dependence. You can
basically ask these portable executable

505
00:28:46.130 --> 00:28:49.160
is you can say, what
dependencies do you have? Right.

506
00:28:49.490 --> 00:28:50.870
One of the things you
want to find out when

507
00:28:50.870 --> 00:28:54.200
you're bringing something onto your
system is what do you

508
00:28:54.200 --> 00:28:57.230
need to have? So I
ran dumping on each of

509
00:28:57.230 --> 00:28:59.630
these things and it's interesting.
Most of them have just

510
00:28:59.630 --> 00:29:03.860
the basic dependencies, you know,
the C runtime GDI 32.

511
00:29:04.400 --> 00:29:06.890
The only one that was
particularly interesting. The only interesting

512
00:29:06.890 --> 00:29:11.210
dependency that I thought was
that they depended on direct

513
00:29:11.210 --> 00:29:14.690
sound. So D sound dot
DLL is in there, but

514
00:29:14.690 --> 00:29:17.660
all the other things are
just the usual suspects, shell

515
00:29:17.660 --> 00:29:22.280
32, Colonel 32 when I
net stuff. So it's very,

516
00:29:22.280 --> 00:29:26.300
very tight unmanaged code. Yeah.
Here's that they've squeezed a

517
00:29:26.300 --> 00:29:29.300
great deal of functionality into,
you know, a mega two

518
00:29:29.690 --> 00:29:33.700
and the dependencies that they
have on external things are

519
00:29:33.710 --> 00:29:37.820
very minimal. I, again, I'm
totally speculating here, but it

520
00:29:37.820 --> 00:29:41.240
feels to me like since
they have so few dependencies,

521
00:29:41.770 --> 00:29:44.620
the compatibility and the chances
that this will work on

522
00:29:44.620 --> 00:29:48.190
everyone's machine without, you know,
a lot of versioning problems

523
00:29:48.310 --> 00:29:51.430
of the underlying DLLs, it
sounds pretty good. Yeah. Again,

524
00:29:51.430 --> 00:29:54.580
total speculation based on one
running of dump in, but

525
00:29:55.720 --> 00:29:57.760
I encourage folks to do
that kind of, you know,

526
00:29:57.770 --> 00:30:00.840
spelunking as they learn about
this new technology. All right.

527
00:30:00.840 --> 00:30:05.190
Scott and well, everybody be
listening around April 30th that week

528
00:30:05.190 --> 00:30:08.520
around mics for, for the
real scoop, just straight from

529
00:30:08.520 --> 00:30:11.910
the horses mouth from one
end on Hansel minutes from

530
00:30:11.910 --> 00:30:14.040
the other on.net rocks. We'll
get to the bottom of

531
00:30:14.040 --> 00:30:15.570
this and I'm sure it's
going to be good news

532
00:30:17.340 --> 00:30:20.790
and Scott, that's a show.
Good deal. All right. Thanks

533
00:30:20.790 --> 00:30:24.210
again. And we'll see you
next week on Hanselman.

