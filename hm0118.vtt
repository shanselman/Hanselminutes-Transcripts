WEBVTT FILE

1
00:00:04.890 --> 00:00:16.820
<inaudible> From Hanselman it's dot
com. It's Hanselman. It's a

2
00:00:16.820 --> 00:00:21.080
weekly discussion with web developer
and technologist Scott Hanselman hosted

3
00:00:21.080 --> 00:00:26.120
by Carl Franklin. This is Lawrence Ryan
announcing show number one 18.

4
00:00:26.240 --> 00:00:32.150
Recorded live Wednesday, June 18th, 2008. Support
for Hanselman it's just provided

5
00:00:32.150 --> 00:00:36.470
by. Tellerik already controls the
most comprehensive suite of components

6
00:00:36.470 --> 00:00:46.310
for windows forms and asp.net
web applications. online@wwwdottelerik.com and by

7
00:00:46.310 --> 00:00:49.550
the code better blog network,
delivering tried and true solutions

8
00:00:49.550 --> 00:00:53.210
to real world problems for
building better software online at

9
00:00:53.480 --> 00:00:58.160
<inaudible> dot com. Support is
also provided by.net developers journal

10
00:00:58.430 --> 00:01:04.190
the world's leading.net developer magazine
online at www dot <inaudible>

11
00:01:04.430 --> 00:01:08.360
dot com. In this episode,
Scott talks with authors, Mary

12
00:01:08.360 --> 00:01:15.830
and Tom Poppendieck about lean
software development. Hi, this is

13
00:01:15.830 --> 00:01:17.990
Scott Hanselman, and this is
another episode of Hansel minutes.

14
00:01:17.990 --> 00:01:20.930
I'm sitting here in Oslo,
Norway with Mary and Tom

15
00:01:20.930 --> 00:01:23.120
Poppendieck, author of a couple
of books that continue to

16
00:01:23.120 --> 00:01:27.290
sell well about lean thinking
and software development. Thank you

17
00:01:27.290 --> 00:01:29.270
so much for sitting down
with me today. I know

18
00:01:29.270 --> 00:01:32.660
you have a lot of
thoughts about this, and we've

19
00:01:32.660 --> 00:01:35.150
had some pretty spirited discussions
in the hallways and on

20
00:01:35.150 --> 00:01:37.940
a couple of agile panels
during the agile panel this

21
00:01:37.940 --> 00:01:41.300
morning, I made the comment
about using success as a

22
00:01:41.300 --> 00:01:44.870
metric and a, and Mary,
you, you jumped all over

23
00:01:44.870 --> 00:01:47.810
me about the definition of
success. And I thought that

24
00:01:47.810 --> 00:01:49.670
was really interesting. Can you
say a little something about

25
00:01:49.670 --> 00:01:53.870
that? Sure. There's this report
called the chaos report. It's

26
00:01:53.870 --> 00:01:56.540
put out by the Standish
group it's been put out

27
00:01:56.540 --> 00:02:00.350
since maybe early nineties every
year. It tells those of

28
00:02:00.350 --> 00:02:04.460
us in software development, how
terrible we are. And it

29
00:02:04.460 --> 00:02:09.530
says that if you look
at projects, a huge percentage

30
00:02:09.530 --> 00:02:13.070
of projects are either not
on time or not in

31
00:02:13.070 --> 00:02:17.240
scope or not in budget
and therefore they're failures. So

32
00:02:17.240 --> 00:02:21.470
therefore we in software development
are failures. So that report

33
00:02:21.470 --> 00:02:26.540
defines success as on time
on budget and in scope.

34
00:02:26.900 --> 00:02:29.660
And I think that's the
wrong definition of success. And

35
00:02:29.660 --> 00:02:32.860
as I heard a few
hints of on time and

36
00:02:32.860 --> 00:02:36.590
budget as success from you,
I challenged the concept. I

37
00:02:36.590 --> 00:02:40.610
think success has to do
with making sure that you

38
00:02:41.120 --> 00:02:43.970
have a business success. For
example, if it's a commercial

39
00:02:43.970 --> 00:02:50.090
project that you develop something
that does what it is

40
00:02:50.090 --> 00:02:53.570
that the business needs that
creates, for example, a product

41
00:02:53.570 --> 00:02:57.990
that has good market share
has good profitability. If it's

42
00:02:58.220 --> 00:03:01.780
in the private at minimum,
there was a reason for

43
00:03:01.780 --> 00:03:06.280
which this project was funded,
is that reason accomplished. And

44
00:03:06.370 --> 00:03:10.030
I don't think there's necessarily
a correlation between cost schedule

45
00:03:10.030 --> 00:03:14.400
and scope and true success
of a project. It seems

46
00:03:14.400 --> 00:03:17.790
that all the developers are
told is their goal is

47
00:03:17.790 --> 00:03:20.920
to be done by a
certain date, seems like that.

48
00:03:21.270 --> 00:03:24.240
Should the developers be worried
about the business like that?

49
00:03:24.750 --> 00:03:28.770
They certainly shouldn't. I developed
products for three of them

50
00:03:29.400 --> 00:03:32.340
and we had product teams.
They were somewhere between a

51
00:03:33.210 --> 00:03:37.230
half, a dozen and 30
people. And the charter was

52
00:03:37.230 --> 00:03:39.120
to develop new products and
put them on the market.

53
00:03:40.050 --> 00:03:43.350
The team was expected as
a team to figure out

54
00:03:43.350 --> 00:03:48.150
what the market really needed
to create a, a profit

55
00:03:48.150 --> 00:03:50.040
and loss statement, which showed
whether or not it would

56
00:03:50.040 --> 00:03:56.580
be profitable To then decide
what kind of features should

57
00:03:56.580 --> 00:03:58.740
be in it. When was
the right time to introduce

58
00:03:58.740 --> 00:04:01.890
it to the market. And
the team was judged based

59
00:04:01.890 --> 00:04:04.110
on whether or not a
year later, they had a

60
00:04:04.110 --> 00:04:07.050
profitable P and L for
the actual product in the

61
00:04:07.050 --> 00:04:10.680
market. That means that everybody
on the team is involved

62
00:04:10.680 --> 00:04:14.370
in figuring out what's really
important. What isn't important, whether

63
00:04:14.370 --> 00:04:16.500
it happens to be schedule
or whether it happens to

64
00:04:16.500 --> 00:04:20.070
be meeting a, a show
date or, or whatever. But

65
00:04:20.070 --> 00:04:22.380
the team is a group
decides, what are we really

66
00:04:22.380 --> 00:04:25.020
trying to do? Because success
is defined at a higher

67
00:04:25.020 --> 00:04:31.320
level than the derivatives of
cost schedule scope. Very few

68
00:04:31.320 --> 00:04:37.050
organizations really want software. They
have a problem that they

69
00:04:37.050 --> 00:04:41.310
want solved. They have a
opportunity they want to take

70
00:04:41.310 --> 00:04:44.940
advantage of if they could
solve that problem without software

71
00:04:45.840 --> 00:04:49.050
so much the better, if
they could solve, take advantage

72
00:04:49.050 --> 00:04:53.070
of that opportunity without software
so much the better it

73
00:04:53.070 --> 00:04:56.910
is, problem solution that has
a value. It is exploding.

74
00:04:56.910 --> 00:05:00.870
The opportunity has that has
value. And if the software

75
00:05:00.870 --> 00:05:06.540
is not developed with regard
to effectively and efficiently and

76
00:05:06.540 --> 00:05:12.600
profitably, addressing the opportunity, addressing
the problem, we're looking at

77
00:05:12.660 --> 00:05:19.350
totally wrong criteria for success.
Okay. That's interesting. I've always

78
00:05:19.650 --> 00:05:22.800
had this, this phrase that
I've thrown out when, when

79
00:05:22.800 --> 00:05:26.400
arguing with people in my
contemporaries about this idea of,

80
00:05:26.730 --> 00:05:29.670
well, you know, successes is
my metric and now you've

81
00:05:29.670 --> 00:05:31.800
kind of thrown my whole
concept of what I thought

82
00:05:31.800 --> 00:05:36.060
success was on its ear.
So now I'm wondering what

83
00:05:36.060 --> 00:05:39.060
are my metrics? What am
I able to measure? And

84
00:05:39.060 --> 00:05:42.540
then point at and say,
we did good, or we

85
00:05:42.540 --> 00:05:47.010
did not do well. So
I have this theory, it's

86
00:05:47.010 --> 00:05:51.090
called measure up and you
have a bunch of measurements.

87
00:05:51.300 --> 00:05:54.150
Let's just take cost, schedule
scope. Those are interesting measurements

88
00:05:55.920 --> 00:06:00.500
and you accomplish them all.
And yet stuff falls between

89
00:06:00.500 --> 00:06:04.640
the cracks, say quality, say
customer satisfaction. And he's like,

90
00:06:04.640 --> 00:06:07.670
Whoa, maybe cost, schedule and
scope. Weren't the right things,

91
00:06:07.670 --> 00:06:11.420
because guess what? Quality wasn't
there, customer satisfaction. Isn't there.

92
00:06:12.110 --> 00:06:14.300
So now what do you
do? Do you measure five

93
00:06:14.300 --> 00:06:17.510
things instead of three things,
then how do you figure

94
00:06:17.510 --> 00:06:20.480
out which one's more important?
So when you start getting,

95
00:06:20.600 --> 00:06:25.250
going from three measurements to
five measurements, the theory with

96
00:06:25.250 --> 00:06:29.270
measure up is you have
too many measurements and you

97
00:06:29.270 --> 00:06:31.880
don't know which one's important.
And given a team, anybody

98
00:06:31.880 --> 00:06:34.640
can take their pick. So
your measurements are at too

99
00:06:34.640 --> 00:06:36.830
low a level. So you
need to go up one

100
00:06:36.830 --> 00:06:41.570
layer and say what single
system level measurement we'll measure.

101
00:06:41.570 --> 00:06:45.170
All these things, cost, schedule,
scope, quality customer satisfaction in

102
00:06:45.170 --> 00:06:48.980
a single measurement, instead of
a whole bunch of, you

103
00:06:48.980 --> 00:06:51.260
know, instead of going from
an iron triangle to an

104
00:06:51.260 --> 00:06:55.310
iron Pentagon, you want a
single higher level measurement. So

105
00:06:55.310 --> 00:06:58.910
the higher level of measurement
in a software development would

106
00:06:58.910 --> 00:07:03.560
be whether or not there
is a business success, whether

107
00:07:03.560 --> 00:07:05.510
or not, for example, in
our company, you had a

108
00:07:05.510 --> 00:07:08.420
profitable P and L after
a year, that's a higher

109
00:07:08.420 --> 00:07:11.870
level measurement. You have to
have the right goals for

110
00:07:11.870 --> 00:07:15.380
cost and schedule and scope
and quality and customer satisfaction,

111
00:07:15.740 --> 00:07:18.290
but how you trade those
off against each other is

112
00:07:18.290 --> 00:07:20.750
determined by whether or not
the higher level measure Munis

113
00:07:20.750 --> 00:07:24.620
achieved. And I think people
who develop software are smart

114
00:07:24.620 --> 00:07:28.790
enough when they're sitting in
their team to be challenged

115
00:07:28.790 --> 00:07:31.340
with a higher level goal
and figure out what are

116
00:07:31.340 --> 00:07:33.200
the trade offs we need
to make in order to

117
00:07:33.200 --> 00:07:37.070
reach the higher level goal,
they don't need that interpreted

118
00:07:37.070 --> 00:07:40.040
for them through lower level
measurements. They can in fact,

119
00:07:40.040 --> 00:07:42.860
be challenged to meet the
higher level measurement. And in

120
00:07:42.860 --> 00:07:45.140
fact, the company's more likely
to get what they really

121
00:07:45.140 --> 00:07:47.960
want when they ask for
what they really not want.

122
00:07:47.960 --> 00:07:52.510
Not proxy measurements. Should we
be ignoring certain measurements? Are

123
00:07:52.510 --> 00:07:54.130
you saying, I'm trying to
understand if you're saying we

124
00:07:54.130 --> 00:07:56.170
should roll measurements up or
we should be simply just

125
00:07:56.170 --> 00:07:58.510
not measuring some things and
thinking about the big picture

126
00:07:58.870 --> 00:08:01.240
I'm on a product development
team. Cause they did a

127
00:08:01.240 --> 00:08:03.610
lot of product development at
three M some involve software.

128
00:08:03.610 --> 00:08:06.670
Some did not. And let's
say that the marketing guy

129
00:08:07.510 --> 00:08:12.040
says there's a show and
it's June 15th and this is

130
00:08:12.040 --> 00:08:14.440
an annual show. And if
we don't show this in

131
00:08:14.440 --> 00:08:17.020
our annual show, it's going
to be a year before

132
00:08:17.020 --> 00:08:19.090
we can really put it
on the market. And he

133
00:08:19.090 --> 00:08:21.460
makes that plea to the
team. Now this team wants

134
00:08:21.460 --> 00:08:24.640
a successful product that starts
selling soon, and they get

135
00:08:24.640 --> 00:08:27.550
the fact that this is
not an artificial deadline. This

136
00:08:27.550 --> 00:08:30.970
has to happen. And then
the quality person says you

137
00:08:30.970 --> 00:08:34.000
can't be showing something at
a show that's junk. That's

138
00:08:34.000 --> 00:08:36.760
worse than showing it at
all. And then the people

139
00:08:36.760 --> 00:08:40.030
get the fact that, yes,
this is also true. Now,

140
00:08:40.240 --> 00:08:43.180
how do you take these
tensions? We don't have a

141
00:08:43.180 --> 00:08:46.540
quality product. We have a
deadline. And how do you

142
00:08:46.540 --> 00:08:49.810
come to some sort of
balance between those that works?

143
00:08:50.320 --> 00:08:53.290
So then maybe you say
amongst the team members, what

144
00:08:53.290 --> 00:08:56.160
can we do at high
quality that will give the

145
00:08:56.160 --> 00:09:00.210
right impression to those in
the market, but maybe not

146
00:09:00.210 --> 00:09:02.100
be a complete product? What
can we do at the

147
00:09:02.100 --> 00:09:05.640
demo? Suddenly people are engaged
in saying, how do we

148
00:09:06.030 --> 00:09:09.240
make sure that we have
something in the show and

149
00:09:09.270 --> 00:09:11.760
make sure that what we
show is high quality and

150
00:09:11.760 --> 00:09:14.490
not mislead the customers that
something is available, that isn't

151
00:09:14.490 --> 00:09:17.190
available? What can we do?
And if you get a

152
00:09:17.190 --> 00:09:20.280
group of 10 smart people
that care deeply about that

153
00:09:20.280 --> 00:09:24.450
product being successful, sorting those
tensions out, you're going to

154
00:09:24.450 --> 00:09:28.020
get the best resolution. If
you have somebody that isn't

155
00:09:28.050 --> 00:09:30.600
deeply engaged and doesn't know
the details of the trade

156
00:09:30.600 --> 00:09:33.540
offs, trying to figure it
out, you actually are unlikely

157
00:09:33.540 --> 00:09:37.490
to reach the bar. So
I it's identifying the tensions

158
00:09:37.490 --> 00:09:40.430
and trying to find the
balance that in that kind

159
00:09:40.430 --> 00:09:44.300
of spider graph of these
different tensions, rather than looking

160
00:09:44.300 --> 00:09:48.290
at metrics like tests passed
and number of successful builds

161
00:09:48.290 --> 00:09:49.520
and these kinds of things
that we spend so much

162
00:09:49.520 --> 00:09:52.730
time focusing on, Well, you
have one test to pass,

163
00:09:52.730 --> 00:09:57.170
but which tests, maybe only
this set of tests are

164
00:09:57.170 --> 00:09:59.960
the ones that need to
pass for the show. Maybe

165
00:09:59.960 --> 00:10:03.650
that set of tests can
pass after the show Because

166
00:10:03.650 --> 00:10:06.890
the tensions are going to
change on June, June 16th, A

167
00:10:06.890 --> 00:10:10.400
smart team of a dozen
people that are putting a

168
00:10:10.400 --> 00:10:13.070
product on the market. At
least this my experience having

169
00:10:13.070 --> 00:10:16.820
led, some of these teams
can make good decisions about

170
00:10:16.820 --> 00:10:22.040
how to solve these inherent,
you know, conflicts between different

171
00:10:22.040 --> 00:10:24.710
areas of the company, the
quality people, you know, it

172
00:10:24.710 --> 00:10:26.720
probably never want to have
product on the market and

173
00:10:27.110 --> 00:10:29.840
marketing people would never want
anything having to be developed.

174
00:10:30.320 --> 00:10:33.530
And there has to be
some balance between all of

175
00:10:33.530 --> 00:10:37.940
the different competing forces and
trade offs and a team

176
00:10:37.940 --> 00:10:40.730
is the best group of
people to balance those trade

177
00:10:40.730 --> 00:10:43.460
offs and make the best
possible, shot that as a

178
00:10:43.460 --> 00:10:45.590
group, they can figure out
to hit the market with

179
00:10:45.590 --> 00:10:50.300
a profitable. It seems like
there's these parallel. I'm trying

180
00:10:50.300 --> 00:10:51.860
to visualize this, but you
know, like there's, there's these

181
00:10:51.860 --> 00:10:54.290
parallel worlds where there's any
there's, there's what the developer's

182
00:10:54.290 --> 00:10:57.050
perception of things and how
the developers providing value and,

183
00:10:57.380 --> 00:10:59.390
and, and what they think
the life cycle of the

184
00:10:59.390 --> 00:11:04.610
software is. And then there's
this larger overarching value proposition

185
00:11:04.610 --> 00:11:07.070
where the, what the business
is providing of which the

186
00:11:07.070 --> 00:11:11.390
software is a small, a
small bit, are those competing,

187
00:11:11.390 --> 00:11:14.120
or they run each other
parallel. They should be the

188
00:11:14.120 --> 00:11:20.060
same. The developers should be
well aware of the overall

189
00:11:20.060 --> 00:11:26.480
life cycle. The language that
we'll use in talking about

190
00:11:26.480 --> 00:11:36.350
software often uses the phrase,
the business know the implication

191
00:11:36.350 --> 00:11:40.100
of saying, well, we have
the team and we need

192
00:11:40.130 --> 00:11:46.430
cooperation from the business implies
that the team is not

193
00:11:46.610 --> 00:11:51.260
part of the business. The
team should be thinking our

194
00:11:51.260 --> 00:11:57.610
business, not the, the very
concept of requirements. For example,

195
00:11:57.910 --> 00:12:02.500
implies a handoff, a handover
from someone in the business,

196
00:12:02.530 --> 00:12:05.710
telling us what to do.
And our only responsibility is

197
00:12:05.710 --> 00:12:10.300
to do it. If it
is our business, then we

198
00:12:10.330 --> 00:12:16.330
collaborate with others in our
business to solve problems, to

199
00:12:16.330 --> 00:12:20.770
come up with solutions, to
identify the right functions, the

200
00:12:20.770 --> 00:12:26.830
right capabilities that will profitably
produce a valuable solution for

201
00:12:26.830 --> 00:12:31.120
the market, for the business
process we're supporting or whatever.

202
00:12:32.290 --> 00:12:34.990
It seems that in the
projects and the PR and

203
00:12:34.990 --> 00:12:36.460
the companies that I've worked
on, we have had this

204
00:12:36.460 --> 00:12:40.240
sense of disconnectedness where there's
the techies that are in

205
00:12:40.240 --> 00:12:42.880
the back room somewhere, or
they're kept in the basement

206
00:12:42.880 --> 00:12:46.540
and brought out occasionally. And
they really are separate from

207
00:12:46.540 --> 00:12:50.470
the business. Is that part
of software, culture? Why have

208
00:12:50.470 --> 00:12:53.380
we been told as connected
for you? It's worked for

209
00:12:53.380 --> 00:12:56.920
other poorly? I would say.
And interestingly, when we started

210
00:12:56.920 --> 00:13:00.850
getting into agile methodologies and
people started using this concept

211
00:13:00.900 --> 00:13:04.840
of collective ownership, it started
to get people a little

212
00:13:04.840 --> 00:13:07.750
more excited, but then they
started saying collective code ownership

213
00:13:08.650 --> 00:13:11.680
rather than ownership in the
larger sense. And we were

214
00:13:11.680 --> 00:13:17.370
still disconnected. So business, There
is this group of people

215
00:13:17.370 --> 00:13:22.110
in a department in many
companies called it. Okay. And

216
00:13:22.140 --> 00:13:26.520
very often it's a separate
organization from the business in

217
00:13:26.520 --> 00:13:29.220
that same businesses, there will
be marketing and there will

218
00:13:29.220 --> 00:13:31.920
be finance and there will
be, you know, development and

219
00:13:31.920 --> 00:13:34.200
stuff. And for some reason
or other, it seems to

220
00:13:34.200 --> 00:13:36.900
be off in some other
world. I think it's due

221
00:13:36.900 --> 00:13:39.150
to the fact that this
was a new technology and

222
00:13:39.360 --> 00:13:41.550
people in businesses didn't know
how to deal with it,

223
00:13:41.730 --> 00:13:44.940
but heavens were long past
that anymore. And it isn't

224
00:13:44.940 --> 00:13:49.530
necessary for it to be
separate from the business. And

225
00:13:49.590 --> 00:13:54.540
I'm in a product company
where product either contain software

226
00:13:54.540 --> 00:13:59.070
or is a software, either
retail package or commercial software.

227
00:13:59.490 --> 00:14:02.640
There is no excuse for
the software development folks to

228
00:14:02.640 --> 00:14:07.120
be separate from the business.
They make the product in

229
00:14:07.120 --> 00:14:09.750
an, in a bigger company.
You want to look very

230
00:14:09.750 --> 00:14:13.020
closely as to why you
take it people and think

231
00:14:13.020 --> 00:14:16.290
of them as separate from
the business. So I think

232
00:14:16.290 --> 00:14:20.400
it has a street in
it, organizations being sort of

233
00:14:20.400 --> 00:14:22.980
a new techie area. Well,
they were a fad, right?

234
00:14:23.040 --> 00:14:25.290
Everyone's getting their ID, they're
getting an email and now

235
00:14:25.290 --> 00:14:30.060
people are talking about removing
it altogether, outsourcing it into

236
00:14:30.060 --> 00:14:34.740
the cloud When it is
routine. I mean, how many

237
00:14:34.740 --> 00:14:36.990
ways are there to do
email? How innovative can your

238
00:14:36.990 --> 00:14:40.530
email system be versus others?
There's a real good reason

239
00:14:40.530 --> 00:14:45.750
for that. When some types
of automation, software, our core

240
00:14:46.320 --> 00:14:50.370
competitive advantages of the company,
then that's not such a

241
00:14:50.400 --> 00:14:55.220
good idea, because if you
sell off your development capability

242
00:14:55.220 --> 00:14:58.760
for core competencies, then anybody
can copy it. So there's

243
00:14:58.760 --> 00:15:02.030
a very big distinction between
what I'll call core competencies

244
00:15:02.030 --> 00:15:05.180
of a company. And they
will often be software based

245
00:15:05.180 --> 00:15:09.050
or technical based. And when
it is something totally routine,

246
00:15:09.050 --> 00:15:12.860
which is as what did,
as I've heard, is that

247
00:15:13.460 --> 00:15:16.750
sort of like lights on
stuff. Yeah. It was a

248
00:15:16.750 --> 00:15:18.400
lights on moment that we
had at a, at a,

249
00:15:18.400 --> 00:15:20.020
at a large banking company
that I worked on was

250
00:15:20.020 --> 00:15:22.660
what someone had made the
comment. We're trying to put

251
00:15:22.660 --> 00:15:26.440
some accounts in a grid,
in a web browser. And

252
00:15:26.440 --> 00:15:28.480
the, that was the requirement,
but the accounts in the

253
00:15:28.480 --> 00:15:31.000
grid and one of the
young men wanted to make

254
00:15:31.360 --> 00:15:35.320
the world's greatest grid control.
And the reminder by our

255
00:15:35.320 --> 00:15:38.320
very wise CTO at the
time was that are we

256
00:15:38.320 --> 00:15:41.440
in the business of doing
banking software or making grid

257
00:15:41.440 --> 00:15:44.410
controls? And he said, well,
I can buy one for

258
00:15:44.410 --> 00:15:47.500
$500. And let's say you're
a hundred dollar an hour

259
00:15:47.500 --> 00:15:50.590
worker. You have five hours
to make the world's greatest

260
00:15:50.590 --> 00:15:54.130
grade control, or I will
buy one. And then that

261
00:15:54.130 --> 00:15:56.350
was the end of that
discussion. But that reminder of

262
00:15:56.350 --> 00:15:59.380
the core competency is that
that maybe we have a

263
00:15:59.380 --> 00:16:01.660
bunch of software engineers who
are thinking about software, and

264
00:16:01.660 --> 00:16:04.030
then they are suddenly reminded
that software is not what

265
00:16:04.030 --> 00:16:06.850
we're trying to accomplish here
today is such a lights

266
00:16:06.850 --> 00:16:09.910
on lights on Mars. And
so the software group that

267
00:16:09.910 --> 00:16:13.180
remains in the business is
there because they have, they

268
00:16:13.180 --> 00:16:17.050
are developing a core competency.
That's very fundamental to that

269
00:16:17.050 --> 00:16:20.530
business success. And it's very
important to have them deeply

270
00:16:20.530 --> 00:16:23.350
engaged in that. Otherwise, why
not have somebody else in

271
00:16:23.350 --> 00:16:27.070
some other company do the
work? Hi, this is Scott

272
00:16:27.070 --> 00:16:29.440
Hanselman with a word from
our sponsor. Do you know

273
00:16:29.440 --> 00:16:32.650
how to build web 2.0
Ajax applications with web 1.0

274
00:16:32.650 --> 00:16:34.870
components? You really can't. If
you want to do the

275
00:16:34.870 --> 00:16:38.800
next generation web applications you'll
need next generation components. Just

276
00:16:38.800 --> 00:16:40.540
like the ones that our
friends at Telerik have got

277
00:16:40.540 --> 00:16:43.870
their rad controls for ESPN
at Ajax. It's a huge

278
00:16:43.870 --> 00:16:47.170
pack of web controls built
on top of asp.net, Ajax,

279
00:16:47.590 --> 00:16:51.250
that lab previously impossible performance
interactivity to your next project.

280
00:16:51.760 --> 00:16:55.780
The new controls mirror, the
Ajax API from asp.net. So

281
00:16:55.780 --> 00:16:59.230
development is really straightforward. The
client scripts are shared. So

282
00:16:59.230 --> 00:17:01.630
loading time is not a
problem. If you just set

283
00:17:01.630 --> 00:17:03.610
a couple of properties and
you'll be able to automatically

284
00:17:03.610 --> 00:17:07.420
bind a web services for
really efficient operation, the new

285
00:17:07.420 --> 00:17:11.020
rad editor from ESPN Ajax,
Telerik loads up to four

286
00:17:11.020 --> 00:17:13.930
times faster than before. And
the new rad grid handles

287
00:17:13.930 --> 00:17:17.140
thousands of records and just
milliseconds, but as always, it's

288
00:17:17.140 --> 00:17:20.110
best to try for yourself.
So you can visit <inaudible>

289
00:17:20.110 --> 00:17:23.260
dot com slash ASP, net
Ajax, and download a trial.

290
00:17:23.590 --> 00:17:27.160
Thanks a lot. This week's
Hansel minutes is brought to

291
00:17:27.160 --> 00:17:31.780
you by code better.com. The
code better.com blog network it's

292
00:17:31.780 --> 00:17:34.600
made up of over 20
industry leaders and speakers who

293
00:17:34.600 --> 00:17:37.450
are passionate about delivering tried
and true solutions to real

294
00:17:37.450 --> 00:17:40.840
world problems for building better
software. These guys are not

295
00:17:40.840 --> 00:17:43.030
only our sponsor this week,
but they're also my friends,

296
00:17:43.960 --> 00:17:46.540
the code better blog network.
It's where industry leaders blog.

297
00:17:46.600 --> 00:17:51.090
You can find them@codebetter.com as
well as devilish Bus dev,

298
00:17:51.390 --> 00:17:55.770
L I C I O
dot U S. So our

299
00:17:55.770 --> 00:17:58.020
agile methodology is a way
to get, is that a

300
00:17:58.020 --> 00:18:00.090
gateway that we can get
people more engaged? Is there

301
00:18:00.090 --> 00:18:03.240
some, some aspect about agile
that's going to allow people

302
00:18:03.240 --> 00:18:05.940
to get more engaged or
is this just a, a

303
00:18:05.940 --> 00:18:11.750
passing phase? Okay. I'm not
sure how to answer that

304
00:18:11.750 --> 00:18:19.730
because even agile methods have
oftentimes been named only at

305
00:18:19.730 --> 00:18:25.970
the development organization. All the
agile methods do insist on

306
00:18:25.970 --> 00:18:35.090
frequent, continuing contact between the
customer and the builders between

307
00:18:35.720 --> 00:18:40.640
people who have the problem
are responsible for addressing the

308
00:18:40.640 --> 00:18:44.690
problem and those who are
going to build software to

309
00:18:45.530 --> 00:18:49.250
address the problem. But I
don't think it goes nearly

310
00:18:49.250 --> 00:18:54.260
far enough because it's still
all the agile approaches still

311
00:18:54.260 --> 00:18:58.640
build in a handoff from
one or more people who

312
00:18:58.640 --> 00:19:05.390
are solely accountable for the
business side, the product design

313
00:19:05.390 --> 00:19:09.770
side. We still call those
requirements, which is very curious,

314
00:19:10.190 --> 00:19:15.140
because they are not requirements.
They are simply designed decisions,

315
00:19:16.460 --> 00:19:20.900
problem, solution, design decisions made
by somebody else that they

316
00:19:20.900 --> 00:19:25.040
could hand it off. And
the developers don't get the

317
00:19:25.040 --> 00:19:28.880
question then that's not healthy.
Is this a, is this,

318
00:19:28.880 --> 00:19:32.180
is this a problem about
this different kinds of knowledge?

319
00:19:32.210 --> 00:19:34.610
I mean, the idea that
there's the C level executive

320
00:19:34.610 --> 00:19:36.920
that has some knowledge, some
understanding of the business or

321
00:19:36.920 --> 00:19:40.190
some skill that I don't
have as a developer while

322
00:19:40.190 --> 00:19:44.540
he can't program. There's this
idea, you know, it's almost

323
00:19:44.540 --> 00:19:46.820
like there's the, there's the
monks on high that have

324
00:19:46.850 --> 00:19:49.790
the technology to create books
and the printing press. And

325
00:19:49.790 --> 00:19:52.370
then there are the plebs,
or don't have any ability

326
00:19:52.370 --> 00:19:54.980
to read. W we, we
keep the computers out of

327
00:19:54.980 --> 00:19:57.620
their hands, cause they'll just
hurt themselves with that knowledge.

328
00:19:58.010 --> 00:20:01.790
And they keep us under
their iron thumbs. So let

329
00:20:01.790 --> 00:20:05.300
me give a different picture
of a corporate structure. Okay.

330
00:20:07.160 --> 00:20:11.540
The fact is that the
folks on high don't have

331
00:20:11.660 --> 00:20:15.050
either the knowledge or the
capability to figure out in

332
00:20:15.050 --> 00:20:17.510
detail what needs to happen
in order to make the

333
00:20:17.510 --> 00:20:23.540
business successful and good, good
people on high that are

334
00:20:23.540 --> 00:20:28.040
trying to lead a company,
understand that. And they understand

335
00:20:28.040 --> 00:20:30.770
that the way to have
the company successful over the

336
00:20:30.770 --> 00:20:34.010
long term is to take
all those intelligent. What did

337
00:20:34.010 --> 00:20:38.090
you call them plebs and
make sure that they leveraged

338
00:20:38.210 --> 00:20:42.350
their intelligence to do new
creative stuff and to think

339
00:20:42.350 --> 00:20:45.080
through problems and stuff like
that. So what you are,

340
00:20:45.080 --> 00:20:46.790
look, what I'm looking for
in a company is a

341
00:20:46.810 --> 00:20:52.660
structure, which in which the
management team understands that what

342
00:20:52.660 --> 00:20:55.180
they really need to do
is provide the leadership so

343
00:20:55.180 --> 00:20:59.050
that all those smart people
can be properly organized and

344
00:20:59.050 --> 00:21:02.320
properly headed in the right
direction to create all kinds

345
00:21:02.320 --> 00:21:05.380
of new ideas and new
benefit for the company. Now

346
00:21:05.560 --> 00:21:09.190
I've seen companies work very
well like that. Not all

347
00:21:09.190 --> 00:21:13.210
companies work like that, but
when companies have good management

348
00:21:13.210 --> 00:21:15.430
that knows how to be
leaders and enable the people

349
00:21:15.430 --> 00:21:18.040
doing the work to be,
to be smart about what

350
00:21:18.040 --> 00:21:20.320
they're doing and to, to
further the interest of the

351
00:21:20.320 --> 00:21:23.710
company. And everybody's engaged in
that, then you can have

352
00:21:23.710 --> 00:21:26.500
quite an interesting company. If
you have people who are

353
00:21:26.770 --> 00:21:30.670
buying labor for money, okay.
And paying you to do

354
00:21:30.670 --> 00:21:33.220
what they say, well, that's
interesting, but that's not going

355
00:21:33.220 --> 00:21:35.550
to give them anywhere near
as good as The company

356
00:21:37.170 --> 00:21:42.000
I've done engagements with. Let's
just say, large consulting companies

357
00:21:42.030 --> 00:21:45.630
that might come in and
we might pay them to,

358
00:21:45.660 --> 00:21:49.670
I like to say, we
pay them to whiteboard. And,

359
00:21:49.670 --> 00:21:52.380
and what problem are we
trying to solve by bringing

360
00:21:52.380 --> 00:21:55.020
these, these, these large consulting
companies in, I mean, there's

361
00:21:55.020 --> 00:21:56.850
the kinds that come and
whiteboard for money, and then

362
00:21:56.850 --> 00:21:59.760
they leave. There's the kinds
where we're registered, we're renting

363
00:22:00.210 --> 00:22:02.940
or renting them for a
while. You know, using there,

364
00:22:03.030 --> 00:22:04.950
we need more bodies. We
need, you know, someone with

365
00:22:04.950 --> 00:22:09.210
a pulse needs to come
in. So at, at our

366
00:22:09.210 --> 00:22:12.930
company, the people who were
expected to know the most

367
00:22:12.930 --> 00:22:15.720
about their business were the
people in the business. And

368
00:22:15.720 --> 00:22:19.500
there was always the thought
that outsiders couldn't conceivably know

369
00:22:19.500 --> 00:22:23.820
as much or do as
much when we implemented just

370
00:22:23.820 --> 00:22:27.570
in time in our factory
in 19, early 1980s at

371
00:22:27.570 --> 00:22:29.610
3m, there was a management
team. I was on it

372
00:22:29.670 --> 00:22:32.940
or about eight of us.
And we needed to have

373
00:22:32.940 --> 00:22:36.060
a whole different concept of
manufacturing because our competitors are

374
00:22:36.070 --> 00:22:38.490
making stuff much cheaper than
we could make it for.

375
00:22:39.060 --> 00:22:41.640
And we had to do
something very different. Fortunately for

376
00:22:41.640 --> 00:22:44.220
us there weren't consulting firms
that could tell us what

377
00:22:44.220 --> 00:22:46.410
to do. We could read
a book, we could get

378
00:22:46.410 --> 00:22:48.210
a consultant in for the
day to give us some

379
00:22:48.210 --> 00:22:51.060
new ideas. And that was
about it. And as group,

380
00:22:51.090 --> 00:22:54.180
we read some available stuff
we thought through and we

381
00:22:54.180 --> 00:22:57.930
figured out, what is this
stuff that we're learning? How

382
00:22:57.930 --> 00:23:00.330
does it work in our
world? And we changed the

383
00:23:00.330 --> 00:23:03.210
whole concept of how we
did manufacturing. And we did

384
00:23:03.210 --> 00:23:07.440
it as a small management
team. We were maybe young

385
00:23:07.440 --> 00:23:09.420
enough and brash enough to
think that we were smart

386
00:23:09.420 --> 00:23:13.170
enough to do it. And
we were successful. And what

387
00:23:13.170 --> 00:23:16.680
I think is that what
you should be looking for

388
00:23:16.680 --> 00:23:19.770
is ideas, ways to think
inside of a company, but

389
00:23:19.770 --> 00:23:22.530
in the end, the company
and its management team has

390
00:23:22.530 --> 00:23:25.920
to change themselves. If they
think they can hire some

391
00:23:26.430 --> 00:23:30.030
people to come in and
solve all their problems. Well,

392
00:23:30.060 --> 00:23:31.950
you know, I'm not so
sure it's going to work.

393
00:23:33.030 --> 00:23:35.730
When, when we brought, I
went from a company that

394
00:23:35.730 --> 00:23:38.490
was a standard waterfall and
we brought in scrum and

395
00:23:38.650 --> 00:23:41.440
we had a sense that
something was happening. There was,

396
00:23:42.300 --> 00:23:44.080
we didn't want to get
too wrapped up in the

397
00:23:44.160 --> 00:23:47.600
name, agile, and the idea
that We're going to be

398
00:23:47.600 --> 00:23:49.580
successful just by virtue of
the fact that we're doing

399
00:23:49.580 --> 00:23:52.880
this, but at least we
were doing something, yes. Was

400
00:23:52.880 --> 00:23:55.850
this, how did it work
for you? The first few

401
00:23:55.850 --> 00:23:59.540
iterations went, went poorly, but
it took about five years.

402
00:24:00.170 --> 00:24:02.570
And, and they've got it
down to a nice a

403
00:24:02.570 --> 00:24:06.170
meter. It seems to be
working well for the purposes

404
00:24:06.170 --> 00:24:08.480
of delivering the kinds of
software that they want to

405
00:24:08.480 --> 00:24:13.490
deliver. But after the consultants
left and after the software

406
00:24:13.490 --> 00:24:16.190
packages that promise to do
everything correctly, you know, it

407
00:24:16.190 --> 00:24:19.040
didn't work. It really came
down to, to people and

408
00:24:19.040 --> 00:24:22.580
experience and getting a couple
of years of failure under

409
00:24:22.580 --> 00:24:26.330
our, under our belts, call
it learning and learning. Is

410
00:24:26.330 --> 00:24:29.390
that, is that just I'm
hearing that. That's just how

411
00:24:29.390 --> 00:24:31.370
things work. You ha you,
you just have, there's no

412
00:24:31.370 --> 00:24:33.980
book, there's no process. There's
no consultant that's going to,

413
00:24:34.520 --> 00:24:39.550
to make this happen. There
are ideas that help steer

414
00:24:39.550 --> 00:24:45.310
people in the right direction.
And, but if, but, but

415
00:24:45.310 --> 00:24:47.590
if you can pay somebody
to come in and sort

416
00:24:47.590 --> 00:24:51.460
out your business problems, so
can your competitor, if you

417
00:24:51.460 --> 00:24:54.670
really want to be good
and, and be ahead of

418
00:24:54.670 --> 00:24:56.980
the other folks in the
world, then you have to

419
00:24:56.980 --> 00:25:00.760
have some underlying competencies that
only you and your company

420
00:25:00.760 --> 00:25:04.330
can figure out. And if
you want to do something

421
00:25:04.330 --> 00:25:07.030
that's new and unique, then
you have to figure out

422
00:25:07.030 --> 00:25:10.120
how does this company that
we in this company know

423
00:25:10.120 --> 00:25:14.440
better than anybody else? How
do these ideas work in

424
00:25:14.440 --> 00:25:17.860
our environment and in our
world? Now that's not a

425
00:25:17.860 --> 00:25:21.100
one day thing, it's a
journey. So you start out

426
00:25:21.370 --> 00:25:24.850
with a idea and you
get that idea working, and

427
00:25:24.850 --> 00:25:28.630
you're somewhat better. And then
you get, say, okay, now

428
00:25:28.630 --> 00:25:30.760
what's our biggest problem. And
then you head down that

429
00:25:30.760 --> 00:25:33.190
path and say, now it's
our biggest problem. And it's

430
00:25:33.190 --> 00:25:37.630
a never ending constant improvement
journey. So there shouldn't ever

431
00:25:37.630 --> 00:25:40.480
be an end, but it
would help if there was,

432
00:25:40.840 --> 00:25:44.140
if, if there was a
direction set. So I think

433
00:25:44.140 --> 00:25:48.550
ideas, books, that sort of
thing, help give people underlying

434
00:25:48.550 --> 00:25:51.130
theories of what to do,
which way to head, but

435
00:25:51.130 --> 00:25:53.230
for having somebody come in
and do it for you.

436
00:25:53.680 --> 00:25:58.000
Well, they'll probably do it
to you instead. There are

437
00:25:58.390 --> 00:26:01.540
maybe four things that a
consultant can be valuable for

438
00:26:02.830 --> 00:26:07.510
at the lowest level. It's
simply capacity labor. If you

439
00:26:07.510 --> 00:26:09.580
need more work done for
a while. So you hire

440
00:26:09.580 --> 00:26:15.400
some extra hands at a
second level, a outsider can

441
00:26:16.060 --> 00:26:22.930
bring in ideas, a fresh
perspective. Somebody who has been

442
00:26:22.930 --> 00:26:27.760
to many organizations will see
your problems, your situation with

443
00:26:27.760 --> 00:26:30.820
a different light than people
that have been in it

444
00:26:30.820 --> 00:26:33.790
forever. Now, whether what they'll
see is right, or not

445
00:26:33.790 --> 00:26:36.910
as something that only the
people inside the organization can

446
00:26:36.910 --> 00:26:42.640
assess. And a third thing
is accelerate acquisition of new

447
00:26:42.640 --> 00:26:46.110
skills that you can get
from a book you can

448
00:26:46.110 --> 00:26:51.060
get from the manual, but
if you can benefit from

449
00:26:51.060 --> 00:26:54.270
other people's mistakes, rather than
being forced to repeat them

450
00:26:54.270 --> 00:27:00.150
all yourself, you can get
better, faster, but it isn't

451
00:27:00.150 --> 00:27:03.870
going to solve your business
problems. You have to decide

452
00:27:03.870 --> 00:27:08.940
which skills, which perspectives and
what capacity you need. And

453
00:27:08.940 --> 00:27:15.720
the fourth I lumped two
together. I think that that,

454
00:27:15.720 --> 00:27:18.690
that idea of understanding what
is this company good at?

455
00:27:18.690 --> 00:27:21.030
What is our, what is
our core competency? It's such

456
00:27:21.030 --> 00:27:24.160
a core competency become a
buzzword in itself, but it

457
00:27:24.180 --> 00:27:28.020
really is true that a
nice company-wide reset to remind

458
00:27:28.020 --> 00:27:30.540
ourselves what our, what we're
trying to accomplish is, is

459
00:27:30.540 --> 00:27:32.460
really important in the idea
that no consultant is going

460
00:27:32.460 --> 00:27:33.510
to come in and be
able to tell us what

461
00:27:33.510 --> 00:27:36.450
our core competency is. That
really leads to a second

462
00:27:36.450 --> 00:27:40.410
measure of success. We talked
earlier about success in terms

463
00:27:40.440 --> 00:27:44.850
of achieving the business objective
of the product or the

464
00:27:44.850 --> 00:27:49.020
business process that you're developing
software for. The second metric

465
00:27:49.080 --> 00:27:54.810
is how rapidly and reliably
can you do this? How

466
00:27:54.810 --> 00:28:02.130
effective are you at development?
Your capacity and capability needs

467
00:28:02.130 --> 00:28:05.610
to continually improve. You had
made, we could have made

468
00:28:05.610 --> 00:28:08.460
a comment to me, Mary,
about how you thought, and

469
00:28:08.760 --> 00:28:09.960
I'm putting words in your
mouth. So, correct me if

470
00:28:09.960 --> 00:28:13.140
I'm wrong, that it may
be the case that this

471
00:28:13.140 --> 00:28:17.420
agile buzzword is a, is
a fat, Okay. So if

472
00:28:17.420 --> 00:28:20.810
you go back through the
history of software and I've

473
00:28:20.810 --> 00:28:22.910
been around in it for
a lot of times, so

474
00:28:23.270 --> 00:28:26.390
it's not so hard for
me to do back when

475
00:28:26.390 --> 00:28:29.600
I was developing software, we
didn't have this. In fact,

476
00:28:29.600 --> 00:28:31.900
I didn't even hear of
this word called waterfall for

477
00:28:32.720 --> 00:28:36.890
told them late nineties. So
when I was developing software

478
00:28:36.920 --> 00:28:43.670
in the Late seventies, early
Sort of thing, and I

479
00:28:43.670 --> 00:28:49.460
did process control software, We
did talk with our customers.

480
00:28:50.030 --> 00:28:52.760
We build stuff in our
offices that was going to

481
00:28:52.760 --> 00:28:55.760
be hooked to hardware. We
created simulators to test it

482
00:28:55.760 --> 00:28:57.170
because we didn't want to
spend a whole lot of

483
00:28:57.170 --> 00:29:00.740
time on site shaking it
down. We were told that

484
00:29:01.190 --> 00:29:03.290
if the people in the
plant didn't like or use

485
00:29:03.290 --> 00:29:06.560
our software, it wasn't their
fault. It was ours. So

486
00:29:06.560 --> 00:29:09.740
we really needed to understand
what their problems were. We

487
00:29:09.740 --> 00:29:13.910
were told once you deliver
software, the best indicator of

488
00:29:13.910 --> 00:29:17.960
success is if the plant
asked for changes, because now

489
00:29:17.960 --> 00:29:20.660
they suddenly have some idea
of what the software might

490
00:29:20.660 --> 00:29:22.850
be able to do for
them. And they're asking for

491
00:29:22.850 --> 00:29:25.550
more, if they don't ask
for any changes, they're probably

492
00:29:25.550 --> 00:29:28.130
not even using it. So
this is a good deal.

493
00:29:28.430 --> 00:29:31.040
And what you're trying to
do is deliver a starting

494
00:29:31.040 --> 00:29:34.400
point where they will constantly
ask for more of this

495
00:29:34.400 --> 00:29:38.600
good technology to help them
do their job better. And

496
00:29:38.630 --> 00:29:42.880
you were always intimately involved
in software and its use

497
00:29:42.940 --> 00:29:45.640
and the people who were
going to use it. And

498
00:29:45.670 --> 00:29:49.600
that's my vision of software.
Then there were various types

499
00:29:49.600 --> 00:29:52.870
of FAS, there was structured
programming and there was some

500
00:29:53.500 --> 00:29:57.250
user programming and there was
fourth generation languages that were

501
00:29:57.250 --> 00:30:02.140
going to save the world.
And then there was, Oh,

502
00:30:02.230 --> 00:30:07.330
let's see, did the digital
objects and patterns, and yeah,

503
00:30:07.380 --> 00:30:12.510
Because you're describing your relationship
with the plant and myself

504
00:30:12.700 --> 00:30:15.420
as someone who hasn't been
in the business that long,

505
00:30:15.780 --> 00:30:20.300
I started in 92, I'm
hearing you describe at what

506
00:30:20.310 --> 00:30:25.410
I think of as being
agile onsite customer development. Does

507
00:30:25.410 --> 00:30:28.740
that mean that we certainly
will all eventually be programming

508
00:30:28.740 --> 00:30:32.760
lists again? So it'll just
be agile methodology and lists.

509
00:30:32.910 --> 00:30:35.940
No, I don't think it
was Fortran that I did.

510
00:30:35.940 --> 00:30:38.070
And I really hope that
people don't go back to

511
00:30:38.070 --> 00:30:40.680
that or similar language. I
was just going to say

512
00:30:40.680 --> 00:30:43.260
that, that, that have we,
if we simply come back

513
00:30:43.260 --> 00:30:47.340
to exactly where we were
before, what's, what's supposed to

514
00:30:47.340 --> 00:30:51.000
agile world look like, Well,
if you take a look

515
00:30:51.000 --> 00:30:53.970
at, I don't care what
it is, whether it's objects

516
00:30:53.970 --> 00:30:57.930
or agile or waterfall or
anything, I see these, these

517
00:30:57.930 --> 00:31:03.060
things or CMM or CMI,
or you name it. These

518
00:31:03.060 --> 00:31:06.000
are, these are what I
call fads that lasts for

519
00:31:06.000 --> 00:31:09.750
like seven years. Guess what?
Seven years is a management

520
00:31:09.750 --> 00:31:14.970
generation and they become the
great thing. That's going to

521
00:31:14.970 --> 00:31:19.080
save the world. And then
after they turn out not

522
00:31:19.080 --> 00:31:21.420
to save the world and
the next thing comes along

523
00:31:21.420 --> 00:31:23.090
and it's going to be
the great thing. This is,

524
00:31:23.130 --> 00:31:25.590
It's not a process of
continuous improvement though, or is

525
00:31:25.590 --> 00:31:27.900
that, or is that Well,
one hopes, but you know,

526
00:31:27.900 --> 00:31:31.830
in software, we seem to
have gone from one extreme

527
00:31:32.010 --> 00:31:35.070
to the, another extreme and
back over to the other

528
00:31:35.070 --> 00:31:38.100
extreme. So we don't ever
seem to land in the

529
00:31:38.100 --> 00:31:43.290
middle Thus as the nature
of signwaves. Yeah, exactly. So

530
00:31:44.220 --> 00:31:46.950
when I talk about fads,
I mean, swinging this pendulum

531
00:31:46.960 --> 00:31:49.260
all the way before, one
side to the other, without

532
00:31:49.260 --> 00:31:51.300
ever seeing the middle and
I I've come up with

533
00:31:51.300 --> 00:31:55.680
some reasons why this happens
in software. Okay. So what

534
00:31:55.680 --> 00:31:59.670
my I, my first reason
is it's silver bullet mentality,

535
00:32:00.090 --> 00:32:03.540
especially from a management group
that doesn't get technology and

536
00:32:03.540 --> 00:32:06.720
they're looking for some silver
bullet answer to whatever their

537
00:32:06.720 --> 00:32:10.260
problem is and whatever the
latest and greatest thing out

538
00:32:10.260 --> 00:32:12.900
there that's supposed to solve,
your problem is they're on

539
00:32:12.900 --> 00:32:15.360
it. Okay. And if it
happens to be agile, they're

540
00:32:15.360 --> 00:32:17.790
going to be on agile.
And if whatever, the next

541
00:32:17.790 --> 00:32:21.150
thing is, they're going to
go for that. And yes,

542
00:32:21.150 --> 00:32:24.480
if that's mentalities there, this
is a fad. And then

543
00:32:24.480 --> 00:32:28.260
there's the somewhat better reason.
And this is what I'm

544
00:32:28.260 --> 00:32:32.430
going to call the crisis
mentality. I went through a

545
00:32:32.760 --> 00:32:35.700
time in our plant where
if we didn't change the

546
00:32:35.700 --> 00:32:37.560
way we did things, we
were going to just have

547
00:32:37.560 --> 00:32:40.130
to fold up and stop
making. Cause we had to

548
00:32:40.130 --> 00:32:43.430
drop our prices. Crisis is
good because it gets people

549
00:32:43.430 --> 00:32:46.790
to say, how do I
do something differently than what

550
00:32:46.790 --> 00:32:50.720
I'm doing today and actually
get better results. So crisis

551
00:32:50.720 --> 00:32:53.600
mentality is also a good,
is a good thing to

552
00:32:53.600 --> 00:32:56.240
trigger people, to do something
new in generally, it's more

553
00:32:56.240 --> 00:33:00.260
likely to lead to success.
Then the third one is,

554
00:33:00.680 --> 00:33:02.870
and this is why I
think we always ended up

555
00:33:02.870 --> 00:33:08.240
with a pendulum swing in
our world in software development.

556
00:33:08.240 --> 00:33:13.070
There are natural tensions that
belong there. There's nothing wrong

557
00:33:13.070 --> 00:33:15.770
with them. We need to
get work done, but we

558
00:33:15.770 --> 00:33:18.320
need to have a structure
and architecture to do it

559
00:33:18.320 --> 00:33:21.830
in. We need to start
putting stuff up. But on

560
00:33:21.830 --> 00:33:24.290
the other hand, we need
to learn before we start

561
00:33:24.290 --> 00:33:25.880
diving in, or we're going
to have a mess later

562
00:33:25.880 --> 00:33:29.270
on, we live in a
complex world and people keep

563
00:33:29.270 --> 00:33:31.580
wanting stuff. So we need
to be simple. But then

564
00:33:31.580 --> 00:33:34.160
again, if we're too simple,
we don't give people what

565
00:33:34.160 --> 00:33:38.750
they want. So there's a
very strong tension between different

566
00:33:38.750 --> 00:33:42.560
extremes. And instead of trying
to figure out how to

567
00:33:42.560 --> 00:33:45.950
take that tension to the
middle, we swing from one

568
00:33:46.010 --> 00:33:48.320
into the other. So it
used to be that we

569
00:33:48.320 --> 00:33:50.900
were doing all of the
stuff, which got the bad

570
00:33:50.900 --> 00:33:54.140
name analysis paralysis. So now
we're into, well, let's not

571
00:33:54.140 --> 00:33:56.800
do any analysis at all.
Well, Right. Which is agile

572
00:33:56.860 --> 00:34:00.270
as an excuse to be
sloppy. So, so the, the

573
00:34:00.280 --> 00:34:05.200
point is that there's a
natural tension between making stuff

574
00:34:05.200 --> 00:34:08.170
happen and having the knowledge
to know which is the

575
00:34:08.170 --> 00:34:10.150
right way to go. That's
gonna last in the long

576
00:34:10.150 --> 00:34:12.700
run. The, the thing you
need to do is to

577
00:34:12.700 --> 00:34:16.000
figure out how to not
compromise on the tension, but

578
00:34:16.000 --> 00:34:19.570
honor it and come to
some middle ground that works

579
00:34:19.600 --> 00:34:23.290
and, and, and plays the
two tension areas off against

580
00:34:23.290 --> 00:34:27.190
the other and comes to
a good center where both

581
00:34:27.190 --> 00:34:30.250
things are taken care of
the best that they can.

582
00:34:30.550 --> 00:34:33.940
Now there's no magic recipe
for doing that because the

583
00:34:33.950 --> 00:34:37.180
tensions in any given business
are going to be different.

584
00:34:37.630 --> 00:34:40.990
I mean, the tensions, when
you're device developing software for

585
00:34:40.990 --> 00:34:43.810
a medical device are very
different than when you're putting

586
00:34:43.810 --> 00:34:47.470
a website up. And so
there's going to be different

587
00:34:48.010 --> 00:34:51.670
like middle grounds or resolutions.
And so I think what

588
00:34:51.670 --> 00:34:53.680
we need to do is
to figure out how to

589
00:34:53.680 --> 00:34:57.340
use all of our brain
power, to come to some,

590
00:34:57.520 --> 00:35:00.760
to recognize that there are
conflicting things that you don't

591
00:35:00.760 --> 00:35:03.400
always do, things the same
way it's going to depend

592
00:35:03.400 --> 00:35:06.730
upon the world, the environment
and stuff like that. There's

593
00:35:06.730 --> 00:35:10.030
no hard and fast rule,
but there are things there

594
00:35:10.030 --> 00:35:12.970
are extremes that we have
been, you know, we're tending

595
00:35:12.970 --> 00:35:15.070
to go to. And what
we want to do is

596
00:35:15.070 --> 00:35:19.690
end up balancing the really
important tensions in any given

597
00:35:19.690 --> 00:35:22.810
environment so that we come
to the best resolution of

598
00:35:22.810 --> 00:35:25.030
those and the companies that
can do that better than

599
00:35:25.060 --> 00:35:27.160
others in their environment are
going to be the ones

600
00:35:27.160 --> 00:35:29.710
that are going to win
To come back to the

601
00:35:29.710 --> 00:35:34.390
idea of crisis. There are
two aspects to crisis. One

602
00:35:34.390 --> 00:35:38.640
is the crisis that's forced
upon you by your, and

603
00:35:38.640 --> 00:35:41.070
the other is the crisis
that you force on your

604
00:35:41.070 --> 00:35:44.670
competitors. The second is the
one that you really should

605
00:35:44.670 --> 00:35:50.040
be chasing the com so
good that your competitors face

606
00:35:50.040 --> 00:35:52.890
the crisis. Now, there are
two ways of doing that.

607
00:35:53.430 --> 00:35:59.130
One way is what they
really innovative, radical product that

608
00:35:59.130 --> 00:36:03.330
will really grab the market.
Apple's very good at this.

609
00:36:04.680 --> 00:36:09.720
The other way is by
getting very, very good at

610
00:36:09.750 --> 00:36:13.950
the kind of product development
that you do buy, and

611
00:36:13.950 --> 00:36:17.100
that is what agile offers
you as a much faster

612
00:36:17.370 --> 00:36:23.070
way of creating software products.
Well, I hope that that

613
00:36:23.070 --> 00:36:25.050
gives our listeners a lot
to think about. I know

614
00:36:25.050 --> 00:36:26.310
it's given me a lot
to think about, and I

615
00:36:26.310 --> 00:36:28.140
think I'm going to go
out and read a couple

616
00:36:28.140 --> 00:36:31.320
of books on lean software
development. So thank you so

617
00:36:31.320 --> 00:36:33.810
much, Tom and Mary Poppins
for sitting down and talking

618
00:36:33.810 --> 00:36:37.650
to me today. Thanks guys.
Thank you very much. And

619
00:36:37.650 --> 00:36:40.080
this has been another episode
of Hanselminutes and we'll see

620
00:36:40.080 --> 00:36:48.810
you again next week. <inaudible>.

