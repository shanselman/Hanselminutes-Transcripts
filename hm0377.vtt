WEBVTT FILE

1
00:00:04.380 --> 00:00:17.210
<inaudible> From hanselminutes.com. It's Hansel
minutes, our weekly discussion with

2
00:00:17.210 --> 00:00:21.320
web developer and technologist and
Scott Hanselman. This is Lawrence Ryan

3
00:00:21.320 --> 00:00:27.830
announcing show number three 80
recorded live Thursday, July 11th, 2013. Support

4
00:00:27.830 --> 00:00:31.070
for Hanselman is provided by
Tellerik offering the best in

5
00:00:31.070 --> 00:00:40.490
developer tools and support online@telerikdotcomandbyfranklins.net
makers of gesture pack, how

6
00:00:40.490 --> 00:00:44.030
powerful, just for recording and
recognition system for Microsoft connect

7
00:00:44.030 --> 00:00:50.900
for windows developers details@gesturepak.com. In
this episode, Scott talks with

8
00:00:50.960 --> 00:00:55.070
Jim Wang about the problems
in today's web development experience.

9
00:00:57.710 --> 00:00:59.480
Hi, this is Scott Hanselman.
This is another episode of

10
00:00:59.480 --> 00:01:01.760
Hansel minutes, and I'm here
talking to Jim Wang, a

11
00:01:01.760 --> 00:01:03.890
web developer. How are you?
Great, Scott, how are you?

12
00:01:04.460 --> 00:01:09.380
I am, I am sad.
Oh yeah. Why? I am

13
00:01:09.380 --> 00:01:12.890
sad at the state of
web development. Like we're, we're

14
00:01:13.190 --> 00:01:14.950
standing on the shoulders of
giants. We have, there's an

15
00:01:14.960 --> 00:01:17.630
amazing thing going on in
the web right now. And

16
00:01:17.630 --> 00:01:19.580
I just feel like the
tools are failing us, like

17
00:01:19.580 --> 00:01:22.430
at every stage. And I
know you're a big single

18
00:01:22.430 --> 00:01:24.530
page app person. You're doing
a lot of web development.

19
00:01:24.830 --> 00:01:26.480
Yeah. It's all just me.
Am I the only person

20
00:01:26.480 --> 00:01:27.980
that feels this way? I
don't think you're the only

21
00:01:27.980 --> 00:01:29.750
one. I think a lot
of us have just learned

22
00:01:29.750 --> 00:01:31.950
to live with it. I
mean, to be honest, I,

23
00:01:31.950 --> 00:01:33.860
I, you know, when you
first suggested this topic to

24
00:01:33.860 --> 00:01:35.000
me, I thought, you know,
yeah. What are, what are

25
00:01:35.000 --> 00:01:37.650
my pain points? And yeah.
You know, we really are

26
00:01:37.730 --> 00:01:41.870
behind in terms of just
the quality, the developer experience,

27
00:01:41.870 --> 00:01:43.820
you know, I've had to
work around stuff. My current

28
00:01:43.820 --> 00:01:47.650
setup is basically a visual
studio and when I F

29
00:01:47.660 --> 00:01:50.420
five to run my application,
I switched into whatever debugging

30
00:01:50.420 --> 00:01:52.790
tools for the browser that
I'm currently using. So I'm

31
00:01:52.790 --> 00:01:55.880
not sure I'm in an
integrated development experience, so to

32
00:01:55.880 --> 00:01:57.890
speak, but I'm not using
a lot of the functionality.

33
00:01:58.430 --> 00:02:01.040
And you know, I've tried
other editors. I've tried sublime.

34
00:02:01.040 --> 00:02:02.570
I found that to be
a little too bare metal.

35
00:02:03.350 --> 00:02:06.800
I really liked having keyboard
shortcuts having for, for launching

36
00:02:06.800 --> 00:02:08.060
the browser and all that
other stuff. And you can

37
00:02:08.060 --> 00:02:10.580
add that on to sublime
to be honest. But since,

38
00:02:10.580 --> 00:02:12.320
you know, we work at
Microsoft and I use visual

39
00:02:12.320 --> 00:02:14.180
studio every day. It was
easier just to work around

40
00:02:14.180 --> 00:02:16.340
the problems that I was
having. Yeah. I think that

41
00:02:16.520 --> 00:02:20.390
that outside the visual studio
kind of bubble, for lack

42
00:02:20.390 --> 00:02:24.140
of another word, there are
people who are, you know,

43
00:02:24.170 --> 00:02:28.010
really, really willing to customize
their situation. Like people will

44
00:02:28.010 --> 00:02:31.820
spend a day or more
setting stuff up, getting their

45
00:02:31.820 --> 00:02:35.240
sublime just right. Getting their
bash RC. Correct. Yeah, absolutely.

46
00:02:35.240 --> 00:02:36.980
I think visual studio people
are kind of spoiled, you

47
00:02:36.980 --> 00:02:39.890
know, they install ReSharper or
code rush or whatever, and

48
00:02:39.890 --> 00:02:42.110
they hit a five and
then they use the defaults.

49
00:02:42.410 --> 00:02:44.510
Right, right. Yeah. The most
I've ever done, to be

50
00:02:44.510 --> 00:02:46.670
honest with you is I
go with C sharp development

51
00:02:46.670 --> 00:02:50.150
settings and then I change
the settings for, for curly

52
00:02:50.150 --> 00:02:53.030
braces, turn on line numbers.
And I'm pretty much good.

53
00:02:53.270 --> 00:02:55.460
The one, the one interesting
thing that I picked up

54
00:02:55.460 --> 00:02:58.550
from doing single page applications
and a lot of JavaScript

55
00:02:58.580 --> 00:03:02.020
is now I do everything
To two spaces, four tabs

56
00:03:02.140 --> 00:03:05.110
instead of four, really, which
drives the other people who

57
00:03:05.110 --> 00:03:07.510
work on my projects crazy.
So I have C sharp

58
00:03:07.990 --> 00:03:11.770
C sharp code that is
double-spaced for tabs. Instead of,

59
00:03:11.770 --> 00:03:13.540
instead of the four you're
gonna get fired for that.

60
00:03:14.860 --> 00:03:16.990
I'd love to talk clocks
a ticket. I guess I

61
00:03:16.990 --> 00:03:20.470
use the web development settings
with a it's called code

62
00:03:20.470 --> 00:03:23.290
only. Yep. Right. And that
basically turns off all the

63
00:03:23.290 --> 00:03:25.150
toolbars gets everything out of
the way. So I'm using

64
00:03:25.150 --> 00:03:29.410
visual studio with, I think
only the standard toolbar, because

65
00:03:29.410 --> 00:03:32.350
as a web guy, I
want the dropdown that lets

66
00:03:32.350 --> 00:03:34.400
me pick which browser I'm
going to, I'm going to

67
00:03:34.510 --> 00:03:36.940
launch. Yep. And then the,
the, the feature where I

68
00:03:36.940 --> 00:03:40.120
could launch multiple browsers at
once, and then what I

69
00:03:40.120 --> 00:03:43.300
ended up doing is I'll
have usually Chrome and on

70
00:03:43.300 --> 00:03:47.410
one Firefox on another, I
have three monitors. Right? Yep.

71
00:03:47.440 --> 00:03:49.870
And then I'll have like
whatever F 12 tools I'm

72
00:03:49.870 --> 00:03:52.630
using at the time. Gotcha.
And I spend a lot

73
00:03:52.630 --> 00:03:55.450
of time in the Chrome
dev tools, but just depending,

74
00:03:55.450 --> 00:03:57.820
right. There's a bunch of
Firefox extensions that I like

75
00:03:57.820 --> 00:04:01.870
for like rulers and stuff.
Right, right. But it's pretty

76
00:04:01.870 --> 00:04:05.290
straight forward, but I was
doing a spa application recently.

77
00:04:06.310 --> 00:04:08.020
You actually, I should probably
show it to you sometime.

78
00:04:08.050 --> 00:04:11.230
It's a one pager that
I did with a couple

79
00:04:11.230 --> 00:04:15.100
of guys on, on Twitter.
Basically. It was like two

80
00:04:15.100 --> 00:04:17.110
in the morning. And I
was like, I'm going to

81
00:04:17.110 --> 00:04:20.740
write this app. So this
guy, Stuart back helped me

82
00:04:20.740 --> 00:04:24.670
out and we got on
Skype and he did a

83
00:04:24.670 --> 00:04:26.560
lot of knockout. And I
came up with the idea

84
00:04:26.560 --> 00:04:28.450
and laid him and stuff
out. And I kind of

85
00:04:28.450 --> 00:04:31.540
went around and we iterated
on this. It's called keys,

86
00:04:31.600 --> 00:04:35.200
left.com. And it tells you
how many keystrokes are left

87
00:04:35.200 --> 00:04:41.010
in your hands before you
die toys. I'm totally serious.

88
00:04:41.400 --> 00:04:44.040
So the idea is that
like, why would you do

89
00:04:44.040 --> 00:04:46.910
this again? Yeah. Well, the
idea was that actually, I

90
00:04:46.920 --> 00:04:49.440
mean, me and David Edwards had
the idea on the way

91
00:04:49.440 --> 00:04:52.440
back from build. Okay. Because
we're coming back from build

92
00:04:52.470 --> 00:04:55.860
and we haven't done any
email in a week and

93
00:04:55.860 --> 00:04:58.560
we're like, Oh, this is
gonna suck all these emails.

94
00:04:59.040 --> 00:05:00.810
And then I'm like, and
I, and I said, that

95
00:05:00.810 --> 00:05:02.520
thing that I always say,
which is, well, I've only

96
00:05:02.520 --> 00:05:05.670
got so many keystrokes left
in my hands. I don't

97
00:05:05.670 --> 00:05:08.640
want to give the gift
of my keystrokes to all

98
00:05:08.640 --> 00:05:11.880
of these random people who've
emailed me. So what I

99
00:05:11.880 --> 00:05:13.530
do is Hansel bot and
it's just like, and it's

100
00:05:13.530 --> 00:05:16.800
like an auto reply for
all. Your emails are really

101
00:05:16.800 --> 00:05:19.590
rude though, but you're right.
That's an intelligent auto reply,

102
00:05:19.590 --> 00:05:21.570
right? So this is not
your typical auto reply. It

103
00:05:21.570 --> 00:05:24.000
goes through and filters through,
you know, people, you know,

104
00:05:24.330 --> 00:05:26.250
certain things that, you know,
it looks for patterns kind

105
00:05:26.250 --> 00:05:28.110
of generates a random thing.
I'm telling you, people will

106
00:05:28.110 --> 00:05:30.990
pay money for that service.
Everyone's email service like outlook

107
00:05:30.990 --> 00:05:33.060
or Gmail has been trying
to do that for years.

108
00:05:33.060 --> 00:05:35.490
And they just never work.
You know, what I've heard

109
00:05:35.490 --> 00:05:37.830
of though is you can,
you can pay someone, you

110
00:05:37.830 --> 00:05:39.990
know, presumably in a third
world country to run errands

111
00:05:39.990 --> 00:05:41.920
for you. Right. And so
you can also pay them

112
00:05:41.920 --> 00:05:43.850
until you don't do stuff
like pay bills. I mentioned

113
00:05:43.850 --> 00:05:45.990
you, you could farm out
your email. Yeah. There's, there's

114
00:05:45.990 --> 00:05:48.420
different sites for that. You
have the idea of the

115
00:05:48.420 --> 00:05:52.950
thing is rather than answering
a technical question via email,

116
00:05:52.980 --> 00:05:58.880
I won't put two, five,
two thousand five thousand, 10,000 into that. Right.

117
00:05:58.880 --> 00:06:01.400
Because it's a waste. One
person emails me. I don't

118
00:06:01.400 --> 00:06:04.220
know you, but I'll write
a blog post about it.

119
00:06:04.490 --> 00:06:06.320
Yep. And then I'll send
them a link to that

120
00:06:06.320 --> 00:06:09.170
blog post. So then we
said, well, gosh, how many

121
00:06:09.170 --> 00:06:11.060
keystrokes are left in your
hands? Well, you know, you're

122
00:06:11.060 --> 00:06:13.910
35 years old and you
went, you, you type this

123
00:06:13.910 --> 00:06:17.030
fast, you have X number
of billion keystrokes. So then

124
00:06:17.030 --> 00:06:19.190
we went and did all
the math, you have this

125
00:06:19.190 --> 00:06:22.730
many novels right. Left in
your hands. You have this

126
00:06:22.730 --> 00:06:26.540
many emails to your boss.
What do you want to

127
00:06:26.540 --> 00:06:30.380
be spending your time on,
you know, write novels, emails,

128
00:06:30.470 --> 00:06:33.440
love letters. Tweets depends. So
it's really more of an

129
00:06:33.440 --> 00:06:38.270
educational thing like to think
about it's, it's your, it's

130
00:06:38.270 --> 00:06:40.250
your gift. You're going to
give the people the gift

131
00:06:40.250 --> 00:06:43.130
of your keystrokes. So I
was going to write the

132
00:06:43.130 --> 00:06:46.250
whole thing in web pages
or PHP or something. And

133
00:06:46.250 --> 00:06:48.920
I was going to basically
have a post-bacc cause I

134
00:06:48.920 --> 00:06:50.540
was going to have them
fill out the little form

135
00:06:50.540 --> 00:06:53.000
of two things, your age
and your words per minute.

136
00:06:53.390 --> 00:06:55.070
And then I would do
the calculations on the service

137
00:06:55.070 --> 00:06:59.120
side. And Damien's like, that's
just stupid. Right? This is

138
00:06:59.330 --> 00:07:02.270
clearly. Yeah. But it's, it's
a, it's a, it's a

139
00:07:02.270 --> 00:07:06.050
generational thing. Right. I spent
10 years doing that. Right.

140
00:07:06.260 --> 00:07:08.990
And he's like, get your
head in the game. This

141
00:07:08.990 --> 00:07:13.130
is clearly, you know, knockout.
So, so Stuart and I

142
00:07:13.160 --> 00:07:18.050
did this thing in knockout
and it's very verbose. Like

143
00:07:18.050 --> 00:07:20.990
there's a lot of code
there. Yup. And a lot

144
00:07:20.990 --> 00:07:24.470
of it's just set up,
but at the same time,

145
00:07:24.470 --> 00:07:28.040
the result, and you can
see it@keysleft.com. It's really amazing.

146
00:07:28.400 --> 00:07:32.870
He even, he even added
a timer that updates one

147
00:07:32.870 --> 00:07:36.950
number that has the key
strokes count down. So after

148
00:07:36.950 --> 00:07:40.450
you type it in they're
decaying. Right. Gotcha. Yeah. That's

149
00:07:40.450 --> 00:07:42.100
really just to show you
that, But, and then the

150
00:07:42.100 --> 00:07:47.920
entire page Updates itself, right.
Bugging this thing is just

151
00:07:47.920 --> 00:07:51.850
a nightmare it's console dot
log. And it's we had

152
00:07:51.850 --> 00:07:55.720
to end up putting in
a knockout specific Chrome extension.

153
00:07:56.350 --> 00:07:58.540
None of the objects look
like what I would think

154
00:07:58.540 --> 00:08:00.430
of as like, when I
think of objects, I think

155
00:08:00.430 --> 00:08:04.720
of data structures, but JavaScript,
debuggers want you to look

156
00:08:04.720 --> 00:08:07.240
at all the methods that
have been, you know, bolt,

157
00:08:07.510 --> 00:08:09.730
you know, spot welded onto
the side of the job.

158
00:08:10.450 --> 00:08:13.930
Right, right. And that's also
a side effect of knockout

159
00:08:13.930 --> 00:08:16.300
decorating your objects, given the
way that it does the

160
00:08:16.300 --> 00:08:19.210
observables. So for folks not
familiar with knockout, the way

161
00:08:19.210 --> 00:08:22.090
it works is you have
an object that you want

162
00:08:22.090 --> 00:08:24.070
to listen for, changes on.
And so the way NACA

163
00:08:24.080 --> 00:08:27.100
does that, it is, it
attaches a bunch of event

164
00:08:27.100 --> 00:08:29.950
listeners and properties. And so
it can detect changes. And

165
00:08:29.950 --> 00:08:32.950
then you get nice things
like dependency tracking, let's say

166
00:08:32.950 --> 00:08:35.620
one observable property changes, and
you want to be notified

167
00:08:35.830 --> 00:08:38.110
or you want to subscribe
to that change. You're able

168
00:08:38.110 --> 00:08:39.670
to do that. And that
enables you to build a

169
00:08:39.670 --> 00:08:42.520
lot of really cool scenarios.
But like you're saying, it

170
00:08:42.520 --> 00:08:45.160
ends up making your objects
look really ugly. Right. And

171
00:08:45.160 --> 00:08:47.960
so debugging is a pain.
The other thing that you're,

172
00:08:47.960 --> 00:08:50.770
you're probably gonna run into
is that once you start

173
00:08:50.770 --> 00:08:53.890
building a really large site,
because you're creating all these

174
00:08:53.890 --> 00:08:57.330
additional properties and methods on
the objects, you're going to

175
00:08:57.330 --> 00:09:00.060
start to run into performance
issues. Now, to be honest,

176
00:09:00.060 --> 00:09:02.220
I've heard that I haven't
really had an issue. I

177
00:09:02.220 --> 00:09:04.380
have maybe I haven't built
a website of that scale,

178
00:09:04.380 --> 00:09:07.200
but it's often cited. Yeah.
It's often cited as a

179
00:09:07.200 --> 00:09:08.550
reason. It's like, Oh, that's
why I want to go

180
00:09:08.550 --> 00:09:11.640
to angular, which doesn't necessarily
have this problem because they

181
00:09:11.640 --> 00:09:13.560
solve the problem a different
way. They do straight string

182
00:09:13.560 --> 00:09:17.420
comparison. Right. Then this example,
I've got two texts Boxes

183
00:09:17.510 --> 00:09:22.280
feeding into, I think maybe
12 gen, you know? Oh,

184
00:09:22.280 --> 00:09:24.890
well butts, outputs, I guess.
Gotcha. Put it right. Yep.

185
00:09:24.920 --> 00:09:27.860
Yep. And it's really brilliant.
I mean, it's just a

186
00:09:27.860 --> 00:09:30.710
perfect single page app. I'm
waiting for this thing to

187
00:09:30.710 --> 00:09:33.170
get on hacker news just
so I can watch it

188
00:09:33.170 --> 00:09:36.200
scale. Cause as I like
to say, it does nothing.

189
00:09:36.980 --> 00:09:40.100
And if you do nothing,
you can scale infinitely. Right,

190
00:09:40.790 --> 00:09:44.420
Right. It doesn't get saved
Of anything. Yeah. So, so

191
00:09:44.420 --> 00:09:46.760
doing it, not, that was
a great idea, but I

192
00:09:46.760 --> 00:09:49.760
tried to do it in
both visual studio, 2012 in

193
00:09:49.760 --> 00:09:54.290
2013 with the new tools
and in sublime and really

194
00:09:54.290 --> 00:09:57.170
no one was there to
help me, nothing made it

195
00:09:57.170 --> 00:09:59.480
better. Like, you know, JS
lint at the command line

196
00:09:59.480 --> 00:10:03.200
was helpful. Some of the
IntelliSense in visual studio was

197
00:10:03.200 --> 00:10:09.110
okay. Some of the autocomplete
not really intelligent, but auto-complete

198
00:10:09.110 --> 00:10:12.650
stuff and sublime was useful.
Yeah. But it's really back

199
00:10:12.650 --> 00:10:14.990
to the wild West, you
know, I guess I'm spoiled

200
00:10:15.410 --> 00:10:18.470
in a static typing kind
of a way. Yeah. Yeah.

201
00:10:18.500 --> 00:10:21.470
In fact, I find that
people who love static typing

202
00:10:21.500 --> 00:10:24.500
tend to gravitate towards angular
more because they're familiar with

203
00:10:24.560 --> 00:10:26.540
it. Like they hear the
term dependency injection like, Oh

204
00:10:26.540 --> 00:10:28.970
cool. You know, angular does
dependency injection. And you know,

205
00:10:28.970 --> 00:10:31.640
you can define, you know,
this is also the TypeScript

206
00:10:31.640 --> 00:10:33.440
thing, right. Where you're, where
you're starting to get into

207
00:10:33.440 --> 00:10:37.520
the field of I'm defining,
you know, strongly type properties,

208
00:10:37.520 --> 00:10:40.520
strongly type, sorry, Sterling type
classes. And you know, I've

209
00:10:40.520 --> 00:10:43.190
got inheritance and polymorphism and
I'm doing all these sorts

210
00:10:43.190 --> 00:10:45.710
of things just to try
to make Java script into

211
00:10:45.710 --> 00:10:49.370
a strongly typed language, which
really it, isn't not to

212
00:10:49.370 --> 00:10:51.200
say I'm dumping on TypeScript.
I think it's great for

213
00:10:51.200 --> 00:10:54.380
type checking I'm yet to
be kind of, I got

214
00:10:54.380 --> 00:10:57.380
to go watch, Andrew's talk
at build and, and figure

215
00:10:57.380 --> 00:10:58.940
out, you know, what the,
what the real value prop

216
00:10:58.940 --> 00:11:00.980
is beyond that. Because I
haven't really built and built

217
00:11:00.980 --> 00:11:03.860
a really large scale application
that can take advantage of,

218
00:11:03.860 --> 00:11:05.690
I think some of the
benefits that it has to

219
00:11:05.690 --> 00:11:08.900
offer People to people in
public, like the difference between

220
00:11:08.900 --> 00:11:11.660
TypeScript and JavaScript and where
it fits. I bring in,

221
00:11:11.690 --> 00:11:14.060
I bring in coffee script.
And the example I always

222
00:11:14.060 --> 00:11:18.380
give is that coffee script
is what Ruby people wish

223
00:11:18.770 --> 00:11:23.660
JavaScript looked like. Right, right.
Risk friendly. It has white

224
00:11:23.660 --> 00:11:26.720
space. It's kind of, it's
almost like a haiku. It

225
00:11:26.720 --> 00:11:31.070
has very expressive and camel
style, clean lines. Exactly. And

226
00:11:31.070 --> 00:11:35.270
then TypeScript is what a
C-sharp person wishes the script

227
00:11:35.270 --> 00:11:37.340
looks like. Yeah. You know,
and that makes sense. But

228
00:11:37.340 --> 00:11:40.100
maybe actually take a moment
and back up and juxtapose

229
00:11:40.100 --> 00:11:43.220
the difference in thinking between
knockout, which is an MVVM

230
00:11:43.730 --> 00:11:46.100
and angular or Ember, which
is more of an MVC

231
00:11:46.100 --> 00:11:48.290
on the client to those
who maybe not be familiar

232
00:11:48.290 --> 00:11:51.410
with those things. Yeah. Sorry.
So basically, you know, knockout

233
00:11:51.410 --> 00:11:54.910
is the MVVM Silverlight model
of, of model binding. So

234
00:11:54.910 --> 00:11:58.000
for folks who are really
familiar with, with Silverlight and

235
00:11:58.000 --> 00:11:59.650
how that works, knockout is
going to be a great

236
00:11:59.650 --> 00:12:04.210
natural transition for you. Whereas
with, with angular, things are

237
00:12:04.210 --> 00:12:07.480
more declarative. So you end
up defining a model and

238
00:12:07.480 --> 00:12:09.790
then you end up having
to, to namespace your application.

239
00:12:09.800 --> 00:12:11.740
So, you know, these things
start to sound a little

240
00:12:11.740 --> 00:12:14.230
more, more server side. And
then at that point, you

241
00:12:14.230 --> 00:12:17.050
know, angular figures out what
your model is like, and

242
00:12:17.050 --> 00:12:19.870
it's able to do string
comparisons to detect changes that

243
00:12:19.870 --> 00:12:23.710
update your view and basically
how MVC works. Right? So

244
00:12:23.710 --> 00:12:25.360
you have a model, you
have a view, and then

245
00:12:25.360 --> 00:12:28.360
there's a controller that you
initialize and hook up to,

246
00:12:28.470 --> 00:12:30.850
to be able to listen
for those changes and make

247
00:12:30.850 --> 00:12:33.220
those comparisons. So it's just
a different way to get

248
00:12:33.220 --> 00:12:36.550
the same thing done because
you're doing simple string comparisons

249
00:12:36.550 --> 00:12:38.800
instead of doing event listeners,
which is kind of a

250
00:12:38.800 --> 00:12:44.830
cleaner, more, I guess, programming
friendly type of way, but

251
00:12:44.950 --> 00:12:46.690
you know, string comparisons of
brute force, they end up

252
00:12:46.690 --> 00:12:49.570
being a little more performance
depending on browser. But once

253
00:12:49.570 --> 00:12:52.210
again, I think the way
I think about it is

254
00:12:52.210 --> 00:12:54.700
I wouldn't choose angular just
because, Oh, you want to

255
00:12:54.700 --> 00:12:57.400
have, you know, you want
to build a giant, massive,

256
00:12:57.400 --> 00:13:00.250
scalable application. I would wait
until, you know, you really

257
00:13:00.250 --> 00:13:03.850
have some concrete data about
your specific application before, before

258
00:13:03.850 --> 00:13:05.950
going one way or another,
because you're going to save

259
00:13:05.950 --> 00:13:08.240
a lot in depth time.
If you know, Silverlight for

260
00:13:08.290 --> 00:13:11.470
knockout. Also one thing you
actually, that you didn't mention

261
00:13:11.470 --> 00:13:14.050
is the, the knockout tooling
inside of visual studio. How

262
00:13:14.050 --> 00:13:16.900
did you like that? Yeah.
So that's one big advantage.

263
00:13:16.900 --> 00:13:19.180
I think in my mind
of using knockout versus angular,

264
00:13:19.180 --> 00:13:21.850
because I'm a V S
developer I'm going to get,

265
00:13:21.880 --> 00:13:24.010
in fact, it even works
for custom bindings, right? So

266
00:13:24.010 --> 00:13:29.110
if you define your own,
basically your own custom functionality

267
00:13:29.170 --> 00:13:31.930
inside of knockout, it also
lights up with that. All

268
00:13:31.930 --> 00:13:35.200
the tooling works, you get
IntelliSense, you get highlighting. And

269
00:13:35.200 --> 00:13:36.970
so, yeah, I'd love to
hear your thoughts on that.

270
00:13:37.830 --> 00:13:40.830
I got the, we got
the highlighting in the syntax

271
00:13:40.830 --> 00:13:42.870
kind of layout. So we
could, we could tell what

272
00:13:42.870 --> 00:13:44.670
was knocked out at what
wasn't, because when you're in

273
00:13:44.670 --> 00:13:47.310
a, in a page, particularly
when that's a razor page,

274
00:13:47.310 --> 00:13:50.640
when you're really mixing, you
know, you could literally mix

275
00:13:50.640 --> 00:13:54.240
CSS, JavaScript, HTML, and knock
out bindings and even like

276
00:13:54.240 --> 00:13:57.120
a template like a mustache
or a handlebar template all

277
00:13:57.120 --> 00:14:00.900
on one page. Yeah. You're
really a polyglot programmer in

278
00:14:00.900 --> 00:14:04.320
one, on one file. In
this case, it was just

279
00:14:04.350 --> 00:14:07.800
because there was no back
end. It was just HTML

280
00:14:07.860 --> 00:14:11.610
and knockout. So there was
some IntelliSense, but that, wasn't

281
00:14:11.610 --> 00:14:15.600
what I needed. Like IntelliSense
wasn't the pain. Right, right.

282
00:14:16.380 --> 00:14:17.820
Without that being a lot.
So I hear what you're

283
00:14:17.820 --> 00:14:19.530
saying. I think it's great
that that's in visual studio,

284
00:14:19.530 --> 00:14:22.800
but it was the, the
lack of this idea of

285
00:14:22.800 --> 00:14:25.200
like, what's going on. And
I think this is where

286
00:14:25.200 --> 00:14:30.360
they say like IntelliSense rots
the brain where this, this

287
00:14:30.360 --> 00:14:34.530
applicant, this silly little application
needed to have a planning

288
00:14:34.530 --> 00:14:35.970
involved. You know what I
mean? This wasn't the kind

289
00:14:35.970 --> 00:14:39.270
of thing you just start
with. Right. Right. Yeah. And

290
00:14:39.270 --> 00:14:42.720
even now it still has
some really interesting and subtle

291
00:14:42.720 --> 00:14:48.000
bugs, for example, on some
browsers, we've got it set

292
00:14:48.000 --> 00:14:51.830
up where knockout is automatically
adding commas for like 1 billion.

293
00:14:51.830 --> 00:14:54.200
So it's like one comma,
zero, zero, zero commenters or

294
00:14:54.200 --> 00:14:57.110
zero. Gotcha. Other browsers, for
some reason that culture information

295
00:14:57.110 --> 00:14:59.840
is not coming across. Interesting.
And just ended up with

296
00:14:59.840 --> 00:15:03.200
just the number. So there's,
there's a little bit of

297
00:15:03.200 --> 00:15:05.660
magic that's going on. I'm
not quite clear about, and

298
00:15:05.960 --> 00:15:08.540
right. And this is, this
is what happens also when

299
00:15:08.540 --> 00:15:11.540
you only test in Chrome.
Yeah. Yeah. You get, you

300
00:15:11.540 --> 00:15:13.300
know what I mean? You
test in the browser and

301
00:15:13.300 --> 00:15:16.210
then, then you're like, Oh
yeah, well it Works. And

302
00:15:16.210 --> 00:15:19.150
it does. Yeah. But now
I'm getting there now there's

303
00:15:19.150 --> 00:15:21.400
the million of Little subtle
details. Like, you know, it

304
00:15:21.400 --> 00:15:23.380
works on an iPhone, but
it doesn't really look great

305
00:15:23.950 --> 00:15:26.370
Exactly. That iPhone, but yeah.
How do I test that?

306
00:15:26.590 --> 00:15:29.380
Like, where's my iPhone Chrome,
you know, iPhone developer tool.

307
00:15:30.130 --> 00:15:32.860
Right, right. Yeah. I mean,
it is, it is definitely

308
00:15:32.860 --> 00:15:35.530
a challenge when, you know,
I think we've, we've come

309
00:15:35.530 --> 00:15:37.330
full circle. We've said, Hey,
we solved the, you know,

310
00:15:37.330 --> 00:15:39.700
the browser testing problem. You
can just use jQuery or,

311
00:15:39.700 --> 00:15:41.260
you know, we've got these
frameworks and stuff you can

312
00:15:41.260 --> 00:15:43.240
depend on that. Let's just
solve the problem. But it

313
00:15:43.240 --> 00:15:46.240
really doesn't at the end
of the day, it's your

314
00:15:46.240 --> 00:15:48.550
experience? That matters. Right. It's
one thing for it to

315
00:15:48.550 --> 00:15:50.680
work like you point out.
But it's another thing for

316
00:15:50.680 --> 00:15:55.060
the experience just to be
great on your device, you

317
00:15:55.060 --> 00:15:56.680
know, and I guess the
one, the nice thing is

318
00:15:56.680 --> 00:15:59.290
that we're starting to see,
I guess some browsers go

319
00:15:59.290 --> 00:16:02.740
away, which is less test
coverage. You know, honestly that

320
00:16:02.740 --> 00:16:04.900
less time you're going to
have to spend, to validate

321
00:16:04.900 --> 00:16:09.010
those browsers. As far as
major browser engines are concerned

322
00:16:09.010 --> 00:16:12.040
with, you know, Firefox 22
came out today, we have

323
00:16:12.100 --> 00:16:15.430
version tests, we have more
version, more testing on versions

324
00:16:15.940 --> 00:16:19.330
of the same. Yup. Then
than the different browsers themselves,

325
00:16:19.330 --> 00:16:21.910
such as themselves. Yeah. Yeah.
So, so, you know, I

326
00:16:21.910 --> 00:16:24.370
mean, maybe that's one thing
that's a plus for IIE,

327
00:16:24.370 --> 00:16:26.650
I guess, or plus for
Chrome, depending on which camp

328
00:16:26.650 --> 00:16:28.630
you're in, you know, there's
a major versions for IIE

329
00:16:28.630 --> 00:16:29.860
and then for Chrome, you
don't have to worry about

330
00:16:29.860 --> 00:16:32.500
it. It's just latest for
the most part. That's true.

331
00:16:32.500 --> 00:16:34.840
I will say though, that
for the most part, if

332
00:16:34.840 --> 00:16:37.800
you write clean Code and
I think that this, this

333
00:16:37.810 --> 00:16:40.570
there's a Renaissance in clean
code right now when, when

334
00:16:40.600 --> 00:16:43.630
Jen yang and I redesigned
my blog and my website,

335
00:16:44.260 --> 00:16:48.010
it's pretty much worked everywhere
and pretty much looks okay.

336
00:16:48.400 --> 00:16:50.710
Yeah. And we really didn't
test anywhere, et cetera, And

337
00:16:50.710 --> 00:16:54.610
Chrome really. Wow. That's awesome.
Really, just because we limited

338
00:16:54.610 --> 00:16:56.860
the number of CSS selectors
that we did, we did

339
00:16:56.860 --> 00:17:00.310
limited the number of our
markup is, you know, other

340
00:17:00.310 --> 00:17:02.830
than some of the historical
Schmidt's that at my blog

341
00:17:02.830 --> 00:17:06.880
has we've basically, I think
we've probably got like dibs

342
00:17:07.270 --> 00:17:10.240
H one through H three
P and pre like, that's

343
00:17:10.240 --> 00:17:13.300
pretty much it. Right. There's
not a lot going on

344
00:17:13.300 --> 00:17:15.790
there. Yeah. And that's, that's
kind of an interesting balance,

345
00:17:15.790 --> 00:17:18.960
right. Because you're being very
conscious about that. Right. Whereas

346
00:17:18.970 --> 00:17:20.470
I would argue, it's like,
it's kind of nice to

347
00:17:20.470 --> 00:17:23.140
be able to use the
new stuff. Right. I'll give

348
00:17:23.140 --> 00:17:25.990
you an example. I ran
into recently. So I'm building

349
00:17:25.990 --> 00:17:28.360
a, a media site that
requires me to upload a

350
00:17:28.360 --> 00:17:29.890
video file. So I'm like,
Oh, you know, what a

351
00:17:29.890 --> 00:17:31.690
great way to do this
is I'll just knew what

352
00:17:31.690 --> 00:17:34.120
my bootstrap site, there's like,
nice progress bars that are

353
00:17:34.120 --> 00:17:37.810
styled and I'll use the
HTML five file API And

354
00:17:37.810 --> 00:17:41.260
drop, and then you can
get the automatic progress bar

355
00:17:41.260 --> 00:17:44.110
up. Right. Right. And I'm
also able just to do

356
00:17:44.110 --> 00:17:46.300
file upload from the browser.
Right. Because I can get

357
00:17:46.300 --> 00:17:49.230
that, that, that file object
off of the form. Right.

358
00:17:49.260 --> 00:17:51.270
And so this works great.
As long as, you know,

359
00:17:51.300 --> 00:17:53.670
you only testing Chrome, as
soon as you go to

360
00:17:53.730 --> 00:17:56.490
a browser that doesn't support
HTML five file. Now you're

361
00:17:56.490 --> 00:17:59.010
falling back to something like
flash or you know, or

362
00:17:59.010 --> 00:18:01.170
silver light. And so it's
a, it's a big pain

363
00:18:01.170 --> 00:18:02.400
cause you're like, Hey, I
want to use the new

364
00:18:02.400 --> 00:18:05.400
stuff. But then I basically
doubled my work now because

365
00:18:05.400 --> 00:18:07.860
I could have just implemented
the old thing and be

366
00:18:07.860 --> 00:18:09.720
done and, you know, have
been done with it as

367
00:18:09.720 --> 00:18:11.960
opposed to, you know, The
file upload is such a

368
00:18:11.960 --> 00:18:13.880
huge problem. There's actually a
startup. I forgot the name,

369
00:18:13.880 --> 00:18:17.240
Name of it, but I
really it's like file Upload.io,

370
00:18:17.270 --> 00:18:21.290
I'm guessing. Hmm. But basically
what it is, I have

371
00:18:21.290 --> 00:18:22.160
to look it up and
I'll put it in the

372
00:18:22.160 --> 00:18:24.560
show notes for those who
are listening. Sounds good. But

373
00:18:24.680 --> 00:18:30.080
it's a Y Combinator or
commentator, depending on who you

374
00:18:30.080 --> 00:18:34.820
ask. And basically it's like
common file dialogues for the

375
00:18:34.820 --> 00:18:37.400
web. Like their argument is
we're going to just abstract

376
00:18:37.400 --> 00:18:39.860
the whole picking of a
file away. And would they?

377
00:18:39.860 --> 00:18:43.280
Thank you. Thank you. Yeah.
I want that. And I

378
00:18:43.280 --> 00:18:45.620
mean, they allow you to
know Only choose files off

379
00:18:45.620 --> 00:18:50.270
your disc, but they'll integrate
into Dropbox. Oh, really? Drive.

380
00:18:50.270 --> 00:18:51.800
Right. So you just like
a file is a file.

381
00:18:51.800 --> 00:18:55.340
So it's a common file
Exactly. For the web. And

382
00:18:55.340 --> 00:18:58.100
this is, think about that.
This is yet another example

383
00:18:58.100 --> 00:19:00.830
where something's broken. So someone
is going to use the

384
00:19:00.830 --> 00:19:04.340
opportunity to kind of putty
over or spackle over that

385
00:19:04.340 --> 00:19:07.700
problem. Just like jQuery, spackled
over browser differences. Yeah. If

386
00:19:07.700 --> 00:19:10.040
you've ever tried to style
an input type equals file

387
00:19:10.220 --> 00:19:13.100
and make that consistent across
all browsers, do you understand

388
00:19:13.100 --> 00:19:18.290
why I want this yesterday?
Well, or like calendars, just

389
00:19:18.290 --> 00:19:21.740
try to get calendars. Right?
There's an opportunity for someone

390
00:19:21.740 --> 00:19:24.560
to solve that problem. Right.
If anyone's, if anyone's listening

391
00:19:24.560 --> 00:19:26.630
closely, one of my, one
of my interview questions that

392
00:19:26.630 --> 00:19:31.610
I use is implement a
calendar, which calendar. Exactly. So,

393
00:19:31.610 --> 00:19:33.290
you know, it has two
things. Number one, are you,

394
00:19:33.290 --> 00:19:34.970
are you willing to drill
down to solve a problem?

395
00:19:35.240 --> 00:19:37.520
And number two, can you
actually solve the problem? So

396
00:19:38.150 --> 00:19:41.270
always, always interesting. So the,
the, the file upload stuff,

397
00:19:41.300 --> 00:19:44.240
you ended up doing what,
like I actually funny story

398
00:19:44.240 --> 00:19:48.980
before he answered that yeah.
This podcast itself gets uploaded

399
00:19:48.980 --> 00:19:53.990
with a Silverlight control. Oh
really? And because it's the

400
00:19:54.020 --> 00:19:57.080
easiest and most it'll work
anywhere because I always find

401
00:19:57.080 --> 00:20:00.050
myself all over the place
and I've got a file

402
00:20:00.050 --> 00:20:02.900
to upload and these are
big files. Right. These are,

403
00:20:03.050 --> 00:20:05.600
you know, five, 600 megs.
Yeah. I don't really want

404
00:20:05.600 --> 00:20:08.840
to just select them and
hit post. Sure. I need

405
00:20:08.840 --> 00:20:13.880
auto renew. Right? Yep. Yep.
Right now Carl Franklin, my producer

406
00:20:13.880 --> 00:20:16.520
is working on rewriting that
in HTML five. So I

407
00:20:16.520 --> 00:20:19.370
don't need to install server
light. Cool. He's having some

408
00:20:19.370 --> 00:20:23.180
trouble, Right? Yeah. File upload
a whole Hard problem to

409
00:20:23.250 --> 00:20:25.190
solve. It seems easy. But
you had in things like

410
00:20:25.190 --> 00:20:29.120
auto resume and making it
work anywhere. Right, right. Yeah.

411
00:20:29.120 --> 00:20:31.880
It's definitely, it's definitely an
interesting problem to solve. I'll

412
00:20:31.880 --> 00:20:33.770
be a hundred percent honest
with you. Your, this might

413
00:20:33.770 --> 00:20:35.870
be a little disappointing, but
here's what I did. I

414
00:20:35.870 --> 00:20:39.260
contracted out a vendor company
to deliver me a file

415
00:20:39.260 --> 00:20:42.710
upload that basically was compatible
with HTML five and had

416
00:20:42.710 --> 00:20:44.720
a Silverlight fall back. Cause
I didn't want to go

417
00:20:44.720 --> 00:20:48.010
implement my Silverlight uploader. Well,
and that's also, you know,

418
00:20:48.220 --> 00:20:50.890
generally speaking, I found tons
of controls online that do

419
00:20:50.890 --> 00:20:52.780
this for you. They fall
back to flash. I mean,

420
00:20:52.780 --> 00:20:56.200
depending on what your, your
standards are, some of those

421
00:20:56.200 --> 00:20:58.780
may be suitable, us being
Microsoft and us having to

422
00:20:58.780 --> 00:21:01.600
ship this. We had to
go and build our own

423
00:21:02.130 --> 00:21:03.930
Well. And you know, that's
the other thing, that's the

424
00:21:03.930 --> 00:21:06.180
silly part of the web
that hasn't been fixed yet

425
00:21:06.180 --> 00:21:09.390
is like clipboard APIs, right?
Yeah. We have our own,

426
00:21:09.480 --> 00:21:11.610
we have one of our
own of those as well.

427
00:21:11.670 --> 00:21:13.920
Right? Like you look at
like Bitly, right? Just for

428
00:21:13.920 --> 00:21:16.290
a Bitly shortly. They use
a flash fallback when they

429
00:21:16.290 --> 00:21:19.590
can't access your, and it's
always this little one. I

430
00:21:19.590 --> 00:21:22.590
know this actually, because I
run Slash block. Oh, gotcha.

431
00:21:22.740 --> 00:21:27.240
Yeah. Flash and server light
and generally just makes things

432
00:21:27.240 --> 00:21:30.330
better. And then you'll, you'll
visit a site and you

433
00:21:30.340 --> 00:21:33.090
go, what's that little eight
pixel by eight pixel square

434
00:21:33.090 --> 00:21:36.240
there that's gray with an
international. No, over it. Oh,

435
00:21:36.810 --> 00:21:40.860
that's that site's little clipboard
deal. Right, right. Implement that.

436
00:21:41.430 --> 00:21:45.510
Yeah. Yeah. I mean, How
do we make this better

437
00:21:45.510 --> 00:21:48.030
though? I mean like, there's,
there's a couple of different

438
00:21:48.030 --> 00:21:52.710
scenarios. There's the big IDE
like the visual studio IDE

439
00:21:53.010 --> 00:21:55.170
on one end on the
other end, you've got your

440
00:21:55.170 --> 00:21:58.230
vis and your victim's and
your, and your lightweight texts.

441
00:21:58.230 --> 00:22:01.800
People who do things there
and in shell scripts. And

442
00:22:01.800 --> 00:22:04.950
then in the middle somewhere,
you've got sublime with package

443
00:22:04.980 --> 00:22:10.080
control and package installation. You've
got Adobe brackets. You've got

444
00:22:10.080 --> 00:22:14.130
now media or there's there's
cloud nine. So people are

445
00:22:14.130 --> 00:22:17.460
talking about doing an IDE
entirely in JavaScript. Brackets is

446
00:22:17.460 --> 00:22:20.760
a great example where it's
in JavaScript, but it looks

447
00:22:20.760 --> 00:22:24.240
like an app, right. It's
actually wrapped in a, a

448
00:22:24.290 --> 00:22:28.380
windows app. Gotcha. Yeah. I
mean, there's, there's definitely a

449
00:22:28.380 --> 00:22:30.690
variety of choice. I mean,
at the end of the

450
00:22:30.690 --> 00:22:33.330
day, I don't think there's,
there's a perfect solution. I

451
00:22:33.330 --> 00:22:36.160
actually, when I do node
programming, I switch over to,

452
00:22:36.160 --> 00:22:39.630
to sublime and I just
do command line because for

453
00:22:39.630 --> 00:22:41.910
me, the nice thing about
no Pope programming is I

454
00:22:41.910 --> 00:22:44.190
can go across plat. Right?
So it's the exact same

455
00:22:44.190 --> 00:22:46.050
thing, you know, I'm using
good, I'm using sublime. It

456
00:22:46.050 --> 00:22:48.960
works on a Mac. It
works on my PC. It's

457
00:22:48.960 --> 00:22:51.420
the same development experience everywhere.
And so when I'm, when

458
00:22:51.420 --> 00:22:53.280
I'm doing that, I do
tend to switch back to

459
00:22:53.280 --> 00:22:56.040
something a little more bare
metal only because you know,

460
00:22:56.040 --> 00:22:57.960
I'm losing out on, I'm
not losing out on any

461
00:22:57.960 --> 00:23:00.060
tooling benefits that I would
have had, let's say in

462
00:23:00.060 --> 00:23:02.550
visual studio, Well, wouldn't an
argument then be if your

463
00:23:02.550 --> 00:23:05.220
goal is cross platform and
you're doing work in node

464
00:23:05.220 --> 00:23:07.440
than to use something like
cloud nine or to use

465
00:23:07.440 --> 00:23:09.990
brackets or something that's written
in JavaScript. I mean, I

466
00:23:09.990 --> 00:23:12.090
believe that sublime is written
in C, but it's a

467
00:23:12.090 --> 00:23:16.230
cross platform C yep. But
arguably machines are fast enough

468
00:23:16.230 --> 00:23:18.480
and JavaScript is fast enough.
Now that an editor written

469
00:23:18.480 --> 00:23:21.900
in JavaScript works just fine.
Does that mean that apps

470
00:23:22.170 --> 00:23:24.360
written in JavaScript or are
going to be just better?

471
00:23:25.320 --> 00:23:26.970
You know, I think, I
think we're on our way

472
00:23:26.970 --> 00:23:30.180
there. I don't know if
we're completely there yet. I

473
00:23:30.180 --> 00:23:33.060
think there's still something to
be said for, and let's

474
00:23:33.060 --> 00:23:35.280
say for lack of a
better term, a somewhat offline

475
00:23:35.400 --> 00:23:38.790
development experience. And generally speaking,
you know, I have used

476
00:23:38.790 --> 00:23:40.590
cloud nine. I really love
their tooling. They actually have

477
00:23:40.590 --> 00:23:43.410
great, no debugging tools, which
is something that's a little

478
00:23:43.410 --> 00:23:44.940
difficult to set up on
your own. It takes some

479
00:23:45.380 --> 00:23:48.260
there, the open source projects,
node inspector that used to

480
00:23:48.260 --> 00:23:50.510
support it have kind of
been deprecated and you have

481
00:23:50.510 --> 00:23:53.600
to find your own alternatives.
The main thing is the

482
00:23:53.600 --> 00:23:56.030
main issue I have is,
is twofold. The first is

483
00:23:56.030 --> 00:23:58.970
performance. At the end of
the day, it's, it's close.

484
00:23:59.090 --> 00:24:01.610
It is pretty performance. It's
not slow by any means,

485
00:24:02.560 --> 00:24:07.330
but it's not as fast
as, as a, you know,

486
00:24:07.330 --> 00:24:10.000
a native, native editor like
sublime would be right. Like

487
00:24:10.000 --> 00:24:13.180
something like brackets where it's
JavaScript, but it's local, there

488
00:24:13.180 --> 00:24:15.370
is an offline experience. So
I mean, that, that happens

489
00:24:15.370 --> 00:24:17.560
as well. And even like
the Azure command line tools

490
00:24:17.560 --> 00:24:20.860
are written in JavaScript, there
are node, but people who

491
00:24:20.860 --> 00:24:24.010
write them don't know that,
you know what I'm saying?

492
00:24:24.010 --> 00:24:26.500
Like, there's, there are starting
to be a proliferation of

493
00:24:26.530 --> 00:24:29.710
command line tools written in
JavaScript as well. And then

494
00:24:29.710 --> 00:24:33.370
you've got people writing windows
eight apps in JavaScript, I

495
00:24:33.370 --> 00:24:37.510
guess the mail app in
windows eight is written in

496
00:24:37.510 --> 00:24:40.360
JavaScript. You can't really tell
though, like how would I

497
00:24:40.360 --> 00:24:42.730
know that? Right. I know
that cause someone told me.

498
00:24:43.000 --> 00:24:45.400
Yeah, yeah, exactly. I think
that's, that's I think it

499
00:24:45.400 --> 00:24:47.710
depends on your, in your,
on your runtime, right? Like

500
00:24:47.710 --> 00:24:50.200
with the mail app, that's
going to windows RT. Right?

501
00:24:50.200 --> 00:24:52.630
So at the end of
the day, it's executing, you

502
00:24:52.630 --> 00:24:56.470
know, natively in inside of
the, the windows environment. Whereas

503
00:24:57.100 --> 00:24:59.590
let's say you're using cloud
nine while your execution environment

504
00:24:59.590 --> 00:25:01.930
could be Chrome. It could
be IAE, right. Depending on

505
00:25:01.930 --> 00:25:04.960
how the engine performs, depending
on what you have available

506
00:25:04.960 --> 00:25:06.640
at the time, you're going
to get variances in your

507
00:25:06.640 --> 00:25:09.760
experience. Right. But brackets is
going to be chromium and,

508
00:25:09.760 --> 00:25:12.550
and that's interesting. Yeah. That's
really interesting idea of like,

509
00:25:12.550 --> 00:25:15.070
well, let's just ship our
runtime with us. Right. So

510
00:25:15.070 --> 00:25:17.020
then you've got other runtimes
to think about, right. There's

511
00:25:17.020 --> 00:25:20.380
other languages. And if I
can bring a runtime down,

512
00:25:20.740 --> 00:25:22.570
like imagine I'm just kind
of brainstorming here, but like

513
00:25:22.570 --> 00:25:27.130
imagine a.net that came down
with the app itself, like

514
00:25:27.130 --> 00:25:29.740
a little tiny.net. Right. Cause
that's kind of what would

515
00:25:29.740 --> 00:25:33.760
V8 is, right? Yeah. It's
this little runtime that could,

516
00:25:34.180 --> 00:25:37.330
Yeah. It can be private
As opposed to one that's

517
00:25:37.330 --> 00:25:39.730
running in like C program
files that I have to

518
00:25:39.730 --> 00:25:45.100
update every three minutes. Like
Java, like Java update. Yeah.

519
00:25:45.130 --> 00:25:47.560
29. Right? Yeah. And a
big component of that too

520
00:25:47.560 --> 00:25:49.480
is I guess what enables
that is having a good

521
00:25:49.480 --> 00:25:53.020
package management system, right? Like
NPM or, or new get

522
00:25:53.110 --> 00:25:55.420
for folks who don't know
either one it's the equivalent

523
00:25:55.690 --> 00:25:58.150
in node and equal and,
and done. Right. Right. Whether

524
00:25:58.150 --> 00:26:01.780
it be gems or whether
there's there's development level, package

525
00:26:01.780 --> 00:26:06.280
management, like NPM and nougat.
And then there's a more

526
00:26:06.280 --> 00:26:09.540
kind of system level. Like
VA like, like, like, like,

527
00:26:09.540 --> 00:26:12.610
like apt get and co
you know what I'm saying?

528
00:26:12.610 --> 00:26:16.990
Like updating windows itself or
chocolatey, I guess, is the

529
00:26:16.990 --> 00:26:21.670
equivalent now open source windows.
One of the things that

530
00:26:21.670 --> 00:26:26.080
we, we should go back
to was what, what kinds

531
00:26:26.080 --> 00:26:30.040
of tooling could make web
development better for everyone? Like,

532
00:26:30.940 --> 00:26:34.450
there's the new, I guess
they call it browser link

533
00:26:34.480 --> 00:26:35.860
is what they told me
to call it in the

534
00:26:35.860 --> 00:26:38.410
keynote. But we think of
it as code named artery.

535
00:26:38.650 --> 00:26:41.980
Right. And this is Mads
Christianson and friends kind of

536
00:26:42.370 --> 00:26:45.810
communication between the ID and
the browser. Yeah. And we're

537
00:26:45.810 --> 00:26:47.580
going to go and talk
to other people about like,

538
00:26:47.580 --> 00:26:50.070
letting them implement that. Like
that's not something that should

539
00:26:50.070 --> 00:26:52.590
be specific to visual studio
that could be in brackets

540
00:26:52.590 --> 00:26:54.060
or that could be in
media or that could be

541
00:26:54.060 --> 00:26:57.420
in supply or someone like
a code rush or a

542
00:26:58.410 --> 00:27:01.200
ReSharper could do that as
well. And I was talking

543
00:27:01.200 --> 00:27:05.640
to Paul Irish from Google
at the build conference. Like

544
00:27:06.090 --> 00:27:09.030
I imagined that I would
want an experience where I

545
00:27:09.030 --> 00:27:12.960
could be in Chrome or
IE or Firefox change the

546
00:27:12.960 --> 00:27:16.200
Dom. Yep. Get it looking
the way I wanted it.

547
00:27:16.680 --> 00:27:20.640
And then somehow say back.
Yup. You know what I

548
00:27:20.640 --> 00:27:23.360
mean? Like, cause this is
how you Right. CSS now,

549
00:27:23.390 --> 00:27:27.380
right. You Around in the
visual editor. Yup. And then

550
00:27:27.380 --> 00:27:29.810
you go back and kind
of copy paste or somehow

551
00:27:29.840 --> 00:27:33.380
get those changes back into
the CSS. Yeah. That's that's

552
00:27:33.470 --> 00:27:35.630
in fact that's like the
dream, right? I mean, you

553
00:27:35.630 --> 00:27:37.760
literally just want to fiddle
around and then say, say

554
00:27:37.760 --> 00:27:40.520
persist. And once you have
that link between the browser

555
00:27:40.880 --> 00:27:42.800
and the IDE, I think
a lot of those things

556
00:27:42.800 --> 00:27:45.650
become possible through, through extending
on the, I guess the

557
00:27:45.650 --> 00:27:48.650
base platform of, of browser
link. Right. You can enable

558
00:27:48.650 --> 00:27:51.950
a lot of these really
cool scenarios besides the, just,

559
00:27:51.950 --> 00:27:55.160
Hey, refresh my page. Right.
I think even cooler would

560
00:27:55.160 --> 00:27:58.040
be if everything just live
updated. Right. So let's say,

561
00:27:58.040 --> 00:28:00.350
I'm, let's say I'm in
CSS, you know, I'm editing

562
00:28:00.350 --> 00:28:02.270
stuff in Chrome. And then
I've got a couple other

563
00:28:02.270 --> 00:28:04.760
browsers open. Well now, because
you have the link, not

564
00:28:04.760 --> 00:28:07.700
only between that browser and
the IDE, but the ID

565
00:28:07.710 --> 00:28:10.100
is connected to the other
browsers that are open. You

566
00:28:10.100 --> 00:28:13.100
can actually see all your
CSS changes, live in the

567
00:28:13.100 --> 00:28:15.650
different browsers as you're making
them. So if something goes

568
00:28:15.650 --> 00:28:17.660
wrong, you see it right
away. You don't end up

569
00:28:17.930 --> 00:28:22.010
too far down the wrong
path. I showed a demo

570
00:28:22.010 --> 00:28:24.350
where we were doing live
reload. Right. And there's been

571
00:28:24.350 --> 00:28:27.050
live reload tools forever. Yeah.
And the demo that we

572
00:28:27.050 --> 00:28:29.720
showed isn't about the live
reload feature. It's about the

573
00:28:29.720 --> 00:28:32.570
real time communication. So if
I could keep the Dom

574
00:28:32.570 --> 00:28:37.130
in sync without reloading, and
then I could have things

575
00:28:37.130 --> 00:28:40.580
like a scrolling, dynamic scrolling
where I'm scrolling and it's

576
00:28:40.760 --> 00:28:44.210
doing that everywhere. Mads demoed,
I'm filling out forms on

577
00:28:44.210 --> 00:28:47.960
multiple browsers at the same.
Right. Right. Well, yeah, really,

578
00:28:47.960 --> 00:28:51.410
really cool scenarios. I think
they, they alleviate a lot

579
00:28:51.410 --> 00:28:54.110
of pain points for developers
who are conscious of the

580
00:28:54.110 --> 00:28:56.570
issues they're going to run
into later on down the

581
00:28:56.570 --> 00:28:59.420
line with the different browsers.
I think you'll find a

582
00:28:59.420 --> 00:29:02.000
lot of people just do
one browser, right? Like you

583
00:29:02.000 --> 00:29:04.460
say, you know, the whole,
the whole dev testing Chrome.

584
00:29:04.460 --> 00:29:06.290
So it doesn't really like,
I think what's interesting is

585
00:29:06.290 --> 00:29:07.580
to talk about, you know,
what kind of problems does

586
00:29:07.580 --> 00:29:10.370
it solve in that scenario?
Right. You know, the fact

587
00:29:10.370 --> 00:29:12.230
you are going to get
the persisting back. Right. Which

588
00:29:12.230 --> 00:29:14.420
is great. So you get
to play in the browser

589
00:29:14.420 --> 00:29:17.600
tools and then persist back
CSS changes. That's obviously a

590
00:29:17.600 --> 00:29:19.610
great benefit. You're going to
get the push the other

591
00:29:19.610 --> 00:29:23.210
way for, for automatic refresh
and everything else. But I

592
00:29:23.210 --> 00:29:27.290
think, you know, we've built
the platform and now it's

593
00:29:27.290 --> 00:29:29.300
just time to, you know,
open it up and see

594
00:29:29.300 --> 00:29:33.380
what the, what the community
creates. Cause I think the,

595
00:29:33.380 --> 00:29:35.450
the main scenarios that are,
that are really appealing to

596
00:29:35.450 --> 00:29:37.940
me are when you are
looking at multiple browsers. Right.

597
00:29:37.940 --> 00:29:40.460
Right. At the same time,
I also think though that

598
00:29:40.460 --> 00:29:45.010
there I'm surprised that tools
like glimpse haven't taken off

599
00:29:45.010 --> 00:29:47.800
more like the, the, you
know, I think the guys

600
00:29:47.800 --> 00:29:51.880
that built glimpse have made
a client side all in

601
00:29:51.880 --> 00:29:56.830
Java script, web developer, or
Chrome tools, like experience with

602
00:29:56.860 --> 00:30:00.520
a backend connection to the
server that is really unparalleled

603
00:30:00.520 --> 00:30:04.360
because they're looking at things
in a holistic view that

604
00:30:04.570 --> 00:30:07.600
there's not like the profiling
that occurs in the server

605
00:30:07.930 --> 00:30:09.940
and then a bright line
and the profile that occurs

606
00:30:09.940 --> 00:30:12.610
on the client. Right. You
know, they put those timelines

607
00:30:12.610 --> 00:30:15.700
together in one place and
they look at the time

608
00:30:15.730 --> 00:30:19.990
to first bite kind of
like full life cycle. I'd

609
00:30:19.990 --> 00:30:21.880
like to see that in
my browser, like, it's great

610
00:30:21.880 --> 00:30:24.250
that they did it in
JavaScript, but their dashboard is

611
00:30:24.250 --> 00:30:28.150
their dashboard. Like why doesn't
my browser also know about

612
00:30:28.150 --> 00:30:30.750
my server and what's going
on in the backend? You

613
00:30:30.770 --> 00:30:33.010
know what I'm saying? Yeah.
No, absolutely. What if we

614
00:30:33.010 --> 00:30:36.220
pushed some of the profiling
information from visual studio or

615
00:30:36.220 --> 00:30:38.410
from node or from whatever,
all the way up into

616
00:30:38.410 --> 00:30:40.450
the browser and then gave
that information to the browser

617
00:30:40.810 --> 00:30:44.020
and told me, am I
spending my time on the

618
00:30:44.020 --> 00:30:46.510
right stuff? Yeah. You know,
I could be off here,

619
00:30:46.510 --> 00:30:50.270
micro benchmarking, little details of
CSS selectors or, or how

620
00:30:50.390 --> 00:30:52.120
stuff got rendered, but I
really should be spending my

621
00:30:52.120 --> 00:30:54.340
time on this end, plus
one data query on the

622
00:30:54.340 --> 00:30:57.700
back end. That's just killing
me. Right, right. Right. I

623
00:30:57.700 --> 00:30:59.170
mean, that'd be really cool.
Like if you could have

624
00:30:59.170 --> 00:31:02.050
almost like a white light
alive, why slow type of

625
00:31:02.050 --> 00:31:04.690
experience that, that just ties
both the client and the

626
00:31:04.690 --> 00:31:07.540
server together. I mean, Mads
does a popular talk where

627
00:31:07.540 --> 00:31:09.280
he goes over. It's like,
Hey, how to optimize your

628
00:31:09.280 --> 00:31:11.470
web application, which most people
are doing after the fact.

629
00:31:11.860 --> 00:31:13.600
Right. But I mean, if
you do it after the

630
00:31:13.600 --> 00:31:15.820
fact you went into issues
like, okay, now I'm going

631
00:31:15.820 --> 00:31:17.940
to go and combine and
minify my, my CSS and

632
00:31:17.940 --> 00:31:20.680
my JavaScript. Oh great. Now
I uncovered an issue that,

633
00:31:20.680 --> 00:31:22.840
you know, I really should
have been debugging right earlier

634
00:31:22.840 --> 00:31:25.660
on when I'm not in,
in crunch time. Exactly. Exactly.

635
00:31:25.660 --> 00:31:28.630
Yeah. Did you see his
web dev web developer checklist?

636
00:31:29.050 --> 00:31:31.420
Yes, definitely a great site.
I mean, and in fact

637
00:31:31.420 --> 00:31:33.580
he's talk is, is based
off of going through that

638
00:31:33.580 --> 00:31:35.410
checklist. It's a really great
talk. He's done it. A

639
00:31:35.410 --> 00:31:37.990
couple of conferences. The one
I know of for sure

640
00:31:38.440 --> 00:31:41.050
is a tech days, Europe
in a, in Belgium. So

641
00:31:41.050 --> 00:31:43.750
the recordings for that are,
are on channel nine, but

642
00:31:43.750 --> 00:31:45.760
it's a very popular talk
and Mads is a great

643
00:31:45.760 --> 00:31:47.770
speaker. So I highly encourage
people to go check that

644
00:31:47.770 --> 00:31:51.130
out. A lot of great
tips for making your asp.net

645
00:31:51.130 --> 00:31:53.650
website run a lot faster,
a lot smoother. Right. And

646
00:31:53.650 --> 00:31:55.810
he addresses a lot of
the common problems that you're

647
00:31:55.810 --> 00:31:58.120
going to see. And he
actually built a, a PLA

648
00:31:58.150 --> 00:32:01.630
browser plugin, a Chrome plugin
that will run those checks

649
00:32:01.750 --> 00:32:03.700
as you visit from page
to page as you go

650
00:32:03.700 --> 00:32:04.960
from site to site. So
it's, it is a wide

651
00:32:04.960 --> 00:32:08.290
slow, but from a web
developer's perspective about what did

652
00:32:08.290 --> 00:32:11.410
you remember your microformats? Did
you remember your meadow? It's

653
00:32:11.410 --> 00:32:13.540
a, it's more of a
checklist as it is a,

654
00:32:13.770 --> 00:32:16.780
a performance tool. Very cool.
I actually did not know

655
00:32:16.780 --> 00:32:19.990
that we made, we made
it. So if you visit

656
00:32:19.990 --> 00:32:26.170
web developer checklist IC in
Chrome, it'll advertise. Gotcha. Cool.

657
00:32:26.200 --> 00:32:29.080
Yeah. I'll check that out.
Well, thanks for talking to

658
00:32:29.080 --> 00:32:30.360
me today, Jim. I appreciate
it. I had it. I

659
00:32:30.360 --> 00:32:32.860
had a good time, Scott.
This has been another episode

660
00:32:32.860 --> 00:32:35.110
of Hanselminutes and we'll see
you again next week.

