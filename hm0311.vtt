WEBVTT FILE

1
00:00:12.150 --> 00:00:16.860
From Hansel minutes.com. It's Hanselman.
It's a weekly discussion with

2
00:00:16.860 --> 00:00:21.450
web developer and technologists. Scott
Hanselman. This is Lawrence Ryan announcing

3
00:00:21.450 --> 00:00:27.660
show number three 12 recorded
live Thursday, April 5th, 2012. Support for

4
00:00:27.660 --> 00:00:30.810
Hansel minutes is provided by
Tellerik offering the best and

5
00:00:30.810 --> 00:00:39.450
developer tools and support online@wwwdottelerik.com.
In this episode, Scott talks

6
00:00:39.450 --> 00:00:43.320
with Phil hack about his
opinions on the asp.net MVC

7
00:00:43.320 --> 00:00:49.260
open source announcement. Hi, this
is Scott Hanselman. This is

8
00:00:49.260 --> 00:00:52.380
another episode of Hansel minutes
and we've got Phil hack,

9
00:00:52.470 --> 00:00:56.970
a former Microsoft former PM
for asp.net MVC. Now a

10
00:00:57.000 --> 00:00:59.130
guy who works at get
hub. Hey Phil, how's it

11
00:00:59.130 --> 00:01:02.160
going? How are you doing
I'm very well. Very well.

12
00:01:03.090 --> 00:01:06.270
So go get hub open
source. You're you're continuing the

13
00:01:06.270 --> 00:01:10.080
tradition, the proud hack family
tradition of open source software.

14
00:01:12.000 --> 00:01:16.040
That is correct. Were you
a, were you pretty happy

15
00:01:16.040 --> 00:01:18.560
when we finally got that
open source stuff done? And

16
00:01:18.560 --> 00:01:21.920
we released a MVC web
API and razor as a,

17
00:01:21.920 --> 00:01:26.900
as real open source with
contributions last week. So it

18
00:01:26.930 --> 00:01:29.780
was already, most of it
was already real open source,

19
00:01:30.350 --> 00:01:33.740
but yes, I was happy
that it finally came out

20
00:01:33.740 --> 00:01:37.100
as open and collaborative. In
the words of a Miguel

21
00:01:37.100 --> 00:01:39.800
de Caza, meaning that you
guys are, that Microsoft is

22
00:01:39.800 --> 00:01:42.920
accepting take backs. As you
know, that's something that we've

23
00:01:42.920 --> 00:01:45.320
been working on for a
very long time. And a

24
00:01:45.320 --> 00:01:47.930
lot of the infrastructure was
already ready before I left,

25
00:01:47.930 --> 00:01:50.930
but, you know, there were
some last little pieces that

26
00:01:50.930 --> 00:01:52.910
were in place, so I've
had to keep my mouth

27
00:01:52.910 --> 00:01:55.880
shut for the last several
months. And it's been very,

28
00:01:55.880 --> 00:02:00.110
very hard. You were, you
were kind to correct me

29
00:02:00.110 --> 00:02:01.760
there, but does that bug
you when people say that?

30
00:02:01.760 --> 00:02:04.880
I mean, NBC came out,
was it like four years

31
00:02:04.880 --> 00:02:08.540
ago as, as open source,
but I use the term

32
00:02:08.540 --> 00:02:11.180
just now real open source
because sometimes I juxtapose source

33
00:02:11.180 --> 00:02:13.160
opened and open source. I
mean, it was in Fe

34
00:02:13.160 --> 00:02:15.980
it wasn't reference source. It
was really MSPL open source,

35
00:02:16.700 --> 00:02:19.040
but it wasn't like a
lot of people were forking

36
00:02:19.040 --> 00:02:23.450
it and building their own
versions where they No, but

37
00:02:23.450 --> 00:02:25.340
they had the right to,
and I think that's the

38
00:02:25.340 --> 00:02:28.550
important thing I, I wrote.
I mean, I put most

39
00:02:28.550 --> 00:02:30.500
of my thoughts on this
in a blog post or

40
00:02:30.500 --> 00:02:35.000
two blog posts actually. And
the thing is that if

41
00:02:35.000 --> 00:02:37.430
you look at all the
languages, the original open source

42
00:02:37.460 --> 00:02:43.460
pioneers register men and the
cathedral guy, I'm blanking on

43
00:02:43.460 --> 00:02:48.590
his name era. Well, anyways,
if you look at all

44
00:02:48.590 --> 00:02:52.520
their writings, so even guys
like Miguel, who's very well

45
00:02:52.520 --> 00:02:55.880
regarding the open source community.
All the wording they use

46
00:02:55.880 --> 00:02:58.910
is talking about freedom and
it's about the freedom to

47
00:02:59.020 --> 00:03:00.910
use the software in a
way you see fit and

48
00:03:00.910 --> 00:03:05.020
the freedom to change the
software for your needs. And

49
00:03:05.020 --> 00:03:06.850
I think this is something
that I've seen a lot

50
00:03:06.850 --> 00:03:11.170
more in like other open
source communities, non.net communities, where

51
00:03:11.170 --> 00:03:15.430
a lot of people have
shallow forks of projects that

52
00:03:15.430 --> 00:03:18.610
they use. And by shallow
forks, I mean, where they'll

53
00:03:18.610 --> 00:03:20.620
take a project and they'll
just tweak a little bit.

54
00:03:21.250 --> 00:03:23.710
And I think part of
the reason I'm being exposed

55
00:03:23.710 --> 00:03:26.680
to this more is that
GitHub, you know, I'm on,

56
00:03:26.860 --> 00:03:29.920
I'm looking at the work
I'm doing as well as

57
00:03:29.920 --> 00:03:32.350
the work other people do,
and we make heavy use

58
00:03:32.350 --> 00:03:36.760
of sub-modules. And if you're
not familiar with get sub-modules

59
00:03:36.760 --> 00:03:39.670
is a way that you
can have your get repository

60
00:03:40.150 --> 00:03:44.260
reference, some external repository. And
what we'll do is for

61
00:03:44.260 --> 00:03:47.980
example, if we're using a
library like lip get too

62
00:03:48.100 --> 00:03:52.180
sharp, but we have our,
we have our own modifications.

63
00:03:52.180 --> 00:03:56.380
We want to keep in
our project, we'll create, we'll

64
00:03:56.380 --> 00:03:58.810
create a fork of live,
get to make a few

65
00:03:58.810 --> 00:04:02.230
tweaks and then have a
sub module pointing to our

66
00:04:02.230 --> 00:04:06.760
fork. So that when I
get my project, I have

67
00:04:06.760 --> 00:04:10.360
this, I get my version
of lifted too. So we

68
00:04:10.360 --> 00:04:12.970
actually ended up making a
lot of these shallow fork.

69
00:04:13.420 --> 00:04:16.360
And it turns out that
many of these cases with

70
00:04:16.360 --> 00:04:19.540
shallow force, you actually don't
really, you know, we would

71
00:04:19.540 --> 00:04:23.260
love our changes to make
it back into the main

72
00:04:23.260 --> 00:04:25.990
one, but we sorta don't
care because some of the

73
00:04:25.990 --> 00:04:29.200
changes are very specific to
our needs and probably won't

74
00:04:29.290 --> 00:04:32.310
ever make it back. But
using a, you know, a

75
00:04:32.320 --> 00:04:34.750
distributed version control, like get,
it makes it really easy

76
00:04:34.750 --> 00:04:37.840
for us to just pull
the upstream or like the

77
00:04:37.840 --> 00:04:41.710
original changes into our fork
and into our, the code

78
00:04:41.710 --> 00:04:44.620
that we're working on. And
the thing is, is that

79
00:04:44.980 --> 00:04:49.960
you could have a project
that's completely takes, has takebacks,

80
00:04:50.800 --> 00:04:54.610
but doesn't have the, an
opensource license. And now you're

81
00:04:54.610 --> 00:04:57.190
really playing with fire because
you know, they, at any

82
00:04:57.190 --> 00:04:59.860
time and, and several people
have written me to say

83
00:04:59.860 --> 00:05:01.990
that this has happened to
them. They've seen this happen

84
00:05:01.990 --> 00:05:05.830
where, you know, the company
was basically doing with the

85
00:05:05.830 --> 00:05:09.460
equivalent of crowdsourcing and then
they closed off and said,

86
00:05:09.460 --> 00:05:12.400
okay, well this is all
our IP. And you can

87
00:05:12.400 --> 00:05:16.540
no longer make variations of
this, but you can continue

88
00:05:16.540 --> 00:05:19.240
to contribute to our work.
And that's sort of like

89
00:05:19.300 --> 00:05:22.120
the worst of all cases,
right? Cause you've just been

90
00:05:22.120 --> 00:05:26.410
suckered. So while, you know,
and the thing is that,

91
00:05:26.410 --> 00:05:28.990
like, when I, while I
say this, it's important to

92
00:05:28.990 --> 00:05:31.510
me that the Def you
know, that we understand why

93
00:05:32.410 --> 00:05:37.960
the license is important and
why it's why I harp

94
00:05:37.960 --> 00:05:39.670
on this. But at the
same time, it doesn't mean

95
00:05:39.670 --> 00:05:44.290
that I don't prefer vastly
prefer take backs in an

96
00:05:44.350 --> 00:05:48.400
open and collaborative development. In
fact, I mean, that's what

97
00:05:48.400 --> 00:05:51.520
I was pushing for very
early on. And I even,

98
00:05:52.270 --> 00:05:55.990
when we first released MVC
under the MSPL, I had

99
00:05:55.990 --> 00:05:58.100
a little blurb in there,
look, you know, we're taking

100
00:05:58.100 --> 00:06:01.610
baby steps and, you know,
maybe if we fast forward

101
00:06:01.610 --> 00:06:06.440
a few years, we'll be
taking contributions. And so, you

102
00:06:06.440 --> 00:06:08.150
know, I didn't write that
because I could predict the

103
00:06:08.150 --> 00:06:09.890
future. I wrote that because
that was a feature I

104
00:06:09.890 --> 00:06:13.840
was trying to create. When
you say the word shallow

105
00:06:13.840 --> 00:06:16.420
fork, how is that different
from the term private build?

106
00:06:16.420 --> 00:06:18.850
Are those the same things?
Cause I mean, I, before

107
00:06:18.850 --> 00:06:22.240
distributed version control systems, I
had private builds of log

108
00:06:22.240 --> 00:06:25.780
for net back when there
were bugs and no one

109
00:06:25.780 --> 00:06:27.310
was listening and I would,
I would fix them. And

110
00:06:27.310 --> 00:06:29.140
then we would just kind
of ship our own private

111
00:06:29.140 --> 00:06:34.510
build juxtapose that More or
less, yeah. More or less

112
00:06:34.510 --> 00:06:37.720
the same thing. It's, it's
not like your, I think

113
00:06:37.720 --> 00:06:40.570
that distinction is when people
hear that. Traditionally, when you

114
00:06:40.570 --> 00:06:42.610
hear the term fork, you
think, Oh, these guys are

115
00:06:42.640 --> 00:06:45.160
breaking off of the main
project and trying to create

116
00:06:45.160 --> 00:06:49.090
their own big project. But
with the advent of distributed

117
00:06:49.090 --> 00:06:53.020
version control forks from turn,
from sort of this like

118
00:06:54.130 --> 00:06:57.160
negative term to a very
positive term. Oh, what that

119
00:06:57.160 --> 00:06:59.920
means is that you're just,
you know, maintaining some tweaks

120
00:06:59.920 --> 00:07:02.350
for yourself and you know,
you're fine to share it

121
00:07:02.350 --> 00:07:04.660
with the world, but you're
not making a statement that

122
00:07:04.960 --> 00:07:08.740
I'm breaking from the main
project. Right. You're still kind

123
00:07:08.740 --> 00:07:11.590
of tied to the main
project and I think that's

124
00:07:11.590 --> 00:07:14.620
the connotation. So then what's
the opposite of that. It's

125
00:07:14.620 --> 00:07:17.080
like an aggressive fork is
the like, screw you, we're

126
00:07:17.080 --> 00:07:19.960
taking this code and we're
going our own direction. Yeah,

127
00:07:19.960 --> 00:07:21.460
I guess so. I mean,
I've, I don't know if

128
00:07:21.460 --> 00:07:24.640
there's, I haven't heard that
term, but that sounds about

129
00:07:24.640 --> 00:07:30.670
right. We'll make that a
term now. Aggressive forking. Yeah.

130
00:07:30.700 --> 00:07:36.220
Yeah. Do you, a number
of people were saying that

131
00:07:36.640 --> 00:07:40.840
they didn't, they didn't like
that asp.net web forms was,

132
00:07:41.650 --> 00:07:43.570
was not open sourced. And
then we didn't go like

133
00:07:43.570 --> 00:07:45.970
deeper into the end of
the GAC into the global

134
00:07:45.970 --> 00:07:48.730
assembly cache. And I, I
wrote up why we didn't

135
00:07:48.730 --> 00:07:50.470
do that, but I was
curious what you thought about

136
00:07:50.470 --> 00:07:54.490
that. You know, honestly, I
think it's inevitable that that

137
00:07:54.490 --> 00:07:58.390
should happen and, and maybe
will happen, but it's a

138
00:07:58.390 --> 00:08:05.140
much more torturous and difficult
battle. I had a recent

139
00:08:05.140 --> 00:08:08.350
talk. I talked about, I
gave a brief blurb about

140
00:08:08.350 --> 00:08:12.550
the two Microsoft and so
anywhere where those two worlds

141
00:08:12.550 --> 00:08:16.180
collide becomes very difficult to
make it open. So as

142
00:08:16.180 --> 00:08:19.090
you probably, I didn't actually,
I apologize. I didn't actually

143
00:08:19.090 --> 00:08:22.420
read your blog post about
why web form is an

144
00:08:22.420 --> 00:08:25.030
open source, but my guess
is you wrote that well,

145
00:08:25.210 --> 00:08:28.510
it's part of windows. And
once it's part of windows,

146
00:08:28.840 --> 00:08:32.290
it's under Sanofi's org and
that makes it very difficult

147
00:08:32.890 --> 00:08:36.310
to cause you need his
bio to make that open

148
00:08:36.310 --> 00:08:39.730
source. So it's not something
that's just completely within the

149
00:08:39.730 --> 00:08:43.330
power of Guthrie to say,
wave his magic wand and

150
00:08:43.330 --> 00:08:47.230
say, it's now open source,
you know, But it wasn't

151
00:08:47.230 --> 00:08:49.990
actually that wasn't actually why
it was more convoluted. The

152
00:08:49.990 --> 00:08:52.000
logistics of the fact that
it's in the GAC. And

153
00:08:52.000 --> 00:08:53.320
if you go and ship
it, then you've got to

154
00:08:53.320 --> 00:08:55.980
figure out how to ship
a private of something that

155
00:08:55.980 --> 00:09:00.420
ships with windows. It was
more the actual bill. Oh,

156
00:09:00.890 --> 00:09:03.260
so you, you went, you
went technical and I'm here

157
00:09:03.260 --> 00:09:08.090
talking political because I'm outside.
No, I mean, there's a

158
00:09:08.090 --> 00:09:09.980
couple of different things that
you've touched on first that

159
00:09:10.400 --> 00:09:13.430
it was just literally logistically
shipping stuff that was in

160
00:09:13.430 --> 00:09:15.800
the CAC was complicated. And
you know, you know how

161
00:09:15.800 --> 00:09:19.340
that works. It's, it's a
mess. As far as the

162
00:09:19.340 --> 00:09:22.850
political stuff, I'm surprised. I
mean, like Around to that,

163
00:09:22.850 --> 00:09:25.910
it's just that they're costly
or they'll take longer, you

164
00:09:25.910 --> 00:09:28.580
could ship a shin of
system web in the gap,

165
00:09:28.970 --> 00:09:32.990
but then can dynamically load
the open source version that's

166
00:09:33.320 --> 00:09:35.990
outside the gap that, that
shift is an open source

167
00:09:35.990 --> 00:09:40.340
product, right? Like, and that's
actually, you know, before I

168
00:09:40.340 --> 00:09:43.370
left, that's the kind of
thing we often talked about,

169
00:09:43.370 --> 00:09:47.120
you know, we've gone, I
remember Scott Hunter or your boss

170
00:09:47.120 --> 00:09:49.220
and my former boss. He
and I used to joke

171
00:09:49.220 --> 00:09:54.320
about wanting to build ASP
to.net and basically rewrite the

172
00:09:54.320 --> 00:09:57.740
whole thing. And we actually,
not me, me and him,

173
00:09:57.740 --> 00:10:00.110
but like the team actually
went through iterations where we

174
00:10:00.110 --> 00:10:02.510
kind of looked at well,
could we make what we

175
00:10:02.510 --> 00:10:06.680
have today, a little more
componentized or whatever. Right. And

176
00:10:06.680 --> 00:10:09.740
so it sends out to
be a pretty big task.

177
00:10:09.920 --> 00:10:12.530
So, so yeah, I mean,
it just, I think it's

178
00:10:12.530 --> 00:10:15.980
possible, but not in the
timeline that we were, you

179
00:10:15.980 --> 00:10:17.960
know, not in the same
timeline that it would take

180
00:10:17.960 --> 00:10:21.890
to make NBC, which was
already out of van, meaning

181
00:10:21.890 --> 00:10:24.560
that it was shipped as
a separate bin deployable assembly.

182
00:10:25.070 --> 00:10:26.840
But I mean, I think
in the long run, it's

183
00:10:26.840 --> 00:10:30.710
possible to make most of
it open source. And, you

184
00:10:30.710 --> 00:10:34.070
know, I would encourage Microsoft
look at that. But at

185
00:10:34.070 --> 00:10:35.360
the same time, you know,
you have to look at

186
00:10:35.660 --> 00:10:39.680
cost benefits and audience, right?
Like, are there really that

187
00:10:39.680 --> 00:10:43.640
many web form developers who
are going to get involved

188
00:10:43.640 --> 00:10:47.660
with the contribution? I think
correct me if I'm wrong

189
00:10:47.660 --> 00:10:52.670
was routing also kept in
not releases open source because

190
00:10:52.670 --> 00:10:56.450
that would be the one
component that I would imagine

191
00:10:56.450 --> 00:10:59.750
would be possible to extricate
it from the corporate input

192
00:10:59.780 --> 00:11:03.650
and make that open source.
The was because routing was

193
00:11:03.650 --> 00:11:06.590
originally system dot web dot
NBC dot routing, and then

194
00:11:06.980 --> 00:11:11.420
moved, moved upstream and became
system dot web dot routing.

195
00:11:11.420 --> 00:11:14.630
And now has been baked
into.net since three, five SP

196
00:11:14.630 --> 00:11:18.410
one. Yeah. That's great. Well,
so three, five SP one,

197
00:11:18.410 --> 00:11:21.080
it was actually still a
separate DLL, but it was

198
00:11:21.320 --> 00:11:23.720
shipped as part of the
framework and separately. So we

199
00:11:23.720 --> 00:11:26.300
did some crazy stuff there,
but in, they feed on

200
00:11:26.300 --> 00:11:29.120
it for, we actually type
forwarded all the time back

201
00:11:29.120 --> 00:11:32.360
into the system, that web.
Okay. So it's in system

202
00:11:32.360 --> 00:11:34.520
dot web now, not in
its own deal Since it's

203
00:11:34.520 --> 00:11:37.310
in that web. So basically
the Gates of no escape.

204
00:11:38.510 --> 00:11:40.580
Now I'm surprised that you
said that you thought that,

205
00:11:41.690 --> 00:11:43.760
I think I'm trying to
say there's a little bit

206
00:11:43.760 --> 00:11:46.760
of an artificial distinction there,
you juxtaposed windows and Scott's

207
00:11:46.760 --> 00:11:50.300
org, but as if that
they're somehow against each other,

208
00:11:50.720 --> 00:11:54.910
but so now skis, org
while different is very open.

209
00:11:54.910 --> 00:11:56.650
I mean, if you look
at their blogs and stuff

210
00:11:56.650 --> 00:11:58.390
and it's not like, Oh,
boon to open, but I

211
00:11:58.390 --> 00:12:01.900
mean the, when the building
windows eight blog, they're pretty

212
00:12:01.900 --> 00:12:03.790
much like here are the
metrics. Here are the charts

213
00:12:03.790 --> 00:12:05.890
here are why we make
these decisions. I mean, they're

214
00:12:05.890 --> 00:12:11.200
not giving us daily builds
us the public, but it's

215
00:12:11.230 --> 00:12:14.740
more open than windows seven
was, I'm surprised that you

216
00:12:14.740 --> 00:12:20.310
said that When they're ready
to talk about their development,

217
00:12:20.310 --> 00:12:22.590
they're very, yeah, they are
open. Right. But I mean,

218
00:12:22.620 --> 00:12:25.140
prior to that, it was
a close book, but I'm

219
00:12:25.140 --> 00:12:28.920
more talking about open source,
meaning that there's a healthy

220
00:12:28.920 --> 00:12:32.970
fear over there of open
source or, or unhealthy, I

221
00:12:32.970 --> 00:12:36.240
should say, just to give
you one example, right. I

222
00:12:36.240 --> 00:12:41.370
mean, there, there were people
who really wanted to just

223
00:12:41.370 --> 00:12:44.700
adapt, adopt jQuery for when
our key. Right. You know,

224
00:12:44.700 --> 00:12:47.310
and, and maybe build when
our T is a jQuery

225
00:12:47.340 --> 00:12:51.450
plugin or some, some way
of adopting jQuery, cause jQuery

226
00:12:51.450 --> 00:12:54.810
is already written and it's
the most popular JavaScript library

227
00:12:54.810 --> 00:13:00.030
out there instead they've wrote
their own clown of jQuery.

228
00:13:00.690 --> 00:13:03.690
That's specific to when our
key. So I mean, different

229
00:13:04.230 --> 00:13:06.630
pled at the same time,
you know, you kind of

230
00:13:06.630 --> 00:13:10.560
want to like, why, why
not just adopt the, without

231
00:13:10.560 --> 00:13:13.440
that? Right. I mean, the
good news is that, from

232
00:13:13.440 --> 00:13:15.600
what I understand, you can
run J crew and when

233
00:13:15.600 --> 00:13:18.900
our T so those who
really want to run it

234
00:13:19.350 --> 00:13:22.800
will. But I mean, it's
just a different philosophy, right?

235
00:13:22.830 --> 00:13:26.550
So like, whereas let's look
at NBC where we just

236
00:13:26.550 --> 00:13:31.470
included jQuery in the project
template more recently, the NBC

237
00:13:31.470 --> 00:13:35.280
team decided to end the
web API team decided to

238
00:13:35.370 --> 00:13:42.900
adopt jason.net as their Jason
serialization engine and over their

239
00:13:42.900 --> 00:13:48.120
own because their own was
insufficient. But, but like when

240
00:13:48.120 --> 00:13:50.760
you went and picked jQuery,
did people complain and say,

241
00:13:50.760 --> 00:13:53.040
why didn't you pick MooTools
or why didn't you pick

242
00:13:53.070 --> 00:13:56.550
mochi kid? Or why didn't
you pick XYZ? JavaScript library,

243
00:13:56.760 --> 00:14:00.750
like jQuery had like 92%
of the market at that

244
00:14:00.750 --> 00:14:04.470
point. And, but people, people
will probably say, well, that's

245
00:14:04.470 --> 00:14:08.880
not fair. You didn't pick
my library. You know, I

246
00:14:08.880 --> 00:14:12.810
didn't, in the case of
jQuery, I think two things

247
00:14:12.810 --> 00:14:18.030
happened. One J was overwhelmingly
the most popular. So the,

248
00:14:18.030 --> 00:14:20.880
the decision to choose it
was obvious. And too, I

249
00:14:20.880 --> 00:14:23.430
think people were shocked that
we're shipping third party opensource

250
00:14:23.430 --> 00:14:26.190
within a Microsoft product in
the first place. So it

251
00:14:26.190 --> 00:14:28.350
took them time to recover
from that shock to come

252
00:14:28.350 --> 00:14:31.140
around and ask those questions.
So I actually didn't hear

253
00:14:31.140 --> 00:14:34.170
a lot of that with
jQuery. What do you do

254
00:14:34.170 --> 00:14:37.050
when there's one project already,
when there's, when there's one

255
00:14:37.050 --> 00:14:39.510
project that is like the
winner, like they're the most

256
00:14:39.510 --> 00:14:43.740
popular, but they're not necessarily
the best. Well, so that's

257
00:14:43.740 --> 00:14:46.860
an interesting question because how
do you define best, right?

258
00:14:47.880 --> 00:14:50.970
I mean, yeah, like I
read this interesting article a

259
00:14:51.140 --> 00:14:53.720
time ago about VHS and
beta, right? And they're saying,

260
00:14:53.750 --> 00:14:57.140
Oh, well, beta was beta
max, and they're saying, beta

261
00:14:57.140 --> 00:15:00.320
max is better. But then
another person took a different

262
00:15:00.320 --> 00:15:02.420
tact on the question. You
said, well, let's look at

263
00:15:02.420 --> 00:15:06.140
the total product, right? We're
not going to just say

264
00:15:06.710 --> 00:15:10.250
video. You could zero in
on video quality and clearly

265
00:15:10.250 --> 00:15:12.590
one the winner. But if
you look at the total

266
00:15:12.590 --> 00:15:17.690
product, supposedly it took two
beta max tapes to fit

267
00:15:17.690 --> 00:15:20.600
one movie where they would
take one VHS to record

268
00:15:20.600 --> 00:15:22.820
the same movie. So if
you were to record something

269
00:15:23.120 --> 00:15:25.520
and then leave, you know,
go out and record a

270
00:15:25.520 --> 00:15:28.490
movie, you would get the
whole movie. Whereas it, you

271
00:15:28.490 --> 00:15:31.730
couldn't leave it if you're
doing beta max. So I

272
00:15:31.730 --> 00:15:34.220
haven't verified these claims, you
know, myself, but this, it

273
00:15:34.220 --> 00:15:38.930
was a, a well-regarded article.
And so they're talking about,

274
00:15:38.930 --> 00:15:43.730
well, when you look at
the total product, sometimes technical

275
00:15:43.730 --> 00:15:49.730
superiority in one specific area,
doesn't overweigh, you know, the,

276
00:15:50.350 --> 00:15:54.410
the benefits and all the
other areas. Right? So, so

277
00:15:54.650 --> 00:15:57.800
it's a lot of times
like when people will say,

278
00:15:57.830 --> 00:15:59.990
Oh, well, this product is
clearly better than that other

279
00:15:59.990 --> 00:16:03.590
one, because the faster, well,
that's not the only thing.

280
00:16:03.590 --> 00:16:08.870
Is it, you know, is
it usable? How the API,

281
00:16:08.900 --> 00:16:13.910
you know, how's the documentation,
how's the support team. All

282
00:16:13.910 --> 00:16:18.460
these other factors go into
choosing a product. Is it,

283
00:16:18.460 --> 00:16:19.690
what do you guys do
at get help when you

284
00:16:19.690 --> 00:16:21.400
decide if you're going to
use an open source library?

285
00:16:21.400 --> 00:16:23.230
Have you, have you been
there now? What, a couple

286
00:16:23.230 --> 00:16:26.890
of months, three months. And
have you been involved in

287
00:16:26.890 --> 00:16:28.990
any decisions where you guys
sucked in and a library

288
00:16:28.990 --> 00:16:31.320
to use on the core
site? It happens to the

289
00:16:31.320 --> 00:16:34.660
second nature, really? That, well,
He was like pick stuff,

290
00:16:34.660 --> 00:16:36.130
Willy nilly. I mean, I'm
sure that there must be

291
00:16:36.130 --> 00:16:39.010
some amount of you. You
can't just pick something, you're

292
00:16:39.010 --> 00:16:41.980
a big site. If you
picked an AGPL library, that

293
00:16:41.980 --> 00:16:45.220
would be bad. Right? Oh,
so, Oh, so you're talking

294
00:16:45.220 --> 00:16:47.650
about GitHub. So I haven't
been involved in any discussions

295
00:16:47.650 --> 00:16:51.220
of like pulling in libraries
on get hub.com. Right. And

296
00:16:52.330 --> 00:16:54.520
probably most of the libraries
that have been, have been

297
00:16:54.520 --> 00:16:58.420
chosen already, the products I've
worked on. I mean, we've

298
00:16:58.420 --> 00:17:02.440
had cases where we've pulled
in libraries, but we sorta

299
00:17:02.440 --> 00:17:06.970
just, I dunno, Casual, like,
yeah, man, it kind of

300
00:17:06.970 --> 00:17:11.110
looks cool. Let's, let's compile
seafood. We were using just

301
00:17:11.110 --> 00:17:14.470
one example. We were using
some rest library and then

302
00:17:14.470 --> 00:17:17.920
we switched to rest sharp
recently because you know, we

303
00:17:17.920 --> 00:17:20.290
know John Sheehan and we've
heard good things about it.

304
00:17:20.290 --> 00:17:24.190
Right. And so we're trying
it out and it seems

305
00:17:24.190 --> 00:17:26.200
to be working for us
and it solves some problems.

306
00:17:26.200 --> 00:17:30.250
So we were going with
it for the time being,

307
00:17:30.940 --> 00:17:33.370
we didn't spend a huge
amount. I think like the

308
00:17:33.370 --> 00:17:35.470
thing is we could have
spent huge amounts of time,

309
00:17:35.500 --> 00:17:38.890
you know, doing all kinds
of evaluations and get stuck

310
00:17:38.890 --> 00:17:41.800
in this analysis paralysis. But
you know, we want to

311
00:17:41.800 --> 00:17:45.310
ship a product. So we're
looking at like, you know,

312
00:17:45.340 --> 00:17:47.440
based on what we've heard
and, you know, based on

313
00:17:47.440 --> 00:17:50.250
past experiences, this sound like
this library is going to

314
00:17:50.250 --> 00:17:54.450
meet our needs. Yeah. We've
people we trust safe, halfway

315
00:17:54.450 --> 00:17:57.570
decent. Other people have told
us there's better ones out

316
00:17:57.570 --> 00:17:59.400
there. So, you know, we
might look at those later,

317
00:17:59.400 --> 00:18:01.920
but right now it's, it's
met the needs that we

318
00:18:01.920 --> 00:18:05.760
have. And you know, our
entire product is not going

319
00:18:05.850 --> 00:18:09.780
to fail or succeed based
on, you know, what rest

320
00:18:09.780 --> 00:18:14.580
sharp library, sorry, rest library.
We chose. And by rest

321
00:18:14.580 --> 00:18:17.940
library, I mean, for an
HIV client making rest calls,

322
00:18:17.940 --> 00:18:21.440
not on the service side.
What if, what about like

323
00:18:21.470 --> 00:18:24.380
things that Microsoft does, like
patent scrubs and making sure

324
00:18:24.380 --> 00:18:28.460
that people didn't copy paste
a patented code directly into

325
00:18:28.640 --> 00:18:30.900
rest sharp as an example,
like does get up to

326
00:18:30.920 --> 00:18:32.570
that kind of stuff or
do you just like deal

327
00:18:32.570 --> 00:18:38.140
with it when you get
sued? Yeah. So I saw,

328
00:18:39.440 --> 00:18:40.850
It's an honest question. I
mean, I know how, how

329
00:18:40.850 --> 00:18:44.600
big are you guys now?
How many people? 60. Okay.

330
00:18:44.720 --> 00:18:46.190
Okay. So you're 60. So
when I was working at

331
00:18:46.190 --> 00:18:49.550
Karelian in banking, before I
was working at Microsoft, we

332
00:18:49.550 --> 00:18:53.150
were 300, 400 people, you
know, and we would pick

333
00:18:53.150 --> 00:18:54.920
a library, we'd try to
get it working. We'd kind

334
00:18:54.920 --> 00:18:56.840
of do the spike and
we go to the CTO

335
00:18:56.840 --> 00:18:58.910
and then we'd say one
into this library. Then he

336
00:18:58.910 --> 00:19:01.010
would talk to the lawyers.
If it was a new

337
00:19:01.010 --> 00:19:03.650
license we hadn't seen before.
And we had like preferred

338
00:19:03.650 --> 00:19:06.260
licenses, we would use like,
if it's a patchy or

339
00:19:06.260 --> 00:19:08.540
BSD or MIT, those are
good licenses that we wanted

340
00:19:08.540 --> 00:19:11.870
to use. And then they
would, if we were going

341
00:19:11.870 --> 00:19:13.580
to actually ship it, we
would go on, you know,

342
00:19:13.580 --> 00:19:15.560
like get a company to
go and look at the

343
00:19:15.560 --> 00:19:18.230
code and tell us if
it was tainted or whatever

344
00:19:19.730 --> 00:19:21.740
know. Is that the difference
between a 60 person company

345
00:19:21.740 --> 00:19:24.620
doing open source versus a
400 person company? Or is

346
00:19:24.620 --> 00:19:27.680
that a difference versus an
open source company? Like get

347
00:19:27.680 --> 00:19:31.280
hub and a banking company
like Kirlian was, Yeah, I

348
00:19:31.280 --> 00:19:34.280
think it's more the latter.
And so here's the thing.

349
00:19:34.310 --> 00:19:37.670
I can't speak to github.com
again, because I haven't been

350
00:19:37.670 --> 00:19:40.220
involved in Just talking about
like the app you're working

351
00:19:40.220 --> 00:19:45.410
on. Let me, here's the
thing, here's the big thing

352
00:19:45.410 --> 00:19:50.510
I learned at Microsoft about
copyright and patent and licensing.

353
00:19:51.020 --> 00:19:55.220
It's all about managing risk,
right? It's all about what

354
00:19:55.220 --> 00:19:57.530
is the benefit and what
is the risk? It's not,

355
00:19:57.860 --> 00:20:01.460
you know, yes. And no
black and white decisions and

356
00:20:01.520 --> 00:20:03.920
none of them are right.
So what you have to

357
00:20:03.920 --> 00:20:07.160
look at is, okay, what's
the risk that this is

358
00:20:07.160 --> 00:20:11.630
going to have, you know,
some like third, you know,

359
00:20:11.840 --> 00:20:15.410
some bad code in it,
some bad IP. Right. And

360
00:20:15.860 --> 00:20:18.350
what is the cost to
us? If someone, you know,

361
00:20:18.500 --> 00:20:21.590
if it does have that
and someone calls it out,

362
00:20:21.710 --> 00:20:25.070
how, how easily is it
to replace it? Right. So,

363
00:20:25.070 --> 00:20:26.900
you know, back in Microsoft,
you look at something that's

364
00:20:26.900 --> 00:20:30.200
going to go into windows.
Well, that's a hue. If

365
00:20:30.200 --> 00:20:32.990
there's an injunction against windows,
that's a huge effect on

366
00:20:32.990 --> 00:20:37.010
Microsoft's business. Right. So they
go through, so that starts

367
00:20:37.010 --> 00:20:41.150
to justify some of the
paranoia about opensource and explain

368
00:20:41.180 --> 00:20:45.860
the, you know, very diligent
IP scrubs, and patent scrubs

369
00:20:45.860 --> 00:20:48.970
that Microsoft goes through. When
you look at something like

370
00:20:49.000 --> 00:20:53.710
the, a website or like,
like the JavaScript code for

371
00:20:53.710 --> 00:20:56.230
a website. Okay. Well, you
know, maybe you have to

372
00:20:56.230 --> 00:20:57.880
turn off a feature for
a little bit and you

373
00:20:57.880 --> 00:21:02.580
replaced the library that use
or shipping NBC. Okay. Well

374
00:21:02.600 --> 00:21:05.950
sucks. But you know, yeah.
We might have to reship

375
00:21:05.980 --> 00:21:12.280
MTC and you realize that
the cost of something, the

376
00:21:12.280 --> 00:21:16.870
risk goes down quite a
bit. So in many respects,

377
00:21:16.870 --> 00:21:19.900
you're just looking at the
risk, like, okay, well this

378
00:21:19.900 --> 00:21:24.640
library, you know, John sheen
says he's vetted most of

379
00:21:24.640 --> 00:21:26.890
the code and what's the
odds that anyone's going to

380
00:21:27.280 --> 00:21:30.100
Sue us for using rest
sharp or whatever. It's probably

381
00:21:30.100 --> 00:21:33.940
very small. I mean, very,
very small. In fact, I've,

382
00:21:33.970 --> 00:21:37.360
you know, like you rarely
hear cases like that where,

383
00:21:39.160 --> 00:21:42.280
you know, we're, it's very
rare for that to happen.

384
00:21:42.280 --> 00:21:44.820
I think with these small
source projects, Well, no one

385
00:21:44.820 --> 00:21:46.830
notices them though, right? I
mean, I'm just using this

386
00:21:46.830 --> 00:21:50.280
as an example. It is
too small, but Microsoft wears

387
00:21:50.280 --> 00:21:52.710
a giant target on its
back. So I could see

388
00:21:52.710 --> 00:21:57.480
at Microsoft being a lot
more careful, a banking institution

389
00:21:57.480 --> 00:21:59.880
for example, has a lot
riding on it. So I

390
00:21:59.880 --> 00:22:02.310
could see them being quite
a bit more careful. Yeah.

391
00:22:02.340 --> 00:22:05.250
I was involved maybe 10
or 15 years ago in

392
00:22:05.250 --> 00:22:07.920
a, in a case I
was a witness, not a,

393
00:22:08.640 --> 00:22:11.310
I was an expert witness.
I wasn't a involved on

394
00:22:11.310 --> 00:22:14.430
either side of the case,
but basically a company had

395
00:22:14.430 --> 00:22:17.790
copy pasted, some code literally
directly out of a guy's

396
00:22:17.790 --> 00:22:21.660
PhD thesis, like into their
source and then shipped it

397
00:22:21.660 --> 00:22:25.920
as a commercial product. And
you would think that that

398
00:22:26.160 --> 00:22:28.950
would not get noticed, you
know what I mean? But

399
00:22:28.950 --> 00:22:32.160
it just kind of got
noticed somebody, somebody scanned and

400
00:22:32.160 --> 00:22:33.600
found it and then it
was like, Oh, wait a

401
00:22:33.600 --> 00:22:36.990
second. That's my stuff. And
then that, that code had

402
00:22:36.990 --> 00:22:40.320
kind of multiplied because that's
kind of how DLLs that's

403
00:22:40.320 --> 00:22:42.040
what happens. Right. You're like,
Oh, that's a useful tool.

404
00:22:42.040 --> 00:22:44.610
Well, yeah. And then, and
this is the kind of

405
00:22:44.610 --> 00:22:47.880
the chain of intellectual property.
That's a lot like the

406
00:22:47.880 --> 00:22:49.680
chain of privacy that I
talked about. I don't know

407
00:22:49.680 --> 00:22:51.870
if you saw the blog
post where I was talking

408
00:22:51.870 --> 00:22:54.210
to a buddy of mine
and he showed me a

409
00:22:54.210 --> 00:22:59.430
really cool website that lets
you do real time chat

410
00:22:59.460 --> 00:23:01.770
and direct messaging for your
users. So like if you

411
00:23:01.770 --> 00:23:03.750
don't have an inbox to
talk to your users, but

412
00:23:03.750 --> 00:23:06.690
you do have an authentication
system, you drop in this

413
00:23:07.020 --> 00:23:10.230
JavaScript file. And then suddenly
you can see all of

414
00:23:10.230 --> 00:23:12.750
your users online, like in
real time and you can

415
00:23:12.750 --> 00:23:15.150
reach out and chat them.
Like, you know how, when

416
00:23:15.750 --> 00:23:18.600
I got chat, pop up
just shows up and it's

417
00:23:18.630 --> 00:23:20.910
all done with a single
line of JavaScript. It's called

418
00:23:20.910 --> 00:23:25.560
Intercom. Have you seen this?
It's ridiculous. It's amazing. But

419
00:23:26.300 --> 00:23:27.690
my, but my buddy was
like, yeah, you just have

420
00:23:27.690 --> 00:23:30.090
to implement this JavaScript. And
then you add these variables

421
00:23:30.090 --> 00:23:32.520
at the top. And one
of the variables was the

422
00:23:32.520 --> 00:23:36.480
user's email address. And I
was like, well, wait a

423
00:23:36.480 --> 00:23:39.690
second, you just sent their
email address to another domain

424
00:23:40.320 --> 00:23:44.190
off, you know, via this
JavaScript includes. So what seemed

425
00:23:44.190 --> 00:23:46.160
like a really harmless thing
turn into this, this kind

426
00:23:46.160 --> 00:23:49.490
of big deal. So we
emailed the Intercom guys and

427
00:23:49.490 --> 00:23:52.820
they were of course, very
organized and they had privacy

428
00:23:52.820 --> 00:23:55.070
policies and they explained the
chain of privacy and everything

429
00:23:55.070 --> 00:23:58.250
like that. But it was
that realization that wait a

430
00:23:58.250 --> 00:24:01.580
second, we just took a
downstream third party dependency and

431
00:24:01.580 --> 00:24:04.640
then started sending personal information
over that. Not that that's

432
00:24:04.640 --> 00:24:07.280
bad, but that being aware
of it is important. And

433
00:24:07.280 --> 00:24:09.400
I think the same thing,
I think that's, I think

434
00:24:09.400 --> 00:24:12.310
this, I think this is
ridiculous that we're still sending

435
00:24:12.940 --> 00:24:17.540
email addresses back to sites
to identify sites. I think

436
00:24:17.540 --> 00:24:20.380
dare Obasanjo had a really
great blog post where he

437
00:24:20.380 --> 00:24:24.910
talked about a recent incidents
where path was sending all

438
00:24:24.910 --> 00:24:27.850
your contacts, email addresses back
to the past server so

439
00:24:27.850 --> 00:24:30.610
that they could pass, could
identify the people. And you

440
00:24:30.610 --> 00:24:32.350
realize you don't need to
send the email address. You

441
00:24:32.350 --> 00:24:34.720
just need to send something
that can identify the email

442
00:24:34.720 --> 00:24:39.040
address, AKA a hash hash
of the email address. Right.

443
00:24:39.970 --> 00:24:42.910
You know, this is something
that, you know, there says

444
00:24:42.910 --> 00:24:45.040
that they do with live
and it's, it's a well

445
00:24:45.040 --> 00:24:48.460
established practice. You know, these,
a lot of these startups

446
00:24:48.490 --> 00:24:51.130
kind of just like, Oh,
whatever, you know, it's just

447
00:24:51.130 --> 00:24:54.370
people's data and they don't
treat it with the respect

448
00:24:54.370 --> 00:24:58.420
it deserves. And they really
shouldn't be, you know, I'd

449
00:24:58.420 --> 00:25:00.880
be pissed that people were
posting my email address all

450
00:25:00.880 --> 00:25:02.830
over the web. I mean,
well, not me, but let's

451
00:25:02.830 --> 00:25:04.800
say my wife to, I
just want my kid's email.

452
00:25:05.050 --> 00:25:07.990
I think mine is forgone
conclusion that it's out there.

453
00:25:08.410 --> 00:25:10.510
But the point being that
this is the kind of

454
00:25:10.510 --> 00:25:13.900
information that I don't think
should be posted Willy nilly

455
00:25:13.900 --> 00:25:17.080
on sites. You should be
able to send the hatchback,

456
00:25:18.220 --> 00:25:20.830
But wouldn't someone be able
to then go and do

457
00:25:20.830 --> 00:25:22.960
a Kim kind of rainbow
dictionary thing and figure out

458
00:25:22.960 --> 00:25:24.670
what your email is from
your hash. And just walk

459
00:25:24.670 --> 00:25:29.500
back, Not if they're doing
salted hash as properly. Right.

460
00:25:29.530 --> 00:25:32.200
You know, you can do
a cite sense token, you

461
00:25:32.200 --> 00:25:35.020
hash it with the salt
poke and you hash it

462
00:25:35.020 --> 00:25:39.220
with that. And then that
token is, you know, independent

463
00:25:39.220 --> 00:25:42.100
of everyone else. So it
becomes much harder to do

464
00:25:42.100 --> 00:25:46.330
a rainbow hash attack. Do
you think I was thinking

465
00:25:46.330 --> 00:25:49.990
actually about writing a blog
post about this, the idea

466
00:25:49.990 --> 00:25:52.210
that the, the email address
is like the new social

467
00:25:52.210 --> 00:25:55.480
security number. Like some people
care about it, some people

468
00:25:55.480 --> 00:25:57.940
don't, but ultimately it's a
unique identifier that maybe you

469
00:25:57.940 --> 00:26:04.270
don't want published publicly. Yeah.
Yeah. Phone, phone number and

470
00:26:04.270 --> 00:26:06.700
a phone book though. Right?
Cause like you don't need

471
00:26:06.700 --> 00:26:09.250
my social security number to
contact me, but you might

472
00:26:09.250 --> 00:26:11.560
need my email address. So
like it's going to get

473
00:26:11.560 --> 00:26:14.590
out there, but you don't
want everyone in the world

474
00:26:14.590 --> 00:26:17.740
necessarily having your phone number.
But if your email address

475
00:26:17.740 --> 00:26:19.990
is your login, then that's,
you know, that's the tooth

476
00:26:19.990 --> 00:26:21.520
that, it's one of the
two things I need to

477
00:26:21.520 --> 00:26:26.110
log into your, You know,
your bank or whatever. Oh

478
00:26:26.110 --> 00:26:29.050
yeah. Yeah. So it's a
little of both. Yeah. I

479
00:26:29.050 --> 00:26:31.090
mean, it's, it's, it's, it's
an identifier that you don't

480
00:26:31.090 --> 00:26:33.970
wanna, you don't wanna necessarily
give away. So I would

481
00:26:33.970 --> 00:26:37.840
really need to push for
two factor authentication everywhere. Have

482
00:26:37.840 --> 00:26:40.390
you, have you turned on
two factor authentication on Facebook

483
00:26:40.420 --> 00:26:45.680
and on Gmail? Yes. Both
of them. Yeah. So you

484
00:26:45.680 --> 00:26:50.900
use the Gmail authentication application.
Yeah. So here's the funny,

485
00:26:50.960 --> 00:26:54.740
here's the irony, right? Two
factor authentication is about something,

486
00:26:54.740 --> 00:26:56.780
you know, something you have,
right. So you know your

487
00:26:56.780 --> 00:27:00.080
password and you have a,
let's see your phone, which,

488
00:27:00.140 --> 00:27:04.100
you know, Facebook and Gmail
can either text you or

489
00:27:04.100 --> 00:27:06.170
with Gmail. You can also
have an app that has

490
00:27:06.170 --> 00:27:09.590
the ever-changing I number kind
of like, I don't know

491
00:27:09.590 --> 00:27:12.500
if you've ever you've probably,
well, The key fob we

492
00:27:12.500 --> 00:27:15.140
used to have a little
funny looking led that would

493
00:27:15.140 --> 00:27:18.260
just give us a new
number every Yeah, yeah. So

494
00:27:18.260 --> 00:27:20.210
the thing is though, it's
like, if you lose your

495
00:27:20.210 --> 00:27:24.770
phone, chances are that someone
who finds your phone has

496
00:27:24.770 --> 00:27:27.380
both themes now. Right. They
have something, you know, and,

497
00:27:27.950 --> 00:27:31.220
and something, you have to
have your both things. So

498
00:27:31.220 --> 00:27:33.470
it kind of defeats the
purpose a little bit. Well,

499
00:27:33.470 --> 00:27:34.850
how would they hit my
password if they got my

500
00:27:34.850 --> 00:27:39.590
phone? Well, if you ever
save your password for some,

501
00:27:39.590 --> 00:27:42.950
some small period of time,
like in the site, right?

502
00:27:42.950 --> 00:27:44.840
Like, I mean, if you're
not doing that, then yeah.

503
00:27:44.840 --> 00:27:46.460
They don't have your passwords,
they just have your phone.

504
00:27:48.200 --> 00:27:50.420
Yeah. I mean, I suppose
they have access to my

505
00:27:50.450 --> 00:27:54.310
email. I don't necessarily think
they have my password there.

506
00:27:54.310 --> 00:27:57.200
They have a, they have
an open session. Yeah, yeah,

507
00:27:57.230 --> 00:28:00.140
yeah. But I mean, if
they have your email, then

508
00:28:00.200 --> 00:28:02.810
they probably, they can pretty
much get everything else. Right.

509
00:28:03.830 --> 00:28:06.380
Yeah. I guess for a
period of time, I'm not

510
00:28:06.380 --> 00:28:08.420
too worried about that. Cause
like I put a pin

511
00:28:08.420 --> 00:28:10.310
on my phone, but some
people are advocating well, you

512
00:28:10.310 --> 00:28:12.680
know, maybe we should really
have separate key fobs so

513
00:28:12.680 --> 00:28:15.570
that yeah. If you lose
your father, you don't, you

514
00:28:15.570 --> 00:28:19.190
don't necessarily have access to
this session. Right? Yeah. Well,

515
00:28:19.190 --> 00:28:20.930
I think the argument would
be that you can torch

516
00:28:20.930 --> 00:28:22.670
your phone within an hour
of losing it if you

517
00:28:22.670 --> 00:28:28.310
need to, As soon. Yeah.
That's true. That's true. Right.

518
00:28:28.310 --> 00:28:30.680
I mean, windows phone has
that built in, it takes

519
00:28:30.680 --> 00:28:32.510
a minute to set it
up on an iPhone. And

520
00:28:32.510 --> 00:28:34.670
if you have iPhone five,
they walk you through it.

521
00:28:34.700 --> 00:28:37.280
When you start up, you
need an app to do

522
00:28:37.280 --> 00:28:39.410
that on Android, but for
the most part you can

523
00:28:39.410 --> 00:28:43.400
remotely break your phone. Is
that work over a SMS

524
00:28:43.400 --> 00:28:47.210
or does that work over
the internet? I believe it

525
00:28:47.210 --> 00:28:48.800
works over the internet. I
mean, if your phone is

526
00:28:48.800 --> 00:28:52.010
on, it can be torched
remotely. I've left my phone

527
00:28:52.010 --> 00:28:54.890
in a park before and
then logged in from my

528
00:28:54.890 --> 00:28:57.860
laptop, made the phone beep
and then walked around like

529
00:28:57.860 --> 00:29:01.220
sonar looking for the phone.
Well, what I'm wondering is

530
00:29:01.610 --> 00:29:05.930
could you, if I found
your phone, okay, we're probably

531
00:29:05.930 --> 00:29:07.640
getting way off topic here.
If I found your phone

532
00:29:08.990 --> 00:29:11.750
behind the firewall and I
just block, I block all

533
00:29:11.750 --> 00:29:16.760
incoming requests or I block
outgoing requests, whatever service torches,

534
00:29:16.760 --> 00:29:19.550
the phone, then how would
you torch the phone? Right.

535
00:29:19.550 --> 00:29:22.820
Unless it's sent by some
other signal like SMS or

536
00:29:22.820 --> 00:29:25.700
whatever, in which case I
would turn that off as

537
00:29:25.700 --> 00:29:27.770
well. Like I'm wondering if
there's work around for this

538
00:29:27.770 --> 00:29:30.350
or if they have some
ingenious system that I just

539
00:29:30.740 --> 00:29:34.370
hadn't thought of. Well, so
let's pretend that they're not

540
00:29:34.370 --> 00:29:37.460
idiots, right? It's possible. Yeah.
But assuming that for a

541
00:29:37.470 --> 00:29:39.740
second, they're not idiots. Let's
say that, you know, evil

542
00:29:39.740 --> 00:29:43.750
guy picks up the phone
and immediately modes it. Well,

543
00:29:43.780 --> 00:29:45.700
then that point you put
you've turned off the thing.

544
00:29:45.790 --> 00:29:48.430
Right. But if you try
to do it surgically and

545
00:29:48.430 --> 00:29:51.220
like turn off data, access
to this or that, or

546
00:29:51.490 --> 00:29:53.890
turn off location services to
this or that find your

547
00:29:53.890 --> 00:29:56.380
phone might not work. But
I think I'm assuming that

548
00:29:56.380 --> 00:29:58.540
there's a, you know, it's
a little, it's a little

549
00:29:58.540 --> 00:30:03.910
Unix machine, right? It's a
little Mac OS 10 version,

550
00:30:04.150 --> 00:30:06.220
you know, iOS is, is
all based on that. So

551
00:30:06.220 --> 00:30:08.950
there's daemons and stuff running
in the background. One of

552
00:30:08.950 --> 00:30:11.800
them is listening for that.
I think SMS might be

553
00:30:11.800 --> 00:30:14.410
an assumption because people can
turn off SMS. I'm sure

554
00:30:14.410 --> 00:30:17.050
that it's a data packet,
but I've, I discovered my

555
00:30:17.050 --> 00:30:20.980
iPhone is sending private information,
private information, but information all

556
00:30:20.980 --> 00:30:23.710
the time. If you go
to like about general diagnostics,

557
00:30:23.710 --> 00:30:26.620
you can see all the
crash dumps. The thing sends

558
00:30:26.620 --> 00:30:28.690
a crash dump three or
four times a day of

559
00:30:28.690 --> 00:30:34.030
whatever application forked or if
the thought process, If I

560
00:30:34.050 --> 00:30:36.120
was, you know, trying to
live up to my name,

561
00:30:36.150 --> 00:30:38.490
last name here. But if
I, if I found your

562
00:30:38.490 --> 00:30:41.040
phone, I think this is
not something that the average

563
00:30:41.070 --> 00:30:42.660
Joe needs to worry about.
Because if someone just finds

564
00:30:42.660 --> 00:30:45.450
a funneling around they're poly,
don't have the sophistication do

565
00:30:45.450 --> 00:30:49.260
all this. But if I
was targeting your phone, Scott Hanson,

566
00:30:49.260 --> 00:30:51.750
this phone, I found it,
turned it in airplane mode,

567
00:30:52.020 --> 00:30:55.290
took it home, made sure
I didn't connect the 3g

568
00:30:55.290 --> 00:30:57.630
only connected to my router,
made sure my router was

569
00:30:57.630 --> 00:31:01.620
blocking all outgoing requests. I
think it would be an

570
00:31:01.620 --> 00:31:05.880
incoming request. Sorry, incoming and
outgoing, except for the domains

571
00:31:05.880 --> 00:31:07.350
that I care about. You
know what I mean? Like

572
00:31:07.380 --> 00:31:11.250
just tighten that stuff down
then. Would I be able

573
00:31:11.250 --> 00:31:15.450
to, you know, take advantage
of your existing session? That's

574
00:31:15.450 --> 00:31:18.540
a good question. I don't
know. It depends on whether

575
00:31:18.540 --> 00:31:20.520
or not it's, it is
an incoming thing or whether

576
00:31:20.520 --> 00:31:22.710
there's polling involved or whatever,
but it'd be a risky

577
00:31:22.710 --> 00:31:25.200
thing to do because it
only takes like whatever the

578
00:31:25.200 --> 00:31:27.780
ties of that packet is
a hundred, a hundred bytes

579
00:31:27.780 --> 00:31:30.180
or something towards your phone.
So I think that'd be,

580
00:31:30.500 --> 00:31:32.820
be kind of like playing
operation. You know, you're going

581
00:31:32.820 --> 00:31:35.640
to end eventually shock yourself.
Sounds like this could be

582
00:31:35.640 --> 00:31:37.950
another handsome and stuff with
someone who actually knows what

583
00:31:37.950 --> 00:31:41.040
they're talking about. Not me.
We, we would never, ever

584
00:31:41.040 --> 00:31:42.810
have someone who actually knows
what they're talking about on

585
00:31:42.810 --> 00:31:49.530
Hanselman. And, and on that
note to Phil hack yesterday

586
00:31:49.530 --> 00:31:52.170
on Hanselman it's thanks for
hanging out. Yeah, no problem.

587
00:31:53.100 --> 00:31:55.230
This has been another episode
and we'll see you again

588
00:31:55.230 --> 00:31:55.800
next week.

